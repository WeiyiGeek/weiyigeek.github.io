{"title":"2.Go语言之文件操作学习记录.md","slug":"编程世界/Go/Package/2.Go语言之文件操作学习记录","date":"2020-04-23T03:16:58.000Z","updated":"2022-03-11T03:29:04.034Z","url":"2020/4-23-604.html","path":"api/articles/2020/4-23-604.html.json","covers":null,"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h2 id=\"Go-语言文件操作\"><a href=\"#Go-语言文件操作\" class=\"headerlink\" title=\"Go 语言文件操作\"></a>Go 语言文件操作</h2><p>本章将主要介绍使用Go语言进行文件的读写相关操作。</p>\n<p>Q: 什么是文件?</p>\n<blockquote>\n<p>计算机中的文件是存储在外部介质（通常是磁盘）上的数据集合，文件分为文本文件和二进制文件。</p>\n</blockquote>\n<p><br></p>\n<h2 id=\"0x00-基本操作\"><a href=\"#0x00-基本操作\" class=\"headerlink\" title=\"0x00 基本操作\"></a>0x00 基本操作</h2><h3 id=\"1-文件打开与关闭\"><a href=\"#1-文件打开与关闭\" class=\"headerlink\" title=\"1.文件打开与关闭\"></a>1.文件打开与关闭</h3><p>描述: 我们可以采用os包中的Open()函数打开一个文件，返回一个<code>*File</code>和一个<code>err</code>。然后对得到的文件实例调用<code>Close()</code>函数就能够关闭文件。</p>\n<p>示例演示</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">  <span class=\"string\">\"fmt\"</span></span><br><span class=\"line\">  <span class=\"string\">\"os\"</span></span><br><span class=\"line\">  <span class=\"string\">\"unsafe\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">//1.以默认的方式打开demo.txt文件</span></span><br><span class=\"line\">  file, err := os.Open(<span class=\"string\">\"./demo.txt\"</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">    fmt.Println(<span class=\"string\">\"open file failed!, err:\"</span>, err)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  fmt.Printf(<span class=\"string\">\"Type : %T, Pointer address: %p, Size of %d\\n\"</span>, file, file, unsafe.Sizeof(file))</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//2.关闭打开的文件(非常重要)</span></span><br><span class=\"line\">  <span class=\"comment\">//方式1</span></span><br><span class=\"line\">  <span class=\"comment\">// file.Close()</span></span><br><span class=\"line\">  <span class=\"comment\">//方式2</span></span><br><span class=\"line\">  <span class=\"keyword\">defer</span> file.Close()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果: <code>Type : *os.File, Pointer address: 0xc00000e028, Size of 8</code></p>\n<p>Tips：为了防止文件忘记关闭，我们通常使用defer注册文件关闭语句。</p>\n<BR/>\n\n<h3 id=\"2-文件读取操作\"><a href=\"#2-文件读取操作\" class=\"headerlink\" title=\"2.文件读取操作\"></a>2.文件读取操作</h3><p>描述: 我们可以多同种方式实现文件读取。</p>\n<p>方式1.<code>file.Read()</code>方法定义如下, 它接收一个字节切片，返回读取的字节数和可能的具体错误，读到文件末尾时会返回<code>0</code>和<code>io.EOF</code>。 举个例子：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">func (f *File) Read(b []byte) (n int, err error)</span><br></pre></td></tr></table></figure></p>\n<p>方式2.使用<code>bufio</code>包<code>NewReader</code>方法进行行文件读取，它是在file的基础上封装了一层API，支持更多的功能。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(b *Reader)</span> <span class=\"title\">ReadString</span><span class=\"params\">(delim <span class=\"keyword\">byte</span>)</span> <span class=\"params\">(<span class=\"keyword\">string</span>, error)</span></span> &#123;</span><br><span class=\"line\">  full, frag, n, err := b.collectFragments(delim)</span><br><span class=\"line\">  <span class=\"comment\">// Allocate new buffer to hold the full pieces and the fragment.</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> buf strings.Builder</span><br><span class=\"line\">  buf.Grow(n)</span><br><span class=\"line\">  <span class=\"comment\">// Copy full pieces and fragment in.</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> _, fb := <span class=\"keyword\">range</span> full &#123;</span><br><span class=\"line\">    buf.Write(fb)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  buf.Write(frag)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> buf.String(), err</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>方式3.使用<code>io/ioutil</code>包<code>ReadFile</code>方法读取整个文件, 其只需要将文件名作为参数传入。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">ReadFile</span><span class=\"params\">(filename <span class=\"keyword\">string</span>)</span> <span class=\"params\">([]<span class=\"keyword\">byte</span>, error)</span></span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> os.ReadFile(filename)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<p>示例1.基础使用</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">demo2</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 1.文件打开与在函数退出时关闭打开的文件句柄。</span></span><br><span class=\"line\">  file, err := os.Open(<span class=\"string\">\"./demo.txt\"</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">    fmt.Println(<span class=\"string\">\"open file failed!, err:\"</span>, err)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">defer</span> file.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 2.使用Read方法进行读取数据。</span></span><br><span class=\"line\">  tmp := <span class=\"built_in\">make</span>([]<span class=\"keyword\">byte</span>, <span class=\"number\">128</span>)     <span class=\"comment\">// 临时存放读取的数据空间</span></span><br><span class=\"line\">  count, err := file.Read(tmp) <span class=\"comment\">// 每次读128Byte存入tmp中并返回字节数</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> err == io.EOF &#123;</span><br><span class=\"line\">    fmt.Println(<span class=\"string\">\"END-文件已读完\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">    fmt.Println(<span class=\"string\">\"read file failed, err:\"</span>, err)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 3.输出读取的文件内容(默认最多只能读取128Byte)</span></span><br><span class=\"line\">  fmt.Printf(<span class=\"string\">\"读取类型 %T，共读取了 %d 字节数据，读取的内容: %v \\n\"</span>, tmp, count, <span class=\"keyword\">string</span>(tmp[:count])) <span class=\"comment\">// 如不转换则返回字节编码</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">读取类型 []uint8，共读取了 72 字节数据，读取的内容: GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">成年人的世界真的好难！</span><br></pre></td></tr></table></figure>\n<p>示例2.使用for循环读取文件中的所有数据。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">demo3</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 1.文件打开与在函数退出时关闭打开的文件句柄。</span></span><br><span class=\"line\">  file, err := os.Open(<span class=\"string\">\"./demo.txt\"</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">    fmt.Println(<span class=\"string\">\"open file failed!, err:\"</span>, err)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">defer</span> file.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 2.使用Read方法进行读取数据。</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> content []<span class=\"keyword\">byte</span></span><br><span class=\"line\">  tmp := <span class=\"built_in\">make</span>([]<span class=\"keyword\">byte</span>, <span class=\"number\">128</span>) <span class=\"comment\">// 临时存放读取的数据空间</span></span><br><span class=\"line\">  <span class=\"comment\">// 循环读取文件</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">    count, err := file.Read(tmp) <span class=\"comment\">// 每次读128Byte存入tmp中并返回字节数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> err == io.EOF &#123;</span><br><span class=\"line\">      fmt.Println(<span class=\"string\">\"#END-文件已读完---\"</span>)</span><br><span class=\"line\">      <span class=\"keyword\">break</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">      fmt.Println(<span class=\"string\">\"read file failed, err:\"</span>, err)</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    content = <span class=\"built_in\">append</span>(content, tmp[:count]...)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 3.输出读取的文件内容</span></span><br><span class=\"line\">  fmt.Printf(<span class=\"string\">\"读取的内容: %v \\n\"</span>, <span class=\"keyword\">string</span>(content)) <span class=\"comment\">// 如不转换则返回字节编码</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#END-文件已读完---</span><br><span class=\"line\">读取的内容: GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">成年人的世界真的好难！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br></pre></td></tr></table></figure>\n<p>示例3.bufio读取文件</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">demo4</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 1.文件打开与在函数退出时关闭打开的文件句柄。</span></span><br><span class=\"line\">  file, err := os.Open(<span class=\"string\">\"./demo.txt\"</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">    fmt.Println(<span class=\"string\">\"open file failed!, err:\"</span>, err)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">defer</span> file.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 2.使用bufio按行读取示例</span></span><br><span class=\"line\">  reader := bufio.NewReader(file)</span><br><span class=\"line\">  count := <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"comment\">// 循环读取文件</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">    count++</span><br><span class=\"line\">    line, err := reader.ReadString(<span class=\"string\">'\\n'</span>) <span class=\"comment\">// 按行执行</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> err == io.EOF &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(line) != <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">        fmt.Printf(<span class=\"string\">\"最后%d行 - %s\"</span>, count, line)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      fmt.Println(<span class=\"string\">\"# 文件读取完成!\"</span>)</span><br><span class=\"line\">      <span class=\"keyword\">break</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">      fmt.Println(<span class=\"string\">\"read file failed, err:\"</span>, err)</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    fmt.Printf(<span class=\"string\">\"第%d行 - %s\"</span>, count, line)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果:</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第<span class=\"number\">1</span>行 - GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">第<span class=\"number\">2</span>行 - 成年人的世界真的好难！</span><br><span class=\"line\">第<span class=\"number\">3</span>行 - GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">第<span class=\"number\">4</span>行 - GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">第<span class=\"number\">5</span>行 - GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">第<span class=\"number\">6</span>行 - GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">第<span class=\"number\">7</span>行 - GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">第<span class=\"number\">8</span>行 - GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">第<span class=\"number\">9</span>行 - GoLang - 一门非常Nice的语言！</span><br></pre></td></tr></table></figure>\n<p>示例4.ioutil读取整个文件</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">demo5</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">  content, err := ioutil.ReadFile(<span class=\"string\">\"./demo.txt\"</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">    fmt.Println(<span class=\"string\">\"read file failed, err:\"</span>, err)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  fmt.Println(<span class=\"string\">\"整文读取:\"</span>)</span><br><span class=\"line\">  fmt.Println(<span class=\"keyword\">string</span>(content))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">整文读取:</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">成年人的世界真的好难！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br><span class=\"line\">GoLang - 一门非常Nice的语言！</span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<h3 id=\"3-文件写入操作\"><a href=\"#3-文件写入操作\" class=\"headerlink\" title=\"3.文件写入操作\"></a>3.文件写入操作</h3><p>描述: 我们可以使用<code>os.OpenFile()</code>函数能够以指定模式打开文件，从而实现文件写入相关功能。</p>\n<p><strong>语法示例:</strong><br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">OpenFile</span><span class=\"params\">(name <span class=\"keyword\">string</span>, flag <span class=\"keyword\">int</span>, perm FileMode)</span> <span class=\"params\">(*File, error)</span></span> &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><strong>参数解析：</strong></p>\n<ul>\n<li>name：要打开的文件名 </li>\n<li>flag：打开文件的模式,模式有以下几种：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">os.O_WRONLY \t<span class=\"comment\">#只写</span></span><br><span class=\"line\">os.O_CREATE \t<span class=\"comment\">#创建文件</span></span><br><span class=\"line\">os.O_RDONLY \t<span class=\"comment\">#只读</span></span><br><span class=\"line\">os.O_RDWR \t  <span class=\"comment\">#读写</span></span><br><span class=\"line\">os.O_TRUNC \t  <span class=\"comment\">#清空</span></span><br><span class=\"line\">os.O_APPEND \t<span class=\"comment\">#追加</span></span><br></pre></td></tr></table></figure></li>\n<li>perm: 文件权限为八进制数<code>r（读）04，w（写）02，x（执行）01</code>，主要在Linux系统上需要进行设置。</li>\n</ul>\n<p><br></p>\n<p><strong>文件写入方式</strong><br>针对于文件的写入我们可以采用如下几种方法。</p>\n<ul>\n<li>方法0.Fprintf() 向文件中写入数据。</li>\n<li><p>方法1.Write() 写入字节切片数据</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(f *File)</span> <span class=\"title\">Write</span><span class=\"params\">(b []<span class=\"keyword\">byte</span>)</span> <span class=\"params\">(n <span class=\"keyword\">int</span>, err error)</span></span> &#123;&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>方法2.WriteString() 写入字符串数据，可以看到其底层还是调用的Write方法，将字符串强转为字节切片。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(f *File)</span> <span class=\"title\">WriteString</span><span class=\"params\">(s <span class=\"keyword\">string</span>)</span> <span class=\"params\">(n <span class=\"keyword\">int</span>, err error)</span></span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> f.Write([]<span class=\"keyword\">byte</span>(s))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>方法3.bufio.NewWriter() 返回一个文件句柄指针，我可以向该句柄的临时空间进行写入字符串，最后刷新缓存将其中数据写入到文件之中。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// NewWriter returns a new Writer whose buffer has the default size.</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">NewWriter</span><span class=\"params\">(w io.Writer)</span> *<span class=\"title\">Writer</span></span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> NewWriterSize(w, defaultBufSize)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>方法4.ioutil.WriteFile() - 写入字符串数据</p>\n</li>\n</ul>\n<p><br></p>\n<p><strong>示例0.利用Fprintf进行字符串写入</strong></p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">demo0</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 1.标准输入</span></span><br><span class=\"line\">  fmt.Fprint(os.Stdin, <span class=\"string\">\"向标准输入写入内容\"</span>)</span><br><span class=\"line\">  <span class=\"comment\">// 2.标准输出</span></span><br><span class=\"line\">  fmt.Fprint(os.Stdout, <span class=\"string\">\"向标准输出写入内容\"</span>)</span><br><span class=\"line\">  <span class=\"comment\">// 3.写入文件打开</span></span><br><span class=\"line\">  file, err := os.OpenFile(<span class=\"string\">\"./Fprint.txt\"</span>, os.O_CREATE|os.O_TRUNC|os.O_WRONLY, <span class=\"number\">0644</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">    fmt.Println(<span class=\"string\">\"open file erro\"</span>, err)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 4.带换行写入</span></span><br><span class=\"line\">  fmt.Fprintln(file, <span class=\"string\">\"2.我是写入的字符串: 我喜爱网络安全技术\"</span>)</span><br><span class=\"line\">  <span class=\"comment\">// 5.不带换行写入</span></span><br><span class=\"line\">  fmt.Fprintf(file, <span class=\"string\">\"1.我是写入的字符串:%v\"</span>, <span class=\"string\">\"我喜爱网络安全技术\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DAP server listening at: 127.0.0.1:39039</span><br><span class=\"line\">向标准输出写入内容</span><br><span class=\"line\">➜  demo2 ls -alh Fprint.txt &amp;&amp; cat Fprint.txt</span><br><span class=\"line\">-rw-r--r-- 1 weiyigeek weiyigeek 110 9月  17 01:40 Fprint.txt</span><br><span class=\"line\">2.我是写入的字符串: 我喜爱网络安全技术</span><br><span class=\"line\">1.我是写入的字符串:我喜爱网络安全技术%</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>示例1.写入字符切片或者字符串</strong><br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">demo1</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 1.打开需要写的文件，如果文件不存在就创建并晴空内容，对于该文件只写，其权限为0644.</span></span><br><span class=\"line\">  file, err := os.OpenFile(<span class=\"string\">\"write.txt\"</span>, os.O_CREATE|os.O_TRUNC|os.O_WRONLY, <span class=\"number\">0644</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">    fmt.Println(<span class=\"string\">\"Open write file error:\"</span>, err)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">defer</span> file.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 2.方式1以字节切片数据写入。</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> str0 = []<span class=\"keyword\">byte</span>&#123;<span class=\"string\">'a'</span>, <span class=\"string\">'b'</span>, <span class=\"string\">'c'</span>, <span class=\"string\">' '</span>&#125;</span><br><span class=\"line\">  str0 = <span class=\"built_in\">append</span>(str0, <span class=\"string\">'o'</span>, <span class=\"string\">'p'</span>, <span class=\"string\">'f'</span>, <span class=\"string\">'\\n'</span>)</span><br><span class=\"line\">  file.Write(str0)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 3.方式2以字符串数据写入。</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> str1 <span class=\"keyword\">string</span> = <span class=\"string\">\"Hello , Go - 我是要写入的字符串。\"</span></span><br><span class=\"line\">  file.WriteString(str1)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>执行结果:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  demo2 ls -alh write.txt &amp;&amp; cat write.txt</span><br><span class=\"line\">-rw-r--r-- 1 weiyigeek weiyigeek 51 9月  16 09:05 write.txt</span><br><span class=\"line\">abc opf</span><br><span class=\"line\">Hello , Go - 我是要写入的字符串。%</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>示例2.利用bufio.NewWriter()方法写入字符串。</strong><br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">demo2</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 1.打开需要写的文件，如果文件不存在就创建并晴空内容，对于该文件只写，其权限为0644.</span></span><br><span class=\"line\">  file, err := os.OpenFile(<span class=\"string\">\"write.txt\"</span>, os.O_CREATE|os.O_TRUNC|os.O_WRONLY, <span class=\"number\">0644</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">    fmt.Println(<span class=\"string\">\"Open write file error:\"</span>, err)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">defer</span> file.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 2.实例化得到一个文件句柄的缓冲区</span></span><br><span class=\"line\">  writer := bufio.NewWriter(file)</span><br><span class=\"line\">  <span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++ &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 3.将数据先写入缓存</span></span><br><span class=\"line\">    line := fmt.Sprintf(<span class=\"string\">\"第%d行，hello go，bufio.NewWriter 写入!\\n\"</span>, i+<span class=\"number\">1</span>)</span><br><span class=\"line\">    writer.WriteString(line)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 4.将缓存中的内容写入文件</span></span><br><span class=\"line\">  writer.Flush()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>执行结果：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  demo2 ls -alh write.txt &amp;&amp; cat write.txt</span><br><span class=\"line\">-rw-r--r-- 1 weiyigeek weiyigeek 451 9月  16 09:37 write.txt</span><br><span class=\"line\">第1行，hello go，bufio.NewWriter 写入!</span><br><span class=\"line\">第2行，hello go，bufio.NewWriter 写入!</span><br><span class=\"line\">第3行，hello go，bufio.NewWriter 写入!</span><br><span class=\"line\">第4行，hello go，bufio.NewWriter 写入!</span><br><span class=\"line\">第5行，hello go，bufio.NewWriter 写入!</span><br><span class=\"line\">第6行，hello go，bufio.NewWriter 写入!</span><br><span class=\"line\">第7行，hello go，bufio.NewWriter 写入!</span><br><span class=\"line\">第8行，hello go，bufio.NewWriter 写入!</span><br><span class=\"line\">第9行，hello go，bufio.NewWriter 写入!</span><br><span class=\"line\">第10行，hello go，bufio.NewWriter 写入!</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>示例3.从终端中输入信息并写入到文件之中。</strong><br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">demo3</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> msg0, msg1, msg <span class=\"keyword\">string</span></span><br><span class=\"line\">  <span class=\"comment\">// 方式1.终端获取字符串（以空格和换行结束）</span></span><br><span class=\"line\">  fmt.Println(<span class=\"string\">\"# 请输入你要向文件写入的字符串：\"</span>)</span><br><span class=\"line\">  fmt.Scanln(&amp;msg0)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 方式2.采用NewReader获取终端输入（以指定字符为截止符）</span></span><br><span class=\"line\">  fmt.Print(<span class=\"string\">\"# 请输入你要向文件写入的字符串：\"</span>)</span><br><span class=\"line\">  reader := bufio.NewReader(os.Stdin)</span><br><span class=\"line\">  msg1, _ = reader.ReadString(<span class=\"string\">'\\n'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 字符串拼接(推荐方式)</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> build strings.Builder</span><br><span class=\"line\">  build.WriteString(msg0)</span><br><span class=\"line\">  build.WriteString(msg1)</span><br><span class=\"line\">  msg = build.String()</span><br><span class=\"line\"></span><br><span class=\"line\">  err := ioutil.WriteFile(<span class=\"string\">\"./WriteFile.txt\"</span>, []<span class=\"keyword\">byte</span>(msg), <span class=\"number\">0644</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">    fmt.Println(<span class=\"string\">\"open file faild:\"</span>, err)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>执行结果:<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  demo2 <span class=\"keyword\">go</span> run filewrite.<span class=\"keyword\">go</span>  </span><br><span class=\"line\"># 请输入你要向文件写入的字符串：</span><br><span class=\"line\">WeiyiGeek</span><br><span class=\"line\"># 请输入你要向文件写入的字符串：This is a <span class=\"keyword\">string</span></span><br><span class=\"line\">➜  demo2 ls -alh WriteFile.txt &amp;&amp; cat WriteFile.txt </span><br><span class=\"line\">-rw-r--r-- <span class=\"number\">1</span> weiyigeek weiyigeek <span class=\"number\">26</span> <span class=\"number\">9</span>月  <span class=\"number\">17</span> <span class=\"number\">02</span>:<span class=\"number\">14</span> WriteFile.txt</span><br><span class=\"line\">WeiyiGeekThis is a <span class=\"keyword\">string</span></span><br></pre></td></tr></table></figure></p>\n<hr>\n<h2 id=\"0x01-基本实践\"><a href=\"#0x01-基本实践\" class=\"headerlink\" title=\"0x01 基本实践\"></a>0x01 基本实践</h2><h3 id=\"文件内容展示\"><a href=\"#文件内容展示\" class=\"headerlink\" title=\"文件内容展示\"></a>文件内容展示</h3><p><strong>(1) 实现一个类似cat命令</strong><br>使用文件操作相关知识，模拟实现linux平台cat命令的功能。<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">  <span class=\"string\">\"bufio\"</span></span><br><span class=\"line\">  <span class=\"string\">\"flag\"</span></span><br><span class=\"line\">  <span class=\"string\">\"fmt\"</span></span><br><span class=\"line\">  <span class=\"string\">\"io\"</span></span><br><span class=\"line\">  <span class=\"string\">\"os\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// cat命令实现函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">cat</span><span class=\"params\">(r *bufio.Reader)</span></span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 注意是字符，按照每行进行读取</span></span><br><span class=\"line\">    buf, err := r.ReadBytes(<span class=\"string\">'\\n'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> err == io.EOF &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 退出之前将已读到的内容输出</span></span><br><span class=\"line\">      fmt.Fprintf(os.Stdout, <span class=\"string\">\"%s\"</span>, buf)</span><br><span class=\"line\">      <span class=\"keyword\">break</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    fmt.Fprintf(os.Stdout, <span class=\"string\">\"%s\"</span>, buf)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 解析命令行参数</span></span><br><span class=\"line\">  flag.Parse()</span><br><span class=\"line\">  <span class=\"comment\">// 如果没有参数默认从标准输入读取内容</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> flag.NArg() == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">    fmt.Printf(<span class=\"string\">\"未指定文件将从标准输入读取内容:\"</span>)</span><br><span class=\"line\">    stdin := bufio.NewReader(os.Stdin)</span><br><span class=\"line\">    <span class=\"comment\">// 以换行符为结束</span></span><br><span class=\"line\">    buf, _ := stdin.ReadBytes(<span class=\"string\">'\\n'</span>)</span><br><span class=\"line\">    <span class=\"comment\">// 将终端输入字符串向终端输出</span></span><br><span class=\"line\">    fmt.Fprintf(os.Stdout, <span class=\"string\">\"\\n%s\"</span>, buf)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 依次读取每个指定文件(可多个文件)的内容并打印到终端</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; flag.NArg(); i++ &#123;</span><br><span class=\"line\">    f, err := os.Open(flag.Arg(i))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">      fmt.Fprintf(os.Stdout, <span class=\"string\">\"reading from %s failed, err:%v\\n\"</span>, flag.Arg(i), err)</span><br><span class=\"line\">      <span class=\"keyword\">continue</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    cat(bufio.NewReader(f))</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>执行结果:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">➜  demo3 hostname &gt; &#123;1..6&#125;.txt</span><br><span class=\"line\">➜  demo3 go build -o cat    </span><br><span class=\"line\">➜  demo3 ./cat                  </span><br><span class=\"line\">未指定文件将从标准输入读取内容:This is os.stdio My name is WeiyiGeek</span><br><span class=\"line\">This is os.stdio My name is WeiyiGeek</span><br><span class=\"line\">➜  demo3 ./cat 1.txt 2.txt 3.txt </span><br><span class=\"line\">ubuntu-pc</span><br><span class=\"line\">ubuntu-pc</span><br><span class=\"line\">ubuntu-pc</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"文件读取拷贝\"><a href=\"#文件读取拷贝\" class=\"headerlink\" title=\"文件读取拷贝\"></a>文件读取拷贝</h3><p><strong>(1) 实现文件的拷贝</strong><br>描述: 我们可以借助<code>io.Copy()</code>实现一个拷贝文件函数。<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">  <span class=\"string\">\"flag\"</span></span><br><span class=\"line\">  <span class=\"string\">\"fmt\"</span></span><br><span class=\"line\">  <span class=\"string\">\"io\"</span></span><br><span class=\"line\">  <span class=\"string\">\"os\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// CopyFile 拷贝文件函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">CopyFile</span><span class=\"params\">(srcName, dstName <span class=\"keyword\">string</span>)</span> <span class=\"params\">(written <span class=\"keyword\">int64</span>, err error)</span></span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 以读方式打开源文件</span></span><br><span class=\"line\">  src, err := os.Open(srcName)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">    fmt.Printf(<span class=\"string\">\"open %s failed, err:%v.\\n\"</span>, srcName, err)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">defer</span> src.Close()</span><br><span class=\"line\">  <span class=\"comment\">// 以写|创建的方式打开目标文件</span></span><br><span class=\"line\">  dst, err := os.OpenFile(dstName, os.O_WRONLY|os.O_CREATE, <span class=\"number\">0644</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">    fmt.Printf(<span class=\"string\">\"open %s failed, err:%v.\\n\"</span>, dstName, err)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">defer</span> dst.Close()</span><br><span class=\"line\">  <span class=\"keyword\">return</span> io.Copy(dst, src) <span class=\"comment\">//调用io.Copy()拷贝内容</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 解析命令行参数</span></span><br><span class=\"line\">  flag.Parse()</span><br><span class=\"line\">  <span class=\"comment\">// 如果没有传递两个参数则显示使用说明</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> flag.NArg() != <span class=\"number\">2</span> &#123;</span><br><span class=\"line\">    fmt.Println(<span class=\"string\">\"Usage: ./copy src.file dst.file\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// 从命令行中获取要操作的文件</span></span><br><span class=\"line\">  fmt.Printf(<span class=\"string\">\"正在复制从 %s 文件内容,到目标文件 %s 中.....\"</span>, flag.Arg(<span class=\"number\">0</span>), flag.Arg(<span class=\"number\">1</span>))</span><br><span class=\"line\">  _, err := CopyFile(flag.Arg(<span class=\"number\">0</span>), flag.Arg(<span class=\"number\">1</span>))</span><br><span class=\"line\">  <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">    fmt.Println(<span class=\"string\">\"copy file failed, err:\"</span>, err)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  fmt.Println(<span class=\"string\">\"copy done!\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>执行结果:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"Hello Weiyigeek, 你喜欢做什么\"</span> &gt; hello.txt</span><br><span class=\"line\">➜  demo4 go build -o copy              </span><br><span class=\"line\">➜  demo4 ./copy          </span><br><span class=\"line\">Usage: ./copy src.file dst.file</span><br><span class=\"line\">➜  demo4 ./copy hello.txt copyhello.txt</span><br><span class=\"line\">正在复制从 hello.txt 文件内容,到目标文件 copyhello.txt 中.....copy <span class=\"keyword\">done</span>!</span><br><span class=\"line\">➜  demo4 cat copyhello.txt </span><br><span class=\"line\">Hello Weiyigeek, 你喜欢做什么</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"文件定位插入\"><a href=\"#文件定位插入\" class=\"headerlink\" title=\"文件定位插入\"></a>文件定位插入</h3><p><strong>(1) 文件内容定位读取</strong><br>描述：我们可以利用官方提供的os标准库中的<code>type File struct{}</code>结构体中的<code>func (*File) Seek</code>方法来进行，文件内容定位和光标插入等操作。</p>\n<p>语法说明:<br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Seek设置下一次读/写的位置,它返回新的偏移量（相对开头）和可能的错误。</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(f *File)</span> <span class=\"title\">Seek</span><span class=\"params\">(offset <span class=\"keyword\">int64</span>, whence <span class=\"keyword\">int</span>)</span> <span class=\"params\">(ret <span class=\"keyword\">int64</span>, err error)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">offset</span>为相对偏移量，而<span class=\"title\">whence</span>决定相对位置：0为相对文件开头，1为相对当前位置，2为相对文件结尾。</span></span><br></pre></td></tr></table></figure></p>\n<p>例如，文本文件 tmp.txt 其内容为如下，我们想对其weiyi后插入指定字符并对源文件进行覆盖：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tee tmp.txt &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">weiyihobby</span><br><span class=\"line\">computer</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure></p>\n<p><strong>代码演示:</strong><br><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">  <span class=\"string\">\"fmt\"</span></span><br><span class=\"line\">  <span class=\"string\">\"io\"</span></span><br><span class=\"line\">  <span class=\"string\">\"os\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">testInsert</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 源文件</span></span><br><span class=\"line\">  file, err := os.OpenFile(<span class=\"string\">\"./tmp.txt\"</span>, os.O_RDONLY, <span class=\"number\">0644</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">    fmt.Printf(<span class=\"string\">\"Open tmp.txt file failed, err: %v\"</span>, err)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 临时文件</span></span><br><span class=\"line\">  filetmp, err := os.OpenFile(<span class=\"string\">\"./tmp.tmp\"</span>, os.O_CREATE|os.O_TRUNC|os.O_APPEND|os.O_WRONLY, <span class=\"number\">0644</span>)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">    fmt.Printf(<span class=\"string\">\"Open tmp.tmp file failed, err: %v\"</span>, err)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 光标的开始位置</span></span><br><span class=\"line\">  file.Seek(<span class=\"number\">0</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">  <span class=\"comment\">// 读取光标后的五个字符</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> ret [<span class=\"number\">5</span>]<span class=\"keyword\">byte</span></span><br><span class=\"line\">  n, err := file.Read(ret[:]) <span class=\"comment\">// weiyigeek</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">    fmt.Printf(<span class=\"string\">\"file.Read failed, err: %v\"</span>, err)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  fmt.Printf(<span class=\"string\">\"# read %d character: %s\"</span>, n, ret[:n])</span><br><span class=\"line\">  filetmp.Write(ret[:n])</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 写入要插入的字符串。</span></span><br><span class=\"line\">  str := <span class=\"string\">\"Geek\"</span></span><br><span class=\"line\">  filetmp.WriteString(str)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 将剩下的字符串读取并写入到临时文件中</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> tmp [<span class=\"number\">128</span>]<span class=\"keyword\">byte</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> &#123;</span><br><span class=\"line\">    n, err := file.Read(tmp[:]) <span class=\"comment\">//每次读128Byte存入tmp中并返回字节数</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> err == io.EOF &#123;</span><br><span class=\"line\">      filetmp.Write(tmp[:n])</span><br><span class=\"line\">      <span class=\"keyword\">break</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">      fmt.Println(<span class=\"string\">\"read file failed, err:\"</span>, err)</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    filetmp.Write(tmp[:n])</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 将临时文件重命名</span></span><br><span class=\"line\">  os.Rename(<span class=\"string\">\"./tmp.tmp\"</span>, <span class=\"string\">\"./tmp.txt\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 关闭源文件</span></span><br><span class=\"line\">  <span class=\"keyword\">defer</span> file.Close()</span><br><span class=\"line\">  <span class=\"keyword\">defer</span> filetmp.Close()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">  fmt.Println(<span class=\"string\">\"# 指定文件内容插入演示\"</span>)</span><br><span class=\"line\">  testInsert()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>执行结果:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 指定文件内容插入演示</span></span><br><span class=\"line\"><span class=\"comment\"># read 5 character: weiyi</span></span><br><span class=\"line\"><span class=\"variable\">$cat</span> tmp.txt</span><br><span class=\"line\">weiyiGeekhobby</span><br><span class=\"line\">computer</span><br></pre></td></tr></table></figure></p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Development","path":"api/categories/Development.json"},{"name":"Programming","path":"api/categories/Programming.json"}],"tags":[{"name":"Go","path":"api/tags/Go.json"}]}