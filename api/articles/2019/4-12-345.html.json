{"title":"Python3爬虫学习.md","slug":"编程世界/Python/爬虫学习/Python3爬虫学习","date":"2019-04-12T06:36:30.000Z","updated":"2022-03-29T05:39:06.297Z","url":"2019/4-12-345.html","path":"api/articles/2019/4-12-345.html.json","covers":["https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190412235326.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190414103415.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190414105157.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190414113256.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190414113556.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190414112235.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190414151718.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190414102505.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190611101817.png"],"content":"<p>[TOC]</p>\n<h4 id=\"目录结构\"><a href=\"#目录结构\" class=\"headerlink\" title=\"目录结构\"></a>目录结构</h4><p>(1) urllib 简单的爬取指定网站<br>(2) Scrapy 爬虫框架<br>(3) BeautifulSoup 爬虫解析</p>\n <a id=\"more\"></a>\n<h4 id=\"0x00-urllib简单爬取\"><a href=\"#0x00-urllib简单爬取\" class=\"headerlink\" title=\"0x00  urllib简单爬取\"></a>0x00  urllib简单爬取</h4><p><strong>1.初始爬虫</strong><br>案例1：采用Python自带的url+lib形成的urllib包<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python</span></span><br><span class=\"line\"><span class=\"comment\">#功能：爬虫的第一课</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request   <span class=\"comment\">#导入urllib包里面的指定模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.parse  <span class=\"comment\">#解析使用</span></span><br><span class=\"line\"><span class=\"comment\">#案例1：</span></span><br><span class=\"line\">response = urllib.request.urlopen(<span class=\"string\">\"http://www.weiyigeek.github.io\"</span>+urllib.parse.quote(<span class=\"string\">\"网络安全\"</span>))  <span class=\"comment\">#Url中文解析</span></span><br><span class=\"line\">html = response.read()   <span class=\"comment\">#进行返回一个二进制取字符串 </span></span><br><span class=\"line\">html = html.decode(<span class=\"string\">'utf-8'</span>)  <span class=\"comment\">#解码操作</span></span><br><span class=\"line\">print(<span class=\"string\">\"正在写入文件之中.....\"</span>)</span><br><span class=\"line\">f = open(<span class=\"string\">'weiyigeek.txt'</span>,<span class=\"string\">'w+'</span>,encoding=<span class=\"string\">'utf-8'</span>)  <span class=\"comment\">#打开</span></span><br><span class=\"line\">f.writelines(html)</span><br><span class=\"line\">f.close()  <span class=\"comment\">#关闭</span></span><br><span class=\"line\">print(<span class=\"string\">\"网站请求的结果：\\n\"</span>,html)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#案例2：</span></span><br><span class=\"line\">url = <span class=\"string\">\"http://placekitten.com/g/600/600\"</span></span><br><span class=\"line\">response = urllib.request.urlopen(url)  <span class=\"comment\">#可以是url字符串或者Request()对象,返回一个对象</span></span><br><span class=\"line\">img = response.read()</span><br><span class=\"line\">filename = url[<span class=\"number\">-3</span>:]+<span class=\"string\">'.jpg'</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> open(filename,<span class=\"string\">'wb+'</span>) <span class=\"keyword\">as</span> f:   <span class=\"comment\">#注意这里存储二进制</span></span><br><span class=\"line\">    f.write(img)</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>2.Py爬虫实现/优化</strong></p>\n<p>案例1：Spider调用有道翻译接口进行中英文翻译<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python</span></span><br><span class=\"line\"><span class=\"comment\">#功能：爬虫的第2课 JSON / 代理</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.parse</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">'http://fanyi.youdao.com/translate?smartresult=dict&amp;smartresult=rule'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">    i = input(<span class=\"string\">\"请输入翻译的英文(输入Q退出)：\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> i == <span class=\"string\">'Q'</span> <span class=\"keyword\">or</span> i == <span class=\"string\">'q'</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    data = &#123;&#125;</span><br><span class=\"line\">    data[<span class=\"string\">'i'</span>] = i</span><br><span class=\"line\">    data[<span class=\"string\">'from'</span>] = <span class=\"string\">'AUTO'</span></span><br><span class=\"line\">    data[<span class=\"string\">'to'</span>] = <span class=\"string\">'AUTO'</span></span><br><span class=\"line\">    data[<span class=\"string\">'doctype'</span>] = <span class=\"string\">'json'</span></span><br><span class=\"line\">    data[<span class=\"string\">'smartresult'</span>] = <span class=\"string\">'dict'</span></span><br><span class=\"line\">    data[<span class=\"string\">'client'</span>] = <span class=\"string\">'fanyideskweb'</span></span><br><span class=\"line\">    data[<span class=\"string\">'version'</span>] = <span class=\"string\">'2.1'</span></span><br><span class=\"line\">    data[<span class=\"string\">'keyfrom'</span>] = <span class=\"string\">'fanyi.web'</span></span><br><span class=\"line\">    data[<span class=\"string\">'salt'</span>] = <span class=\"string\">'15550362545153'</span></span><br><span class=\"line\">    data[<span class=\"string\">'sign'</span>] = <span class=\"string\">'a28b8eb61693e30842ebbb4e0b36d406'</span></span><br><span class=\"line\">    data[<span class=\"string\">'action'</span>] = <span class=\"string\">'FY_BY_CLICKBUTTION'</span></span><br><span class=\"line\">    data[<span class=\"string\">'typoResult'</span>] = <span class=\"string\">'false'</span></span><br><span class=\"line\">    data = urllib.parse.urlencode(data).encode(<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#修改Header</span></span><br><span class=\"line\">    <span class=\"comment\">#url 对象 request 以及 添加 请求头信息</span></span><br><span class=\"line\">    req = urllib.request.Request(url, data)  <span class=\"comment\">#也能直接传入 header 对象字典</span></span><br><span class=\"line\">    req.add_header(<span class=\"string\">'User-Agent'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko/20100101 Firefox/66.0'</span>)</span><br><span class=\"line\">    req.add_header(<span class=\"string\">'Cookie'</span>,<span class=\"string\">' YOUDAO_MOBILE_ACCESS_TYPE=1; OUTFOX_SEARCH_USER_ID=597755369@10.169.0.84; OUTFOX_SEARCH_USER_ID_NCOO=1911553850.7151666; YOUDAO_FANYI_SELECTOR=ON; DICT_UGC=be3af0da19b5c5e6aa4e17bd8d90b28a|; JSESSIONID=abc8N5HySla85aD-6kpOw; ___rl__test__cookies=1555036254514; UM_distinctid=16a0f2c1b0b146-0612adf0fe3fd6-4c312c7c-1fa400-16a0f2c1b0c659; SESSION_FROM_COOKIE=fanyiweb'</span>)</span><br><span class=\"line\">    req.add_header(<span class=\"string\">'Referer'</span>,<span class=\"string\">'http://fanyi.youdao.com/'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#url 请求返回的对象</span></span><br><span class=\"line\">    res = urllib.request.urlopen(req)</span><br><span class=\"line\">    html = res.read().decode(<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    jtarget = json.loads(html)   <span class=\"comment\">#json解析</span></span><br><span class=\"line\">    print(<span class=\"string\">\"翻译后的结果 :\"</span>,jtarget[<span class=\"string\">'translateResult'</span>][<span class=\"number\">0</span>][<span class=\"number\">0</span>][<span class=\"string\">'tgt'</span>])</span><br><span class=\"line\">    time.sleep(<span class=\"number\">1</span>)  <span class=\"comment\">#延迟1s 防止请求频繁</span></span><br><span class=\"line\">    print(<span class=\"string\">\"请求头信息：\"</span>,req.headers)</span><br><span class=\"line\">    print(<span class=\"string\">\"请求URL:\"</span>,res.geturl())</span><br><span class=\"line\">    print(<span class=\"string\">\"状态码：\"</span>,res.getcode())</span><br><span class=\"line\">    print(<span class=\"string\">\"返回头消息：\\n\"</span>,res.info())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 请输入翻译的英文(输入Q退出)：whoami</span></span><br><span class=\"line\"><span class=\"comment\"># 翻译后的结果 : 显示本用户信息</span></span><br><span class=\"line\"><span class=\"comment\"># 请求头信息： &#123;'User-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko/20100101 Firefox/66.0', 'Cookie': ' YOUDAO_MOBILE_ACCESS_TYPE=1; OUTFOX_SEARCH_USER_ID=597755369@10.169.0.84; OUTFOX_SEARCH_USER_ID_NCOO=1911553850.7151666; YOUDAO_FANYI_SELECTOR=ON; DICT_UGC=be3af0da19b5c5e6aa4e17bd8d90b28a|; JSESSIONID=abc8N5HySla85aD-6kpOw; ___rl__test__cookies=1555036254514; UM_distinctid=16a0f2c1b0b146-0612adf0fe3fd6-4c312c7c-1fa400-16a0f2c1b0c659; SESSION_FROM_COOKIE=fanyiweb', 'Referer': 'http://fanyi.youdao.com/'&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># 请求URL: http://fanyi.youdao.com/translate?smartresult=dict&amp;smartresult=rule</span></span><br><span class=\"line\"><span class=\"comment\"># 状态码： 200</span></span><br><span class=\"line\"><span class=\"comment\"># 返回头消息：</span></span><br><span class=\"line\"><span class=\"comment\">#  Server: Tengine</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Fri, 12 Apr 2019 03:23:02 GMT</span></span><br><span class=\"line\"><span class=\"comment\"># Content-Type: application/json;charset=utf-8</span></span><br><span class=\"line\"><span class=\"comment\"># Transfer-Encoding: chunked</span></span><br><span class=\"line\"><span class=\"comment\"># Connection: close</span></span><br><span class=\"line\"><span class=\"comment\"># Vary: Accept-Encoding</span></span><br><span class=\"line\"><span class=\"comment\"># Vary: Accept-Encoding</span></span><br><span class=\"line\"><span class=\"comment\"># Content-Language: en-US</span></span><br></pre></td></tr></table></figure><br><br></p>\n<p><strong>3.爬虫参数设置</strong><br>案例3：使用代理进行请求网站<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\">#爬虫第三课：代理 一般urllib使用代理ip的步骤如下</span></span><br><span class=\"line\"><span class=\"comment\">#     设置代理地址</span></span><br><span class=\"line\"><span class=\"comment\">#         创建Proxyhandler</span></span><br><span class=\"line\"><span class=\"comment\">#         创建Opener</span></span><br><span class=\"line\"><span class=\"comment\">#         安装Opener</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\">url1 = <span class=\"string\">'http://myip.kkcha.com/'</span></span><br><span class=\"line\">url2 = <span class=\"string\">'http://freeapi.ipip.net/'</span></span><br><span class=\"line\"></span><br><span class=\"line\">proxylist = [<span class=\"string\">'116.209.52.49:9999'</span>,<span class=\"string\">'218.60.8.83:3129'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">ualist = [<span class=\"string\">'Mozilla/5.0 (compatible; MSIE 12.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; QQBrowser/7.0.3698.400)'</span>,\\</span><br><span class=\"line\">        <span class=\"string\">'Mozilla/5.0 (Windows NT 6.7; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36'</span>,\\</span><br><span class=\"line\">        <span class=\"string\">'Mozilla/5.0 (Windows NT 6.7; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0'</span>\\</span><br><span class=\"line\">    ]</span><br><span class=\"line\"></span><br><span class=\"line\">proxyip = random.choice(proxylist)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 代理设置 参数是一个字典 &#123;'类型':'代理IP:端口'&#125;</span></span><br><span class=\"line\">proxy = urllib.request.ProxyHandler(&#123;<span class=\"string\">'http'</span>:proxyip&#125;)</span><br><span class=\"line\"><span class=\"comment\">#创建一个定制一个opener</span></span><br><span class=\"line\">pro_opener = urllib.request.build_opener(proxy)</span><br><span class=\"line\">pro_opener.addheaders = [(<span class=\"string\">'User-Agent'</span>,random.choice(ualist))] <span class=\"comment\">#随机请求头</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#安装opener</span></span><br><span class=\"line\">urllib.request.install_opener(pro_opener) </span><br><span class=\"line\"><span class=\"comment\">##调用opener.open(url)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##利用代理进行请求</span></span><br><span class=\"line\">url2 = url2+proxyip.split(<span class=\"string\">\":\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\"><span class=\"keyword\">with</span> urllib.request.urlopen(url1) <span class=\"keyword\">as</span> u:</span><br><span class=\"line\">    print(u.headers)</span><br><span class=\"line\">    res = u.read().decode(<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">    print(res)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> urllib.request.urlopen(url2) <span class=\"keyword\">as</span> u:</span><br><span class=\"line\">    res = u.read().decode(<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">    print(res)</span><br></pre></td></tr></table></figure></p>\n<p><br><br><strong>3.爬虫urllib 库的异常处理</strong><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\">#功能：urllib 异常处理</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> urllib.request <span class=\"keyword\">import</span> Request,urlopen</span><br><span class=\"line\"><span class=\"keyword\">from</span> urllib.error <span class=\"keyword\">import</span> HTTPError,URLError</span><br><span class=\"line\"></span><br><span class=\"line\">urlerror = <span class=\"string\">'http://www.weiyigeek.com'</span></span><br><span class=\"line\">urlcode = <span class=\"string\">'http://www.weiyigeek.github.io/demo.html'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">url_open</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    req = Request(url)</span><br><span class=\"line\">    req.add_header(<span class=\"string\">'APIKEY'</span>,<span class=\"string\">'This is a password!'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        res = urlopen(req)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> (HTTPError,URLError) <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> hasattr(e,<span class=\"string\">'code'</span>):  <span class=\"comment\">#需要放在reason属性前面</span></span><br><span class=\"line\">            print(<span class=\"string\">'HTTP请求错误代码：'</span>, e.code)</span><br><span class=\"line\">            print(e.read().decode(<span class=\"string\">'utf-8'</span>))  <span class=\"comment\">#[注意]这里是e.read</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> hasattr(e,<span class=\"string\">'reason'</span>):</span><br><span class=\"line\">            print(<span class=\"string\">'服务器链接失败'</span>,e.reason)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"Suceeccful！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    url_open(urlerror)</span><br><span class=\"line\">    url_open(urlcode)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">################## 执行结果 #####################</span></span><br><span class=\"line\"><span class=\"comment\"># 服务器链接失败 [Errno 11001] getaddrinfo failed</span></span><br><span class=\"line\"><span class=\"comment\"># HTTP请求错误代码： 404</span></span><br><span class=\"line\"><span class=\"comment\"># &lt;html&gt;</span></span><br><span class=\"line\"><span class=\"comment\"># &lt;head&gt;&lt;title&gt;404 Not Found&lt;/title&gt;&lt;/head&gt;</span></span><br><span class=\"line\"><span class=\"comment\"># &lt;body&gt;</span></span><br><span class=\"line\"><span class=\"comment\"># &lt;center&gt;&lt;h1&gt;404 Not Found&lt;/h1&gt;&lt;/center&gt;</span></span><br><span class=\"line\"><span class=\"comment\"># &lt;hr&gt;&lt;center&gt;nginx/1.15.9&lt;/center&gt;</span></span><br><span class=\"line\"><span class=\"comment\"># &lt;/body&gt;</span></span><br><span class=\"line\"><span class=\"comment\"># &lt;/html&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><br><br><strong>4.爬虫之正则匹配</strong><br>案例4:正则与爬虫利用<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\">#功能：正则与爬虫</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> urllib.request <span class=\"keyword\">import</span> Request,urlopen,urlretrieve</span><br><span class=\"line\"><span class=\"keyword\">from</span> urllib.error <span class=\"keyword\">import</span> HTTPError,URLError</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">url_open</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    req = Request(url)</span><br><span class=\"line\">    req.add_header(<span class=\"string\">'User-Agent'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko/20100101 Firefox/66.0'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        res = urlopen(req)</span><br><span class=\"line\">        html = res.read()</span><br><span class=\"line\">    <span class=\"keyword\">except</span> HTTPError <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        print(<span class=\"string\">\"服务器请求错误：\"</span>,e.code())</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">except</span> URLError <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        print(<span class=\"string\">\"链接服务器Fail:\"</span>,e.reason())</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> html</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">save_img</span><span class=\"params\">(url,dir)</span>:</span></span><br><span class=\"line\">    i = <span class=\"number\">0</span></span><br><span class=\"line\">    os.mkdir(dir)</span><br><span class=\"line\">    os.chdir(os.curdir+<span class=\"string\">'/'</span>+dir)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> each <span class=\"keyword\">in</span> url:</span><br><span class=\"line\">       <span class=\"comment\">#以后将要废弃不建议使用但是真心方便</span></span><br><span class=\"line\">       urlretrieve(each,str(i)+<span class=\"string\">'.jpg'</span>,<span class=\"literal\">None</span>)</span><br><span class=\"line\">       i += <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"下载完成！\\a\\a\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_img</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    res = url_open(url).decode(<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> res == <span class=\"number\">0</span>:</span><br><span class=\"line\">        exit(<span class=\"string\">\"请求错误退出\"</span>)</span><br><span class=\"line\">    p = <span class=\"string\">r'&lt;img src=\"([^\"]+\\.jpg)\"'</span></span><br><span class=\"line\">    imglist= re.findall(p,res)</span><br><span class=\"line\">    save_img(imglist,<span class=\"string\">'test'</span>)</span><br><span class=\"line\">    print(imglist)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    url = <span class=\"string\">'http://tieba.baidu.com/f?kw=%E9%87%8D%E5%BA%86%E7%AC%AC%E4%BA%8C%E5%B8%88%E8%8C%83%E5%AD%A6%E9%99%A2&amp;ie=utf-8&amp;tab=album'</span></span><br><span class=\"line\">    get_img(url)</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190412235326.png\" alt=\"WeiyiGeek.正则与爬虫利用\" title=\"\" class=\"\">\n                <p>WeiyiGeek.正则与爬虫利用</p>\n            </figure></p>\n<p><br><br><strong>5.爬虫正则进阶</strong><br>案例5:爬虫抓取代理网站的ip:port<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\">#urllib爬虫最后一课</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request</span><br><span class=\"line\"><span class=\"keyword\">from</span> urllib.error <span class=\"keyword\">import</span> HTTPError,URLError</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">url_open</span><span class=\"params\">(url)</span>:</span></span><br><span class=\"line\">    req = urllib.request.Request(url)</span><br><span class=\"line\">    req.add_header(<span class=\"string\">'User-Agent'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko/20100101 Firefox/66.0'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        res = urllib.request.urlopen(req)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> (HTTPError,URLError) <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        print(<span class=\"string\">\"出现错误:\"</span>,e.code,<span class=\"string\">'错误的网页:'</span>,e.read())</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.read().decode(<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main1</span><span class=\"params\">(url,filename)</span>:</span>    </span><br><span class=\"line\">    html = url_open(url)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> html == <span class=\"number\">0</span>:</span><br><span class=\"line\">        exit(<span class=\"string\">\"请求错误,程序退出!\"</span>)</span><br><span class=\"line\">    exp = <span class=\"string\">r'&lt;td&gt;((?:(?:[01]&#123;0,1&#125;\\d&#123;0,1&#125;\\d|2[0-4]\\d|25[0-5])\\.)&#123;0,3&#125;(?:[01]&#123;0,1&#125;\\d&#123;0,1&#125;\\d|2[0-4]\\d|25[0-5]))&lt;/td&gt;\\n(?:\\s*?)&lt;td&gt;(?P&lt;port&gt;\\d&#123;0,4&#125;)&lt;/td&gt;'</span>  <span class=\"comment\">#这里是坑呀</span></span><br><span class=\"line\">    regres = re.findall(exp,html,re.M)</span><br><span class=\"line\">    </span><br><span class=\"line\">    iplist = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> each <span class=\"keyword\">in</span> regres:</span><br><span class=\"line\">        ipport = each[<span class=\"number\">0</span>] + <span class=\"string\">':'</span> + each[<span class=\"number\">1</span>]</span><br><span class=\"line\">        iplist.append(ipport)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">with</span> open(filename,<span class=\"string\">'w+'</span>,encoding=<span class=\"string\">'utf-8'</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(iplist)):</span><br><span class=\"line\">            f.write(iplist[i]+<span class=\"string\">'\\n'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    url = <span class=\"string\">'https://www.xicidaili.com/nn/'</span></span><br><span class=\"line\">    main1(url,<span class=\"string\">'proxyip.txt'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">######### 抓取代理结果 ################</span></span><br><span class=\"line\"><span class=\"comment\"># 119.102.186.99:9999</span></span><br><span class=\"line\"><span class=\"comment\"># 111.177.175.234:9999</span></span><br><span class=\"line\"><span class=\"comment\"># 222.182.121.10:8118</span></span><br><span class=\"line\"><span class=\"comment\"># 110.52.235.219:9999</span></span><br><span class=\"line\"><span class=\"comment\"># 112.85.131.64:9999</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"0x02-Scrapy-爬虫框架\"><a href=\"#0x02-Scrapy-爬虫框架\" class=\"headerlink\" title=\"0x02 Scrapy 爬虫框架\"></a>0x02 Scrapy 爬虫框架</h4><h5 id=\"1-Sccrapy-安装配置\"><a href=\"#1-Sccrapy-安装配置\" class=\"headerlink\" title=\"(1)Sccrapy 安装配置\"></a>(1)Sccrapy 安装配置</h5><p><strong>1.1 Anaconda安装流程</strong><br>这种方法是一种比较简单的安装Scrapy的方法（尤其是对Windows来说），你可以使用该方法安装，也可以选用下文中专用平台的安装方法。<br>Anaconda是包含了常用的数据科学库的Python发行版本，如果没有安装，可以到<a href=\"https://www.continuum.io/downloads下载对应平台的包安装。\" target=\"_blank\" rel=\"noopener\">https://www.continuum.io/downloads下载对应平台的包安装。</a><br>如果已经安装，那么可以轻松地通过conda命令安装Scrapy。<br>安装命令如下：<br>conda install Scrapy</p>\n<p><strong>1.2 Windows安装流程</strong><br> WINDOS下最好的安装方式是通过wheel文件来安装；我这里是WIN10的环境所有还是采用pip3安装<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#当前环境：win10+py3.7</span></span><br><span class=\"line\">pip3 install wheel</span><br><span class=\"line\">pip3 install lxml <span class=\"comment\">#注意找到对应的版本 - 安装lxml</span></span><br><span class=\"line\">pip3 install zope.interface <span class=\"comment\">#安装zope.interface</span></span><br><span class=\"line\">pip3 install Twisted</span><br><span class=\"line\">pip3 install pywin32</span><br><span class=\"line\">pip3 install Scrapy  <span class=\"comment\">#最后安装Scrapy即可</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#安装pyOpenSSL</span></span><br><span class=\"line\"><span class=\"comment\">#官方网站下载wheel文件，https://pypi.python.org/pypi/pyOpenSSL#downloads</span></span><br><span class=\"line\">pip3 install pyOpenSSL-16.2.0-py2.py3-none-any.whl</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Py3.7一键升级所有库</span></span><br><span class=\"line\">from subprocess import call</span><br><span class=\"line\">from pip._internal.utils.misc import get_installed_distributions</span><br><span class=\"line\"><span class=\"keyword\">for</span> dist <span class=\"keyword\">in</span> get_installed_distributions():</span><br><span class=\"line\">    call(<span class=\"string\">\"pip install --upgrade \"</span> + dist.project_name, shell=True)</span><br></pre></td></tr></table></figure></p>\n<p><strong>1.3 CentOS、RedHat、Fedora</strong><br>确保一些必须的类库已经安装，运行如下命令：<br>sudo yum groupinstall development tools<br>sudo yum install python34-devel epel-release libxslt-devel libxml2-devel openssl-devel<br>pip3 install Scrapy</p>\n<p><strong>1.4Ubuntu、Debian、Deepin</strong><br>依赖库安装首先确保一些必须的类库已经安装，运行如下命令：<br>sudo apt-get install build-essential python3-dev libssl-dev libffi-dev libxml2 libxml2-dev libxslt1-dev zlib1g-dev<br>pip3 install Scrapy</p>\n<p><strong>1.5Mac OS</strong><br>依赖库安装在Mac上构建Scrapy的依赖库需要C编译器以及开发头文件，它一般由Xcode提供，运行如下命令安装即可：<br>xcode-select –install<br>pip3 install Scrapy</p>\n<p>验证安装之后，在命令行下输入，如果出现类似下方的结果，就证明Scrapy安装成功。<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190414103415.png\" alt=\"WeiyiGeek.scrapy\" title=\"\" class=\"\">\n                <p>WeiyiGeek.scrapy</p>\n            </figure></p>\n<h5 id=\"2-Scrapy-介绍与使用\"><a href=\"#2-Scrapy-介绍与使用\" class=\"headerlink\" title=\"(2) Scrapy 介绍与使用\"></a>(2) Scrapy 介绍与使用</h5><p>Scrapy是基于Python的爬虫框架,它为了爬取网站数据，提取结构性数据而编写的应用框架，可以应用在数据挖掘,信息处理或存储历史数据等需求之中;</p>\n<p>使用Scrapy抓取一个网站分四个步骤：</p>\n<ul>\n<li>创建一个Scrapy项目</li>\n<li>定义Item容器：保存爬取得数据的一个容器,与字典类似,但却多额外的保护机制避免拼写错误导致未定义字段错误;</li>\n<li>编写爬虫</li>\n<li>存储内存</li>\n</ul>\n<p>框架示例图：<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190414105157.png\" alt=\"WeiyiGeek.Scrapy\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Scrapy</p>\n            </figure></p>\n<p><strong>2.1 scrapy 常用命令</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scrapy startproject douban    <span class=\"comment\">#并初始化一个项目douban</span></span><br><span class=\"line\">scrapy genspider douban_spider movie.douban.com <span class=\"comment\">#建立通用爬虫文件后面是爬取的地址</span></span><br><span class=\"line\">scrapy crawl douban_spider  <span class=\"comment\">#开启scrapy项目进行爬取,douban_spider 项目入口名称</span></span><br><span class=\"line\">  </span><br><span class=\"line\">scrapy shell &lt;url&gt; <span class=\"comment\">#交互测试爬虫项目中执行 测试提取数据的代码</span></span><br><span class=\"line\">scrapy shell <span class=\"string\">\"http://scrapy.org\"</span> --nolog <span class=\"comment\">#打印日志 注意是双引号</span></span><br><span class=\"line\"></span><br><span class=\"line\">scrapy crawl douban_spider -o movielist.json  <span class=\"comment\">#将爬取数据存储到特定格式</span></span><br><span class=\"line\">scrapy crawl douban_spider -o movielist.cvs</span><br></pre></td></tr></table></figure></p>\n<p><strong>2.2 scrapy 项目解析</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">weiyigeek</span><br><span class=\"line\">    │  items.py       <span class=\"comment\"># 数据模型文件,容器创建对象(序号,名称,描述,评价)</span></span><br><span class=\"line\">    │  middlewares.py <span class=\"comment\"># 中间件设置 (爬虫ip地址伪装)</span></span><br><span class=\"line\">    │  pipelines.py   <span class=\"comment\"># 将数据通过管道写入数据/磁盘中</span></span><br><span class=\"line\">    │  settings.py    <span class=\"comment\"># 项目设置(USER-AGENT,抓取时间)</span></span><br><span class=\"line\">    │  __init__.py</span><br><span class=\"line\">    ├─spiders</span><br><span class=\"line\">    │  │ douban_spider.py <span class=\"comment\">#爬虫项目入口</span></span><br><span class=\"line\">    │  │  __init__.py</span><br><span class=\"line\">scrapy.cfg  <span class=\"comment\">#配置文件信息</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>2.3 scrapy 选择器介绍</strong><br>在Scrapy中是使用一种基于XPath和CSS的表达式机制的选择器(selectors),它有四个基本方法：</p>\n<ol>\n<li>xpath() : 传入xpath表达式,返回该表达式所对应的所有节点的selector list列表;<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#xml的解析方法xpath语法:</span></span><br><span class=\"line\">response.xpath(<span class=\"string\">\"//div[@class='article']//ol[@class='grid_view']/li\"</span>)</span><br><span class=\"line\"><span class=\"comment\">#选取class为article的div下,class为grid_view的ol下的所有li标签</span></span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190414113256.png\" alt=\"WeiyiGeek.xpath语法属性\" title=\"\" class=\"\">\n                <p>WeiyiGeek.xpath语法属性</p>\n            </figure>\n</li>\n</ol>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190414113556.png\" alt=\"WeiyiGeek.示例\" title=\"\" class=\"\">\n                <p>WeiyiGeek.示例</p>\n            </figure>\n<ol start=\"2\">\n<li>css():传入CSS表达式，返回该表达式所对应的所有节点的selector list 列表<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">response.css(<span class=\"string\">'.类名 标签::方法'</span>).extract()  <span class=\"comment\">#截取字符串</span></span><br></pre></td></tr></table></figure></li>\n<li><p>extract():序列化该节点为unicode字符串并返回list</p>\n</li>\n<li><p>re():根据传入的正则表达式对数据进行提取,返回unicode字符串list列表</p>\n</li>\n</ol>\n<p><strong>2.4 scrapy 交互调试</strong><br>描述：　Scrapy终端是一个交互终端，供您在未启动spider的情况下尝试及调试您的爬取代码;</p>\n<ul>\n<li>shelp() - 打印可用对象及快捷命令的帮助列表</li>\n<li>fetch(request_or_url) - 根据给定的请求(Request)对象或URL获取一个新的response，并更新相关的对象</li>\n<li>view(response) - 在本机的浏览器打开给定的response，把下载的html保存。<br>其会在response的body中添加一个 tag ，使得外部链接(例如图片及css)能正确显示。 注意该操作会在本地创建一个临时文件，且该文件不会被自动删除。</li>\n<li>crawler - 当前 Crawler 对象.</li>\n<li>spider - 处理URL的spider。 对当前URL没有处理的Spider时则为一个 Spider 对象。</li>\n<li>request - 最近获取到的页面的 Request 对象，您可以使用 replace() 修改该request。或者使用 fetch 快捷方式来获取新的request。</li>\n<li>response - 包含最近获取到的页面的 Response 对象。</li>\n<li>sel - 根据最近获取到的response构建的 Selector 对象。</li>\n<li>settings - 当前的 Scrapy settings</li>\n</ul>\n<p>案例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; scrapy shell <span class=\"string\">\"http://movie.douban.com/chart\"</span></span><br><span class=\"line\">&gt;&gt;&gt; <span class=\"built_in\">help</span>(命令)</span><br><span class=\"line\">&gt;&gt;&gt; request</span><br><span class=\"line\">&lt;GET http://www.weiyigeek.github.io&gt;</span><br><span class=\"line\">&gt; response.url</span><br><span class=\"line\"><span class=\"string\">'https://movie.douban.com/chart'</span></span><br><span class=\"line\">&gt;&gt;&gt; response</span><br><span class=\"line\">&lt;200 https://movie.douban.com/chart&gt;</span><br><span class=\"line\">&gt;&gt;&gt; response.headers  <span class=\"comment\">#请求头</span></span><br><span class=\"line\">&gt;&gt;&gt; response.body     <span class=\"comment\">#网页源代码</span></span><br><span class=\"line\">&gt;&gt;&gt; response.text</span><br><span class=\"line\">&gt;&gt;&gt; response.xpath(<span class=\"string\">'//title'</span>)     <span class=\"comment\">#返回一个xpath选择器</span></span><br><span class=\"line\">&gt;&gt;&gt; response.xpath(<span class=\"string\">'//title'</span>).extract()  <span class=\"comment\">#xpath表达式抽取内容</span></span><br><span class=\"line\">[<span class=\"string\">'&lt;title&gt;\\n豆瓣电影排行榜\\n&lt;/title&gt;'</span>]</span><br><span class=\"line\">response.xpath(<span class=\"string\">'//title/text()'</span>).extract()   <span class=\"comment\">#抽取文本信息</span></span><br><span class=\"line\">[<span class=\"string\">'\\n豆瓣电影排行榜\\n'</span>]</span><br><span class=\"line\">&gt;&gt;&gt; response.xpath(<span class=\"string\">\"//div[@class='pl2']//a\"</span>).extract_first().strip()  <span class=\"comment\"># extract_first 提取第一次匹配的数据</span></span><br><span class=\"line\"><span class=\"string\">'&lt;a href=\"https://movie.douban.com/subject/25986662/\" class=\"\"&gt;\\n疯狂的外星人\\n / &lt;span style=\"font-size:13px;\"&gt;Crazy Alien&lt;/span&gt;\\n    &lt;/a&gt;'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#CSS进行提取</span></span><br><span class=\"line\">&gt;&gt;&gt; sel.css(<span class=\"string\">'.pl2 a::text'</span>).extract_first().strip()</span><br><span class=\"line\"><span class=\"string\">'疯狂的外星人\\n                        /'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#有网站提取需要上request的header信息如何解决：</span></span><br><span class=\"line\">from scrapy import Request <span class=\"comment\">#导入模块</span></span><br><span class=\"line\">&gt;&gt;&gt; data = Request(<span class=\"string\">\"https://www.taobao.com\"</span>,headers=&#123;<span class=\"string\">\"User-Agent\"</span>:<span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36\"</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt;&gt; fetch(data)  <span class=\"comment\">#取得请求网站</span></span><br><span class=\"line\">2017-11-30 22:24:14 [scrapy.core.engine] DEBUG: Crawled (200) &lt;GET https://www.taobao.com&gt; (referer: None)</span><br><span class=\"line\">&gt;&gt;&gt; sel.xpath(<span class=\"string\">'/html/body/div[4]/div[1]/div[1]/div[1]/div/ul/li[1]/a[1]'</span>)</span><br><span class=\"line\">[&lt;Selector xpath=<span class=\"string\">'/html/body/div[4]/div[1]/div[1]/div[1]/div/ul/li[1]/a[1]'</span> data=<span class=\"string\">'&lt;a href=\"https://www.taobao.com/markets/'</span>&gt;]</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt;&gt; data.headers  <span class=\"comment\">#查看设置的header</span></span><br><span class=\"line\">&#123;b<span class=\"string\">'User-Agent'</span>: [b<span class=\"string\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36'</span>], b<span class=\"string\">'Accept-Encoding'</span>: [b<span class=\"string\">'gzip,deflate'</span>]&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#匹配多个字符串进行迭代循环</span></span><br><span class=\"line\">&gt;&gt;&gt; fetch(<span class=\"string\">'http://weiyigeek.github.io'</span>)</span><br><span class=\"line\">&gt;&gt;&gt; title = response.css(<span class=\"string\">'.article-header a::text'</span>).extract()</span><br><span class=\"line\">&gt;&gt;&gt; <span class=\"keyword\">for</span> each <span class=\"keyword\">in</span> title:</span><br><span class=\"line\">...     <span class=\"built_in\">print</span>(each)</span><br><span class=\"line\">...</span><br><span class=\"line\">安全设备策略绕过技术总结.md</span><br><span class=\"line\">Win平台安全配置.md</span><br><span class=\"line\">Python3 正则表达式特殊符号及用法.md</span><br><span class=\"line\">Python3爬虫学习.md</span><br><span class=\"line\">磁盘高可用解决方案(DBA).md</span><br><span class=\"line\">Nodejs入门学习1.md</span><br><span class=\"line\">Node.js简介与安装.md</span><br><span class=\"line\">域控安全基础.md</span><br><span class=\"line\">Win内网渗透信息搜寻.md</span><br><span class=\"line\">高可用服务解决方案(DBA).md</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190414112235.png\" alt=\"WeiyiGeek.scrapyshell\" title=\"\" class=\"\">\n                <p>WeiyiGeek.scrapyshell</p>\n            </figure></p>\n<p><br><br><strong>2.4 scrapy 简单实例</strong><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scrapy startproject weiyigeek</span><br><span class=\"line\">scrapy genspider blog_spider www.weiyigeek.github.io</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">items.py 抓取的对象编辑数据模型文件</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> scrapy</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WeiyigeekItem</span><span class=\"params\">(scrapy.Item)</span>:</span></span><br><span class=\"line\">    <span class=\"comment\">#items.py 设置需要抓取的对象编辑数据模型文件  ,创建对象(序号,名称,描述,评价)</span></span><br><span class=\"line\">    title = scrapy.Field()  <span class=\"comment\">#标题</span></span><br><span class=\"line\">    href = scrapy.Field()   <span class=\"comment\">#标题地址</span></span><br><span class=\"line\">    time = scrapy.Field()   <span class=\"comment\">#创建时间</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">blog_spider.py 爬虫处理主文件</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> scrapy</span><br><span class=\"line\"><span class=\"keyword\">from</span> weiyigeek.items <span class=\"keyword\">import</span> WeiyigeekItem   <span class=\"comment\">#导入数据容器中的类中的属性(其实就导入该项目中items.py)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BlogSpiderSpider</span><span class=\"params\">(scrapy.Spider)</span>:</span></span><br><span class=\"line\">    name = <span class=\"string\">'blog_spider'</span>  <span class=\"comment\">#爬虫名称</span></span><br><span class=\"line\">    allowed_domains = [<span class=\"string\">'www.weiyigeek.github.io'</span>]    <span class=\"comment\">#爬虫允许抓取的域名</span></span><br><span class=\"line\">    start_urls = [<span class=\"string\">'http://www.weiyigeek.github.io/'</span>,<span class=\"string\">'http://weiyigeek.github.io/page/2/'</span>] <span class=\"comment\">#爬虫抓取数据地址,给调度器</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#解析请求返回的网页对象</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">parse</span><span class=\"params\">(self, response)</span>:</span></span><br><span class=\"line\">        sel = scrapy.selector.Selector(response)   <span class=\"comment\">#scrapy选择器</span></span><br><span class=\"line\">        sites = sel.css(<span class=\"string\">'.article-header'</span>)    <span class=\"comment\">#利用css选择器进行赛选</span></span><br><span class=\"line\">        items = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> each <span class=\"keyword\">in</span> sites:</span><br><span class=\"line\">            item = WeiyigeekItem()  <span class=\"comment\">#数据容器类</span></span><br><span class=\"line\">            item[<span class=\"string\">'title'</span>] = each.xpath(<span class=\"string\">'a/text()'</span>).extract()</span><br><span class=\"line\">            item[<span class=\"string\">'href'</span>] = each.xpath(<span class=\"string\">'a/@href'</span>).extract()</span><br><span class=\"line\">            item[<span class=\"string\">'time'</span>] = each.xpath(<span class=\"string\">'div[@class=\"article-meta\"]/time/text()'</span>).extract()  <span class=\"comment\">#注意这里使用的</span></span><br><span class=\"line\">            items.append(item) </span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">#输出到屏幕之中</span></span><br><span class=\"line\">            print(<span class=\"string\">\"&gt;&gt;&gt;\"</span>,item[<span class=\"string\">'title'</span>],item[<span class=\"string\">'href'</span>],item[<span class=\"string\">'time'</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> items</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190414151718.png\" alt=\"WeiyiGeek.执行结果\" title=\"\" class=\"\">\n                <p>WeiyiGeek.执行结果</p>\n            </figure></p>\n<p><br> </p>\n<h5 id=\"3-Scrapy-实例项目\"><a href=\"#3-Scrapy-实例项目\" class=\"headerlink\" title=\"(3) Scrapy 实例项目\"></a>(3) Scrapy 实例项目</h5><p>描述：爬取爱奇艺的TOPS250项目;<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Step1.创建spider项目和初始化爬虫名称</span></span><br><span class=\"line\">scrapy startproject douban</span><br><span class=\"line\">scrapy genspider douban_spider movie.douban.com</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Step2.修改items模板文件</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DoubanItem</span><span class=\"params\">(scrapy.Item)</span>:</span></span><br><span class=\"line\">    serial_number = scrapy.Field() <span class=\"comment\">#序号</span></span><br><span class=\"line\">    movie_name = scrapy.Field()  <span class=\"comment\">#电影名称</span></span><br><span class=\"line\">    introduce = scrapy.Field()  <span class=\"comment\"># 介绍</span></span><br><span class=\"line\">    star = scrapy.Field()  <span class=\"comment\"># 星级</span></span><br><span class=\"line\">    evaluate = scrapy.Field()  <span class=\"comment\"># 评价</span></span><br><span class=\"line\">    describle = scrapy.Field()  <span class=\"comment\"># 描述</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Step3.修改爬虫文件</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> scrapy</span><br><span class=\"line\"><span class=\"keyword\">from</span> douban.items <span class=\"keyword\">import</span> DoubanItem  <span class=\"comment\">#导入容器 douban\\items.py</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DoubanSpiderSpider</span><span class=\"params\">(scrapy.Spider)</span>:</span></span><br><span class=\"line\">    name = <span class=\"string\">'douban_spider'</span>  <span class=\"comment\"># 爬虫的名称</span></span><br><span class=\"line\">    allowed_domains = [<span class=\"string\">'movie.douban.com'</span>]     <span class=\"comment\"># 爬虫允许抓取的域名</span></span><br><span class=\"line\">    start_urls = [<span class=\"string\">'https://movie.douban.com/top250'</span>]     <span class=\"comment\"># 爬虫抓取数据地址,给调度器</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">parse</span><span class=\"params\">(self, response)</span>:</span></span><br><span class=\"line\">        movie_list = response.xpath(<span class=\"string\">\"//div[@class='article']//ol[@class='grid_view']/li\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i_item <span class=\"keyword\">in</span> movie_list:</span><br><span class=\"line\">            douban_item = DoubanItem()  <span class=\"comment\">#模型初始化  </span></span><br><span class=\"line\">            <span class=\"comment\">#以text()结束表示获取其信息, extract_first() 筛选结果的第一个值</span></span><br><span class=\"line\">            douban_item[<span class=\"string\">'serial_number'</span>] = i_item.xpath(<span class=\"string\">\".//div[@class='item']//em/text()\"</span>).extract_first()  <span class=\"comment\">#排名</span></span><br><span class=\"line\">            douban_item[<span class=\"string\">'movie_name'</span>] = i_item.xpath(<span class=\"string\">\".//div[@class='info']/div[@class='hd']/a/span[1]/text()\"</span>).extract_first() <span class=\"comment\">#名称</span></span><br><span class=\"line\">            descs = i_item.xpath(<span class=\"string\">\".//div[@class='info']//div[@class='bd']/p[1]/text()\"</span>).extract_first() <span class=\"comment\">#</span></span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">#处理空格问题</span></span><br><span class=\"line\">            desc_str = <span class=\"string\">''</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> i_desc <span class=\"keyword\">in</span> descs:</span><br><span class=\"line\">                i_desc_str = <span class=\"string\">\"\"</span>.join(i_desc.split())</span><br><span class=\"line\">                desc_str += i_desc_str</span><br><span class=\"line\"></span><br><span class=\"line\">            douban_item[<span class=\"string\">'introduce'</span>] = desc_str  <span class=\"comment\">#介绍</span></span><br><span class=\"line\"></span><br><span class=\"line\">            douban_item[<span class=\"string\">'star'</span>] = i_item.xpath(<span class=\"string\">\".//span[@class='rating_num']/text()\"</span>).extract_first()  <span class=\"comment\">#星星</span></span><br><span class=\"line\">            douban_item[<span class=\"string\">'evaluate'</span>] = i_item.xpath(<span class=\"string\">\".//div[@class='star']//span[4]/text()\"</span>).extract_first()  <span class=\"comment\">#评价数量</span></span><br><span class=\"line\">            douban_item[<span class=\"string\">'describle'</span>] = i_item.xpath(<span class=\"string\">\".//p[@class='quote']/span/text()\"</span>).extract_first()  <span class=\"comment\">#描述</span></span><br><span class=\"line\">            <span class=\"keyword\">yield</span> douban_item  <span class=\"comment\">#是将返回结果压入 item Pipline 进行处理（重点）</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#处理下一页功能</span></span><br><span class=\"line\">        next_link = response.xpath(<span class=\"string\">\"//div[@class='article']//span[@class='next']/link/@href\"</span>).extract()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> next_link:</span><br><span class=\"line\">            next_link = next_link[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"keyword\">yield</span> scrapy.Request(<span class=\"string\">\"https://movie.douban.com/top250\"</span>+next_link,callback=self.parse) <span class=\"comment\">#（重点）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解释:</span></span><br><span class=\"line\"><span class=\"comment\"># 1 每次for循环结束后,需要获取next页面链接:next_link</span></span><br><span class=\"line\"><span class=\"comment\"># 2 如果到最后一页时没有下一页,需要判断一下</span></span><br><span class=\"line\"><span class=\"comment\"># 3 下一页地址拼接: 点击第二页时页面地址是https://movie.douban.com/top250?start=25&amp;filter=</span></span><br><span class=\"line\"><span class=\"comment\"># 4 callback=self.parse : 请求回调</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Step4.修改配置文件</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">$ grep -E -v <span class=\"string\">\"^#\"</span> settings.py</span><br><span class=\"line\"></span><br><span class=\"line\">BOT_NAME = <span class=\"string\">'douban'</span> <span class=\"comment\">#项目名称</span></span><br><span class=\"line\">SPIDER_MODULES = [<span class=\"string\">'douban.spiders'</span>]</span><br><span class=\"line\">NEWSPIDER_MODULE = <span class=\"string\">'douban.spiders'</span></span><br><span class=\"line\">USER_AGENT = <span class=\"string\">' Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:66.0) Gecko/20100101 Firefox/66.0'</span></span><br><span class=\"line\">ROBOTSTXT_OBEY = <span class=\"literal\">False</span></span><br><span class=\"line\">DOWNLOAD_DELAY = <span class=\"number\">0.5</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#通道设置</span></span><br><span class=\"line\">ITEM_PIPELINES = &#123;</span><br><span class=\"line\">   <span class=\"string\">'douban.pipelines.DoubanPipeline'</span>: <span class=\"number\">300</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#下载中间件设置调用</span></span><br><span class=\"line\">DOWNLOADER_MIDDLEWARES = &#123;</span><br><span class=\"line\">   <span class=\"string\">'douban.middlewares.my_proxy'</span>: <span class=\"number\">543</span>,</span><br><span class=\"line\">   <span class=\"string\">'douban.middlewares.my_useragent'</span>: <span class=\"number\">544</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#设置mongo_db数据库信息</span></span><br><span class=\"line\">mongo_host = <span class=\"string\">'172.16.0.0'</span></span><br><span class=\"line\">mongo_port = <span class=\"number\">27017</span></span><br><span class=\"line\">mongo_db_name = <span class=\"string\">'douban'</span></span><br><span class=\"line\">mongo_db_collection = <span class=\"string\">'douban_movie'</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Step5. 修改pipelines.py</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> pymongo</span><br><span class=\"line\"><span class=\"keyword\">from</span> douban.settings <span class=\"keyword\">import</span> mongo_host ,mongo_port,mongo_db_name,mongo_db_collection</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DoubanPipeline</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        host = mongo_host</span><br><span class=\"line\">        port = mongo_port</span><br><span class=\"line\">        dbname = mongo_db_name</span><br><span class=\"line\">        sheetname = mongo_db_collection</span><br><span class=\"line\">        client = pymongo.MongoClient(host=host,port=port)</span><br><span class=\"line\">        mydb = client[dbname]</span><br><span class=\"line\">        self.post = mydb[sheetname]</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">process_item</span><span class=\"params\">(self, item, spider)</span>:</span></span><br><span class=\"line\">        data = dict(item)</span><br><span class=\"line\">        self.post.insert(data)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> item</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Step6. 中间价文件:middlewares.py</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"comment\"># ip代理中间价编写(爬虫ip地址伪装) / 头信息User-Agent伪装随机</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#文件结尾添加方法:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">my_proxy</span><span class=\"params\">(object)</span>:</span>  <span class=\"comment\"># 代理</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">process_request</span><span class=\"params\">(self,request,spider)</span>:</span></span><br><span class=\"line\">        request.meta[<span class=\"string\">'proxy'</span>] = <span class=\"string\">'http-cla.abuyun.com:9030'</span></span><br><span class=\"line\">        proxy_name_pass = <span class=\"string\">b'H622272STYB666BW:F78990HJSS7'</span></span><br><span class=\"line\">        enconde_pass_name = base64.b64encode(proxy_name_pass)</span><br><span class=\"line\">        request.headers[<span class=\"string\">'Proxy-Authorization'</span>] = <span class=\"string\">'Basic '</span> + enconde_pass_name.decode()</span><br><span class=\"line\"><span class=\"comment\"># 解释:根据阿布云注册购买http隧道列表信息</span></span><br><span class=\"line\"><span class=\"comment\"># request.meta['proxy'] : '服务器地址:端口号'</span></span><br><span class=\"line\"><span class=\"comment\"># proxy_name_pass: b'证书号:密钥' ,b开头是字符串base64处理</span></span><br><span class=\"line\"><span class=\"comment\"># base64.b64encode() : 变量做base64处理</span></span><br><span class=\"line\"><span class=\"comment\"># 'Basic ' : basic后一定要有空格</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">my_useragent</span><span class=\"params\">(object)</span>:</span> <span class=\"comment\"># userAgent</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">process_request</span><span class=\"params\">(self, request, spider)</span>:</span></span><br><span class=\"line\">        UserAgentList = [</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; AcooBrowser; .NET CLR 1.1.4322; .NET CLR 2.0.50727)\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; Acoo Browser; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.0.04506)\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/4.0 (compatible; MSIE 7.0; AOL 9.5; AOLBuild 4337.35; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; en-US)\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 2.0.50727; Media Center PC 6.0)\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 1.0.3705; .NET CLR 1.1.4322)\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 5.2; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.2; .NET CLR 3.0.04506.30)\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN) AppleWebKit/523.15 (KHTML, like Gecko, Safari/419.3) Arora/0.3 (Change: 287 c9dfb30)\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (X11; U; Linux; en-US) AppleWebKit/527+ (KHTML, like Gecko, Safari/419.3) Arora/0.6\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.2pre) Gecko/20070215 K-Ninja/2.1.1\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.9) Gecko/20080705 Firefox/3.0 Kapiko/3.0\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (X11; Linux i686; U;) Gecko/20070322 Kazehakase/0.4.5\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.8) Gecko Fedora/1.9.0.8-1.fc10 Kazehakase/0.5.6\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.56 Safari/535.11\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.20 (KHTML, like Gecko) Chrome/19.0.1036.7 Safari/535.20\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Opera/9.80 (Macintosh; Intel Mac OS X 10.6.8; U; fr) Presto/2.9.168 Version/11.52\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.11 TaoBrowser/2.0 Safari/536.11\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.71 Safari/537.1 LBBROWSER\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; LBBROWSER)\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E; LBBROWSER)\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.84 Safari/535.11 LBBROWSER\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; QQBrowser/7.0.3698.400)\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E)\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; SV1; QQDownload 732; .NET4.0C; .NET4.0E; 360SE)\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E)\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (iPad; U; CPU OS 4_2_1 like Mac OS X; zh-cn) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8C148 Safari/6533.18.5\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:2.0b13pre) Gecko/20110307 Firefox/4.0b13pre\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:16.0) Gecko/20100101 Firefox/16.0\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (X11; U; Linux x86_64; zh-CN; rv:1.9.2.10) Gecko/20100922 Ubuntu/10.10 (maverick) Firefox/3.6.10\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36\"</span>,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">        agent = random.choice(UserAgentList)</span><br><span class=\"line\">        request.headers[<span class=\"string\">'User_Agent'</span>] = agent</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 运行 scrapy crawl 将会看到 上面设置的中间键方法</span></span><br></pre></td></tr></table></figure><br><strong>也可以将数据保存到 json文件 或者 csv文件</strong></p>\n<ul>\n<li>scrapy crawl douban_spider -o movielist.csv</li>\n<li>scrapy crawl douban_spider -o movielist.json</li>\n</ul>\n<h5 id=\"Scrapy-入坑记\"><a href=\"#Scrapy-入坑记\" class=\"headerlink\" title=\"Scrapy 入坑记\"></a>Scrapy 入坑记</h5><p><em>Q：安装twisted出现依赖问题？</em><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190414102505.png\" alt=\"WeiyiGeek.问题1\" title=\"\" class=\"\">\n                <p>WeiyiGeek.问题1</p>\n            </figure><br>解决方法：<a href=\"https://www.lfd.uci.edu/~gohlke/pythonlibs/#twisted\" target=\"_blank\" rel=\"noopener\">官网下载twisted的whl包安装</a><br>Twisted‑19.2.0‑cp37‑cp37m‑win_amd64.whl</p>\n<hr>\n\n<h4 id=\"工作日常学习\"><a href=\"#工作日常学习\" class=\"headerlink\" title=\"工作日常学习\"></a>工作日常学习</h4><p><em>功能：实现利用学校找出省份</em><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python3</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\">#功能： 学校地区解析</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.parse</span><br><span class=\"line\"><span class=\"keyword\">from</span> lxml <span class=\"keyword\">import</span> etree</span><br><span class=\"line\"></span><br><span class=\"line\">number = []</span><br><span class=\"line\">name = []</span><br><span class=\"line\">file1 = open(<span class=\"string\">'2.txt'</span>,<span class=\"string\">'r'</span>,encoding=<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> file1:</span><br><span class=\"line\">    keyvalue = i.split(<span class=\"string\">\"\t\"</span>)</span><br><span class=\"line\">    number.append(str(keyvalue[<span class=\"number\">0</span>]))</span><br><span class=\"line\">    name.append(str(keyvalue[<span class=\"number\">1</span>]))</span><br><span class=\"line\">file1.close()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test1</span><span class=\"params\">(html,parm=<span class=\"string\">\"\"</span>)</span>:</span></span><br><span class=\"line\">  dom_tree = etree.HTML(html)</span><br><span class=\"line\">  links = dom_tree.xpath(<span class=\"string\">\"//div[@class='basic-info cmn-clearfix']/dl/dd/text()\"</span>)</span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> links:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> v <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>,len(number)):</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (i.find(name[v][:<span class=\"number\">2</span>]) != <span class=\"number\">-1</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> number[v] + name[v] +parm+<span class=\"string\">\"\\n\"</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">\"未找到(或者是海外)\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">file = open(<span class=\"string\">'1.txt'</span>,<span class=\"string\">'r+'</span>,encoding=<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">file.seek(<span class=\"number\">0</span>,<span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> eachline <span class=\"keyword\">in</span> file:</span><br><span class=\"line\">    url = <span class=\"string\">\"https://baike.baidu.com/item/\"</span>+urllib.parse.quote(eachline[<span class=\"number\">6</span>:]);</span><br><span class=\"line\">    response = urllib.request.urlopen(url)</span><br><span class=\"line\">    html = response.read().decode(<span class=\"string\">'utf-8'</span>)  <span class=\"comment\">#解码操作</span></span><br><span class=\"line\">    f = open(<span class=\"string\">'c:\\\\weiyigeek.txt'</span>,<span class=\"string\">'a+'</span>,encoding=<span class=\"string\">'utf-8'</span>)  <span class=\"comment\">#打开</span></span><br><span class=\"line\">    res = test1(html,str(eachline[<span class=\"number\">6</span>:]))</span><br><span class=\"line\">    f.writelines(res)</span><br><span class=\"line\">    f.close()  <span class=\"comment\">#关闭</span></span><br><span class=\"line\">file.close()</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190611101817.png\" alt=\"WeiyiGeek.执行后效果\" title=\"\" class=\"\">\n                <p>WeiyiGeek.执行后效果</p>\n            </figure></p>\n","comments":true,"excerpt":"[TOC]目录结构(1) urllib 简单的爬取指定网站<br>(2) Scrapy 爬虫框架<br>(3) BeautifulSoup 爬虫解析","categories":[{"name":"Development","path":"api/categories/Development.json"},{"name":"Programming","path":"api/categories/Programming.json"}],"tags":[{"name":"Python3","path":"api/tags/Python3.json"}]}