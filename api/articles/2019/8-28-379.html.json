{"title":"Fuzz入门以及在渗透测试中重要性","slug":"网安大类/FuzzTesting/Fuzz入门以及在渗透测试中重要性","date":"2019-08-28T09:34:30.000Z","updated":"2023-01-31T02:29:10.674Z","url":"2019/8-28-379.html","path":"api/articles/2019/8-28-379.html.json","covers":["https://img.weiyigeek.top/2019/1/20190920095433.png"],"content":"<p><b style=\"color:red\">注意：本文分享给安全从业人员、网站开发人员以及运维人员在日常工作防范恶意攻击,请勿恶意使用下面介绍技术进行非法攻击操作。。</b></p>\n<p>[TOC]</p>\n<a id=\"more\"></a>\n<h4 id=\"0x00-前言\"><a href=\"#0x00-前言\" class=\"headerlink\" title=\"0x00 前言\"></a>0x00 前言</h4><p>描述:在学习它时候我们有必要学习 Fuzz音标 <code>英/fʌz/</code>;</p>\n<p><em>什么是Fuzz技术?</em><br>答:Fuzz是一种基于黑盒的自动化软件模糊测试技术,简单的说一种懒惰且暴力的技术融合了常见的以及精心构建的数据文本进行网站、软件安全性测试;</p>\n<ul>\n<li><p>实现形式与目的:它可向目标发送随机或精心构造的数据作为计算机输入，来触发非常规反馈以达到检测漏洞的目的。</p>\n</li>\n<li><p>优势:</p>\n<ul>\n<li>节约测试成本和时间;一般的Fuzz工具自带完备的异常检测机制，发送数据后能精准查出哪些Payload导致了非常规反馈，在输出中将这些触发异常的Payload列出，大大降低了人工测试成本，渗透测试人员只需关注感兴趣的部分。</li>\n<li>检测范围、规模大;自动化工具在测试用例的效率和完善上是人工无法比较的，且很多潜在的有效Payload套路固定，这些Payload就无需手工测试，只需有一份精心构造的文<br>件和规则即可完成Fuzz。</li>\n<li>覆盖可能性多，可检测出意想不到的异常;</li>\n</ul>\n</li>\n</ul>\n<p><em>Fuzz的核心思想:</em></p>\n<ul>\n<li>目录Fuzz(漏洞点)</li>\n<li>参数Fuzz(可利用参数)</li>\n<li>PayloadFuzz(bypass)</li>\n</ul>\n<p><br></p>\n<h4 id=\"0x01-Fuzz应用场景\"><a href=\"#0x01-Fuzz应用场景\" class=\"headerlink\" title=\"0x01 Fuzz应用场景\"></a>0x01 Fuzz应用场景</h4><ul>\n<li><p>漏洞挖掘与Fuzz之<code>敏感目录</code>类似的工具,可能您再入门的时候使用过御剑而其内置的字典就是Fuzz的一种;<br><em>那么这种扫描有什么好处呢？</em><br>答:就是针对一部分网站可以扫描的全面，只要你的字典足够强大就可以扫描到绝大多部分的目录和文件，来自<code>Blasting_dictionary</code>(附录1)的爆破字典很好</p>\n</li>\n<li><p>漏洞挖掘与Fuzz之<code>敏感文件可利用参数</code></p>\n<ul>\n<li>fuzz参数来达到Jsonp劫持以及XSS漏洞等等;</li>\n<li>越权验证信息</li>\n</ul>\n</li>\n<li><p>漏洞挖掘与Fuzz之Bypass</p>\n<ul>\n<li>SQL injection Bypass</li>\n<li>Open redirect</li>\n<li>XSS Fuzzer</li>\n</ul>\n</li>\n</ul>\n<p><br></p>\n<h4 id=\"0x02-Fuzz常用工具\"><a href=\"#0x02-Fuzz常用工具\" class=\"headerlink\" title=\"0x02 Fuzz常用工具\"></a>0x02 Fuzz常用工具</h4><p>列出Fuzz常用的工具从我的认知开始:</p>\n<ul>\n<li>御剑: 界面化目录和文件扫描</li>\n<li>Dirsearch : 扫描模式和dirbuster是差不多</li>\n<li>Dirb :他的字典和御剑的不一样的就是没有针对目录和准确的定位到每个文件而是一个一个的目录名，那么这种扫描下是有一些有点的就是先发现目录在进行文件爆破，而且dirb的判断很智能他在你输入目标后会进行计算错误的请求，避免内些返回200的not found<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Usage : dirb https://domain.com/</span><br></pre></td></tr></table></figure></li>\n<li>Nikto : 作用在于目录的爆破</li>\n<li>wfuzz : 一款十分万能的工具我最近的目录爆破全都是使用wfuzz用熟练之后真的非常十分方便，排除一些响应码之后直接baseline这是我目前比较喜欢的用法<br>案例就是wfuzz<br>在fuzz过后发现了item参数，这是访问 <code>http://rob-sec-1.com/test/?item=XSSpayload</code>成功弹窗<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ wfuzz -w /usr/share/wordlists/dirb/common.txt --hh 53 <span class=\"string\">'http://rob-sec-1.com/test/?FUZZ=XSSpayload'</span></span><br><span class=\"line\"></span><br><span class=\"line\">Target: HTTP://rob-sec-1.com/<span class=\"built_in\">test</span>/?FUZZ=XSSpayload</span><br><span class=\"line\">Total requests: 4614</span><br><span class=\"line\">ID    Response   Lines      Word         Chars          Payload    </span><br><span class=\"line\">02127:  C=200      9 L           8 W         84 Ch      <span class=\"string\">\"item\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">Total time: 14.93025</span><br><span class=\"line\">Processed Requests: 4614</span><br><span class=\"line\">Filtered Requests: 4613</span><br><span class=\"line\">Requests/sec.: 309.0369</span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20190920095433.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n</li>\n</ul>\n<p><strong>辅助Fuzz的工具</strong></p>\n<ul>\n<li>Burpsuite的扩展程序CO2: Sqlmapper模块很好对于我这种注入菜的很的来说简直就是福音，而CeWler的功能是参数提取，比如我们在Http history 里找返回包右键发送到CeWler模块就可以进行参数提取了，在实战中的用处很大，可以把参数提取出来保存做参数字典更高效。</li>\n</ul>\n<p><br></p>\n<h4 id=\"0x03-附录\"><a href=\"#0x03-附录\" class=\"headerlink\" title=\"0x03 附录\"></a>0x03 附录</h4><ul>\n<li><a href=\"https://github.com/rootphantomer/Blasting_dictionary\" target=\"_blank\" rel=\"noopener\">https://github.com/rootphantomer/Blasting_dictionary</a></li>\n</ul>\n","comments":true,"excerpt":"注意：本文分享给安全从业人员、网站开发人员以及运维人员在日常工作防范恶意攻击,请勿恶意使用下面介绍技术进行非法攻击操作。。[TOC]","categories":[{"name":"渗透测试","path":"api/categories/渗透测试.json"}],"tags":[{"name":"Fuzz","path":"api/tags/Fuzz.json"}]}