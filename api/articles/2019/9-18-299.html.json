{"title":"Java扩展工具使用说明补充","slug":"编程世界/Java/Java扩展工具使用说明补充","date":"2019-09-18T11:56:50.000Z","updated":"2022-04-13T02:57:24.995Z","url":"2019/9-18-299.html","path":"api/articles/2019/9-18-299.html.json","covers":null,"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h4 id=\"Keytool-工具\"><a href=\"#Keytool-工具\" class=\"headerlink\" title=\"Keytool 工具\"></a>Keytool 工具</h4><p>描述:keytool是JDK中工具对JDK版本要求不高，但基于现在JDK版本的安全性考虑，建议使用JDK8及以上版本</p>\n<p>在使用之前我们先了解一些基础概念更能让我们了解此工具的用处:</p>\n<ul>\n<li>SSL证书（SSL Certificates）: 是HTTP明文协议升级HTTPS加密协议必备的数字证书,<code>它在客户端（浏览器）与服务端（网站服务器）之间搭建一条安全的加密通道</code>，对两者之间交换的信息进行加密确保传输数据不被泄露或篡改(<code>特别是在现在运营商流量分析手段-能采用https尽量采用</code>)。</li>\n<li>CSR(<code>Certificate Signing Request</code>): 即证书签名请求文件,是证书申请者在申请数字证书时<code>由CSP(加密服务提供者)在生成私钥的同时也生成证书请求文件</code>，证书申请者只要把CSR文件提交给证书颁发机构后，<code>证书颁发机构使用其根证书私钥签名就生成了证书公钥文件</code>，也就是颁发给用户的证书。</li>\n</ul>\n<p>Q:如何生成CSR证书请求文件?<br>答:目前CSR生成工具非常多，比如 openssl工具 / keystore explore / XCA ,以及在线工具:<a href=\"https://myssl.com/csr_create.html\" target=\"_blank\" rel=\"noopener\">https://myssl.com/csr_create.html</a></p>\n<p>Q:CSR是什么样?Key又是什么样?<br>答:CSR是以<code>-----BEGIN CERTIFICATE REQUEST-----</code>开头又以<code>-----END CERTIFICATE REQUEST-----</code>为结尾的base64格式的编码;<br>Key是以<code>-----BEGIN RSA PRIVATE KEY-----</code>开头的又以<code>-----END RSA PRIVATE KEY-----</code>结尾的，此处密钥算法采用的RSA当然您可以选择<code>ecdsa 和 ed25519</code></p>\n<p>CSR生成注意事项:</p>\n<ul>\n<li>域名必须正确输入（<code>如果是非SSL证书，则输入相应的通用名</code>）。</li>\n<li>密钥算法选择RSA的话密钥长度需要2048bit以上（<code>默认是2048没有特殊情况不要特殊设置</code>）,ECC则是256bit以上。</li>\n<li>摘要签名长度建议是sha2-256及以上</li>\n<li>有CSR必定有KEY所以他们是成对的，在证书申请下来后需要与和私钥key配对使用（<code>key必须加密保存好</code>）</li>\n</ul>\n<p>CSR生命周期一览<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">生成CSR/密钥 -&gt; 提交证书颁发机构 -&gt; 证书下发 -&gt;  无需使用CSR仅提交时候需要</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"1-CSR生成\"><a href=\"#1-CSR生成\" class=\"headerlink\" title=\"(1) CSR生成\"></a>(1) CSR生成</h5><p>注意:CSR是无法一步创建的需要先生成keystore在使用KeyTool工具时;<br>Step1.创建密钥库keystore<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">keytool -genkeypair \\ </span><br><span class=\"line\">-<span class=\"built_in\">alias</span> www.weiyigeek.top \\ </span><br><span class=\"line\">-keyalg RSA \\ </span><br><span class=\"line\">-keysize 2048 \\</span><br><span class=\"line\">-keypass WeiyiGeekSSL \\</span><br><span class=\"line\">-keystore server.jks \\ </span><br><span class=\"line\">-storetype JKS \\</span><br><span class=\"line\">-storepass WeiyiGeekSSL \\ </span><br><span class=\"line\">-sigalg SHA256withRSA \\</span><br><span class=\"line\">-dname <span class=\"string\">\"cn=www.weiyigeek.top,ou=IT,o=唯一极客,l=beijing,st=beijing,c=CN\"</span> \\ </span><br><span class=\"line\">-validity 365 </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Linux&amp;Windows</span></span><br><span class=\"line\">keytool -genkeypair -<span class=\"built_in\">alias</span> www.weiyigeek.top -keyalg RSA  -keysize 2048 -keypass WeiyiGeekSSL -keystore server.jks  -storetype JKS -storepass WeiyiGeekSSL -sigalg SHA256withRSA -dname <span class=\"string\">\"cn=www.weiyigeek.top,ou=IT,o=唯一极客,l=beijing,st=beijing,c=CN\"</span>  -validity 365</span><br></pre></td></tr></table></figure></p>\n<p>参数说明:</p>\n<ul>\n<li>alias: 自定义别名此处我以自己域名为例，因<code>一个证书库中可以存放多个证书</code>，通过别名标识证书常起作mykey。</li>\n<li>keyalg: 密钥的算法可以选择的密钥算法有<code>RSA、EC、ED</code>,不建议使用DSA密钥算法;</li>\n<li>keysize: 密钥长度<code>keysize与keyalg默认对应关系</code>,RSA-2048(<code>最高4096bit并不是越长越高也要考虑非对称算法的运算开销</code>) / DSA-1024 / EC-256;</li>\n<li>keypass: 密钥密码建议最好与storepass一致</li>\n<li>keystore: 密钥库的名称<code>默认在当前目录创建证书库</code></li>\n<li>storetype: 证书库类型可选<code>JKS(JDK8)、PKCS12(JDK9)</code></li>\n<li>storepass: 证书库密码(私钥的密码)最好与keypass 一致</li>\n<li>sigalg: 签名算法,当keyalg=RSA时有<code>MD5withRSA、SHA1withRSA、SHA256withRSA、SHA384withRSA、SHA512withRSA</code>可供选择但是不建议选择MD5与SHA1签名算法,建议使用SHA256及以上的签名;</li>\n<li>dname: “CN=名字与姓氏/域名,OU=组织单位名称,O=组织名称,L=城市或区域名称,ST=州或省份名称,C=单位的两字母国家代码”;</li>\n<li>validity: 有效期此处”365“为证书有效期天数。</li>\n</ul>\n<p><em>注意事项:</em> </p>\n<ul>\n<li>上述命令需要将 -dname 参数替换（<code>尤其时域名要写对</code>）、密码更改即可，其它可保持不变。</li>\n</ul>\n<p>Step2.利用得到JKS文件生成CSR文件<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">keytool -certreq \\ </span><br><span class=\"line\">-keyalg RSA \\</span><br><span class=\"line\">-<span class=\"built_in\">alias</span> www.weiyigeek.top \\</span><br><span class=\"line\">-keystore server.jks \\</span><br><span class=\"line\">-storetype JKS  \\</span><br><span class=\"line\">-storepass WeiyiGeekSSL \\  </span><br><span class=\"line\">-file www.weiyigeek.top.csr \\ </span><br><span class=\"line\"><span class=\"comment\">#Linux&amp;Windows</span></span><br><span class=\"line\">keytool -certreq -keyalg RSA -<span class=\"built_in\">alias</span> www.weiyigeek.top -keystore server.jks -storetype JKS -storepass WeiyiGeekSSL -file www.weiyigeek.top.csr</span><br></pre></td></tr></table></figure></p>\n<p>Step3.CSR需要提交私钥则存储在JKS文件中, 至此keytool方式的CSR生成完毕。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@initiator tmp]<span class=\"comment\"># ls -alh server.jks www.weiyigeek.top.csr</span></span><br><span class=\"line\">-rw-r--r--. 1 root root 2.3K 4月  23 17:20 server.jks</span><br><span class=\"line\">-rw-r--r--. 1 root root 1.1K 4月  23 17:24 www.weiyigeek.top.csr</span><br></pre></td></tr></table></figure></p>\n<p>补充说明:<code>[2020-04-23 16:59:49]</code></p>\n<ul>\n<li>(1) 主流的证书格式有<code>PEM、DER、PFX、JKS、KDB、CER、KEY、CSR、CRT、CRL 、OCSP、SCEP</code>并且他们是可以相互装换的;</li>\n<li>(2) JKS 密钥库使用专用格式建议使用下面的迁移到行业标准格式 PKCS12。<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#注意:一个密钥库可以有多个密钥</span></span><br><span class=\"line\"><span class=\"variable\">$keytool</span> -importkeystore -srckeystore server.jks -destkeystore server.jks -deststoretype pkcs12</span><br><span class=\"line\">输入源密钥库口令:</span><br><span class=\"line\">已成功导入别名 www.weiyigeek.top 的条目。</span><br><span class=\"line\">已完成导入命令: 1 个条目成功导入, 0 个条目失败或取消</span><br><span class=\"line\">Warning:</span><br><span class=\"line\">已将 <span class=\"string\">\"server.jks\"</span> 迁移到 Non JKS/JCEKS。将 JKS 密钥库作为 <span class=\"string\">\"server.jks.old\"</span> 进行了备份。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#2.密钥库中的条目查询</span></span><br><span class=\"line\"><span class=\"variable\">$keytool</span> -list -v -keystore <span class=\"string\">\"server.jks\"</span></span><br><span class=\"line\">输入密钥库口令:</span><br><span class=\"line\">密钥库类型: PKCS12</span><br><span class=\"line\">密钥库提供方: SUN</span><br><span class=\"line\">您的密钥库包含 1 个条目</span><br><span class=\"line\">www.weiyigeek.top, 2020-4-23, PrivateKeyEntry,</span><br><span class=\"line\">证书指纹 (SHA1): 72:E5:D9:48:1C:4D:4F:7D:AD:56:35:3D:FF:9B:3B:08:B4:A2:B3:45</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#3.最终产生的csr貌似都是一样的;</span></span><br><span class=\"line\"><span class=\"variable\">$keytool</span> -certreq -keyalg RSA -<span class=\"built_in\">alias</span> www.weiyigeek.top -keystore server.jks -storetype PKCS12 -storepass WeiyiGeekSSL -file www.weiyigeek.top.pkcs12.csr</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4.删除密钥库中的条目:</span></span><br><span class=\"line\"><span class=\"variable\">$keytool</span> -delete -<span class=\"built_in\">alias</span> weiyigeek.top -keystore <span class=\"string\">\"server.jks\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#5.导出密钥到证书:</span></span><br><span class=\"line\"><span class=\"variable\">$keytool</span> -exportcert -<span class=\"built_in\">alias</span> weiyigeek.top -keystore server.jks -file weiyigeek.top.cer -storepass WeiyiGeekSSL  -rfc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#6.加解密工具包（`openssl`） 然后您需要输入密钥库口令用来导出公钥;</span></span><br><span class=\"line\"><span class=\"variable\">$keytool</span> -list -rfc -keystore server.jks -storepass WeiyiGeekSSL  | openssl x509 -inform pem -pubkey</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br></p>\n<h5 id=\"2-密钥提取\"><a href=\"#2-密钥提取\" class=\"headerlink\" title=\"(2) 密钥提取\"></a>(2) 密钥提取</h5><p>描述:所谓JKS（Java Key Store）就是利用Java Keytool 工具生成的Keystore文件，JKS文件由公钥和密钥构成，其中的公钥就是我们所说的证书，即cer为后缀的文件，而私钥就是密钥，即以key为后缀的文件。</p>\n<p>流程如下:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#1.查看证书信息</span></span><br><span class=\"line\"><span class=\"variable\">$keytool</span> -list -rfc -keystore server.jks -storepass WeiyiGeek.</span><br><span class=\"line\">密钥库类型: jks</span><br><span class=\"line\">密钥库提供方: SUN</span><br><span class=\"line\">您的密钥库包含 1 个条目</span><br><span class=\"line\">别名: *****.weiyigeek.top</span><br><span class=\"line\">证书[1]: </span><br><span class=\"line\">-----BEGIN CERTIFICATE-----  <span class=\"comment\">#证书信息 可将其保存在 crt 中</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#2.JKS 密钥库使用专用格式迁移到行业标准格式 PKCS12;</span></span><br><span class=\"line\">keytool -importkeystore -srckeystore server.jks -destkeystore server.jks -deststoretype pkcs12</span><br><span class=\"line\">输入源密钥库口令:</span><br><span class=\"line\">已成功导入别名 *****.weiyigeek.top 的条目。</span><br><span class=\"line\">已完成导入命令: 1 个条目成功导入, 0 个条目失败或取消</span><br><span class=\"line\">已将 <span class=\"string\">\"server.jks\"</span> 迁移到 Non JKS/JCEKS。将 JKS 密钥库作为 <span class=\"string\">\"server.jks.old\"</span> 进行了备份。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#3.jks文件中的私钥不能直接得到需要通过openssl将jks文件转换成pfx格式后再进行提取。</span></span><br><span class=\"line\">keytool -v -importkeystore -srckeystore server.jks -srcstoretype pkcs12 -srcstorepass 123456 -destkeystore server.pfx -deststoretype pkcs12 -deststorepass 123456 -destkeypass WeiyiGeek.</span><br><span class=\"line\"><span class=\"comment\"># 正在将密钥库 server.jks 导入到 server.pfx...</span></span><br><span class=\"line\"><span class=\"comment\"># 已成功导入别名 study.weiyigeek.top 的条目。</span></span><br><span class=\"line\"><span class=\"comment\"># 已完成导入命令: 1 个条目成功导入, 0 个条目失败或取消</span></span><br><span class=\"line\"><span class=\"comment\"># [正在存储server.pfx]</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4.将servers.pfx的私钥导出</span></span><br><span class=\"line\">openssl pkcs12 -<span class=\"keyword\">in</span> server.pfx -nocerts -nodes -out server.key</span><br><span class=\"line\"><span class=\"comment\"># Enter Import Password:</span></span><br><span class=\"line\"><span class=\"comment\"># MAC verified OK</span></span><br><span class=\"line\">cat server.key  <span class=\"comment\">#密钥</span></span><br><span class=\"line\"><span class=\"comment\"># Bag Attributes</span></span><br><span class=\"line\"><span class=\"comment\">#     friendlyName: study.weiyigeek.top</span></span><br><span class=\"line\"><span class=\"comment\">#     localKeyID: 54 69 6D 65 20 38 35 38 37 39 37 35 39 38 34 35 36 36</span></span><br><span class=\"line\"><span class=\"comment\"># Key Attributes: &lt;No Attributes&gt;</span></span><br><span class=\"line\"><span class=\"comment\"># -----BEGIN PRIVATE KEY-----</span></span><br></pre></td></tr></table></figure></p>\n<BR>\n\n<h5 id=\"3-其它格式\"><a href=\"#3-其它格式\" class=\"headerlink\" title=\"3.其它格式\"></a>3.其它格式</h5><ul>\n<li>1) 如果需要一个PFX格式的密钥文件(<code>IIS中</code>)，按照以下的说明<code>将证书和私钥文件转换为一个.PFX文件</code>:<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl pkcs12 -<span class=\"built_in\">export</span> -out <span class=\"string\">\"certificate_combined.pfx\"</span> -inkey <span class=\"string\">\"private.key\"</span> -<span class=\"keyword\">in</span> <span class=\"string\">\"certificate.crt\"</span> -certfile ca_bundle.crt</span><br></pre></td></tr></table></figure></li>\n<li>2) 如果您需要PEM格式的私钥文件(<code>Apache中</code>)<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl rsa -<span class=\"keyword\">in</span> private.key -text &gt; private.pem</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Development","path":"api/categories/Development.json"}],"tags":[{"name":"java","path":"api/tags/java.json"},{"name":"web开发","path":"api/tags/web开发.json"}]}