{"title":"Servlet基础入门学习1","slug":"编程世界/JavaWeb/1.Servlet/Servlet基础入门学习1","date":"2020-02-11T05:34:30.000Z","updated":"2022-03-29T05:39:06.300Z","url":"2020/2-11-301.html","path":"api/articles/2020/2-11-301.html.json","covers":["https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200215222021.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200215224230.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200215233656.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200401161035.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200217130641.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200217130827.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200216213835.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200216214042.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200216214346.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200216215332.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200216221656.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200216222850.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200216224307.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200216232427.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200217125744.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200223141546.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200223142928.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200223154642.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200224220557.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200224224525.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200225162216.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200226123229.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200226011304.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h4 id=\"0x01-快速入门\"><a href=\"#0x01-快速入门\" class=\"headerlink\" title=\"0x01 快速入门\"></a>0x01 快速入门</h4><p>描述:在进行JavaWeb开发学习的时候必不可少就是Tomcat Web 容器服务器，因为它开源免费、便于上手，并且使用安装简单。</p>\n<p><strong>简单介绍:</strong><br>Tomcat是一款开源软件、免费的Web容器软件，由Apache基金会旗下采用JAVA进行开发，Tomcat是一款Web容器自身不能作为负载均衡的软件;<br>主要应用于发布网页代码，提供网页信息服务，用户通过浏览可以实现界面的访问；Tomcat默认可以处理静态的网页，也可以处理动态的网页；</p>\n<p>在这里我们就详细演示安装流程了，在我其他的Tomcat运维文章中有它的详细以及优化配置等.</p>\n<p>学习环境准备:</p>\n<ul>\n<li>Java的JDK8（并且配置好环境变量）</li>\n<li>Tomcat 7.0.100 : <a href=\"http://tomcat.apache.org/download-70.cgi\" target=\"_blank\" rel=\"noopener\">http://tomcat.apache.org/download-70.cgi</a></li>\n<li>Eclipse IDE</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200215222021.png\" alt=\"WeiyiGeek.Tomcat\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Tomcat</p>\n            </figure>\n<p><strong>Tomcat 7.0目录结构说明</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* bin:Tomcat 启用binary以及一些启动jar包</span><br><span class=\"line\">* conf:Tomcat配置文档</span><br><span class=\"line\">* lib:Tomcat运行所依赖的jar文件</span><br><span class=\"line\">* logs:运行过程中的日志文件</span><br><span class=\"line\">* temp:临时文件</span><br><span class=\"line\">* webapps:项目发布的目录，以及war解压的目录;</span><br><span class=\"line\">* work:JSPbuild成为java文件的临时存放地</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h4 id=\"0x02-项目发布\"><a href=\"#0x02-项目发布\" class=\"headerlink\" title=\"0x02 项目发布\"></a>0x02 项目发布</h4><p>描述:如何将项目发布到Tomcat中运行?</p>\n<p><strong>方式1:移动项目到Webapps目录（使用较多）</strong><br>描述:冷部署可以直接将项目文件夹拖入Webapps目录之中并需要重新启动Tomcat;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Tomcat控制台提示</span></span><br><span class=\"line\"><span class=\"comment\"># 信息: 把web 应用程序部署到目录 [W:\\apache-tomcat-7.0.100\\webapps\\Demo1]</span></span><br><span class=\"line\"><span class=\"comment\"># 二月 15, 2020 10:40:11 下午 org.apache.catalina.util.SessionIdGeneratorBase crea</span></span><br><span class=\"line\"><span class=\"comment\"># eSecureRandom</span></span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200215224230.png\" alt=\"WeiyiGeek.方式1\" title=\"\" class=\"\">\n                <p>WeiyiGeek.方式1</p>\n            </figure></p>\n<p><br></p>\n<p><strong>方式2:Host配置虚拟路径</strong><br>描述:通过在Conf/Server.xml配置文件中HOST元素接地添加上<code>&lt;Content&gt;</code>属性 130 行左右;该方式的区别不同于第一种是在于它不会在Tomcat控制终端日志中显示。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">Host</span> <span class=\"attr\">name</span>=<span class=\"string\">\"localhost\"</span>  <span class=\"attr\">appBase</span>=<span class=\"string\">\"webapps\"</span> <span class=\"attr\">unpackWARs</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">autoDeploy</span>=<span class=\"string\">\"true\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Context</span> </span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">docBase</span>=<span class=\"string\">\"D:\\apache-tomcat-7.0.100\\webapps\\Demo1\"</span>  </span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">path</span>=<span class=\"string\">\"/Demo2\"</span> </span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">override</span>=<span class=\"string\">\"true\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Context</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Valve</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.valves.AccessLogValve\"</span> <span class=\"attr\">directory</span>=<span class=\"string\">\"logs\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">prefix</span>=<span class=\"string\">\"localhost_access_log.\"</span> <span class=\"attr\">suffix</span>=<span class=\"string\">\".txt\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">pattern</span>=<span class=\"string\">\"%h %l %u %t &amp;quot;%r&amp;quot; %s %b\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Host</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- </span></span><br><span class=\"line\"><span class=\"comment\">属性解释:</span></span><br><span class=\"line\"><span class=\"comment\">1.docBase=存放web应用程序的文档基础(也称为上下文根)目录或者web应用程序存档文件(如果此web应用程序直接从WAR文件执行)。</span></span><br><span class=\"line\"><span class=\"comment\">2.path=网页访问的路径</span></span><br><span class=\"line\"><span class=\"comment\">3.override=设置为true可以忽略全局或主机默认上下文中的任何设置。默认情况下将使用默认上下文的设置，但是可能会被上下文的设置显式地覆盖相同的属性。 </span></span><br><span class=\"line\"><span class=\"comment\">--&gt;</span></span><br></pre></td></tr></table></figure>\n<p>参考地址:<a href=\"http://127.0.0.1:8080/docs/config/context.html#Defining_a_context\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8080/docs/config/context.html#Defining_a_context</a><br>访问地址效果如上面图显示一致:<a href=\"http://127.0.0.1:8080/Demo2/index.xml\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8080/Demo2/index.xml</a></p>\n<p><br></p>\n<p><strong>方式3:Engine配置虚拟路径</strong><br>描述:与方式2大致相同不同的是进行加载的目录不同而已依赖于Engine进行单独的上下文元素可将Context元素复制到引擎文件中即可;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#$CATALINA_BASE/conf/[enginename]/[hostname]/</span></span><br><span class=\"line\">Server.xml</span><br><span class=\"line\">&lt;Engine name=<span class=\"string\">\"Catalina\"</span> defaultHost=<span class=\"string\">\"localhost\"</span>&gt;</span><br><span class=\"line\">..</span><br><span class=\"line\">&lt;/Engome&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#由此可知路径为 Conf/Catalina/localhost 并在目录下建立一个Demo3.xml (访问时候便以/Demo3作为访问路径)</span></span><br><span class=\"line\"><span class=\"comment\">#即D:\\apache-tomcat-7.0.100\\conf\\Catalina\\localhost\\Demo3.XML注意docBase指向Webapps中目录会报错</span></span><br><span class=\"line\">&lt;?xml version=<span class=\"string\">'1.0'</span> encoding=<span class=\"string\">'utf-8'</span>?&gt;</span><br><span class=\"line\">&lt;Context docBase=<span class=\"string\">\"D:\\xampp\\htdocs\"</span> override=<span class=\"string\">\"true\"</span>&gt;&lt;/Context&gt;</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200215233656.png\" alt=\"WeiyiGeek.Engine配置虚拟路径\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Engine配置虚拟路径</p>\n            </figure></p>\n<p><br></p>\n<p>根据上面的分析可以总结出Tomcat主要包含了 2 个核心组件：<code>连接器(Connector)</code>和<code>容器(Container)</code>,</p>\n<ul>\n<li>1.一个Tomcat是一个Server,</li>\n<li>2.而一个Server下有多个Service，也就是我们部署的多个应用，一个应用下有多个连接器(Connector)和一个容器（Container）容器下有多个子容器;</li>\n<li>3.Engine下有多个Host子容器，Host下有多个Context子容器，Context下有多个Wrapper子容器。</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200401161035.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n<hr>\n<h4 id=\"0x03-项目打包\"><a href=\"#0x03-项目打包\" class=\"headerlink\" title=\"0x03 项目打包\"></a>0x03 项目打包</h4><p>描述:在实际的开发中我们需要将我们的web工程打压成为war包或者jar包进行tomcat部署或者在jvm虚拟机中运行；</p>\n<p>问：如何将项目打包成为jar?</p>\n<ul>\n<li>1.右键工程选择<code>Export</code>选择other在java目录下选择jar；</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200217130641.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n<ul>\n<li>2.进行导出jar配置一般默认就行；</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200217130827.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n<p><br></p>\n<h4 id=\"0x04-Servlet基础\"><a href=\"#0x04-Servlet基础\" class=\"headerlink\" title=\"0x04 Servlet基础\"></a>0x04 Servlet基础</h4><p>描述:Servlet<code>[ /ˈsɜːvlɪt/ ]</code> API 是运行在Tomcat Web服务器容器中的小型Java程序<code>伺服小程式；小服务程</code>，通过HTTP(超文本传输协议)接收和响应来自Web客户端的请求;更多的是配合动态资源做项目，当然也可以使用到Servlet只不过在Tomcat里面已经定义了一个DefaultServlet;</p>\n<p><br></p>\n<h5 id=\"1-Hello-World\"><a href=\"#1-Hello-World\" class=\"headerlink\" title=\"1.Hello World\"></a>1.Hello World</h5><p>描述:在上面Tomcat安装好后它给我们提供了一个示例页面，进行使用和学习 Servlet （ Servlet Examples with Code ） ；<br>地址: <a href=\"http://127.0.0.1:8080/examples/servlets/\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8080/examples/servlets/</a></p>\n<p><em>静态项目创建流程</em>:</p>\n<ul>\n<li>1.采用Eclipse建立一个Web工程,首先切换到 <code>Java EE</code> 视图，然后选择Server选项卡并且配置好Tomcat服务器;</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200216213835.png\" alt=\"WeiyiGeek.Step1\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Step1</p>\n            </figure>\n<ul>\n<li>2.选择完成的Tomcat 7 Server 进行最后一步配置Web项目存放到新建立的wtpWebapps目录中保存即可,即<code>D:\\apache-tomcat-7.0.100\\wtpwebapps</code>;</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200216214042.png\" alt=\"WeiyiGeek.Step2\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Step2</p>\n            </figure>\n<ul>\n<li>3.新建一个动态的Web工程(Dynamic Web Project),设置项目名称为HelloWorld；</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200216214346.png\" alt=\"WeiyiGeek.Step3\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Step3</p>\n            </figure>\n<ul>\n<li>4.测试一个Web工程,在WebContent目录中建立一个静态资源index.html来测试应用服务器，选择项目进行Run on Server也可以快捷键<code>ALT+SHIFT+X,R</code>,第一次运行按照提示即可发布；<br>访问地址:<a href=\"http://localhost:8080/HelloWorld/\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/HelloWorld/</a></li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200216215332.png\" alt=\"WeiyiGeek.Step4\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Step4</p>\n            </figure>\n<p>注释:实际上是采用上面部署的第二种方法,在Server.xml中添加了一句<code>&lt;Context docBase=&quot;D:\\apache-tomcat-7.0.100\\wtpwebapps\\HelloWorld&quot; path=&quot;/HelloWorld&quot; reloadable=&quot;true&quot; source=&quot;org.eclipse.jst.jee.server:HelloWorld&quot;/&gt;</code></p>\n<p><br></p>\n<p><em>Servelet项目创建流程</em>:</p>\n<ul>\n<li>5.在项目的JAVA Resource中的src中创建一个测试Servlet的pakeage，并且建立一个java文件实现Servlet;</li>\n</ul>\n<p>/HelloWorld/src/cn/weiyigeek/servlet/HelloWorld.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.weiyigeek.servlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.Servlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletConfig;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletResponse;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Administrator</span></span><br><span class=\"line\"><span class=\"comment\"> *  说明:测试验证Servlet</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">// 1.实现Servlet接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloWorld</span> <span class=\"keyword\">implements</span> <span class=\"title\">Servlet</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">//2.重写里面的方法</span></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">service</span><span class=\"params\">(ServletRequest arg0, ServletResponse arg1)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"&lt;p style='color:red'&gt;Hello World, Servlet!&lt;/p&gt;\"</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">    ..... </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200216221656.png\" alt=\"WeiyiGeek.Step5\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Step5</p>\n            </figure>\n<ul>\n<li>6.配置Servlet项目在<code>WebContent &gt; WEB-INF &gt; web.xml</code>添加Servlet的名称以及类.包名称<code>cn.weiyigeek.servlet.HelloWorld</code>,然后添加注册一个Servlet映射url访问路径，重新发布项目即可;<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span> <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://java.sun.com/xml/ns/javaee\"</span> <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"WebApp_ID\"</span> <span class=\"attr\">version</span>=<span class=\"string\">\"2.5\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">display-name</span>&gt;</span>HelloWorld<span class=\"tag\">&lt;/<span class=\"name\">display-name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 默认的首页地址 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">welcome-file-list</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>index.html<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>index.htm<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>index.jsp<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>default.html<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>default.htm<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>default.jsp<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">welcome-file-list</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 1.告知Tomcat我们应用中有个Servlet,名字叫做HelloHelloWorld，以及包.类的路径名称； --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>HelloWorld<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>cn.weiyigeek.servlet.HelloWorld<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 2.注册Servlet映射以及URL匹配访问的路径 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>HelloWorld<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/hello<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200216222850.png\" alt=\"WeiyiGeek.Step6\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Step6</p>\n            </figure>\n<p><em>响应流程:</em><br>(1) 当用户访问<code>http://127.0.0.1:8080/HelloWorld/hello</code>时候，匹配到了注册的Servlet映射的url路径，反向找到servlet-name应用名称<br>(2) 再从Servlet应用中查询出该servlet name名称的应用，并反向找到<code>其包名.类</code>名称;<br>(3) 编译并且创建<code>cn.weiyigeek.servlet.HelloWorld</code>该类的实例，然后Tomcat通过Java VM虚拟机运行其所产生的字节码文件；<br>(4) 继而执行该Servlet中的services方，并且反馈输出到我们的控制台之中;</p>\n<p><br></p>\n<h5 id=\"2-HttpServlet\"><a href=\"#2-HttpServlet\" class=\"headerlink\" title=\"2.HttpServlet\"></a>2.HttpServlet</h5><p>描述:在Eclipse中选择接口名称按<code>CTRL+T</code>键，显示其继承层级已经实现了Servlet接口的一些通用写法，来避免重复重写Servlet中的方法;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Servlet 接口 -&gt; GenericServlet -&gt; HttpServlent (用于处理HTTP的请)</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200216224307.png\" alt=\"WeiyiGeek.通用写法\" title=\"\" class=\"\">\n                <p>WeiyiGeek.通用写法</p>\n            </figure></p>\n<p>我们参照Tomcat给我们提供的helloworld.html示例文档进行实现,在上面的基础之上添加一个新的class文件，进行继承HttpServlet以及复习doGet和doPost方法;</p>\n<p>基础示例:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// cn.weiyigeek.servlet.HttpHelloWorld</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> cn.weiyigeek.servlet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.PrintWriter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Administrator</span></span><br><span class=\"line\"><span class=\"comment\"> * 说明：实现 Generial通用httpServet继承的复写</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HttpHelloWorld</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServlet</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">//1.get请求</span></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//设置响应文本内容类型</span></span><br><span class=\"line\">    resp.setContentType(<span class=\"string\">\"text/html\"</span>);</span><br><span class=\"line\">        <span class=\"comment\">//实例化并设置响应文本内容</span></span><br><span class=\"line\">    PrintWriter out = resp.getWriter();</span><br><span class=\"line\">    out.print(<span class=\"string\">\"&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;HttpServlet Hello&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;Hello World,HttpServlet!&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">//2.post请求</span></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doPost</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>.doPost(req, resp);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Web.xml:添加 servlet 映射</span></span><br><span class=\"line\">&lt;web-app ...&gt;</span><br><span class=\"line\"> &lt;servlet&gt;</span><br><span class=\"line\">  \t&lt;servlet-name&gt;HttpHelloWorld&lt;/servlet-name&gt;</span><br><span class=\"line\">  \t&lt;servlet-<span class=\"class\"><span class=\"keyword\">class</span>&gt;<span class=\"title\">cn</span>.<span class=\"title\">weiyigeek</span>.<span class=\"title\">servlet</span>.<span class=\"title\">HttpHelloWorld</span>&lt;/<span class=\"title\">servlet</span>-<span class=\"title\">class</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">  &lt;/<span class=\"title\">servlet</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">  &lt;<span class=\"title\">servlet</span>-<span class=\"title\">mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">  \t&lt;<span class=\"title\">servlet</span>-<span class=\"title\">name</span>&gt;<span class=\"title\">HttpHelloWorld</span>&lt;/<span class=\"title\">servlet</span>-<span class=\"title\">name</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">  \t&lt;<span class=\"title\">url</span>-<span class=\"title\">pattern</span>&gt;/<span class=\"title\">web</span>&lt;/<span class=\"title\">url</span>-<span class=\"title\">pattern</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">  &lt;/<span class=\"title\">servlet</span>-<span class=\"title\">mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">web</span>-<span class=\"title\">app</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200216232427.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n<p><br></p>\n<h5 id=\"3-Servlet生命周期\"><a href=\"#3-Servlet生命周期\" class=\"headerlink\" title=\"3.Servlet生命周期\"></a>3.Servlet生命周期</h5><p>问:什么是生命周期？什么是生命周期方法?</p>\n<blockquote>\n<p>从创建到销毁的一段时间，从创建到销毁的所调用的方法;</p>\n</blockquote>\n<p><strong>Servlet生命周期流程:</strong></p>\n<ul>\n<li>1.init() 初始化:在创建该Servlet实例时候执行该方法（也可以提前进行初始化后面代码实现）,在生命周期内只会在启动后初次访问时候触发一次,后续访问不会再触发;</li>\n<li>2.service() 服务请求:当客户端每来一个请求就要触发执行该方法;</li>\n<li>3.destory() 销毁:该项目从tomcat应用中移出的时候以及tomcat服务器正常shutdown的时候会触发执行该方法;</li>\n</ul>\n<p><br></p>\n<p><strong>提前Servlet初始化:</strong><br>描述:在有时候我们可能需要在init初始化这个方法中执行一些初始化工作，甚至做一些比较耗时的操作的逻辑，那么这时我们可以将初始化的时机进行提前到应用启动的时候；<br>配置：在需要的servlet提前初始化运行的servlet名称下添加load-on-startup元素;</p>\n<p>基础示例:<br>cn.weiyigeek.servlet.Lifecycle<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.weiyigeek.servlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.Servlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletConfig;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletResponse;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Administrator</span></span><br><span class=\"line\"><span class=\"comment\"> *   说明:Servlet 声明周期的验证</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Lifecycle</span> <span class=\"keyword\">implements</span> <span class=\"title\">Servlet</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">(ServletConfig config)</span> <span class=\"keyword\">throws</span> ServletException </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"1.Lifecycle 初始化操作 ...\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> ServletConfig <span class=\"title\">getServletConfig</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">service</span><span class=\"params\">(ServletRequest req, ServletResponse res)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">    num++;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"2.Lifecycle 服务提供操作，您访问了 \"</span>+num+<span class=\"string\">\" 次!\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getServletInfo</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">destroy</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"3.Lifecycle 销毁操作...\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//web.xml</span></span><br><span class=\"line\">&lt;web-app ...&gt;</span><br><span class=\"line\">  &lt;!-- 声明周期验证并提前初始化 --&gt;</span><br><span class=\"line\">  &lt;servlet&gt;</span><br><span class=\"line\">  \t&lt;servlet-name&gt;Lifecycle&lt;/servlet-name&gt;</span><br><span class=\"line\">  \t&lt;servlet-<span class=\"class\"><span class=\"keyword\">class</span>&gt;<span class=\"title\">cn</span>.<span class=\"title\">weiyigeek</span>.<span class=\"title\">servlet</span>.<span class=\"title\">Lifecycle</span>&lt;/<span class=\"title\">servlet</span>-<span class=\"title\">class</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">  \t&lt;<span class=\"title\">load</span>-<span class=\"title\">on</span>-<span class=\"title\">startup</span>&gt;3&lt;/<span class=\"title\">load</span>-<span class=\"title\">on</span>-<span class=\"title\">startup</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">  &lt;/<span class=\"title\">servlet</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">   &lt;<span class=\"title\">servlet</span>-<span class=\"title\">mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">   \t&lt;<span class=\"title\">servlet</span>-<span class=\"title\">name</span>&gt;<span class=\"title\">Lifecycle</span>&lt;/<span class=\"title\">servlet</span>-<span class=\"title\">name</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">   \t&lt;<span class=\"title\">url</span>-<span class=\"title\">pattern</span>&gt;/<span class=\"title\">lifecycletest</span>&lt;/<span class=\"title\">url</span>-<span class=\"title\">pattern</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">   &lt;/<span class=\"title\">servlet</span>-<span class=\"title\">mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\">&lt;/<span class=\"title\">web</span>-<span class=\"title\">app</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>执行结果:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">信息: Starting Servlet Engine: Apache Tomcat/7.0.100</span><br><span class=\"line\">二月 17, 2020 12:21:37 上午 org.apache.catalina.util.SessionIdGeneratorBase createSecureRandom</span><br><span class=\"line\">警告: Creation of SecureRandom instance <span class=\"keyword\">for</span> session ID generation using [SHA1PRNG] took [293] milliseconds.</span><br><span class=\"line\"></span><br><span class=\"line\">1.Lifecycle 初始化操作 ...</span><br><span class=\"line\">二月 17, 2020 12:21:37 上午 org.apache.catalina.startup.HostConfig deployDescriptor</span><br><span class=\"line\">信息: 部署描述符[D:\\apache-tomcat-7.0.100\\conf\\Catalina\\localhost\\Demo3.xml]的部署已在[69]ms内完成</span><br><span class=\"line\"></span><br><span class=\"line\">二月 17, 2020 12:21:37 上午 org.apache.catalina.core.ApplicationContext <span class=\"built_in\">log</span></span><br><span class=\"line\">信息: SessionListener: contextInitialized()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">信息: 开始协议处理句柄[<span class=\"string\">\"http-bio-8080\"</span>]</span><br><span class=\"line\">二月 17, 2020 12:21:38 上午 org.apache.catalina.startup.Catalina start</span><br><span class=\"line\">信息: Server startup <span class=\"keyword\">in</span> 1887 ms</span><br><span class=\"line\"></span><br><span class=\"line\">2.Lifecycle 服务提供操作，您访问了 1 次!</span><br><span class=\"line\">2.Lifecycle 服务提供操作，您访问了 2 次!</span><br><span class=\"line\">2.Lifecycle 服务提供操作，您访问了 3 次!</span><br><span class=\"line\"></span><br><span class=\"line\">信息: Pausing ProtocolHandler [<span class=\"string\">\"http-bio-8080\"</span>]</span><br><span class=\"line\">二月 17, 2020 12:32:36 上午 org.apache.catalina.core.StandardService stopInternal</span><br><span class=\"line\">信息: 正在停止服务[Catalina]</span><br><span class=\"line\"></span><br><span class=\"line\">3.Lifecycle 销毁操作...</span><br><span class=\"line\">二月 17, 2020 12:32:36 上午 org.apache.catalina.core.ApplicationContext <span class=\"built_in\">log</span></span><br><span class=\"line\">信息: SessionListener: contextDestroyed()</span><br><span class=\"line\">二月 17, 2020 12:32:36 上午 org.apache.coyote.AbstractProtocol stop</span><br><span class=\"line\">信息: 正在停止ProtocolHandler [<span class=\"string\">\"http-bio-8080\"</span>]</span><br><span class=\"line\">二月 17, 2020 12:32:36 上午 org.apache.coyote.AbstractProtocol destroy</span><br><span class=\"line\">信息: 正在摧毁协议处理器 [<span class=\"string\">\"http-bio-8080\"</span>]</span><br></pre></td></tr></table></figure></p>\n<p>注意事项:</p>\n<ul>\n<li>1.生命周期方法是指，从对象创建到销毁一定会执行的方法，而doGet和doPost不算生命周期方法因为他们可能会执行或者不会执行;</li>\n<li>2.Servlet初始化提前load-on-startup值越小优先级越高且是一个正值;</li>\n</ul>\n<p><br></p>\n<h5 id=\"4-Servlet配置对象\"><a href=\"#4-Servlet配置对象\" class=\"headerlink\" title=\"4.Servlet配置对象\"></a>4.Servlet配置对象</h5><p>描述:我们可以利用Servlet配置对象进行获取或检测web.xml中的servlet配置信息;<br>在未来我们进行实际开发时候，采用其他人开发出来的servlet类，我们使用它的jar进行导入到我们的工程之中，然后它设置的servlet必须注册某一个参数才可以使用，否则爆出异常；</p>\n<p>如何声明init-params和init-values？</p>\n<blockquote>\n<p>在Web.xml中的servlet元素中加入<code>&lt;init-param&gt;&lt;param-name&gt;name&lt;/param-name&gt;&lt;param-value&gt;WeiyiGeek&lt;/param-value&gt;&lt;/init-param&gt;</code>等子元素和孙子元素;</p>\n</blockquote>\n<p>基础示例:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">///HelloWorld/src/cn/weiyigeek/servlet/SevletConfig.java</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> cn.weiyigeek.servlet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Enumeration;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletConfig;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Administrator</span></span><br><span class=\"line\"><span class=\"comment\"> * Descript: 验证ServletConfig的使用获取web.xml配置的信息</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SevletConfig</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServlet</span></span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID = <span class=\"number\">1L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doGet</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse resp)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//1.获得Servlet配置对象专门用于配置servlet的信息</span></span><br><span class=\"line\">    ServletConfig config = getServletConfig();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//2.可以获取具体servlet配置中的名称;</span></span><br><span class=\"line\">    String servletName = config.getServletName();</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"Servlet-Name = \"</span> + servletName);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//3.检测参数是否存在被设置进行非法参数异常抛出(值得学习 illeal 英 /ɪˈliːɡl/ )</span></span><br><span class=\"line\">    String myself = config.getInitParameter(<span class=\"string\">\"WeiyiGeek\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(myself == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalArgumentException(<span class=\"string\">\"在Servlet配置中未找到WeiyiGeek参数，请核验Web.xml文件!\"</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"WeiyiGeek load ....\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//4.获取单个具体参数</span></span><br><span class=\"line\">    String name = config.getInitParameter(<span class=\"string\">\"name\"</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"配置文件中  name 值为\"</span> + name);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//5.遍历配置中设置的多个参数</span></span><br><span class=\"line\">    Enumeration&lt;String&gt; para = config.getInitParameterNames();</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(para.hasMoreElements()) &#123;</span><br><span class=\"line\">      String key = para.nextElement();</span><br><span class=\"line\">      String value = config.getInitParameter(key);</span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"参数\"</span>+key+<span class=\"string\">\",值=\"</span>+value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>web.xml:<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 4.验证ServletConfig配置 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>ServletConfig<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>cn.weiyigeek.servlet.SevletConfig<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">    \t\t<span class=\"tag\">&lt;<span class=\"name\">param-name</span>&gt;</span>WeiyiGeek<span class=\"tag\">&lt;/<span class=\"name\">param-name</span>&gt;</span></span><br><span class=\"line\">    \t\t<span class=\"tag\">&lt;<span class=\"name\">param-value</span>&gt;</span>ServletConfig<span class=\"tag\">&lt;/<span class=\"name\">param-value</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;/<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">    \t\t<span class=\"tag\">&lt;<span class=\"name\">param-name</span>&gt;</span>name<span class=\"tag\">&lt;/<span class=\"name\">param-name</span>&gt;</span></span><br><span class=\"line\">    \t\t<span class=\"tag\">&lt;<span class=\"name\">param-value</span>&gt;</span>WeiyiGeek<span class=\"tag\">&lt;/<span class=\"name\">param-value</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;/<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">    \t\t<span class=\"tag\">&lt;<span class=\"name\">param-name</span>&gt;</span>age<span class=\"tag\">&lt;/<span class=\"name\">param-name</span>&gt;</span></span><br><span class=\"line\">    \t\t<span class=\"tag\">&lt;<span class=\"name\">param-value</span>&gt;</span>88<span class=\"tag\">&lt;/<span class=\"name\">param-value</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;/<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>ServletConfig<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    \t<span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/config<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>执行结果:<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200217125744.png\" alt=\"WeiyiGeek.Servlet配置对象\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Servlet配置对象</p>\n            </figure></p>\n<p><br></p>\n<h5 id=\"5-Servlet配置方式\"><a href=\"#5-Servlet配置方式\" class=\"headerlink\" title=\"5.Servlet配置方式\"></a>5.Servlet配置方式</h5><p>描述:Servlet 配置方式常用的有三种:<br><strong>1) 全路径匹配</strong></p>\n<blockquote>\n<p>web.xml 中的 <code>&lt;servlet&gt; &lt;/servlet&gt;</code> 标签中以 / 开始 /a 或者 /aa/bb<br>访问: 127.0.0.1:8080/项目名称/aa//bb 访问即可</p>\n</blockquote>\n<p><strong>2）路径匹配，前版本匹配</strong></p>\n<blockquote>\n<p>以 / 开始，但是以 <em> 结束 /a/</em> 或者 /*;<br>访问: localhost:8080/项目名称/aa/bb</p>\n</blockquote>\n<p><strong>3) 以扩展名开始</strong></p>\n<blockquote>\n<p>没有 / 而是以 <em> 开始 </em>.扩展名称，比如 *.aa 或者 .bb<br>访问:localhost:8080/项目名称/weiyigeek.aa</p>\n</blockquote>\n<BR>\n\n<p>在下面我演示Servlet的第二种配置方式：</p>\n<ul>\n<li>1.右键新建立一个Servlet文件，需要您提供包package和类名称；</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200223141546.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n<ul>\n<li><p>2.删除建立的ServletMethod文件中不需要的方法，并且查看web.xml 默认生成的servlet配置；</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">display-name</span>&gt;</span>ServletMethod<span class=\"tag\">&lt;/<span class=\"name\">display-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>ServletMethod<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>cn.weiyigeek.servlet.ServletMethod<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>ServletMethod<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/ServletMethod<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>3.验证上面的配置方式的一种将<code>url-pattern</code>进行更改</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-- 1. <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/aa/bb<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">-- 2. <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/aa/*<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">-- 3. <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>*.weiyigeek<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>执行结果:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.weiyigeek.servlet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Servlet implementation（实现） class ServletMethod</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ServletMethod</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServlet</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID = <span class=\"number\">1L</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@see</span> HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">    response.getWriter().append(<span class=\"string\">\"Served at: \"</span>).append(request.getContextPath());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"有人访问了一个请求...!！\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@see</span> HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">    doGet(request, response);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200223142928.png\" alt=\"WeiyiGeek.Servlet配置方式\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Servlet配置方式</p>\n            </figure></p>\n<hr>\n\n<h4 id=\"0x05-Servlet进阶\"><a href=\"#0x05-Servlet进阶\" class=\"headerlink\" title=\"0x05 Servlet进阶\"></a>0x05 Servlet进阶</h4><h5 id=\"1-ServletContext对象\"><a href=\"#1-ServletContext对象\" class=\"headerlink\" title=\"1.ServletContext对象\"></a>1.ServletContext对象</h5><p>描述:每个JAVA虚拟机中的WEB application应用工程只有一个ServletContext对象，简单的说就是不管在哪一个servlet里面获得到的这个类的对象都是同一个；</p>\n<p>ServletContext对象的作用</p>\n<ul>\n<li>1.获取全局配置参数</li>\n<li>2.获取Web工程中的资源</li>\n<li>3.存取数据Servlet间共享数据（域对象）</li>\n</ul>\n<p><strong>ServletContext 生命周期</strong><br>问题:ServletContext何时创建，何时销毁？</p>\n<blockquote>\n<p>创建:服务器启动的时候，会为托管的每一个Web应用程序，创建一个ServletContext对象；<br>销毁:从服务器移除托管或者是关闭服务器；</p>\n</blockquote>\n<p><em>ServletContext 作用范围</em>：同一个项目之中共享数据，但是如果是不同的项目之间存取值是不一样的(取不到)，因为ServletContext的对象不同;</p>\n<p><br></p>\n<p><strong>1) 采用ServletContext获取资源文件</strong><br>在工程中的web.xml中建立的context-param参数是全局的上下文参数或者在WebContext中建立一个文件夹存储Properties文件;<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 1.在Servlet中采用getServletContext获取对象--&gt;</span></span><br><span class=\"line\">ServletContext context = getServletContext();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 2.全局上下文参数--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">context-param</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;<span class=\"name\">param-name</span>&gt;</span>name<span class=\"tag\">&lt;/<span class=\"name\">param-name</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;<span class=\"name\">param-value</span>&gt;</span>WeiyiGeek<span class=\"tag\">&lt;/<span class=\"name\">param-value</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">context-param</span>&gt;</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">context-param</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">param-name</span>&gt;</span>age<span class=\"tag\">&lt;/<span class=\"name\">param-name</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;<span class=\"name\">param-value</span>&gt;</span>100<span class=\"tag\">&lt;/<span class=\"name\">param-value</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">context-param</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!--3.在WebContext目录中建立一个目录和prop文件--&gt;</span></span><br><span class=\"line\">Config/WeiyiGeek.Properties;</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p>基础示例:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.weiyigeek.servlet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileNotFoundException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Properties;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Servletcontext1</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServlet</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID = <span class=\"number\">1L</span>;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//方式1:ServletContext获取资源文件</span></span><br><span class=\"line\">    Scmethod1(response);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//方式2:ServletContext + Propersties 获取资源文件</span></span><br><span class=\"line\">    Scmethod2(response);</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//方式3:ServletContext资源文件获取</span></span><br><span class=\"line\">    ServletContext sc = getServletContext();</span><br><span class=\"line\">    Properties prop = <span class=\"keyword\">new</span> Properties();</span><br><span class=\"line\">    <span class=\"comment\">//给相对路径然后直接获取文件绝对地址和读取文件转化成为流对象</span></span><br><span class=\"line\">    InputStream is = sc.getResourceAsStream(<span class=\"string\">\"Config/WeiyiGeek.Properties\"</span>); </span><br><span class=\"line\">    prop.load(is);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"\\n方式三:ServletContext资源文件获取\\n\"</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"Name = \"</span> + prop.getProperty(<span class=\"string\">\"name\"</span>) + <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"Age = \"</span> + prop.getProperty(<span class=\"string\">\"age\"</span>));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">//方式2</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Scmethod2</span><span class=\"params\">(HttpServletResponse response)</span> <span class=\"keyword\">throws</span> FileNotFoundException, IOException </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//1.获取上下文对象</span></span><br><span class=\"line\">    ServletContext context = getServletContext();</span><br><span class=\"line\">    <span class=\"comment\">//2.或者Properties中的参数值采用ServletContext进行读取</span></span><br><span class=\"line\">    Properties prop = <span class=\"keyword\">new</span> Properties();</span><br><span class=\"line\">    String proppath = context.getRealPath(<span class=\"string\">\"Config/WeiyiGeek.Properties\"</span>); <span class=\"comment\">//获取到了WeiyiGeek.Properties绝对路径</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"Properties 配置文件路径 = \"</span> + proppath);</span><br><span class=\"line\">    <span class=\"comment\">//Properties 配置文件路径 = D:\\apache-tomcat-7.0.100\\wtpwebapps\\HelloWorld\\Config\\WeiyiGeek.Properties</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//3.指定properties数据源(但是需要注意这里是web应用，如果想获取web工程的下资源需要采用ServletContext获取配置文件路径)</span></span><br><span class=\"line\">    InputStream is = <span class=\"keyword\">new</span> FileInputStream(proppath);</span><br><span class=\"line\">    prop.load(is);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//4.获取属性的值</span></span><br><span class=\"line\">    String name = prop.getProperty(<span class=\"string\">\"name\"</span>);</span><br><span class=\"line\">    String age = prop.getProperty(<span class=\"string\">\"age\"</span>);</span><br><span class=\"line\">    response.getWriter().append(<span class=\"string\">\"\\n ------------------ \\n\"</span>);</span><br><span class=\"line\">    response.getWriter().append(<span class=\"string\">\"ServletContext-&gt; Properties Param Name = \"</span>).append(name  + <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">    response.getWriter().append(<span class=\"string\">\"ServletContext-&gt; Properties Param Age = \"</span>).append(age);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">//方式1</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Scmethod1</span><span class=\"params\">(HttpServletResponse response)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//1.获取上下文对象</span></span><br><span class=\"line\">    ServletContext context = getServletContext();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//2.获取web.xml中Context-param中设置全局配置参数的key和value;</span></span><br><span class=\"line\">    response.getWriter().append(<span class=\"string\">\"ServletContext Param Name = \"</span>).append(context.getInitParameter(<span class=\"string\">\"name\"</span>) + <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">    response.getWriter().append(<span class=\"string\">\"ServletContext Param Age = \"</span>).append(context.getInitParameter(<span class=\"string\">\"age\"</span>));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200223154642.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p><br></p>\n<p><em>注意事项:</em></p>\n<ul>\n<li>1.在Web工程按照我们前面学习的Properites进行读取配置文件是不行，如果您将prop文件建立在src中在web项目部署的时候会保存到WEB-INF/CLASSES/目录中，导致FileInputStream不能够正常读取到该文件则properties方式也不能获取到参数的值，因为此时FIleInputStream流程读取是bin/src/xxx.Properties；</li>\n<li>2.解决注意1的方式是采用ServletContext中的getRealPath方法获取到webContext的绝对路径，然后在指定dir/xx.Properties之后常规读取即可</li>\n<li>3.对注意2进行优化可以直接采用ServletContext中的getResoureAsStream方法读取文件流，然后采用prop.load()加载此对象即可;</li>\n</ul>\n<p><br></p>\n<p><strong>2) 使用ClassLoader获取资源文件</strong><br>描述:采用ClassLoader可以直接读取当前工程下的字节码文件和配置文件；</p>\n<p>基础案例:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.weiyigeek.servlet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Properties;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Servletcontext2</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServlet</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID = <span class=\"number\">1L</span>;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//1.打印getClassLoader路径</span></span><br><span class=\"line\">    System.out.println(<span class=\"keyword\">this</span>.getClass().getClassLoader());</span><br><span class=\"line\">    </span><br><span class=\"line\">       <span class=\"comment\">//2.实例化Properties和InputStream对象</span></span><br><span class=\"line\">    Properties prop = <span class=\"keyword\">new</span> Properties();</span><br><span class=\"line\">    InputStream is = <span class=\"keyword\">this</span>.getClass().getClassLoader().getResourceAsStream(<span class=\"string\">\"../../Config/WeiyiGeek.Properties\"</span>);</span><br><span class=\"line\">    prop.load(is);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"姓名:\"</span> + prop.getProperty(<span class=\"string\">\"name\"</span>) + <span class=\"string\">\",年龄 : \"</span> + prop.getProperty(<span class=\"string\">\"age\"</span>) );</span><br><span class=\"line\">    is.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>访问:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#运行结果：</span></span><br><span class=\"line\">WebappClassLoader</span><br><span class=\"line\">  context: /HelloWorld</span><br><span class=\"line\">  delegate: <span class=\"literal\">false</span></span><br><span class=\"line\">  repositories:</span><br><span class=\"line\">    /WEB-INF/classes/   <span class=\"comment\">#因为默认是在这个目录之中，而我们建立的是在WebContext中则需要两次回到上级目录之中</span></span><br><span class=\"line\">----------&gt; Parent Classloader:</span><br><span class=\"line\">java.net.URLClassLoader@7440e464</span><br><span class=\"line\"></span><br><span class=\"line\">姓名:WeiyiGeek,年龄 : 2020</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>3) ServletContext存取数据</strong><br>描述:此处采用ServletContext进行获取登录成功的总数，具体流程如下:</p>\n<ol>\n<li>获取提交过来的数据</li>\n<li>判断账号密码数据是否有误</li>\n<li>如果正确进行页面的跳转并且输出”该用户是网站成功登陆的第几人”，采用Servlet记录其值;</li>\n<li>如果错误输出”登录失败”；</li>\n</ol>\n<p>补充说明:一个请求URL对应一个Servlet文件进行处理;</p>\n<p>基础语法说明:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//获取设置的属性值</span></span><br><span class=\"line\">getServletContext().getAttribute(<span class=\"string\">\"key\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//设置属性值</span></span><br><span class=\"line\">getServletContext().setAttribute(<span class=\"string\">\"key\"</span>,value);</span><br></pre></td></tr></table></figure></p>\n<p>实例演示:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//Servlet Class 类</span></span><br><span class=\"line\">Login</span><br><span class=\"line\">CountTotal</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//HTML页面</span></span><br><span class=\"line\">Login.html</span><br><span class=\"line\">Success.html</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200224220557.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p>基础代码:<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- Login.html --&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 注意 action 这里由于login.html 与 Login 是处于同一级目录的，您也可以写 /项目名称/Login --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"Login\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"get\"</span>&gt;</span></span><br><span class=\"line\">  用户名:<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span>/&gt;</span></span><br><span class=\"line\">  密    码:<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"登录\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- Success.html --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span> 尊敬的用户您已成功登陆! <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">hr</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"CountTotal\"</span>&gt;</span>获取成功登陆的次数<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>java代码:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//Servlet -&gt; Login</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Login</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServlet</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID = <span class=\"number\">1L</span>;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//1.获取登录页面传递的参数</span></span><br><span class=\"line\">    String user = request.getParameter(<span class=\"string\">\"username\"</span>);</span><br><span class=\"line\">    String pass = request.getParameter(<span class=\"string\">\"password\"</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"Get 请求获取的参数 ：user = \"</span> + user + <span class=\"string\">\"?pass = \"</span> + pass );</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//2.判断用户输入账号密码是否正确</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"string\">\"admin\"</span>.equals(user) &amp;&amp; <span class=\"string\">\"123\"</span>.equals(pass)) </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"comment\">//3.登录成功在响应和终端控制台进行打印</span></span><br><span class=\"line\">      response.getWriter().append(<span class=\"string\">\"登录成功!\"</span>);</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"comment\">//4.记录和获取在Servlet中存储登录成功的值</span></span><br><span class=\"line\">      <span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">      Object ob = getServletContext().getAttribute(<span class=\"string\">\"total\"</span>); <span class=\"comment\">//获取ServletContext属性</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(ob != <span class=\"keyword\">null</span> )</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        count = (<span class=\"keyword\">int</span>) ob;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      getServletContext().setAttribute(<span class=\"string\">\"total\"</span>, ++count); <span class=\"comment\">//设置存储ServletContext属性</span></span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"登录成功! 您累积成功登陆 \"</span> + count +<span class=\"string\">\"次\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//5.设置登录成功跳转页面</span></span><br><span class=\"line\">      response.setStatus(<span class=\"number\">302</span>); <span class=\"comment\">//设置状态码</span></span><br><span class=\"line\">      response.setHeader(<span class=\"string\">\"Location\"</span>, <span class=\"string\">\"success.html\"</span>); <span class=\"comment\">//设置跳转头</span></span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      response.getWriter().print(<span class=\"string\">\"登录失败,账号或者密码错误!\"</span>);</span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"账号或者密码错误!\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//Servlet -&gt; CountTotal</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//1.在ServletContext中获取成功登陆的次数</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> total = (<span class=\"keyword\">int</span>) getServletContext().getAttribute(<span class=\"string\">\"total\"</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//2.打印输出成功的次数</span></span><br><span class=\"line\">    response.getWriter().append(<span class=\"string\">\"尊敬的用户您成功登陆 \"</span> + total +<span class=\"string\">\" 次\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200224224525.png\" alt=\"WeiyiGeek.\"></p>\n<p><br></p>\n<h5 id=\"2-HttpServletRequest\"><a href=\"#2-HttpServletRequest\" class=\"headerlink\" title=\"2.HttpServletRequest\"></a>2.HttpServletRequest</h5><p><strong>1) Request获取请求头</strong><br>基础语法:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">request.getHeaderNames(); <span class=\"comment\">//返回一个枚举合集Enumeration请求头</span></span><br><span class=\"line\">request.getHeader(<span class=\"string\">\"请求头部\"</span>); <span class=\"comment\">//获取该请求的响应头值</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>2) Request请求信息提取</strong><br>基础语法:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">System.out.println(<span class=\"string\">\"当前客户端协议  ：\"</span> + request.getProtocol());</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"当前请求编码 ：\"</span> + request.getCharacterEncoding());</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"项目名称 :\"</span> + request.getContextPath());</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"项目URL:\"</span> + request.getRequestURI());</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"本机信息 ：\"</span> + request.getLocalName() + <span class=\"string\">\" - \"</span> + request.getLocalAddr()  + <span class=\"string\">\" - \"</span> + request.getLocalPort());</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"客户端信息 : \"</span> + request.getRemoteUser() + <span class=\"string\">\" - \"</span> + request.getRemoteAddr() + <span class=\"string\">\" - \"</span> + request.getRemoteHost() + <span class=\"string\">\" - \"</span> + request.getRemotePort());</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>3) Request请求数据拿取</strong><br>基础语法:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//请求参数值获取单个</span></span><br><span class=\"line\">request.getParameter(<span class=\"string\">\"key\"</span>)</span><br><span class=\"line\"><span class=\"comment\">//方式1.获取多个请求参数为集合</span></span><br><span class=\"line\">request.getParameterMap();  <span class=\"comment\">// Map Set Iterator 等</span></span><br><span class=\"line\"><span class=\"comment\">//方式2：获取多个请求参数为集合</span></span><br><span class=\"line\">request.getParameterNames(); <span class=\"comment\">// 获得参数名称</span></span><br><span class=\"line\">request.getParameterValues(<span class=\"string\">\"key\"</span>) <span class=\"comment\">//利用参数名称查询其值</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>4) Request请求中文乱码解决</strong><br>描述:在客户端进行Get/POST请求的时候在URL地址已经经过了url编码，而Tomcat获取到的这批数据getParameter默认使用ISO-8859-1去解码,所以会导致答应中文乱码;</p>\n<p>解决办法:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.终端/网页显示不乱码（推荐形式-成功）</span></span><br><span class=\"line\">String val = <span class=\"keyword\">new</span> String(value[i].getBytes(<span class=\"string\">\"ISO-8859-1\"</span>),<span class=\"string\">\"utf-8\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2.网页回显不乱码（POST 请求 - 未验证成功）</span></span><br><span class=\"line\">request.setCharacterEncoding(<span class=\"string\">\"UTF-8\"</span>);  <span class=\"comment\">//输入的格式不乱码 （需要写在获取参数之前 - POST 请求使用）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//3.直接在Tomcat中进行配置以后GET请求的数据永远都是UTF-8编码</span></span><br><span class=\"line\"><span class=\"comment\">//conf/server.xml</span></span><br><span class=\"line\">&lt;Connector connectionTimeout=<span class=\"string\">\"20000\"</span> port=<span class=\"string\">\"8080\"</span> protocol=<span class=\"string\">\"HTTP/1.1\"</span> redirectPort=<span class=\"string\">\"8443\"</span> URLEncoding=<span class=\"string\">\"UTF-8\"</span> /&gt;</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p>基础示例(1):<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.weiyigeek.httpServletRequest;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Enumeration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServlet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HttpHeader</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServlet</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID = <span class=\"number\">1L</span>;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//0.采用网页进行回显</span></span><br><span class=\"line\">    request.setCharacterEncoding(<span class=\"string\">\"utf-8\"</span>);  <span class=\"comment\">//输入的格式不乱码</span></span><br><span class=\"line\">    response.setContentType(<span class=\"string\">\"text/html\"</span>);   <span class=\"comment\">//输出格式</span></span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"comment\">//1.枚举集合</span></span><br><span class=\"line\">    response.getWriter().append(<span class=\"string\">\"------- 请求头获取  ------- &lt;br/&gt;\"</span>);</span><br><span class=\"line\">    Enumeration&lt;String&gt; headers = request.getHeaderNames();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//2.循环迭代请求头</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(headers.hasMoreElements())</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      String reqname = headers.nextElement();</span><br><span class=\"line\">      String reqvalue = request.getHeader(reqname);</span><br><span class=\"line\">      <span class=\"comment\">//3.向网页中进行输出</span></span><br><span class=\"line\">      response.getWriter().append(reqname + <span class=\"string\">\":\"</span> + reqvalue + <span class=\"string\">\"&lt;br/&gt;\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    response.getWriter().append(<span class=\"string\">\"&lt;br/&gt; ------- 获取多个参数 ------- &lt;br/&gt;\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">//4.方式1：获取多个请求参数(值得学习)</span></span><br><span class=\"line\">    Map&lt;String, String[]&gt; map= request.getParameterMap(); <span class=\"comment\">//map 集合</span></span><br><span class=\"line\">    Set&lt;String&gt; keySet = map.keySet();  <span class=\"comment\">//Set 集合</span></span><br><span class=\"line\">    Iterator&lt;String&gt; iterator = keySet.iterator(); <span class=\"comment\">//迭代器</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(iterator.hasNext()) &#123;</span><br><span class=\"line\">      String key = (String) iterator.next();</span><br><span class=\"line\">      String[] value = map.get(key);  <span class=\"comment\">//默认以首次出现的参数名称为准</span></span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"comment\">//5.验证存在多个相同的参数</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(value.length &gt; <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; value.length; i++) &#123;</span><br><span class=\"line\">          String val = <span class=\"keyword\">new</span> String(value[i].getBytes(<span class=\"string\">\"ISO-8859-1\"</span>),<span class=\"string\">\"utf-8\"</span>); <span class=\"comment\">// 防止输入输出的中文乱码(终端|网页)</span></span><br><span class=\"line\">          response.getWriter().append(key+ <span class=\"string\">\":\"</span> + val + <span class=\"string\">\"&lt;br/&gt;\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        response.getWriter().append(key+ <span class=\"string\">\":\"</span> + value[<span class=\"number\">0</span>] + <span class=\"string\">\"&lt;br/&gt;\"</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//6.方式2：获取请求的参数(中文输出不乱码)</span></span><br><span class=\"line\">  \t    Enumeration&lt;String&gt; para = request.getParameterNames();</span><br><span class=\"line\">  \t    <span class=\"keyword\">while</span>(para.hasMoreElements())</span><br><span class=\"line\">  \t    &#123;</span><br><span class=\"line\">  \t    \tString paraname = para.nextElement();</span><br><span class=\"line\">  \t    \tString[] value = request.getParameterValues(paraname);</span><br><span class=\"line\">  \t    \t<span class=\"keyword\">if</span>(value.length &gt; <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">  \t    \t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; value.length; j++) &#123;</span><br><span class=\"line\">  \t  \t\t\t\tString val = <span class=\"keyword\">new</span> String(value[j].getBytes(<span class=\"string\">\"ISO-8859-1\"</span>),<span class=\"string\">\"utf-8\"</span>); <span class=\"comment\">// 防止输入输出的中文乱码(终端|网页)</span></span><br><span class=\"line\">  \t  \t    \t\tSystem.out.println(paraname +  <span class=\"string\">\" = \"</span> + val);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">  \t    \t&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">  \t    \t\t System.out.println(paraname +  <span class=\"string\">\" = \"</span> + value[<span class=\"number\">0</span>] + <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  \t    \t&#125;</span><br><span class=\"line\">  \t    &#125;\t\t</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200225162216.png\" alt=\"WeiyiGeek.执行结果\" title=\"\" class=\"\">\n                <p>WeiyiGeek.执行结果</p>\n            </figure>\n<p><br></p>\n<p>基础示例(2):POST请求验证输入输出不乱码和请求信息获取;<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HttpPostInfo</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServlet</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID = <span class=\"number\">1L</span>;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//2.POST请求输出不乱码</span></span><br><span class=\"line\">    request.setCharacterEncoding(<span class=\"string\">\"UTF-8\"</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//3.获取输出POST请求的参数</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"编码设置后 ---  name = \"</span> + <span class=\"keyword\">new</span> String(request.getParameter(<span class=\"string\">\"name\"</span>).getBytes(<span class=\"string\">\"ISO-8859-1\"</span>),<span class=\"string\">\"UTF-8\"</span>) + <span class=\"string\">\"\\n----\"</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//4.获取客户端的信息</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"当前客户端协议  ：\"</span> + request.getProtocol());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"当前请求编码 ：\"</span> + request.getCharacterEncoding());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"项目名称 :\"</span> + request.getContextPath());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"项目URL:\"</span> + request.getRequestURI());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"本机信息 ：\"</span> + request.getLocalName() + <span class=\"string\">\" - \"</span> + request.getLocalAddr()  + <span class=\"string\">\" - \"</span> + request.getLocalPort());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"客户端信息 : \"</span> + request.getRemoteUser() + <span class=\"string\">\" - \"</span> + request.getRemoteAddr() + <span class=\"string\">\" - \"</span> + request.getRemoteHost() + <span class=\"string\">\" - \"</span> + request.getRemotePort());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//1.POST 请求入口</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"POST 请求.....\"</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"编码设置前 ---  name = \"</span> + request.getParameter(<span class=\"string\">\"name\"</span>));</span><br><span class=\"line\">    doGet(request, response);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//基础信息</span></span><br><span class=\"line\">POST 请求.....</span><br><span class=\"line\">编码设置前 ---  name = ??????</span><br><span class=\"line\">编码设置后 ---  name = 张伟</span><br><span class=\"line\">----</span><br><span class=\"line\">当前客户端协议  ：HTTP/<span class=\"number\">1.1</span></span><br><span class=\"line\">当前请求编码 ：UTF-<span class=\"number\">8</span></span><br><span class=\"line\">项目名称 :/HelloWorld</span><br><span class=\"line\">项目URL:/HelloWorld/HttpPostInfo</span><br><span class=\"line\">本机信息 ：HackOne - <span class=\"number\">192.168</span>.1.3 - <span class=\"number\">8080</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"3-HttpServletResponse\"><a href=\"#3-HttpServletResponse\" class=\"headerlink\" title=\"3.HttpServletResponse\"></a>3.HttpServletResponse</h5><p>描述: 服务器端返回给客户端的内容信息;<br><strong>1) 响应数据</strong><br>基础语法:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">response.getWriter().write(<span class=\"string\">\"&lt;h1&gt;字符集&lt;/h1&gt;\"</span>); <span class=\"comment\">//以字符流的方式写数据</span></span><br><span class=\"line\">response.getOutputStream().write(<span class=\"string\">\"Hello World!\"</span>.getBytes()); <span class=\"comment\">//字节流的方式写数据</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>2) 响应中文乱码</strong><br>描述:在请求响应中有中文字符乱码的存在，在使用Tomcat的Servlet进行写出去的文字默认是以ISO-8859-1编码写出，所以我们需要采用指定编码进行写出防止乱码；<br>基础语法:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 以字符流的方式 </span></span><br><span class=\"line\">response.setHeader(<span class=\"string\">\"Content-type\"</span>,<span class=\"string\">\"text/html; charset=UTF-8\"</span>); <span class=\"comment\">//规定浏览器显示什么编码</span></span><br><span class=\"line\">response.setCharacterEncoding(<span class=\"string\">\"UTF-8\"</span>); <span class=\"comment\">//响应内容编码（根据浏览器有关）</span></span><br><span class=\"line\">response.getWriter().write(<span class=\"string\">\"&lt;h1&gt;字符集&lt;/h1&gt;\"</span>); <span class=\"comment\">//以字符流的方式写数据</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 以字节流的方式</span></span><br><span class=\"line\">response.setContentType(<span class=\"string\">\"text/html; charset=UTF-8\"</span>);   <span class=\"comment\">//响应内容格式和编码</span></span><br><span class=\"line\">response.getOutputStream().write(<span class=\"string\">\"中文字符串\"</span>.getBytes(<span class=\"string\">\"UTF-8\"</span>)); <span class=\"comment\">//默认输出是UTF-8</span></span><br></pre></td></tr></table></figure></p>\n<p>总结:</p>\n<ul>\n<li>不管是字节流还是字符流直接使用setContentType()方法进行响应格式和编码，之后直接写数据即可;</li>\n</ul>\n<p><br></p>\n<p><strong>3) 响应头设置</strong></p>\n<p>基础语法:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">response.setStatus(<span class=\"number\">302</span>) <span class=\"comment\">//响应状态码设置</span></span><br><span class=\"line\">response.setHeader(<span class=\"string\">\"Location\"</span>,<span class=\"string\">\"WeiyiGeek.top\"</span>) <span class=\"comment\">//响应头设置</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>4) Servlet请求重定向和转发</strong><br>描述:重定向与转发的区别;</p>\n<ul>\n<li>1.客户端显示URL不同:前者重定向的地址(<code>此时request对象存储的数据中原来的参数将不会被带人</code>)，后者用户访问的Servlet地址（<code>会将参数一起待入到转发的页面</code>）;</li>\n<li>2.请求次数的不同:前者由于返回302状态码Clint请求了两次,后者只请求了一次;</li>\n<li>3.跳转的限制:前者任意工程跳转，后者自己项目工程调整;</li>\n<li>4.效率对比:前者效率较后者低;</li>\n</ul>\n<p>基础语法:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//重定向早期案例</span></span><br><span class=\"line\">response.setStatus(<span class=\"number\">302</span>);</span><br><span class=\"line\">response.setHeader(<span class=\"string\">\"Location\"</span>,<span class=\"string\">\"Login_Success.html\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//重定向常用案例（即重新定位方向即Login_Success.html网页地址）</span></span><br><span class=\"line\">response.sendRedirect(<span class=\"string\">\"Login_Success.html\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//请求转发案例（但是请求的URL还是原地址不是Login_Success.html，服务器内部进行处理了后续的工作）</span></span><br><span class=\"line\"><span class=\"comment\">//带参数和跳转位置进行拼接到请求的Servlet</span></span><br><span class=\"line\">response.getRequestDispatcher(<span class=\"string\">\"Login_Success.html\"</span>).forward(request,response);</span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200226123229.png\" alt=\"WeiyiGeek.区别\" title=\"\" class=\"\">\n                <p>WeiyiGeek.区别</p>\n            </figure>\n<p><br></p>\n<p><strong>5) 资源下载</strong></p>\n<ul>\n<li>1.采用超连接的形式下载定位静态资源，但是遇到jpg或者txt类型的数据还是可以下载，只不过要右键另存为，所以当我们没有写Servlet文件进行处理，也能进行解析，原因是由于Tomcat里有个默认的Servlet叫DefaultServlet专门处理放在Tomcat服务器上的静态资源;</li>\n<li>2.手动编码进行下载，设置响应头<code>Content-Disposition: attachment; filename=&quot;文件名称&quot;</code>;</li>\n</ul>\n<p>基础示例:资源下载<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HttpFileDown</span> <span class=\"keyword\">extends</span> <span class=\"title\">HttpServlet</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">long</span> serialVersionUID = <span class=\"number\">1L</span>;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//1.返回给客户端的文字内容使用的默认编码</span></span><br><span class=\"line\">    response.setCharacterEncoding(<span class=\"string\">\"UTF-8\"</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//2.指定浏览器解析数据的格式和编码</span></span><br><span class=\"line\">    <span class=\"comment\">//response.setHeader(\"Content-Type\", \"text/html; charset=UTF-8\");</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//3.采用字符流进行输出中文不乱码</span></span><br><span class=\"line\">    String filename = <span class=\"keyword\">new</span> String(request.getParameter(<span class=\"string\">\"filename\"</span>).getBytes(<span class=\"string\">\"ISO-8859-1\"</span>),<span class=\"string\">\"UTF-8\"</span>); <span class=\"comment\">//下载文件带中文字符</span></span><br><span class=\"line\">    <span class=\"comment\">//response.getWriter().write(\"1.字符流（方式）：当前您下载的文件是  \" +  filename + \"&lt;br/&gt;\");</span></span><br><span class=\"line\">        <span class=\"comment\">//String csn = Charset.defaultCharset().name();\t\t//getBytes()默认码表</span></span><br><span class=\"line\">        <span class=\"comment\">//response.getWriter().append(\"2.getBytes()默认码表:\" + csn);</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//4.采用字节流进行指定编码输出中文不乱码（其实getBytes()方法的默认码表就是UTF-8与Tomcat默认码表无关系）</span></span><br><span class=\"line\">    <span class=\"comment\">//response.setContentType(\"text/html; charset=UTF-8\");   //响应内容格式和编码</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    String path = getServletContext().getRealPath(<span class=\"string\">\"Config/\"</span>+filename);</span><br><span class=\"line\">    String name = <span class=\"string\">\"3.字节流（方式）：当前您下载的文件路径是  ：\"</span>  + path; </span><br><span class=\"line\">    <span class=\"comment\">//response.getOutputStream().write(name.getBytes(\"UTF-8\"));  //注意不能和字符流同时存在；</span></span><br><span class=\"line\">    <span class=\"comment\">//response.getOutputStream().print(name);</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//5.设置下载文件的响应头并且如果存在中文名称需要对其进行编码；</span></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">\t\t * 如果IE或者Chrome使用的URLEncoding编码</span></span><br><span class=\"line\"><span class=\"comment\">\t\t      如果是Firefox使用的是base64编码</span></span><br><span class=\"line\"><span class=\"comment\">\t\t */</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    String clientType = request.getHeader(<span class=\"string\">\"User-Agent\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">//注意大小写，当然为了方便您可以</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(clientType.contains(<span class=\"string\">\"Firefox\"</span>)) </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      filename = base64EncodeFileName(filename);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      filename = URLEncoder.encode(filename,<span class=\"string\">\"UTF-8\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    response.setHeader(<span class=\"string\">\"Content-Disposition\"</span>, <span class=\"string\">\"attachment; filename=\"</span>+filename);\t<span class=\"comment\">//返回文件中文不乱码</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//6.读取文件到字节流然后进行下载</span></span><br><span class=\"line\">    InputStream is = <span class=\"keyword\">new</span> FileInputStream(path); <span class=\"comment\">//采用绝对路径进行读取文件</span></span><br><span class=\"line\">    OutputStream os = response.getOutputStream(); </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span> len = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">byte</span>[] buf = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">    <span class=\"keyword\">while</span>((len = is.read(buf)) != -<span class=\"number\">1</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"comment\">//7.写出文件</span></span><br><span class=\"line\">      os.write(buf, <span class=\"number\">0</span>, len);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//8.关闭输入输出流</span></span><br><span class=\"line\">    os.close();</span><br><span class=\"line\">    is.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doPost</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">    doGet(request, response);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">//进行Base64编码</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">base64EncodeFileName</span><span class=\"params\">(String fileName)</span> </span>&#123;</span><br><span class=\"line\">    BASE64Encoder base64Encoder = <span class=\"keyword\">new</span> BASE64Encoder();</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">\"=?UTF-8?B?\"</span> + <span class=\"keyword\">new</span> String(base64Encoder.encode(fileName.getBytes(<span class=\"string\">\"UTF-8\"</span>))) + <span class=\"string\">\"?=\"</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">      <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(e);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>执行结果:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#使用getWriter()</span></span><br><span class=\"line\">1.字符流（方式）：当前您下载的文件是 WeiyiGeek.Properties</span><br><span class=\"line\">2.getBytes()默认码表:GBK</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#使用getOutPutStream() 注意不能和字符流同时存在</span></span><br><span class=\"line\">3.字节流（方式）：当前您下载的文件路径是  ：D:\\apache-tomcat-7.0.100\\wtpwebapps\\HelloWorld\\Config\\WeiyiGeek.Properties</span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200226011304.png\" alt=\"WeiyiGeek.执行结果\" title=\"\" class=\"\">\n                <p>WeiyiGeek.执行结果</p>\n            </figure>\n<p>注意事项:</p>\n<ul>\n<li>针对于浏览器类型对下载的文件名称做编码处理，Fire采用Base64编码而IE和Google采用URLEncoding编码</li>\n</ul>\n<hr>\n\n<h4 id=\"0x06-本文总结\"><a href=\"#0x06-本文总结\" class=\"headerlink\" title=\"0x06 本文总结\"></a>0x06 本文总结</h4><p><strong>ServletContext</strong><br>介绍:什么是ServletContext?</p>\n<ul>\n<li>答:服务器在启动的时候给每一个应用程序都创建一个ServletContext，并且有且只有一个；</li>\n</ul>\n<p>作用:有什么用?</p>\n<ul>\n<li>答:获取全局参数 / 获取工程下的资源 / 存取数据和共享数据</li>\n</ul>\n<p>例子:怎么用?<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//获取全局参数</span></span><br><span class=\"line\">getServletContext().getInitParams();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取工程下的资源</span></span><br><span class=\"line\">getServletContext().getRealPath();</span><br><span class=\"line\">getServletContext().getResourceAsStream();</span><br><span class=\"line\"><span class=\"keyword\">this</span>.getClass().getClassLoader();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//存取的数据(在同一工程下)</span></span><br><span class=\"line\">getServletContext.setAttribute()</span><br><span class=\"line\">getServletContext.getAttribute()</span><br></pre></td></tr></table></figure></p>\n<p>实际问题:为什么使用它会产生这个样的样子，其中有其他的参数;</p>\n<p><br></p>\n<p><strong>ServletConfig</strong><br>介绍:什么是ServletConfig?</p>\n<ul>\n<li>答:是在项目启动部署的时候我们在web.xml中进行对Servlet的配置当我们需要获取Servlet配置信息的时候就需要它;</li>\n</ul>\n<p>作用:有什么用?</p>\n<ul>\n<li>答:获取在Servlet配置web.xml文件中参数;</li>\n</ul>\n<p>例子:怎么用?<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//获取Web.xml中的Servlet配置信息</span></span><br><span class=\"line\">getServletConfig().getInitParams();</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>HttpServletResquest</strong><br>介绍:</p>\n<ul>\n<li>答:一个请求对象用于封装客户端提交过来的信息；</li>\n</ul>\n<p>作用:</p>\n<ul>\n<li>答:获取头 / 获取客户端参数 / 获取提交过来的数据;</li>\n</ul>\n<p>例子:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">request.getParameter(<span class=\"string\">\"key\"</span>);</span><br></pre></td></tr></table></figure></p>\n<p>存在问题: GET/POST请求乱码（需要设置编码）</p>\n<p><br></p>\n<p><strong>HttpServletResquest</strong><br>介绍:</p>\n<ul>\n<li>答:这是一个响应对象，是服务器要给客户端返回的数据，都靠这个对象来完成;</li>\n</ul>\n<p>作用:</p>\n<ul>\n<li>答:返回不同格式的内容 / 页面状态设置和跳转</li>\n</ul>\n<p>例子：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//返回不同格式(两种方式)</span></span><br><span class=\"line\">response.setHeader(<span class=\"string\">\"Content-Type\"</span>, <span class=\"string\">\"text/html; charset=UTF-8\"</span>);</span><br><span class=\"line\">response.setContentType(<span class=\"string\">\"text/html; charset=UTF-8\"</span>); </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//状态码设置</span></span><br><span class=\"line\">response.setStatus(<span class=\"number\">302</span>);</span><br><span class=\"line\">response.setHeader(<span class=\"string\">\"Location\"</span>,<span class=\"string\">\"\"</span>)</span><br></pre></td></tr></table></figure></p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Java","path":"api/categories/Java.json"}],"tags":[{"name":"Servlet","path":"api/tags/Servlet.json"}]}