{"title":"黑帽编程应用之Python1","slug":"网安大类/黑帽编程/Python/1.黑帽编程应用之Python","date":"2019-07-08T05:36:30.000Z","updated":"2022-03-29T05:39:05.027Z","url":"2019/7-8-428.html","path":"api/articles/2019/7-8-428.html.json","covers":["https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190710165449.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190731162937.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h4 id=\"0x00-前言\"><a href=\"#0x00-前言\" class=\"headerlink\" title=\"0x00 前言\"></a>0x00 前言</h4><p>在安全工作者或者渗透测试中,我们常常需要自己造轮子来写自动化利用的脚本,所以Python脚本能更快的帮助我们编写响应扫描器以及可利用脚本;</p>\n<p>扩展包:</p>\n<ul>\n<li><a href=\"https://www.lfd.uci.edu/~gohlke/pythonlibs/\" target=\"_blank\" rel=\"noopener\">https://www.lfd.uci.edu/~gohlke/pythonlibs/</a></li>\n</ul>\n<h4 id=\"0x01-IP地址处理模块\"><a href=\"#0x01-IP地址处理模块\" class=\"headerlink\" title=\"0x01 IP地址处理模块\"></a>0x01 IP地址处理模块</h4><p>描述：在对很多业务进行扫描的时候,我们可能需要输入一个IP段对其扫描,在写Python脚本中免不了进行IP地址的计算包括网段/网络掩码/广播地址/子网数/IP类型等等;</p>\n<p>因此Python给我们提供了一个强大的第三方模块IPy,安装模块执行<code>pip install IPy</code>即可;</p>\n<p><strong>(1) IP地址/网段基本处理</strong>：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> IPy <span class=\"keyword\">import</span> IP</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#1.分辨IPv4还是IPv6以及IP类型</span></span><br><span class=\"line\">ipv4=IP(<span class=\"string\">'192.168.1.0/24'</span>).version()</span><br><span class=\"line\">ipv6=IP(<span class=\"string\">'::1'</span>).version()</span><br><span class=\"line\"><span class=\"comment\">#4 代表IPv4   6 代表IPv6</span></span><br><span class=\"line\">print(ipv4,<span class=\"string\">\"  \"</span>,ipv6)  <span class=\"comment\"># 4   6 </span></span><br><span class=\"line\">iptype = ip.iptype()  <span class=\"comment\">#'PRIVATE' 代表私有地址</span></span><br><span class=\"line\">IP(<span class=\"string\">'132.54.56.25'</span>).iptype()  <span class=\"comment\">#'PUBLIC'  代表公有地址</span></span><br><span class=\"line\">print(IP(<span class=\"string\">'::1'</span>).iptype())  <span class=\"comment\">#LOOPBACK</span></span><br><span class=\"line\">print(IP(<span class=\"string\">'2001:0658:022a:cafe:0200::1'</span>).iptype())  <span class=\"comment\">#ALLOCATED RIPE NCC</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#2.网段IP数以及IP地址清单</span></span><br><span class=\"line\">ip=IP(<span class=\"string\">'192.168.10.0/24'</span>)</span><br><span class=\"line\">len(ip) <span class=\"comment\">#也是网络子网数</span></span><br><span class=\"line\">print(ip.len()) <span class=\"comment\">#输入该网段的IP数量 256</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> ip:  <span class=\"comment\">#地址清单</span></span><br><span class=\"line\">    print(x)</span><br><span class=\"line\">print(str(ip[<span class=\"number\">2</span>]))</span><br><span class=\"line\"><span class=\"comment\">#打印结果</span></span><br><span class=\"line\"><span class=\"comment\"># 192.168.10.0</span></span><br><span class=\"line\"><span class=\"comment\"># ....</span></span><br><span class=\"line\"><span class=\"comment\"># 192.168.10.255</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#3.IP反向解析名称</span></span><br><span class=\"line\">ip=IP(<span class=\"string\">'192.168.1.8'</span>)</span><br><span class=\"line\">revname = ip.reverseNames() <span class=\"comment\">#['8.1.168.192.in-addr.arpa.']</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4.IP转换</span></span><br><span class=\"line\">IP(<span class=\"string\">\"192.168.1.1\"</span>).int()  <span class=\"comment\">#3232235777  IP地址转整形</span></span><br><span class=\"line\">IP(<span class=\"string\">\"192.168.1.1\"</span>).strHex()  <span class=\"comment\">#'0xc0a80101'  #IP地址转十六进制</span></span><br><span class=\"line\">IP(<span class=\"string\">\"192.168.1.1\"</span>).strBin() <span class=\"comment\">#'11000000101010000000000100000001' #转二进制</span></span><br><span class=\"line\">print(IP(<span class=\"number\">0xc0a80101</span>))   <span class=\"comment\">#十六进制转成IP 192.168.1.1   | IP('192.168.1.1') </span></span><br><span class=\"line\">print(IP(<span class=\"number\">3232235777</span>))   <span class=\"comment\">#十进制转成IP192.168.1.1</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#5.网络地址子网掩码生成网段格式</span></span><br><span class=\"line\">IP(<span class=\"string\">'192.168.1.0'</span>).make_net(<span class=\"string\">'255.255.255.0'</span>)  <span class=\"comment\">#IP('192.168.1.0/24')</span></span><br><span class=\"line\">IP(<span class=\"string\">'192.168.1.0/255.255.0.0'</span>,make_net=<span class=\"literal\">True</span>)  <span class=\"comment\">#IP('192.168.0.0/16')</span></span><br><span class=\"line\">IP(<span class=\"string\">'10.10.0.0/255.0.0.0'</span>,make_net=<span class=\"literal\">True</span>)       <span class=\"comment\">#IP('10.0.0.0/8')</span></span><br><span class=\"line\">IP(<span class=\"string\">'10.10.0.0-10.10.255.255'</span>,make_net=<span class=\"literal\">True</span>)   <span class=\"comment\">#IP('10.10.0.0/16')</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#6.通过网络转换成IP以及子网掩码</span></span><br><span class=\"line\">IP(<span class=\"string\">'10.0.0.0/8'</span>).net() <span class=\"comment\">#IP('10.0.0.0')</span></span><br><span class=\"line\">IP(<span class=\"string\">'10.0.0.0/8'</span>).broadcast()  <span class=\"comment\">#IP('10.255.255.255') 根据网段求得子网掩码</span></span><br><span class=\"line\"><span class=\"comment\">#通过StrNormal方法指定不同的wantprefixlen参数值定制不同的输出类型的网段</span></span><br><span class=\"line\"><span class=\"comment\">#wantprefixlen取值</span></span><br><span class=\"line\"><span class=\"number\">0</span> : 无返回，如<span class=\"number\">192.168</span><span class=\"number\">.1</span><span class=\"number\">.0</span></span><br><span class=\"line\"><span class=\"number\">1</span> ：prefix格式 a.b.c<span class=\"number\">.0</span>/<span class=\"number\">24</span> | <span class=\"number\">2001</span>:<span class=\"number\">658</span>:<span class=\"number\">22</span>a:cafe::/<span class=\"number\">64</span>  <span class=\"comment\">#默认格式</span></span><br><span class=\"line\"><span class=\"number\">2</span> ：decimal netmask格式  a.b.c.d/<span class=\"number\">255.255</span><span class=\"number\">.255</span><span class=\"number\">.0</span>    </span><br><span class=\"line\"><span class=\"number\">3</span> ：lastIP格式  a.b.c<span class=\"number\">.0</span>-a.b.c<span class=\"number\">.255</span> <span class=\"number\">2001</span>:<span class=\"number\">658</span>:<span class=\"number\">22</span>a:cafe::<span class=\"number\">-2001</span>:<span class=\"number\">658</span>:<span class=\"number\">22</span>a:cafe:ffff:ffff:ffff:ffff</span><br><span class=\"line\"><span class=\"comment\">#示例演示：</span></span><br><span class=\"line\">IP(<span class=\"string\">'192.168.1.0/30'</span>).strNormal(<span class=\"number\">0</span>)  <span class=\"comment\">#'192.168.1.0'   这里需要知道子网掩码的知识点</span></span><br><span class=\"line\">IP(<span class=\"string\">'192.168.1.4/30'</span>).strNormal(<span class=\"number\">0</span>)  <span class=\"comment\">#'192.168.1.4'   2 ^ （32-30 = 2) = 4 IP为一组</span></span><br><span class=\"line\">IP(<span class=\"string\">'192.168.1.0/30'</span>).strNormal(<span class=\"number\">1</span>)  <span class=\"comment\">#'192.168.1.0/30'</span></span><br><span class=\"line\">IP(<span class=\"string\">'192.168.1.0/30'</span>).strNormal()   <span class=\"comment\">#'192.168.1.0/30'</span></span><br><span class=\"line\">IP(<span class=\"string\">'192.168.1.0/30'</span>).strNormal(<span class=\"number\">2</span>)  <span class=\"comment\">#'192.168.1.0/255.255.255.252'</span></span><br><span class=\"line\">IP(<span class=\"string\">'192.168.1.0/30'</span>).strNormal(<span class=\"number\">3</span>)  <span class=\"comment\">#'192.168.1.0-192.168.1.3'  #根据子网掩码换算主机个数</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>(2) 多网络计算对比</strong>：<br>比较两个网段是否存在包含重叠等关系,IPy支持蕾仕于数值型数据的比较，可以帮助IP对象进行比较</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\">#示例1.判断网段的区间</span></span><br><span class=\"line\">IP(<span class=\"string\">\"192.168.0.0/16\"</span>) &lt; IP(<span class=\"string\">\"192.168.1.0/24\"</span>) <span class=\"comment\">#True</span></span><br><span class=\"line\">IP(<span class=\"string\">\"192.168.0.0/16\"</span>) &gt; IP(<span class=\"string\">\"192.168.1.0/24\"</span>) <span class=\"comment\">#False</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#判断IP地址或者网段是否包含在另外一个网段：</span></span><br><span class=\"line\">IP(<span class=\"string\">\"192.168.0.0/16\"</span>) <span class=\"keyword\">in</span> IP(<span class=\"string\">\"192.168.1.0/24\"</span>)  <span class=\"comment\">#False</span></span><br><span class=\"line\">IP(<span class=\"string\">\"192.168.1.0/32\"</span>) <span class=\"keyword\">in</span> IP(<span class=\"string\">\"192.168.1.0/24\"</span>)  <span class=\"comment\">#True</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#判断两个网段是否重叠,采用IP提供的overlaps方法</span></span><br><span class=\"line\">IP(<span class=\"string\">\"192.168.1.0/32\"</span>).overlaps(<span class=\"string\">\"192.168.1.0/24\"</span>) <span class=\"comment\">#1 包含</span></span><br><span class=\"line\">IP(<span class=\"string\">\"192.168.2.5\"</span>).overlaps(<span class=\"string\">\"192.168.1.0/24\"</span>)    <span class=\"comment\">#0 不包含</span></span><br></pre></td></tr></table></figure>\n<p><em>实际案例：</em></p>\n<p><a href=\"https://github.com/WeiyiGeek/Study-Promgram/blob/master/Python3/Python安全平台建设/Scan/ipinfo.py\" target=\"_blank\" rel=\"noopener\">+ IPy模块使用案例查看</a><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Useage: &gt; ipinfo.py -t/-m 192.168.1.1 </span><br><span class=\"line\">-t 指定IP类型地址进行相互转换二进制IP/整数IP/十六进制 </span><br><span class=\"line\">-m 指定IP类地址或者IP段查看信息</span><br><span class=\"line\">IP格式1：192.168.1.1 </span><br><span class=\"line\">IP格式2：192.168.1.0/24 </span><br><span class=\"line\">IP格式3：192.168.1.1-192.168.1.254</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h4 id=\"0x02-DNS处理模块\"><a href=\"#0x02-DNS处理模块\" class=\"headerlink\" title=\"0x02 DNS处理模块\"></a>0x02 DNS处理模块</h4><p>描述：Python中的dbspython是实现一个DNS工具包，支持所有的记录类型，用于查询/传输并动态更新ZONE信息,同时支持所有的记录类型;<br>模块安装：<code>pip install dnspython</code></p>\n<h5 id=\"1-方法详解\"><a href=\"#1-方法详解\" class=\"headerlink\" title=\"1.方法详解\"></a>1.方法详解</h5><p>dns提供一个DNS解析类-resolver，使用它的query方法来实现查询功能,query方法定义如下：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> dns.resolver</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">query</span><span class=\"params\">(qname, rdtype=dns.rdatatype.A, rdclass=dns.rdataclass.IN,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">          tcp=False, source=None, raise_on_no_answer=True,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">          source_port=<span class=\"number\">0</span>, lifetime=None)</span>:</span></span><br></pre></td></tr></table></figure></p>\n<p>rdclass参数用于指定网络类型，可选值有IN，CH与HS，其中IN为默认;<br>tcp参数表示是否启用TCP协议;<br>其中rdtype参数用来指定RR资源类型：</p>\n<ul>\n<li>A 记录 ： 将主机名转换成为IP地址</li>\n<li>MX 记录 ：邮件交换记录，定义邮件服务器的域名</li>\n<li>CNAME 记录 : 指定别名记录，实现域名间的映射</li>\n<li>NS 记录 : 标记区域的域名服务器及授权子域名</li>\n<li>PTR 记录 ：反向解析与A记录相反,将IP地址转换为主机名</li>\n<li>SOA 记录 ：SOA标记一个起始授权区的定义</li>\n</ul>\n<p>示例演示：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1.A记录 通过reponse.answer方法获取查询回应信息</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> dns.resolver.query(<span class=\"string\">'www.qq.com.cn'</span>,<span class=\"string\">'A'</span>).response.answer:</span><br><span class=\"line\">  <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> i.items:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"A记录：%s\"</span> % j.address)  <span class=\"comment\">#A记录：61.129.226.218</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> dns.resolver.query(<span class=\"string\">'qq.com'</span>,<span class=\"string\">'A'</span>).response.answer:</span><br><span class=\"line\">  <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> i.items:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"A记录：%s\"</span> % j.address)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># A记录：59.37.96.63</span></span><br><span class=\"line\"><span class=\"comment\"># A记录：58.60.9.21</span></span><br><span class=\"line\"><span class=\"comment\"># A记录：180.163.26.39</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2.MX记录</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> dns.resolver.query(<span class=\"string\">'qq.com'</span>,<span class=\"string\">'MX'</span>):</span><br><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"string\">\"MX preference = %s , mail exchanger = %s\"</span> %(i.preference,i.exchange))</span><br><span class=\"line\"><span class=\"comment\">#遍历出首选项以及邮件交换服务器  </span></span><br><span class=\"line\"><span class=\"comment\"># MX preference = 20 , mail exchanger = mx2.qq.com.</span></span><br><span class=\"line\"><span class=\"comment\"># MX preference = 30 , mail exchanger = mx1.qq.com.</span></span><br><span class=\"line\"><span class=\"comment\"># MX preference = 10 , mail exchanger = mx3.qq.com.</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例3.NS记录 （输入根域名）</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> dns.resolver.query(<span class=\"string\">'qq.com'</span>,<span class=\"string\">'NS'</span>).response.answer:</span><br><span class=\"line\">  <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> i.items:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"NS记录：%s\"</span> %j)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#执行结果</span></span><br><span class=\"line\">NS记录：ns2.qq.com.</span><br><span class=\"line\">NS记录：ns1.qq.com.</span><br><span class=\"line\">NS记录：ns4.qq.com.</span><br><span class=\"line\">NS记录：ns3.qq.com.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例4.CNAME记录</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> dns.resolver.query(<span class=\"string\">'weiyigeek.github.io'</span>,<span class=\"string\">'CNAME'</span>).response.answer:</span><br><span class=\"line\">  <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> i.items:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"CNAME记录：%s\"</span> %j) <span class=\"comment\">#CNAME记录：www.weiyigeek.github.io.</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例5.SOA授权区域定义</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> dns.resolver.query(<span class=\"string\">'baidu.com'</span>,<span class=\"string\">'SOA'</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\"><span class=\"comment\">#dns.baidu.com. sa.baidu.com. 2012141218 300 300 2592000 7200</span></span><br></pre></td></tr></table></figure></p>\n<p>实际案例：<br><a href=\"https://github.com/WeiyiGeek/Study-Promgram/blob/master/Python3/Python安全平台建设/Scan/dnsinfo.py\" target=\"_blank\" rel=\"noopener\">+ Github查看</a><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190710165449.png\" alt=\"WeiyiGeek.dnsinfo信息查看\" title=\"\" class=\"\">\n                <p>WeiyiGeek.dnsinfo信息查看</p>\n            </figure></p>\n<p><br></p>\n<h4 id=\"0x01-web探测模块\"><a href=\"#0x01-web探测模块\" class=\"headerlink\" title=\"0x01 web探测模块\"></a>0x01 web探测模块</h4><h5 id=\"pycurl-模块\"><a href=\"#pycurl-模块\" class=\"headerlink\" title=\"pycurl 模块\"></a>pycurl 模块</h5><p>描述：pycurl是一个用C语言写的libcurl Python实现,功能强大支持多种通信协议,类似于linux下Curl命令功能的Python封装简单易用；<br>模块安装:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#安装</span></span><br><span class=\"line\">pip install pycurl  <span class=\"comment\">#可能会报错 Please specify --curl-dir=/path/to/built/libcurl (安装后重新执行)</span></span><br><span class=\"line\"><span class=\"comment\">#如果报错访问：https://www.lfd.uci.edu/~gohlke/pythonlibs/#pycurl 下载pycurl-7.43.0.3-cp37-cp37m-win32.whl (根据您Python版本位数)</span></span><br><span class=\"line\">Processing c:\\users\\weiyigeek\\downloads\\pycurl<span class=\"number\">-7.43</span><span class=\"number\">.0</span><span class=\"number\">.3</span>-cp37-cp37m-win32.whl</span><br><span class=\"line\">Installing collected packages: pycurl</span><br><span class=\"line\">Successfully installed pycurl<span class=\"number\">-7.43</span><span class=\"number\">.0</span><span class=\"number\">.3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看版本</span></span><br><span class=\"line\">python -c <span class=\"string\">\"import pycurl;print(pycurl.version)\"</span></span><br><span class=\"line\"><span class=\"string\">'PycURL/7.43.0.3 libcurl/7.64.1 OpenSSL/1.1.1c zlib/1.2.11 c-ares/1.15.0 libssh2/1.8.2'</span></span><br></pre></td></tr></table></figure></p>\n<p>主要功能：</p>\n<ul>\n<li>web服务质量探测：HTTP状态码/请求延时/HTTP头信息/下载速度等等</li>\n<li>探测服务的可用性以及服务响应速度</li>\n</ul>\n<p>模块常用方法：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pcurl = pycurl.Curl <span class=\"comment\">#创建对象</span></span><br><span class=\"line\">pcurl.setopt(option,value)  <span class=\"comment\">#curl_easy_setopt 方法，value值会依赖option</span></span><br><span class=\"line\">pcurl.perform() <span class=\"comment\">#实现pycurl对象的请求提交</span></span><br><span class=\"line\">pcurl.getinfo(option) <span class=\"comment\">#获取pycurl对象请求响应信息</span></span><br><span class=\"line\">pcurl.close()</span><br></pre></td></tr></table></figure><br>利用libcurl包提供的常量值来达到探测Web服务质量的目的：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#setopt</span></span><br><span class=\"line\">pc.setopt(pycurl.URL, URL) <span class=\"comment\">#定义请求的URL</span></span><br><span class=\"line\">pc.setopt(pycurl.USERAGENT, <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0\"</span>) <span class=\"comment\">#设置http请求头USERAGENT</span></span><br><span class=\"line\">pc.setopt(pycurl.CONNECTTIMEOUT, 5) <span class=\"comment\">#连接等待时间，0为不等待</span></span><br><span class=\"line\">pc.setopt(pycurl.TIMEOUT, 5)  <span class=\"comment\">#请求超时时间</span></span><br><span class=\"line\">pc.setopt(pycurl.MAXREDIRS, 1)  <span class=\"comment\">#最大的重定向数</span></span><br><span class=\"line\">pc.setopt(pycurl.NOPROGRESS, 1)  <span class=\"comment\">#是否屏蔽下载进度条 非0则屏蔽</span></span><br><span class=\"line\">pc.setopt(pycurl.MAXREDIRS, 1)   <span class=\"comment\">#指定HTTP重定向的最大数为1</span></span><br><span class=\"line\">pc.setopt(pycurl.DNS_CACHE_TIMEOUT, 30)  <span class=\"comment\">#报错DNS信息为30s</span></span><br><span class=\"line\">pc.setopt(pycurl.FORBID_REUSE, 1) <span class=\"comment\">#完成交互后断开连接不重用</span></span><br><span class=\"line\">pc.setopt(pycurl.FERSH_CONNECT, 1) <span class=\"comment\">#强制获取新的连接，即代替缓存中的连接</span></span><br><span class=\"line\">pc.setopt(pycurl.HEADERFUNCTION, getheader) <span class=\"comment\">#将返回的HTTP HEADER定向到回调环境getheader</span></span><br><span class=\"line\">pc.setopt(pycurl.WRITEFUNCTION, getbody) <span class=\"comment\">#将返回的HTTP BOBY定向到回调环境getboby</span></span><br><span class=\"line\">pc.setopt(pycurl.WRITEHEADER, index)  <span class=\"comment\">#将返回HTTP HEADER定向到indexfile文件对象</span></span><br><span class=\"line\">pc.setopt(pycurl.WRITEDATA, index)  <span class=\"comment\">#将返回的HTML内容定向到indexfile文件对象中</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#getinfo</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"HTTP状态码: %s\"</span> %(pc.getinfo(pc.HTTP_CODE)))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"DNS解析时间: %.2f ms\"</span> %(pc.getinfo(pc.NAMELOOKUP_TIME)*1000))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"建立连接时间: %.2f ms\"</span> %(pc.getinfo(pc.CONNECT_TIME)*1000))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"准备传输时间: %.2f ms\"</span> %(pc.getinfo(pc.PRETRANSFER_TIME)*1000))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"传输开始时间: %.2f ms\"</span> %(pc.getinfo(pc.STARTTRANSFER_TIME)*1000))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"传输结束总时间: %.2f ms\"</span> %(pc.getinfo(pc.TOTAL_TIME)*1000))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"重定向消耗的时间: %.2f ms\"</span> %(pc.getinfo(pc.REDIRECT_TIME)*1000))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"下载数据包大小: %d bytes/s\"</span> %(pc.getinfo(pc.SIZE_DOWNLOAD)))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"上传数据包大小: %d bytes/s\"</span> %(pc.getinfo(pc.SIZE_UPLOAD)))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"平均下载速度: %d bytes/s\"</span> %(pc.getinfo(pc.SPEED_DOWNLOAD)))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"平均上传速度: %d bytes/s\"</span> %(pc.getinfo(pc.SPEED_UPLAOD)))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"HTTP头部大小: %d byte\"</span> %(pc.getinfo(pc.HEADER_SIZE)))</span><br></pre></td></tr></table></figure></p>\n<p>实际案例：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># @File : pycurldemo.py</span></span><br><span class=\"line\"><span class=\"comment\"># @CreateTime : 2019/7/31 15:23</span></span><br><span class=\"line\"><span class=\"comment\"># @Author : WeiyiGeek</span></span><br><span class=\"line\"><span class=\"comment\"># @Function : 实现探测Web服务质量与网页截图</span></span><br><span class=\"line\"><span class=\"comment\"># @Software: PyCharm</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> sys, time</span><br><span class=\"line\"><span class=\"keyword\">import</span> pycurl</span><br><span class=\"line\"></span><br><span class=\"line\">URL=<span class=\"string\">\"http://www.weiyigeek.github.io\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">request</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">     构建请求</span></span><br><span class=\"line\"><span class=\"string\">    :return:</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\">    pc = pycurl.Curl()  <span class=\"comment\">#构建一个Curl对象</span></span><br><span class=\"line\">    pc.setopt(pycurl.URL, URL) <span class=\"comment\">#定义请求的URL</span></span><br><span class=\"line\">    pc.setopt(pycurl.CONNECTTIMEOUT, <span class=\"number\">5</span>) <span class=\"comment\">#连接等待时间，0为不等待</span></span><br><span class=\"line\">    pc.setopt(pycurl.TIMEOUT, <span class=\"number\">5</span>)  <span class=\"comment\">#请求超时时间</span></span><br><span class=\"line\">    pc.setopt(pycurl.NOPROGRESS, <span class=\"number\">1</span>)  <span class=\"comment\">#疲敝下载进度条 与 curl 相似</span></span><br><span class=\"line\">    pc.setopt(pycurl.FORBID_REUSE, <span class=\"number\">1</span>) <span class=\"comment\">#完成交互后断开连接不重用</span></span><br><span class=\"line\">    pc.setopt(pycurl.MAXREDIRS, <span class=\"number\">1</span>)   <span class=\"comment\">#指定HTTP重定向的最大数为1</span></span><br><span class=\"line\">    pc.setopt(pycurl.DNS_CACHE_TIMEOUT, <span class=\"number\">30</span>)  <span class=\"comment\">#报错DNS信息为30s</span></span><br><span class=\"line\">    pc.setopt(pycurl.USERAGENT, <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#创建一个文件对象以'wb'方式打开，存储返回的http头部信息以及页面内容;</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> open(<span class=\"string\">'content.txt'</span>, <span class=\"string\">'wb'</span>) <span class=\"keyword\">as</span> index:</span><br><span class=\"line\">        pc.setopt(pycurl.WRITEHEADER, index)  <span class=\"comment\">#将返回HTTP HEADER定向到indexfile文件对象</span></span><br><span class=\"line\">        pc.setopt(pycurl.WRITEDATA, index)  <span class=\"comment\">#将返回的HTML内容定向到indexfile文件对象中</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            pc.perform()  <span class=\"comment\">#提交请求</span></span><br><span class=\"line\">        <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">            print(<span class=\"string\">\"connect Error:\"</span> + str(e))</span><br><span class=\"line\">            sys.exit()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> pc</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">reponse</span><span class=\"params\">(pc)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    返回请求响应数据解析</span></span><br><span class=\"line\"><span class=\"string\">    :param pc:</span></span><br><span class=\"line\"><span class=\"string\">    :return:</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\">    print(<span class=\"string\">\"HTTP状态码: %s\"</span> %(pc.getinfo(pc.HTTP_CODE)))</span><br><span class=\"line\">    print(<span class=\"string\">\"DNS解析时间: %.2f ms\"</span> %(pc.getinfo(pc.NAMELOOKUP_TIME)*<span class=\"number\">1000</span>))</span><br><span class=\"line\">    print(<span class=\"string\">\"建立连接时间: %.2f ms\"</span> %(pc.getinfo(pc.CONNECT_TIME)*<span class=\"number\">1000</span>))</span><br><span class=\"line\">    print(<span class=\"string\">\"准备传输时间: %.2f ms\"</span> %(pc.getinfo(pc.PRETRANSFER_TIME)*<span class=\"number\">1000</span>))</span><br><span class=\"line\">    print(<span class=\"string\">\"传输开始时间: %.2f ms\"</span> %(pc.getinfo(pc.STARTTRANSFER_TIME)*<span class=\"number\">1000</span>))</span><br><span class=\"line\">    print(<span class=\"string\">\"传输结束总时间: %.2f ms\"</span> %(pc.getinfo(pc.TOTAL_TIME)*<span class=\"number\">1000</span>))</span><br><span class=\"line\">    print(<span class=\"string\">\"下载数据包大小: %d bytes/s\"</span> %(pc.getinfo(pc.SIZE_DOWNLOAD)))</span><br><span class=\"line\">    print(<span class=\"string\">\"HTTP头部大小: %d byte\"</span> %(pc.getinfo(pc.HEADER_SIZE)))</span><br><span class=\"line\">    print(<span class=\"string\">\"平均下载速度: %d bytes/s\"</span> %(pc.getinfo(pc.SPEED_DOWNLOAD)))</span><br><span class=\"line\">    print(<span class=\"string\">\"重定向消耗的时间: %.2f ms\"</span> % (pc.getinfo(pc.REDIRECT_TIME) * <span class=\"number\">1000</span>))</span><br><span class=\"line\">    pc.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    请求函数调用</span></span><br><span class=\"line\"><span class=\"string\">    响应函数调用</span></span><br><span class=\"line\"><span class=\"string\">    :return:</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\">    pcurl = request()</span><br><span class=\"line\">    reponse(pcurl)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190731162937.png\" alt=\"WeiyiGeek.pycurl模块\" title=\"\" class=\"\">\n                <p>WeiyiGeek.pycurl模块</p>\n            </figure></p>\n<p><br></p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"黑帽编程","path":"api/categories/黑帽编程.json"}],"tags":[{"name":"Python","path":"api/tags/Python.json"}]}