{"title":"1.Python3扩展知识之笔试操作总结(一)","slug":"编程世界/Python/基础学习/Python3扩展知识之笔试操作总结(一)","date":"2019-03-19T10:34:30.000Z","updated":"2022-05-26T13:31:37.115Z","url":"2019/3-19-338.html","path":"api/articles/2019/3-19-338.html.json","covers":null,"content":"<p>[TOC]</p>\n<h4 id=\"1-Python笔试基础知识\"><a href=\"#1-Python笔试基础知识\" class=\"headerlink\" title=\"1)Python笔试基础知识\"></a>1)Python笔试基础知识</h4><ol start=\"0\">\n<li>Python 是什么类型的语言？<br>Python是脚本语言(Scripting language)</li>\n</ol>\n<a id=\"more\"></a>\n<ol>\n<li>IDLE 是什么？<br>IDLE是一个Python Shell，shell的意思就是“外壳”，基本上来说，就是一个通过键入文本与程序交互的途径！像我们Windows那个cmd窗口，像Linux那个黑乎乎的命令窗口，他们都是shell，利用他们，我们就可以给操作系统下达命令。同样的，我们可以利用IDLE这个shell与Python进行互动。</li>\n</ol>\n<ol start=\"2\">\n<li>print() 的作用是什么？<br>print() 会在输出窗口中显示一些文本</li>\n</ol>\n<ol start=\"3\">\n<li>Python 中表示乘法的符号是什么？<br>Python中的乘号是*（星号）。</li>\n</ol>\n<ol start=\"4\">\n<li>为什么 &gt;&gt;&gt;print(‘I love fishc.com ‘ * 5) 可以正常执行，但 &gt;&gt;&gt;print(‘I love fishc.com ‘ + 5) 却报错？<br>在 Python 中 <em>不能把两个完全不同的东西加在一起</em>，比如说数字和文本，正是这个原因，&gt;&gt;&gt;print(‘I love fishc.com ‘ + 5) 才会报错，前边的例子就是将 “I love fishc.com” 这个字符串打印五次。</li>\n</ol>\n<ol start=\"5\">\n<li>如果我需要在一个字符串中嵌入一个双引号，正确的做法是？<br>  你有两个选择：可以利用反斜杠（\\）对双引号转义：\\”，或者用单引号引起这个字符串。例如：’ I l”o”ve fishc.com ‘。</li>\n</ol>\n<ol start=\"6\">\n<li>为什么我们要使用 Python3？Python2到底有什么问题？看起来很多程序员依然都在使用Python2？<br>确实还有相当多的程序员在使用 Python2，不过 Python3 才是 Python 发展的未来，就像 XP 和 WIN7 一样。觉Python3 中有很多新特性确实很妙，很值得进行深入学习！你也不用担心,如果你了解了 Python3，Python2 的代码阅读对于你来说根本不成问题！</li>\n</ol>\n<ol start=\"7\">\n<li>什么是BIF？<br>BIF 就是 Built-in Functions，内置函数,是为了方便程序员快速编写脚本程序;</li>\n</ol>\n<ol start=\"8\">\n<li>Python3 提供了多少个 BIF？<br>在 Python 或 IDLE 中，输入 dir(__builtins__) 可以看到 Python 提供的内置方法列表一共73个，当前版本 Python 3.7.2 (tags/v3.7.2:9a3ffc0492, Dec 23 2018, 23:09:28)</li>\n</ol>\n<ol start=\"9\">\n<li>在 Python 看来：’FishC’ 和 ‘fishc’ 一样吗？<br>对 Python 来说，fishc 和 FishC 是完全不同的两个名字，所以编程的时候一定要当心。</li>\n</ol>\n<ol start=\"10\">\n<li>Python 中什么是最重要的？<br>缩进是 Python 的灵魂，缩进的严格要求使得 Python 的代码显得非常精简并且有层次; 如果在正确的位置输入冒号“:”，IDLE 会自动将下一行缩进！</li>\n</ol>\n<ol start=\"11\">\n<li><p>这节课的例子中出现了“=”和“==”，他们表示不同的含义，你在编程的过程中会不小心把“==”误写成“=”吗？<br>C语言的话，如果 if( c == 1 ) 写成 if( c = 1 )，程序就完全不按程序员原本的目的去执行，但在 Python 这里，不好意思，行不通，语法错误！<br>Python 不允许 if 条件中赋值，所以 if c = 1: 会报错！</p>\n</li>\n<li><p>你听说过“拼接”这个词吗？<br>可以将两个字符串“相加”在一起，如：’I’ + ‘Love’ + ‘FishC’ 会得到 ‘ILoveFishC’，在 Python 里，这种做法叫做拼接字符串。</p>\n</li>\n</ol>\n<ol start=\"13\">\n<li>以下哪个变量的命名不正确？为什么？ (A) MM_520 (B) _MM520_ (C) 520_MM (D) _520_MM<br>(C)选项不正确，因为 Python 中的变量名不能以数字开头。</li>\n</ol>\n<ol start=\"14\">\n<li>除了使用饭斜杠（\\）进行字符转义，还有什么方法可以打印：Let’s go! 这个字符串？<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>myteacher = <span class=\"string\">'小甲鱼'</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>yourteacher = myteacher</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>yourteacher = <span class=\"string\">'黑夜'</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>print(myteacher)     <span class=\"comment\"># 小甲鱼  , 变量是独立的</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>myteacher = <span class=\"string\">'小甲鱼'</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>yourteacher = myteacher</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>myteacher = <span class=\"string\">'黑夜'</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>print(yourteacher)  <span class=\"comment\"># 小甲鱼  , 变量是独立的(非关联)</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"15\">\n<li>除了使用反斜杠（\\）进行字符转义，还有什么方法可以打印：Let’s go! 这个字符串？如果非要在原始字符串结尾输入反斜杠，可以如何灵活处理？<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"string\">\"let's go!\"</span></span><br><span class=\"line\"><span class=\"string\">\"let's go!\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"string\">r'C:\\Program Files\\FishC\\Good'</span><span class=\"string\">'\\\\'</span></span><br><span class=\"line\"><span class=\"string\">'C:\\\\Program Files\\\\FishC\\\\Good\\\\'</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"16\">\n<li>内置函数也是可以修改但需要注意？<br>Python 貌似不介意我们对内置函数进行赋值操作，所以这点我们以后就要注意啦,否则可能会出现以下的 BUG：    <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">print</span> = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>print(<span class=\"string\">\"I love FishC\"</span>)   <span class=\"comment\">#内置函数被修改后便不能实现原有的功能</span></span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File <span class=\"string\">\"&lt;pyshell#37&gt;\"</span>, line <span class=\"number\">1</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">    print(<span class=\"string\">\"I love FishC\"</span>)</span><br><span class=\"line\">TypeError: <span class=\"string\">'int'</span> object <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> callable</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"17\">\n<li>字符串最后提到的长字符串（三重引号字符串）其实在 Python3 还可以这么写？<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#所见即所得</span></span><br><span class=\"line\">string = <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">WeiyiGeek,</span></span><br><span class=\"line\"><span class=\"string\">Python,</span></span><br><span class=\"line\"><span class=\"string\">脚本语言.</span></span><br><span class=\"line\"><span class=\"string\">\"\"\"</span></span><br><span class=\"line\">print(string)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#需要进行转义才行</span></span><br><span class=\"line\">string = (</span><br><span class=\"line\"><span class=\"string\">\"我爱C,\\n\"</span></span><br><span class=\"line\"><span class=\"string\">\"正如我爱Weiyigeek,\\n\"</span></span><br><span class=\"line\"><span class=\"string\">\"他那呱唧呱唧的声音,\\n\"</span>)</span><br><span class=\"line\">print(string)</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"18\">\n<li>while 循环为假的关键点<br>造成死循环的原因是 while 后边的条件永远为真(True), 在 Python 看来,只有以下内容会被看作假(注意冒号括号里边啥都没有，连空格都不要有!) ：False None 0 “” ‘’ () [] {}<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"string\">''</span>:</span><br><span class=\"line\">    print(<span class=\"string\">'进入循环'</span>)</span><br><span class=\"line\">print(<span class=\"string\">'退出循环'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">False</span>:</span><br><span class=\"line\">    print(<span class=\"string\">'进入循环'</span>)</span><br><span class=\"line\">print(<span class=\"string\">'退出循环'</span>)</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"19\">\n<li>Python3 中，一行可以书写多个语句吗？一个语句可以分成多行书写吗？<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#可以语句之间用分号隔开即可，不妨试试：</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>print(<span class=\"string\">'I love fishc'</span>);print(<span class=\"string\">'very much!'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#可以一行过长的语句可以使用反斜杠或者括号分解成几行，不妨试试：</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"number\">3</span> &gt; <span class=\"number\">4</span> <span class=\"keyword\">and</span> \\</span><br><span class=\"line\">    <span class=\"number\">1</span> &lt; <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>( <span class=\"number\">3</span> &gt; <span class=\"number\">4</span> <span class=\"keyword\">and</span></span><br><span class=\"line\">    <span class=\"number\">1</span> &lt; <span class=\"number\">2</span> )</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"20\">\n<li>请问Python的 and 操作符 和C语言的 &amp;&amp; 操作符 有何不同？<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># C</span></span><br><span class=\"line\">int main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    print(<span class=\"string\">\"%d , %d\\n\"</span>, <span class=\"number\">1</span> &amp;&amp; <span class=\"number\">3</span>, <span class=\"number\">0</span> &amp;&amp; <span class=\"number\">1</span>);  <span class=\"comment\">#[为真1,为假0]</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\"># Python 返回整型数值</span></span><br><span class=\"line\">1 and 3 ==&gt; 3</span><br><span class=\"line\">0 and 1 ==&gt; 0</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"21\">\n<li>听说过”短路逻辑(short-circuit logic)”吗？<br>逻辑操作符有个有趣的特性：在不需要求值的时候不进行操作。<blockquote>\n<p>这么说可能比较“高深”，举个例子，表达式 x and y，需要 x 和 y 两个变量同时为真(True)的时候，结果才为真。<br>因此如果当 x 变量得知是假(False)的时候，表达式就会立刻返回 False，而不用去管 y 变量的值。<br>这种行为被称为短路逻辑(short-circuit logic)或者惰性求值(lazy evaluation),这种行为 <em>同样也应用与 or 操作符</em><br>实际上，Python 的做法是如果 x 为假，表达式会返回 x 的值(0)，否则它就会返回 y 的值.</p>\n</blockquote>\n</li>\n</ol>\n<ol start=\"22\">\n<li>你知道为什么布尔类型(bool)的 True 和 False 分别用 1 和 0 来代替吗？<pre><code>计算机是很“笨”的，究其根本是因为它只认识二进制数，所以所有的编程语言最终都会转换成简单的二进制序列给 CPU 按照一定的规则解析。\n由于二进制只有两个数：0 和 1，因此用 0 和 1 来表示 False 和 True 再适合不过了，因为不用浪费资源在转换的过程上！\n</code></pre></li>\n</ol>\n<ol start=\"23\">\n<li>使用 int() 将小数转换为整数，结果是向上取整还是向下取整呢？你有什么办法使得 int() 按照“四舍五入”的方式取整吗?<br>小数取整会采用比较暴力的截断方式如下：</li>\n</ol>\n<ul>\n<li>正数即向下取整。(注：5.5 向上取整为 6，向下取整为 5)</li>\n<li>负数则刚好相反 是向上取整。<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>int(<span class=\"number\">1.5</span>)</span><br><span class=\"line\"><span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>int(<span class=\"number\">-1.5</span>)</span><br><span class=\"line\"><span class=\"number\">-1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#按照四舍五入的方法：</span></span><br><span class=\"line\"><span class=\"number\">5.4</span> “四舍五入”结果为：<span class=\"number\">5</span>，int(<span class=\"number\">5.4</span>+<span class=\"number\">0.5</span>) == <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"number\">5.6</span> “四舍五入”结果为：<span class=\"number\">6</span>，int(<span class=\"number\">5.6</span>+<span class=\"number\">0.5</span>) == <span class=\"number\">6</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ol start=\"24\">\n<li><p>取得一个变量的类型使用 type() 和 isinstance()，你更倾向于使用哪个？<br>建议使用 isinstance()，因为它的返回结果比较直接，另外 type() 其实并没有你想象的那么简单。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>type(int)  <span class=\"comment\">#&lt;class 'type'&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>type(<span class=\"number\">1</span>)   <span class=\"comment\">#&lt;class 'int'&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>isinstance(<span class=\"number\">1</span>,int)  <span class=\"comment\">#True</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Python3 可以给变量命名中文名，知道为什么吗？<br>Pyhton3 源码文件默认使用utf-8编码（支持中文），这就使得以下代码是合法的：</p>\n<blockquote>\n<p>>>小鱼 = ‘我爱你’;print(小鱼)   #我爱你</p>\n</blockquote>\n</li>\n</ol>\n<ol start=\"26\">\n<li><p>除法现在使用 “//” 实现，那 3.0 // 2.0  与 3.0 / 2.0 您目测会显示什么内容呢？<br>Python 这里会义无反顾地执行 floor 除法原则:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"number\">3</span> / <span class=\"number\">2</span>       <span class=\"comment\">#1.5  (floor)</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"number\">3.0</span> // <span class=\"number\">2.0</span>  <span class=\"comment\">#1.0  (默认是int，但是由于除数或被除数一个是浮点类型所以结果也是浮点，向下取值)</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"number\">3.0</span> // <span class=\"number\">2</span>  <span class=\"comment\">#1.0</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"number\">3</span> // <span class=\"number\">2</span>     <span class=\"comment\">#1</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>最快速度说出答案：not 1 or 0 and 1 or 3 and 4 or 5 and 6 or 7 and 8 and 9<br>逻辑运算符优先级是不同的：<em>not &gt; and &gt; or</em></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">我们按照优先级给它们加上括号：(<span class=\"keyword\">not</span> <span class=\"number\">1</span>) <span class=\"keyword\">or</span> (<span class=\"number\">0</span> <span class=\"keyword\">and</span> <span class=\"number\">1</span>) <span class=\"keyword\">or</span> (<span class=\"number\">3</span> <span class=\"keyword\">and</span> <span class=\"number\">4</span>) <span class=\"keyword\">or</span> (<span class=\"number\">5</span> <span class=\"keyword\">and</span> <span class=\"number\">6</span>) <span class=\"keyword\">or</span> (<span class=\"number\">7</span> <span class=\"keyword\">and</span> <span class=\"number\">8</span> <span class=\"keyword\">and</span> <span class=\"number\">9</span>)</span><br><span class=\"line\">== <span class=\"number\">0</span> <span class=\"keyword\">or</span> <span class=\"number\">0</span> <span class=\"keyword\">or</span> <span class=\"number\">4</span> <span class=\"keyword\">or</span> <span class=\"number\">6</span> <span class=\"keyword\">or</span> <span class=\"number\">9</span></span><br><span class=\"line\">== <span class=\"number\">4</span>  <span class=\"comment\">#由于“短路逻辑” 3 and 4 == 4，而 3 or 4 == 3。</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果还没有学到“求余”操作，还记得用什么方法可以“委曲求全”代替“%”的功能呢？</p>\n<blockquote>\n<p>使用了“if year/400 == int(year/400)”这样的方式来“委曲求全”</p>\n</blockquote>\n</li>\n</ol>\n<ol start=\"29\">\n<li>assert 的作用是什么？什么情况下我们会需要这样的代码呢？<br>(1)assert这个关键字我们称之为“断言”，当这个关键字后边的条件为假的时候，程序自动崩溃并抛出AssertionError的异常。<br>(2)当我们在测试程序的时候就很好用，因为与其让错误的条件导致程序今后莫名其妙地崩溃，不如在错误条件出现的那一瞬间我们实现“自爆”。<br>(3)一般来说我们可以用Ta再程序中置入检查点，当需要确保程序中的某个条件一定为真才能让程序正常工作的话，assert关键字就非常有用了。</li>\n</ol>\n<ol start=\"30\">\n<li><p>假设有 x = 1，y = 2，z = 3，请问如何快速将三个变量的值互相交换？</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>x=<span class=\"number\">1</span>;y=<span class=\"number\">2</span>;z=<span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>x,y,z = z,x,y</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>print(x,y,z)  <span class=\"comment\">#3 1 2</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>猜猜 (x &lt; y and [x] or [y]) [0] 实现什么样的功能？<br>这其实是 Python 的作者还没有为 Python 加入三元操作符之前，Python 社区的小伙伴们灵活的使用 and 和 or  搭配来实现三元操作符的功能，这里边有涉及到列表和切片的知识，这部分知识很快就会讲解,迫不及待的朋友可以先稍微预习下。</p>\n</li>\n</ol>\n<ol start=\"32\">\n<li>什么情况下我们要使循环永远为真？<br>同样用于游戏实现,因为游戏只要运行着，就需要时刻接收用户输入，因此使用永远为真确保游戏“在线”。操作系统也是同样的道理,时刻待命,操作系统永远为真的这个循环叫做消息循环。另外，许多通讯服务器的客户端/服务器系统也是通过这样的原理来工作的。</li>\n</ol>\n<ol start=\"33\">\n<li>member.append([‘竹林小溪’, ‘Crazy迷恋’]) 和 member.extend([‘竹林小溪’, ‘Crazy迷恋’]) 实现的效果一样吗？<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>name = [<span class=\"string\">'F'</span>, <span class=\"string\">'i'</span>, <span class=\"string\">'s'</span>, <span class=\"string\">'h'</span>]</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>name.append(<span class=\"string\">'C'</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>name  <span class=\"comment\">#['F', 'i', 's', 'h', 'C']</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>name.extend([<span class=\"string\">'.'</span>, <span class=\"string\">'c'</span>])</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>name  <span class=\"comment\">#['F', 'i', 's', 'h', 'C', '.', 'c']  直接扩展列表</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>name.append([<span class=\"string\">'o'</span>, <span class=\"string\">'m'</span>])</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>name   <span class=\"comment\">#增加元素到列表中。['F', 'i', 's', 'h', 'C', '.', 'c', ['o', 'm']]</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"35\">\n<li>请问 list1[0] 和 list1[0:1] 一样吗？list1[-3:-1] 会不会报错？但其实还有另外一个隐藏的设置：步长?<br>不一样，list1[0] 返回第0个元素的值，list1[0:1] 返回一个只含有第0个元素的列表。<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#自己需要注意不同采用切片是列表</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>list = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>list[<span class=\"number\">0</span>]  <span class=\"comment\">#1</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>list[<span class=\"number\">0</span>:<span class=\"number\">1</span>] <span class=\"comment\">#[1]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 正常索引是从左到右索引，负数索引是从右到左。</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>list[<span class=\"number\">-3</span>:<span class=\"number\">-1</span>]  <span class=\"comment\">#[2, 3]   3 -1 = 2</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>list[<span class=\"number\">0</span>:<span class=\"number\">-1</span>]  <span class=\"comment\"># [1, 2, 3, 4]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 另外一个就是步长</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>list[::<span class=\"number\">2</span>]  <span class=\"comment\"># [1, 3, 5]</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>list[::<span class=\"number\">-2</span>]  <span class=\"comment\"># [5, 3, 1]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#为了解释下面的话：(注意这里有坑)</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>old = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>new = old</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>old = [<span class=\"number\">6</span>]    <span class=\"comment\">#这里是 赋了一个列表值 给了old列表</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>print(new)   <span class=\"comment\">#输出还是 [1, 2, 3, 4, 5],并没有变化。</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>old.sort(reverse=<span class=\"literal\">True</span>)      <span class=\"comment\"># (注意这里有坑),排序是会带动变化的</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>print(new)    <span class=\"comment\">#这时候new是会变化的 [5,4,3,2,1]</span></span><br></pre></td></tr></table></figure>\n在进行列表赋值给其他变量的时候需要注意,采用 list2 = list1 (会随着list1改变而改变,但不会随的值覆盖而改变) 而 list3 =  list1[\\:] (相当于是重新建立一个列表,并不会受到原列表的影响)</li>\n</ol>\n<ol start=\"36\">\n<li>请用一句话描述什么是列表？再用一句话描述什么是元组？ 什么情况下你需要使用元组而不是列表？<br>列表：一个大仓库，你可以随时往里边添加和删除任何东西，提高了编程的灵活性<br>元组：封闭的列表，一旦定义就不可改变 <em>（不能添加、删除或修改）</em>,提高了编程的安全性。<br>当我们希望内容不被轻易改写的时候，使用元组（把权力关进牢笼;当我们需要频繁修改数据，就使用列表。</li>\n</ol>\n<ol start=\"37\">\n<li>创建一个元组，什么情况下逗号和小括号必须同时存在，缺一不可？<br>由于元组是不能够被更改的,所有如果需要插入或者修改就需要采用切片的方式进行重新建立元组.<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>tuple = (<span class=\"string\">'Weiyi'</span>,<span class=\"string\">'GEEK'</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>tuple1 = tuple[:<span class=\"number\">1</span>]   <span class=\"comment\">#('Weiyi',)  时刻注意切片返回与原始类型一致</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>tuple1 = tuple[<span class=\"number\">1</span>]    <span class=\"comment\">#'GEEK'     但采用索引得到值仅仅是元素</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>tuple1 = tuple[:<span class=\"number\">1</span>] + (<span class=\"string\">'YES'</span>,) + tuple[<span class=\"number\">1</span>:]  <span class=\"comment\">#('Weiyi', 'YES', 'GEEK')   方法1</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>tuple2 = (tuple1[<span class=\"number\">1</span>],<span class=\"string\">'Weiyi'</span>,tuple1[<span class=\"number\">2</span>])     <span class=\"comment\">#('YES', 'Weiyi', 'GEEK')   方法2</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"38\">\n<li>x, y, z = 1, 2, 3 请问x, y, z是元组吗？<br>答案：所有的多对象的、逗号分隔的、没有明确用符号定义的这些集合默认的类型都是元组 tuple ;<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>x, y, z = <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>type(x)   <span class=\"comment\"># &lt;class 'int'&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>h = x, y, z</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>type(h)  <span class=\"comment\"># &lt;class 'tuple'&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"39\">\n<li><p>那请问如果我把中括号改为小括号，会不会得到“元组推导式”呢？<br>答案:不会,Python3 木有“元组推导式”,虽然修改建立后不会报错但是它的类型 变成 生成器(generator)类型。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>tuple1 = (x**<span class=\"number\">2</span> <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">10</span>))</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>type(tuple1)  <span class=\"comment\">#&lt;class 'generator'&gt;</span></span><br><span class=\"line\"><span class=\"comment\"># 注意，Python3 开始 next() 方法改为 __next__() 哦~,您可以用这个方式访问生成器</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>tuple1.__next__()  <span class=\"comment\">#0</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>tuple1.__next__()  <span class=\"comment\">#1</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>tuple1.__next__()  <span class=\"comment\">#4</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如何定义一个跨越多行的字符串吗（请至少写出两种实现的方法）？</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">方法一：</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>str1 = <span class=\"string\">'''待我长发及腰，将军归来可好？</span></span><br><span class=\"line\"><span class=\"string\">此身君子意逍遥，怎料山河萧萧。江南晚来客，红绳结发梢。'''</span></span><br><span class=\"line\">   </span><br><span class=\"line\">方法二：</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>str2 = <span class=\"string\">'待卿长发及腰，我必凯旋回朝。\\</span></span><br><span class=\"line\"><span class=\"string\">昔日纵马任逍遥，俱是少年英豪。'</span></span><br><span class=\"line\">   </span><br><span class=\"line\">方法三：</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>str3 = (<span class=\"string\">'待卿长发及腰，我必凯旋回朝。'</span></span><br><span class=\"line\"><span class=\"string\">'昔日纵马任逍遥，俱是少年英豪。'</span>)</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"41\">\n<li>格式化字符串的常用方法有那些?如果想要显示Pi = 3.14，format前边的字符串应该怎么填写呢？<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"&#123;1&#125;\"</span>.format(<span class=\"string\">\"不打印\"</span>, <span class=\"string\">\"打印\"</span>) <span class=\"comment\">#\"打印\"</span></span><br><span class=\"line\"><span class=\"string\">\"&#123;a&#125; love &#123;b&#125;.&#123;c&#125;\"</span>.format(a=<span class=\"string\">\"I\"</span>, b=<span class=\"string\">\"百度\"</span>, c=<span class=\"string\">\"com\"</span>) <span class=\"comment\">#关键字参数</span></span><br><span class=\"line\"><span class=\"string\">\"&#123;0&#125; love &#123;1&#125;.&#123;2&#125;\"</span>.format(<span class=\"string\">\"I\"</span>, <span class=\"string\">\"C\"</span>, <span class=\"string\">\"com\"</span>)  <span class=\"comment\">#位置参数</span></span><br><span class=\"line\"><span class=\"string\">'&#123;0&#125;&#123;1:.2f&#125;'</span>.format(<span class=\"string\">'Pi = '</span>, <span class=\"number\">3.1415</span>)</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>在Windows上打开文件路径需要进行转义\\才能正常进行找出文件，我们约定“\\t”和“\\r”分别表示“横向制表符（TAB）”和“回车符”:如下面<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">open(<span class=\"string\">'C:\\windows\\temp\\readme.txt'</span>, <span class=\"string\">'r'</span>)  <span class=\"comment\">#会报错</span></span><br><span class=\"line\">file1 = open(<span class=\"string\">r'C:\\windows\\temp\\readme.txt'</span>, <span class=\"string\">'r'</span>)  <span class=\"comment\">#方式1</span></span><br><span class=\"line\">file1 = open(<span class=\"string\">'C:\\\\windows\\\\temp\\\\readme.txt'</span>, <span class=\"string\">'r'</span>) <span class=\"comment\">#方式2</span></span><br></pre></td></tr></table></figure></p>\n<hr>\n\n<h4 id=\"2-Python操作实验\"><a href=\"#2-Python操作实验\" class=\"headerlink\" title=\"2)Python操作实验\"></a>2)Python操作实验</h4><p>1.编程输入程序并且进行验证选择.<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\">#功能：课后作业1</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\">name = input(<span class=\"string\">\"请输入您的姓名：\"</span>)</span><br><span class=\"line\">num = input(<span class=\"string\">'请输入一个1~100的数中:'</span>)</span><br><span class=\"line\">num = int(num)</span><br><span class=\"line\"><span class=\"keyword\">if</span> num &gt; random.randint(<span class=\"number\">0</span>,<span class=\"number\">100</span>):</span><br><span class=\"line\">    print(<span class=\"string\">\"恭喜您：\"</span> + name,<span class=\"string\">\"您输入的数字\"</span>+ num +<span class=\"string\">\"大于随机数\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"不能恭喜您了\"</span>,name)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">####### 结果输出 ##########</span></span><br><span class=\"line\"><span class=\"comment\">#请输入您的姓名：weiyigeek #</span></span><br><span class=\"line\"><span class=\"comment\">#请输入一个1~100的数中:50  #</span></span><br><span class=\"line\"><span class=\"comment\">#不能恭喜您了 weiyigeek    #</span></span><br></pre></td></tr></table></figure></p>\n<p>2.打印输出如下图所示的代码：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\">#功能：课后作业04</span></span><br><span class=\"line\"></span><br><span class=\"line\">count = input(<span class=\"string\">\"请输入显示*号的个数:\"</span>)</span><br><span class=\"line\">count = int(count)</span><br><span class=\"line\"><span class=\"keyword\">while</span> count:</span><br><span class=\"line\">    print(<span class=\"string\">' '</span> * (count - <span class=\"number\">1</span>),<span class=\"string\">'*'</span> * count)</span><br><span class=\"line\">    count = count - <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"打印结束\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">####### 结果输出 ##########</span></span><br><span class=\"line\"><span class=\"comment\">#请输入显示*号的个数:10</span></span><br><span class=\"line\"><span class=\"comment\">#          **********</span></span><br><span class=\"line\"><span class=\"comment\">#         *********</span></span><br><span class=\"line\"><span class=\"comment\">#         ********</span></span><br><span class=\"line\"><span class=\"comment\">#        *******</span></span><br><span class=\"line\"><span class=\"comment\">#       ******</span></span><br><span class=\"line\"><span class=\"comment\">#      *****</span></span><br><span class=\"line\"><span class=\"comment\">#     ****</span></span><br><span class=\"line\"><span class=\"comment\">#    ***</span></span><br><span class=\"line\"><span class=\"comment\">#   **</span></span><br><span class=\"line\"><span class=\"comment\">#  *</span></span><br></pre></td></tr></table></figure></p>\n<p>3.改进游戏增加数据类型输入错误判断。<br>前面使用 type(temp) != type(1) 或者  not isinstance(temp, int)  输入类型判断的;以上方法的思路是正确的，不过似乎忽略了一点儿：就是 input() 的返回值始终是字符串，所以 type(temp) 永远是 &lt; class ‘str’&gt; .</p>\n<p>我们解决方法将采用字符串内置模块的方法，如String.isdigit()<br>while not temp.isdigit():<br>    temp = input(“抱歉，您的输入有误，请输入一个整数：”)</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\">#功能：课后作业05</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\">jihui = <span class=\"number\">3</span></span><br><span class=\"line\">secret = random.randint(<span class=\"number\">1</span>,<span class=\"number\">10</span>)</span><br><span class=\"line\">print(<span class=\"string\">'##############简单的数字游戏###############'</span>)</span><br><span class=\"line\">guess  = <span class=\"number\">0</span></span><br><span class=\"line\">print(<span class=\"string\">\"请输入0~10之间的数字：\"</span>,end=<span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> (guess != secret) <span class=\"keyword\">and</span> (jihui &gt; <span class=\"number\">0</span>):</span><br><span class=\"line\">    temp = input()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> temp.isdigit():</span><br><span class=\"line\">        guess = int(temp) </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (guess == secret):</span><br><span class=\"line\">            print(<span class=\"string\">\"您刚好猜中数字：\"</span>,secret) <span class=\"comment\">#猜中则会结束循环</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (guess &gt; secret):</span><br><span class=\"line\">                print(<span class=\"string\">\"MAX 值大了，亲\"</span>)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                print(<span class=\"string\">\"Min 值小了，亲\"</span>)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> jihui &gt; <span class=\"number\">1</span>:</span><br><span class=\"line\">               print(<span class=\"string\">\"请再尝试一次：\"</span>,end=<span class=\"string\">''</span>)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                print(<span class=\"string\">\"请机会用光了\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"对不起,输入有误,需要重新输入。\"</span>)</span><br><span class=\"line\">    jihui = jihui - <span class=\"number\">1</span>  <span class=\"comment\"># 用户每输入一次，可用机会就-1</span></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"游戏结束！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">####### 结果输出 ##########</span></span><br><span class=\"line\"><span class=\"comment\"># ------简单的数字游戏---------</span></span><br><span class=\"line\"><span class=\"comment\"># 请输入0~10之间的数字：5</span></span><br><span class=\"line\"><span class=\"comment\"># Min 值小了，亲</span></span><br><span class=\"line\"><span class=\"comment\"># 请再尝试一次：6</span></span><br><span class=\"line\"><span class=\"comment\"># Min 值小了，亲</span></span><br><span class=\"line\"><span class=\"comment\"># 请再尝试一次：8</span></span><br><span class=\"line\"><span class=\"comment\"># MAX  值大了，亲</span></span><br><span class=\"line\"><span class=\"comment\"># 请机会用光了</span></span><br><span class=\"line\"><span class=\"comment\"># 游戏结束！</span></span><br></pre></td></tr></table></figure>\n<p>4.现在的 Python 可以计算很大很大的数据，但是真正的大数据计算可是要靠刚刚的硬件滴,比如：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(<span class=\"number\">2</span> ** <span class=\"number\">2</span> ** <span class=\"number\">32</span>)</span><br><span class=\"line\"><span class=\"comment\"># 一般很多机子都会在一会儿之后：Memory Overflow，内存不够用。</span></span><br><span class=\"line\"><span class=\"comment\"># 设计到幂操作，结果都是惊人滴。</span></span><br><span class=\"line\"></span><br><span class=\"line\">你猜猜为何 print( (<span class=\"number\">2</span> ** <span class=\"number\">2</span>) ** <span class=\"number\">32</span>) 就可以计算出结果呢？</span><br><span class=\"line\">结果：<span class=\"number\">18446744073709551616</span></span><br><span class=\"line\">我猜想的是 print(<span class=\"number\">2</span> ** <span class=\"number\">2</span> ** <span class=\"number\">32</span>) 中由于 幂运算符 右边表达式的优先级大于左边表达式的优先级 ,计算的时候会这样：print(<span class=\"number\">2</span> ** (<span class=\"number\">2</span> ** <span class=\"number\">32</span>))  <span class=\"comment\">#想想这个是一个多么恐怖的数字</span></span><br></pre></td></tr></table></figure></p>\n<p>5.爱因斯坦难题<br>有一道有趣的数学题：有一个长阶梯，若每步上2阶，最后剩1阶；若每步上3阶，最后剩2阶；若每步上5阶，最后剩4阶；若每步上6阶，最后剩5阶；只有每步上7阶，最后刚好一阶也不剩。<br>题目：请编程求解该阶梯至少有多少阶？<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">##########算法方法1##########</span></span><br><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\">jieti = <span class=\"number\">7</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( jieti % <span class=\"number\">2</span> == <span class=\"number\">1</span>) <span class=\"keyword\">and</span> ( jieti % <span class=\"number\">3</span> == <span class=\"number\">2</span>) <span class=\"keyword\">and</span> ( jieti % <span class=\"number\">5</span> == <span class=\"number\">4</span>) <span class=\"keyword\">and</span> ( jieti % <span class=\"number\">6</span> == <span class=\"number\">5</span>) :</span><br><span class=\"line\">        print(<span class=\"string\">\"至少有 %d 阶梯\"</span> %jieti)  <span class=\"comment\">#至少有 119 阶梯</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        jieti = jieti + <span class=\"number\">7</span> <span class=\"comment\"># 根据题意，x一定是7的整数倍，所以每次+ 7</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##########算法方法2##########</span></span><br><span class=\"line\">x = <span class=\"number\">7</span></span><br><span class=\"line\">i = <span class=\"number\">1</span></span><br><span class=\"line\">flag = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> i &lt;= <span class=\"number\">100</span>:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (x%<span class=\"number\">2</span> == <span class=\"number\">1</span>) <span class=\"keyword\">and</span> (x%<span class=\"number\">3</span> == <span class=\"number\">2</span>) <span class=\"keyword\">and</span> (x%<span class=\"number\">5</span> == <span class=\"number\">4</span>) <span class=\"keyword\">and</span> (x%<span class=\"number\">6</span>==<span class=\"number\">5</span>):</span><br><span class=\"line\">        flag = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        x = <span class=\"number\">7</span> * (i+<span class=\"number\">1</span>) <span class=\"comment\"># 根据题意，x一定是7的整数倍，所以每次乘以7</span></span><br><span class=\"line\">    i += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> flag == <span class=\"number\">1</span>:</span><br><span class=\"line\">    print(<span class=\"string\">'阶梯数是：'</span>, x)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    print(<span class=\"string\">'在程序限定的范围内找不到答案！'</span>)</span><br></pre></td></tr></table></figure></p>\n<p>6.使用 if elif else 在大多数情况下效率要比全部使用 if 要高,<em>替代了switch…case 的功能</em>;<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">score = int(input(<span class=\"string\">'请输入一个分数：'</span>))</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"number\">80</span> &gt; score &gt;= <span class=\"number\">60</span>:</span><br><span class=\"line\">    print(<span class=\"string\">'C'</span>)</span><br><span class=\"line\"><span class=\"keyword\">elif</span> <span class=\"number\">90</span> &gt; score &gt;= <span class=\"number\">80</span>:</span><br><span class=\"line\">    print(<span class=\"string\">'B'</span>)</span><br><span class=\"line\"><span class=\"keyword\">elif</span> <span class=\"number\">60</span> &gt; score &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">    print(<span class=\"string\">'D'</span>)</span><br><span class=\"line\"><span class=\"keyword\">elif</span> <span class=\"number\">100</span> &gt;= score &gt;= <span class=\"number\">90</span>:</span><br><span class=\"line\">    print(<span class=\"string\">'A'</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    print(<span class=\"string\">'输入错误！'</span>)</span><br></pre></td></tr></table></figure></p>\n<p>7.请将以下代码修改为三元操作符实现：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">x, y, z = <span class=\"number\">6</span>, <span class=\"number\">5</span>, <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> x &lt; y:  </span><br><span class=\"line\">    small = x</span><br><span class=\"line\">    <span class=\"keyword\">if</span> z &lt; small:     <span class=\"comment\">#先判断外部，再判断内部关系</span></span><br><span class=\"line\">        small = z</span><br><span class=\"line\"><span class=\"keyword\">elif</span> y &lt; z:</span><br><span class=\"line\">    small = y</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    small = z</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">###########转换成三元运算符#############</span></span><br><span class=\"line\">small = x <span class=\"keyword\">if</span> (x &lt; y <span class=\"keyword\">and</span> x &lt; z) <span class=\"keyword\">else</span> (y <span class=\"keyword\">if</span> y &lt; z <span class=\"keyword\">else</span> z)</span><br></pre></td></tr></table></figure></p>\n<p>7.设计一个验证用户密码程序，用户只有三次机会输入错误，不过如果用户输入的内容中包含”*”则不计算在内。<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\">count = <span class=\"number\">3</span></span><br><span class=\"line\">password = <span class=\"string\">'123456'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> count:</span><br><span class=\"line\">    temp = input(<span class=\"string\">\"请输入密码：\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"string\">'*'</span> <span class=\"keyword\">in</span> temp:</span><br><span class=\"line\">        <span class=\"keyword\">continue</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> temp == password:</span><br><span class=\"line\">        print(<span class=\"string\">\"输入的密码正确\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        count = count - <span class=\"number\">1</span></span><br><span class=\"line\">        print(<span class=\"string\">\"密码输入错误,您还有 %d 次机会\"</span> %count)</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"Login Successful\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">####### 结果输出 ##########</span></span><br><span class=\"line\"><span class=\"comment\"># 请输入密码：123</span></span><br><span class=\"line\"><span class=\"comment\"># 密码输入错误,您还有 2 次机会</span></span><br><span class=\"line\"><span class=\"comment\"># 请输入密码：*asdsa</span></span><br><span class=\"line\"><span class=\"comment\"># 请输入密码：156454</span></span><br><span class=\"line\"><span class=\"comment\"># 密码输入错误,您还有 1 次机会</span></span><br><span class=\"line\"><span class=\"comment\"># 请输入密码：123456</span></span><br><span class=\"line\"><span class=\"comment\"># 输入的密码正确</span></span><br><span class=\"line\"><span class=\"comment\"># Login Successful</span></span><br></pre></td></tr></table></figure></p>\n<p>8.有红、黄、蓝三种颜色的求，其中红球 3 个，黄球 3 个，绿球 6 个。先将这 12 个球混合放在一个盒子中，从中任意摸出 8 个球，编程计算摸出球的各种颜色搭配。<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\">print(<span class=\"string\">'red\\tyellow\\tgreen'</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> red <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>, <span class=\"number\">4</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> yellow <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>, <span class=\"number\">4</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> green <span class=\"keyword\">in</span> range(<span class=\"number\">2</span>, <span class=\"number\">7</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> red + yellow + green == <span class=\"number\">8</span>:</span><br><span class=\"line\">                <span class=\"comment\"># 注意，下边不是字符串拼接，因此不用“+”哦~</span></span><br><span class=\"line\">                print(red, <span class=\"string\">'\\t'</span>, yellow, <span class=\"string\">'\\t'</span>, green)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">####### 结果输出 ##########</span></span><br><span class=\"line\"><span class=\"comment\"># red     yellow  green</span></span><br><span class=\"line\"><span class=\"comment\"># 0        2       6</span></span><br><span class=\"line\"><span class=\"comment\"># 0        3       5</span></span><br><span class=\"line\"><span class=\"comment\"># 1        1       6</span></span><br><span class=\"line\"><span class=\"comment\"># 1        2       5</span></span><br><span class=\"line\"><span class=\"comment\"># 1        3       4</span></span><br><span class=\"line\"><span class=\"comment\"># 2        0       6</span></span><br><span class=\"line\"><span class=\"comment\"># 2        1       5</span></span><br><span class=\"line\"><span class=\"comment\"># 2        2       4</span></span><br><span class=\"line\"><span class=\"comment\"># 2        3       3</span></span><br><span class=\"line\"><span class=\"comment\"># 3        0       5</span></span><br><span class=\"line\"><span class=\"comment\"># 3        1       4</span></span><br><span class=\"line\"><span class=\"comment\"># 3        2       3</span></span><br><span class=\"line\"><span class=\"comment\"># 3        3       2</span></span><br></pre></td></tr></table></figure><br>注释：range(2, 7) 是产生 [2, 3, 4, 5, 6] 这 5 个数，绿球不能是 1 个，因为如果绿球是 1 个的话，红球 + 黄球需要有 7 个才能符合题意，而红球和黄球每种只有 3 个，因此是 range(2, 7)</p>\n<p>9.按照特定的格式进行输出列值;<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#方法一：</span></span><br><span class=\"line\">member = [<span class=\"string\">'小甲鱼'</span>, <span class=\"number\">88</span>, <span class=\"string\">'黑夜'</span>, <span class=\"number\">90</span>, <span class=\"string\">'迷途'</span>, <span class=\"number\">85</span>, <span class=\"string\">'怡静'</span>, <span class=\"number\">90</span>, <span class=\"string\">'秋舞斜阳'</span>, <span class=\"number\">88</span>]</span><br><span class=\"line\">count = <span class=\"number\">0</span></span><br><span class=\"line\">length = len(member)</span><br><span class=\"line\"><span class=\"keyword\">while</span> count &lt; length:</span><br><span class=\"line\">    print(member[count], member[count+<span class=\"number\">1</span>])</span><br><span class=\"line\">    count += <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#方法二：</span></span><br><span class=\"line\">length = len(member)</span><br><span class=\"line\"><span class=\"keyword\">for</span> each <span class=\"keyword\">in</span> range(len(length)):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> each%<span class=\"number\">2</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">        print(member[each], member[each+<span class=\"number\">1</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">####### 结果输出 ##########</span></span><br><span class=\"line\"><span class=\"comment\"># 小甲鱼 88</span></span><br><span class=\"line\"><span class=\"comment\"># 黑夜 90</span></span><br><span class=\"line\"><span class=\"comment\"># 迷途 85</span></span><br><span class=\"line\"><span class=\"comment\"># 怡静 90</span></span><br><span class=\"line\"><span class=\"comment\"># 秋舞斜阳 88</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 小甲鱼 88</span></span><br><span class=\"line\"><span class=\"comment\"># 黑夜 90</span></span><br><span class=\"line\"><span class=\"comment\"># 迷途 85</span></span><br><span class=\"line\"><span class=\"comment\"># 怡静 90</span></span><br><span class=\"line\"><span class=\"comment\"># 秋舞斜阳 88</span></span><br></pre></td></tr></table></figure></p>\n<p>10.编写密码强度验证<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\">#密码验证：强度检查</span></span><br><span class=\"line\"><span class=\"comment\"># 密码安全性检查代码</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># 低级密码要求：</span></span><br><span class=\"line\"><span class=\"comment\">#   1. 密码由单纯的数字或字母组成</span></span><br><span class=\"line\"><span class=\"comment\">#   2. 密码长度小于等于8位</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># 中级密码要求：</span></span><br><span class=\"line\"><span class=\"comment\">#   1. 密码必须由数字、字母或特殊字符（仅限：~!@#$%^&amp;*()_=-/,.?&lt;&gt;;:[]&#123;&#125;|\\）任意两种组合</span></span><br><span class=\"line\"><span class=\"comment\">#   2. 密码长度不能低于8位</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># 高级密码要求：</span></span><br><span class=\"line\"><span class=\"comment\">#   1. 密码必须由数字、字母及特殊字符（仅限：~!@#$%^&amp;*()_=-/,.?&lt;&gt;;:[]&#123;&#125;|\\）三种组合</span></span><br><span class=\"line\"><span class=\"comment\">#   2. 密码只能由字母开头</span></span><br><span class=\"line\"><span class=\"comment\">#   3. 密码长度不能低于16位</span></span><br><span class=\"line\"></span><br><span class=\"line\">symbols = <span class=\"string\">r'''`!@#$%^&amp;*()_+-=/*&#123;&#125;[]\\|'\";:/?,.&lt;&gt;'''</span></span><br><span class=\"line\">chars = <span class=\"string\">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></span><br><span class=\"line\">nums = <span class=\"string\">'0123456789'</span></span><br><span class=\"line\"></span><br><span class=\"line\">password = input(<span class=\"string\">\"输入检查的密码:\"</span>)</span><br><span class=\"line\">length = len(password)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> (password.isspace() <span class=\"keyword\">or</span> length == <span class=\"number\">0</span>):</span><br><span class=\"line\">    password = input(<span class=\"string\">\"您输入的密码为空（或空格），请重新输入：\"</span>)</span><br><span class=\"line\">    length = len(length)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#判断字符串长度</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> length &lt;= <span class=\"number\">8</span>:</span><br><span class=\"line\">    flag_len = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">elif</span> length &lt;<span class=\"number\">16</span>:</span><br><span class=\"line\">    flag_len = <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    flag_len = <span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\">flag_con = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"comment\">#判断是否包含特殊字符</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> each <span class=\"keyword\">in</span> password:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> each <span class=\"keyword\">in</span> symbols:</span><br><span class=\"line\">        flag_con += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#判断是否包含字母</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> each <span class=\"keyword\">in</span> password:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> each <span class=\"keyword\">in</span> chars:</span><br><span class=\"line\">        flag_con += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#判断是否包含数字</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> each <span class=\"keyword\">in</span> password:</span><br><span class=\"line\">    <span class=\"keyword\">if</span> each <span class=\"keyword\">in</span> nums:</span><br><span class=\"line\">        flag_con += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#结果打印</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"您的密码评级：\"</span>,end=<span class=\"string\">\"\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> flag_len == <span class=\"number\">1</span> <span class=\"keyword\">or</span> flag_con == <span class=\"number\">1</span>: </span><br><span class=\"line\">        print(<span class=\"string\">\"低\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> flag_len == <span class=\"number\">3</span> <span class=\"keyword\">and</span> flag_con == <span class=\"number\">3</span> <span class=\"keyword\">and</span> password[<span class=\"number\">0</span>].isalpha():</span><br><span class=\"line\">        print(<span class=\"string\">\"高\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">break</span>   <span class=\"comment\">#这里的break用得精辟</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"中\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    print(<span class=\"string\">\"请按以下方式提升您的密码安全级别：\\n\\</span></span><br><span class=\"line\"><span class=\"string\">    \\t1. 密码必须由数字、字母及特殊字符三种组合\\n\\</span></span><br><span class=\"line\"><span class=\"string\">    \\t2. 密码只能由字母开头\\n\\</span></span><br><span class=\"line\"><span class=\"string\">    \\t3. 密码长度不能低于16位\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">########### 结果输出 ##########</span></span><br><span class=\"line\"><span class=\"comment\"># 输入检查的密码:Weiyi2000Geek16!</span></span><br><span class=\"line\"><span class=\"comment\"># 您的密码评级：高</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输入检查的密码:wwq5678897ae@1</span></span><br><span class=\"line\"><span class=\"comment\"># 您的密码评级：中</span></span><br><span class=\"line\"><span class=\"comment\"># 请按以下方式提升您的密码安全级别：</span></span><br><span class=\"line\"><span class=\"comment\">#         1. 密码必须由数字、字母及特殊字符三种组合</span></span><br><span class=\"line\"><span class=\"comment\">#         2. 密码只能由字母开头</span></span><br><span class=\"line\"><span class=\"comment\">#         3. 密码长度不能低于16位</span></span><br></pre></td></tr></table></figure></p>\n<p>11.进制转换案例。<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\">#方式1：进制转换</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    temp = input(<span class=\"string\">\"请输入一个整数(输入Q退出程序)：\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> temp == <span class=\"string\">'Q'</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    temp = int(temp)</span><br><span class=\"line\">    print(<span class=\"string\">\"十进制 -&gt; 十六进制 ： %d -&gt; 0x%x\"</span> %(temp,temp))</span><br><span class=\"line\">    print(<span class=\"string\">\"十进制 -&gt; 八进制 ： %d -&gt; 0o%o\"</span> %(temp,temp))</span><br><span class=\"line\">    print(<span class=\"string\">\"十进制 -&gt; 二进制 ： %d -&gt;\"</span> %temp, bin(temp))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#方式2：递归方式 list</span></span><br><span class=\"line\">listbin = []</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">binary</span><span class=\"params\">(x)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> x != <span class=\"number\">1</span>:</span><br><span class=\"line\">        binary(x // <span class=\"number\">2</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> listbin.append(x % <span class=\"number\">2</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> listbin.append(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">value = input(<span class=\"string\">\"输入一个整形值:\"</span>)</span><br><span class=\"line\">value = int(value)</span><br><span class=\"line\">binary(value)</span><br><span class=\"line\"><span class=\"keyword\">for</span> each <span class=\"keyword\">in</span> listbin:</span><br><span class=\"line\">    print(each,end=<span class=\"string\">\"\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#方式3：更精简的方法 str</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">Dec2Bin</span><span class=\"params\">(dec)</span>:</span></span><br><span class=\"line\">    result = <span class=\"string\">''</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> dec:</span><br><span class=\"line\">        result = Dec2Bin(dec//<span class=\"number\">2</span>)   </span><br><span class=\"line\">        <span class=\"keyword\">return</span> result + str(dec%<span class=\"number\">2</span>)  <span class=\"comment\">#精辟之处</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result   <span class=\"comment\">#先记录第一个值</span></span><br><span class=\"line\"></span><br><span class=\"line\">print(Dec2Bin(<span class=\"number\">62</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">########### 结果输出 ##########</span></span><br><span class=\"line\"><span class=\"comment\"># 请输入一个整数(输入Q退出程序)：255</span></span><br><span class=\"line\"><span class=\"comment\"># 十进制 -&gt; 十六进制 ： 255 -&gt; 0xff</span></span><br><span class=\"line\"><span class=\"comment\"># 十进制 -&gt; 八进制 ： 255 -&gt; 0o377</span></span><br><span class=\"line\"><span class=\"comment\"># 十进制 -&gt; 二进制 ： 255 -&gt; 0b11111111</span></span><br></pre></td></tr></table></figure></p>\n","comments":true,"excerpt":"[TOC]1)Python笔试基础知识Python 是什么类型的语言？<br>Python是脚本语言(Scripting language)","categories":[{"name":"Python3","path":"api/categories/Python3.json"}],"tags":[{"name":"Interview","path":"api/tags/Interview.json"}]}