{"title":"K3s之快速搭建精简版本K8S集群环境","slug":"虚拟云容/云容器/Rancher/K3s之快速搭建精简版本K8S集群环境","date":"2022-05-22T06:36:30.000Z","updated":"2022-12-30T09:49:00.213Z","url":"2022/5-22-672.html","path":"api/articles/2022/5-22-672.html.json","covers":["https://img.weiyigeek.top/2022/10/20221030161233.png","https://img.weiyigeek.top/2022/10/20221030160739.png","https://img.weiyigeek.top/2022/10/20221230142308.png","https://img.weiyigeek.top/2022/10/20221030150916.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h2 id=\"0x00-前言简述\"><a href=\"#0x00-前言简述\" class=\"headerlink\" title=\"0x00 前言简述\"></a>0x00 前言简述</h2><p><strong>Q: 什么是 K3S?</strong></p>\n<blockquote>\n<p>描述: 它是一个轻量级K8S(Lightweight Kubernetes)同时它也是一个云原生计算基金会(CNCF)沙盒项目, 为物联网和边缘计算构建的经过认证的 Kubernetes 发行版, 减少了kubernetes云供应商相关插件所以其更加精简, 部署也更加简单。 </p>\n</blockquote>\n<p><br></p>\n<p><strong>为什么叫 K3s?</strong><br>我们希望安装的 Kubernetes 在内存占用方面只是一半的大小，且 Kubernetes 是一个10个字母的单词简写为 K8s。所以，有 Kubernetes 一半大的东西就是一个 5 个字母的单词，简写为 K3s <code>(其没有全称，也没有官方的发音)</code>。</p>\n<p><br></p>\n<p><strong>Q: 为什么使用 K3S?</strong></p>\n<blockquote>\n<p>1) 简化和安全 : K3s <code>单个二进制文件小于50MB，可减少安装、运行和自动更新生产 Kubernetes 集群</code>所需的依赖关系和步骤。<br>2) 边缘的完美选择: 高度可用、经过认证的 Kubernetes 发行版，专为无人值守、资源受限的远程位置或<code>IoT 设备</code>内部的生产工作负载而设计。<br>3) 支持ARM优化 : K3S 提供了 ARM64 和 ARMv7 都支持二进制文件和多架构映像, 所以可以运行在<code>嵌入式设备</code>之中。<br>4) 资源占用更少: 不仅能够<code>缩短启动集群</code>的时间，还能够<code>减少集群需要消耗的资源</code>。<br>5) 存储机制 : 使用基于 <code>sqlite3</code>的轻量级存储后端作为默认存储，但同时支持使用 <code>etcd3、MySQL 和 PostgreSQL</code> 作为存储机制。<br>6) 内置增强功能 : 添加了简单但功能强大的<code>batteries-included</code>功能，例如 <code>本地存储提供程序，服务负载均衡器，Helm controller 和 Traefik Ingress controller</code>, 所有 <code>Kubernetes control-plane</code> 组件的操作都封装在单个二进制文件和进程中，使 K3s 具有自动化和管理包括证书分发在内的复杂集群操作的能力。<br>7) 更少的依赖 : 最大程度减轻了外部依赖性，K3s 仅需要 kernel 和 cgroup 挂载。</p>\n</blockquote>\n<p><br></p>\n<p><strong>K3S 工作原理</strong></p>\n<blockquote>\n<p>描述: K3S 它由 Server 与 Agent 两大节点组成，其中K3s server 是运行k3s server命令的机器（裸机或虚拟机），而 K3s worker 节点是运行k3s agent命令的机器。</p>\n</blockquote>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/10/20221030161233.png\" alt=\"WeiyiGeek.K3S工作原理图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.K3S工作原理图</p>\n            </figure>\n<p><br></p>\n<p><strong>K3S 架构图</strong></p>\n<p>有单节点、高可用等多种架构方式，你可以根据实际情况选择架构方式。</p>\n<ul>\n<li>单节点架构：有一个内嵌 SQLite 数据库的单节点 K3s server，在此种配置中每个 agent 节点都注册到同一个 server 节点。</li>\n<li>高可用架构: 多个K3s Server节点为 Kubernetes API 提供服务并运行其他 control-plane 服务，并需挂载一个external database外部数据库作为数据存储的媒介。</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/10/20221030160739.png\" alt=\"WeiyiGeek.K3S架构图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.K3S架构图</p>\n            </figure>\n<p><br></p>\n<p><strong>K3S Agent 节点</strong><br>Agent 节点 用k3s agent进程发起的 websocket 连接注册，连接由作为代理进程一部分运行的客户端负载均衡器维护。</p>\n<p>Agent 将使用节点集群 secret 以及随机生成的节点密码向 k3s server 注册, 密码存储在 <code>/etc/rancher/node/password</code> 路径下, K3s server 将把各个节点的密码存储为 Kubernetes secrets，随后的任何尝试都必须使用相同的密码,节点密码秘密存储在kube-system命名空间中，名称使用模板<code>&lt;host&gt;.node-password.k3s</code></p>\n<p>温馨提示:</p>\n<ul>\n<li>在 K3s v1.20.2 之前，K3s server 将密码存储在 <code>/var/lib/rancher/k3s/server/cred/node-passwd</code> 的磁盘上。</li>\n<li>如果您删除了 agent 的/etc/rancher/node 目录，则需要为该 agent 重新创建密码文件，或者从 server 中删除该条目。</li>\n<li>通过使用 <code>--with-node-id</code> 标志启动 K3s server 或 agent，可以将唯一的节点 ID 附加到主机名中。</li>\n</ul>\n<p><br></p>\n<p><strong>K3s 应用场景</strong><br>描述： 由于运行 K3s 所需的资源相对较少，所以 K3s 也适用于开发和测试场景，以及<code>边缘计算-Edge、物联网-IoT、CI、ARM、嵌入 K8s</code>等场景中！<br>综上所述，使用 K3s 不仅能够缩短启动集群的时间，还能够减少集群需要消耗的资源。</p>\n<hr>\n<h2 id=\"0x01-安装实践\"><a href=\"#0x01-安装实践\" class=\"headerlink\" title=\"0x01 安装实践\"></a>0x01 安装实践</h2><h3 id=\"1-环境要求\"><a href=\"#1-环境要求\" class=\"headerlink\" title=\"1.环境要求\"></a>1.环境要求</h3><p>描述: 无论您是将 K3s 集群配置为在 Docker 还是 Kubernetes 设置中运行，运行 K3 的每个节点都应满足以下最低要求。</p>\n<p><strong>测试环境</strong></p>\n<ul>\n<li>硬件: 内存最少512MB（建议至少1GB）, CPU 最少一个, 磁盘最好使用SSD。</li>\n<li>软件: 选择常用的操作系统例如<code>Ubuntu、Debian、CentOS</code>等, 但是针对某些操作系统有特定要求例如 <code>Red Hat/CentOS</code>、<code>Alpine Linux</code>和<code>Raspbian Buster</code>.</li>\n<li>先决条件：<ul>\n<li>节点不能具有相同的主机名</li>\n<li>防火墙需要对k3s Server 的 6443端口 放行，因为 K3s服务器需要端口 6443 才能被所有节点访问。</li>\n</ul>\n</li>\n</ul>\n<p><strong>生产环境</strong><br>对于生产环境中的外部数据库，建议使用以下数据库<code>MySQL （常用）/ PostgreSQL / etcd</code>，并且硬件要求取决于 K3s 集群的大小以下是高可用性K3s服务器中节点的最低CPU和内存要求：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">DEPLOYMENT SIZE</th>\n<th style=\"text-align:left\">NODES</th>\n<th style=\"text-align:left\">VCPUS</th>\n<th style=\"text-align:left\">RAM</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Small</td>\n<td style=\"text-align:left\">Up to 10</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">4 GB</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Medium</td>\n<td style=\"text-align:left\">Up to 100</td>\n<td style=\"text-align:left\">4</td>\n<td style=\"text-align:left\">8 GB</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Large</td>\n<td style=\"text-align:left\">Up to 250</td>\n<td style=\"text-align:left\">8</td>\n<td style=\"text-align:left\">16 GB</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">X-Large</td>\n<td style=\"text-align:left\">Up to 500</td>\n<td style=\"text-align:left\">16</td>\n<td style=\"text-align:left\">32 GB</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">XX-Large</td>\n<td style=\"text-align:left\">500+</td>\n<td style=\"text-align:left\">32</td>\n<td style=\"text-align:left\">64 GB</td>\n</tr>\n</tbody>\n</table>\n<p><br></p>\n<p><strong>K3s 软件包需要的依赖项包括</strong></p>\n<ul>\n<li>containerd</li>\n<li>Flannel</li>\n<li>CoreDNS</li>\n<li>CNI</li>\n<li>主机实用程序（iptables、socat 等）</li>\n<li>Ingress controller（Traefik）</li>\n<li>嵌入式服务负载均衡器（service load balancer）</li>\n<li>嵌入式网络策略控制器（network policy controller）</li>\n</ul>\n<p><br></p>\n<p><strong>服务端口</strong></p>\n<p>K3s服务器节点的入站规则(Inbound Rules for K3s Server Nodes)</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">PROTOCOL</th>\n<th style=\"text-align:left\">PORT</th>\n<th style=\"text-align:left\">SOURCE</th>\n<th style=\"text-align:left\">DESCRIPTION</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">TCP</td>\n<td style=\"text-align:left\">6443</td>\n<td style=\"text-align:left\">K3s agent nodes</td>\n<td style=\"text-align:left\">Kubernetes API Server</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">UDP</td>\n<td style=\"text-align:left\">8472</td>\n<td style=\"text-align:left\">K3s server and agent nodes</td>\n<td style=\"text-align:left\">Required only for Flannel VXLAN</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">UDP</td>\n<td style=\"text-align:left\">51820</td>\n<td style=\"text-align:left\">K3s server and agent nodes</td>\n<td style=\"text-align:left\">Required only for Flannel Wireguard backend</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">UDP</td>\n<td style=\"text-align:left\">51821</td>\n<td style=\"text-align:left\">K3s server and agent nodes</td>\n<td style=\"text-align:left\">Required only for Flannel Wireguard backend with IPv6</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TCP</td>\n<td style=\"text-align:left\">10250</td>\n<td style=\"text-align:left\">K3s server and agent nodes</td>\n<td style=\"text-align:left\">Kubelet metrics</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TCP</td>\n<td style=\"text-align:left\">2379-2380</td>\n<td style=\"text-align:left\">K3s server nodes</td>\n<td style=\"text-align:left\">Required only for HA with embedded etcd</td>\n</tr>\n</tbody>\n</table>\n<p>当前【2022年6月14日 22:04:49】节点最新版本为 v1.24.1+k3s1 (<a href=\"https://github.com/k3s-io/k3s/releases/tag/v1.24.1+k3s1\" target=\"_blank\" rel=\"noopener\">https://github.com/k3s-io/k3s/releases/tag/v1.24.1+k3s1</a>)</p>\n<p><br/></p>\n<h3 id=\"2-脚本在线安装\"><a href=\"#2-脚本在线安装\" class=\"headerlink\" title=\"2.脚本在线安装\"></a>2.脚本在线安装</h3><p>描述：k3s官方提供的一键安装脚本仅需30秒即可启动k3s，但是国内用户使用官方链接下载安装巨慢无比，好在提供了国内快速安装方法脚本。</p>\n<p><strong>环境变量</strong><br>使用此方法安装 K3s 时，可使用以下环境变量来配置安装选项（重点）：</p>\n<ul>\n<li>INSTALL_K3S_SKIP_DOWNLOAD ：如果设置为 “true “将不会下载 K3s 的哈希值或二进制。</li>\n<li>INSTALL_K3S_SYMLINK ：默认情况下，如果路径中不存在命令，将为 kubectl、crictl 和 ctr 二进制文件创建符号链接。如果设置为’skip’将不会创建符号链接，而’force’将覆盖。</li>\n<li>INSTALL_K3S_SKIP_ENABLE ：如果设置为 “true”，将不启用或启动 K3s 服务。</li>\n<li>INSTALL_K3S_SKIP_START ：如果设置为 “true “将不会启动 K3s 服务。</li>\n<li>INSTALL_K3S_VERSION ：从 Github 下载 K3s 的版本。如果没有指定，将尝试从”stable”频道下载。</li>\n<li>INSTALL_K3S_BIN_DIR ：安装 K3s 二进制文件、链接和卸载脚本的目录，或者使用/usr/local/bin作为默认目录。</li>\n<li>INSTALL_K3S_BIN_DIR_READ_ONLY ：如果设置为 true 将不会把文件写入INSTALL_K3S_BIN_DIR，强制设置INSTALL_K3S_SKIP_DOWNLOAD=true。</li>\n<li>INSTALL_K3S_SYSTEMD_DIR ：安装 systemd 服务和环境文件的目录，或者使用/etc/systemd/system作为默认目录。</li>\n<li>INSTALL_K3S_EXEC ：带有标志的命令，用于在服务中启动 K3s。如果未指定命令，并且设置了K3S_URL，它将默认为“agent”。如果未设置K3S_URL，它将默认为“server”。要获得帮助，请参考此示例。</li>\n<li>INSTALL_K3S_NAME ：要创建的 systemd 服务名称，如果以服务器方式运行 k3s，则默认为’k3s’；如果以 agent 方式运行 k3s，则默认为’k3s-agent’。如果指定了服务名，则服务名将以’k3s-‘为前缀。</li>\n<li>INSTALL_K3S_TYPE ：要创建的 systemd 服务类型，如果没有指定，将默认使用 K3s exec 命令。</li>\n<li>INSTALL_K3S_SELINUX_WARN ：如果设置为 true，则在没有找到 k3s-selinux 策略的情况下将继续。</li>\n<li>INSTALL_K3S_SKIP_SELINUX_RPM ：如果设置为 “true “将跳过 k3s RPM 的自动安装。</li>\n<li>INSTALL_K3S_CHANNEL_URL ：用于获取 K3s 下载网址的频道 URL。默认为 <a href=\"https://update.k3s.io/v1-release/channels\" target=\"_blank\" rel=\"noopener\">https://update.k3s.io/v1-release/channels</a> 。</li>\n<li>INSTALL_K3S_CHANNEL ：用于获取 K3s 下载 URL 的通道。默认值为 “stable”。选项包括：stable, latest, testing。</li>\n<li>K3S_CONFIG_FILE ：指定配置文件的位置。默认目录为/etc/rancher/k3s/config.yaml。</li>\n<li>K3S_TOKEN    ：用于将 server 或 agent 加入集群的共享 secret。</li>\n<li>K3S_TOKEN_FILE ：指定 cluster-secret,token 的文件目录。</li>\n<li>INSTALL_K3S_MIRROR: 使用国内镜像源进行安装</li>\n</ul>\n<p><strong>操作步骤</strong></p>\n<p>步骤01.国内使用安装脚本快速安装单节点实例的k3s环境。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 0.此处环境为Ubuntu 22.04 上进行实践安装</span></span><br><span class=\"line\">uname -a</span><br><span class=\"line\">  <span class=\"comment\"># Linux Ubuntu-Security 5.15.0-48-generic #54-Ubuntu SMP Fri Aug 26 13:26:29 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1.使用https://get.k3s.io 提供的安装脚本在基于 systemd 和 openrc 的系统上安装 K3s 作为服务。</span></span><br><span class=\"line\"><span class=\"comment\"># Check for Ready node, takes maybe 30 seconds</span></span><br><span class=\"line\">curl -sfL https://get.k3s.io | INSTALL_K3S_CHANNEL=latest sh -</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.国内用户，可以使用以下方法加速安装：</span></span><br><span class=\"line\">curl -sfL https://rancher-mirror.oss-cn-beijing.aliyuncs.com/k3s/k3s-install.sh | INSTALL_K3S_MIRROR=cn INSTALL_K3S_CHANNEL=latest K3S_TOKEN=k3s.weiyigeek.top sh -s - \\</span><br><span class=\"line\">     --system-default-registry <span class=\"string\">\"registry.cn-hangzhou.aliyuncs.com\"</span></span><br><span class=\"line\"><span class=\"comment\"># 离线安装：INSTALL_K3S_MIRROR=cn INSTALL_K3S_CHANNEL=latest K3S_TOKEN=k3s.weiyigeek.top ./k3s-install.sh --system-default-registry \"registry.cn-hangzhou.aliyuncs.com\"</span></span><br><span class=\"line\"><span class=\"comment\"># 执行结果: </span></span><br><span class=\"line\">  <span class=\"comment\"># [INFO]  Finding release for channel latest</span></span><br><span class=\"line\">  <span class=\"comment\"># [INFO]  Using v1.25.3+k3s1 as release</span></span><br><span class=\"line\">  <span class=\"comment\"># [INFO]  Downloading hash rancher-mirror.oss-cn-beijing.aliyuncs.com/k3s/v1.25.3-k3s1/sha256sum-amd64.txt</span></span><br><span class=\"line\">  <span class=\"comment\"># [INFO]  Downloading binary rancher-mirror.oss-cn-beijing.aliyuncs.com/k3s/v1.25.3-k3s1/k3s</span></span><br><span class=\"line\">  <span class=\"comment\"># [INFO]  Verifying binary download</span></span><br><span class=\"line\">  <span class=\"comment\"># [INFO]  Installing k3s to /usr/local/bin/k3s</span></span><br><span class=\"line\">  <span class=\"comment\"># [INFO]  Skipping installation of SELinux RPM</span></span><br><span class=\"line\">  <span class=\"comment\"># [INFO]  Creating /usr/local/bin/kubectl symlink to k3s</span></span><br><span class=\"line\">  <span class=\"comment\"># [INFO]  Creating /usr/local/bin/crictl symlink to k3s</span></span><br><span class=\"line\">  <span class=\"comment\"># [INFO]  Creating /usr/local/bin/ctr symlink to k3s</span></span><br><span class=\"line\">  <span class=\"comment\"># [INFO]  Creating killall script /usr/local/bin/k3s-killall.sh</span></span><br><span class=\"line\">  <span class=\"comment\"># [INFO]  Creating uninstall script /usr/local/bin/k3s-uninstall.sh</span></span><br><span class=\"line\">  <span class=\"comment\"># [INFO]  env: Creating environment file /etc/systemd/system/k3s.service.env</span></span><br><span class=\"line\">  <span class=\"comment\"># [INFO]  systemd: Creating service file /etc/systemd/system/k3s.service</span></span><br><span class=\"line\">  <span class=\"comment\"># [INFO]  systemd: Enabling k3s unit</span></span><br><span class=\"line\">  <span class=\"comment\"># Created symlink /etc/systemd/system/multi-user.target.wants/k3s.service → /etc/systemd/system/k3s.service.</span></span><br><span class=\"line\">  <span class=\"comment\"># [INFO]  systemd: Starting k3s  # 表示安装和k3s服务启动成功</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ ls /usr/<span class=\"built_in\">local</span>/bin</span><br><span class=\"line\">crictl  ctr  k3s  k3s-killall.sh  k3s-uninstall.sh</span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<p>步骤 02.查看k3s服务安装环境验证。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.查看k3s服务状态</span></span><br><span class=\"line\">systemctl status -l k3s.service</span><br><span class=\"line\">● k3s.service - Lightweight Kubernetes</span><br><span class=\"line\">     Loaded: loaded (/etc/systemd/system/k3s.service; enabled; vendor preset: enabled)</span><br><span class=\"line\">     Active: active (running) since Sun 2022-10-30 14:27:16 CST; 3min 55s ago</span><br><span class=\"line\">       Docs: https://k3s.io</span><br><span class=\"line\">    Process: 84116 ExecStartPre=/bin/sh -xc ! /usr/bin/systemctl is-enabled --quiet nm-cloud-setup.service (code=exited, status=0/SUCCESS)</span><br><span class=\"line\">    Process: 84118 ExecStartPre=/sbin/modprobe br_netfilter (code=exited, status=0/SUCCESS)</span><br><span class=\"line\">    Process: 84122 ExecStartPre=/sbin/modprobe overlay (code=exited, status=0/SUCCESS)</span><br><span class=\"line\">   Main PID: 84123 (k3s-server)</span><br><span class=\"line\">      Tasks: 116</span><br><span class=\"line\">     Memory: 1.2G</span><br><span class=\"line\">        CPU: 40.024s</span><br><span class=\"line\">     CGroup: /system.slice/k3s.service</span><br><span class=\"line\">             ├─84123 <span class=\"string\">\"/usr/local/bin/k3s server\"</span></span><br><span class=\"line\">             ├─84169 containerd -c /var/lib/rancher/k3s/agent/etc/containerd/config.toml -a /run/k3s/containerd/containerd.sock --state /run/k3s/containerd --root /var/lib/rancher/k3s/agent/containerd</span><br><span class=\"line\">             .......</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.查看 k3s 节点相关</span></span><br><span class=\"line\">k3s kubectl get node --show-labels -o wide</span><br><span class=\"line\">  <span class=\"comment\"># NAME              STATUS   ROLES                  AGE     VERSION        INTERNAL-IP     EXTERNAL-IP   OS-IMAGE             KERNEL-VERSION      CONTAINER-RUNTIME         LABELS</span></span><br><span class=\"line\">  <span class=\"comment\"># ubuntu-security   Ready    control-plane,master   2m17s   v1.25.3+k3s1   10.10.107.201   &lt;none&gt;        Ubuntu 22.04.1 LTS   5.15.0-48-generic   containerd://1.6.8-k3s1   beta.kubernetes.io/arch=amd64,beta.kubernetes.io/instance-type=k3s,beta.kubernetes.io/os=linux,egress.k3s.io/cluster=true,kubernetes.io/arch=amd64,kubernetes.io/hostname=ubuntu-security,kubernetes.io/os=linux,node-role.kubernetes.io/control-plane=true,node-role.kubernetes.io/master=true,node.kubernetes.io/instance-type=k3s</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.查看 k3s 集群配置文件</span></span><br><span class=\"line\">k3s kubectl cluster-info</span><br><span class=\"line\">  <span class=\"comment\"># Kubernetes control plane is running at https://127.0.0.1:6443</span></span><br><span class=\"line\">  <span class=\"comment\"># CoreDNS is running at https://127.0.0.1:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy</span></span><br><span class=\"line\">  <span class=\"comment\"># Metrics-server is running at https://127.0.0.1:6443/api/v1/namespaces/kube-system/services/https:metrics-server:https/proxy</span></span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 03.在 尝试在 k3s 环境中快速创建 hello world Pod 容器, 此处为了方便我们使用kubectl命令，我们可以设置别名或者直接下载kubernetes最新的二进制客户端文件(kubectl) ，下载地址【 <a href=\"https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.26.md\" target=\"_blank\" rel=\"noopener\">https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.26.md</a> 】。</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/10/20221230142308.png\" alt=\"WeiyiGeek.载kubernetes最新的二进制客户端文件下载图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.载kubernetes最新的二进制客户端文件下载图</p>\n            </figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 0.访问k8s项目Release首页,然后可以查看到最新版本以及标注出来的\"CHANGELOG\"，点击 Client Binary。</span></span><br><span class=\"line\"><span class=\"comment\"># https://github.com/kubernetes/kubernetes/releases</span></span><br><span class=\"line\"><span class=\"comment\"># Downloads for v1.26.0</span></span><br><span class=\"line\"><span class=\"comment\">#     Source Code</span></span><br><span class=\"line\"><span class=\"comment\">#     Client Binaries</span></span><br><span class=\"line\"><span class=\"comment\">#     Server Binaries</span></span><br><span class=\"line\"><span class=\"comment\">#     Node Binaries</span></span><br><span class=\"line\"><span class=\"comment\">#     Container Images</span></span><br><span class=\"line\"></span><br><span class=\"line\">wget https://dl.k8s.io/v1.26.0/kubernetes-client-linux-amd64.tar.gz &amp;&amp;  tar -zxvf kubernetes-client-linux-amd64.tar.gz</span><br><span class=\"line\">cp kubernetes/client/bin/kubectl /usr/<span class=\"built_in\">local</span>/bin/kubectl</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 自动补齐</span></span><br><span class=\"line\">apt install -y bash-completion &amp;&amp; <span class=\"built_in\">source</span> /usr/share/bash-completion/bash_completion</span><br><span class=\"line\"><span class=\"built_in\">source</span> &lt;(kubectl completion bash)</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"source &lt;(kubectl completion bash)\"</span> &gt;&gt; ~/.bashrc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1.设置 kubeconfig 文件路径用于对 Kubernetes 集群的访问。</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> KUBECONFIG=/etc/rancher/k3s/k3s.yaml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.查看运行正常后的kube-system名称空间下的pod信息。</span></span><br><span class=\"line\">$ k3s kubectl get node --show-labels</span><br><span class=\"line\">  NAME        STATUS   ROLES                  AGE   VERSION        LABELS</span><br><span class=\"line\">  master-01   Ready    control-plane,master   65s   v1.25.3+k3s1   beta.kubernetes.io/arch=amd64,beta.kubernetes.io/instance-type=k3s,beta.kubernetes.io/os=linux,egress.k3s.io/cluster=<span class=\"literal\">true</span>,kubernetes.io/arch=amd64,kubernetes.io/hostname=master-01,kubernetes.io/os=linux,node-role.kubernetes.io/control-plane=<span class=\"literal\">true</span>,node-role.kubernetes.io/master=<span class=\"literal\">true</span>,node.kubernetes.io/instance-type=k3s</span><br><span class=\"line\"></span><br><span class=\"line\">$ kubectl get pod -A</span><br><span class=\"line\">  NAMESPACE     NAME                                      READY   STATUS      RESTARTS   AGE</span><br><span class=\"line\">  kube-system   coredns-64858695d9-87272                  1/1     Running     0          88s</span><br><span class=\"line\">  kube-system   <span class=\"built_in\">local</span>-path-provisioner-858c864885-kcgzp   1/1     Running     0          88s</span><br><span class=\"line\">  kube-system   helm-install-traefik-crd-qnkdm            0/1     Completed   0          88s</span><br><span class=\"line\">  kube-system   metrics-server-5d7f9fc86-8jhqk            1/1     Running     0          88s</span><br><span class=\"line\">  kube-system   svclb-traefik-4e10ea70-9s2nf              2/2     Running     0          61s</span><br><span class=\"line\">  kube-system   helm-install-traefik-qjdss                0/1     Completed   1          88s</span><br><span class=\"line\">  kube-system   traefik-b4bf7b498-fkbb5                   1/1     Running     0          61s</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.Pod 创建测试与运行查看</span></span><br><span class=\"line\">kubectl run hello-k3s --image=alpine:latest --image-pull-policy=IfNotPresent --restart=Never --env=<span class=\"string\">\"project=k3s\"</span> --labels=<span class=\"string\">\"app=helloworld\"</span>  --<span class=\"built_in\">command</span> -- <span class=\"built_in\">echo</span> <span class=\"string\">\"hello world! K3s !\"</span></span><br><span class=\"line\">kubectl get pod --show-labels -o wide</span><br><span class=\"line\">  <span class=\"comment\"># NAME        READY   STATUS      RESTARTS   AGE   IP           NODE              NOMINATED NODE   READINESS GATES   LABELS</span></span><br><span class=\"line\">  <span class=\"comment\"># hello-k3s   0/1     Completed   0          29s   10.42.0.17   ubuntu-security   &lt;none&gt;           &lt;none&gt;            app=helloworld</span></span><br><span class=\"line\"></span><br><span class=\"line\">kubectl logs -f hello-k3s</span><br><span class=\"line\">  <span class=\"comment\"># hello world! K3s !</span></span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img.weiyigeek.top/2022/10/20221030150916.png\" alt=\"WeiyiGeek.k3s安装完成后默认资源图\"></p>\n<p><br/></p>\n<p>步骤 04.一条命令将其他工作节点加入到k3s集群管理。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server-ip=10.10.107.201</span><br><span class=\"line\">k3s-token=k3s.weiyigeek.top</span><br><span class=\"line\">curl -sfL http://rancher-mirror.cnrancher.com/k3s/k3s-install.sh | INSTALL_K3S_MIRROR=cn K3S_URL=https://<span class=\"variable\">$&#123;server-ip&#125;</span>:6443 K3S_TOKEN=<span class=\"variable\">$&#123;k3s-token&#125;</span> sh -</span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<p>步骤 05. 卸载 K3s 如果您使用安装脚本安装了 K3s，那么在安装过程中会自动生成一个卸载 K3s 的脚本。<br>卸载 K3s 会删除集群数据和所有脚本, 要使用不同的安装选项重新启动集群，请使用不同的标志重新运行安装脚本。</p>\n<ul>\n<li>要从 server 节点卸载 K3s，请运行：<code>/usr/local/bin/k3s-uninstall.sh</code></li>\n<li>要从 agent 节点卸载 K3s，请运行：<code>/usr/local/bin/k3s-agent-uninstall.sh</code></li>\n</ul>\n<p><br/></p>\n<p><strong>补充说明</strong>: </p>\n<p>1.除此之外我们还可以为K3S命令行设置别名，例如，临时生效<code>alias k=&#39;k3s kubectl&#39;</code><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">k get ns</span><br><span class=\"line\">k get pod -A</span><br></pre></td></tr></table></figure></p>\n<p>2.K3s 配置目录及文件路径说明。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># k3s 相关配置</span></span><br><span class=\"line\">$ tree /etc/rancher</span><br><span class=\"line\">/etc/rancher</span><br><span class=\"line\">├── k3s</span><br><span class=\"line\">│   └── k3s.yaml  <span class=\"comment\"># kubeconfig</span></span><br><span class=\"line\">└── node</span><br><span class=\"line\">    └── password  <span class=\"comment\"># 随机生成的节点密码向 k3s server 注册</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># k3s 节点数据信息</span></span><br><span class=\"line\">$ ls /var/lib/rancher/k3s/</span><br><span class=\"line\">agent  data  server</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># kubelet 服务运行配置相关信息</span></span><br><span class=\"line\">$ ls /var/lib/kubelet</span><br><span class=\"line\">cpu_manager_state  device-plugins  memory_manager_state  plugins  plugins_registry  pod-resources  pods</span><br></pre></td></tr></table></figure></p>\n<p>3.自动部署的清单, 位于目录路径 <code>/var/lib/rancher/k3s/server/manifests</code> 的清单在构建时被捆绑到 K3s 二进制文件中, 将由 `rancher/helm-controller 在运行时安装。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls /var/lib/rancher/k3s/server/manifests</span><br><span class=\"line\">ccm.yaml  coredns.yaml  <span class=\"built_in\">local</span>-storage.yaml  metrics-server  rolebindings.yaml  traefik.yaml</span><br></pre></td></tr></table></figure></p>\n<p>4.k3s默认使用 containerd 作为容器运行时, 在 goroutine 中以 子进程 方式 启动 containerd。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps aux | grep <span class=\"string\">\"k3s server\"</span> | grep -v <span class=\"string\">\"grep\"</span></span><br><span class=\"line\">root     1209470  3.2 12.0 1267032 484888 ?      Ssl  15:47   1:21 /usr/<span class=\"built_in\">local</span>/bin/k3s server</span><br><span class=\"line\"></span><br><span class=\"line\">ps -A -ostat,pid,ppid,cmd | grep 1209470 | grep -v <span class=\"string\">\"grep\"</span></span><br><span class=\"line\">Ssl  1209470       1 /usr/<span class=\"built_in\">local</span>/bin/k3s server</span><br><span class=\"line\">Sl   1209529 1209470 containerd -c /var/lib/rancher/k3s/agent/etc/containerd/config.toml -a /run/k3s/containerd/containerd.sock --state /run/k3s/containerd --root /var/lib/rancher/k3s/agent/containerd</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<h3 id=\"3-脚本离线安装\"><a href=\"#3-脚本离线安装\" class=\"headerlink\" title=\"3.脚本离线安装\"></a>3.脚本离线安装</h3><p>你可以使用两种不同的方法在离线环境中安装 K3s，离线环境是不直接连接到 Internet 的任何环境，你可以部署一个私有镜像仓库，或者你可以手动部署镜像，比如用于小型集群。</p>\n<p>通常离线安装的两大步骤, 步骤1<code>部署镜像</code>, 步骤2<code>安装 K3s</code></p>\n<p><strong>部署私有镜像仓库</strong></p>\n<ul>\n<li>Harbor安装与配置: </li>\n<li>K3S 私有镜像仓库配置: </li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mirrors:</span><br><span class=\"line\">  docker.io:</span><br><span class=\"line\">    endpoint:</span><br><span class=\"line\">      - <span class=\"string\">\"https://harbor.weiyigeek.top\"</span></span><br><span class=\"line\">    rewrite:</span><br><span class=\"line\">      <span class=\"string\">\"^rancher/(.*)\"</span>: <span class=\"string\">\"mirrorproject/rancher-images/<span class=\"variable\">$1</span>\"</span></span><br><span class=\"line\">configs:</span><br><span class=\"line\">  <span class=\"string\">\"harbor.weiyigeek.top\"</span>:</span><br><span class=\"line\">    auth:</span><br><span class=\"line\">      username: xxxxxx <span class=\"comment\"># 这是私有镜像仓库的用户名</span></span><br><span class=\"line\">      password: xxxxxx <span class=\"comment\"># 这是私有镜像仓库的密码</span></span><br><span class=\"line\">    tls:</span><br><span class=\"line\">      cert_file: <span class=\"comment\"># 镜像仓库中使用的cert文件的路径。</span></span><br><span class=\"line\">      key_file:  <span class=\"comment\"># 镜像仓库中使用的key文件的路径。</span></span><br><span class=\"line\">      ca_file:   <span class=\"comment\"># 镜像仓库中使用的ca文件的路径。</span></span><br></pre></td></tr></table></figure>\n<p>例如，以下配置将透明地从 <code>harbor.weiyigeek.top/mirrorproject/rancher-images/coredns-coredns:1.6.3</code> 拉取镜像 <code>docker.io/rancher/coredns-coredns:1.6.3</code>, 镜像仍将以原始名称存储，所以 <code>crictl image ls</code> 将显示 <code>docker.io/rancher/coredns-coredns:1.6.3</code> 在节点上是可用的，即使镜像是以不同的名字从镜像仓库中拉取的。</p>\n<p><br/></p>\n<p><strong>安装实践</strong></p>\n<p>描述: 一切开源，立即体验，K3S 二进制项目地址 [ <a href=\"https://github.com/k3s-io/k3s/releases/\" target=\"_blank\" rel=\"noopener\">https://github.com/k3s-io/k3s/releases/</a> ], 如果是我们手动进行二进制环境安装，就可能稍微麻烦一点了。</p>\n<p>步骤 00.初始化配置节点相关配置。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 配置主机名称, 注意各个节点名称需不一致。</span></span><br><span class=\"line\">hostnamectl hostname master-01</span><br><span class=\"line\">vim /etc/hostname</span><br></pre></td></tr></table></figure></p>\n<p>步骤 01.拉取指定版本的k3s二进制文件到本地 <code>/usr/local/bin/</code> 目录之中以及获取你所运行的 K3s 版本的镜像 tar 文件。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.K3s 二进制文件</span></span><br><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">K3S_VERSION=v1.26.0</span><br><span class=\"line\">wget -c --show-progress https://github.com/k3s-io/k3s/releases/download/<span class=\"variable\">$&#123;K3S_VERSION&#125;</span>+k3s1/k3s -O /usr/<span class=\"built_in\">local</span>/bin/k3s</span><br><span class=\"line\">chmod +x /usr/<span class=\"built_in\">local</span>/bin/k3s</span><br><span class=\"line\">k3s --version</span><br><span class=\"line\">  <span class=\"comment\"># k3s version v1.26.0+k3s1 (f2585c16)</span></span><br><span class=\"line\">  <span class=\"comment\"># go version go1.19.2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 下载对应 K3s 版本的镜像 tar 文件到指定目录, 并确保拥有可执行权限。完成后，现在可以转到下面的安装 K3s部分</span></span><br><span class=\"line\">sudo mkdir -p /var/lib/rancher/k3s/agent/images/</span><br><span class=\"line\">sudo cp k3s-airgap-images-amd64.tar.gz /var/lib/rancher/k3s/agent/images/</span><br></pre></td></tr></table></figure></p>\n<p>步骤 03.下载 K3s 安装脚本：<a href=\"https://get.k3s.io\" target=\"_blank\" rel=\"noopener\">https://get.k3s.io</a>, 将安装脚本放在每个离线节点的任意地方，并命名为 install.sh。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 当使用 INSTALL_K3S_SKIP_DOWNLOAD 环境变量运行 K3s 脚本时，K3s 将使用本地的脚本和二进制。</span></span><br><span class=\"line\"><span class=\"comment\"># Server 节点</span></span><br><span class=\"line\">INSTALL_K3S_SKIP_DOWNLOAD=<span class=\"literal\">true</span> ./install.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Agent 节点 INSTALL_K3S_MIRROR=cn</span></span><br><span class=\"line\"><span class=\"comment\"># 将 myserver 替换为 server 的 IP 或有效的 DNS</span></span><br><span class=\"line\"><span class=\"comment\"># 将 mynodetoken 替换 server 节点的 token</span></span><br><span class=\"line\"><span class=\"comment\"># token 通常在/var/lib/rancher/k3s/server/node-token</span></span><br><span class=\"line\">INSTALL_K3S_SKIP_DOWNLOAD=<span class=\"literal\">true</span> K3S_URL=https://myserver:6443 K3S_TOKEN=mynodetoken ./install.sh</span><br></pre></td></tr></table></figure>\n<p>步骤 04.高可用安装需要调整安装命令，以便指定 <code>INSTALL_K3S_SKIP_DOWNLOAD=true</code>并在本地运行安装脚本, 您还将利用INSTALL_K3S_EXEC=’args’为 k3s 提供其他参数。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSTALL_K3S_SKIP_DOWNLOAD=<span class=\"literal\">true</span> INSTALL_K3S_EXEC=<span class=\"string\">'server'</span> K3S_DATASTORE_ENDPOINT=<span class=\"string\">'mysql://username:password@tcp(hostname:3306)/database-name'</span> ./install.sh</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<h3 id=\"4-升级安装\"><a href=\"#4-升级安装\" class=\"headerlink\" title=\"4.升级安装\"></a>4.升级安装</h3><p>K3s 支持手动与自动升级，下面简单的对升级流程进行说明。</p>\n<p><strong>脚本离线升级流程:</strong></p>\n<ol>\n<li>从 <code>K3s GitHub Release</code> 页面下载要升级到的 K3s 版本, 将 tar 文件放在每个节点的 <code>/var/lib/rancher/k3s/agent/images/</code> 目录下, 删除旧的 tar 文件。</li>\n<li>复制并替换每个节点上/usr/local/bin中的旧 K3s 二进制文件, 复制 <code>https://get.k3s.io</code> 的安装脚本（因为它可能在上次发布后发生了变化）再次运行脚本。</li>\n<li>重启 K3s 服务。</li>\n</ol>\n<p><br/></p>\n<p><strong>自动升级功能</strong><br>描述: 从 v1.17.4+k3s1 开始，K3s 支持自动升级, 要在离线环境中启用此功能，您必须确保所需镜像在您的私有镜像仓库中可用, 但是在实际情况中并不建议开启哟。</p>\n<ol>\n<li><p>你将需要与你打算升级到的 K3s 版本相对应的 rancher/k3s-upgrade 版本, 注意，镜像标签将 K3s 版本中的+替换为-，因为 Docker 镜像不支持+。</p>\n</li>\n<li><p>你还需要在你要部署的 <code>system-upgrad-controller manifestYAML</code> 中指定的 <code>system-upgrad-controller</code> 和 <code>kubectl</code> 的版本。<br>在这里检查 system-upgrad-controller 的最新版本，并下载 system-upgrad-controller.yaml 来确定你需要推送到私有镜像仓库的版本。<br>例如，在system-upgrade-controller的 v0.4.0 版本中，在 manifest YAML 中指定了这些镜像：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rancher/system-upgrade-controller:v0.4.0</span><br><span class=\"line\">rancher/kubectl:v0.17.0</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将必要的 <code>rancher/k3s-upgrade、rancher/system-upgrade-controller</code> 和 <code>rancher/kubectl</code> 镜像添加到您的私有镜像仓库中以后 ，就可以按照K3s 自动升级指南进行操作。</p>\n</li>\n</ol>\n<p>参考地址: <a href=\"https://docs.rancher.cn/docs/k3s/upgrades/automated/_index\" target=\"_blank\" rel=\"noopener\">https://docs.rancher.cn/docs/k3s/upgrades/automated/_index</a></p>\n<hr>\n<h2 id=\"0x02-配置文件\"><a href=\"#0x02-配置文件\" class=\"headerlink\" title=\"0x02 配置文件\"></a>0x02 配置文件</h2><p><strong>K3s 配置文件</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -vp /etc/rancher/&#123;k3s,node&#125;</span><br><span class=\"line\">tee /etc/rancher/k3s/config.yaml &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">node-name: master-01</span><br><span class=\"line\"><span class=\"built_in\">bind</span>-address: 0.0.0.0</span><br><span class=\"line\">https-listen-port: 6443</span><br><span class=\"line\">cluster-cidr: 10.42.0.0/16</span><br><span class=\"line\">service-cidr: 10.43.0.0/16</span><br><span class=\"line\">cluster-domain: cluster.local</span><br><span class=\"line\">token: k3s.weiyigeek.top</span><br><span class=\"line\">agent-token: agent.weiyigeek.top</span><br><span class=\"line\">pause-image: registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.6</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<p><strong>k3s 配置服务变量</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tee /etc/systemd/system/k3s.service.env &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">INSTALL_K3S_MIRROR=cn</span><br><span class=\"line\">INSTALL_K3S_CHANNEL=latest</span><br><span class=\"line\">K3S_TOKEN=<span class=\"string\">'k3s.weiyigeek.top'</span></span><br><span class=\"line\">K3S_AGENT_TOKEN=<span class=\"string\">'agent.weiyigeek.top'</span></span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n<p><strong>K3S systemd 服务</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tee /etc/systemd/system/k3s.service &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=Lightweight Kubernetes</span><br><span class=\"line\">Documentation=https://k3s.io</span><br><span class=\"line\">Wants=network-online.target</span><br><span class=\"line\">After=network-online.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=notify</span><br><span class=\"line\">EnvironmentFile=-/etc/default/%N</span><br><span class=\"line\">EnvironmentFile=-/etc/sysconfig/%N</span><br><span class=\"line\">EnvironmentFile=-/etc/systemd/system/k3s.service.env</span><br><span class=\"line\">KillMode=process</span><br><span class=\"line\">Delegate=yes</span><br><span class=\"line\"><span class=\"comment\"># Having non-zero Limit*s causes performance problems due to accounting overhead</span></span><br><span class=\"line\"><span class=\"comment\"># in the kernel. We recommend using cgroups to do container-local accounting.</span></span><br><span class=\"line\">LimitNOFILE=1048576</span><br><span class=\"line\">LimitNPROC=infinity</span><br><span class=\"line\">LimitCORE=infinity</span><br><span class=\"line\">TasksMax=infinity</span><br><span class=\"line\">TimeoutStartSec=0</span><br><span class=\"line\">Restart=always</span><br><span class=\"line\">RestartSec=5s</span><br><span class=\"line\">ExecStartPre=/bin/sh -xc <span class=\"string\">'! /usr/bin/systemctl is-enabled --quiet nm-cloud-setup.service'</span></span><br><span class=\"line\">ExecStartPre=-/sbin/modprobe br_netfilter</span><br><span class=\"line\">ExecStartPre=-/sbin/modprobe overlay</span><br><span class=\"line\">ExecStart=/usr/<span class=\"built_in\">local</span>/bin/k3s server --system-default-registry registry.cn-hangzhou.aliyuncs.com</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用 `systemctl` 命令启动 `k3s server` 服务</span></span><br><span class=\"line\"><span class=\"comment\"># Kubeconfig is written to /etc/rancher/k3s/k3s.yaml</span></span><br><span class=\"line\">$ systemctl daemon-reload &amp;&amp; systemctl restart k3s.service</span><br><span class=\"line\">$ systemctl status -l k3s.service</span><br><span class=\"line\">$ journalctl -xeu k3s.service</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># On a different node run the below. NODE_TOKEN comes from /var/lib/rancher/k3s/server/node-token</span></span><br><span class=\"line\">$ cat /var/lib/rancher/k3s/server/node-token</span><br><span class=\"line\">K10d3c367aa2703bccaed90f0b1cf14c1091adb3fc554805c35f2300b0b8c269868::server:k3s.weiyigeek.top</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<p><strong>安装环境验证及配置文件检测</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">k3s check-config</span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<h4 id=\"Worker-节点\"><a href=\"#Worker-节点\" class=\"headerlink\" title=\"Worker 节点\"></a>Worker 节点</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo k3s server &amp;</span><br><span class=\"line\">sudo k3s kubectl get node</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># On a different node run the below. NODE_TOKEN comes from /var/lib/rancher/k3s/server/node-token</span></span><br><span class=\"line\"><span class=\"comment\"># on your server</span></span><br><span class=\"line\">sudo k3s agent --server https://myserver:6443 --token <span class=\"variable\">$&#123;NODE_TOKEN&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">rm -rf /var/lib/kubelet /var/lib/rancher</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"0x03-问题解决\"><a href=\"#0x03-问题解决\" class=\"headerlink\" title=\"0x03 问题解决\"></a>0x03 问题解决</h2><h3 id=\"安装问题\"><a href=\"#安装问题\" class=\"headerlink\" title=\"安装问题\"></a>安装问题</h3><p>问题1.如果从国内环境安装 K3s 可能会遇到安装速度特别缓慢或者 time out 的情况，从以上的安装过程可以分析出以下几个原因：</p>\n<ul>\n<li>K3s 的安装脚本 存储在国外的服务器，从国内环境访问可能出现无法访问的情况。</li>\n<li>K3s 默认安装 stable 版本，stable 对应的具体 K3s 版本是通过 <a href=\"https://update.k3s.io/v1-release/channels\" target=\"_blank\" rel=\"noopener\">https://update.k3s.io/v1-release/channels</a> 解析来的，而这个地址也是运行在一个国外的服务器上。</li>\n<li>当通过 channel 解析出对应 K3s 的版本为：v1.25.3+k3s1，此时需要到 github 上拉取对应的 K3s 二进制文件。虽然这个二进制文件才几十兆，但国内环境访问 github 经常会出现无法访问的情况。</li>\n</ul>\n<p>另外，要完整运行 K3s，还依赖一些系统的服务，这些系统服务(例如：coredns、traefik)都是以容器的方式运行；而这些系统服务依赖的系统镜像默认是从 DockerHub 去拉取。同样从国内访问偶尔会出现无法访问或拉取镜像缓慢的情况。</p>\n<p>以上，就是在国内环境使用 K3s 的一些痛点。</p>\n<p>解决办法: <code>参考 0x01 安装实践 -&gt; 脚本在线安装</code> 。 </p>\n<h3 id=\"使用问题\"><a href=\"#使用问题\" class=\"headerlink\" title=\"使用问题\"></a>使用问题</h3><p>问题1.使用kubectl查看节点时报<code>open /etc/rancher/k3s/k3s.yaml: permission denied</code>权限错误问题。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~$ kubectl get node</span><br><span class=\"line\">WARN[0000] Unable to <span class=\"built_in\">read</span> /etc/rancher/k3s/k3s.yaml, please start server with --write-kubeconfig-mode to modify kube config permissions</span><br><span class=\"line\">error: error loading config file <span class=\"string\">\"/etc/rancher/k3s/k3s.yaml\"</span>: open /etc/rancher/k3s/k3s.yaml: permission denied</span><br></pre></td></tr></table></figure><br>解决办法: <code>chmod 644 /etc/rancher/k3s/k3s.yaml</code></p>\n<p>问题2.使用k3s命令以及kubectl命令时报 <code>the server is currently unable to handle the request</code> 错误问题。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">E1230 15:37:26.981461 1207736 memcache.go:255] couldn<span class=\"string\">'t get resource list for metrics.k8s.io/v1beta1: the server is currently unable to handle the request</span></span><br></pre></td></tr></table></figure><br>解决办法: 请检查 kube-system 名称空间下的 <code>metrics-server-5d7f9fc86-8jhqk</code> Pod 是否正常运行，若没有请排查错误</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl get pod -n kube-system metrics-server-5d7f9fc86-8jhqk</span><br><span class=\"line\">NAME                             READY   STATUS    RESTARTS   AGE</span><br><span class=\"line\">metrics-server-5d7f9fc86-8jhqk   1/1     Running   0          110m</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"0x0n-参考来源\"><a href=\"#0x0n-参考来源\" class=\"headerlink\" title=\"0x0n 参考来源\"></a>0x0n 参考来源</h2><p>官方地址: <a href=\"https://k3s.io/\" target=\"_blank\" rel=\"noopener\">https://k3s.io/</a> &amp;&amp; <a href=\"https://www.rancher.cn/k3s/\" target=\"_blank\" rel=\"noopener\">https://www.rancher.cn/k3s/</a><br>官方文档: <a href=\"https://rancher.com/docs/k3s/latest/en/\" target=\"_blank\" rel=\"noopener\">https://rancher.com/docs/k3s/latest/en/</a><br>项目地址: <a href=\"https://github.com/rancher/k3s/releases/latest\" target=\"_blank\" rel=\"noopener\">https://github.com/rancher/k3s/releases/latest</a> &amp;&amp; <a href=\"https://github.com/k3s-io/k3s/\" target=\"_blank\" rel=\"noopener\">https://github.com/k3s-io/k3s/</a></p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Containers","path":"api/categories/Containers.json"},{"name":"OperationTools","path":"api/categories/OperationTools.json"}],"tags":[{"name":"K3S","path":"api/tags/K3S.json"}]}