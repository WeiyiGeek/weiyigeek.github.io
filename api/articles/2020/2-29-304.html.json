{"title":"JSP开发基础入门学习1","slug":"编程世界/JavaWeb/2.JSP/JSP开发基础入门学习","date":"2020-02-29T05:34:30.000Z","updated":"2022-03-29T05:39:06.300Z","url":"2020/2-29-304.html","path":"api/articles/2020/2-29-304.html.json","covers":["https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200303141740.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200303143146.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200303160316.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h4 id=\"0x00-JSP基础\"><a href=\"#0x00-JSP基础\" class=\"headerlink\" title=\"0x00 JSP基础\"></a>0x00 JSP基础</h4><h5 id=\"1-介绍\"><a href=\"#1-介绍\" class=\"headerlink\" title=\"1.介绍\"></a>1.介绍</h5><p>什么是JSP?它有什么用?</p>\n<blockquote>\n<p>简介:Java Server Pager -&gt; 从用户的角度来说就是一个网页(java + html的结合体)，而从程序的角度来说最终会翻译成一个类实际就是一个Servlet及(JSP = Servlet)<br>作用:由于HTML在多数的情况下是显示的静态网页,但是在实际应用场景中常常需要在网页上显示一些动态数据，实际就是采用JSP访问数据库读取数据，然后再呈现给用户端网页上</p>\n</blockquote>\n<p>Tomcat 最后会将 jsp 文件编译后的(.class-字节码文件/.java-类)存放在目录/work/Catalina/localhost/项目名/org/apache/jsp 里面:<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//E:\\Development\\apache-tomcat-9.0.31\\work\\Catalina\\localhost\\Web\\org\\apache\\jsp</span></span><br><span class=\"line\">$ ls</span><br><span class=\"line\">login_jsp.class  login_jsp.java</span><br></pre></td></tr></table></figure></p>\n<p>在Eclipse建立的JSP文件默认的编码格式是IISO-8859-1,我们可以从 <code>Windows-&gt;penferences-&gt;jsp Files</code> 修改编码为UTF-8则后面建立的文件默认格式就是UTF-8了</p>\n<p><em>JavaEE 架构</em></p>\n<ul>\n<li>客户层 (Web 浏览器 、Applet)</li>\n<li>Web (Severlet、 Jsp)</li>\n<li>业务逻辑 (EJB)</li>\n<li>数据持久层 (数据库 MySQL , Oracle)</li>\n</ul>\n<p><br></p>\n<h5 id=\"2-基础语法\"><a href=\"#2-基础语法\" class=\"headerlink\" title=\"2.基础语法\"></a>2.基础语法</h5><p>描述:主要记录学习的JSP的基础指令写法和变量声明定义与使用;</p>\n<p><strong>(1) 变量定义和调用</strong><br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//全局变量</span></span><br><span class=\"line\">&lt;%! <span class=\"keyword\">int</span> a = <span class=\"number\">99</span>; %&gt;</span><br><span class=\"line\"><span class=\"comment\">//局部变量</span></span><br><span class=\"line\">&lt;% <span class=\"keyword\">int</span> a = <span class=\"number\">1024</span>; %&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//调用输出变量</span></span><br><span class=\"line\">&lt;%=a %&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//JSP代码注释:</span></span><br><span class=\"line\">&lt;%-- &lt;jsp:forward page=\"./Demo1/forward.jsp\"&gt;&lt;/jsp:forward&gt; --%&gt;</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>(2) JSP指令语法格式:</strong><br>JSP的三大指令:<br><figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ 指令名称 %&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%@ page %&gt;</span><br><span class=\"line\">&lt;%@ include  %&gt;</span><br><span class=\"line\">&lt;%@ taglib %&gt;</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p>page 指令进行设置当前页面的一些信息:<br><em>实例解释:</em><br><figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page %&gt;</span><br><span class=\"line\">&lt;!-- JSP File 文件头部 --&gt;</span><br><span class=\"line\">&lt;%@ page language=<span class=\"string\">\"java\"</span> contentType=<span class=\"string\">\"text/html; charset=UTF-8\"</span> pageEncoding=<span class=\"string\">\"UTF-8\"</span> session=<span class=\"string\">\"true\"</span> errorPage=<span class=\"string\">\"error.jsp\"</span> %&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- error.jsp 文件头部  --&gt;</span><br><span class=\"line\">&lt;%@ page language=<span class=\"string\">\"java\"</span> contentType=<span class=\"string\">\"text/html; charset=UTF-8\"</span> pageEncoding=<span class=\"string\">\"UTF-8\"</span> session=<span class=\"string\">\"true\"</span> isErrorPage=<span class=\"string\">\"true\"</span> %&gt;</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>language : 表示JSP文件中使用的JAVA代码</li>\n<li>contentType : 表示JSP文件显示的类型以及使用什么编码，我们可以在Tomcat的web.xml看到定义的MIME-type;</li>\n<li>pageEncoding : JSP文件编码格式</li>\n<li>extends : 用于指定JSP翻译成为JAVA文件后继承的父类是谁(常规默认即可)</li>\n<li>import : 导入指定包使用其方法;</li>\n<li>session : 控制jsp页面中是否能够直接使用Session对象（即session.getAttribute(‘’) ），值可选true（默认）或者false，具体区别是翻译的.Java文件在Tomcat的Work目录之中;</li>\n<li>errorPage : 指定错误的页面值需要给错误的页面路径;</li>\n<li>isErrorPage : 声明某一个页面到底是不是错误页面,即errorPage指定包含isErrorPage 参数的JSP页面 <code>&lt;%=exception.toString();%&gt;</code>;</li>\n</ul>\n<p><br/></p>\n<p>include 指令进行包含嵌套另外一个JSP的内容进来,即将另外一个文件读取包含进来(所有的标签元素)<br><em>实例解释:</em><br><figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//假如是在A页面上使用 &lt;%@ include file=\"B.jsp\" %&gt;</span></span><br><span class=\"line\"><span class=\"comment\">//从页面上看 ， 确实是两个 jsp 的内容组合到一起了。但是从背后翻译成的 java 文件看， 里面做了很多重复的标签输出。 其实就是既输出 A.jsp , 也输出了 B.jsp</span></span><br><span class=\"line\">&lt;%@ include file=<span class=\"string\">\"page.jsp\"</span> %&gt;</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p>taglib 指令:用于导入标签库 ，多用于引入 JSTL标签库<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ taglib prefix=<span class=\"string\">''</span> url=<span class=\"string\">\"\"</span> %&gt;</span><br><span class=\"line\">&lt;%@ taglib prefix=<span class=\"string\">\"c\"</span> uri=<span class=\"string\">\"http://java.sun.com/jsp/jstl/core\"</span> %&gt;</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>url : 表示标签库路径地址</li>\n<li>prefix : 标签别名表示别名或者称之为前缀也可以。 </li>\n</ul>\n<p><br></p>\n<p><strong>(3) 动态标签</strong><br>描述:在JSP页面进行动态加载的标签;<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;jsp:include page=\"\"&gt;&lt;/jsp:include&gt;</span><br><span class=\"line\">&lt;jsp:forward page=\"\"&gt;&lt;/jsp:forward&gt;</span><br><span class=\"line\">&lt;jsp:param value=<span class=\"string\">\"\"</span> name=<span class=\"string\">\"\"</span>/&gt;</span><br></pre></td></tr></table></figure></p>\n<p><em>详细讲解：</em><br>jsp:include 动态包含指定页面，将指定页面其中body主体中的运行结果拿到本页面进行显示(即body中的内容文本);<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;h1&gt;这是Error.jsp页面body元素内的内容:&lt;/h1&gt;</span><br><span class=\"line\">&lt;jsp:include page=\"error.jsp\"&gt;&lt;/jsp:include&gt;</span><br></pre></td></tr></table></figure></p>\n<p>实际运行编译的java源码:<code>D:\\apache-tomcat-7.0.100\\work\\Catalina\\localhost\\JspDemo\\org\\apache\\jsp\\jsp_005faction_jsp.java</code><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在 public void _jspService 方法里面</span></span><br><span class=\"line\">org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, <span class=\"string\">\"./Demo1/include.jsp\"</span>, out, <span class=\"keyword\">false</span>);</span><br></pre></td></tr></table></figure></p>\n<p>补充知识:</p>\n<ul>\n<li>1.jsp:include 与 include 指令有何区别?<blockquote>\n<p>答:我们上面看到jsp:include编译后可以看见java文件，前者是先解析该include.jsp后再执行拿取里面的内容，而include指令是直接将文件进行包含输出;</p>\n</blockquote>\n</li>\n</ul>\n<p><br></p>\n<p>jsp:forward 进行请求转发到指定页面，URL还是原URL不变化;<br>补充:如果想关心到底底层是如何走的，可以去看jsp翻译成的那个java文件，里面有具体的翻译后的代码，再配合servlet源代码，即可找到最终的答案，就是：请求转发<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;h2&gt;请求转发到/Demo1/forward.jsp页面&lt;/h2&gt;</span><br><span class=\"line\">&lt;jsp:forward page=\"./Demo1/forward.jsp\"&gt;&lt;/jsp:forward&gt;</span><br></pre></td></tr></table></figure></p>\n<p>实际运行编译的java源码:<code>D:\\apache-tomcat-7.0.100\\work\\Catalina\\localhost\\JspDemo\\org\\apache\\jsp\\jsp_005faction_jsp.java</code><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">    _jspx_page_context.forward(<span class=\"string\">\"./Demo1/forward.jsp\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//实际调用类和方法</span></span><br><span class=\"line\">javax.servlet.jsp.PageContext _jspx_page_context = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">request.getRquestsDispatcher(<span class=\"string\">\"./Demo1/forward.jsp\"</span>).forward(request,response);</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p>jsp:param 在进行包含页面或者进行请求转发设置时带的请求参数与值;<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// jsp_action.jsp</span></span><br><span class=\"line\">&lt;h3&gt;请求转发携带指定参数到/Demo1/forward.jsp页面&lt;/h3&gt;</span><br><span class=\"line\">&lt;jsp:forward page=<span class=\"string\">\"./Demo1/forward.jsp\"</span>&gt;</span><br><span class=\"line\">  &lt;jsp:param value=<span class=\"string\">\"WeiyiGeek\"</span> name=<span class=\"string\">\"name\"</span>/&gt;</span><br><span class=\"line\">  &lt;jsp:param value=<span class=\"string\">\"18\"</span> name=<span class=\"string\">\"age\"</span>/&gt;</span><br><span class=\"line\">  &lt;jsp:param value=<span class=\"string\">\"Computer\"</span> name=<span class=\"string\">\"Love\"</span>/&gt; &lt;%-- 注意这里如果是中文会在输出时候乱码，在后面的课程之中进行改进 --%&gt;</span><br><span class=\"line\">&lt;/jsp:forward&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// /Demo1/forward.jsp</span></span><br><span class=\"line\">&lt;h1&gt;Forward.jsp?&lt;%=request.getQueryString() %&gt;&lt;/h1&gt;</span><br><span class=\"line\">&lt;p&gt;显示转发请求的参数:&lt;/p&gt;</span><br><span class=\"line\">Name:&lt;%=request.getParameter(<span class=\"string\">\"name\"</span>) %&gt;</span><br><span class=\"line\">&lt;br&gt;</span><br><span class=\"line\">Age:&lt;%=request.getParameter(<span class=\"string\">\"age\"</span>) %&gt;</span><br><span class=\"line\">&lt;br&gt;</span><br><span class=\"line\">喜好:&lt;%=<span class=\"keyword\">new</span> String(request.getParameter(<span class=\"string\">\"Love\"</span>).getBytes(<span class=\"string\">\"ISO-8859-1\"</span>),<span class=\"string\">\"UTF-8\"</span>) %&gt;</span><br></pre></td></tr></table></figure></p>\n<p>实际运行编译的java源码:<code>D:\\apache-tomcat-7.0.100\\work\\Catalina\\localhost\\JspDemo\\org\\apache\\jsp\\jsp_005faction_jsp.java</code><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">    _jspx_page_context.forward(<span class=\"string\">\"./Demo1/forward.jsp\"</span> + <span class=\"string\">\"?\"</span> + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(<span class=\"string\">\"name\"</span>, request.getCharacterEncoding())+ <span class=\"string\">\"=\"</span> + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(<span class=\"string\">\"WeiyiGeek\"</span>, request.getCharacterEncoding()) + <span class=\"string\">\"&amp;\"</span> + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(<span class=\"string\">\"age\"</span>, request.getCharacterEncoding())+ <span class=\"string\">\"=\"</span> + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode(<span class=\"string\">\"18\"</span>, request.getCharacterEncoding()));</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//执行结果:</span></span><br><span class=\"line\">Forward.jsp?name=WeiyiGeek&amp;age=<span class=\"number\">18</span>&amp;Love=Computer</span><br><span class=\"line\">显示转发请求的参数:</span><br><span class=\"line\">Name:WeiyiGeek</span><br><span class=\"line\">Age:<span class=\"number\">18</span></span><br><span class=\"line\">喜好:Computer</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"3-内置对象\"><a href=\"#3-内置对象\" class=\"headerlink\" title=\"3.内置对象\"></a>3.内置对象</h5><p>描述:我们在JSP页面中无需进行创建以及手动导包，就直接在jsp页面中使用这些对象。</p>\n<p><strong>（1）内置对象说明</strong><br>九大内置对象:</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">page [Object]  <span class=\"comment\">//实际就是该jsp翻译成为Java类的实例对象;</span></span><br><span class=\"line\">exception [Throwable] <span class=\"comment\">//需要在page指令中加上isErrorPage的页面上显示使用</span></span><br><span class=\"line\">config [Servlet]</span><br><span class=\"line\"></span><br><span class=\"line\">out [JspWriter]</span><br><span class=\"line\">response [HttpServletResponse]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//#后四个是作用域对象</span></span><br><span class=\"line\">pageContext [PageContext]</span><br><span class=\"line\">request [HttpServletRequest]</span><br><span class=\"line\">session [HttpSession]</span><br><span class=\"line\">application [ServletContext]</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<p>实际案例jsp_inner.java与java文件对照:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page language=<span class=\"string\">\"java\"</span> contentType=<span class=\"string\">\"text/html; charset=UTF-8\"</span></span><br><span class=\"line\">    pageEncoding=<span class=\"string\">\"UTF-8\"</span> isErrorPage=<span class=\"string\">\"true\"</span> %&gt;</span><br><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">&lt;meta charset=<span class=\"string\">\"UTF-8\"</span>&gt;</span><br><span class=\"line\">&lt;title&gt;内部对象&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;h1&gt;九大内置对象&lt;/h1&gt;</span><br><span class=\"line\">&lt;%=page.toString() %&gt;</span><br><span class=\"line\">&lt;br&gt;</span><br><span class=\"line\">&lt;%--=exception.toString() --%&gt;</span><br><span class=\"line\">&lt;%=config.toString() %&gt;</span><br><span class=\"line\">&lt;br&gt;</span><br><span class=\"line\">&lt;% out.write(<span class=\"string\">\"\\n 其次输出jspWriter 对象输出  &lt;br&gt;\"</span>); %&gt;</span><br><span class=\"line\">&lt;br&gt;</span><br><span class=\"line\">&lt;% response.getWriter().write(<span class=\"string\">\"\\n 首先输出 Response 对象输出 &lt;br&gt;\"</span>); %&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;h2&gt;内置作用域对象设置&lt;/h2&gt;</span><br><span class=\"line\">&lt;% pageContext.setAttribute(<span class=\"string\">\"name\"</span>, <span class=\"string\">\"pageContext\"</span>); %&gt;</span><br><span class=\"line\">&lt;% request.setAttribute(<span class=\"string\">\"name\"</span>, <span class=\"string\">\"request\"</span>); %&gt;</span><br><span class=\"line\">&lt;% session.setAttribute(<span class=\"string\">\"name\"</span>, <span class=\"string\">\"session\"</span>); %&gt;</span><br><span class=\"line\">&lt;% application.setAttribute(<span class=\"string\">\"name\"</span>, <span class=\"string\">\"application\"</span>); %&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;hr&gt;</span><br><span class=\"line\">&lt;p&gt;四大内置作用域对象输出&lt;/p&gt;</span><br><span class=\"line\">&lt;%=pageContext.getAttribute(<span class=\"string\">\"name\"</span>) %&gt;</span><br><span class=\"line\">&lt;%=request.getAttribute(<span class=\"string\">\"name\"</span>) %&gt;</span><br><span class=\"line\">&lt;%=session.getAttribute(<span class=\"string\">\"name\"</span>) %&gt;</span><br><span class=\"line\">&lt;%=application.getAttribute(<span class=\"string\">\"name\"</span>) %&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- </span><br><span class=\"line\">Tomcat 封装后的 isp_005finner_jsp.java 文件</span><br><span class=\"line\">内置对象定义的原型</span><br><span class=\"line\"> --&gt;</span><br><span class=\"line\"><span class=\"keyword\">final</span> java.lang.Object page = <span class=\"keyword\">this</span>;  <span class=\"comment\">//该JSP翻译成.java的实例对象this</span></span><br><span class=\"line\"><span class=\"keyword\">final</span> javax.servlet.ServletConfig config;</span><br><span class=\"line\"><span class=\"keyword\">final</span> javax.servlet.http.HttpServletRequest request</span><br><span class=\"line\">java.lang.Throwable exception = org.apache.jasper.runtime.JspRuntimeLibrary.getThrowable(request);</span><br><span class=\"line\">javax.servlet.jsp.JspWriter out = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- 内置对象的作用域 --&gt;</span><br><span class=\"line\"><span class=\"keyword\">final</span> javax.servlet.http.HttpServletResponse response  </span><br><span class=\"line\"><span class=\"keyword\">final</span> javax.servlet.jsp.PageContext pageContext;</span><br><span class=\"line\">javax.servlet.http.HttpSession session = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">final</span> javax.servlet.ServletContext application;</span><br></pre></td></tr></table></figure>\n<p>执行效果:<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200303141740.png\" alt=\"WeiyiGeek.内置对象\" title=\"\" class=\"\">\n                <p>WeiyiGeek.内置对象</p>\n            </figure></p>\n<p><br></p>\n<p><em>注意事项及其补充:</em></p>\n<ul>\n<li>1.response与out内置对象的输出比较，我们从上面可以看出虽然<code>response.getWrite.write()</code>放在了out.Write()后面但是在输出的时候任然输出在前;<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//我们可以翻看Servlet源码进行查看或者工程封装的jsp java文件中查看</span></span><br><span class=\"line\"> out.write(<span class=\"string\">\"\\n 其次输出jspWriter 对象输出  &lt;br&gt;\"</span>); </span><br><span class=\"line\">      out.write(<span class=\"string\">\"\\r\\n\"</span>);</span><br><span class=\"line\">      out.write(<span class=\"string\">\"&lt;br&gt;\\r\\n\"</span>);</span><br><span class=\"line\">      out.write(<span class=\"string\">\"\\r\\n\"</span>);</span><br><span class=\"line\"> response.getWriter().write(<span class=\"string\">\"\\n 首先输出 Response 对象输出 &lt;br&gt;\"</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200303143146.png\" alt=\"WeiyiGeek.response与out内置对象的输出\" title=\"\" class=\"\">\n                <p>WeiyiGeek.response与out内置对象的输出</p>\n            </figure>\n</li>\n</ul>\n<p><br></p>\n<p><strong>2) 四个作用域对象</strong></p>\n<p>0.对应的类型是 PageContext . 该对象是四个作用域之一， 一般使用该对象来存取值 以及 获取其他八个内置对象（但是由于其他内置对象都可以直接使用，所以该作用一般比较少用了） </p>\n<ul>\n<li>存取值:setAttribute  和 getAttribute</li>\n<li>注意:该对象所存的值只能在该页面上取出来，也就是说它的作用域值能是当前页面。 </li>\n</ul>\n<p>1.request:该对象是 HttpServletRequest 的实例， 在这里的使用手法与java 代码中的使用手法是一样的。 该对象是四个作用域之一 ， 通常在 jsp 页面用来存取值 和 跳转。</p>\n<ul>\n<li>跳转:request.getRequestDispatcher(“”).forward(request, response);</li>\n<li>存取值:使用的方法是  setAttribute  和  getAttribute .<br>注意:该对象的作用域 ，仅限于一次请求中。当服务器对该请求做出响应后，就无法在其他的地方获取里面存的值了。</li>\n</ul>\n<p>2.Session: 默认情况下jsp 翻译成 java 文件后,会在里面的方法调用 request.getSession().那么咱们可以直接在 jsp 里面使用 session 对象, 我们一般使用这个对象来存取值。</p>\n<ul>\n<li>在顶部的 page 指令里面有一个属性叫做 session=”true” 默认即是 true, 如果是 true 那么就会创建 session 对象。如果 session 属性 的值 是 false , 那么我们在 jsp 页面上，将无法使用 session 对象。因为翻译成的 java 类中，根本没有创建这个对象。 </li>\n<li>存取值其实就是setAttribute  和  getAttribute 而已。</li>\n<li>注意:该对象存的值是在一次会话后（多次请求和响应）内有效。 </li>\n</ul>\n<p>3.application:该对象是 ServletContext 类的实例， 可以做ServletContext的事情。 但是一般在jsp页面里面，我们使用该对象，多数情况都是来进行存值和取值。</p>\n<ul>\n<li>我们使用该对象最多的两个方法是： setAttribute（”name” ,”weiyigeek.top”）和 getAttribute(“name”);</li>\n<li>注意:该对象的作用域是最大的，直到服务器停止。也就是说在A.jsp页面中使用该对象存值， 在任何一个jsp页面上，都可以取值。</li>\n</ul>\n<p><br></p>\n<p><em>四个作用域的区别</em></p>\n<ul>\n<li>pageContext 【PageContext】<blockquote>\n<p>作用域仅限于当前的页面否则返回NULL,还可以获取到其他八个内置对象。</p>\n</blockquote>\n</li>\n</ul>\n<p>补充:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$&#123;pageContext.request.contextPath&#125;</span>  <span class=\"comment\">#Web项目根路径(即项目上下文路径)</span></span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><p>request 【HttpServletRequest】</p>\n<blockquote>\n<p>作用域仅限于一次请求， 只要服务器对该请求做出了响应，转发是可以获取请求的参数值，而重定向不得到重定向网页前的参数返回为NULL</p>\n</blockquote>\n</li>\n<li><p>session 【HttpSession】</p>\n<blockquote>\n<p>作用域限于一次会话（多次请求与响应） 当中，如果在每有设置该Sesssion属性前访问打印该属性值的页面则返回NULL;</p>\n</blockquote>\n</li>\n<li><p>application 【ServletContext】</p>\n<blockquote>\n<p>整个工程都可以访问， 服务器关闭后就不能访问了。 </p>\n</blockquote>\n</li>\n</ul>\n<p><br></p>\n<h4 id=\"2-JSP-进阶\"><a href=\"#2-JSP-进阶\" class=\"headerlink\" title=\"2.JSP 进阶\"></a>2.JSP 进阶</h4><h5 id=\"1-EL表达式\"><a href=\"#1-EL表达式\" class=\"headerlink\" title=\"1.EL表达式\"></a>1.EL表达式</h5><p>什么是EL表达式?它有什么作用?</p>\n<blockquote>\n<p>答:全称是 Expression Language ， 作用是为了简化咱们的 jsp 中的 java 代码<br>答:获取4个内置对象（域）中的数据，或自定义对象中的数据，或数组、集合容器中的数据。可以完成非常简单的运行技术，但它不能完成复杂的循环、复杂的判断等功能。</p>\n</blockquote>\n<p>EL表达式写法格式:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$&#123; 表达式&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//常用的EL表达式基础（可以查看文档）</span></span><br><span class=\"line\">$&#123; a [ - + * / ]  b &#125;       <span class=\"comment\">//算术运算符表达式</span></span><br><span class=\"line\">$&#123; a [&gt; &lt; == &gt;= &lt;= != | gt lt ] b &#125; <span class=\"comment\">//条件运算符</span></span><br><span class=\"line\">$&#123; empty u &#125; <span class=\"comment\">//判断是否为空</span></span><br><span class=\"line\">$&#123; u.name &#125; <span class=\"comment\">//常用属性取值</span></span><br></pre></td></tr></table></figure></p>\n<p><em>注意事项</em>:</p>\n<ul>\n<li>1.它与JSP文件变量的调用输出不一致需要学习其语法，并且不想在写 &lt;% %&gt; jsp代码时候会提醒;</li>\n<li>2.EL表达式查找变量的顺序先从page-&gt;request-&gt;session-&gt;application等四大作用域一个一个查找key并输出其值(先查到先输出);</li>\n</ul>\n<p><br></p>\n<p><strong>（1）EL表达式取出变量</strong><br>描述:EL表达式可以简化JSP代码输出内置对象定义的变量值，可以输出变量、数组、集合、MAP、等变量中的值;<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%<span class=\"meta\">@page</span> <span class=\"keyword\">import</span>=<span class=\"string\">\"java.util.ArrayList\"</span>%&gt;</span><br><span class=\"line\">&lt;%<span class=\"meta\">@page</span> <span class=\"keyword\">import</span>=<span class=\"string\">\"java.util.Map\"</span>%&gt;</span><br><span class=\"line\">&lt;%<span class=\"meta\">@page</span> <span class=\"keyword\">import</span>=<span class=\"string\">\"java.util.HashMap\"</span>%&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%@ page language=<span class=\"string\">\"java\"</span> contentType=<span class=\"string\">\"text/html; charset=UTF-8\"</span></span><br><span class=\"line\">    pageEncoding=<span class=\"string\">\"UTF-8\"</span>%&gt;</span><br><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">&lt;meta charset=<span class=\"string\">\"UTF-8\"</span>&gt;</span><br><span class=\"line\">&lt;title&gt;EL表达式&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;p&gt;1) 采用EL表达式输出变量属性的值&lt;/p&gt;</span><br><span class=\"line\">&lt;% </span><br><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">1024</span>; </span><br><span class=\"line\">String b = <span class=\"string\">\"Java Program\"</span>; </span><br><span class=\"line\">pageContext.setAttribute(<span class=\"string\">\"a\"</span>,a);</span><br><span class=\"line\">pageContext.setAttribute(<span class=\"string\">\"b\"</span>,b);</span><br><span class=\"line\">%&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">$&#123;a&#125;</span><br><span class=\"line\">$&#123;b&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;hr&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;p&gt;2) 采用EL表达式输出内置4大域对象定义的属性&lt;/p&gt;</span><br><span class=\"line\">&lt;%</span><br><span class=\"line\">  pageContext.setAttribute(<span class=\"string\">\"name\"</span>, <span class=\"string\">\"pageContext\"</span>);</span><br><span class=\"line\">  request.setAttribute(<span class=\"string\">\"name\"</span>, <span class=\"string\">\"request\"</span>);</span><br><span class=\"line\">  session.setAttribute(<span class=\"string\">\"name\"</span>, <span class=\"string\">\"session\"</span>);</span><br><span class=\"line\">  application.setAttribute(<span class=\"string\">\"name\"</span>, <span class=\"string\">\"application\"</span>);</span><br><span class=\"line\">%&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">$&#123;pageScope.name&#125;</span><br><span class=\"line\">$&#123;requestScope.name&#125;</span><br><span class=\"line\">$&#123;sessionScope.name&#125;</span><br><span class=\"line\">$&#123; applicationScope.name &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;hr&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;p&gt;3) 采用EL表达式输出数组内容&lt;/p&gt;</span><br><span class=\"line\">&lt;%</span><br><span class=\"line\">  String[] name = &#123;<span class=\"string\">\"WeiyiGeek\"</span>,<span class=\"string\">\"Weiyi\"</span>,<span class=\"string\">\"Weiye\"</span>&#125;;</span><br><span class=\"line\">  pageContext.setAttribute(<span class=\"string\">\"arrayName\"</span>, name);</span><br><span class=\"line\">%&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">$&#123;arrayName[<span class=\"number\">0</span>]&#125; ,$&#123; arrayName[<span class=\"number\">1</span>] &#125;,$&#123; arrayName[<span class=\"number\">2</span>] &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;hr&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;p&gt;4) 采用EL表达式输出数组集合 ArrayList 内容&lt;/p&gt;</span><br><span class=\"line\">&lt;%</span><br><span class=\"line\">  ArrayList al = <span class=\"keyword\">new</span> ArrayList();</span><br><span class=\"line\">  al.add(<span class=\"string\">\"abc\"</span>);</span><br><span class=\"line\">  al.add(<span class=\"string\">\"def\"</span>);</span><br><span class=\"line\">  al.add(<span class=\"string\">\"1024\"</span>);</span><br><span class=\"line\">  pageContext.setAttribute(<span class=\"string\">\"al\"</span>, al);</span><br><span class=\"line\">%&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">$&#123;al[<span class=\"number\">0</span>]&#125;,$&#123;al[<span class=\"number\">1</span>]&#125;,$&#123;al[<span class=\"number\">2</span>]&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;hr&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;p&gt;5) 采用EL表达式输出数组集合 Map 内容&lt;/p&gt;</span><br><span class=\"line\">&lt;%</span><br><span class=\"line\">  Map map = <span class=\"keyword\">new</span> HashMap();</span><br><span class=\"line\">  map.put(<span class=\"string\">\"a\"</span>,<span class=\"string\">\"map集合需要导包\"</span>);</span><br><span class=\"line\">  map.put(<span class=\"string\">\"b\"</span>,<span class=\"string\">\"WeiyiGeek\"</span>);</span><br><span class=\"line\">  map.put(<span class=\"string\">\"c.d\"</span>,<span class=\"number\">1024</span>); <span class=\"comment\">//特殊部分</span></span><br><span class=\"line\">  pageContext.setAttribute(<span class=\"string\">\"map\"</span>, map);</span><br><span class=\"line\">%&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">$&#123;map.a&#125;,$&#123;map.b&#125;,$&#123;map[<span class=\"string\">\"c.d\"</span>]&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;hr&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;p&gt;6)获取javabean之自定义对象的数据（需要采用page指令导包）&lt;/p&gt;</span><br><span class=\"line\">&lt;%--</span><br><span class=\"line\">Person person=<span class=\"keyword\">new</span> Person();</span><br><span class=\"line\">person.setName(<span class=\"string\">\"taoshihan\"</span>);</span><br><span class=\"line\">pageContext.setAttribute(<span class=\"string\">\"person\"</span>,person);</span><br><span class=\"line\">--%&gt;</span><br><span class=\"line\">取值的方式：$&#123;person.name&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>\n<p>执行结果:<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200303160316.png\" alt=\"WeiyiGeek.EL表达式\" title=\"\" class=\"\">\n                <p>WeiyiGeek.EL表达式</p>\n            </figure></p>\n<p><br></p>\n<h5 id=\"1-EL内置对象\"><a href=\"#1-EL内置对象\" class=\"headerlink\" title=\"1.EL内置对象\"></a>1.EL内置对象</h5><p>描述:下面显示了11个内置对象;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#常用</span></span><br><span class=\"line\">- pageContext</span><br><span class=\"line\">- initParam  <span class=\"comment\">#全局初始化参数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#作用域相关对象</span></span><br><span class=\"line\">- pageScope</span><br><span class=\"line\">- requestScope</span><br><span class=\"line\">- sessionScope</span><br><span class=\"line\">- Application</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 头信息相关对象</span></span><br><span class=\"line\">- header</span><br><span class=\"line\">- headerValues</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#请求参数相关</span></span><br><span class=\"line\">- param</span><br><span class=\"line\">- params</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># cookies信息相关</span></span><br><span class=\"line\">- cookie</span><br></pre></td></tr></table></figure></p>\n<p>基础示例:<br><figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;p&gt;1) 获取URL请求参数 &lt;/p&gt;</span><br><span class=\"line\">方式<span class=\"number\">1</span>: &lt;%=request.getParameter(<span class=\"string\">\"name\"</span>) %&gt;</span><br><span class=\"line\">&lt;br&gt;</span><br><span class=\"line\">方式<span class=\"number\">2</span>: $&#123;param.name&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;p&gt;2) 获取请求的Cookies的key和值 &lt;/p&gt;</span><br><span class=\"line\">&lt;% response.addCookie(<span class=\"keyword\">new</span> Cookie(<span class=\"string\">\"name\"</span>,<span class=\"string\">\"weiyigek\"</span>)); %&gt;</span><br><span class=\"line\">$&#123;cookie.name.name&#125; 值: $&#123;cookie.name.value&#125;</span><br></pre></td></tr></table></figure></p>\n<p>执行结果:<a href=\"http://127.0.0.1:8080/JspDemo/el_inner.jsp?name=WeiyiGeek\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8080/JspDemo/el_inner.jsp?name=WeiyiGeek</a><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1) 获取URL请求参数</span><br><span class=\"line\">方式1: WeiyiGeek</span><br><span class=\"line\">方式2: WeiyiGeek</span><br><span class=\"line\"></span><br><span class=\"line\">2) 获取请求的Cookies</span><br><span class=\"line\">获取Cookie的:name值:weiyigek</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Java","path":"api/categories/Java.json"}],"tags":[{"name":"jsp","path":"api/tags/jsp.json"}]}