{"title":"Let'sEncrypt快速颁发及自动续签泛域名证书实践指南","slug":"基础知识/Web原理/Web协议/SSL-TLS/Let'sEncrypt快速颁发或续签泛域名证书实践指南","date":"2022-03-11T02:34:30.000Z","updated":"2022-07-08T01:34:51.109Z","url":"2022/3-11-589.html","path":"api/articles/2022/3-11-589.html.json","covers":["https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2022/1/20220311090650.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2022/1/20220310163041.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2022/1/20220310213121.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2022/5/20220708091951.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h2 id=\"0x00-前言简述\"><a href=\"#0x00-前言简述\" class=\"headerlink\" title=\"0x00 前言简述\"></a>0x00 前言简述</h2><p>描述: Let’s Encrypt 是免费、开放和自动化的证书颁发机构由Linux基金会(<code>Linux Foundation</code>)进行日常管理维护，它为1.8亿个网站提供TLS证书的非盈利性证书颁发机构, 通过它我们可以免费申请网站证书，并您的网站上启用 HTTPS (SSL/TLS) 提供支持。</p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2022/1/20220311090650.png\" alt=\"WeiyiGeek.Lets\" title=\"Encrypt'\" class=\"\">\n                <p>Encrypt'</p>\n            </figure>\n<p><strong>前置需求:</strong></p>\n<ul>\n<li>域名所有者 : Let’s Encrypt 是一个证书颁发机构（CA）, 要从 Let’s Encrypt 获取您网站域名的证书，您必须证明您对域名的实际控制权。</li>\n<li>ACME 协议软件 : 在Let’s Encrypt 使用 ACME 协议来验证您对给定域名的控制权并向您颁发证书, 要从Let’s Encrypt 获得证书，您需要选择一个要使用的 ACME 客户端软件。 例如官方推荐的客户端 <a href=\"https://certbot.eff.org/\" target=\"_blank\" rel=\"noopener\">Certbot</a> 、或者使用得最多的 <a href=\"https://github.com/acmesh-official/acme.sh\" target=\"_blank\" rel=\"noopener\">acme.sh</a></li>\n</ul>\n<p><strong>参考来源</strong><br>Let’s Encrypt 网站: <a href=\"https://letsencrypt.org/\" target=\"_blank\" rel=\"noopener\">https://letsencrypt.org/</a><br>ACME 协议客户端: <a href=\"https://letsencrypt.org/zh-cn/docs/client-options/\" target=\"_blank\" rel=\"noopener\">https://letsencrypt.org/zh-cn/docs/client-options/</a><br>acme.sh WIKI: <a href=\"https://wiki.acme.sh\" target=\"_blank\" rel=\"noopener\">https://wiki.acme.sh</a><br>certbot Github: <a href=\"https://github.com/certbot/certbot\" target=\"_blank\" rel=\"noopener\">https://github.com/certbot/certbot</a></p>\n<p>原文地址: <a href=\"https://mp.weixin.qq.com/s/v_Ec4GhqeCD3u1ew91KZRA\" target=\"_blank\" rel=\"noopener\">https://mp.weixin.qq.com/s/v_Ec4GhqeCD3u1ew91KZRA</a></p>\n<p><br></p>\n<h2 id=\"0x01-快速安装配置\"><a href=\"#0x01-快速安装配置\" class=\"headerlink\" title=\"0x01 快速安装配置\"></a>0x01 快速安装配置</h2><h3 id=\"1-acme-sh\"><a href=\"#1-acme-sh\" class=\"headerlink\" title=\"1.acme.sh\"></a>1.acme.sh</h3><p>描述: 此处我们采用 acmesh-official 提供的 acme.sh 项目来快速搭建证书自动颁发、续签证书，其使用简单、强大且非常易于使用，它纯粹用 Shell（Unix shell）语言编写的 ACME 协议客户端，安装方式主要有<code>二进制文件</code>或者是<code>acme.sh💕码头工人</code>(<a href=\"https://github.com/acmesh-official/acme.sh/wiki/Run-acme.sh-in-docker)。\" target=\"_blank\" rel=\"noopener\">https://github.com/acmesh-official/acme.sh/wiki/Run-acme.sh-in-docker)。</a></p>\n<p>温馨提示: 签发的证书有效期为60天，我们可以设置cron 作业以检查和更新证书，通常证书将每60天自动更新一次。</p>\n<p><strong>快速安装:</strong><br>安装参考地址: <a href=\"https://github.com/acmesh-official/acme.sh/wiki/How-to-install\" target=\"_blank\" rel=\"noopener\">https://github.com/acmesh-official/acme.sh/wiki/How-to-install</a><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 从 git 安装 acme</span></span><br><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/acmesh-official/acme.sh.git &amp;&amp; <span class=\"built_in\">cd</span> ./acme.sh</span><br><span class=\"line\">./acme.sh --install -m master@weiyigeek.top</span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:23:16 PM CST] Installing to /root/.acme.sh</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:23:16 PM CST] Installed to /root/.acme.sh/acme.sh</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:23:16 PM CST] Installing alias to '/root/.bashrc'</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:23:16 PM CST] OK, Close and reopen your terminal to start using acme.sh</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:23:16 PM CST] Installing cron job</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:23:16 PM CST] Good, bash is found, so change the shebang to use bash as preferred.</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:23:17 PM CST] OK</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># email环境变量 &amp; 别名设置 </span></span><br><span class=\"line\"><span class=\"built_in\">export</span> email=<span class=\"string\">\"master@weiyigeek.top\"</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> acme.sh=~/.acme.sh/acme.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看acme.sh版本</span></span><br><span class=\"line\">acme.sh --version</span><br><span class=\"line\">  <span class=\"comment\"># https://github.com/acmesh-official/acme.sh</span></span><br><span class=\"line\">  <span class=\"comment\"># v3.0.2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用 letsencrypt 提供的默认CA,当然你也可以自己提供（PS: 白嫖免费、谁不爱？）</span></span><br><span class=\"line\">acme.sh --<span class=\"built_in\">set</span>-default-ca --server letsencrypt</span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:34:09 PM CST] Changed default CA to: https://acme-v02.api.letsencrypt.org/directory</span></span><br></pre></td></tr></table></figure></p>\n<p>至此，您现在可以发布证书了。</p>\n<p><br></p>\n<h2 id=\"0x02-证书自动签发实践\"><a href=\"#0x02-证书自动签发实践\" class=\"headerlink\" title=\"0x02 证书自动签发实践\"></a>0x02 证书自动签发实践</h2><h3 id=\"1-acme-sh-Cloudflare-实现自动签发泛域名证书。\"><a href=\"#1-acme-sh-Cloudflare-实现自动签发泛域名证书。\" class=\"headerlink\" title=\"1.acme.sh + Cloudflare 实现自动签发泛域名证书。\"></a>1.acme.sh + Cloudflare 实现自动签发泛域名证书。</h3><p><strong>Q: 什么是通配符证书?</strong><br>A: 在没有出现通配符证书之前，Let’s Encrypt 支持两种单域名证书、SAN证书。</p>\n<blockquote>\n<p>1）单域名证书：证书仅仅包含一个主机。<br>2）SAN 证书：域名通配符证书类似 DNS 解析的泛域名概念，通配符证书就是证书中可以包含一个通配符(*.exmaple.com)。主域名签发的通配符证书可以在所有子域名中使用，比如 <a href=\"http://www.example.com、bbs.example.com。\" target=\"_blank\" rel=\"noopener\">www.example.com、bbs.example.com。</a></p>\n</blockquote>\n<p><br/></p>\n<p><strong>申请通配符证书流程</strong><br>步骤 01.如果您的 DNS 提供商支持 API 访问，我们可以使用该 API 自动颁发证书，目前 acme.sh 支持大多数 dns 提供者（<a href=\"https://github.com/acmesh-official/acme.sh/wiki/dnsapi），如果您的\" target=\"_blank\" rel=\"noopener\">https://github.com/acmesh-official/acme.sh/wiki/dnsapi），如果您的</a> dns 提供商不支持任何 api 访问，您只能手动添加 txt 记录。</p>\n<p>步骤 02.此处我已经将 weiyigeek.top域名DNS解析商设置为 Cloudflare (免费)，其DNS提供上支持API访问, 在使用 acme.sh 实现自动签发证书前，我们需要再Cloudflare网站上获取用于访问 Cloudflare API 的密钥，首先<code>点击我的个人资料 -&gt; API 令牌</code>。</p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2022/1/20220310163041.png\" alt=\"WeiyiGeek.用于访问 Cloudflare API 的密钥\" title=\"\" class=\"\">\n                <p>WeiyiGeek.用于访问 Cloudflare API 的密钥</p>\n            </figure>\n<p>步骤 03.设置 acme.sh 用于访问 Cloudflare 的 dnsapi 的相关环境变量。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 注意, 如下环境变量,你需要根据你自己注册的 Cloudflare 邮箱地址（CF_Email）以及获取的 Cloudflare API 密钥（CF_Key）。</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> CF_Email=<span class=\"string\">\"dns@weiyigeek.top\"</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> CF_Key=<span class=\"string\">\"be587222s8qa58asd87asd20b55a30cd653\"</span></span><br></pre></td></tr></table></figure></p>\n<p>步骤 04.执行如下命令，可以实现自动颁发通配符&amp;ECDSA格式证书，Let’s Encrypt 支持颁发 EC 格式证书，<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">acme.sh --issue --dns dns_cf -d weiyigeek.top -d *.weiyigeek.top --keylength ec-256</span><br><span class=\"line\"><span class=\"comment\"># --issue是 acme.sh 脚本用来颁发证书的指令；</span></span><br><span class=\"line\"><span class=\"comment\"># -d是--domain的简称，其后面须填写已备案的域名；</span></span><br><span class=\"line\"><span class=\"comment\"># --keylength 证书格式;</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:37:27 PM CST] Using CA: https://acme-v02.api.letsencrypt.org/directory</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:37:27 PM CST] Create account key ok.</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:37:27 PM CST] Registering account: https://acme-v02.api.letsencrypt.org/directory</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:37:29 PM CST] Registered</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:37:29 PM CST] ACCOUNT_THUMBPRINT='3BKx-SF-zF1gbbkXpT9F4yfItz7V7JYKsPAkv8mxR2o'</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:37:29 PM CST] Creating domain key</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:37:29 PM CST] The domain key is here: /root/.acme.sh/weiyigeek.top_ecc/weiyigeek.top.key</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:37:29 PM CST] Multi domain='DNS:weiyigeek.top,DNS:*.weiyigeek.top'</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:37:29 PM CST] Getting domain auth token for each domain</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:37:33 PM CST] Getting webroot for domain='weiyigeek.top'</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:37:33 PM CST] Getting webroot for domain='*.weiyigeek.top'</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:37:33 PM CST] Adding txt value: iobyZpnA9bfxgM_tW_P8hjDye677KzjyQHClMka4Btw for domain:  _acme-challenge.weiyigeek.top</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:37:36 PM CST] Adding record</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:37:37 PM CST] Added, OK</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:37:37 PM CST] The txt record is added: Success.</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:37:37 PM CST] Adding txt value: NrksC2yEFDGFFMQ8_p76tAhdjWWWLkj1yKpTjUq4TcM for domain:  _acme-challenge.weiyigeek.top</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:37:40 PM CST] Adding record</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:37:41 PM CST] Added, OK</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:37:41 PM CST] The txt record is added: Success.</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:37:41 PM CST] Let's check each DNS record now. Sleep 20 seconds first.</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:38:02 PM CST] You can use '--dnssleep' to disable public dns checks.</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:38:02 PM CST] See: https://github.com/acmesh-official/acme.sh/wiki/dnscheck</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:38:02 PM CST] Checking weiyigeek.top for _acme-challenge.weiyigeek.top</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:38:03 PM CST] Domain weiyigeek.top '_acme-challenge.weiyigeek.top' success.</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:38:04 PM CST] Checking weiyigeek.top for _acme-challenge.weiyigeek.top</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:38:06 PM CST] Domain weiyigeek.top '_acme-challenge.weiyigeek.top' success.</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:38:06 PM CST] All success, let's return</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:38:06 PM CST] Verifying: weiyigeek.top</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:38:07 PM CST] Pending, The CA is processing your order, please just wait. (1/30)</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:38:11 PM CST] Success</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:38:11 PM CST] Verifying: *.weiyigeek.top</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:38:12 PM CST] Pending, The CA is processing your order, please just wait. (1/30)</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:38:16 PM CST] Success</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:38:16 PM CST] Removing DNS records.</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:38:16 PM CST] Removing txt: iobyZpnA9bfxgM_tW_P8hjDye677KzjyQHClMka4Btw for domain: _acme-challenge.weiyigeek.top</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:38:22 PM CST] Removed: Success</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:38:22 PM CST] Removing txt: NrksC2yEFDGFFMQ8_p76tAhdjWWWLkj1yKpTjUq4TcM for domain: _acme-challenge.weiyigeek.top</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:38:30 PM CST] Removed: Success</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:38:30 PM CST] Verify finished, start to sign.</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:38:30 PM CST] Lets finalize the order.</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:38:30 PM CST] Le_OrderFinalize='https://acme-v02.api.letsencrypt.org/acme/finalize/444241360/70248671870'</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:38:31 PM CST] Downloading cert.</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:38:31 PM CST] Le_LinkCert='https://acme-v02.api.letsencrypt.org/acme/cert/03740b271962634e99cbcefe7b74351b952c'</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:38:32 PM CST] Cert success.</span></span><br><span class=\"line\">  <span class=\"comment\"># -----BEGIN CERTIFICATE-----</span></span><br><span class=\"line\">  <span class=\"comment\"># MIIEZTCCA02gAwIBAgISA3QLJxliY06Zy87+e3Q1G5UsMA0GCSqGSIb3DQEBCwUA</span></span><br><span class=\"line\">  <span class=\"comment\"># .................................</span></span><br><span class=\"line\">  <span class=\"comment\"># jvhX8eE7xRHgXppOwoEPdbZ29uSJWUD9yQ==</span></span><br><span class=\"line\">  <span class=\"comment\"># -----END CERTIFICATE-----</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:38:32 PM CST] Your cert is in: /root/.acme.sh/weiyigeek.top_ecc/weiyigeek.top.cer</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:38:32 PM CST] Your cert key is in: /root/.acme.sh/weiyigeek.top_ecc/weiyigeek.top.key</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:38:32 PM CST] The intermediate CA cert is in: /root/.acme.sh/weiyigeek.top_ecc/ca.cer</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 02:38:32 PM CST] And the full chain certs is there: /root/.acme.sh/weiyigeek.top_ecc/fullchain.cer</span></span><br></pre></td></tr></table></figure></p>\n<p>步骤 05.利用openssl查看颁发的CA及其证书。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$  acme.sh list</span><br><span class=\"line\">Main_Domain    KeyLength  SAN_Domains      CA               Created                          Renew</span><br><span class=\"line\">weiyigeek.top  <span class=\"string\">\"ec-256\"</span>   *.weiyigeek.top  LetsEncrypt.org  Thu 10 Mar 2022 06:38:32 AM UTC  Mon 09 May 2022 06:38:32 AM UTC</span><br><span class=\"line\"></span><br><span class=\"line\">$ openssl x509 -<span class=\"keyword\">in</span> ca.cer -noout -text</span><br><span class=\"line\">  <span class=\"comment\"># X509v3 extensions:</span></span><br><span class=\"line\">  <span class=\"comment\">#   X509v3 Key Usage: critical</span></span><br><span class=\"line\">  <span class=\"comment\">#       Digital Signature, Certificate Sign, CRL Sign</span></span><br><span class=\"line\">  <span class=\"comment\">#   X509v3 Extended Key Usage:</span></span><br><span class=\"line\">  <span class=\"comment\">#       TLS Web Client Authentication, TLS Web Server Authentication</span></span><br><span class=\"line\">  <span class=\"comment\">#   X509v3 Basic Constraints: critical</span></span><br><span class=\"line\">  <span class=\"comment\">#       CA:TRUE, pathlen:0</span></span><br><span class=\"line\">  <span class=\"comment\">#   X509v3 Subject Key Identifier:</span></span><br><span class=\"line\">  <span class=\"comment\">#       14:2E:B3:17:B7:58:56:CB:AE:50:09:40:E6:1F:AF:9D:8B:14:C2:C6</span></span><br><span class=\"line\">  <span class=\"comment\">#   X509v3 Authority Key Identifier:</span></span><br><span class=\"line\">  <span class=\"comment\">#       keyid:79:B4:59:E6:7B:B6:E5:E4:01:73:80:08:88:C8:1A:58:F6:E9:9B:6E</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">#   Authority Information Access:</span></span><br><span class=\"line\">  <span class=\"comment\">#       CA Issuers - URI:http://x1.i.lencr.org/</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">#   X509v3 CRL Distribution Points:</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">#       Full Name:</span></span><br><span class=\"line\">  <span class=\"comment\">#         URI:http://x1.c.lencr.org/</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">#   X509v3 Certificate Policies:</span></span><br><span class=\"line\">  <span class=\"comment\">#       Policy: 2.23.140.1.2.1</span></span><br><span class=\"line\">  <span class=\"comment\">#       Policy: 1.3.6.1.4.1.44947.1.1.1</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ openssl x509 -<span class=\"keyword\">in</span> ca.cer -noout -text</span><br><span class=\"line\">$ openssl x509 -<span class=\"keyword\">in</span> weiyigeek.top.cer -noout -text</span><br><span class=\"line\">Certificate:</span><br><span class=\"line\">    Data:</span><br><span class=\"line\">        Version: 3 (0x2)</span><br><span class=\"line\">        Serial Number:</span><br><span class=\"line\">            03:74:0b:27:19:62:63:4e:99:cb:ce:fe:7b:74:35:1b:95:2c</span><br><span class=\"line\">        Signature Algorithm: sha256WithRSAEncryption</span><br><span class=\"line\">        Issuer: C = US, O = Let<span class=\"string\">'s Encrypt, CN = R3</span></span><br><span class=\"line\"><span class=\"string\">        Validity</span></span><br><span class=\"line\"><span class=\"string\">            Not Before: Mar 10 05:38:30 2022 GMT</span></span><br><span class=\"line\"><span class=\"string\">            Not After : Jun  8 05:38:29 2022 GMT</span></span><br></pre></td></tr></table></figure></p>\n<p>步骤 06.使用签发的证书，ingress为指定主机名称设置tls, 然后通过浏览器访问 <a href=\"https://demo.weiyigeek.top\" target=\"_blank\" rel=\"noopener\">https://demo.weiyigeek.top</a> 站点，验证tls配置是否正常。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.创建一个tls类型的secret ，并使用--cert指定证书文件，--key指定证书密钥</span></span><br><span class=\"line\">kubectl create secret tls wildcard-weiyigeek-top --cert=weiyigeek.top.cer --key=weiyigeek.top.key -n devtest</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.分别为两个虚拟主机分别配置tls，需要再sepc字段下进行如下配置(注意缩进)</span></span><br><span class=\"line\">$ kubectl edit ingress -n devtest demo-myweb-blog</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  tls:</span><br><span class=\"line\">  - hosts:</span><br><span class=\"line\">      - demo.weiyigeek.top</span><br><span class=\"line\">    secretName: wildcard-weiyigeek-top</span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2022/1/20220310213121.png\" alt=\"WeiyiGeek.验证TLS配置服务\" title=\"\" class=\"\">\n                <p>WeiyiGeek.验证TLS配置服务</p>\n            </figure>\n<p>步骤 07.于此同时我们还可，修改 Nginx 配置文件启用 ssl，记得修改完成后需要重启下 Nginx。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在 Nginx 主机上一条命令解决, 如果是 ECDHE 格式需要加上 --ecc 参数</span></span><br><span class=\"line\">acme.sh  --installcert -d weiyigeek.top \\</span><br><span class=\"line\">  --ecc \\ </span><br><span class=\"line\">  --key-file /etc/nginx/ssl/weiyigeek.top.key \\</span><br><span class=\"line\">  --fullchain-file /etc/nginx/ssl/fullchain.cer \\</span><br><span class=\"line\">  --reloadcmd <span class=\"string\">\"service nginx force-reload\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># nginx.conf 的配置参考:    </span></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">  listen 443 ssl;</span><br><span class=\"line\">  server_name weiyigeek.top;</span><br><span class=\"line\"></span><br><span class=\"line\">  ssl on;</span><br><span class=\"line\">  ssl_certificate      /etc/nginx/ssl/fullchain.cer;</span><br><span class=\"line\">  ssl_certificate_key  /etc/nginx/ssl/weiyigeek.top.key;</span><br><span class=\"line\"></span><br><span class=\"line\">  root /home/wwwroot/weiyigeek.top;</span><br><span class=\"line\">  index index.html;</span><br><span class=\"line\"></span><br><span class=\"line\">  location / &#123;</span><br><span class=\"line\">    try_files <span class=\"variable\">$uri</span> <span class=\"variable\">$uri</span>/ @router;</span><br><span class=\"line\">    index index.html;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  location @router &#123;</span><br><span class=\"line\">    rewrite ^.*$ /index.html last;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 80;</span><br><span class=\"line\">    server_name weiyigeek.top;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> 301 https://<span class=\"variable\">$server_name</span><span class=\"variable\">$request_uri</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>温馨提示: Nginx 的配置 ssl_certificate 和 ssl_trusted_certificate 使用 fullchain.cer ，而非<code>&lt;domain&gt;.cer</code>，否则 SSL Labs 的测试会报 Chain issues Incomplete 错误</p>\n<p>步骤 08.创建 cron 作业以检查和更新证书，添加force参数60天后强制更新。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">20 0 */60 * * /root/.acme.sh/acme.sh --cron --force --home <span class=\"string\">\"/root/.acme.sh\"</span> &gt; /dev/null</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h2 id=\"0x03-使用实例\"><a href=\"#0x03-使用实例\" class=\"headerlink\" title=\"0x03 使用实例\"></a>0x03 使用实例</h2><h3 id=\"1-简单示例\"><a href=\"#1-简单示例\" class=\"headerlink\" title=\"1.简单示例\"></a>1.简单示例</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 0.注册用户</span></span><br><span class=\"line\">acme.sh --register-account -m tls@weiyigeek.top</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1.颁发单域&amp;多域证书(注意设置DNS指向)为其颁发证书的主机，您必须将所有域指向并绑定到同一个 webroot dir (/home/wwwroot/example.com).</span></span><br><span class=\"line\">acme.sh --issue -d example.com -w /home/wwwroot/example.com</span><br><span class=\"line\">acme.sh --issue -d example.com -d www.example.com -d cp.example.com -w /home/wwwroot/example.com</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.证书生成后利用acme.sh提供的--install-cert选项我们可以直接将证书安装到 Apache/Nginx/Proxmox 服务。</span></span><br><span class=\"line\"><span class=\"comment\"># - Apache example:</span></span><br><span class=\"line\"><span class=\"comment\"># --installcert命令，指定目标位置，然后证书文件会被 copy 到相应的位置。</span></span><br><span class=\"line\">acme.sh --install-cert -d example.com \\</span><br><span class=\"line\">--cert-file      /path/to/certfile/<span class=\"keyword\">in</span>/apache/cert.pem  \\</span><br><span class=\"line\">--key-file       /path/to/keyfile/<span class=\"keyword\">in</span>/apache/key.pem  \\</span><br><span class=\"line\">--fullchain-file /path/to/fullchain/certfile/apache/fullchain.pem \\</span><br><span class=\"line\">--reloadcmd     <span class=\"string\">\"service apache2 force-reload\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Nginx example:</span></span><br><span class=\"line\">acme.sh --install-cert -d example.com \\</span><br><span class=\"line\">--key-file       /path/to/keyfile/<span class=\"keyword\">in</span>/nginx/key.pem  \\</span><br><span class=\"line\">--fullchain-file /path/to/fullchain/nginx/cert.pem \\</span><br><span class=\"line\">--reloadcmd     <span class=\"string\">\"service nginx force-reload\"</span></span><br><span class=\"line\"><span class=\"comment\"># Proxmox example:</span></span><br><span class=\"line\">/root/.acme.sh/acme.sh --installcert -d example.com \\</span><br><span class=\"line\">--certpath /etc/pve/<span class=\"built_in\">local</span>/pveproxy-ssl.pem \\</span><br><span class=\"line\">--keypath /etc/pve/<span class=\"built_in\">local</span>/pveproxy-ssl.key  \\</span><br><span class=\"line\">--capath  /etc/pve/<span class=\"built_in\">local</span>/pveproxy-ssl.pem  \\</span><br><span class=\"line\">--reloadcmd  <span class=\"string\">\"systemctl restart pveproxy\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.使用独立服务器颁发证书，端口80(TCP)必须可以自由监听，否则系统会提示您释放它并重试。</span></span><br><span class=\"line\">acme.sh --issue --standalone -d example.com -d www.example.com -d cp.example.com</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4.使用独立的ssl服务器颁发证书，端口443(TCP)必须可以自由监听，否则系统会提示您释放它并重试。</span></span><br><span class=\"line\">acme.sh --issue --alpn -d example.com -d www.example.com -d cp.example.com</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5.dns手动模式,签发证书时，如果您的 dns 提供商不支持任何 api 访问，使用--dns会填写需要添加的txt记录，此时您可以手动添加 txt 记录</span></span><br><span class=\"line\">acme.sh --issue --dns -d example.com -d www.example.com -d cp.example.com</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 6.颁发ECC证书 （ECDSA）,只需keylength使用前缀设置参数ec-。</span></span><br><span class=\"line\"><span class=\"comment\"># - 单域ECC证书</span></span><br><span class=\"line\">acme.sh --issue -w /home/wwwroot/example.com -d example.com --keylength ec-256</span><br><span class=\"line\"><span class=\"comment\"># - SAN多域ECC证书</span></span><br><span class=\"line\">acme.sh --issue -w /home/wwwroot/example.com -d example.com -d www.example.com --keylength ec-256</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 7.颁发通配符证书非常的简单,你只需要给一个通配符域作为-d参数。</span></span><br><span class=\"line\">acme.sh --issue -d example.com -d <span class=\"string\">'*.example.com'</span> --dns dns_cf --keylength ec-256</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 8.检查证书到期时间</span></span><br><span class=\"line\">acme.sh --cron --home ~/.acme.sh/</span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 04:15:54 PM CST] ===Starting cron===</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 04:15:54 PM CST] Renew: 'weiyigeek.top'</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 04:15:54 PM CST] Skip, Next renewal time is: Mon 09 May 2022 06:38:32 AM UTC</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 04:15:54 PM CST] Add '--force' to force to renew.</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 04:15:54 PM CST] Skipped weiyigeek.top_ecc</span></span><br><span class=\"line\">  <span class=\"comment\"># [Thu 10 Mar 2022 04:15:54 PM CST] ===End cron===</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 9.重新申请签发证书, 设置定时任务后所有证书将每60天自动更新一次，当然您也可以强制更新证书：</span></span><br><span class=\"line\">acme.sh --renew -d example.com --force [--ecc]  <span class=\"comment\"># ecc 参数, 表明只是针对颁发的ECC证书。</span></span><br><span class=\"line\">acme.sh --renew -d example.com --force </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 10.停止更新证书，您可以执行以下操作从更新列表中删除证书：</span></span><br><span class=\"line\">acme.sh --remove -d example.com [--ecc]  <span class=\"comment\"># 注意, 证书/密钥文件不会从磁盘中删除。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 11.启用自动升级保持acme.sh为最新版本，禁用自动更新。</span></span><br><span class=\"line\">acme.sh --upgrade --auto-upgrade</span><br><span class=\"line\">acme.sh --upgrade --auto-upgrade 0</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 12.查看证书列表</span></span><br><span class=\"line\">acme.sh --list </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 13.删除证书</span></span><br><span class=\"line\">acme.sh remove &lt;SAN_Domains&gt;</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<h3 id=\"2-扩展补充\"><a href=\"#2-扩展补充\" class=\"headerlink\" title=\"2.扩展补充\"></a>2.扩展补充</h3><p><strong>Q: 将默认 CA 更改为 ZeroSSL?</strong><br>A: 通常情况下acme.sh使用letsencrypt作为默认CA, 当前可以将默认CA更改为 ZeroSSL（<a href=\"https://github.com/acmesh-official/acme.sh/wiki/ZeroSSL.com-CA），但实际上并不建议这样做，因为，Let&#39;s\" target=\"_blank\" rel=\"noopener\">https://github.com/acmesh-official/acme.sh/wiki/ZeroSSL.com-CA），但实际上并不建议这样做，因为，Let&#39;s</a> Encrypt 可以颁发 EC 证书，而 ZeroSSL.com 则不支持颁发。</p>\n<p><br></p>\n<p><strong>Q: 如何颁发包含多个域的单个证书，每个域使用不同的验证方法<code>多域、SAN模式、Hybrid模式</code>。</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ acme.sh  --issue  \\</span><br><span class=\"line\">-d aa.com  -w /home/wwwroot/aa.com \\</span><br><span class=\"line\">-d bb.com  --dns dns_cf \\</span><br><span class=\"line\">-d cc.com  --apache \\</span><br><span class=\"line\">-d dd.com  -w /home/wwwroot/dd.com</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>Q: 如何生成pkcs12(pfx) 格式证书?</strong></p>\n<blockquote>\n<p>A: 颁发证书后可使用toPkcs命令将证书转换为 pkcs12(pfx) 格式，执行 <code>acme.sh  --toPkcs  -d example.com  [--password pfx-password]</code> 命令即可。</p>\n</blockquote>\n<p><br></p>\n<p><strong>Q: 如何从从现有 CSR 颁发证书?</strong></p>\n<blockquote>\n<p>A: 从 v2.4.4 开始，acme.sh 支持从现有 csr 颁发证书, 具体操作如下所示:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 显示 csr 中的主题和域名。</span></span><br><span class=\"line\">acme.sh --showcsr --csr /path/to/mycsr.csr</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 本地web root目录验证</span></span><br><span class=\"line\">acme.sh --signcsr --csr /path/to/mycsr.csr -w /path/to/webroot/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># DNS TXT 解析验证</span></span><br><span class=\"line\">acme.sh --signcsr --csr /path/to/mycsr/csr --dns dns_cf</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<p><br></p>\n<p><strong>Q: 如何进行证书签发通知?</strong><br>A: acme.sh 可以在 cronjob 中发送通知, 通知可以是电子邮件或任何其他支持的方式，例如请求 webhook 等， 参考地址：<a href=\"https://github.com/acmesh-official/acme.sh/wiki/notify\" target=\"_blank\" rel=\"noopener\">https://github.com/acmesh-official/acme.sh/wiki/notify</a><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.邮件通知</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> MAIL_FROM=<span class=\"string\">\"xxx@xxx.com\"</span> <span class=\"comment\"># or \"Xxx Xxx &lt;xxx@xxx.com&gt;\", currently works only with sendmail</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> MAIL_TO=<span class=\"string\">\"xxx@xxx.com\"</span>   <span class=\"comment\"># your account e-mail will be used as default if available</span></span><br><span class=\"line\">acme.sh --<span class=\"built_in\">set</span>-notify  --notify-hook mailgun  --notify-hook mail  \\</span><br><span class=\"line\">  --notify-level 2 \\</span><br><span class=\"line\">  --notify-mode 0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.设置钉钉通知(钉钉),通过群机器人 webhook api 向钉钉群推送通知, 能力开通 https://ding-doc.dingtalk.com/doc#/serverapi2/qf2nxq</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> DINGTALK_WEBHOOK=<span class=\"string\">'https://oapi.dingtalk.com/robot/send?access_token=b05ccexxxxx'</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> DINGTALK_KEYWORD=acme</span><br><span class=\"line\">acme.sh  --<span class=\"built_in\">set</span>-notify  --notify-hook dingtalk</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3. QQ with self-built CQHTTP API, 通过 CoolQ 的插件 CQHTTP 将消息推送到 QQ, 需要您自行部署 CQHTTP 服务端.</span></span><br><span class=\"line\"><span class=\"comment\"># 四个环境变量可供传入:</span></span><br><span class=\"line\">* CQHTTP_TOKEN: 建议非空，将 CQHTTP 配置文件中您设置的 Access Token 填入。</span><br><span class=\"line\">* CQHTTP_USER: 必需，接收推送通知的 QQ 号码。您需要自行保证机器人号码可以向接收者的 QQ 号码发送消息。</span><br><span class=\"line\">* CQHTTP_APIROOT: 必需，您搭建的 CQHTTP 服务器的 URL (不包含斜杠结尾)。</span><br><span class=\"line\">* CQHTTP_CUSTOM_MSGHEAD: 可选，自定义的消息开头。默认值是 <span class=\"string\">\"A message from acme.sh:\"</span>.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> CQHTTP_TOKEN=<span class=\"string\">\"Itsjustat0ken,qwq\"</span>       <span class=\"comment\"># That's the access token</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> CQHTTP_USER=<span class=\"string\">\"10086\"</span>     <span class=\"comment\"># That's your QQ number (receiver)</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> CQHTTP_APIROOT=<span class=\"string\">\"http://cqhttp-server.local:5700\"</span>     <span class=\"comment\"># That's your server address</span></span><br><span class=\"line\">acme.sh  --<span class=\"built_in\">set</span>-notify  --notify-hook cqhttp</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>Q: acme.sh 除了支持Cloudflare还支持那些DNSAPI供应商</strong><br>描述: acme.sh 目前支持 cloudflare, dnspod, cloudxns, godaddy 以及 ovh 等数十种解析商的自动集成。</p>\n<ul>\n<li><p>使用万网/阿里云的 NDS 解析操作方法：点击右上角头像 -&gt; 选择 <code>AccessKey</code> -&gt; 点击开始使用子用户 <code>AccessKey</code> -&gt; 起个自定义名称 -&gt; 搜索 NDS -&gt; 选择 系统 <code>AliyunDNSFullAccess</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.阿里云 --dns dns_ali ，获取阿里云的DNS API key，首先开通阿里云AccessKeys子账户，复制这里的AccessKeyID和AccessKeySecert值。</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> Ali_Key=<span class=\"string\">\"YourKey\"</span> </span><br><span class=\"line\"><span class=\"built_in\">export</span> Ali_Secret=<span class=\"string\">\"YourSecert\"</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用的是 DNSPod 解析服务，那就登录 DNSPod 官网生，成所需的 api id 和 api key, 操作方法点击右上角头像 -&gt; 我的账号 -&gt; 账号中心 -&gt; API 密钥管理 -&gt; 创建密钥 (DNSPOD Token) 注意不是腾讯云api密钥</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 2.DNSPod --dns dns_dp</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> DP_Id=<span class=\"string\">\"3271210\"</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> DP_Key=<span class=\"string\">\"6381f3a11e61bf4a3cbf078a62a0446\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 实践使用</span></span><br><span class=\"line\">acme.sh --issue --dns dns_dp -d weiyigeek.top -d *.weiyigeek.top --keylength ec-256 --force</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># crontab -l 定时更新</span></span><br><span class=\"line\">4 0 * * * <span class=\"string\">\"/home/ubuntu/.acme.sh\"</span>/acme.sh --cron --home <span class=\"string\">\"/home/ubuntu/.acme.sh\"</span> &gt; /dev/null</span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2022/5/20220708091951.png\" alt=\"WeiyiGeek.DNSPOD Token\" title=\"\" class=\"\">\n                <p>WeiyiGeek.DNSPOD Token</p>\n            </figure>\n</li>\n</ul>\n<p><br></p>\n<p><strong>安装部署RSA、ECC双证书(使用DNSPod API)</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\">DOMAIN=<span class=\"string\">\"example.com\"</span>            <span class=\"comment\"># 域名</span></span><br><span class=\"line\">CERT_FOLDER=<span class=\"string\">\"/etc/nginx/certs\"</span>  <span class=\"comment\"># 证书存放的目录，结尾不能是\"/\"字符</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> DP_Id=<span class=\"string\">\"124846\"</span>           <span class=\"comment\"># DNSPod用户账户</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> DP_Key=<span class=\"string\">\"aBcDEfGhHiJkLmNOpQrStUvWxYz234\"</span>    <span class=\"comment\"># DNSPod用户密钥</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 申请RSA证书</span></span><br><span class=\"line\">acme.sh --issue -d <span class=\"variable\">$&#123;DOMAIN&#125;</span> -d *.<span class=\"variable\">$&#123;DOMAIN&#125;</span> --dns dns_dp --dnssleep 30 --ocsp --days 60 --keylength 2048</span><br><span class=\"line\"><span class=\"comment\"># 申请ECC证书</span></span><br><span class=\"line\">acme.sh --issue -d <span class=\"variable\">$&#123;DOMAIN&#125;</span> -d *.<span class=\"variable\">$&#123;DOMAIN&#125;</span> --dns dns_dp --dnssleep 30 --ocsp --days 60 --keylength ec-256</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建证书安装所需要的目录</span></span><br><span class=\"line\">mkdir <span class=\"variable\">$&#123;CERT_FOLDER&#125;</span>/&#123;rsa,ecc&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装RSA证书</span></span><br><span class=\"line\">acme.sh --install-cert -d <span class=\"variable\">$&#123;DOMAIN&#125;</span>                         \\</span><br><span class=\"line\">        --cert-file       <span class=\"variable\">$&#123;CERT_FOLDER&#125;</span>/rsa/cert.pem       \\</span><br><span class=\"line\">        --key-file        <span class=\"variable\">$&#123;CERT_FOLDER&#125;</span>/rsa/key.pem        \\</span><br><span class=\"line\">        --fullchain-file  <span class=\"variable\">$&#123;CERT_FOLDER&#125;</span>/rsa/fullchain.pem  \\</span><br><span class=\"line\">        --reloadcmd       <span class=\"string\">\"systemctl restart nginx\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装ECC证书</span></span><br><span class=\"line\">acme.sh --install-cert -d <span class=\"variable\">$&#123;DOMAIN&#125;</span> --ecc                   \\</span><br><span class=\"line\">        --cert-file       <span class=\"variable\">$&#123;CERT_FOLDER&#125;</span>/ecc/cert.pem       \\</span><br><span class=\"line\">        --key-file        <span class=\"variable\">$&#123;CERT_FOLDER&#125;</span>/ecc/key.pem        \\</span><br><span class=\"line\">        --fullchain-file  <span class=\"variable\">$&#123;CERT_FOLDER&#125;</span>/ecc/fullchain.pem  \\</span><br><span class=\"line\">        --reloadcmd       <span class=\"string\">\"systemctl restart nginx\"</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h2 id=\"0x04-入坑出坑\"><a href=\"#0x04-入坑出坑\" class=\"headerlink\" title=\"0x04 入坑出坑\"></a>0x04 入坑出坑</h2><h3 id=\"1-Cloudflare-的API-不技持-cf-ga-gq-ml-or-tk-的域名申请证书\"><a href=\"#1-Cloudflare-的API-不技持-cf-ga-gq-ml-or-tk-的域名申请证书\" class=\"headerlink\" title=\"1.Cloudflare 的API 不技持 .cf, .ga, .gq, .ml, or .tk 的域名申请证书\"></a>1.Cloudflare 的API 不技持 .cf, .ga, .gq, .ml, or .tk 的域名申请证书</h3><ul>\n<li>错误信息:<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"errors\"</span>: [&#123;</span><br><span class=\"line\">  <span class=\"string\">\"code\"</span>: 1038,</span><br><span class=\"line\">  <span class=\"string\">\"message\"</span>: <span class=\"string\">\"You cannot use this API for domains with a .cf, .ga, .gq, .ml, or .tk TLD (top-level domain). To configure the DNS settings for this domain, use the Cloudflare Dashboard.\"</span></span><br><span class=\"line\">&#125;],</span><br></pre></td></tr></table></figure></li>\n<li>解决办法: 不能自动申请则只能WEB页面上进行申请。</li>\n</ul>\n<p><br></p>\n<h2 id=\"0x04-其它参考\"><a href=\"#0x04-其它参考\" class=\"headerlink\" title=\"0x04 其它参考\"></a>0x04 其它参考</h2><ul>\n<li>CertBot Ubuntu: <a href=\"https://certbot.eff.org/instructions?ws=nginx&amp;os=ubuntufocal\" target=\"_blank\" rel=\"noopener\">https://certbot.eff.org/instructions?ws=nginx&amp;os=ubuntufocal</a></li>\n<li>Let’s Encrypt + Nginx + CertBot 泛解析域名的一次实现 : <a href=\"https://blog.csdn.net/weixin_43558927/article/details/123046649\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/weixin_43558927/article/details/123046649</a></li>\n<li>Let’s Encrypt 配置泛域名通用证书 : <a href=\"https://www.jianshu.com/p/c6f6f277a23d\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/c6f6f277a23d</a></li>\n</ul>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"证书颁发","path":"api/categories/证书颁发.json"}],"tags":[{"name":"SSL-TLS","path":"api/tags/SSL-TLS.json"},{"name":"HTTPS","path":"api/tags/HTTPS.json"}]}