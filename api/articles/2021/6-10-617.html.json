{"title":"Helm包管理工具入门学习及使用","slug":"虚拟云容/云容器/Kubernetes/部署组件/Helm包管理工具入门学习及使用","date":"2021-06-10T10:37:47.000Z","updated":"2023-01-31T02:29:10.641Z","url":"2021/6-10-617.html","path":"api/articles/2021/6-10-617.html.json","covers":["https://img.weiyigeek.top/2020/2/20201125111814.png","https://img.weiyigeek.top/2020/2/20201125172155.png","https://img.weiyigeek.top/2020/2/20201126134008.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h2 id=\"0x00-前言简述\"><a href=\"#0x00-前言简述\" class=\"headerlink\" title=\"0x00 前言简述\"></a>0x00 前言简述</h2><h3 id=\"1-背景介绍\"><a href=\"#1-背景介绍\" class=\"headerlink\" title=\"1.背景介绍\"></a>1.背景介绍</h3><p>描述: 随着业务容器化与向微服务的架构转变，通过分解巨大的单体应用为多个服务的方式降低了单体应用的复杂性，使得每个微服务都可以独立部署和扩展,可以更加有效的实现快速迭代与部署并且减少了应用程序开发到上线周期;</p>\n<p>但是于此同时又有新的问题浮现出来，由于单体应用被拆分称为多个组件导致服务部署的数量增加，而直接采用K8s为每一个独立应用进行独立部署、扩容带来非常大的挑战;</p>\n<p>例如采用Kubernetes做应用编排带来了以下挑战:</p>\n<ul>\n<li>1) 如何管理、配置、与更新大量的K8s配置文件</li>\n<li>2) 如何部署一个含有大量的配置文件的复杂的K8s应用</li>\n<li>3) 如何便于分享与复用K8s配置和应用</li>\n<li>4) 如何参数化配置模板并支持多个环境</li>\n<li>5) 如何管理应用发布、回滚以及查看历史发布信息</li>\n<li>6) 如何控制一个部署周期中的某一个环节</li>\n<li>7) 如何在应用发布后验证</li>\n</ul>\n<p>而恰好这些挑战Helm可以有效的帮助我们解决上述问题;</p>\n<hr>\n<h3 id=\"2-基础介绍\"><a href=\"#2-基础介绍\" class=\"headerlink\" title=\"2.基础介绍\"></a>2.基础介绍</h3><p>Q: 什么是Helm?</p>\n<blockquote>\n<p>答: Helm<code>英 /helm/</code>实际是一个 Kubernetes 包管理器是查找、分享和使用软件构建 Kubernetes 的最优方式, 即使是最复杂的 Kubernetes 应用程序，都可以帮助您定义，安装和升级。<br>可将它类似于CentOS下的Yum软件管理仓库(<code>即K8s中的apt与yum</code>)是部署环境的流程封装, 并且 Helm 应用中心公共库中拥有大量的图表 Chart (类似于<code>Docker Hub</code>仓库) <code>易于创建、发版、分享和发布</code>，所以停止复制粘贴，开始使用 Helm 吧。<br>Helm 是 <a href=\"https://cncf.io/\" target=\"_blank\" rel=\"noopener\">CNCF</a> 的毕业项目，由 <a href=\"https://github.com/helm/community\" target=\"_blank\" rel=\"noopener\">Helm</a> 社区维护。</p>\n</blockquote>\n<p>官网地址: <a href=\"https://helm.sh/\" target=\"_blank\" rel=\"noopener\">https://helm.sh/</a><br>项目地址: <a href=\"https://github.com/helm/helm\" target=\"_blank\" rel=\"noopener\">https://github.com/helm/helm</a><br>应用中心: <a href=\"https://hub.helm.sh/\" target=\"_blank\" rel=\"noopener\">https://hub.helm.sh/</a><br>仓库中心: <a href=\"https://artifacthub.io/packages\" target=\"_blank\" rel=\"noopener\">https://artifacthub.io/packages</a></p>\n<p><br/></p>\n<p>Q: Helm 作用简述?</p>\n<blockquote>\n<p>答: Helm 是 Kuernetes服务编排领域的一个子项目, 它通过软件打包的形式支持发布的版本管理和控制, 很大程度上简化了Kunernetes应用部署和管理的复杂性;<br>Helm将K8s相关的控制器资源(例如Deployment、Services、Statufulset、ingress等)打包到一个图表chart中，而图表chart又可以保存在chart仓库之中, 便于存储与分享Chart;<br>Helm简化了K8s部署应用的版本控制、打包、发布、删除、更新、回滚等操作;<br>简单的说: 简化了 Kubernetes 应用的部署和管理;</p>\n</blockquote>\n<p><br/></p>\n<p>Q : Helm 特点有哪些?</p>\n<ul>\n<li>复杂性管理 : 即使是最复杂的应用，图表 Charts 依然可以描述， 提供使用单点授权的可重复安装应用程序。</li>\n<li>易于升级 ：随时随地升级和自定义的钩子消除您升级的痛苦。</li>\n<li>分发简单 ：图表 Charts 很容易在公共或私有化服务器上发版，分发和部署站点。</li>\n<li>回滚 ： 使用 helm rollback 可以轻松回滚到之前的发布版本。</li>\n</ul>\n<p>PS : Helm与kubernetes和Docker之间的关系?</p>\n<blockquote>\n<p>答 : Helm 是对于kubernetes服务的编排，而Kubernetes是对于Docker容器的编排;</p>\n</blockquote>\n<p><br/></p>\n<p>Q: 什么是Helm图表?</p>\n<blockquote>\n<p>答: Helm 图表是又一个个yaml格式的文件构成，并且有一定项目结构要求编写成功后可以上传到Chart仓库中即 <code>Helm 应用中心公共库</code>;</p>\n</blockquote>\n<p><br></p>\n<p><strong>三个重要概念</strong></p>\n<ul>\n<li>1) Chart ： 创建Kubernetes应用程序实例所需的一组信息, 包括各种Kubernetes对象的配置模板、参数定义、依赖关系、文档说明等, 类似于apt/yum中的软件安装包。</li>\n<li>2) Config : 包含可合并到打包图表中以创建可发布对象的配置信息。</li>\n<li>3) Release : 是图表Chart的运行实例与特定的配置组合在一起<code>即chart被Helm运行后将会生成对应的一个release</code>。</li>\n</ul>\n<p>PS : 当 chart 被安装到 Kubernetes集群中就生成一个 release, 当多次将chart安装到同一个集群时候每一个安装都是一个Release;</p>\n<hr>\n<h3 id=\"3-架构组件\"><a href=\"#3-架构组件\" class=\"headerlink\" title=\"3.架构组件\"></a>3.架构组件</h3><p><strong>版本说明</strong><br>描述: Helm的版本用 x.y.z 描述，<code>x是主版本，y是次版本，z是补丁版本</code>，遵循语义化版本术语。</p>\n<p>可支持的版本偏差:</p>\n<ul>\n<li>从 Helm 3 开始 Helm 编译时假定与针对 <code>n-3</code> 版本的Kubernetes兼容。</li>\n<li>由于 Helm 2 对 Kubernetes 次版本变更的支持稍微严格一点则假定与Kubernetes的 <code>n-1</code> 版本兼容。</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20201125111814.png\" alt=\"WeiyiGeek.Helm版本架构\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Helm版本架构</p>\n            </figure>\n<p>补充说明: 在2019年发布Helm V3.*版本和之前版本相比有以下变化</p>\n<ul>\n<li>(1) v3.* 版本删除Tiller架构变化</li>\n<li>(2) release 可以在不同命名空间重用</li>\n<li>(3) 将 chart 推送到 docker 仓库中</li>\n</ul>\n<p>版本差异说明: <a href=\"https://helm.sh/docs/topics/v2_v3_migration/\" target=\"_blank\" rel=\"noopener\">https://helm.sh/docs/topics/v2_v3_migration/</a></p>\n<p><br/></p>\n<p>参考下表来确定哪个版本的Helm与您的集群兼容: <code>补充-2022年5月31日 15:08:10</code><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Helm 版本\t支持的 Kubernetes 版本</span><br><span class=\"line\">3.8.x\t1.23.x - 1.20.x</span><br><span class=\"line\">3.7.x\t1.22.x - 1.19.x</span><br><span class=\"line\">3.6.x\t1.21.x - 1.18.x</span><br><span class=\"line\">3.5.x\t1.20.x - 1.17.x</span><br><span class=\"line\">3.4.x\t1.19.x - 1.16.x</span><br><span class=\"line\">3.3.x\t1.18.x - 1.15.x</span><br><span class=\"line\">3.2.x\t1.18.x - 1.15.x</span><br><span class=\"line\">3.1.x\t1.17.x - 1.14.x</span><br><span class=\"line\">3.0.x\t1.16.x - 1.13.x</span><br><span class=\"line\">2.16.x\t1.16.x - 1.15.x</span><br><span class=\"line\">2.15.x\t1.15.x - 1.14.x</span><br></pre></td></tr></table></figure></p>\n<p>参考地址: <a href=\"https://helm.sh/zh/docs/topics/version_skew/\" target=\"_blank\" rel=\"noopener\">https://helm.sh/zh/docs/topics/version_skew/</a></p>\n<p><br></p>\n<h3 id=\"4-组件说明\"><a href=\"#4-组件说明\" class=\"headerlink\" title=\"4.组件说明\"></a>4.组件说明</h3><p>描述: Helm 是一个可执行文件是用Go编程语言编写的, 它分为两个不同部分即<code>Helm客户端和Helm库</code><br>该库使用Kubernetes客户端库与Kubernetes进行通信, 当前该库使用<code>REST + JSON</code>接口方式，它在Kubernetes内部的Secrets中存储信息<code>即它不需要自己的数据库</code>。</p>\n<p><br></p>\n<p><code>Helm Client</code> 是面向最终用户的命令行客户端负责以下工作：</p>\n<ul>\n<li>本地图表开发</li>\n<li>管理储存库</li>\n<li>管理发布</li>\n<li>与Helm库的接口</li>\n<li>发送要安装的图表</li>\n<li>请求升级或卸载现有版本</li>\n</ul>\n<p><br></p>\n<p><code>Helm Library</code> 提供了用于执行所有Helm操作的逻辑。它与Kubernetes API服务器连接并提供以下功能：</p>\n<ul>\n<li>结合图表和配置以构建发布</li>\n<li>将图表安装到Kubernetes中并提供后续发行对象</li>\n<li>通过与Kubernetes交互来升级和卸载图表</li>\n<li>独立的Helm库封装了Helm逻辑，以便不同的客户端可以利用它。</li>\n</ul>\n<p>Helm 包含两个组件：Helm 客户端 和 Tiller 服务器</p>\n<ul>\n<li>Helm 客户端负责 chart 和 release 的创建和管理以及和 Tiller的交互。</li>\n<li>Tiller 服务器运行在 Kubernetes 集群中，它会处理Helm客户端的请求，与 Kubernetes API Server 交互。 </li>\n</ul>\n<p><br></p>\n<p><strong>帮助文档</strong><br>快速开始: <a href=\"https://helm.sh/zh/docs/intro/quickstart/\" target=\"_blank\" rel=\"noopener\">https://helm.sh/zh/docs/intro/quickstart/</a></p>\n<p>PS : 当前实践版本 V3.4.1 请读者注意当版本有所改变时某些特性及其配置可能会发生改变，请参考Helm官网为准;</p>\n<hr>\n<h2 id=\"0x01-基础安装\"><a href=\"#0x01-基础安装\" class=\"headerlink\" title=\"0x01 基础安装\"></a>0x01 基础安装</h2><p>描述: 如有最新请参考安装官方安装文档: <a href=\"https://helm.sh/zh/docs/intro/install/\" target=\"_blank\" rel=\"noopener\">https://helm.sh/zh/docs/intro/install/</a></p>\n<h3 id=\"1-环境需求\"><a href=\"#1-环境需求\" class=\"headerlink\" title=\"1.环境需求\"></a>1.环境需求</h3><ul>\n<li>1) 安装有K8s集群</li>\n<li>2) 安装和配置Helm到Master节点上</li>\n</ul>\n<p>PS : 对于Helm的最新版本我们建议使用Kubernetes的最新稳定版, 在大多数情况下它是倒数第二个 <code>minor release</code>可以参考上述的K8s与Helm版本的对应表;</p>\n<p><br/></p>\n<h3 id=\"2-部署说明\"><a href=\"#2-部署说明\" class=\"headerlink\" title=\"2.部署说明\"></a>2.部署说明</h3><p>部署环境说明:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~$ kubectl version</span><br><span class=\"line\">  <span class=\"comment\"># Client Version: version.Info&#123;Major:\"1\", Minor:\"19\", GitVersion:\"v1.19.3\", GitCommit:\"1e11e4a2108024935ecfcb2912226cedeafd99df\", GitTreeState:\"clean\", BuildDate:\"2020-10-14T12:50:19Z\", GoVersion:\"go1.15.2\", Compiler:\"gc\", Platform:\"linux/amd64\"&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">~$ kubeadm version</span><br><span class=\"line\">  <span class=\"comment\"># kubeadm version: &amp;version.Info&#123;Major:\"1\", Minor:\"19\", GitVersion:\"v1.19.3\", GitCommit:\"1e11e4a2108024935ecfcb2912226cedeafd99df\", GitTreeState:\"clean\", BuildDate:\"2020-10-14T12:47:53Z\", GoVersion:\"go1.15.2\", Compiler:\"gc\", Platform:\"linux/amd64\"&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">~$ lsb_release -a</span><br><span class=\"line\">  <span class=\"comment\"># Distributor ID: Ubuntu</span></span><br><span class=\"line\">  <span class=\"comment\"># Description:    Ubuntu 20.04.1 LTS</span></span><br><span class=\"line\">  <span class=\"comment\"># Release:        20.04</span></span><br><span class=\"line\">  <span class=\"comment\"># Codename:       focal</span></span><br><span class=\"line\"></span><br><span class=\"line\">~$ docker info</span><br><span class=\"line\">  <span class=\"comment\"># Server Version: 19.03.13</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"Helm-Client\"><a href=\"#Helm-Client\" class=\"headerlink\" title=\"Helm Client\"></a>Helm Client</h4><p><strong>安装方式</strong></p>\n<ul>\n<li><p>1) 包管理器安装(Ubuntu-snap)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.Apt (Debian/Ubuntu) Helm社区成员贡献了针对Apt的一个 Helm包包通常是最新的。</span></span><br><span class=\"line\">curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -</span><br><span class=\"line\">sudo apt-get install apt-transport-https --yes</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"deb https://baltocdn.com/helm/stable/debian/ all main\"</span> | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install helm</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.Snap : Snapcrafters社区维护了 Helm 包的Snap版本：</span></span><br><span class=\"line\">sudo snap install helm --classic</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>2) 脚本安装(自动拉取最新的Helm版本并在本地安装)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 常规</span></span><br><span class=\"line\">$ curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3</span><br><span class=\"line\">$ chmod 700 get_helm.sh</span><br><span class=\"line\">$ ./get_helm.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 或者</span></span><br><span class=\"line\">curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>3) 二进制安装(下载解压并添加到系统PATH之中)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.下载并解压</span></span><br><span class=\"line\">ARCH=$(dpkg --<span class=\"built_in\">print</span>-architecture)</span><br><span class=\"line\">VERSION=<span class=\"string\">\"3.4.1\"</span></span><br><span class=\"line\">wget https://get.helm.sh/helm-v<span class=\"variable\">$&#123;VERSION&#125;</span>-linux-<span class=\"variable\">$&#123;ARCH&#125;</span>.tar.gz -O /tmp/helm-v<span class=\"variable\">$&#123;VERSION&#125;</span>-linux-<span class=\"variable\">$&#123;ARCH&#125;</span>.tar.gz</span><br><span class=\"line\">tar -zxf /tmp/helm-v3.4.1-linux-amd64.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.复制到 /usr/local/bin/</span></span><br><span class=\"line\">sudo cp helm /usr/<span class=\"built_in\">local</span>/bin/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.版本验证</span></span><br><span class=\"line\">$ helm version</span><br><span class=\"line\">version.BuildInfo&#123;Version:<span class=\"string\">\"v3.4.1\"</span>, GitCommit:<span class=\"string\">\"c4e74854886b2efe3321e185578e6db9be0a6e29\"</span>, GitTreeState:<span class=\"string\">\"clean\"</span>, GoVersion:<span class=\"string\">\"go1.14.11\"</span>&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br/></p>\n<h4 id=\"Helm-Libaray\"><a href=\"#Helm-Libaray\" class=\"headerlink\" title=\"Helm Libaray\"></a>Helm Libaray</h4><hr>\n<h3 id=\"3-基础配置\"><a href=\"#3-基础配置\" class=\"headerlink\" title=\"3.基础配置\"></a>3.基础配置</h3><h4 id=\"Helm基础使用\"><a href=\"#Helm基础使用\" class=\"headerlink\" title=\"Helm基础使用\"></a>Helm基础使用</h4><p>描述: 以下是Helm基础使用配置<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 设置Helm命令补全</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"source &lt;(helm completion bash)\"</span> &gt;&gt; ~/.bashrc</span><br><span class=\"line\">helm completion bash &gt; /etc/bash_completion.d/helm</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 第三方Chart仓库添加/查看/更新/删除</span></span><br><span class=\"line\"><span class=\"comment\"># 官网需要翻墙: helm repo add stable https://charts.helm.sh/stable</span></span><br><span class=\"line\">~$ helm repo add stable https://charts.helm.sh/stable</span><br><span class=\"line\">  <span class=\"comment\"># \"stable\" has been added to your repositories</span></span><br><span class=\"line\">~$ helm repo add azure http://mirror.azure.cn/kubernetes/charts</span><br><span class=\"line\"><span class=\"comment\"># ~$ helm repo add aliyun https://apphub.aliyuncs.com/</span></span><br><span class=\"line\">~$ helm repo add aliyun  https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts</span><br><span class=\"line\">  <span class=\"comment\"># \"aliyun\" has been added to your repositories</span></span><br><span class=\"line\">~$ helm repo list</span><br><span class=\"line\">  <span class=\"comment\"># NAME    URL</span></span><br><span class=\"line\">  <span class=\"comment\"># stable  http://mirror.azure.cn/kubernetes/charts</span></span><br><span class=\"line\">  <span class=\"comment\"># aliyun  https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts</span></span><br><span class=\"line\">~$ helm repo update</span><br><span class=\"line\">  <span class=\"comment\"># Hang tight while we grab the latest from your chart repositories...</span></span><br><span class=\"line\">  <span class=\"comment\"># ...Successfully got an update from the \"aliyun\" chart repository</span></span><br><span class=\"line\">  <span class=\"comment\"># ...Successfully got an update from the \"stable\" chart repository</span></span><br><span class=\"line\">  <span class=\"comment\"># Update Complete. ⎈Happy Helming!⎈</span></span><br><span class=\"line\">~$ helm repo remove aliyun</span><br><span class=\"line\">  <span class=\"comment\"># \"aliyun\" has been removed from your repositories</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (3) 应用搜索(搜索使用模糊字符串匹配算法)</span></span><br><span class=\"line\">~$ helm search hub redis   <span class=\"comment\"># Helm 官网Chart仓库中心</span></span><br><span class=\"line\">  <span class=\"comment\"># URL                                                     CHART VERSION   APP VERSION     DESCRIPTION</span></span><br><span class=\"line\">  <span class=\"comment\"># https://hub.helm.sh/charts/drycc-canary/redis           1.0.0                           A Redis database for use inside a Kubernetes cl...</span></span><br><span class=\"line\">  <span class=\"comment\"># https://hub.helm.sh/charts/groundhog2k/redis            0.1.2           6.0.9           A Helm chart for Redis on Kubernetes</span></span><br><span class=\"line\">  <span class=\"comment\"># https://hub.helm.sh/charts/wener/redis                  12.1.1          6.0.9           Open source, advanced key-value store. It is of...</span></span><br><span class=\"line\">  ....</span><br><span class=\"line\"></span><br><span class=\"line\">~$ helm search repo dashboard | grep -v <span class=\"string\">\"DEPRECATED\"</span>   <span class=\"comment\">#  第三方 Chart 仓库</span></span><br><span class=\"line\">  <span class=\"comment\"># NAME                            CHART VERSION   APP VERSION     DESCRIPTION</span></span><br><span class=\"line\">  <span class=\"comment\"># aliyun/kubernetes-dashboard     0.6.0           1.8.3           General-purpose web UI for Kubernetes clusters</span></span><br><span class=\"line\">  <span class=\"comment\"># aliyun/jasperreports            0.2.5           6.4.2           The JasperReports server can be used as a stand...</span></span><br><span class=\"line\">  <span class=\"comment\"># aliyun/kube-ops-view            0.4.1                           Kubernetes Operational View - read-only system ...</span></span><br><span class=\"line\">  <span class=\"comment\"># aliyun/uchiwa                   0.2.3                           Dashboard for the Sensu monitoring framework</span></span><br><span class=\"line\">  <span class=\"comment\"># aliyun/weave-cloud              0.1.2                           Weave Cloud is a add-on to Kubernetes which pro...</span></span><br><span class=\"line\">  <span class=\"comment\"># aliyun/weave-scope              0.9.2           1.6.5           A Helm chart for the Weave Scope cluster visual...</span></span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<h4 id=\"Chart仓库镜像\"><a href=\"#Chart仓库镜像\" class=\"headerlink\" title=\"Chart仓库镜像\"></a>Chart仓库镜像</h4><table>\n<thead>\n<tr>\n<th>仓库名称</th>\n<th>charts仓库URL</th>\n<th>命令</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>stable</td>\n<td><a href=\"https://charts.helm.sh/stable\" target=\"_blank\" rel=\"noopener\">https://charts.helm.sh/stable</a></td>\n<td><code>helm repo add stable https://charts.helm.sh/stable</code></td>\n</tr>\n<tr>\n<td>bitnami</td>\n<td><a href=\"https://charts.bitnami.com/bitnami\" target=\"_blank\" rel=\"noopener\">https://charts.bitnami.com/bitnami</a></td>\n<td><code>helm repo add bitnami https://charts.bitnami.com/bitnami</code></td>\n</tr>\n<tr>\n<td>azure</td>\n<td><a href=\"http://mirror.azure.cn/kubernetes/charts\" target=\"_blank\" rel=\"noopener\">http://mirror.azure.cn/kubernetes/charts</a></td>\n<td><code>helm repo add azure http://mirror.azure.cn/kubernetes/charts</code></td>\n</tr>\n<tr>\n<td>apphub</td>\n<td><a href=\"https://apphub.aliyuncs.com/\" target=\"_blank\" rel=\"noopener\">https://apphub.aliyuncs.com/</a></td>\n<td><code>helm repo add apphub https://apphub.aliyuncs.com/</code></td>\n</tr>\n<tr>\n<td>ali-stable</td>\n<td><a href=\"https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts\" target=\"_blank\" rel=\"noopener\">https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts</a></td>\n<td><code>helm repo add ali-stable https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts</code></td>\n</tr>\n<tr>\n<td>ali-incubator</td>\n<td><a href=\"https://aliacs-app-catalog.oss-cn-hangzhou.aliyuncs.com/charts-incubator/\" target=\"_blank\" rel=\"noopener\">https://aliacs-app-catalog.oss-cn-hangzhou.aliyuncs.com/charts-incubator/</a></td>\n<td><code>helm repo add ali-incubator https://aliacs-app-catalog.oss-cn-hangzhou.aliyuncs.com/charts-incubator/</code></td>\n</tr>\n</tbody>\n</table>\n<p><strong>其他常用软件仓库:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ingress https://kubernetes.github.io/ingress-nginx</span><br><span class=\"line\">grafana https://grafana.github.io/helm-charts</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h2 id=\"0x02-入门实践\"><a href=\"#0x02-入门实践\" class=\"headerlink\" title=\"0x02 入门实践\"></a>0x02 入门实践</h2><p><strong>使用简述</strong></p>\n<ul>\n<li>1.创建并编写新的Chart</li>\n<li>2.测试创建的Chart</li>\n<li>3.将Chart应用进行打包成为tgz格式</li>\n<li>4.上传Chart到Chart仓库或者从远程仓库中下载Chart</li>\n<li>5.在K8s集群中运行Chart自动生成一个release</li>\n<li>6.利用Helm管理Chart的发布、结束生命周期</li>\n</ul>\n<hr>\n<h3 id=\"1-Hello-World-自定义模板\"><a href=\"#1-Hello-World-自定义模板\" class=\"headerlink\" title=\"1.Hello World - 自定义模板\"></a>1.Hello World - 自定义模板</h3><p>描述: 我们采用Helm执行我们自定义模板生成chart图表，并且运行图表实例生成release;</p>\n<p>Helm 模板项目结构:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/K8s/Day10/demo1$ tree .</span><br><span class=\"line\">.</span><br><span class=\"line\">├── Chart.yaml   <span class=\"comment\"># 当前chart属性配置信息</span></span><br><span class=\"line\">├── templates    <span class=\"comment\"># 编写yaml文件放到这个目录中包括但不限于Service、Pod、DaemonSet、ReplicaSet、Deployment以及　　·StatefulSet</span></span><br><span class=\"line\">│   ├── deployment.yaml</span><br><span class=\"line\">│   └── service.yaml</span><br><span class=\"line\">└── values.yaml  <span class=\"comment\"># yaml文件可以的使用全局变量</span></span><br><span class=\"line\"></span><br><span class=\"line\">1 directory, 4 files</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p><strong>操作流程:</strong></p>\n<ul>\n<li><p>Step 1.创建自描述文件 Chart.yaml 文件必须有 name 和 version 定义，注意apiVersion非必须但是建议填写否则验证配置时会有警告;</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># PS : Chart.yaml 是大写</span></span><br><span class=\"line\">cat &lt;&lt;<span class=\"string\">'EOF'</span> &gt; ./Chart.yaml   </span><br><span class=\"line\">appVersion: 1.0 </span><br><span class=\"line\">apiVersion: v2</span><br><span class=\"line\">name: hello-world </span><br><span class=\"line\">description: A Helm chart <span class=\"keyword\">for</span> Kubernetes</span><br><span class=\"line\"><span class=\"built_in\">type</span>: application</span><br><span class=\"line\">version: 1.0.0 </span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 2.创建项目配置文件 Values.yaml 便于后面的资源清单使用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &lt;&lt;<span class=\"string\">'EOF'</span> &gt; ./values.yaml </span><br><span class=\"line\">replicas: 1</span><br><span class=\"line\">image:</span><br><span class=\"line\">  repository: harbor.weiyigeek.top/<span class=\"built_in\">test</span>/nginx</span><br><span class=\"line\">  tag: <span class=\"string\">'v1.0'</span> </span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>Step 3.创建模板文件，用于生成 Kubernetes 资源清单 (manifests) 模板目录名称必须是templates</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">mkdir</span> <span class=\"string\">./templates</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"string\">cat</span> <span class=\"string\">&lt;&lt;'EOF'</span> <span class=\"string\">&gt; ./templates/deployment.yaml </span></span><br><span class=\"line\"><span class=\"string\"></span><span class=\"attr\">apiVersion:</span> <span class=\"string\">apps/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Deployment</span> </span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">hello-world-deployment</span></span><br><span class=\"line\"><span class=\"attr\">  labels:</span></span><br><span class=\"line\"><span class=\"attr\">    app:</span> <span class=\"string\">hello-world</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  replicas:</span> <span class=\"string\">&#123;&#123;</span> <span class=\"string\">.Values.replicas</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\"><span class=\"attr\">  selector:</span></span><br><span class=\"line\"><span class=\"attr\">    matchLabels:</span>  </span><br><span class=\"line\"><span class=\"attr\">      app:</span> <span class=\"string\">hello-world</span>       <span class=\"comment\"># 匹配的Pod标签非常重要</span></span><br><span class=\"line\"><span class=\"attr\">  template:</span></span><br><span class=\"line\"><span class=\"attr\">    metadata:</span></span><br><span class=\"line\"><span class=\"attr\">      labels:</span></span><br><span class=\"line\"><span class=\"attr\">        app:</span> <span class=\"string\">hello-world</span> </span><br><span class=\"line\"><span class=\"attr\">    spec:</span></span><br><span class=\"line\"><span class=\"attr\">      containers:</span></span><br><span class=\"line\"><span class=\"attr\">        - name:</span> <span class=\"string\">nginx-hello</span></span><br><span class=\"line\"><span class=\"attr\">          image:</span> <span class=\"string\">&#123;&#123;</span> <span class=\"string\">.Values.image.repository</span> <span class=\"string\">&#125;&#125;:&#123;&#123;</span> <span class=\"string\">.Values.image.tag</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\"><span class=\"attr\">          imagePullPolicy:</span> <span class=\"string\">IfNotPresent</span></span><br><span class=\"line\"><span class=\"attr\">          ports:</span></span><br><span class=\"line\"><span class=\"attr\">            - containerPort:</span> <span class=\"number\">80</span> </span><br><span class=\"line\"><span class=\"attr\">              protocol:</span> <span class=\"string\">TCP</span> </span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Service</span></span><br><span class=\"line\"><span class=\"string\">cat</span> <span class=\"string\">&lt;&lt;'EOF'</span> <span class=\"string\">&gt; ./templates/service.yaml </span></span><br><span class=\"line\"><span class=\"string\"></span><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span> </span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Service</span> </span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">hello-world-svc</span> </span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">NodePort</span> </span><br><span class=\"line\"><span class=\"attr\">  ports:</span></span><br><span class=\"line\"><span class=\"attr\">  - port:</span> <span class=\"number\">80</span> </span><br><span class=\"line\"><span class=\"attr\">    targetPort:</span> <span class=\"number\">80</span> </span><br><span class=\"line\"><span class=\"attr\">    nodePort:</span> <span class=\"number\">30080</span></span><br><span class=\"line\"><span class=\"attr\">    protocol:</span> <span class=\"string\">TCP</span></span><br><span class=\"line\"><span class=\"attr\">  selector:</span></span><br><span class=\"line\"><span class=\"attr\">    app:</span> <span class=\"string\">hello-world</span> </span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 4.使用模板动态生成K8s资源清单，非常需要验证模板配置是否正常或者能提前预览生成的结果在运行前进行Debug；</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 验证Chart模板配置是否正确</span></span><br><span class=\"line\">~/K8s/Day10/demo1$ helm lint .</span><br><span class=\"line\">  <span class=\"comment\"># ==&gt; Linting .</span></span><br><span class=\"line\">  <span class=\"comment\"># [INFO] Chart.yaml: icon is recommended</span></span><br><span class=\"line\">  <span class=\"comment\"># 1 chart(s) linted, 0 chart(s) failed</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 使用 --dry-run --debug 选项来打印出生成的清单文件内容而不执行部署</span></span><br><span class=\"line\">~/K8s/Day10/demo1$ helm --debug install . --dry-run  --generate-name</span><br><span class=\"line\">  <span class=\"comment\"># install.go:172: [debug] Original chart version: \"\"</span></span><br><span class=\"line\">  <span class=\"comment\"># install.go:189: [debug] CHART PATH: /home/weiyigeek/K8s/Day10/demo1</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># NAME: chart-1606294992</span></span><br><span class=\"line\">  <span class=\"comment\"># LAST DEPLOYED: Wed Nov 25 17:03:12 2020</span></span><br><span class=\"line\">  <span class=\"comment\"># NAMESPACE: default</span></span><br><span class=\"line\">  <span class=\"comment\"># STATUS: pending-install</span></span><br><span class=\"line\">  <span class=\"comment\"># REVISION: 1</span></span><br><span class=\"line\">  <span class=\"comment\"># TEST SUITE: None</span></span><br><span class=\"line\">  <span class=\"comment\"># USER-SUPPLIED VALUES:</span></span><br><span class=\"line\">  <span class=\"comment\"># &#123;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># COMPUTED VALUES:</span></span><br><span class=\"line\">  <span class=\"comment\"># image:</span></span><br><span class=\"line\">  <span class=\"comment\">#   repository: harbor.weiyigeek.top/test/nginx</span></span><br><span class=\"line\">  <span class=\"comment\">#   tag: v1.0</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># HOOKS:</span></span><br><span class=\"line\">  <span class=\"comment\"># MANIFEST:</span></span><br><span class=\"line\">  <span class=\"comment\"># ---</span></span><br><span class=\"line\">  <span class=\"comment\"># # Source: hello-world/templates/service.yaml</span></span><br><span class=\"line\">  <span class=\"comment\"># apiVersion: v1</span></span><br><span class=\"line\">  <span class=\"comment\"># kind: Service</span></span><br><span class=\"line\">  <span class=\"comment\"># metadata:</span></span><br><span class=\"line\">  <span class=\"comment\">#   name: hello-world-svc</span></span><br><span class=\"line\">  <span class=\"comment\"># spec:</span></span><br><span class=\"line\">  <span class=\"comment\">#   type: NodePort</span></span><br><span class=\"line\">  <span class=\"comment\">#   ports:</span></span><br><span class=\"line\">  <span class=\"comment\">#   - port: 80</span></span><br><span class=\"line\">  <span class=\"comment\">#     targetPort: 80</span></span><br><span class=\"line\">  <span class=\"comment\">#     nodePort: 30080</span></span><br><span class=\"line\">  <span class=\"comment\">#     protocol: TCP</span></span><br><span class=\"line\">  <span class=\"comment\">#   selector:</span></span><br><span class=\"line\">  <span class=\"comment\">#     app: hello-world</span></span><br><span class=\"line\">  <span class=\"comment\"># ---</span></span><br><span class=\"line\">  <span class=\"comment\"># # Source: hello-world/templates/deployment.yaml</span></span><br><span class=\"line\">  <span class=\"comment\"># apiVersion: apps/v1</span></span><br><span class=\"line\">  <span class=\"comment\"># kind: Deployment</span></span><br><span class=\"line\">  <span class=\"comment\"># metadata:</span></span><br><span class=\"line\">  <span class=\"comment\">#   name: hello-world-deployment</span></span><br><span class=\"line\">  <span class=\"comment\">#   labels:</span></span><br><span class=\"line\">  <span class=\"comment\">#     app: hello-world</span></span><br><span class=\"line\">  <span class=\"comment\"># spec:</span></span><br><span class=\"line\">  <span class=\"comment\">#   replicas: 1</span></span><br><span class=\"line\">  <span class=\"comment\">#   selector:</span></span><br><span class=\"line\">  <span class=\"comment\">#     matchLabels:</span></span><br><span class=\"line\">  <span class=\"comment\">#       app: hello-world       # 匹配的Pod标签非常重要</span></span><br><span class=\"line\">  <span class=\"comment\">#   template:</span></span><br><span class=\"line\">  <span class=\"comment\">#     metadata:</span></span><br><span class=\"line\">  <span class=\"comment\">#       labels:</span></span><br><span class=\"line\">  <span class=\"comment\">#         app: hello-world</span></span><br><span class=\"line\">  <span class=\"comment\">#     spec:</span></span><br><span class=\"line\">  <span class=\"comment\">#       containers:</span></span><br><span class=\"line\">  <span class=\"comment\">#         - name: nginx-hello</span></span><br><span class=\"line\">  <span class=\"comment\">#           image: harbor.weiyigeek.top/test/nginx:v1.0</span></span><br><span class=\"line\">  <span class=\"comment\">#           imagePullPolicy: IfNotPresent</span></span><br><span class=\"line\">  <span class=\"comment\">#           ports:</span></span><br><span class=\"line\">  <span class=\"comment\">#             - containerPort: 80</span></span><br><span class=\"line\">  <span class=\"comment\">#               protocol: TCP</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 5.使用命令<code>helm install RELATIVE_PATH_TO_CHART</code> 创建一次Release然后查看相关信息</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># . 表示从当前目录安装 </span></span><br><span class=\"line\"><span class=\"comment\"># -g, --generate-name : 生成名称（并省略NAME参数）</span></span><br><span class=\"line\">helm install . -g</span><br><span class=\"line\">  <span class=\"comment\"># NAME: chart-1606295498</span></span><br><span class=\"line\">  <span class=\"comment\"># LAST DEPLOYED: Wed Nov 25 17:11:38 2020</span></span><br><span class=\"line\">  <span class=\"comment\"># NAMESPACE: default</span></span><br><span class=\"line\">  <span class=\"comment\"># STATUS: deployed</span></span><br><span class=\"line\">  <span class=\"comment\"># REVISION: 1</span></span><br><span class=\"line\">  <span class=\"comment\"># TEST SUITE: None</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 查询一个特定的Release的状态 </span></span><br><span class=\"line\">~/K8s/Day10/demo1$ helm status chart-1606295498</span><br><span class=\"line\">  <span class=\"comment\"># NAME: chart-1606295498</span></span><br><span class=\"line\">  <span class=\"comment\"># ...</span></span><br><span class=\"line\">  <span class=\"comment\"># 输出结果同上</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (3) 列出已经部署的 Release </span></span><br><span class=\"line\">~/K8s/Day10/demo1$ helm ls</span><br><span class=\"line\"><span class=\"comment\"># NAME                    NAMESPACE       REVISION        UPDATED                                 STATUS          CHART                   APP VERSION</span></span><br><span class=\"line\"><span class=\"comment\"># chart-1606295498        default         1               2020-11-25 17:11:38.35894709 +0800 CST  deployed        hello-world-1.0.0       1.0</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 6.验证与查看部署的Release效果</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># SVC</span></span><br><span class=\"line\">~/K8s/Day10/demo1$ kubectl get svc</span><br><span class=\"line\">  <span class=\"comment\"># NAME              TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)        AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># hello-world-svc   NodePort    10.103.145.171   &lt;none&gt;        80:30080/TCP   3m37s</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\">~/K8s/Day10/demo1$ kubectl get deploy -o wide --show-labels</span><br><span class=\"line\">  <span class=\"comment\"># NAME                     READY   UP-TO-DATE   AVAILABLE   AGE    CONTAINERS    IMAGES                                 SELECTOR          LABELS</span></span><br><span class=\"line\">  <span class=\"comment\"># hello-world-deployment   1/1     1            1           5m3s   nginx-hello   harbor.weiyigeek.top/test/nginx:v1.0   app=hello-world   app.kubernetes.io/managed-by=Helm,app=hello-world</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Pod</span></span><br><span class=\"line\">~/K8s/Day10/demo1$ kubectl get pod -o wide --show-labels</span><br><span class=\"line\">  <span class=\"comment\"># NAME                                      READY   STATUS      RESTARTS   AGE     IP            NODE          LABELS</span></span><br><span class=\"line\">  <span class=\"comment\"># hello-world-deployment-588f974b64-d8456   1/1     Running     0          3m55s   10.244.2.34   k8s-node-5    app=hello-world,pod-template-hash=588f974b64</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 访问效果:</span></span><br><span class=\"line\">~/K8s/Day10/demo1$ curl http://10.10.107.202:30080/host.html</span><br><span class=\"line\">  <span class=\"comment\"># Hostname: hello-world-deployment-588f974b64-d8456  &lt;br&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># Image Version: &lt;u&gt; 1.0 &lt;/u&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># Nginx Version: 1.19.4</span></span><br><span class=\"line\">~/K8s/Day10/demo1$ curl http://10.244.2.34/host.html</span><br><span class=\"line\">  <span class=\"comment\"># Hostname: hello-world-deployment-588f974b64-d8456  &lt;br&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># Image Version: &lt;u&gt; 1.0 &lt;/u&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># Nginx Version: 1.19.4</span></span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20201125172155.png\" alt=\"WeiyiGeek.NodePort访问\" title=\"\" class=\"\">\n                <p>WeiyiGeek.NodePort访问</p>\n            </figure>\n</li>\n</ul>\n<ul>\n<li>Step 7.版本迭代与收缩<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 在 values.yaml 中的值可以被部署 release 时用到</span></span><br><span class=\"line\"><span class=\"comment\"># 可采用指定参数 --values YAML_FILE_PATH 或 --set key1=value1, key2=value2 覆盖掉 </span></span><br><span class=\"line\">helm upgrade chart-1606308995 . --<span class=\"built_in\">set</span> image.tag=<span class=\"string\">\"v2.0\"</span>,version=<span class=\"string\">\"1.0.1\"</span> --dry-run <span class=\"comment\"># 尝试执行</span></span><br><span class=\"line\">  <span class=\"comment\"># NAME: chart-1606308995</span></span><br><span class=\"line\">  <span class=\"comment\"># LAST DEPLOYED: Wed Nov 25 20:39:54 2020</span></span><br><span class=\"line\">  <span class=\"comment\"># NAMESPACE: default</span></span><br><span class=\"line\">  <span class=\"comment\"># STATUS: pending-upgrade</span></span><br><span class=\"line\">  <span class=\"comment\"># REVISION: 2</span></span><br><span class=\"line\">  <span class=\"comment\"># TEST SUITE: None</span></span><br><span class=\"line\">  <span class=\"comment\"># HOOKS:</span></span><br><span class=\"line\">  <span class=\"comment\"># MANIFEST:</span></span><br><span class=\"line\">  <span class=\"comment\"># ---</span></span><br><span class=\"line\">  <span class=\"comment\"># ...</span></span><br><span class=\"line\">  <span class=\"comment\">#   containers:</span></span><br><span class=\"line\">  <span class=\"comment\">#         - name: nginx-hello</span></span><br><span class=\"line\">  <span class=\"comment\">#           image: harbor.weiyigeek.top/test/nginx:v2.0  # 此时你会发现tags版本有所改变</span></span><br><span class=\"line\">  <span class=\"comment\">#           imagePullPolicy: IfNotPresent</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 执行后程序release将会更新</span></span><br><span class=\"line\">~/K8s/Day10/demo1$ helm upgrade chart-1606308995 . --<span class=\"built_in\">set</span> image.tag=<span class=\"string\">\"v2.0\"</span>,version=<span class=\"string\">\"1.0.1\"</span></span><br><span class=\"line\">  <span class=\"comment\"># Release \"chart-1606308995\" has been upgraded. Happy Helming!</span></span><br><span class=\"line\">  <span class=\"comment\"># NAME: chart-1606308995</span></span><br><span class=\"line\">  <span class=\"comment\"># LAST DEPLOYED: Wed Nov 25 20:42:14 2020</span></span><br><span class=\"line\">  <span class=\"comment\"># NAMESPACE: default</span></span><br><span class=\"line\">  <span class=\"comment\"># STATUS: deployed</span></span><br><span class=\"line\">  <span class=\"comment\"># REVISION: 2</span></span><br><span class=\"line\">  <span class=\"comment\"># TEST SUITE: None</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (3) 查看效果</span></span><br><span class=\"line\">$ kubectl get pod -o wide</span><br><span class=\"line\">  <span class=\"comment\"># hello-world-deployment-cb494b88f-7dxk8   1/1     Running     0    35s   10.244.2.38   k8s-node-5 </span></span><br><span class=\"line\">~/K8s/Day10/demo1$ curl http://10.244.2.38/host.html</span><br><span class=\"line\">~/K8s/Day10/demo1$ curl http://10.10.107.202:30080/host.html  <span class=\"comment\"># NodePort</span></span><br><span class=\"line\"><span class=\"comment\"># Hostname: hello-world-deployment-cb494b88f-7dxk8  &lt;br&gt;</span></span><br><span class=\"line\"><span class=\"comment\"># Image Version: &lt;u&gt; 2.0 &lt;/u&gt;</span></span><br><span class=\"line\"><span class=\"comment\"># Nginx Version: 1.19.4</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (4) 利用Helm进行扩容与收缩(由于我们将replicas写入到values.yaml并且在deployment.yaml文件中进行了引用)</span></span><br><span class=\"line\">$ helm upgrade chart-1606308995 . --<span class=\"built_in\">set</span> replicas=<span class=\"string\">\"3\"</span>,image.tag=<span class=\"string\">\"v3.0\"</span>,version=<span class=\"string\">\"1.0.1\"</span> --dry-run </span><br><span class=\"line\">$ helm upgrade chart-1606308995 . --<span class=\"built_in\">set</span> replicas=<span class=\"string\">\"3\"</span>,image.tag=<span class=\"string\">\"v3.0\"</span>,version=<span class=\"string\">\"1.0.1\"</span></span><br><span class=\"line\">  <span class=\"comment\"># Release \"chart-1606308995\" has been upgraded. Happy Helming!</span></span><br><span class=\"line\">  <span class=\"comment\"># NAME: chart-1606308995</span></span><br><span class=\"line\">  <span class=\"comment\"># LAST DEPLOYED: Wed Nov 25 21:01:02 2020</span></span><br><span class=\"line\">  <span class=\"comment\"># NAMESPACE: default</span></span><br><span class=\"line\">  <span class=\"comment\"># STATUS: deployed</span></span><br><span class=\"line\">  <span class=\"comment\"># REVISION: 3</span></span><br><span class=\"line\">  <span class=\"comment\"># TEST SUITE: None</span></span><br><span class=\"line\"></span><br><span class=\"line\">~/K8s/Day10/demo1$ kubectl get pod -o wide  <span class=\"comment\"># 可以看到已经扩容成功</span></span><br><span class=\"line\">  <span class=\"comment\"># NAME                                      READY   STATUS      RESTARTS   AGE     IP            NODE      </span></span><br><span class=\"line\">  <span class=\"comment\"># hello-world-deployment-648bb6c9f8-595sr   1/1     Running     0          3m7s    10.244.2.45   k8s-node-5 </span></span><br><span class=\"line\">  <span class=\"comment\"># hello-world-deployment-648bb6c9f8-8xrm2   1/1     Running     0          3m9s    10.244.2.44   k8s-node-5  </span></span><br><span class=\"line\">  <span class=\"comment\"># hello-world-deployment-648bb6c9f8-rjsr8   1/1     Running     0          3m11s   10.244.2.43   k8s-node-5</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 访问验证</span></span><br><span class=\"line\">~/K8s/Day10/demo1$ curl http://10.10.107.202:30080/host.html  </span><br><span class=\"line\">  <span class=\"comment\"># Hostname: hello-world-deployment-648bb6c9f8-595sr ,Image Version: 3.0, Nginx Version: 1.19.4</span></span><br><span class=\"line\">~/K8s/Day10/demo1$ curl http://10.10.107.202:30080/host.html</span><br><span class=\"line\">  <span class=\"comment\"># Hostname: hello-world-deployment-648bb6c9f8-8xrm2 ,Image Version: 3.0, Nginx Version: 1.19.4</span></span><br><span class=\"line\">~/K8s/Day10/demo1$ curl http://10.10.107.202:30080/host.html</span><br><span class=\"line\">  <span class=\"comment\"># Hostname: hello-world-deployment-648bb6c9f8-rjsr8 ,Image Version: 3.0, Nginx Version: 1.19.4</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (5) 查看Chart相关信息以及历史</span></span><br><span class=\"line\">~/K8s/Day10/demo1$ helm get values chart-1606308995</span><br><span class=\"line\"><span class=\"comment\"># USER-SUPPLIED VALUES:    </span></span><br><span class=\"line\">  <span class=\"comment\"># image:</span></span><br><span class=\"line\">  <span class=\"comment\">#   tag: v3.0</span></span><br><span class=\"line\">  <span class=\"comment\"># replicas: 3  # 用户提供的变量，为例便于利用values进行扩容需要使用到values.yaml中定义的变量与值;</span></span><br><span class=\"line\">  <span class=\"comment\"># version: 1.0.1</span></span><br><span class=\"line\"></span><br><span class=\"line\">~/K8s/Day10/demo1$ helm <span class=\"built_in\">history</span> chart-1606308995</span><br><span class=\"line\">  <span class=\"comment\"># REVISION(修正版本) UPDATED                         STATUS          CHART                   DESCRIPTION</span></span><br><span class=\"line\">  <span class=\"comment\"># 1               Wed Nov 25 20:56:35 2020        superseded      hello-world-1.0.0       Install complete</span></span><br><span class=\"line\">  <span class=\"comment\"># 2               Wed Nov 25 20:58:00 2020        superseded      hello-world-1.0.0       Upgrade complete</span></span><br><span class=\"line\">  <span class=\"comment\"># 3               Wed Nov 25 21:01:02 2020        deployed        hello-world-1.0.0       Upgrade complete</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>Step 7.Pod回滚操作</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 例如我们回滚到 REVISION = 1 的时候</span></span><br><span class=\"line\"><span class=\"comment\"># 语法：helm rollback RELEASE_NAME REVISION NUMBER </span></span><br><span class=\"line\">~/K8s/Day10/demo1$ helm rollback chart-1606308995 1</span><br><span class=\"line\">  <span class=\"comment\"># Rollback was a success! Happy Helming!</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 验证回滚</span></span><br><span class=\"line\">~/K8s/Day10/demo1$ curl http://10.10.107.202:30080/host.html <span class=\"comment\"># 可以看见已经回滚到初始版本</span></span><br><span class=\"line\">  <span class=\"comment\"># Hostname: hello-world-deployment-588f974b64-zrkgf  &lt;br&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># Image Version: &lt;u&gt; 1.0 &lt;/u&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># Nginx Version: 1.19.4</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 8.RELEASES删除操作</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 删除指定的Release即移除所有与这个 Release 相关的 Kubernetes 资源 </span></span><br><span class=\"line\">~/K8s/Day10/demo1$ helm uninstall chart-1606295498</span><br><span class=\"line\">  <span class=\"comment\"># release \"chart-1606295498\" uninstalled</span></span><br><span class=\"line\">~/K8s/Day10/demo1$ helm ls</span><br><span class=\"line\">  <span class=\"comment\"># NAME    NAMESPACE       REVISION        UPDATED STATUS  CHART   APP VERSION</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 使用移除所有与指定 Release 相关的Kubernetes 资源但是包所有这个 Release 的记录 </span></span><br><span class=\"line\">$  helm uninstall chart-1606308995 --keep-history</span><br><span class=\"line\">  <span class=\"comment\"># release \"chart-1606308995\" uninstalled</span></span><br><span class=\"line\">~/K8s/Day10/demo1$ helm ls  <span class=\"comment\"># 输出为空</span></span><br><span class=\"line\">~/K8s/Day10/demo1$ helm ls --uninstalled   <span class=\"comment\"># 删除的相关记录</span></span><br><span class=\"line\">  <span class=\"comment\"># NAME                    NAMESPACE       REVISION        UPDATED                                 STATUS          CHART                   APP VERSION</span></span><br><span class=\"line\">  <span class=\"comment\"># chart-1606308995        default         4               2020-11-25 21:10:24.483012734 +0800 CST uninstalled     hello-world-1.0.0</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (3) 再次执行将彻底删除图表chart-1606308995相关的容器</span></span><br><span class=\"line\">~/K8s/Day10/demo1$ helm uninstall chart-1606308995</span><br><span class=\"line\">  <span class=\"comment\"># release \"chart-1606308995\" uninstalled</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 9.当测试无误时候我们可以将其打包上传到本地或者远程的应用仓库中(<code>如何搭建本地Chart仓库在后面进行讲解</code>)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/K8s/Day10/demo1$ helm package .</span><br><span class=\"line\">  <span class=\"comment\"># Successfully packaged chart and saved it to: /home/weiyigeek/K8s/Day10/demo1/hello-world-1.0.0.tgz</span></span><br><span class=\"line\">~/K8s/Day10/demo1$ ls -alh /home/weiyigeek/K8s/Day10/demo1/hello-world-1.0.0.tgz</span><br><span class=\"line\">  <span class=\"comment\"># -rw-r--r-- 1 weiyigeek weiyigeek 726 Nov 26 11:13 /home/weiyigeek/K8s/Day10/demo1/hello-world-1.0.0.tgz</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"2-Redis-Chart-模板\"><a href=\"#2-Redis-Chart-模板\" class=\"headerlink\" title=\"2.Redis - Chart 模板\"></a>2.Redis - Chart 模板</h3><p>描述: 下面我们尝试使用Helm来从第三方Chart仓库拉取Redis的图表进行部署，可以让读者了解到使用Helm奥秘;</p>\n<p><strong>操作流程与步骤</strong></p>\n<ul>\n<li><p>Step 1.在第三方Chart仓库中搜索Redis相关应用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/K8s/Day10/demo1$ helm search repo redis</span><br><span class=\"line\">  <span class=\"comment\"># NAME                                    CHART VERSION   APP VERSION     DESCRIPTION</span></span><br><span class=\"line\">  <span class=\"comment\"># aliyun/redis                            1.1.15          4.0.8           Open source, advanced key-value store. It is of...</span></span><br><span class=\"line\">  <span class=\"comment\"># aliyun/redis-ha                         2.0.1                           Highly available Redis cluster with multiple se...</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 2.拉取应用修改和安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.拉取应用</span></span><br><span class=\"line\">~/K8s/Day10/demo2$ helm pull aliyun/redis</span><br><span class=\"line\">~/K8s/Day10/demo2$ ls</span><br><span class=\"line\"><span class=\"comment\"># redis-1.1.15.tgz</span></span><br><span class=\"line\">~/K8s/Day10/demo2$ tar -zxvf redis-1.1.15.tgz  <span class=\"comment\"># 解压可查看</span></span><br><span class=\"line\">  <span class=\"comment\"># redis/Chart.yaml</span></span><br><span class=\"line\">  <span class=\"comment\"># redis/values.yaml</span></span><br><span class=\"line\">  <span class=\"comment\"># redis/templates/NOTES.txt</span></span><br><span class=\"line\">  <span class=\"comment\"># redis/templates/_helpers.tpl</span></span><br><span class=\"line\">  <span class=\"comment\"># redis/templates/deployment.yaml</span></span><br><span class=\"line\">  <span class=\"comment\"># redis/templates/networkpolicy.yaml</span></span><br><span class=\"line\">  <span class=\"comment\"># redis/templates/pvc.yaml</span></span><br><span class=\"line\">  <span class=\"comment\"># redis/templates/secrets.yaml</span></span><br><span class=\"line\">  <span class=\"comment\"># redis/templates/svc.yaml</span></span><br><span class=\"line\">  <span class=\"comment\"># redis/.helmignore</span></span><br><span class=\"line\">  <span class=\"comment\"># redis/README.md</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.修改redis/values.yaml变量 (我主要列举出修改的对象)</span></span><br><span class=\"line\">serviceType: NodePort</span><br><span class=\"line\">redisPassword: weiyigeek</span><br><span class=\"line\">  path: /bitnami <span class=\"comment\"># Pod 中的挂载目录 坑</span></span><br><span class=\"line\">  storageClass: <span class=\"string\">\"nfs\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.修改deployment的api-versions</span></span><br><span class=\"line\">apiVersion: apps/v1  <span class=\"comment\"># 注意点</span></span><br><span class=\"line\">kind: Deployment</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  selector:</span><br><span class=\"line\">    matchLabels:</span><br><span class=\"line\">      app: &#123;&#123; template <span class=\"string\">\"redis.fullname\"</span> . &#125;&#125; <span class=\"comment\"># 注意点必须有匹配的Pod标签</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4.支持多种安装方式：(helm默认读取~/.kube/config信息连接k8s集群)</span></span><br><span class=\"line\"><span class=\"comment\"># $ helm install redis stable/redis\t</span></span><br><span class=\"line\"><span class=\"comment\"># $ helm install redis redis-4.4.0.tgz</span></span><br><span class=\"line\"><span class=\"comment\"># $ helm install redis redis/</span></span><br><span class=\"line\"><span class=\"comment\"># $ helm install redis https://example.com/charts/redis-4.4.0.tgz</span></span><br><span class=\"line\">~/K8s/Day10/demo2$ helm install redis redis/</span><br><span class=\"line\">  <span class=\"comment\"># NAME: redis</span></span><br><span class=\"line\">  <span class=\"comment\"># LAST DEPLOYED: Wed Nov 25 21:55:53 2020</span></span><br><span class=\"line\">  <span class=\"comment\"># NAMESPACE: default</span></span><br><span class=\"line\">  <span class=\"comment\"># STATUS: deployed</span></span><br><span class=\"line\">  <span class=\"comment\"># REVISION: 1</span></span><br><span class=\"line\">  <span class=\"comment\"># TEST SUITE: None</span></span><br><span class=\"line\">  <span class=\"comment\"># NOTES:</span></span><br><span class=\"line\">  <span class=\"comment\"># Redis can be accessed via port 6379 on the following DNS name from within your cluster:</span></span><br><span class=\"line\">  <span class=\"comment\"># redis-redis.default.svc.cluster.local</span></span><br><span class=\"line\">  <span class=\"comment\"># To get your password run:</span></span><br><span class=\"line\">  <span class=\"comment\">#     REDIS_PASSWORD=$(kubectl get secret --namespace default redis-redis -o jsonpath=\"&#123;.data.redis-password&#125;\" | base64 --decode) # 实际就是上面设置redis密码weiyigeek将它存入了secret中</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># To connect to your Redis server:</span></span><br><span class=\"line\">  <span class=\"comment\"># 1. Run a Redis pod that you can use as a client:</span></span><br><span class=\"line\">  <span class=\"comment\">#    kubectl run --namespace default redis-redis-client --rm --tty -i \\</span></span><br><span class=\"line\">  <span class=\"comment\">#     --env REDIS_PASSWORD=$REDIS_PASSWORD \\</span></span><br><span class=\"line\">  <span class=\"comment\">#    --image bitnami/redis:4.0.8-r2 -- bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># 2. Connect using the Redis CLI:</span></span><br><span class=\"line\">  <span class=\"comment\">#   redis-cli -h redis-redis -a $REDIS_PASSWORD</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 3.查看创建PV卷利用nfs(如何使用看我前面所写的K8S存储文章以及参考K8S官网)<br>ref: <a href=\"http://kubernetes.io/docs/user-guide/persistent-volumes/\" target=\"_blank\" rel=\"noopener\">http://kubernetes.io/docs/user-guide/persistent-volumes/</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 创建 PV</span></span><br><span class=\"line\">cat &gt;  pv.yaml &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\"><span class=\"comment\"># 1.访问模式为 ReadWriteOnce - pv-test-2</span></span><br><span class=\"line\">apiVersion: v1 </span><br><span class=\"line\">kind: PersistentVolume </span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: pv-test-2</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  capacity:            <span class=\"comment\">#容量</span></span><br><span class=\"line\">    storage: 1Gi </span><br><span class=\"line\">  accessModes:</span><br><span class=\"line\">    - ReadWriteOnce </span><br><span class=\"line\">  persistentVolumeReclaimPolicy: Retain</span><br><span class=\"line\">  storageClassName: nfs  <span class=\"comment\"># 非常重要 (后面PVC将会根据访问模式以及存储类名称进行绑定PV)</span></span><br><span class=\"line\">  nfs:</span><br><span class=\"line\">   path: /nfs/data2</span><br><span class=\"line\">   server: 10.10.107.202</span><br><span class=\"line\">EOF</span><br><span class=\"line\">~/K8s/Day10/demo2$ kubectl create -f pv.yaml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 以下已经是Chart应用绑定PV后的结果</span></span><br><span class=\"line\">~/K8s/Day10/demo2/redis$ kubectl get pv -o wide</span><br><span class=\"line\">  <span class=\"comment\"># NAME        CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM                 STORAGECLASS   REASON   AGE     VOLUMEMODE</span></span><br><span class=\"line\">  <span class=\"comment\"># pv-test-1   1Gi        RWO            Retain           Available                         nfs                     6d20h   Filesystem</span></span><br><span class=\"line\">  <span class=\"comment\"># pv-test-2   1Gi        RWO            Retain           Bound       default/redis-redis   nfs                     6d20h   Filesystem</span></span><br><span class=\"line\"></span><br><span class=\"line\">~/K8s/Day10/demo2/redis$ kubectl describe pv pv-test-2</span><br><span class=\"line\">  <span class=\"comment\"># Name:            pv-test-2</span></span><br><span class=\"line\">  <span class=\"comment\"># Labels:          &lt;none&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># Annotations:     pv.kubernetes.io/bound-by-controller: yes</span></span><br><span class=\"line\">  <span class=\"comment\"># Finalizers:      [kubernetes.io/pv-protection]</span></span><br><span class=\"line\">  <span class=\"comment\"># StorageClass:    nfs</span></span><br><span class=\"line\">  <span class=\"comment\"># Status:          Bound</span></span><br><span class=\"line\">  <span class=\"comment\"># Claim:           default/redis-redis</span></span><br><span class=\"line\">  <span class=\"comment\"># Reclaim Policy:  Retain</span></span><br><span class=\"line\">  <span class=\"comment\"># Access Modes:    RWO</span></span><br><span class=\"line\">  <span class=\"comment\"># VolumeMode:      Filesystem</span></span><br><span class=\"line\">  <span class=\"comment\"># Capacity:        1Gi</span></span><br><span class=\"line\">  <span class=\"comment\"># Node Affinity:   &lt;none&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># Message:</span></span><br><span class=\"line\">  <span class=\"comment\"># Source:</span></span><br><span class=\"line\">  <span class=\"comment\">#     Type:      NFS (an NFS mount that lasts the lifetime of a pod)</span></span><br><span class=\"line\">  <span class=\"comment\">#     Server:    10.10.107.202</span></span><br><span class=\"line\">  <span class=\"comment\">#     Path:      /nfs/data2</span></span><br><span class=\"line\">  <span class=\"comment\">#     ReadOnly:  false</span></span><br><span class=\"line\">  <span class=\"comment\"># Events:        &lt;none&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (3) NFS目录中的持久化目录</span></span><br><span class=\"line\">~/K8s/Day10/demo2/redis$ tree /nfs/data2/redis/</span><br><span class=\"line\">  <span class=\"comment\"># /nfs/data2/redis/</span></span><br><span class=\"line\">  <span class=\"comment\"># ├── conf</span></span><br><span class=\"line\">  <span class=\"comment\"># │   └── redis.conf</span></span><br><span class=\"line\">  <span class=\"comment\"># └── data</span></span><br><span class=\"line\">  <span class=\"comment\">#     └── appendonly.aof</span></span><br><span class=\"line\">  <span class=\"comment\"># 2 directories, 2 files</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 4.连接并测试redis</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) Pod 查看</span></span><br><span class=\"line\">~/K8s/Day10/demo2/redis$ kubectl get pod -o wide</span><br><span class=\"line\">  <span class=\"comment\"># NAME                           READY   STATUS    RESTARTS   AGE   IP            NODE         NOMINATED NODE   READINESS GATES</span></span><br><span class=\"line\">  <span class=\"comment\"># redis-redis-84db677d99-mb2m4   1/1     Running   0          11m   10.244.2.49   k8s-node-5   &lt;none&gt;           &lt;none&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 进入Pod的Shell之中</span></span><br><span class=\"line\">$ kubectl <span class=\"built_in\">exec</span> -it redis-redis-84db677d99-mb2m4 -- bash</span><br><span class=\"line\">I have no name!@redis-redis-84db677d99-mb2m4:/$ cat /bitnami/redis/conf/redis.conf | grep <span class=\"string\">\"weiyi\"</span></span><br><span class=\"line\">  <span class=\"comment\"># requirepass weiyigeek</span></span><br><span class=\"line\">I have no name!@redis-redis-84db677d99-mb2m4:/$ ls</span><br><span class=\"line\">  <span class=\"comment\"># app-entrypoint.sh  bin  bitnami  boot  dev  entrypoint.sh  etc  home  init.sh  lib  lib64  media  mnt  opt  proc  redis-inputs.json  root  run  run.sh  sbin  srv  sys  tmp  usr  var</span></span><br><span class=\"line\">I have no name!@redis-redis-84db677d99-mb2m4:/$ ls /bitnami/</span><br><span class=\"line\">  <span class=\"comment\"># redis</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (3) 连接测试Redis</span></span><br><span class=\"line\">REDIS_PASSWORD=$(kubectl get secret --namespace default redis-redis -o jsonpath=<span class=\"string\">\"&#123;.data.redis-password&#125;\"</span> | base64 --decode)</span><br><span class=\"line\">~/K8s/Day10/demo2$ redis-cli -h 10.244.2.49  -a <span class=\"variable\">$REDIS_PASSWORD</span></span><br><span class=\"line\">10.244.2.47:6379&gt; ping</span><br><span class=\"line\">PONG</span><br><span class=\"line\">10.244.2.47:6379&gt; info</span><br><span class=\"line\"><span class=\"comment\"># Server</span></span><br><span class=\"line\">redis_version:4.0.8</span><br><span class=\"line\">......</span><br><span class=\"line\">10.244.2.47:6379&gt; <span class=\"built_in\">set</span> name weiyigeek</span><br><span class=\"line\">OK</span><br><span class=\"line\">10.244.2.47:6379&gt; KEYS *</span><br><span class=\"line\">1) <span class=\"string\">\"name\"</span></span><br><span class=\"line\">10.244.2.47:6379&gt; GET name</span><br><span class=\"line\"><span class=\"string\">\"weiyigeek\"</span></span><br><span class=\"line\">10.244.2.47:6379&gt; save   <span class=\"comment\"># 将 数据 存储进Redis 文件 dump.rdb 以便后续重启redis后数据依然存在;</span></span><br><span class=\"line\">OK</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (4) 查看存放的dump.rdb文件</span></span><br><span class=\"line\">~/K8s/Day10/demo2/redis$ ls /nfs/data2/redis/data/</span><br><span class=\"line\">  <span class=\"comment\"># appendonly.aof  dump.rdb</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 5.验证持久化操作设置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/K8s/Day10/demo2/redis/templates$ kubectl delete pod redis-redis-84db677d99-mb2m4</span><br><span class=\"line\">  <span class=\"comment\"># pod \"redis-redis-84db677d99-mb2m4\" deleted</span></span><br><span class=\"line\"></span><br><span class=\"line\">~/K8s/Day10/demo2/redis/templates$ kubectl get pod -o wide</span><br><span class=\"line\">  <span class=\"comment\"># redis-redis-84db677d99-5cjnk   1/1     Running   0          26s   10.244.2.50   k8s-node-5</span></span><br><span class=\"line\"></span><br><span class=\"line\">~/K8s/Day10/demo2/redis/templates$ redis-cli -h 10.244.2.50 -a <span class=\"variable\">$REDIS_PASSWORD</span></span><br><span class=\"line\">  <span class=\"comment\"># 10.244.2.50:6379&gt; get name</span></span><br><span class=\"line\">  <span class=\"comment\"># \"weiyigeek\"</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h3 id=\"3-Library-Chart-仓库-Local-amp-Remote\"><a href=\"#3-Library-Chart-仓库-Local-amp-Remote\" class=\"headerlink\" title=\"3.Library - Chart 仓库(Local&amp;Remote)\"></a>3.Library - Chart 仓库(Local&amp;Remote)</h3><p>描述: 我们在为自建的Chart图表打包分享时候除了可以直接pakeage打包分享外，更多的是采用私有的Harbor或者Helm公共的Chart应用中心进行分享和下载;</p>\n<p>Q: 什么是 Chart 仓库?</p>\n<blockquote>\n<p>答: Chart 仓库是一个可用来<code>存储 index.yml 与 打包的  chart tgz文件</code>的 HTTP Server, 当需要分享Chart时候需要上传Chart相关文件到仓库之中提供下载;</p>\n</blockquote>\n<ul>\n<li>PS : 其实任何一个能够提供YAML与tar文件的 HTTP Server 都可以当作Chat仓库;</li>\n<li>PS : 在 ~/.helm中的index.yaml记录了chart仓库中全部的chart的索引例如名称、URL、版本等一些元数据信息;</li>\n</ul>\n<p>下面我们讲解 Chart 仓库搭建的两种方式及其使用;</p>\n<ul>\n<li>1)Harbor (PS需要安装chartmuseum)</li>\n<li>2)Helm 官方: <a href=\"https://artifacthub.io/\" target=\"_blank\" rel=\"noopener\">https://artifacthub.io/</a> + <a href=\"https://github.com/artifacthub/\" target=\"_blank\" rel=\"noopener\">https://github.com/artifacthub/</a></li>\n<li>3)Helm 本地仓库</li>\n<li>4)Github Page</li>\n<li>5)Google Cloud Storafe(GCS) bucket</li>\n</ul>\n<p><br></p>\n<p><strong>(1) Harbor 搭建Chart 仓库</strong><br>操作流程:</p>\n<ul>\n<li><p>Step 1.在现有的Harbor服务器上进行安装chartmuseum支持，在启用后默认创建的项目就带有helm charts功能了。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/harbor$ ls</span><br><span class=\"line\">  <span class=\"comment\"># common     docker-compose.yml  harbor.v2.1.1.tar.gz  harbor.yml.tmpl  LICENSE  server.crt  server.key</span></span><br><span class=\"line\">  <span class=\"comment\"># common.sh  harbor_install.log  harbor.yml            install.sh       prepare  server.csr  server.key.org</span></span><br><span class=\"line\">~/harbor$ sudo docker-compose ps</span><br><span class=\"line\">~/harbor$ sudo ./install.sh --with-chartmuseum</span><br><span class=\"line\">  <span class=\"comment\"># ✔ ----Harbor has been installed and started successfully.----  # 表示安装成功</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 2.在Helm安装节点上安装push插件(如果安装时候已经带有push插件便可以不用安装了)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 在线安装</span></span><br><span class=\"line\">~$ helm plugin install https://github.com/chartmuseum/helm-push</span><br><span class=\"line\">Downloading and installing helm-push v0.9.0 ...</span><br><span class=\"line\">https://github.com/chartmuseum/helm-push/releases/download/v0.9.0/helm-push_0.9.0_linux_amd64.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 离线安装</span></span><br><span class=\"line\">~/software$ tar -zxvf helm-push_0.9.0_linux_amd64.tar.gz -C ./helm-push</span><br><span class=\"line\"><span class=\"comment\"># LICENSE</span></span><br><span class=\"line\"><span class=\"comment\"># plugin.yaml</span></span><br><span class=\"line\"><span class=\"comment\"># bin/helmpush</span></span><br><span class=\"line\">~/software$ ls ./helm-push</span><br><span class=\"line\"><span class=\"comment\"># bin  LICENSE  plugin.yaml</span></span><br><span class=\"line\">~/software/helm-push$ cp bin/helmpush /home/weiyigeek/.<span class=\"built_in\">local</span>/share/helm/plugins/helm-push/bin/helmpush</span><br><span class=\"line\"><span class=\"comment\"># ~/software$ helm plugin install ./helm-push</span></span><br><span class=\"line\"><span class=\"comment\"># Error: plugin already exists</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 3.私有的Harbor的Chart仓库添加及其上传Chart图表到库中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 添加harbor的chartrepo URL到Helm本地仓库中</span></span><br><span class=\"line\">~/K8s/Day10/demo1$ helm repo add <span class=\"built_in\">local</span> https://harbor.weiyigeek.top/chartrepo/<span class=\"built_in\">test</span>  --insecure-skip-tls-verify</span><br><span class=\"line\"><span class=\"string\">\"local\"</span> has been added to your repositories</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) index 生成以及将push 图表 到库中</span></span><br><span class=\"line\">~/K8s/Day10/demo1$ helm repo index . --url https://harbor.weiyigeek.top/chartrepo/<span class=\"built_in\">test</span></span><br><span class=\"line\">~/K8s/Day10/demo1$ helm push --insecure -u weiyigeek -p Harbor12345 hello-world-1.0.0.tgz <span class=\"built_in\">local</span></span><br><span class=\"line\"><span class=\"comment\"># Pushing hello-world-1.0.0.tgz to local...</span></span><br><span class=\"line\"><span class=\"comment\"># Done.</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20201126134008.png\" alt=\"WeiyiGeek.Chart上传Harbor\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Chart上传Harbor</p>\n            </figure>\n<p>温馨提示: 要想Harbor支持Chart仓库服务, 我们需要在安装时执行如下命令<code>./install.sh --with-chartmuseum</code>.<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># add 企业内部私有 harbor repo</span></span><br><span class=\"line\">helm repo add --username admin --password 123456 harbor https://harbor.weiyigeek.top/chartrepo/library</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装 helm-push 插件</span></span><br><span class=\"line\">helm plugin install https://github.com/chartmuseum/helm-push</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 推送 chart 到仓库</span></span><br><span class=\"line\">helm cm-push mysql harbor</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><p>Step 4.下载和搜索私有的Chart应用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 仓库更新</span></span><br><span class=\"line\">$ helm repo update</span><br><span class=\"line\">Hang tight <span class=\"keyword\">while</span> we grab the latest from your chart repositories...</span><br><span class=\"line\">...Successfully got an update from the <span class=\"string\">\"local\"</span> chart repository</span><br><span class=\"line\">...Successfully got an update from the <span class=\"string\">\"aliyun\"</span> chart repository</span><br><span class=\"line\">...Successfully got an update from the <span class=\"string\">\"stable\"</span> chart repository</span><br><span class=\"line\">Update Complete. ⎈Happy Helming!⎈</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 搜索我们上传的Chart应用</span></span><br><span class=\"line\">~/K8s/Day10$ helm search repo hello-world</span><br><span class=\"line\">NAME                    CHART VERSION   APP VERSION     DESCRIPTION</span><br><span class=\"line\"><span class=\"built_in\">local</span>/hello-world       1.0.0           latest          A Helm chart <span class=\"keyword\">for</span> Kubernetes Hello Wrold</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (3) 按照Chart应用 </span></span><br><span class=\"line\">~/K8s/Day10$ helm install hello-world <span class=\"built_in\">local</span>/hello-world --insecure-skip-tls-verify</span><br><span class=\"line\">  <span class=\"comment\"># NAME: hello-world</span></span><br><span class=\"line\">  <span class=\"comment\"># LAST DEPLOYED: Thu Nov 26 13:48:13 2020</span></span><br><span class=\"line\">  <span class=\"comment\"># NAMESPACE: default</span></span><br><span class=\"line\">  <span class=\"comment\"># STATUS: deployed</span></span><br><span class=\"line\">  <span class=\"comment\"># REVISION: 1</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 5.验证安装的Chart应用</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 查看release</span></span><br><span class=\"line\">~/K8s/Day10/demo3$ helm ls</span><br><span class=\"line\">NAME            NAMESPACE       REVISION        UPDATED                                 STATUS          CHART                   APP VERSION</span><br><span class=\"line\">hello-world     default         1               2020-11-26 13:48:13.358015764 +0800 CST deployed        hello-world-1.0.0       latest</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 查询 Pod </span></span><br><span class=\"line\">~/K8s/Day10/demo3$ kubectl get pod -o wide</span><br><span class=\"line\">hello-world-deployment-588f974b64-8wfdj   1/1     Running   0          87s     10.244.2.51   k8s-node-5</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (3) 访问Pod提供的服务页面 </span></span><br><span class=\"line\">~/K8s/Day10/demo3$ curl http://10.244.2.51/host.html</span><br><span class=\"line\">  <span class=\"comment\"># Hostname: hello-world-deployment-588f974b64-8wfdj  &lt;br&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># Image Version: &lt;u&gt; 1.0 &lt;/u&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># Nginx Version: 1.19.4</span></span><br><span class=\"line\">~/K8s/Day10/demo3$ curl http://10.10.107.202:30080/host.html</span><br><span class=\"line\">  <span class=\"comment\"># Hostname: hello-world-deployment-588f974b64-8wfdj  &lt;br&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># Image Version: &lt;u&gt; 1.0 &lt;/u&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># Nginx Version: 1.19.4</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br></p>\n<p><strong>(2) 本地Chart仓库</strong></p>\n<p>PS : 3.X的版本已不再支持<code>helm server -address 0.0.0.0:8879 -repo-path ./charts</code>建立本地Chart仓库;</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/.helm/</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># PS : 建议使用域名来绑定本地仓库所在的机器 IP 例如helm.weiyigeek.top</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将本地Chart仓库URL信息等Metadata信息 记录在index.yaml文件中</span></span><br><span class=\"line\">helm package mychart/</span><br><span class=\"line\"></span><br><span class=\"line\">mv mychart-1.0.tgz <span class=\"built_in\">test</span>-mychart/</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 通过helm repo add 添加仓库</span></span><br><span class=\"line\">helm repo add localcharts http://helm.weiyigeek.top:8879/charts</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查找上传的chart</span></span><br><span class=\"line\">helm search repo mychart</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"0x03-Helm-命令\"><a href=\"#0x03-Helm-命令\" class=\"headerlink\" title=\"0x03 Helm 命令\"></a>0x03 Helm 命令</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ helm --<span class=\"built_in\">help</span></span><br><span class=\"line\">The Kubernetes package manager</span><br><span class=\"line\"></span><br><span class=\"line\">Common actions <span class=\"keyword\">for</span> Helm:</span><br><span class=\"line\"></span><br><span class=\"line\">- helm search:    search <span class=\"keyword\">for</span> charts</span><br><span class=\"line\">- helm pull:      download a chart to your <span class=\"built_in\">local</span> directory to view</span><br><span class=\"line\">- helm install:   upload the chart to Kubernetes</span><br><span class=\"line\">- helm list:      list releases of charts</span><br><span class=\"line\"></span><br><span class=\"line\">Environment variables:</span><br><span class=\"line\"></span><br><span class=\"line\">| Name                               | Description                                                                       |</span><br><span class=\"line\">|------------------------------------|-----------------------------------------------------------------------------------|</span><br><span class=\"line\">| <span class=\"variable\">$HELM_CACHE_HOME</span>                   | <span class=\"built_in\">set</span> an alternative location <span class=\"keyword\">for</span> storing cached files.                             |</span><br><span class=\"line\">| <span class=\"variable\">$HELM_CONFIG_HOME</span>                  | <span class=\"built_in\">set</span> an alternative location <span class=\"keyword\">for</span> storing Helm configuration.                       |</span><br><span class=\"line\">| <span class=\"variable\">$HELM_DATA_HOME</span>                    | <span class=\"built_in\">set</span> an alternative location <span class=\"keyword\">for</span> storing Helm data.                                |</span><br><span class=\"line\">| <span class=\"variable\">$HELM_DEBUG</span>                        | indicate whether or not Helm is running <span class=\"keyword\">in</span> Debug mode                             |</span><br><span class=\"line\">| <span class=\"variable\">$HELM_DRIVER</span>                       | <span class=\"built_in\">set</span> the backend storage driver. Values are: configmap, secret, memory, postgres   |</span><br><span class=\"line\">| <span class=\"variable\">$HELM_DRIVER_SQL_CONNECTION_STRING</span> | <span class=\"built_in\">set</span> the connection string the SQL storage driver should use.                      |</span><br><span class=\"line\">| <span class=\"variable\">$HELM_MAX_HISTORY</span>                  | <span class=\"built_in\">set</span> the maximum number of helm release <span class=\"built_in\">history</span>.                                   |</span><br><span class=\"line\">| <span class=\"variable\">$HELM_NAMESPACE</span>                    | <span class=\"built_in\">set</span> the namespace used <span class=\"keyword\">for</span> the helm operations.                                   |</span><br><span class=\"line\">| <span class=\"variable\">$HELM_NO_PLUGINS</span>                   | <span class=\"built_in\">disable</span> plugins. Set HELM_NO_PLUGINS=1 to <span class=\"built_in\">disable</span> plugins.                        |</span><br><span class=\"line\">| <span class=\"variable\">$HELM_PLUGINS</span>                      | <span class=\"built_in\">set</span> the path to the plugins directory                                             |</span><br><span class=\"line\">| <span class=\"variable\">$HELM_REGISTRY_CONFIG</span>              | <span class=\"built_in\">set</span> the path to the registry config file.                                         |</span><br><span class=\"line\">| <span class=\"variable\">$HELM_REPOSITORY_CACHE</span>             | <span class=\"built_in\">set</span> the path to the repository cache directory                                    |</span><br><span class=\"line\">| <span class=\"variable\">$HELM_REPOSITORY_CONFIG</span>            | <span class=\"built_in\">set</span> the path to the repositories file.                                            |</span><br><span class=\"line\">| <span class=\"variable\">$KUBECONFIG</span>                        | <span class=\"built_in\">set</span> an alternative Kubernetes configuration file (default <span class=\"string\">\"~/.kube/config\"</span>)       |</span><br><span class=\"line\">| <span class=\"variable\">$HELM_KUBEAPISERVER</span>                | <span class=\"built_in\">set</span> the Kubernetes API Server Endpoint <span class=\"keyword\">for</span> authentication                         |</span><br><span class=\"line\">| <span class=\"variable\">$HELM_KUBEASGROUPS</span>                 | <span class=\"built_in\">set</span> the Groups to use <span class=\"keyword\">for</span> impersonation using a comma-separated list.             |</span><br><span class=\"line\">| <span class=\"variable\">$HELM_KUBEASUSER</span>                   | <span class=\"built_in\">set</span> the Username to impersonate <span class=\"keyword\">for</span> the operation.                                |</span><br><span class=\"line\">| <span class=\"variable\">$HELM_KUBECONTEXT</span>                  | <span class=\"built_in\">set</span> the name of the kubeconfig context.                                           |</span><br><span class=\"line\">| <span class=\"variable\">$HELM_KUBETOKEN</span>                    | <span class=\"built_in\">set</span> the Bearer KubeToken used <span class=\"keyword\">for</span> authentication.                                 |</span><br><span class=\"line\"></span><br><span class=\"line\">Helm stores cache, configuration, and data based on the following configuration order:</span><br><span class=\"line\"></span><br><span class=\"line\">- If a HELM_*_HOME environment variable is <span class=\"built_in\">set</span>, it will be used</span><br><span class=\"line\">- Otherwise, on systems supporting the XDG base directory specification, the XDG variables will be used</span><br><span class=\"line\">- When no other location is <span class=\"built_in\">set</span> a default location will be used based on the operating system</span><br><span class=\"line\"></span><br><span class=\"line\">By default, the default directories depend on the Operating System. The defaults are listed below:</span><br><span class=\"line\"></span><br><span class=\"line\">| Operating System | Cache Path                | Configuration Path             | Data Path               |</span><br><span class=\"line\">|------------------|---------------------------|--------------------------------|-------------------------|</span><br><span class=\"line\">| Linux            | <span class=\"variable\">$HOME</span>/.cache/helm         | <span class=\"variable\">$HOME</span>/.config/helm             | <span class=\"variable\">$HOME</span>/.<span class=\"built_in\">local</span>/share/helm |</span><br><span class=\"line\">| macOS            | <span class=\"variable\">$HOME</span>/Library/Caches/helm | <span class=\"variable\">$HOME</span>/Library/Preferences/helm | <span class=\"variable\">$HOME</span>/Library/helm      |</span><br><span class=\"line\">| Windows          | %TEMP%\\helm               | %APPDATA%\\helm                 | %APPDATA%\\helm          |</span><br><span class=\"line\"></span><br><span class=\"line\">Usage:</span><br><span class=\"line\">  helm [<span class=\"built_in\">command</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">Available Commands:</span><br><span class=\"line\">  completion  generate autocompletions script <span class=\"keyword\">for</span> the specified shell</span><br><span class=\"line\">  create      create a new chart with the given name</span><br><span class=\"line\">  dependency  manage a chart\\<span class=\"string\">'s dependencies</span></span><br><span class=\"line\"><span class=\"string\">  env         helm client environment information</span></span><br><span class=\"line\"><span class=\"string\">  get         download extended information of a named release</span></span><br><span class=\"line\"><span class=\"string\">  help        Help about any command</span></span><br><span class=\"line\"><span class=\"string\">  history     fetch release history</span></span><br><span class=\"line\"><span class=\"string\">  install     install a chart</span></span><br><span class=\"line\"><span class=\"string\">  lint        examine a chart for possible issues</span></span><br><span class=\"line\"><span class=\"string\">  list        list releases</span></span><br><span class=\"line\"><span class=\"string\">  package     package a chart directory into a chart archive</span></span><br><span class=\"line\"><span class=\"string\">  plugin      install, list, or uninstall Helm plugins</span></span><br><span class=\"line\"><span class=\"string\">  pull        download a chart from a repository and (optionally) unpack it in local directory</span></span><br><span class=\"line\"><span class=\"string\">  repo        add, list, remove, update, and index chart repositories</span></span><br><span class=\"line\"><span class=\"string\">  rollback    roll back a release to a previous revision</span></span><br><span class=\"line\"><span class=\"string\">  search      search for a keyword in charts</span></span><br><span class=\"line\"><span class=\"string\">  show        show information of a chart</span></span><br><span class=\"line\"><span class=\"string\">  status      display the status of the named release</span></span><br><span class=\"line\"><span class=\"string\">  template    locally render templates</span></span><br><span class=\"line\"><span class=\"string\">  test        run tests for a release</span></span><br><span class=\"line\"><span class=\"string\">  uninstall   uninstall a release</span></span><br><span class=\"line\"><span class=\"string\">  upgrade     upgrade a release</span></span><br><span class=\"line\"><span class=\"string\">  verify      verify that a chart at the given path has been signed and is valid</span></span><br><span class=\"line\"><span class=\"string\">  version     print the client version information</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Flags:</span></span><br><span class=\"line\"><span class=\"string\">      --debug                       enable verbose output</span></span><br><span class=\"line\"><span class=\"string\">  -h, --help                        help for helm</span></span><br><span class=\"line\"><span class=\"string\">      --kube-apiserver string       the address and the port for the Kubernetes API server</span></span><br><span class=\"line\"><span class=\"string\">      --kube-as-group stringArray   Group to impersonate for the operation, this flag can be repeated to specify multiple groups.</span></span><br><span class=\"line\"><span class=\"string\">      --kube-as-user string         Username to impersonate for the operation</span></span><br><span class=\"line\"><span class=\"string\">      --kube-context string         name of the kubeconfig context to use</span></span><br><span class=\"line\"><span class=\"string\">      --kube-token string           bearer token used for authentication</span></span><br><span class=\"line\"><span class=\"string\">      --kubeconfig string           path to the kubeconfig file</span></span><br><span class=\"line\"><span class=\"string\">  -n, --namespace string            namespace scope for this request</span></span><br><span class=\"line\"><span class=\"string\">      --registry-config string      path to the registry config file (default \"/home/weiyigeek/.config/helm/registry.json\")</span></span><br><span class=\"line\"><span class=\"string\">      --repository-cache string     path to the file containing cached repository indexes (default \"/home/weiyigeek/.cache/helm/repository\")</span></span><br><span class=\"line\"><span class=\"string\">      --repository-config string    path to the file containing repository names and URLs (default \"/home/weiyigeek/.config/helm/repositories.yaml\")</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">Use \"helm [command] --help\" for more information about a command.</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"0x04-模板编写\"><a href=\"#0x04-模板编写\" class=\"headerlink\" title=\"0x04 模板编写\"></a>0x04 模板编写</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/K8s/Day10/demo2$ cat redis/Chart.yaml</span><br><span class=\"line\">appVersion: 4.0.8</span><br><span class=\"line\">description: Open <span class=\"built_in\">source</span>, advanced key-value store. It is often referred to as a data</span><br><span class=\"line\">  structure server since keys can contain strings, hashes, lists, sets and sorted</span><br><span class=\"line\">  sets.</span><br><span class=\"line\">engine: gotpl</span><br><span class=\"line\">home: http://redis.io/</span><br><span class=\"line\">icon: https://bitnami.com/assets/stacks/redis/img/redis-stack-220x234.png</span><br><span class=\"line\">keywords:</span><br><span class=\"line\">- redis</span><br><span class=\"line\">- keyvalue</span><br><span class=\"line\">- database</span><br><span class=\"line\">maintainers:</span><br><span class=\"line\">- email: containers@bitnami.com</span><br><span class=\"line\">  name: bitnami-bot</span><br><span class=\"line\">name: redis</span><br><span class=\"line\">sources:</span><br><span class=\"line\">- https://github.com/bitnami/bitnami-docker-redis</span><br><span class=\"line\">version: 1.1.15</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://www.coderdocument.com/docs/helm/v2/charts/chart_lifecycle_hooks.html\" target=\"_blank\" rel=\"noopener\">http://www.coderdocument.com/docs/helm/v2/charts/chart_lifecycle_hooks.html</a></p>\n<p>Helm 使用流程简述:</p>\n<p>对历史版本进行DIFF对比的三种方式:</p>\n<ul>\n<li><p>1.使用 sdiff </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.全量使用 -s and -w flags 仅显示变化的部分</span></span><br><span class=\"line\">sdiff &lt;(helm get <span class=\"variable\">$release</span> --revision <span class=\"variable\">$revision_1</span>) &lt;(helm get <span class=\"variable\">$release</span> --revision <span class=\"variable\">$revision_1</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>2.使用 vimdiff</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vimdiff &lt;(helm get <span class=\"variable\">$release</span> --revision <span class=\"variable\">$revision_1</span>) &lt;(helm get <span class=\"variable\">$release</span> --revision <span class=\"variable\">$revision_1</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>3.使用 helm diff </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">helm diff revision [flags] [release] REVISION1 REVISION2</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p> helm search hub distributed-jmeter -o yaml</p>\n<ul>\n<li>app_version: “3.3”<br>description: A Distributed JMeter Helm chart<br>repository:<br>  name: cloudnativeapp<br>  url: <a href=\"https://cloudnativeapp.github.io/charts/curated/\" target=\"_blank\" rel=\"noopener\">https://cloudnativeapp.github.io/charts/curated/</a><br>url: <a href=\"https://artifacthub.io/packages/helm/cloudnativeapp/distributed-jmeter\" target=\"_blank\" rel=\"noopener\">https://artifacthub.io/packages/helm/cloudnativeapp/distributed-jmeter</a><br>version: 1.0.1</li>\n</ul>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"kubernetes","path":"api/categories/kubernetes.json"}],"tags":[{"name":"Helm","path":"api/tags/Helm.json"}]}