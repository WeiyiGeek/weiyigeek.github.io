{"title":"Ansible自动化运维学习笔记4","slug":"系统运维/自动化运维/Ansible/Ansible自动化运维学习笔记4","date":"2019-08-05T06:34:30.000Z","updated":"2020-10-10T02:37:47.275Z","url":"2019/8-5-269.html","path":"api/articles/2019/8-5-269.html.json","covers":null,"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h4 id=\"条件判断\"><a href=\"#条件判断\" class=\"headerlink\" title=\"条件判断\"></a>条件判断</h4><p>描述：在高级语言中条件判断是不可或缺的,同样我们也可以在ansible中条件判断的用户;<br>注意：绝大多数语言中都使用”if”作为条件判断的关键字，而在ansible中<code>条件判断的关键字是&quot;when&quot;</code></p>\n<h5 id=\"then-关键字\"><a href=\"#then-关键字\" class=\"headerlink\" title=\"then 关键字\"></a>then 关键字</h5><p>描述：在ansible中采用使用when关键字指明条件;我们可以使用如下运算符。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#比较运算符</span></span><br><span class=\"line\">==  :比较两个对象是否相等，相等为真</span><br><span class=\"line\">!=  :比较两个对象是否不等，不等为真</span><br><span class=\"line\">&gt;   :比较两个值的大小，如果左边的值大于右边的值，则为真</span><br><span class=\"line\">&lt;   :比较两个值的大小，如果左边的值小于右边的值，则为真</span><br><span class=\"line\">&gt;=  :比较两个值的大小，如果左边的值大于右边的值或左右相等，则为真</span><br><span class=\"line\">&lt;=  :比较两个值的大小，如果左边的值小于右边的值或左右相等，则为真</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#比较运算符</span></span><br><span class=\"line\">and  :逻辑与，当左边与右边同时为真，则返回真</span><br><span class=\"line\">or  :逻辑或，当左边与右边有任意一个为真，则返回真</span><br><span class=\"line\">not  :取反，对一个操作体取反</span><br><span class=\"line\">( )  :组合，将一组操作体包装在一起，形成一个较大的操作体</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 判断路径和文件</span></span><br><span class=\"line\"><span class=\"comment\"># 注：如下tests的判断均针对于ansible主机中的路径，与目标主机无关</span></span><br><span class=\"line\">file : 判断路径是否是一个文件，如果路径是一个文件则返回真</span><br><span class=\"line\">directory ：判断路径是否是一个目录，如果路径是一个目录则返回真</span><br><span class=\"line\">link ：判断路径是否是一个软链接，如果路径是一个软链接则返回真</span><br><span class=\"line\">mount：判断路径是否是一个挂载点，如果路径是一个挂载点则返回真</span><br><span class=\"line\">exists：判断路径是否存在，如果路径存在则返回真</span><br><span class=\"line\"><span class=\"string\">\"is exists\"</span> 可以在路径存在时返回真</span><br><span class=\"line\"><span class=\"string\">\"is not exists\"</span> 表示对应路径不存在时返回真</span><br><span class=\"line\"><span class=\"string\">\"not 变量 is exists\"</span> 表示对应路径不存在时返回真</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#判断变量关键字</span></span><br><span class=\"line\">defined ：判断变量是否已经定义，已经定义则返回真</span><br><span class=\"line\">undefind ：判断变量是否已经定义，未定义则返回真</span><br><span class=\"line\">none ：判断变量值是否为空，如果变量已经定义但是变量值为空则返回真</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#判断执行结果关键字</span></span><br><span class=\"line\">success 或 succeeded：通过任务的返回信息判断任务的执行状态，任务执行成功则返回真</span><br><span class=\"line\">failure 或 failed：通过任务的返回信息判断任务的执行状态，任务执行失败则返回真</span><br><span class=\"line\">change 或 changed：通过任务的返回信息判断任务的执行状态，任务执行状态为changed则返回真</span><br><span class=\"line\">skip 或 skipped：通过任务的返回信息判断任务的执行状态，当任务没有满足条件而被跳过执行时则返回真</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#判断字符串关键字</span></span><br><span class=\"line\">string：判断对象是否是一个字符串，是字符串则返回真</span><br><span class=\"line\">lower：判断包含字母的字符串中的字母是否是纯小写，字符串中的字母全部为小写则返回真</span><br><span class=\"line\">upper：判断包含字母的字符串中的字母是否是纯大写，字符串中的字母全部为大写则返回真</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#判断整除的关键字</span></span><br><span class=\"line\">number：判断对象是否是一个数字，是数字则返回真</span><br><span class=\"line\">even ：判断数值是否是偶数，是偶数则返回真</span><br><span class=\"line\">odd ：判断数值是否是奇数，是奇数则返回真</span><br><span class=\"line\">divisibleby(num) ：判断是否可以整除指定的数值，如果除以指定的值以后余数为0，则返回真</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#other关键字</span></span><br><span class=\"line\">version(<span class=\"string\">'版本号'</span>, <span class=\"string\">'比较操作符'</span>):可以用于对比两个版本号的大小，或者与指定的版本号进行对比</span><br><span class=\"line\">version支持的比较操作符如下</span><br><span class=\"line\">大于：&gt;, gt</span><br><span class=\"line\">大于等于：&gt;=, ge</span><br><span class=\"line\">小于：&lt;, lt</span><br><span class=\"line\">小于等于：&lt;=, le</span><br><span class=\"line\">等于： ==, =, eq</span><br><span class=\"line\">不等于：!=, &lt;&gt;, ne</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#判断包含非包含关键字</span></span><br><span class=\"line\">subset：判断一个list是不是另一个list的子集，是另一个list的子集时返回真</span><br><span class=\"line\">superset : 判断一个list是不是另一个list的父集，是另一个list的父集时返回真</span><br><span class=\"line\"><span class=\"comment\">#注：2.5版本中上述两个tests从issubset和issuperset更名为subset和superset</span></span><br></pre></td></tr></table></figure></p>\n<p>总结：ansible使用jinja2模板引擎,这些运算符其实都是jinja2的运算符，在ansible中也可以直接使用jinja2的这些运算符。</p>\n<p><br></p>\n<p>比如：ansible_distribution就是facts信息中的一个key,通过ansible_distribution可以获取到目标主机系统的发行版]<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible <span class=\"built_in\">local</span> -m setup -a <span class=\"string\">\"filter=ansible_distribution\"</span></span><br><span class=\"line\"><span class=\"built_in\">local</span> | SUCCESS =&gt; &#123;</span><br><span class=\"line\">    <span class=\"string\">\"ansible_facts\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">\"ansible_distribution\"</span>: <span class=\"string\">\"CentOS\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"discovered_interpreter_python\"</span>: <span class=\"string\">\"/usr/bin/python\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">\"changed\"</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>基础示例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># cat &gt; then.yml&lt;&lt;END</span></span><br><span class=\"line\">---</span><br><span class=\"line\">- hosts: <span class=\"built_in\">local</span></span><br><span class=\"line\">  remote_user: root</span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">  - name: <span class=\"string\">\"Demo 1-Method 1\"</span></span><br><span class=\"line\">    debug:</span><br><span class=\"line\">      msg: <span class=\"string\">\"Method1-System release is Centos7\"</span>  </span><br><span class=\"line\">    when: ansible_distribution == <span class=\"string\">\"CentOS\"</span> and ansible_distribution_major_version == <span class=\"string\">\"7\"</span>  <span class=\"comment\">#方式1</span></span><br><span class=\"line\">  - name: <span class=\"string\">\"Demo 1-Method 2\"</span></span><br><span class=\"line\">    debug:</span><br><span class=\"line\">      msg: <span class=\"string\">\"Method2-System release is Centos7\"</span></span><br><span class=\"line\">    when:</span><br><span class=\"line\">    - ansible_distribution == <span class=\"string\">\"CentOS\"</span>   <span class=\"comment\">#方式2</span></span><br><span class=\"line\">    - ansible_distribution_major_version == <span class=\"string\">\"7\"</span></span><br><span class=\"line\">  - name: <span class=\"string\">\"Demo 3\"</span></span><br><span class=\"line\">    debug:</span><br><span class=\"line\">      msg: <span class=\"string\">\"&#123;&#123; item &#125;&#125;\"</span></span><br><span class=\"line\">    with_items:</span><br><span class=\"line\">    - 1</span><br><span class=\"line\">    - 2</span><br><span class=\"line\">    - 3</span><br><span class=\"line\">    - 4</span><br><span class=\"line\">    when: item &gt; 1 and ( item == 3 or item ==5)  <span class=\"comment\">#列表中的所有条件同时成立时，对应的任务才会执行</span></span><br><span class=\"line\">  - name: <span class=\"string\">\"Demo 4\"</span></span><br><span class=\"line\">    debug:</span><br><span class=\"line\">      msg: <span class=\"string\">\"System release is not centos\"</span></span><br><span class=\"line\">    when: not ansible_distribution == <span class=\"string\">\"CentOS\"</span>  <span class=\"comment\">#关键点</span></span><br><span class=\"line\">END</span><br></pre></td></tr></table></figure><br>执行结果：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#TASK [Demo 1-Method 1]</span></span><br><span class=\"line\">ok: [<span class=\"built_in\">local</span>] =&gt; &#123;<span class=\"string\">\"msg\"</span>: <span class=\"string\">\"Method1-System release is Centos7\"</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#TASK [Demo 1-Method 2]</span></span><br><span class=\"line\">ok: [<span class=\"built_in\">local</span>] =&gt; &#123;<span class=\"string\">\"msg\"</span>: <span class=\"string\">\"Method2-System release is Centos7\"</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#TASK [Demo 3]</span></span><br><span class=\"line\">skipping: [<span class=\"built_in\">local</span>] =&gt; (item=1)</span><br><span class=\"line\">skipping: [<span class=\"built_in\">local</span>] =&gt; (item=2)</span><br><span class=\"line\">ok: [<span class=\"built_in\">local</span>] =&gt; (item=3) =&gt; &#123;<span class=\"string\">\"msg\"</span>: 3&#125;</span><br><span class=\"line\">skipping: [<span class=\"built_in\">local</span>] =&gt; (item=4)</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p>在linux中我们可以使用test命令进行一些常用的判断操作；比如使用test命令判断”/testdir”是否存在</p>\n<ul>\n<li>如果”/testdir”存在则返回true，如果”/testdir”不存在则返回false，而在linux中命令的返回值为0表示true，返回值为非0表示false<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#--- shell</span></span><br><span class=\"line\"><span class=\"comment\"># test -e /testdir</span></span><br><span class=\"line\"><span class=\"comment\"># echo $?</span></span><br><span class=\"line\">0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#--- shell 脚本</span></span><br><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">test</span> -e /testdir; <span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">\"testdir exist\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>在ansible中也有运算标识符与”test -e”命令的作用是相同的，<code>通过exsts可以判断ansible主机中的对应路径是否存在</code>(注意:<code>是ansible控制主机中的路径，与目标主机没有关系</code>)<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># cat &gt;whenIsExists.yml&lt;&lt;END</span></span><br><span class=\"line\">---</span><br><span class=\"line\">- hosts: <span class=\"built_in\">local</span></span><br><span class=\"line\">  remote_user: root</span><br><span class=\"line\">  gather_facts: no</span><br><span class=\"line\">  vars:</span><br><span class=\"line\">    testpath1: /tmp/login.txt</span><br><span class=\"line\">    testpath2: /var/<span class=\"built_in\">log</span></span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">  - name: <span class=\"string\">\"Demo then file/directory\"</span></span><br><span class=\"line\">    debug:</span><br><span class=\"line\">      msg: <span class=\"string\">\"testpath1 file\"</span></span><br><span class=\"line\">    when: testpath1 is file</span><br><span class=\"line\">  - debug:</span><br><span class=\"line\">      msg: <span class=\"string\">\"testpath2 directory\"</span></span><br><span class=\"line\">    when: testpath2 is directory</span><br><span class=\"line\">  - debug:</span><br><span class=\"line\">      msg: <span class=\"string\">\"link\"</span></span><br><span class=\"line\">    when: testpath2 is link</span><br><span class=\"line\">  - debug:</span><br><span class=\"line\">      msg: <span class=\"string\">\"link\"</span></span><br><span class=\"line\">    when: testpath2 is link</span><br><span class=\"line\">  - debug:</span><br><span class=\"line\">      msg: <span class=\"string\">\"mount\"</span></span><br><span class=\"line\">    when: testpath1 is mount</span><br><span class=\"line\">  - debug:</span><br><span class=\"line\">      msg: <span class=\"string\">\"file &#123;&#123; testpath1 &#125;&#125; not exist\"</span></span><br><span class=\"line\">    when: testpath1 is not exists</span><br><span class=\"line\">  - debug:</span><br><span class=\"line\">      msg: <span class=\"string\">\"file &#123;&#123; testpath1 &#125;&#125; is exist\"</span></span><br><span class=\"line\">    when: testpath1 is exists</span><br><span class=\"line\">END</span><br></pre></td></tr></table></figure><br>执行结果:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#TASK [Demo then file/directory] </span></span><br><span class=\"line\">ok: [<span class=\"built_in\">local</span>] =&gt; &#123;<span class=\"string\">\"msg\"</span>: <span class=\"string\">\"testpath1 file\"</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#TASK [debug]</span></span><br><span class=\"line\">ok: [<span class=\"built_in\">local</span>] =&gt; &#123;<span class=\"string\">\"msg\"</span>: <span class=\"string\">\"testpath2 directory\"</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#TASK [debug] </span></span><br><span class=\"line\">skipping: [<span class=\"built_in\">local</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#TASK [debug]</span></span><br><span class=\"line\">ok: [<span class=\"built_in\">local</span>] =&gt; &#123;<span class=\"string\">\"msg\"</span>: <span class=\"string\">\"file /tmp/login.txt is exist\"</span>&#125;</span><br></pre></td></tr></table></figure></p>\n<p><br><br>其他的一些值得学习的test案例：<br><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># cat &gt; whenOther.yml&lt;&lt;END</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">- hosts:</span> <span class=\"string\">local</span></span><br><span class=\"line\"><span class=\"attr\">  remote_user:</span> <span class=\"string\">root</span></span><br><span class=\"line\"><span class=\"attr\">  gather_facts:</span> <span class=\"literal\">no</span></span><br><span class=\"line\"><span class=\"attr\">  vars:</span></span><br><span class=\"line\"><span class=\"attr\">    testvar:</span> <span class=\"string\">\"test\"</span></span><br><span class=\"line\"><span class=\"attr\">    testvar1:</span> </span><br><span class=\"line\"><span class=\"attr\">    testpath:</span> <span class=\"string\">/bin/bash</span></span><br><span class=\"line\"><span class=\"attr\">    teststr:</span> <span class=\"string\">\"thisisstringdemo\"</span></span><br><span class=\"line\"><span class=\"attr\">    testnum:</span> <span class=\"number\">1024</span></span><br><span class=\"line\"><span class=\"attr\">    a:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"attr\">    b:</span> <span class=\"string\">[1,2,3,4,5]</span></span><br><span class=\"line\"><span class=\"attr\">    ver:</span> <span class=\"number\">7.4</span><span class=\"number\">.1708</span></span><br><span class=\"line\"><span class=\"attr\">  tasks:</span></span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">\"Demo then defined\"</span></span><br><span class=\"line\"><span class=\"attr\">    debug:</span></span><br><span class=\"line\"><span class=\"attr\">      msg:</span> <span class=\"string\">\"Variable is defined\"</span></span><br><span class=\"line\"><span class=\"attr\">    when:</span> <span class=\"string\">testvar</span> <span class=\"string\">is</span> <span class=\"string\">defined</span>   <span class=\"comment\">#关键点</span></span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">\"Demo then undefined or none\"</span> </span><br><span class=\"line\"><span class=\"attr\">    debug:</span></span><br><span class=\"line\"><span class=\"attr\">      msg:</span> <span class=\"string\">\"Variable is undefined or is none\"</span></span><br><span class=\"line\"><span class=\"attr\">    when:</span> <span class=\"string\">(testvar2</span> <span class=\"string\">is</span> <span class=\"string\">undefined)</span> <span class=\"string\">or</span> <span class=\"string\">(testvar1</span> <span class=\"string\">is</span> <span class=\"string\">none)</span>  <span class=\"comment\">#关键点</span></span><br><span class=\"line\">  <span class=\"comment\">#分割线----------------------------------------</span></span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">\"Demo then success|failure|change|skip\"</span></span><br><span class=\"line\"><span class=\"attr\">    shell:</span> <span class=\"string\">\"cat /testdir/abc\"</span></span><br><span class=\"line\"><span class=\"attr\">    when:</span> <span class=\"string\">testvar</span> <span class=\"string\">==</span> <span class=\"string\">\"test\"</span></span><br><span class=\"line\"><span class=\"attr\">    register:</span> <span class=\"string\">returnmsg</span></span><br><span class=\"line\"><span class=\"attr\">    ignore_errors:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  - debug:</span></span><br><span class=\"line\"><span class=\"attr\">      msg:</span> <span class=\"string\">\"success\"</span></span><br><span class=\"line\"><span class=\"attr\">    when:</span> <span class=\"string\">returnmsg</span> <span class=\"string\">is</span> <span class=\"string\">success</span></span><br><span class=\"line\"><span class=\"attr\">  - debug:</span></span><br><span class=\"line\"><span class=\"attr\">      msg:</span> <span class=\"string\">\"failed\"</span></span><br><span class=\"line\"><span class=\"attr\">    when:</span> <span class=\"string\">returnmsg</span> <span class=\"string\">is</span> <span class=\"string\">failure</span></span><br><span class=\"line\"><span class=\"attr\">  - debug:</span></span><br><span class=\"line\"><span class=\"attr\">      msg:</span> <span class=\"string\">\"changed\"</span></span><br><span class=\"line\"><span class=\"attr\">    when:</span> <span class=\"string\">returnmsg</span> <span class=\"string\">is</span> <span class=\"string\">change</span></span><br><span class=\"line\"><span class=\"attr\">  - debug:</span></span><br><span class=\"line\"><span class=\"attr\">      msg:</span> <span class=\"string\">\"skip\"</span></span><br><span class=\"line\"><span class=\"attr\">    when:</span> <span class=\"string\">returnmsg</span> <span class=\"string\">is</span> <span class=\"string\">skip</span></span><br><span class=\"line\">  <span class=\"comment\">#分割线----------------------------------------</span></span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">\"Demo then String\"</span></span><br><span class=\"line\"><span class=\"attr\">    debug:</span></span><br><span class=\"line\"><span class=\"attr\">      msg:</span> <span class=\"string\">\"String = <span class=\"template-variable\">&#123;&#123;teststr&#125;&#125;</span> ,but is lower\"</span></span><br><span class=\"line\"><span class=\"attr\">    when:</span> <span class=\"string\">(teststr</span> <span class=\"string\">is</span> <span class=\"string\">lower)</span> <span class=\"string\">and</span> <span class=\"string\">(teststr</span> <span class=\"string\">is</span> <span class=\"string\">string)</span> </span><br><span class=\"line\">  <span class=\"comment\">#分割线----------------------------------------</span></span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">\"Demo then number\"</span></span><br><span class=\"line\"><span class=\"attr\">    debug:</span></span><br><span class=\"line\"><span class=\"attr\">      msg:</span> <span class=\"string\">\"Number = <span class=\"template-variable\">&#123;&#123;testnum&#125;&#125;</span> ,but is odd\"</span> <span class=\"comment\">#odd奇数 / even偶数</span></span><br><span class=\"line\"><span class=\"attr\">    when:</span> <span class=\"string\">(testnum</span> <span class=\"string\">is</span> <span class=\"string\">number)</span> <span class=\"string\">and</span> <span class=\"string\">(testnum</span> <span class=\"string\">is</span> <span class=\"string\">even)</span> </span><br><span class=\"line\"><span class=\"attr\">  - debug:</span></span><br><span class=\"line\"><span class=\"attr\">      msg:</span> <span class=\"string\">\"Can be divided exactly by 2\"</span>  <span class=\"comment\">#是否能被设置数整除</span></span><br><span class=\"line\"><span class=\"attr\">    when:</span> <span class=\"string\">testnum</span> <span class=\"string\">is</span> <span class=\"string\">divisibleby(2)</span></span><br><span class=\"line\">  <span class=\"comment\">#分割线----------------------------------------</span></span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">\"Demo then super set\"</span></span><br><span class=\"line\"><span class=\"attr\">    debug:</span></span><br><span class=\"line\"><span class=\"attr\">      msg:</span> <span class=\"string\">\"A is a subset of B\"</span>        <span class=\"comment\">#子集</span></span><br><span class=\"line\"><span class=\"attr\">    when:</span> <span class=\"string\">a</span> <span class=\"string\">is</span> <span class=\"string\">subset(b)</span></span><br><span class=\"line\"><span class=\"attr\">  - debug:</span></span><br><span class=\"line\"><span class=\"attr\">      msg:</span> <span class=\"string\">\"B is the parent set of A\"</span>  <span class=\"comment\">#父集</span></span><br><span class=\"line\"><span class=\"attr\">    when:</span> <span class=\"string\">b</span> <span class=\"string\">is</span> <span class=\"string\">superset(a)</span></span><br><span class=\"line\">  <span class=\"comment\">#分割线----------------------------------------</span></span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">\"Demo then version\"</span></span><br><span class=\"line\"><span class=\"attr\">    debug:</span></span><br><span class=\"line\"><span class=\"attr\">      msg:</span> <span class=\"string\">\"This message can be displayed when the ver is greater than 7.3\"</span></span><br><span class=\"line\"><span class=\"attr\">    when:</span> <span class=\"string\">(ver</span> <span class=\"string\">is</span> <span class=\"string\">version(7.3,\"gt\"))</span> <span class=\"string\">and</span> <span class=\"string\">(ver</span> <span class=\"string\">is</span> <span class=\"string\">version(7.3,\"&gt;\"))</span></span><br><span class=\"line\"><span class=\"string\">END</span></span><br></pre></td></tr></table></figure></p>\n<p>执行结果：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">local</span>: ok=11 changed=1 unreachable=0  failed=0 skipped=2 rescued=0 ignored=1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#TASK [Demo then defined]</span></span><br><span class=\"line\">ok: [<span class=\"built_in\">local</span>] =&gt; &#123;<span class=\"string\">\"msg\"</span>: <span class=\"string\">\"Variable is defined\"</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">#TASK [Demo then undefined or none] </span></span><br><span class=\"line\">ok: [<span class=\"built_in\">local</span>] =&gt; &#123;<span class=\"string\">\"msg\"</span>: <span class=\"string\">\"Variable is undefined or is none\"</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#TASK [Demo then success|failure|change|skip] </span></span><br><span class=\"line\">fatal: [<span class=\"built_in\">local</span>]: FAILED! =&gt; &#123;<span class=\"string\">\"ansible_facts\"</span>: &#123;<span class=\"string\">\"discovered_interpreter_python\"</span>: <span class=\"string\">\"/usr/bin/python\"</span>&#125;, <span class=\"string\">\"changed\"</span>: <span class=\"literal\">true</span>, <span class=\"string\">\"cmd\"</span>: <span class=\"string\">\"cat /testdir/abc\"</span>, <span class=\"string\">\"delta\"</span>: <span class=\"string\">\"0:00:00.002826\"</span>, <span class=\"string\">\"end\"</span>: <span class=\"string\">\"2019-08-06 10:49:00.620395\"</span>, <span class=\"string\">\"msg\"</span>: <span class=\"string\">\"non-zero return code\"</span>, <span class=\"string\">\"rc\"</span>: 1, <span class=\"string\">\"start\"</span>: <span class=\"string\">\"2019-08-06 10:49:00.617569\"</span>, <span class=\"string\">\"stderr\"</span>: <span class=\"string\">\"cat: /testdir/abc: No such file or directory\"</span>, <span class=\"string\">\"stderr_lines\"</span>: [<span class=\"string\">\"cat: /testdir/abc: No such file or directory\"</span>], <span class=\"string\">\"stdout\"</span>: <span class=\"string\">\"\"</span>, <span class=\"string\">\"stdout_lines\"</span>: []&#125;</span><br><span class=\"line\">...ignoring</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#TASK [debug-success] </span></span><br><span class=\"line\">skipping: [<span class=\"built_in\">local</span>]</span><br><span class=\"line\"><span class=\"comment\">#TASK [debug] </span></span><br><span class=\"line\">ok: [<span class=\"built_in\">local</span>] =&gt; &#123;<span class=\"string\">\"msg\"</span>: <span class=\"string\">\"failed\"</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">#TASK [debug] </span></span><br><span class=\"line\">ok: [<span class=\"built_in\">local</span>] =&gt; &#123; <span class=\"string\">\"msg\"</span>: <span class=\"string\">\"changed\"</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">#TASK [debug-skip] </span></span><br><span class=\"line\">skipping: [<span class=\"built_in\">local</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#TASK [Demo then String] </span></span><br><span class=\"line\">ok: [<span class=\"built_in\">local</span>] =&gt; &#123;<span class=\"string\">\"msg\"</span>: <span class=\"string\">\"String = thisisstringdemo ,but is lower\"</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#TASK [Demo then number] </span></span><br><span class=\"line\">ok: [<span class=\"built_in\">local</span>] =&gt; &#123;<span class=\"string\">\"msg\"</span>: <span class=\"string\">\"Number = 1024 ,but is odd\"</span>&#125;</span><br><span class=\"line\">TASK [debug]</span><br><span class=\"line\">ok: [<span class=\"built_in\">local</span>] =&gt; &#123; <span class=\"string\">\"msg\"</span>: <span class=\"string\">\"Can be divided exactly by 2\"</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#TASK [Demo then super set]</span></span><br><span class=\"line\">ok: [<span class=\"built_in\">local</span>] =&gt; &#123;<span class=\"string\">\"msg\"</span>: <span class=\"string\">\"A is a subset of B\"</span>&#125;</span><br><span class=\"line\"><span class=\"comment\">#TASK [debug] </span></span><br><span class=\"line\">ok: [<span class=\"built_in\">local</span>] =&gt; &#123;<span class=\"string\">\"msg\"</span>: <span class=\"string\">\"B is the parent set of A\"</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#TASK [Demo then version] </span></span><br><span class=\"line\"><span class=\"comment\"># ok: [local] =&gt; &#123;\"msg\": \"This message can be displayed when the ver is greater than 7.3\"&#125;</span></span><br></pre></td></tr></table></figure></p>\n<p><em>总结：</em></p>\n<ul>\n<li>在when关键字中引用变量时，变量名不需要加双大括号{},</li>\n</ul>\n<p><br></p>\n<h4 id=\"错误处理\"><a href=\"#错误处理\" class=\"headerlink\" title=\"错误处理\"></a>错误处理</h4><h5 id=\"ignore-errors-关键字\"><a href=\"#ignore-errors-关键字\" class=\"headerlink\" title=\"ignore_errors 关键字\"></a>ignore_errors 关键字</h5><p>描述：”ignore_errors”表示即使当前task执行报错，ansible也会忽略这个错误继续执行playbook;</p>\n<p>当我们调用shell模块运行命令时，通常需要获取到shell模块的返回信息以便之后的模块能够根据返回信息的值判断之后进行怎样的操作:<br>比如：下面shell模块在远程主机test70中执行命令 “ls /testabc”，我们将shell模块的返回值注册到了变量returnmsg，然后通过returnmsg获取到了命令执行的返回码，如果返回码为0则证明命令完全正常执行，如果返回码不为0则证明命令执行时出错了;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># cat &gt; ignore_error.yml&lt;&lt;END</span></span><br><span class=\"line\">---</span><br><span class=\"line\">- hosts: <span class=\"built_in\">local</span></span><br><span class=\"line\">  remote_user: root</span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">  - name: task1</span><br><span class=\"line\">    shell: <span class=\"string\">\"ls /testabc\"</span></span><br><span class=\"line\">    ignore_errors: <span class=\"literal\">true</span>   <span class=\"comment\">#关键点,表示shell模块执行报错后，ansible会忽略报错，继续执行之后的task。</span></span><br><span class=\"line\">    register: returnmsg</span><br><span class=\"line\">  - name: task2</span><br><span class=\"line\">    debug:</span><br><span class=\"line\">      msg: <span class=\"string\">\"Command execution successful\"</span></span><br><span class=\"line\">    when: returnmsg.rc == 0  <span class=\"comment\">#关键点</span></span><br><span class=\"line\">  - name: task3</span><br><span class=\"line\">    debug:</span><br><span class=\"line\">      msg: <span class=\"string\">\"Command execution failed\"</span></span><br><span class=\"line\">    when: returnmsg.rc != 0  <span class=\"comment\">#关键点</span></span><br><span class=\"line\">END</span><br><span class=\"line\">``` </span><br><span class=\"line\">执行结果:</span><br><span class=\"line\">```bash</span><br><span class=\"line\"><span class=\"comment\">#TASK [task1] </span></span><br><span class=\"line\">fatal: [<span class=\"built_in\">local</span>]: FAILED! =&gt; &#123;<span class=\"string\">\"changed\"</span>: <span class=\"literal\">true</span>, <span class=\"string\">\"cmd\"</span>: <span class=\"string\">\"ls /testabc\"</span>, <span class=\"string\">\"delta\"</span>: <span class=\"string\">\"0:00:00.004237\"</span>, <span class=\"string\">\"end\"</span>: <span class=\"string\">\"2019-08-06 09:27:49.566974\"</span>, <span class=\"string\">\"msg\"</span>: <span class=\"string\">\"non-zero return code\"</span>, <span class=\"string\">\"rc\"</span>: 2, <span class=\"string\">\"start\"</span>: <span class=\"string\">\"2019-08-06 09:27:49.562737\"</span>, <span class=\"string\">\"stderr\"</span>: <span class=\"string\">\"ls: cannot access /testabc: No such file or directory\"</span>, <span class=\"string\">\"stderr_lines\"</span>: [<span class=\"string\">\"ls: cannot access /testabc: No such file or directory\"</span>], <span class=\"string\">\"stdout\"</span>: <span class=\"string\">\"\"</span>, <span class=\"string\">\"stdout_lines\"</span>: []&#125;</span><br><span class=\"line\">...ignoring</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#TASK [task2]</span></span><br><span class=\"line\">skipping: [<span class=\"built_in\">local</span>]  <span class=\"comment\">#会跳过错误</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#TASK [task3] </span></span><br><span class=\"line\">ok: [<span class=\"built_in\">local</span>] =&gt; &#123; <span class=\"string\">\"msg\"</span>: <span class=\"string\">\"Command execution failed\"</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#PLAY RECAP </span></span><br><span class=\"line\"><span class=\"built_in\">local</span>                      : ok=3    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=1</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"block-关键字\"><a href=\"#block-关键字\" class=\"headerlink\" title=\"block 关键字\"></a>block 关键字</h5><p>描述：我们使用”when”关键字对条件进行判断，如果条件成立则执行对应的任务，但是when当条件成立时我们只能执行一个任务<br><em>如果我们想要在条件成立时，执行多个任务，该怎么办呢？我们可以借助\\”block\\”解决这个小问题。</em></p>\n<ul>\n<li>在ansible中，可以使用\\”block\\”关键字<code>将多个任务整合成一个&quot;块&quot;将被当做一个整体</code>，我们可以对这个”块”添加判断条件，当条件成立时则执行这个块中的所有任务;</li>\n<li>其实block除了能够与when结合在一起使用，还有一个很有用的功能就是<code>&quot;错误处理&quot;功能</code>, 当然我们可以借助failed也可以实现类似的功能;</li>\n</ul>\n<p>block实际应用案例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#cat &gt;block.yml&lt;&lt;END</span></span><br><span class=\"line\">---</span><br><span class=\"line\">- hosts: <span class=\"built_in\">local</span></span><br><span class=\"line\">  remote_user: root</span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">  - debug:</span><br><span class=\"line\">      msg: <span class=\"string\">\"task1 not in block\"</span></span><br><span class=\"line\">  - name: <span class=\"string\">\"Demo block\"</span></span><br><span class=\"line\">    block:  <span class=\"comment\">#当when对应的条件成立，则执行block中的两个任务 #关键点</span></span><br><span class=\"line\">      - debug:</span><br><span class=\"line\">          msg: <span class=\"string\">\"task2 in block1\"</span></span><br><span class=\"line\">      - debug:</span><br><span class=\"line\">          msg: <span class=\"string\">\"task3 in block1\"</span></span><br><span class=\"line\">    when: 2 &gt; 1</span><br><span class=\"line\">  - name: <span class=\"string\">\"Demo ingnore erros\"</span></span><br><span class=\"line\">    shell: <span class=\"string\">'ls /ttt'</span></span><br><span class=\"line\">    register: return_value</span><br><span class=\"line\">    ignore_errors: <span class=\"literal\">true</span>  <span class=\"comment\">#关键点</span></span><br><span class=\"line\">  - debug:</span><br><span class=\"line\">      msg: <span class=\"string\">\"I cought an error\"</span>     <span class=\"comment\">#如果条件成立，代表shell任务执行出错，则执行debug任务</span></span><br><span class=\"line\">    when: return_value is failed   <span class=\"comment\">#关键点采用filed处理错误选择</span></span><br><span class=\"line\">  - name: <span class=\"string\">\"Demo block error\"</span></span><br><span class=\"line\">    block:</span><br><span class=\"line\">      - debug:</span><br><span class=\"line\">         msg: <span class=\"string\">\"shell error!\"</span></span><br><span class=\"line\">      - debug:</span><br><span class=\"line\">         msg: <span class=\"string\">\"shell execute error!\"</span></span><br><span class=\"line\">    when: return_value is failed   <span class=\"comment\">#关键点采用filed处理错误选择</span></span><br><span class=\"line\">END</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#执行结果：</span></span><br><span class=\"line\">ok: [<span class=\"built_in\">local</span>] =&gt; &#123;<span class=\"string\">\"msg\"</span>: <span class=\"string\">\"task1 not in block\"</span>&#125;</span><br><span class=\"line\">ok: [<span class=\"built_in\">local</span>] =&gt; &#123;<span class=\"string\">\"msg\"</span>: <span class=\"string\">\"task2 in block1\"</span>&#125;</span><br><span class=\"line\">ok: [<span class=\"built_in\">local</span>] =&gt; &#123;<span class=\"string\">\"msg\"</span>: <span class=\"string\">\"task3 in block1\"</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">fatal: [<span class=\"built_in\">local</span>]: FAILED! =&gt; &#123;<span class=\"string\">\"changed\"</span>: <span class=\"literal\">true</span>, <span class=\"string\">\"cmd\"</span>: <span class=\"string\">\"ls /ttt\"</span>, <span class=\"string\">\"delta\"</span>: <span class=\"string\">\"0:00:00.002747\"</span>, <span class=\"string\">\"end\"</span>: <span class=\"string\">\"2019-08-06 11:31:53.282766\"</span>, <span class=\"string\">\"msg\"</span>: <span class=\"string\">\"non-zero return code\"</span>, <span class=\"string\">\"rc\"</span>: 2, <span class=\"string\">\"start\"</span>: <span class=\"string\">\"2019-08-06 11:31:53.280019\"</span>, <span class=\"string\">\"stderr\"</span>: <span class=\"string\">\"ls: cannot access /ttt: No such file or directory\"</span>, <span class=\"string\">\"stderr_lines\"</span>: [<span class=\"string\">\"ls: cannot access /ttt: No such file or directory\"</span>], <span class=\"string\">\"stdout\"</span>: <span class=\"string\">\"\"</span>, <span class=\"string\">\"stdout_lines\"</span>: []&#125;</span><br><span class=\"line\">...ignoring</span><br><span class=\"line\"></span><br><span class=\"line\">ok: [<span class=\"built_in\">local</span>] =&gt; &#123;<span class=\"string\">\"msg\"</span>: <span class=\"string\">\"I cought an error\"</span>&#125;</span><br><span class=\"line\">ok: [<span class=\"built_in\">local</span>] =&gt; &#123;<span class=\"string\">\"msg\"</span>: <span class=\"string\">\"shell error!\"</span>&#125;</span><br><span class=\"line\">ok: [<span class=\"built_in\">local</span>] =&gt; &#123;<span class=\"string\">\"msg\"</span>: <span class=\"string\">\"shell execute error!\"</span>&#125;</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"resuce-关键字\"><a href=\"#resuce-关键字\" class=\"headerlink\" title=\"resuce 关键字\"></a>resuce 关键字</h5><p>描述：我们会使用block和rescue结合，<code>完成&quot;错误捕捉，报出异常&quot;的功能</code>；rescue关键字字面意思为”救援”与block关键字对齐，表示当block中的任务执行失败时，会执行rescue中的任务进行补救，<br>注意：当block中的任务出错时会执行rescue中的任务，当block中的任务顺利执行时则不会执行rescue中的任务。</p>\n<p><br> </p>\n<h5 id=\"always-关键\"><a href=\"#always-关键\" class=\"headerlink\" title=\"always 关键\"></a>always 关键</h5><p>描述：除了上面使用到的block与rescue关键字，其实我们还能够加入always关键字，<code>以后无论block中的任务执行成功还是失败，always中的任务都会被执行</code>；</p>\n<p>实际案例：</p>\n<p>block中有多个任务和rescue中也有多个任务，故意执行”/bin/false”命令模拟任务出错的情况，<code>在block代码块中命令执行失败时候就会在执行rescue中的任务时</code>，会先输出 ‘I caught an error’，然后又在rescue中使用’/bin/false’模拟出错的情况，出错后之后的debug任务不会被执行，直接执行always中的任务(无论前面是否执行);</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># cat &gt; resuceAlways.yml&lt;&lt;END</span></span><br><span class=\"line\">---</span><br><span class=\"line\">- hosts: <span class=\"built_in\">local</span></span><br><span class=\"line\">  remote_user: root</span><br><span class=\"line\">  gather_facts: no</span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">  - block:</span><br><span class=\"line\">      - shell: <span class=\"string\">'ls /opt'</span>  </span><br><span class=\"line\">      - shell: <span class=\"string\">'ls /testdir'</span> <span class=\"comment\">#关键点 执行错误跳入 rescue 任务中</span></span><br><span class=\"line\">      - shell: <span class=\"string\">'ls /c'</span></span><br><span class=\"line\">    rescue:   <span class=\"comment\">#关键点 block执行错误时候执行</span></span><br><span class=\"line\">      - debug:</span><br><span class=\"line\">          msg: <span class=\"string\">'I caught an error'</span></span><br><span class=\"line\">      - <span class=\"built_in\">command</span>: /bin/<span class=\"literal\">false</span>  <span class=\"comment\">#关键点 </span></span><br><span class=\"line\">      - debug:</span><br><span class=\"line\">          msg: <span class=\"string\">'I also never execute'</span></span><br><span class=\"line\">    always:  <span class=\"comment\">#关键点  字面意思总是执行</span></span><br><span class=\"line\">      - debug:   </span><br><span class=\"line\">          msg: <span class=\"string\">\"This always executes\"</span>  </span><br><span class=\"line\">END</span><br></pre></td></tr></table></figure>\n<p>执行结果：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#TASK [shell]</span></span><br><span class=\"line\">changed: [<span class=\"built_in\">local</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#TASK [shell]</span></span><br><span class=\"line\">fatal: [<span class=\"built_in\">local</span>]: FAILED! =&gt; &#123;<span class=\"string\">\"changed\"</span>: <span class=\"literal\">true</span>, <span class=\"string\">\"cmd\"</span>: <span class=\"string\">\"ls /testdir\"</span>, <span class=\"string\">\"delta\"</span>: <span class=\"string\">\"0:00:00.002757\"</span>, <span class=\"string\">\"end\"</span>: <span class=\"string\">\"2019-08-06 11:44:47.542015\"</span>, <span class=\"string\">\"msg\"</span>: <span class=\"string\">\"non-zero return code\"</span>, <span class=\"string\">\"rc\"</span>: 2, <span class=\"string\">\"start\"</span>: <span class=\"string\">\"2019-08-06 11:44:47.539258\"</span>, <span class=\"string\">\"stderr\"</span>: <span class=\"string\">\"ls: cannot access /testdir: No such file or directory\"</span>, <span class=\"string\">\"stderr_lines\"</span>: [<span class=\"string\">\"ls: cannot access /testdir: No such file or directory\"</span>], <span class=\"string\">\"stdout\"</span>: <span class=\"string\">\"\"</span>, <span class=\"string\">\"stdout_lines\"</span>: []&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#TASK [debug]</span></span><br><span class=\"line\">ok: [<span class=\"built_in\">local</span>] =&gt; &#123;<span class=\"string\">\"msg\"</span>: <span class=\"string\">\"I caught an error\"</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#TASK [command] </span></span><br><span class=\"line\">fatal: [<span class=\"built_in\">local</span>]: FAILED! =&gt; &#123;<span class=\"string\">\"changed\"</span>: <span class=\"literal\">true</span>, <span class=\"string\">\"cmd\"</span>: [<span class=\"string\">\"/bin/false\"</span>], <span class=\"string\">\"delta\"</span>: <span class=\"string\">\"0:00:00.026379\"</span>, <span class=\"string\">\"end\"</span>: <span class=\"string\">\"2019-08-06 11:44:47.788466\"</span>, <span class=\"string\">\"msg\"</span>: <span class=\"string\">\"non-zero return code\"</span>, <span class=\"string\">\"rc\"</span>: 1, <span class=\"string\">\"start\"</span>: <span class=\"string\">\"2019-08-06 11:44:47.762087\"</span>, <span class=\"string\">\"stderr\"</span>: <span class=\"string\">\"\"</span>, <span class=\"string\">\"stderr_lines\"</span>: [], <span class=\"string\">\"stdout\"</span>: <span class=\"string\">\"\"</span>, <span class=\"string\">\"stdout_lines\"</span>: []&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#TASK [debug]</span></span><br><span class=\"line\">ok: [<span class=\"built_in\">local</span>] =&gt; &#123;<span class=\"string\">\"msg\"</span>: <span class=\"string\">\"This always executes\"</span>&#125;</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"fail-模块\"><a href=\"#fail-模块\" class=\"headerlink\" title=\"fail 模块\"></a>fail 模块</h5><p>应用场景：当脚本执行到某个阶段时需要对某个条件进行判断，如果条件成立，则立即终止脚本的运行，(只需要在条件成立时调用\\”exit\\”命令即可终止脚本的运行)</p>\n<p><em>那么在编写playbook时，如果有类似的需求我们该怎么办呢？</em><br>答: 借助fail模块;</p>\n<p>我们知道在执行playbook时，如果playbook中的任何一个任务执行失败，playbook都会停止运行，除非这个任务设置了”ignore_errors: true”，在任务没有设置”ignore_errors: yes”的情况下，任务执行失败后，playbook就会自动终止；<code>而fail模块天生就是一个用来&quot;执行失败&quot;的模块，当fail模块执行后playbook就会认为有任务失败了，从而终止运行，实现我们想要的中断效果</code>；</p>\n<p>基础示例：<br><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># cat &gt; fail.yml&lt;&lt;END</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">- hosts:</span> <span class=\"string\">local</span></span><br><span class=\"line\"><span class=\"attr\">  remote_user:</span> <span class=\"string\">root</span></span><br><span class=\"line\"><span class=\"attr\">  gather_facts:</span> <span class=\"literal\">no</span></span><br><span class=\"line\"><span class=\"attr\">  tasks:</span></span><br><span class=\"line\"><span class=\"attr\">  - debug:</span></span><br><span class=\"line\"><span class=\"attr\">      msg:</span> <span class=\"string\">\"1\"</span></span><br><span class=\"line\"><span class=\"attr\">  - debug:</span></span><br><span class=\"line\"><span class=\"attr\">      msg:</span> <span class=\"string\">\"2\"</span></span><br><span class=\"line\"><span class=\"attr\">  - fail:</span>  <span class=\"comment\">#关键点</span></span><br><span class=\"line\"><span class=\"attr\">      msg:</span> <span class=\"string\">\"Interrupt running playbook\"</span>  </span><br><span class=\"line\"><span class=\"attr\">  - debug:</span></span><br><span class=\"line\"><span class=\"attr\">      msg:</span> <span class=\"string\">\"3\"</span></span><br><span class=\"line\"><span class=\"attr\">  - debug:</span></span><br><span class=\"line\"><span class=\"attr\">      msg:</span> <span class=\"string\">\"4\"</span></span><br><span class=\"line\"><span class=\"string\">END</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#执行结果</span></span><br><span class=\"line\"><span class=\"attr\">ok:</span> <span class=\"string\">[local]</span> <span class=\"string\">=&gt;</span> <span class=\"string\">&#123;\"msg\":</span> <span class=\"string\">\"1\"</span><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"attr\">ok:</span> <span class=\"string\">[local]</span> <span class=\"string\">=&gt;</span> <span class=\"string\">&#123;\"msg\":</span> <span class=\"string\">\"2\"</span><span class=\"string\">&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#TASK [fail] </span></span><br><span class=\"line\"><span class=\"attr\">fatal:</span> <span class=\"string\">[local]:</span> <span class=\"string\">FAILED!</span> <span class=\"string\">=&gt;</span> <span class=\"string\">&#123;\"changed\":</span> <span class=\"literal\">false</span><span class=\"string\">,</span> <span class=\"string\">\"msg\"</span><span class=\"string\">:</span> <span class=\"string\">\"Interrupt running playbook\"</span><span class=\"string\">&#125;</span></span><br></pre></td></tr></table></figure></p>\n<p>常常将fail模块通常与when结合使用，比如如果之前模块执行后的标准输出信息中包含字符串’error’，则认为中断剧本的条件成立，就立即调用fail模块以终断playbook</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># cat &gt;whenfail.yml&lt;&lt;END</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">- hosts:</span> <span class=\"string\">local</span></span><br><span class=\"line\"><span class=\"attr\">  remote_user:</span> <span class=\"string\">root</span></span><br><span class=\"line\"><span class=\"attr\">  gather_facts:</span> <span class=\"literal\">no</span></span><br><span class=\"line\"><span class=\"attr\">  tasks:</span></span><br><span class=\"line\"><span class=\"attr\">  - shell:</span> <span class=\"string\">\"echo 'This is a string for testing--error'\"</span></span><br><span class=\"line\"><span class=\"attr\">    register:</span> <span class=\"string\">return_value</span>  <span class=\"comment\">#关键点</span></span><br><span class=\"line\"><span class=\"attr\">  - fail:</span>  <span class=\"comment\">#关键点</span></span><br><span class=\"line\"><span class=\"attr\">      msg:</span> <span class=\"string\">\"1.Interrupt running playbook\"</span></span><br><span class=\"line\"><span class=\"attr\">    when:</span> <span class=\"string\">\"'error' in return_value.stdout\"</span>  <span class=\"comment\">#并对fail模块添加了判断条件 表示shell模块执行后的标注输出信息中如果包含'error'字符串，则条件成立</span></span><br><span class=\"line\"><span class=\"attr\">  - debug:</span> <span class=\"comment\">#关键点 由于遇到了fail便不会被执行</span></span><br><span class=\"line\"><span class=\"attr\">      msg:</span> <span class=\"string\">\"I never execute,Because the playbook has stopped\"</span></span><br><span class=\"line\"><span class=\"string\">END</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 执行结果</span></span><br><span class=\"line\"><span class=\"comment\">#TASK [shell] </span></span><br><span class=\"line\"><span class=\"attr\">changed:</span> <span class=\"string\">[local]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#TASK [fail] </span></span><br><span class=\"line\"><span class=\"attr\">fatal:</span> <span class=\"string\">[local]:</span> <span class=\"string\">FAILED!</span> <span class=\"string\">=&gt;</span> <span class=\"string\">&#123;\"changed\":</span> <span class=\"literal\">false</span><span class=\"string\">,</span> <span class=\"string\">\"msg\"</span><span class=\"string\">:</span> <span class=\"string\">\"1.Interrupt running playbook\"</span><span class=\"string\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p><em>补充知识点:</em></p>\n<ul>\n<li>1.使用’in’或者’not in’进行条件判断时,’in’关键字的用法与python中’in’的用法相同<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#两种语法是正确</span></span><br><span class=\"line\">when: <span class=\"string\">' \"successful\" not in return_value.stdout '</span></span><br><span class=\"line\">when: <span class=\"string\">\" 'successful' not in return_value.stdout \"</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br></p>\n<h5 id=\"failed-when-关键字\"><a href=\"#failed-when-关键字\" class=\"headerlink\" title=\"failed_when 关键字\"></a>failed_when 关键字</h5><p>描述：完成类似功能即失败选择，failed_when’的作用就是当<code>对应的条件成立</code>时将对应任务的<code>执行状态设置为失败</code>，以停止playbook的运行;</p>\n<p>但是需要注意的时’ failed_when’虽然会将任务的执行状态设置为失败，但是并不代表任务真的失败了，failed_when’将shell模块的执行状态设置为失败而已，<code>所以&#39;failed_when&#39;并不会影响shell模块的执行过程</code>，只会在条件成立时影响shell模块最终的执行状态，以便停止playbook的运行。</p>\n<p>实际案例：<br><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># cat &gt;failed_when.yml&lt;&lt;END</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">- hosts:</span> <span class=\"string\">local</span></span><br><span class=\"line\"><span class=\"attr\">  remote_user:</span> <span class=\"string\">root</span></span><br><span class=\"line\"><span class=\"attr\">  tasks:</span></span><br><span class=\"line\"><span class=\"attr\">  - debug:</span></span><br><span class=\"line\"><span class=\"attr\">      msg:</span> <span class=\"string\">\"I execute normally\"</span></span><br><span class=\"line\"><span class=\"attr\">  - shell:</span> <span class=\"string\">\"echo 'This is a string for testing error'\"</span></span><br><span class=\"line\"><span class=\"attr\">    register:</span> <span class=\"string\">return_value</span></span><br><span class=\"line\"><span class=\"attr\">    failed_when:</span> <span class=\"string\">' \"error\" in return_value.stdout'</span> <span class=\"comment\">#表示\\\"error\\\"字符串如果存在于shell模块执行后的标准输出中，则条件成立，当条件成立后，shell模块的执行状态将会被设置为失败</span></span><br><span class=\"line\"><span class=\"attr\">  - debug:</span>  <span class=\"comment\">#关键点 - 由于失败则debug模块不会被执行</span></span><br><span class=\"line\"><span class=\"attr\">      msg:</span> <span class=\"string\">\"I never execute,Because the playbook has stopped\"</span></span><br><span class=\"line\"><span class=\"string\">END</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 执行结果</span></span><br><span class=\"line\"><span class=\"comment\">#TASK [debug] </span></span><br><span class=\"line\"><span class=\"attr\">ok:</span> <span class=\"string\">[local]</span> <span class=\"string\">=&gt;</span> <span class=\"string\">&#123;</span></span><br><span class=\"line\"><span class=\"attr\">    \"msg\":</span> <span class=\"string\">\"I execute normally\"</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#TASK [shell] </span></span><br><span class=\"line\"><span class=\"attr\">fatal:</span> <span class=\"string\">[local]:</span> <span class=\"string\">FAILED!</span> <span class=\"string\">=&gt;</span> <span class=\"string\">&#123;\"changed\":</span> <span class=\"literal\">true</span><span class=\"string\">,</span> <span class=\"string\">\"cmd\"</span><span class=\"string\">:</span> <span class=\"string\">\"echo 'This is a string for testing error'\"</span><span class=\"string\">,</span> <span class=\"string\">\"delta\"</span><span class=\"string\">:</span> <span class=\"string\">\"0:00:00.002401\"</span><span class=\"string\">,</span> <span class=\"string\">\"end\"</span><span class=\"string\">:</span> <span class=\"string\">\"2019-08-06 12:52:57.933101\"</span><span class=\"string\">,</span> <span class=\"string\">\"failed_when_result\"</span><span class=\"string\">:</span> <span class=\"literal\">true</span><span class=\"string\">,</span> <span class=\"string\">\"rc\"</span><span class=\"string\">:</span> <span class=\"number\">0</span><span class=\"string\">,</span> <span class=\"string\">\"start\"</span><span class=\"string\">:</span> <span class=\"string\">\"2019-08-06 12:52:57.930700\"</span><span class=\"string\">,</span> <span class=\"string\">\"stderr\"</span><span class=\"string\">:</span> <span class=\"string\">\"\"</span><span class=\"string\">,</span> <span class=\"string\">\"stderr_lines\"</span><span class=\"string\">:</span> <span class=\"string\">[],</span> <span class=\"string\">\"stdout\"</span><span class=\"string\">:</span> <span class=\"string\">\"This is a string for testing error\"</span><span class=\"string\">,</span> <span class=\"string\">\"stdout_lines\"</span><span class=\"string\">:</span> <span class=\"string\">[\"This</span> <span class=\"string\">is</span> <span class=\"string\">a</span> <span class=\"string\">string</span> <span class=\"string\">for</span> <span class=\"string\">testing</span> <span class=\"string\">error\"]&#125;</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"changed-when-关键字\"><a href=\"#changed-when-关键字\" class=\"headerlink\" title=\"changed_when 关键字\"></a>changed_when 关键字</h5><p>描述：理解了’ failed_when’关键字以后，顺势理解’changed_when’关键字就容易多了。</p>\n<ul>\n<li>‘failed_when’关键字的作用是在条件成立时，将对应任务的执行状态设置为失败</li>\n<li>‘changed_when’除了能够在条件成立时将任务的执行状态设置为\\”changed\\”，还能让对应的任务永远不能是changed状态</li>\n</ul>\n<p>我们知道debug模块在正常执行的情况下只能是”ok”状态,这里使用fialed_when设置成为”changed状态”，只有任务作出了实际的操作时（执行后状态为changed），才会真正的执行对应的handlers而在某些时候，如果想要通过任务执行后的返回值将任务的最终执行状态判定为changed，则可以使用’changed_when’关键字，以便条件成立时可以执行对应的handlers，</p>\n<p>当将’changed_when’直接设置为false时，对应任务的状态将不会被设置为’changed’，如果任务原本的执行状态为’changed’，最终则会被设置为’ok’</p>\n<p>基础案例：<br><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># cat&gt;changed_when.yml&lt;&lt;END</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">- hosts:</span> <span class=\"string\">local</span></span><br><span class=\"line\"><span class=\"attr\">  remote_user:</span> <span class=\"string\">root</span></span><br><span class=\"line\"><span class=\"attr\">  gather_facts:</span> <span class=\"literal\">no</span></span><br><span class=\"line\"><span class=\"attr\">  tasks:</span></span><br><span class=\"line\"><span class=\"attr\">  - debug:</span></span><br><span class=\"line\"><span class=\"attr\">      msg:</span> <span class=\"string\">\"test message\"</span> </span><br><span class=\"line\"><span class=\"attr\">    changed_when:</span> <span class=\"number\">2</span> <span class=\"string\">&gt; 1 #关键点</span></span><br><span class=\"line\"><span class=\"string\"></span><span class=\"attr\">  - name:</span> <span class=\"string\">\"shell VS\"</span></span><br><span class=\"line\"><span class=\"attr\">    shell:</span> <span class=\"string\">\"ls /opt\"</span>  </span><br><span class=\"line\"><span class=\"attr\">  - shell:</span> <span class=\"string\">\"ls /opt\"</span>  <span class=\"comment\">#hell模块的执行状态最终为'ok'</span></span><br><span class=\"line\"><span class=\"attr\">    changed_when:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"string\">END</span></span><br></pre></td></tr></table></figure><br>执行结果：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#TASK [debug] </span></span><br><span class=\"line\">changed: [<span class=\"built_in\">local</span>] =&gt; &#123;<span class=\"string\">\"msg\"</span>: <span class=\"string\">\"test message\"</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#TASK [shell VS] </span></span><br><span class=\"line\">changed: [<span class=\"built_in\">local</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#TASK [shell] </span></span><br><span class=\"line\">ok: [<span class=\"built_in\">local</span>]</span><br></pre></td></tr></table></figure></p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"自动化运维","path":"api/categories/自动化运维.json"},{"name":"运维基础","path":"api/categories/运维基础.json"}],"tags":[{"name":"Ansible","path":"api/tags/Ansible.json"}]}