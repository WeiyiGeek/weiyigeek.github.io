{"title":"使用Aliyun容器镜像服务对海外gcr、quay仓库镜像进行镜像拉取构建","slug":"虚拟云容/云容器/Kubernetes/辅助组件/使用Aliyun容器镜像服务对海外镜像仓库中镜像进行拉取构建","date":"2022-06-01T09:37:47.000Z","updated":"2022-07-11T14:24:45.853Z","url":"2022/6-1-663.html","path":"api/articles/2022/6-1-663.html.json","covers":["https://raw.githubusercontent.com/WeiyiGeek/blogimage/master/2022/5/20220621111612.png","https://raw.githubusercontent.com/WeiyiGeek/blogimage/master/2022/5/20220621112156.png","https://raw.githubusercontent.com/WeiyiGeek/blogimage/master/2022/5/20220621112447.png","https://raw.githubusercontent.com/WeiyiGeek/blogimage/master/2022/5/20220621112856.png","https://raw.githubusercontent.com/WeiyiGeek/blogimage/master/2022/5/20220621114542.png","https://raw.githubusercontent.com/WeiyiGeek/blogimage/master/2022/5/20220621115306.png","https://raw.githubusercontent.com/WeiyiGeek/blogimage/master/2022/5/20220621135411.png","https://raw.githubusercontent.com/WeiyiGeek/blogimage/master/2022/5/20220621140023.png","https://raw.githubusercontent.com/WeiyiGeek/blogimage/master/2022/5/20220621140532.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h2 id=\"0x00-前言简述\"><a href=\"#0x00-前言简述\" class=\"headerlink\" title=\"0x00 前言简述\"></a>0x00 前言简述</h2><p>描述: 在国内(GFW)搭建k8s集群及其依赖组件间时, 常常会遇到无法下载k8s.gcr.io、quay.io的镜像, 那我们如何解决呢?<br>例如, 在K8S集群中部署<code>nfs-subdir-external-provisioner</code>资源清单时报如下错误, 这是由于国内无法访问<code>k8s.gcr.io</code>, 所以无法拉取下载<code>k8s.gcr.io/sig-storage/nfs-subdir-external-provisioner:v4.0.2</code>镜像<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Error response from daemon: Get https://k8s.gcr.io/v2/: net/http: request canceled <span class=\"keyword\">while</span> waiting <span class=\"keyword\">for</span> connection (Client.Timeout exceeded <span class=\"keyword\">while</span> awaiting headers)</span><br></pre></td></tr></table></figure></p>\n<p><strong>那如何畅快的下载:</strong><br>常用的方式是使用k8s.gcr.io的镜像源, 例如<code>[&quot;https://gcr.mirrors.ustc.edu.cn/google-containers/&quot;,&quot;https://registry.cn-hangzhou.aliyuncs.com/google_containers/&quot;]</code>, 但是对于某一些镜像它是没有进行同步的此时我们将无法通过其下载，可能你还会采用一台海外的机器进行<code>git pull、git tag、git push</code>一系列的操作将<code>k8s.gcr.io、quay.io</code>仓库中的镜像传到国内, 但是对于没有海外机器的朋友来说是不是没有办法了。</p>\n<p>答案: 当然是否定的,我们可以采用Github仓库中Dockerfile文件与阿里云提供的容器镜像服务(<a href=\"https://www.aliyun.com/product/acr?spm=5176.21213303.1362911.1.3d9153c9zZkQnr&amp;scm=20140722.S_card)进行海外镜像构建，从而拉取构建后公共或者私有镜像。\" target=\"_blank\" rel=\"noopener\">https://www.aliyun.com/product/acr?spm=5176.21213303.1362911.1.3d9153c9zZkQnr&amp;scm=20140722.S_card)进行海外镜像构建，从而拉取构建后公共或者私有镜像。</a></p>\n<hr>\n<h2 id=\"0x01-操作实践\"><a href=\"#0x01-操作实践\" class=\"headerlink\" title=\"0x01 操作实践\"></a>0x01 操作实践</h2><p>步骤 01.登录 github.com 创建一个公共仓库(如果没有请注册), 此处我创建了一个 imagesbuild 仓库，专门用于构建 k8s.gcr.io、quay.io 仓库中无法下载的镜像，此处以 nfs-subdir-external-provisioner 镜像为例，在 <code>/sig-storage/nfs-subdir-external-provisioner</code> 目录下创建一个 Dockerfile 文件，其内容如 tee 命令写入所示。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> git@github.com:WeiyiGeek/imagesbuild.git</span><br><span class=\"line\">mkdir -vp imagesbuild/sig-storage/nfs-subdir-external-provisioner</span><br><span class=\"line\">tee imagesbuild/sig-storage/nfs-subdir-external-provisioner/Dockerfile  &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">FROM k8s.gcr.io/sig-storage/nfs-subdir-external-provisioner:v4.0.2</span><br><span class=\"line\">LABEL MAINTAINER=master@weiyigeeek.top BUILDTYPE=Aliyun</span><br><span class=\"line\">EOF</span><br><span class=\"line\">git add . &amp;&amp; git commit -m <span class=\"string\">\"nfs-subdir-external-provisioner\"</span> &amp;&amp; git push</span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://raw.githubusercontent.com/WeiyiGeek/blogimage/master/2022/5/20220621111612.png\" alt=\"WeiyiGeek.nfs-subdir-external-provisioner\" title=\"\" class=\"\">\n                <p>WeiyiGeek.nfs-subdir-external-provisioner</p>\n            </figure>\n<p><br></p>\n<p>步骤 02.登陆阿里云[<a href=\"https://aliyun.com]控制台并搜索`容器镜像服务`或者直接访问(https://www.aliyun.com/product/acr?spm=5176.21213303.1362911.1.3d9153c9zZkQnr&amp;scm=20140722.S_card)，进入其控制台如下所示\">https://aliyun.com]控制台并搜索`容器镜像服务`或者直接访问(https://www.aliyun.com/product/acr?spm=5176.21213303.1362911.1.3d9153c9zZkQnr&amp;scm=20140722.S_card)，进入其控制台如下所示</a>:</p>\n<figure class=\"image-box\">\n                <img src=\"https://raw.githubusercontent.com/WeiyiGeek/blogimage/master/2022/5/20220621112156.png\" alt=\"WeiyiGeek.容器镜像服务\" title=\"\" class=\"\">\n                <p>WeiyiGeek.容器镜像服务</p>\n            </figure>\n<p><br/></p>\n<p>步骤 03.进入后我们需要先创建名称空间[WeiyiGeek]、之后再进行镜像仓库。<br><figure class=\"image-box\">\n                <img src=\"https://raw.githubusercontent.com/WeiyiGeek/blogimage/master/2022/5/20220621112447.png\" alt=\"WeiyiGeek.创建名称空间\" title=\"\" class=\"\">\n                <p>WeiyiGeek.创建名称空间</p>\n            </figure></p>\n<p><br/></p>\n<p>步骤 04.创建镜像仓库，填写的内容如下所示, 名称空间为<code>weiyigeek</code>, 仓库名称为<code>nfs-subdir-external-provisioner</code>, 仓库类型此处选择公开(方便拉取,注意如果是私有包含敏感信息的镜像一定要私有), 在摘要中注明该仓库主要用途。</p>\n<figure class=\"image-box\">\n                <img src=\"https://raw.githubusercontent.com/WeiyiGeek/blogimage/master/2022/5/20220621112856.png\" alt=\"WeiyiGeek.创建镜像仓库\" title=\"\" class=\"\">\n                <p>WeiyiGeek.创建镜像仓库</p>\n            </figure>\n<p><br/></p>\n<p>步骤 05.点击下一步后，选择github代码源，然后选择 WeiyiGeek 再选择 imagesbuild 我们创建的仓库，并勾选[v]海外机器构建。</p>\n<figure class=\"image-box\">\n                <img src=\"https://raw.githubusercontent.com/WeiyiGeek/blogimage/master/2022/5/20220621114542.png\" alt=\"WeiyiGeek.代码源\" title=\"\" class=\"\">\n                <p>WeiyiGeek.代码源</p>\n            </figure>\n<p><br/></p>\n<p>步骤 06.创建完后将会显示如下界面, 该页面显示创建的镜像仓库的相关信息。</p>\n<ul>\n<li>仓库名称 ：nfs-subdir-external-provisioner</li>\n<li>仓库地域 ：华东1（杭州）</li>\n<li>仓库类型 ：公开</li>\n<li>代码仓库 ：<a href=\"https://github.com/WeiyiGeek/imagesbuild\" target=\"_blank\" rel=\"noopener\">https://github.com/WeiyiGeek/imagesbuild</a></li>\n<li>公网地址 ：registry.cn-hangzhou.aliyuncs.com/weiyigeek/nfs-subdir-external-provisioner</li>\n<li>专有网络 : registry-vpc.cn-hangzhou.aliyuncs.com/weiyigeek/nfs-subdir-external-provisioner</li>\n<li>经典网络 : registry-internal.cn-hangzhou.aliyuncs.com/weiyigeek/nfs-subdir-external-provisioner</li>\n<li>摘要 : mirror k8s.gcr.io/sig-storage/nfs-subdir-external-provisioner:v4.0.2</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://raw.githubusercontent.com/WeiyiGeek/blogimage/master/2022/5/20220621115306.png\" alt=\"WeiyiGeek.镜像仓库相关信息\" title=\"\" class=\"\">\n                <p>WeiyiGeek.镜像仓库相关信息</p>\n            </figure>\n<p><br/></p>\n<p>步骤 07.然后点击左侧【构建】进行添加构建规则，类型选择【Branch】- main, 然后构建上下文目录收设置为【Dockerfile】存放的目录，此处以imagesbuild仓库名称下的目录为根<code>/sig-storage/nfs-subdir-external-provisioner</code>, Dockerfile 就在当前路径之下, 其镜像版本为V4.0.2。 </p>\n<p><img src=\"https://raw.githubusercontent.com/WeiyiGeek/blogimage/master/2022/5/20220621135411.png\" alt=\"WeiyiGeek.构建规则\"></p>\n<p><br/></p>\n<p>步骤 08.点击【确定】后保存,然后点击进行【立即构建】，构建完成后将会如下图所示:</p>\n<figure class=\"image-box\">\n                <img src=\"https://raw.githubusercontent.com/WeiyiGeek/blogimage/master/2022/5/20220621140023.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n<p><br/></p>\n<p>步骤 09.然后可以从构建日志中发现构建出镜像的下载地址<code>registry.cn-hangzhou.aliyuncs.com/weiyigeek/nfs-subdir-external-provisioner:v4.0.2</code></p>\n<figure class=\"image-box\">\n                <img src=\"https://raw.githubusercontent.com/WeiyiGeek/blogimage/master/2022/5/20220621140532.png\" alt=\"WeiyiGeek.构建出的镜像地址\" title=\"\" class=\"\">\n                <p>WeiyiGeek.构建出的镜像地址</p>\n            </figure>\n<p><br/></p>\n<p>步骤 10.最后在k8s节点集群上进行构建的<code>nfs-subdir-external-provisioner</code>镜像拉取测试，。 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ crictl pull registry.cn-hangzhou.aliyuncs.com/weiyigeek/nfs-subdir-external-provisioner:v4.0.2</span><br><span class=\"line\">  <span class=\"comment\"># Image is up to date for sha256:7ef6786db2b2bacc683b76e05f99ee26c135d975b91dabca83029b62e510be39</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ crictl images | grep <span class=\"string\">\"nfs-subdir-external-provisioner\"</span></span><br><span class=\"line\">  <span class=\"comment\"># registry.cn-hangzhou.aliyuncs.com/weiyigeek/nfs-subdir-external-provisioner v4.0.2              7ef6786db2b2b 17.9MB</span></span><br></pre></td></tr></table></figure>\n<p>支持, 完美解决国内无法顺畅下载<code>k8s.gcr.io</code>的镜像问题，希望能帮助到大家，谢谢大家支持。</p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"kubernetes","path":"api/categories/kubernetes.json"},{"name":"Containers","path":"api/categories/Containers.json"},{"name":"OperationTools","path":"api/categories/OperationTools.json"}],"tags":[{"name":"海外镜像构建","path":"api/tags/海外镜像构建.json"}]}