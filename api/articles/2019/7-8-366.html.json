{"title":"GitHub进阶使用记录","slug":"编程世界/开发必备/版本控制/GIT/GitHub进阶使用记录","date":"2019-07-08T14:44:26.000Z","updated":"2022-10-13T02:50:53.679Z","url":"2019/7-8-366.html","path":"api/articles/2019/7-8-366.html.json","covers":["https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190717170020.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190704231409.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190715150456.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190715151401.png","https://img.weiyigeek.top/2022/10/20221012210240.png","https://img.weiyigeek.top/2022/10/20221012213549.png","https://img.weiyigeek.top/2022/10/20221012213738.png","https://img.weiyigeek.top/2022/10/20221012214101.png","https://img.weiyigeek.top/2022/10/20221012214713.png","https://img.weiyigeek.top/2022/10/20221012220054.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<p><br></p>\n<h3 id=\"0x00-Github-API使用\"><a href=\"#0x00-Github-API使用\" class=\"headerlink\" title=\"0x00 Github API使用\"></a>0x00 Github API使用</h3><p>如果自己写的github爬虫没有特色或者没有很高的效率不如使用Github的API，数据获取可以来得快一些。</p>\n<p>支持的验证访问方式有如下几种：</p>\n<ul>\n<li>未认证 (最高每小时60次访问请求限制)</li>\n<li>使用token认证 (每小时5000次的请求)</li>\n<li>使用auth认证</li>\n</ul>\n<p><strong>API token申请</strong><br><code>Settings &gt; Developer settings &gt; Personal access tokens &gt; Generate new token</code>,选择您需要的权限,然后生成新的token；<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190717170020.png\" alt=\"WeiyiGeek.settings-tokens\" title=\"\" class=\"\">\n                <p>WeiyiGeek.settings-tokens</p>\n            </figure></p>\n<p><strong>Github API使用说明</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#查看自己的剩余的次数的地址</span></span><br><span class=\"line\">https://api.github.com/rate_limit?access_token=a2c312b7523daf22b677434a722bb2ced9b222dc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看用户的issues</span></span><br><span class=\"line\">curl -v -H <span class=\"string\">\"Authorization: a2c312b7523daf22b677434a722bb2ced9b222dc\"</span> https://api.github.com/user/issues</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#用户信息</span></span><br><span class=\"line\">https://api.github.com/users/weiyigeek</span><br><span class=\"line\"><span class=\"comment\">#查看用户粉丝/关注/fork量/星赞/仓库等等</span></span><br><span class=\"line\">https://api.github.com/users/weiyigeek/&#123;followers,following,fork,starred,repos&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">https://api.github.com/search/code?q=keyword&amp;sort=indexed&amp;per_page=100&amp;page=1</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"0x01-学习遇到配置\"><a href=\"#0x01-学习遇到配置\" class=\"headerlink\" title=\"0x01 学习遇到配置\"></a>0x01 学习遇到配置</h3><h4 id=\"仓库建立及初始化\"><a href=\"#仓库建立及初始化\" class=\"headerlink\" title=\"仓库建立及初始化\"></a>仓库建立及初始化</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#（1）进行git配置</span></span><br><span class=\"line\">$ git config --global user.email <span class=\"string\">\"self@weiyigeek.top\"</span></span><br><span class=\"line\">$ git config --global user.name <span class=\"string\">\"WeiyiGeek\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#（2）初始化建立仓库并绑定仓库</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"# SecOpsDev\"</span> &gt;&gt; README.md</span><br><span class=\"line\">git init</span><br><span class=\"line\">git add README.md</span><br><span class=\"line\">git commit -m <span class=\"string\">\"first commit\"</span></span><br><span class=\"line\">git remote add origin git@github.com:WeiyiGeek/SecOpsDev.git</span><br><span class=\"line\">git push -u origin master</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#（3）已存在的仓库绑定新的远程仓库</span></span><br><span class=\"line\"><span class=\"comment\">#push an existing repository from the command line</span></span><br><span class=\"line\">git remote add origin git@github.com:WeiyiGeek/SecOpsDev.git</span><br><span class=\"line\">git push -u origin master</span><br><span class=\"line\"><span class=\"comment\"># git remote add gitee git@gitee.com:WeiyiGeek/blog.git</span></span><br><span class=\"line\"><span class=\"comment\"># git push -u gitee master -f</span></span><br></pre></td></tr></table></figure>\n<p><br></p>\n<h4 id=\"Github-Page-自定义域名\"><a href=\"#Github-Page-自定义域名\" class=\"headerlink\" title=\"Github Page 自定义域名\"></a>Github Page 自定义域名</h4><p>描述：利用自定义的域名通过域名提供商来绑定github page 或 gitee page；</p>\n<p><strong>Github Pages：</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Step1.设置自定义域名</span></span><br><span class=\"line\">Settings &gt; Options &gt; GitHub Pages   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#step2.域名提供商那里的域名管理添加A记录(即github.io页面的)或者CNAME记录(即别名记录)</span></span><br><span class=\"line\">正在 Ping weiyigeek.github.io [185.199.111.153] 具有 32 字节的数据:</span><br><span class=\"line\">来自 185.199.111.153 的回复: 字节=32 时间=149ms TTL=49</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#由于我们github pages自定义域名填写的是www.weiyigeek.github.io,所有需要设置weiyigeek.github.io指向前者;</span></span><br><span class=\"line\">@ CNAME 默认 www.weiyigeek.github.io.</span><br><span class=\"line\">www CNAME 默认 weiyigeek.github.io.\t</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Step3.验证是否解析成功</span></span><br><span class=\"line\"><span class=\"variable\">$dig</span> www.weiyigeek.github.io +noall +answer</span><br><span class=\"line\">DiG 9.11.3-1ubuntu1.7-Ubuntu www.weiyigeek.github.io +noall +answer</span><br><span class=\"line\">global options: +cmd</span><br><span class=\"line\">www.weiyigeek.github.io.     600     IN      CNAME   weiyigeek.github.io.</span><br><span class=\"line\">weiyigeek.github.io.    2458    IN      A       185.199.111.153</span><br><span class=\"line\">weiyigeek.github.io.    2458    IN      A       185.199.109.153</span><br><span class=\"line\">weiyigeek.github.io.    2458    IN      A       185.199.110.153</span><br><span class=\"line\">weiyigeek.github.io.    2458    IN      A       185.199.108.153</span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190704231409.png\" alt=\"WeiyiGeek.腾讯云域名指向github\" title=\"\" class=\"\">\n                <p>WeiyiGeek.腾讯云域名指向github</p>\n            </figure>\n<p><br></p>\n<p><strong>Gitee  Pages</strong><br>描述：由于Gitee是商业与免费版本一起的，只有付费才能使用git pages的自定义域名指向;但是我们还是有其他办法来解决的;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#step1.在域名提供商那里设置\t显性URL</span></span><br><span class=\"line\">blog.weiyigeek.github.io -&gt; weiyigeek.gitee.io.  <span class=\"comment\">#自动跳转</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190715150456.png\" alt=\"WeiyiGeek.设置完成\" title=\"\" class=\"\">\n                <p>WeiyiGeek.设置完成</p>\n            </figure>\n<p>参考文档：</p>\n<ul>\n<li><a href=\"https://help.github.com/cn/articles/setting-up-an-apex-domain\" target=\"_blank\" rel=\"noopener\">https://help.github.com/cn/articles/setting-up-an-apex-domain</a></li>\n</ul>\n<p><br></p>\n<h4 id=\"Github-仓库信息显示\"><a href=\"#Github-仓库信息显示\" class=\"headerlink\" title=\"Github 仓库信息显示\"></a>Github 仓库信息显示</h4><p>描述：在网页中显示您的github仓库中项目的start/wathc/fork等等数量;<br>github buttons:<a href=\"https://ghbtns.com/\" target=\"_blank\" rel=\"noopener\">https://ghbtns.com/</a></p>\n<p>基础示例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#type可选 star / watch / fork /Follow</span></span><br><span class=\"line\">https://ghbtns.com/github-btn.html?user=weiyigeek&amp;repo=weiyigeek.github.io&amp;<span class=\"built_in\">type</span>=star&amp;count=<span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Star</span></span><br><span class=\"line\">&lt;iframe src=<span class=\"string\">\"https://ghbtns.com/github-btn.html?user=weiyigeek&amp;repo=weiyigeek.github.io&amp;type=star&amp;count=true\"</span> frameborder=<span class=\"string\">\"0\"</span> scrolling=<span class=\"string\">\"0\"</span> width=<span class=\"string\">\"170px\"</span> height=<span class=\"string\">\"20px\"</span>&gt;&lt;/iframe&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Watch</span></span><br><span class=\"line\">&lt;iframe src=<span class=\"string\">\"https://ghbtns.com/github-btn.html?user=weiyigeek&amp;repo=weiyigeek.github.io&amp;type=watch&amp;count=true&amp;v=2\"</span> frameborder=<span class=\"string\">\"0\"</span> scrolling=<span class=\"string\">\"0\"</span> width=<span class=\"string\">\"170px\"</span> height=<span class=\"string\">\"20px\"</span>&gt;&lt;/iframe&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#fork 其他类都一样</span></span><br><span class=\"line\">&lt;iframe src=<span class=\"string\">\"https://ghbtns.com/github-btn.html?user=twbs&amp;repo=bootstrap&amp;type=fork&amp;count=true\"</span> frameborder=<span class=\"string\">\"0\"</span> scrolling=<span class=\"string\">\"0\"</span> width=<span class=\"string\">\"170px\"</span> height=<span class=\"string\">\"20px\"</span>&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190715151401.png\" alt=\"WeiyiGeek.效果图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.效果图</p>\n            </figure></p>\n<p><br></p>\n<h4 id=\"Github-开源项目PR提交\"><a href=\"#Github-开源项目PR提交\" class=\"headerlink\" title=\"Github 开源项目PR提交\"></a>Github 开源项目PR提交</h4><p>温馨提示：此处实践环境依赖于git工具, 若你没有安装git或者不了解的git进行代码提交过程的朋友，可以参考博主学习【git系列笔记】汇总, 关注 WeiyiGeek 公众号回复【<code>Git学习之路汇总</code>】即可获得学习资料：<br><a href=\"https://www.weiyigeek.top/wechat.html?key=Git学习之路汇总\" target=\"_blank\" rel=\"noopener\">https://www.weiyigeek.top/wechat.html?key=Git学习之路汇总</a></p>\n<p><strong>如何在 Github 上给开源项目提交 PR?</strong></p>\n<blockquote>\n<p>Pull Request (俗称PR): 意思是请求主仓库的所有者从你的仓库中拉取代码合并到主仓库中。<br>在 GitHub 中如果想参与开源项目开发时，通常会采用进行PR提交方式，当项目管理员收到你提交的PR后，他会对你提交的代码进行审(即查看你写的代码，并考虑其中写的好的和写的不好的地方，然后给你提出意见和建议), 当我们我们的代码通过了审查，它就会被合并到主仓库中，这时候我们的一次代码贡献就算是完成啦！</p>\n</blockquote>\n<p><strong>提交 PR 流程简述:</strong><br>我们在使用开源项目的过程中，发现一个新的需求，但是开源项目不支持，这时我们就可以在开源项目的基础上实现这个需求，向开源项目提交 PR，让开源项目考虑后续版本是否接纳该需求, 提交 PR 是参与开源项目，为开源项目做贡献的起点。<br>提交 PR 的过程包括：fork 开源项目到自己的 Github 账户下，clone 项目到自己的本地仓库，建立本地仓库到远程仓库的 remote 链接，新建本地分支，修改代码，提交代码到自己的 Github 远程仓库，新建 PR。</p>\n<p><strong>提交 PR 详细步骤</strong></p>\n<p>描述: 此处我们向 Github上 how-does-MobaXterm-encrypt-password 开源项目 (<code>它是一个解密MobaXterm存储的Session的工具</code>) 提交 PR 为例，进行讲解我的 Github的仓库地址 ( <a href=\"https://github.com/weiyigeek\" target=\"_blank\" rel=\"noopener\">https://github.com/weiyigeek</a> ) 欢迎大家来访哟!</p>\n<p>步骤 01.浏览器访问Github上how-does-MobaXterm-encrypt-password开源项目( <a href=\"https://github.com/HyperSine/how-does-MobaXterm-encrypt-password)\" target=\"_blank\" rel=\"noopener\">https://github.com/HyperSine/how-does-MobaXterm-encrypt-password)</a>, 点击 Fork 复制项目到自己 Github 仓库之中, 点击确定后稍等片刻，此项目便会出现在自己的仓库中。</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/10/20221012210240.png\" alt=\"WeiyiGeek.Fork开源项目图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Fork开源项目图</p>\n            </figure>\n<p><br/></p>\n<p>步骤 02.下载 Fork 复制到自己 Github 仓库中的该 how-does-MobaXterm-encrypt-password  开源项目， 你可采用 Https 或者 ssh 方式拉取，此处我已经使用ssh公钥进行认证，所以采用SSH方式进行clone项目到本地的 github/opensource/ 目录中 。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> github/opensource/</span><br><span class=\"line\">$ git <span class=\"built_in\">clone</span> git@github.com:WeiyiGeek/how-does-MobaXterm-encrypt-password.git</span><br><span class=\"line\"></span><br><span class=\"line\">$ git config --global --list</span><br><span class=\"line\">user.email=master@weiyigeek.top</span><br><span class=\"line\">user.name=WeiyiGeek</span><br><span class=\"line\">core.quotepath=<span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<p>步骤 03.查看项目remote 远程链接以及添加上游仓库连接(开源项目仓库)，此处上游指的是一开始 fork 的那个项目源。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git remote -v</span><br><span class=\"line\">origin  git@github.com:WeiyiGeek/how-does-MobaXterm-encrypt-password.git (fetch)</span><br><span class=\"line\">origin  git@github.com:WeiyiGeek/how-does-MobaXterm-encrypt-password.git (push)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 添加上游仓库链接</span></span><br><span class=\"line\">$ git remote add upstream https://github.com/HyperSine/how-does-MobaXterm-encrypt-password</span><br><span class=\"line\"></span><br><span class=\"line\">$ git remote -v</span><br><span class=\"line\">origin  git@github.com:WeiyiGeek/how-does-MobaXterm-encrypt-password.git (fetch)</span><br><span class=\"line\">origin  git@github.com:WeiyiGeek/how-does-MobaXterm-encrypt-password.git (push)</span><br><span class=\"line\">upstream        https://github.com/HyperSine/how-does-MobaXterm-encrypt-password.git (fetch)</span><br><span class=\"line\">upstream        https://github.com/HyperSine/how-does-MobaXterm-encrypt-password.git (push)</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 04.创建本地 dev-pr 分支, 通常测试功能的代码会在测试分支上，当功能成熟后便可Merge到Master分支上(后续会讲解)<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># how-does-MobaXterm-encrypt-password (master)</span></span><br><span class=\"line\">$ git checkout -b dev-pr</span><br><span class=\"line\">Switched to a new branch <span class=\"string\">'dev-pr'</span></span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 05.切换分支后我们便可以开始开源项目代码修改了，然后提交修改的代码到本地分支，推送本地分支到 Github 远程仓库。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># how-does-MobaXterm-encrypt-password (dev-pr)</span></span><br><span class=\"line\"><span class=\"comment\"># 1.使用如下命令添加修改的文件到暂存区</span></span><br><span class=\"line\">$ git add .</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.提交本次修改代码文件到工作区，并描述其本次修改简单情况</span></span><br><span class=\"line\">$ git commit -m <span class=\"string\">\"如果在执行python ShowMobaXterm.py weiyigeek 出现如下错误时，请将第 232 与 231 行的 ConnHostname.encode('ansi'),  ConnUsername.encode('ansi') 删除, 如果有中文编码，可以将 encode('ansi') =&gt; decode(\\\"utf8\\\",\\\"ignore\\\")\"</span></span><br><span class=\"line\">[dev-pr 4d1c83c] 如果在执行python ShowMobaXterm.py weiyigeek 出现如下错......，可以将 encode(<span class=\"string\">'ansi'</span>) =&gt; decode(utf8,ignore)</span><br><span class=\"line\">1 file changed, 7 insertions(+), 9 deletions(-)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.将当前分支推送到自己的远程仓库。</span></span><br><span class=\"line\">$ git push origin dev-pr</span><br><span class=\"line\">Enumerating objects: 7, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">......</span><br><span class=\"line\">To github.com:WeiyiGeek/how-does-MobaXterm-encrypt-password.git</span><br><span class=\"line\"> * [new branch]      dev-pr -&gt; dev-pr</span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<p>步骤 06.在自己的远程仓库便能看刚才push上去的dev-pr分支, 此时点击项目仓库中<code>pull request</code>选项卡,然后再点击 <code>New pull request，</code>，进行创建PR。</p>\n<p><img src=\"https://img.weiyigeek.top/2022/10/20221012213549.png\" alt=\"WeiyiGeek.New pull request图\"></p>\n<p><br/></p>\n<p>步骤 07.当上一步完成后，将显示如下页面，此处需要注意的是 compare 处选择刚才提交上来的<code>dev-pr</code> 分支, 然后点击 <code>Create pull request.</code></p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/10/20221012213738.png\" alt=\"WeiyiGeek.Create pull request图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Create pull request图</p>\n            </figure>\n<p><br/></p>\n<p>步骤 08.填写本次提交PR的标题，以及建议的修改或新增的功能点等，完毕后提交（<code>Create pull request</code>）就 OK 啦。</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/10/20221012214101.png\" alt=\"WeiyiGeek.PR提交描述图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.PR提交描述图</p>\n            </figure>\n<p><br/></p>\n<p>步骤 09.提交PR完毕后，我们将会在原开源项目仓库的<code>pull request</code> 查看到我们提交的 PR 代码情况了。</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/10/20221012214713.png\" alt=\"WeiyiGeek.在源项目中查看提交的PR图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.在源项目中查看提交的PR图</p>\n            </figure>\n<p><br/></p>\n<p>步骤 10.上述演示在dev-pr分支中进行修改并提交了PR，当PR审核通过或者内部测试无问题时，此时将可以把其合并到 master 分支上，操作如下然后在FORK的项目中可以看到已经合并到主分支了。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">WeiyiGeek@WeiyiGeek MINGW64 /e/github/opensource/how-does-MobaXterm</span><br><span class=\"line\">-encrypt-password (dev-pr)</span><br><span class=\"line\">$ git checkout master</span><br><span class=\"line\">Switched to branch <span class=\"string\">'master'</span></span><br><span class=\"line\">Your branch is up to date with <span class=\"string\">'origin/master'</span>.</span><br><span class=\"line\"></span><br><span class=\"line\">WeiyiGeek@WeiyiGeek MINGW64 /e/github/opensource/how-does-MobaXterm-encrypt-password (master)</span><br><span class=\"line\">$ git merge dev-pr</span><br><span class=\"line\">Updating 462cd00..4d1c83c</span><br><span class=\"line\">Fast-forward</span><br><span class=\"line\"> python3/ShowMobaXterm.py | 16 +++++++---------</span><br><span class=\"line\"> 1 file changed, 7 insertions(+), 9 deletions(-)</span><br><span class=\"line\"></span><br><span class=\"line\">WeiyiGeek@WeiyiGeek MINGW64 /e/github/opensource/how-does-MobaXterm-encrypt-password (master)</span><br><span class=\"line\">$ git push</span><br><span class=\"line\">Total 0 (delta 0), reused 0 (delta 0), pack-reused 0</span><br><span class=\"line\">To github.com:WeiyiGeek/how-does-MobaXterm-encrypt-password.git</span><br><span class=\"line\">   462cd00..4d1c83c  master -&gt; master</span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/10/20221012220054.png\" alt=\"WeiyiGeek.分支合并图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.分支合并图</p>\n            </figure>\n<p><br/></p>\n<p><strong>补充说明: 关于check不通过的问题如何解决?</strong></p>\n<blockquote>\n<p>描述: github 有代码自己编译和 check 机制，在你提交 pr 的时候，项目可能已经有了比较大的变更(每天都有世界各地的 coder 提 pr)，而你没有将分支保持与项目同步，所以有可能会导致 check 失败，pr 被无视。<br>此时我们前面添加的<code>upstream</code>上游地址作用就展现出来了，他可以用于远程代码同步，所以每次提交 pr 前，都要先从做代码同步。</p>\n</blockquote>\n<p>过程如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 先 fetch 拉取项目最新代码，执行：</span></span><br><span class=\"line\">git fetch upstream</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 再 rebase 在另一个分支基础之上重新应用，用于把一个分支的修改合并到当前分支，执行：</span></span><br><span class=\"line\">git rebase upstream/develop</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 再 push develop 上传修改后的代码分支，执行：</span></span><br><span class=\"line\">git push origin develop</span><br></pre></td></tr></table></figure>\n<p>更详细的参与开源项目的开放，建议大家可以参考此篇文章[^pr]</p>\n<p>[^pr]: 如何参与开源项目 - 细说 GitHub 上的 PR 全过程: <a href=\"https://mp.weixin.qq.com/s/mY-1mDFvBkyHGBgI9KpGOA\" target=\"_blank\" rel=\"noopener\">https://mp.weixin.qq.com/s/mY-1mDFvBkyHGBgI9KpGOA</a> </p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"版本控制","path":"api/categories/版本控制.json"}],"tags":[{"name":"github","path":"api/tags/github.json"}]}