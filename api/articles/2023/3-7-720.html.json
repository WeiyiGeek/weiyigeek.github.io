{"title":"如何使用Powershell操作FTP进行数据文件自动上传备份","slug":"编程世界/Powershell/Project/使用Powershell操作FTP进行数据文件自动上传备份","date":"2023-03-07T07:36:30.000Z","updated":"2023-03-08T06:36:27.110Z","url":"2023/3-7-720.html","path":"api/articles/2023/3-7-720.html.json","covers":["https://img.weiyigeek.top/2023/1/20230307163350.png","https://img.weiyigeek.top/2023/1/20230307170840.png","https://img.weiyigeek.top/2023/1/20230307173350.png","https://img.weiyigeek.top/2023/1/20230307174513.png","https://img.weiyigeek.top/2023/1/20230308094016.png","https://img.weiyigeek.top/2023/1/20230308091429.png"],"content":"<p>[TOC]</p>\n<h2 id=\"0x00-前言简述\"><a href=\"#0x00-前言简述\" class=\"headerlink\" title=\"0x00 前言简述\"></a>0x00 前言简述</h2><p>描述: 在运维过程中会将服务器上数据文件备份在共享磁盘或者FTP服务器中，此处由于作者环境是在Windows系统上，且在业务上需要同步文件到FTP服务器中，遂有了此文，帮助各位看友了解，如何在Windows上使用Powershell脚本将数据备份文件自动上传的FTP服务器上?</p>\n<p>在下述实践中，我们可以使用三种方式进行数据文件上传到FTP服务器中。</p>\n<ul>\n<li>方式1.使用Powershell与Windows原生ftp客户端工具(仅仅支持主动模式)进行文件备份.</li>\n<li>方式2.使用Powershell中.NET的内置的FTP操作类 <code>System.Net.FtpWebRequest</code> 连接ftp服务器并进行备份文件上传.</li>\n<li>方式3.使用Powershell的PSFTP模块包连接ftp服务器并进行备份文件上传。</li>\n</ul>\n<a id=\"more\"></a>\n<p>项目地址（欢迎大家 star ，蟹蟹٩(‘ω’)و支持 ）: <a href=\"https://github.com/WeiyiGeek/SecOpsDev/\" target=\"_blank\" rel=\"noopener\">https://github.com/WeiyiGeek/SecOpsDev/</a></p>\n<p>下述实验室需要部署FTP服务器，若不了解的童鞋，可参考博主的FTP入门扫盲篇<code>《FTP远程文件传输服务安装与配置》</code>，文章地址: <a href=\"https://blog.weiyigeek.top/2019/10-4-74.html\">https://blog.weiyigeek.top/2019/10-4-74.html</a> </p>\n<p>或者参考此《使用Kubernetes容器快速部署常用服务》( <a href=\"https://blog.weiyigeek.top/2022/2-25-668.html\">https://blog.weiyigeek.top/2022/2-25-668.html</a> )文章快速使用 kubernetes 安装 vsftpd 服务，搭建ftp测试环境。</p>\n<p>废话不多说，实践为王！</p>\n<p>首发链接: <a href=\"https://mp.weixin.qq.com/s/YuaqncfbOsC3-wjCdikfBw\" target=\"_blank\" rel=\"noopener\">https://mp.weixin.qq.com/s/YuaqncfbOsC3-wjCdikfBw</a></p>\n<hr>\n<h2 id=\"0x01-实践演示\"><a href=\"#0x01-实践演示\" class=\"headerlink\" title=\"0x01 实践演示\"></a>0x01 实践演示</h2><h3 id=\"实践1-使用Powershell与Windows原生ftp客户端工具-仅仅支持主动模式-进行文件备份\"><a href=\"#实践1-使用Powershell与Windows原生ftp客户端工具-仅仅支持主动模式-进行文件备份\" class=\"headerlink\" title=\"实践1.使用Powershell与Windows原生ftp客户端工具(仅仅支持主动模式)进行文件备份.\"></a>实践1.使用Powershell与Windows原生ftp客户端工具(仅仅支持主动模式)进行文件备份.</h3><p><strong>代码示例:</strong><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2023/1/20230307163350.png\" alt=\"WeiyiGeek.使用Powershell与Windows原生ftp客户端备份图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.使用Powershell与Windows原生ftp客户端备份图</p>\n            </figure></p>\n<p><strong>温馨提示:</strong> 为了保障脚本中FTP密码的安全性，我将脚本中高敏感的账号密码进行编码存储（只能防君子，不能防小人😃）。<br><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 编码</span></span><br><span class=\"line\"><span class=\"variable\">$bytes</span> = [System.Text.Encoding]::Unicode.GetBytes(<span class=\"string\">\"weiyigeek\"</span>)</span><br><span class=\"line\"><span class=\"variable\">$str</span> = [System.Convert]::ToBase64String(<span class=\"variable\">$bytes</span>)</span><br><span class=\"line\">echo <span class=\"variable\">$str</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解码</span></span><br><span class=\"line\"><span class=\"variable\">$str</span> = <span class=\"string\">\"VwBlAGkAeQBpAEcAZQBlAGsAZQByAA==\"</span></span><br><span class=\"line\">[System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String(<span class=\"variable\">$str</span>))</span><br><span class=\"line\">[System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String(<span class=\"variable\">$str</span>)) | <span class=\"built_in\">Out-File</span> -Encoding <span class=\"string\">\"ASCII\"</span> plaintext.html</span><br></pre></td></tr></table></figure></p>\n<p>温馨提示: 获取上述示例代码或者脚本地址失效，请在【<code>全栈工程师修炼指南</code>】公众号回复 <code>PowerShell-FTP 或者 10000</code> 获取最新PowerShell的FTP同步脚本地址。<br>全栈工程师修炼指南: <a href=\"https://weiyigeek.top/wechat.html?key=全栈工程师修炼指南\" target=\"_blank\" rel=\"noopener\">https://weiyigeek.top/wechat.html?key=10000</a><br>注意提示: 在中文Windows下执行脚本默认为GBK，若是乱码请转为GBK或者其他编码模式。</p>\n<p><br/></p>\n<h3 id=\"实践2-使用Powershell中-NET的内置的FTP操作类-System-Net-FtpWebRequest-连接ftp服务器并进行备份文件上传\"><a href=\"#实践2-使用Powershell中-NET的内置的FTP操作类-System-Net-FtpWebRequest-连接ftp服务器并进行备份文件上传\" class=\"headerlink\" title=\"实践2.使用Powershell中.NET的内置的FTP操作类 System.Net.FtpWebRequest 连接ftp服务器并进行备份文件上传.\"></a>实践2.使用Powershell中.NET的内置的FTP操作类 <code>System.Net.FtpWebRequest</code> 连接ftp服务器并进行备份文件上传.</h3><p>描述: 在实践1中的方式由于windows自带的ftp客户端只支持（主动模式），对于FTP被动模式是没有办法的，此时我们可以采用如下方式进行被动模式下上传文件到FTP空间之中。</p>\n<p><strong>代码示例:</strong><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2023/1/20230307170840.png\" alt=\"WeiyiGeek.在PS中使用.NET的内置的FTP操作类图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.在PS中使用.NET的内置的FTP操作类图</p>\n            </figure></p>\n<p><strong>执行结果:</strong><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2023/1/20230307173350.png\" alt=\"WeiyiGeek.上传到FTP服务器中的备份文件图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.上传到FTP服务器中的备份文件图</p>\n            </figure></p>\n<p><br/></p>\n<p>温馨提示: 获取上述示例代码或者脚本地址失效，请在【<code>全栈工程师修炼指南</code>】公众号回复 <code>PowerShell-FTP 或者 10000</code> 获取最新PowerShell的FTP同步脚本地址。<br>全栈工程师修炼指南: <a href=\"https://weiyigeek.top/wechat.html?key=全栈工程师修炼指南\" target=\"_blank\" rel=\"noopener\">https://weiyigeek.top/wechat.html?key=10000</a><br>注意提示: 在中文Windows下执行脚本默认为GBK，若是乱码请转为GBK或者其他编码模式。</p>\n<p><br/></p>\n<p>为了实现脚本的自动执行，我们可以将其配置到计算机任务计划中，进行定时执行，操作流程如下：</p>\n<p>步骤 01.在开始-&gt;运行 命令行执行 taskschd.msc 命令 或者 打开任务计划程序。</p>\n<p>步骤 02.新建任务计划，创建基本任务，设置触发实践以及触发操作，如下图所示</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2023/1/20230307174513.png\" alt=\"WeiyiGeek.Windows下的定时任务图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Windows下的定时任务图</p>\n            </figure>\n<p><br/></p>\n<h3 id=\"实践3-使用Powershell的PSFTP模块包连接ftp服务器并进行备份文件上传。\"><a href=\"#实践3-使用Powershell的PSFTP模块包连接ftp服务器并进行备份文件上传。\" class=\"headerlink\" title=\"实践3.使用Powershell的PSFTP模块包连接ftp服务器并进行备份文件上传。\"></a>实践3.使用Powershell的PSFTP模块包连接ftp服务器并进行备份文件上传。</h3><p>描述: 通过上面实践我们了解到PowerShell本身并没了内置对FTP的支持，但是.net里面内置了FTP操作的类，但是确实自己来组合封装几个FTP操作类是不是比较费时。</p>\n<p>此时我只想偷懒，我去PowerShell Gallery里面搜寻一番后（ <a href=\"https://www.powershellgallery.com\" target=\"_blank\" rel=\"noopener\">https://www.powershellgallery.com</a> ），发现已经有人帮我造好轮子了即 <code>PSFTP 模块包</code>，既然这样那就不客气了，拿来开箱即用！</p>\n<p>在使用前我们需要安装 <code>PSFTP 模块包</code>，模块当前版本为 <code>1.7.1.1</code>，其作用是管理FTP帐户的功能。<br>模块地址: <a href=\"https://www.powershellgallery.com/packages/PSFTP/1.7.1.1\" target=\"_blank\" rel=\"noopener\">https://www.powershellgallery.com/packages/PSFTP/1.7.1.1</a> </p>\n<p><br/></p>\n<p><strong>安装：</strong><br>官网提供了三种安装方式，即在线命令安装、Azure云安装以及手动下载安装。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在线: 复制并粘贴以下命令以使用PowerShellGet更多信息安装此程序包。（可能受到环境影响，推荐）</span></span><br><span class=\"line\">PS&gt; Install-Module -Name PSFTP\t</span><br><span class=\"line\">  <span class=\"comment\"># 需要使用 NuGet 提供程序来继续操作</span></span><br><span class=\"line\">  <span class=\"comment\"># PowerShellGet 需要使用 NuGet 提供程序“2.8.5.201”或更高版本来与基于 NuGet 的存储库交互。必须在“C:\\Program</span></span><br><span class=\"line\">  <span class=\"comment\"># Files\\PackageManagement\\ProviderAssemblies”或“C:\\Users\\WeiyiGeek\\AppData\\Local\\PackageManagement\\ProviderAssemblies”</span></span><br><span class=\"line\">  <span class=\"comment\"># 中提供 NuGet 提供程序。也可以通过运行 'Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force' 安装 NuGet</span></span><br><span class=\"line\">  <span class=\"comment\">#  提供程序。是否要让 PowerShellGet 立即安装并导入 NuGet 提供程序?</span></span><br><span class=\"line\">    [Y] 是(Y)  [N] 否(N)  [S] 暂停(S)  [?] 帮助 (默认值为“Y”): Y</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 手动: 手动将.nupkg文件下载到系统的默认下载位置。（需要配置较多）</span></span><br><span class=\"line\"><span class=\"comment\"># https://psg-prod-eastus.azureedge.net/packages/psftp.1.7.1.1.nupkg</span></span><br><span class=\"line\">PS&gt; Install-Package  psftp.1.7.1.1.nupkg</span><br></pre></td></tr></table></figure><br><br/></p>\n<p><strong>验证</strong></p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装PSFTP包之后我们使用如下命令查看是否已经安装成功</span></span><br><span class=\"line\">PS&gt; <span class=\"built_in\">Get-Module</span> PSFTP -ListAvailable</span><br><span class=\"line\">  <span class=\"comment\"># 目录: C:\\Program Files\\WindowsPowerShell\\Modules</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># ModuleType Version    Name                                ExportedCommands</span></span><br><span class=\"line\">  <span class=\"comment\"># ---------- -------    ----                                ----------------</span></span><br><span class=\"line\">  <span class=\"comment\"># Manifest   1.7.1.1    PSFTP                               &#123;Add-FTPItem, Get-FTPChildItem, Get-FTPConnection, Get-FTPItem...&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看PSFTP工具里面都支持那些操作</span></span><br><span class=\"line\">PS&gt; <span class=\"built_in\">Get-Command</span> -FullyQualifiedModule PSFTP</span><br><span class=\"line\">  CommandType     Name                                               Version    Source</span><br><span class=\"line\">  -----------     ----                                               -------    ------</span><br><span class=\"line\">  Alias           Move-FTPItem                                       <span class=\"number\">1.7</span>.<span class=\"number\">1.1</span>    PSFTP</span><br><span class=\"line\">  Alias           Receive-FTPItem                                    <span class=\"number\">1.7</span>.<span class=\"number\">1.1</span>    PSFTP</span><br><span class=\"line\">  Alias           Send-FTPItem                                       <span class=\"number\">1.7</span>.<span class=\"number\">1.1</span>    PSFTP</span><br><span class=\"line\">  <span class=\"keyword\">Function</span>        Add-FTPItem                                        <span class=\"number\">1.7</span>.<span class=\"number\">1.1</span>    PSFTP</span><br><span class=\"line\">  <span class=\"keyword\">Function</span>        Get-FTPChildItem                                   <span class=\"number\">1.7</span>.<span class=\"number\">1.1</span>    PSFTP</span><br><span class=\"line\">  <span class=\"keyword\">Function</span>        Get-FTPConnection                                  <span class=\"number\">1.7</span>.<span class=\"number\">1.1</span>    PSFTP</span><br><span class=\"line\">  <span class=\"keyword\">Function</span>        Get-FTPItem                                        <span class=\"number\">1.7</span>.<span class=\"number\">1.1</span>    PSFTP</span><br><span class=\"line\">  <span class=\"keyword\">Function</span>        Get-FTPItemSize                                    <span class=\"number\">1.7</span>.<span class=\"number\">1.1</span>    PSFTP</span><br><span class=\"line\">  <span class=\"keyword\">Function</span>        New-FTPItem                                        <span class=\"number\">1.7</span>.<span class=\"number\">1.1</span>    PSFTP</span><br><span class=\"line\">  <span class=\"keyword\">Function</span>        Remove-FTPItem                                     <span class=\"number\">1.7</span>.<span class=\"number\">1.1</span>    PSFTP</span><br><span class=\"line\">  <span class=\"keyword\">Function</span>        Rename-FTPItem                                     <span class=\"number\">1.7</span>.<span class=\"number\">1.1</span>    PSFTP</span><br><span class=\"line\">  <span class=\"keyword\">Function</span>        Set-FTPConnection                                  <span class=\"number\">1.7</span>.<span class=\"number\">1.1</span>    PSFTP</span><br><span class=\"line\">  <span class=\"keyword\">Function</span>        Test-FTPItem                                       <span class=\"number\">1.7</span>.<span class=\"number\">1.1</span>    PSFTP</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看帮助命令</span></span><br><span class=\"line\">PS&gt; <span class=\"built_in\">Get-Help</span> Set-FTPConnection -Examples</span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<p><strong>命令行实践</strong><br>描述: 此处我按照文章首部的地址，进行安装了ftp测试环境，其FTP链接环境信息如下：</p>\n<blockquote>\n<p>IP: 10.20.176.215<br>Port: 30021<br>User: weiyigeek<br>Pass: password</p>\n</blockquote>\n<p>首先，利用Windows中原生的ftp客户端工具链接测试（PS: 如果是使用Linux登录就不存在问题）：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS L:\\WeiyiGeek&gt; ftp</span><br><span class=\"line\">ftp&gt; open 10.20.176.215 30021</span><br><span class=\"line\">连接到 10.20.176.215。</span><br><span class=\"line\">220 (vsFTPd 3.0.2)</span><br><span class=\"line\">200 Always <span class=\"keyword\">in</span> UTF8 mode.</span><br><span class=\"line\">用户(10.20.176.215:(none)): weiyigeek</span><br><span class=\"line\">331 Please specify the password.</span><br><span class=\"line\">密码:</span><br><span class=\"line\">230 Login successful.</span><br><span class=\"line\">ftp&gt; dir</span><br><span class=\"line\">500 Illegal PORT <span class=\"built_in\">command</span>.</span><br><span class=\"line\">425 Use PORT or PASV first. <span class=\"comment\"># 可看到不支持被动模式。</span></span><br></pre></td></tr></table></figure></p>\n<p>然后，我们手动使用PSFTP模块进行被动链接测试：<br><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 配置 PowerShell 执行策略导入安装的PSFTP模块</span></span><br><span class=\"line\"><span class=\"built_in\">Set-executionpolicy</span> remotesigned</span><br><span class=\"line\"><span class=\"built_in\">Import-Module</span> PSFTP</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ftp 认证票据生成</span></span><br><span class=\"line\"><span class=\"variable\">$FTPConnect</span> = <span class=\"string\">\"ftp://10.20.176.215:30021\"</span>  <span class=\"comment\"># FTP 服务器链接字符串</span></span><br><span class=\"line\"><span class=\"variable\">$FTPUser</span> = <span class=\"string\">\"weiyigeek\"</span> </span><br><span class=\"line\"><span class=\"variable\">$FTPPass</span> = <span class=\"built_in\">ConvertTo-SecureString</span> -String <span class=\"string\">\"password\"</span> -AsPlainText -Force</span><br><span class=\"line\"><span class=\"variable\">$FTPCre</span> = <span class=\"built_in\">New-Object</span> -TypeName System.Management.Automation.PSCredential -ArgumentList <span class=\"variable\">$FTPUser</span>, <span class=\"variable\">$FTPPass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 连接到 ftp 服务器链接 (被动链接)</span></span><br><span class=\"line\">Set-FTPConnection -Credentials <span class=\"variable\">$FTPCre</span> -Server <span class=\"variable\">$FTPConnect</span> -UsePassive</span><br><span class=\"line\">  <span class=\"comment\"># 执行结果：</span></span><br><span class=\"line\">    <span class=\"comment\"># ContentLength           : -1</span></span><br><span class=\"line\">    <span class=\"comment\"># Headers                 : &#123;&#125;</span></span><br><span class=\"line\">    <span class=\"comment\"># SupportsHeaders         : True</span></span><br><span class=\"line\">    <span class=\"comment\"># ResponseUri             : ftp://10.20.176.215:30021/</span></span><br><span class=\"line\">    <span class=\"comment\"># StatusCode              : ClosingData</span></span><br><span class=\"line\">    <span class=\"comment\"># StatusDescription       : 226 Directory send OK.</span></span><br><span class=\"line\">    <span class=\"comment\"># LastModified            : 0001/1/1 0:00:00</span></span><br><span class=\"line\">    <span class=\"comment\"># BannerMessage           : 220 (vsFTPd 3.0.2)</span></span><br><span class=\"line\">    <span class=\"comment\"># WelcomeMessage          : 230 Login successful.</span></span><br><span class=\"line\">    <span class=\"comment\"># ExitMessage             : 221 Goodbye.</span></span><br><span class=\"line\">    <span class=\"comment\"># IsFromCache             : False</span></span><br><span class=\"line\">    <span class=\"comment\"># IsMutuallyAuthenticated : False</span></span><br><span class=\"line\">    <span class=\"comment\"># ContentType             :</span></span><br></pre></td></tr></table></figure></p>\n<p>最后，我们使用PSFTP进行文件管理:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.添加/上传文件 - Add-FTPItem (Send-FTPItem)</span></span><br><span class=\"line\">Send-FTPItem -LocalPath .\\console.log</span><br><span class=\"line\">Send-FTPItem -LocalPath .\\weiyigeek.txt -Overwrite</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.新建目录 - New-FTPItem</span></span><br><span class=\"line\">New-FTPItem -Name weiyigeek</span><br><span class=\"line\"><span class=\"comment\"># - 指定目录创建子目录</span></span><br><span class=\"line\">New-FTPItem -Name subdir -Path <span class=\"variable\">$FTPConnect</span>/weiyigeek </span><br><span class=\"line\">  <span class=\"comment\"># 257 \"/weiyigeek/subdir\" created</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.获取目录下面的文件、子目录 - Get-FTPChildItem</span></span><br><span class=\"line\">Get-FTPChildItem</span><br><span class=\"line\">  <span class=\"comment\">#     Parent:ftp://10.20.176.215:30021</span></span><br><span class=\"line\">  <span class=\"comment\"># Dir Right     Ln  User   Group  Size   ModifiedDate        Name</span></span><br><span class=\"line\">  <span class=\"comment\"># --- -----     --  ----   -----  ----   ------------        ----</span></span><br><span class=\"line\">  <span class=\"comment\"># d   rwx------ 2   ftp    ftp           2023/3/7 11:17:00   weiygeek</span></span><br><span class=\"line\">  <span class=\"comment\"># -   rw------- 1   ftp    ftp    18KB   2023/3/7 11:11:00   console.log</span></span><br><span class=\"line\">  <span class=\"comment\"># -   rw------- 1   ftp    ftp    2KB    2023/3/7 11:12:00   ls.txt</span></span><br><span class=\"line\">Get-FTPChildItem -Path subdir  <span class=\"comment\"># 指定目录</span></span><br><span class=\"line\">Get-FTPChildItem -Recurs -Depth 1     <span class=\"comment\"># 递归返回所有信息</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4.下载文件 - Get-FTPItem（Receive-FTPItem）</span></span><br><span class=\"line\"><span class=\"comment\"># - 下载image.png到当前目录</span></span><br><span class=\"line\">Get-FTPItem weiyigeek.png</span><br><span class=\"line\"><span class=\"comment\"># - 下载image.png到指定目录</span></span><br><span class=\"line\">Get-FTPItem weiyigeek.png -LocalPath D:\\download</span><br><span class=\"line\"><span class=\"comment\"># - 下载image.png到指定目录，如果指定目录不存在自动创建</span></span><br><span class=\"line\">Get-FTPItem weiyigeek.png -LocalPath D:\\download\\1\\2\\3\\4\\5 -RecreateFolders</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5.获取文件大小 - Get-FTPItemSize</span></span><br><span class=\"line\">(Get-FTPItemSize console.log)/1000</span><br><span class=\"line\">18.781</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 6.删除文件 - Remove-FTPItem</span></span><br><span class=\"line\">Remove-FTPItem .\\ls.txt</span><br><span class=\"line\">  <span class=\"comment\"># -&gt;Remove File: ftp://10.20.176.215:30021/.\\ls.txt</span></span><br><span class=\"line\">  <span class=\"comment\"># 250 Delete operation successful.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 7.重命名文件或者目录 - Rename-FTPItem（Move-FTPItem）</span></span><br><span class=\"line\">Rename-FTPItem -Path .\\console.log -NewName weiyigeek.top.log</span><br><span class=\"line\">  <span class=\"comment\"># 250 Rename successful.</span></span><br></pre></td></tr></table></figure>\n<p>是不是，感觉比实践2中.net实现方便多了，所以用起来是真的舒服，实际上它是将.net中的方法进行了封装。</p>\n<p><br/></p>\n<p><strong>项目实践:</strong><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2023/1/20230308094016.png\" alt=\"WeiyiGeek.PSFTP模块实践自动上传备份文件代码图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.PSFTP模块实践自动上传备份文件代码图</p>\n            </figure></p>\n<p><strong>执行结果:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS D:\\Tools&gt; .\\DB-Backup-To-FTP-Use-PSFTP-Package.ps1</span><br><span class=\"line\">[03/08/2023 09:09:08] 当前数据库备份文件 qchatgpt.legacy.log ，写入 ./upload.txt 文件中!</span><br><span class=\"line\">[03/08/2023 09:09:08] 当前数据库备份文件 qchatgpt.legacy.log , 上次数据库备份文件 logs 名称, 上传标识 1 .</span><br><span class=\"line\">230 Login successful.</span><br><span class=\"line\"></span><br><span class=\"line\">   Parent:ftp://10.20.176.215:30021/weiyigeek/qchatgpt.legacy.log</span><br><span class=\"line\"></span><br><span class=\"line\">Dir Right     Ln  User   Group  Size   ModifiedDate        Name</span><br><span class=\"line\">--- -----     --  ----   -----  ----   ------------        ----</span><br><span class=\"line\">-   rw------- 1   ftp    ftp    34KB   2023/3/8 1:09:00    qchatgpt.legacy.log</span><br><span class=\"line\">[03/08/2023 09:09:08] Upload Status:</span><br><span class=\"line\">Upload File /weiyigeek/qchatgpt.legacy.log successful!</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2023/1/20230308091429.png\" alt=\"WeiyiGeek.使用PSFTP模块实践图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.使用PSFTP模块实践图</p>\n            </figure></p>\n<p><br/></p>\n<p>温馨提示: 获取上述示例代码或者脚本地址失效，请在【<code>全栈工程师修炼指南</code>】公众号回复 <code>PowerShell-FTP 或者 10000</code> 获取最新PowerShell的FTP同步脚本地址。<br>全栈工程师修炼指南: <a href=\"https://weiyigeek.top/wechat.html?key=全栈工程师修炼指南\" target=\"_blank\" rel=\"noopener\">https://weiyigeek.top/wechat.html?key=10000</a><br>注意提示: 在中文Windows下执行脚本默认为GBK，若是乱码请转为GBK或者其他编码模式。</p>\n<p><br/></p>\n<p>本文介绍了PowerShell操作FTP的方法，以及使用.net 提供的类来访问FTP。</p>\n<p>好了，本章到此介绍，感兴趣的朋友请继续研究吧!</p>\n","comments":true,"excerpt":"[TOC]0x00 前言简述描述: 在运维过程中会将服务器上数据文件备份在共享磁盘或者FTP服务器中，此处由于作者环境是在Windows系统上，且在业务上需要同步文件到FTP服务器中，遂有了此文，帮助各位看友了解，如何在Windows上使用Powershell脚本将数据备份文件自动上传的FTP服务器上?在下述实践中，我们可以使用三种方式进行数据文件上传到FTP服务器中。方式1.使用Powershell与Windows原生ftp客户端工具(仅仅支持主动模式)进行文件备份.方式2.使用Powershell中.NET的内置的FTP操作类 System.Net.FtpWebRequest 连接ftp服务器并进行备份文件上传.方式3.使用Powershell的PSFTP模块包连接ftp服务器并进行备份文件上传。","categories":[{"name":"Development","path":"api/categories/Development.json"}],"tags":[{"name":"Powershell","path":"api/tags/Powershell.json"},{"name":"Project","path":"api/tags/Project.json"}]}