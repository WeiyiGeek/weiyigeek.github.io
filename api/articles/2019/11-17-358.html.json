{"title":"PS编程补充说明","slug":"编程世界/Powershell/Program/PS编程补充说明","date":"2019-11-17T13:57:50.000Z","updated":"2022-04-13T02:53:37.559Z","url":"2019/11-17-358.html","path":"api/articles/2019/11-17-358.html.json","covers":null,"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h3 id=\"3-运行脚本\"><a href=\"#3-运行脚本\" class=\"headerlink\" title=\"3.运行脚本\"></a>3.运行脚本</h3><p>描述： 脚本和批处理都属于<code>伪可执行文件</code>，它们只是包含了若干命令行解释器能够<code>解释和执行</code>的命令行代码。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.执行批处理文件：批处理是扩展名为”.bat”的文本文件，它可以包含任何cmd控制台能够处理的命令</span></span><br><span class=\"line\">PS C:\\PS&gt; ./ping  <span class=\"comment\">#实际执行ping.bat</span></span><br><span class=\"line\">batch File Test</span><br><span class=\"line\">Press any key to <span class=\"built_in\">continue</span> . . .</span><br><span class=\"line\"> Volume <span class=\"keyword\">in</span> drive C has no label.</span><br><span class=\"line\"> Volume Serial Number is 4E9B-D846</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.执行VB脚本文件,执行.\\test.vbs 会遍历当前Win32进程，并把每个进程的详细信息通过窗口显示出来。</span></span><br><span class=\"line\">Set wmi = GetObject(<span class=\"string\">\"winmgmts:\"</span>)</span><br><span class=\"line\">Set collection = wmi.ExecQuery(<span class=\"string\">\"select * from Win32_Process\"</span>)</span><br><span class=\"line\">For Each process <span class=\"keyword\">in</span> collection</span><br><span class=\"line\">WScript.Echo process.getObjectText_</span><br><span class=\"line\">Next</span><br><span class=\"line\"></span><br><span class=\"line\">PS C:\\PS&gt; cscript.exe .test.vbs <span class=\"comment\">#PS执行VB脚本</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.执行powershell脚本扩展名为“.ps1”</span></span><br><span class=\"line\">PS C:\\PS&gt; <span class=\"built_in\">echo</span> <span class=\"string\">\"dir;Get-PSProvider;help dir\"</span> &gt;test.ps1</span><br><span class=\"line\">PS C:\\PS&gt; Get-Content ./test.ps1</span><br><span class=\"line\">dir;Get-PSProvider;<span class=\"built_in\">help</span> dir</span><br><span class=\"line\">PS C:\\PS&gt; ./test.ps1</span><br></pre></td></tr></table></figure>\n<p><em>注意事项:</em></p>\n<ul>\n<li>初次执行PS1脚本时可能会碰到一个异常,由于默认安全设置禁用了执行脚本，要启用这个功能需要拥有管理员的权限。</li>\n</ul>\n<p>$C = Get-Culture | Select-Object -Property *</p>\n<p>@{TestKey = (‘x’ * 200)} | Out-String -Width 250</p>\n<p>PS C:\\Users\\WeiyiGeek&gt; Get-Command -Name *Printer</p>\n<p>CommandType     Name                                               Version    Source                                                                                        </p>\n<hr>\n<p>Function        Add-Printer                                        1.1        PrintManagement<br>Function        Get-Printer                                        1.1        PrintManagement<br>Function        Remove-Printer                                     1.1        PrintManagement<br>Function        Rename-Printer                                     1.1        PrintManagement<br>Function        Set-Printer                                        1.1        PrintManagement<br>Cmdlet          Out-Printer                                        3.1.0.0    Microsoft.PowerShell.Utility                                                                  </p>\n<p>选择对象的属性</p>\n<p>包含在每一个对象中的属性可能有很多，但是并不是所有的属性你都感兴趣，这时可以使用Select-Object 限制对象的属性。接下来的例子演示如果获取机器上匿名帐号的完整信息。</p>\n<p>PS C:Usersv-bali.FAREAST&gt; Get-WmiObject Win32_UserAccount -filter “LocalAccount=True AND Name=’guest’”</p>\n<p>AccountType  : 512<br>Caption          : myhomeguest<br>Domain          : myhome<br>SID                : S-1-5-21-3064017030-3269374297-2491181182-501<br>FullName       :<br>Name        : guest</p>\n<p>如果你只对用户名、描述，启用感兴趣。</p>\n<p>PS C:Powershell&gt; Get-WmiObject Win32_UserAccount -filter “LocalAccount=True AND<br> Name=’guest’” | Select-Object Name,Description,Disabled</p>\n<p>Name                       Description                                 Disabled</p>\n<hr>\n<p>guest                      Built-in account for gu…                      True</p>\n<p> #使用比较运算符”like”过滤当前应用的数组, 这里可以用比较运算符结合控制台命令匹配出所有条件。<br> @(ipconfig /all) -like “<em>IPV4</em>“<br>  pageid: 327<br>   IPv4 地址 . . . . . . . . . . . . : 192.168.1.88(首选)</p>\n<p>形用户界面<br>Cmdlet</p>\n<pre><code>Out-GridView\n\nShow-Command\n\nShow-ControlPanelItem\n\nShow-EventLog\n</code></pre><p>参数</p>\n<p>PS编程之命令行参数传递与绑定:</p>\n<ul>\n<li><p>方法1:$args <code>参数位置传值法</code>它实际是一个对象数组，注意输入参数的位置是固定的并且<code>$args[0]</code>表示<code>命令中输入的第一个参数</code>并非脚本名称(<code>与Bash Shell有区别</code>)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># args.ps1 文件内容</span></span><br><span class=\"line\">Write-Host <span class=\"variable\">$args</span>[0] </span><br><span class=\"line\">Write-Host <span class=\"variable\">$args</span>[1]</span><br><span class=\"line\">Write-Host <span class=\"variable\">$args</span>[2] </span><br><span class=\"line\">Write-Host <span class=\"string\">\"命令行:<span class=\"variable\">$args</span>\"</span>  <span class=\"comment\">#注意在\"\"之中 $args[0] 加入没有任何意义，它只会解析$args 数组;</span></span><br><span class=\"line\">Write-Host -noNewLine <span class=\"string\">\"命令行:\"</span> <span class=\"variable\">$args</span>[0] <span class=\"variable\">$args</span>[1] <span class=\"variable\">$args</span>[2]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#执行</span></span><br><span class=\"line\"><span class=\"variable\">$args</span>.ps1 1  <span class=\"string\">\"参数2\"</span>  param3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#执行结果</span></span><br><span class=\"line\">1</span><br><span class=\"line\">参数2</span><br><span class=\"line\">param3</span><br><span class=\"line\">命令行:1 参数2 param3</span><br><span class=\"line\">命令行:1 参数2 param3</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>方法2:CmdletBinding <code>脚本内部变量名</code>,适合于传递多个参数值可以指定参数名称，并且参数值的位置随机。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># DeployBuildEnv.ps1 文件内容</span></span><br><span class=\"line\">[CmdletBinding()]</span><br><span class=\"line\">Param (</span><br><span class=\"line\">  [string] <span class=\"variable\">$Name</span> = <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">  [Int32] <span class=\"variable\">$Age</span> = 0,</span><br><span class=\"line\">  [string] <span class=\"variable\">$Gender</span> = <span class=\"string\">\"未知\"</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$arg</span> = <span class=\"variable\">$Name</span> + <span class=\"string\">\" - \"</span> + <span class=\"variable\">$age</span> + <span class=\"string\">\" - \"</span> + <span class=\"variable\">$Gender</span>;</span><br><span class=\"line\">Write-Host <span class=\"variable\">$arg</span></span><br><span class=\"line\">Write-Host <span class=\"string\">\"命令行绑定: <span class=\"variable\">$arg</span>\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#执行</span></span><br><span class=\"line\">.\\DeployBuildEnv.ps1 -Name WeiyiGeek -Age 20 -Gender 男</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#执行结果</span></span><br><span class=\"line\">WeiyiGeek - 20 - 男</span><br><span class=\"line\">命令行绑定: WeiyiGeek - 20 - 男</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><em>注意事项:</em></p>\n<ul>\n<li>#必须放在脚本最上面否则报错CmdletBinding</li>\n<li>PS命令行支持：单引号，双引号，中文的单引号，中文的双引号 ,以及中文变量名，中文参数名(<code>linux版的powershell也完全支持</code>)。</li>\n</ul>\n<p>模块查找与安装:<br>Tips:<a href=\"https://www.microsoft.com/en-us/download/details.aspx?id=51451\" target=\"_blank\" rel=\"noopener\">没有该find-module模块的点击</a>，注意需要以管理员权限运行;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 模块查找</span></span><br><span class=\"line\">find-module *ssh*</span><br><span class=\"line\"><span class=\"comment\"># Version    Name                                Repository           Description                                                                                                              </span></span><br><span class=\"line\"><span class=\"comment\"># -------    ----                                ----------          -----------                                                                                                              </span></span><br><span class=\"line\"><span class=\"comment\"># 2.2        Posh-SSH                            PSGallery            Provide SSH and SCP functionality for executing commands against remote hosts.</span></span><br><span class=\"line\"><span class=\"comment\"># 0.0.3      dockeraccesshelper                  PSGallery            Allow a user account to access the docker engine without elevated access rights</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装Posh-SSH的模块</span></span><br><span class=\"line\">Install-Module Posh-SSH</span><br><span class=\"line\"><span class=\"comment\"># 你正在从不受信任的存储库安装模块。如果你信任该存储库，请通过运行 Set-PSRepository cmdlet 更改其 InstallationPolicy</span></span><br><span class=\"line\"><span class=\"comment\"># 值。是否确实要从“PSGallery”安装模块?</span></span><br><span class=\"line\">[Y] 是(Y)  [A] 全是(A)  [N] 否(N)  [L] 全否(L)  [S] 暂停(S)  [?] 帮助 (默认值为“N”): y</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除模块</span></span><br><span class=\"line\"><span class=\"comment\"># 删除Posh-SSH的目录：C:\\Program Files\\WindowsPowerShell\\Modules\\Posh-SSH</span></span><br><span class=\"line\">remove-module -name posh-ssh -Force -Verbose -Debug</span><br></pre></td></tr></table></figure></p>\n<p>#查看模块命令<br>get-command -Module posh-ssh  </p>\n<p>在PowerShell中如何检测模块是否存在</p>\n<p>我们可以使用Get-Module的另一个参数-ListAvailable来列出是否含有潜在的模块。<br>Get-Module -ListAvailable -Name Azure</p>\n<p>Powershell检测网络中存活地址<br><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 方式1 </span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"variable\">$i</span>=<span class=\"number\">1</span>; <span class=\"variable\">$i</span> <span class=\"nomarkup\">-le</span> <span class=\"number\">255</span>; <span class=\"variable\">$i</span>++)&#123;</span><br><span class=\"line\">  ping -n <span class=\"number\">3</span> <span class=\"number\">10.0</span>.<span class=\"number\">0</span>.<span class=\"variable\">$i</span> &gt;&gt; Paddr.txt</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方式2</span></span><br><span class=\"line\"><span class=\"variable\">$Ping</span> = <span class=\"built_in\">New-Object</span> system.net.networkinformation.ping </span><br><span class=\"line\"><span class=\"number\">1</span>..<span class=\"number\">253</span> | % &#123; <span class=\"variable\">$Ping</span>.send( <span class=\"string\">\"192.168.12.<span class=\"variable\">$_</span>\"</span> ) | select address,status&#125; | <span class=\"built_in\">Out-File</span> -FilePath IPaddr.txt -Encoding utf8</span><br><span class=\"line\"><span class=\"variable\">$IP</span> = <span class=\"built_in\">Get-Content</span> <span class=\"string\">\"IPaddr.txt\"</span> | <span class=\"built_in\">Where-Object</span> &#123; <span class=\"variable\">$_</span> <span class=\"nomarkup\">-match</span> <span class=\"string\">\"Success\"</span> &#125; </span><br><span class=\"line\">-split <span class=\"variable\">$IP</span> | <span class=\"built_in\">Where-Object</span> &#123; <span class=\"variable\">$_</span>  <span class=\"nomarkup\">-like</span>  <span class=\"string\">\"192*\"</span> &#125; |  <span class=\"built_in\">Out-File</span> -FilePath IP-Successful.txt -Encoding utf8</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$hostname</span> = <span class=\"keyword\">foreach</span> ( <span class=\"variable\">$i</span>  <span class=\"keyword\">in</span>  <span class=\"variable\">$IPS</span> ) &#123; [System.Net.DNS]::GetHostByAddress(<span class=\"variable\">$i</span>).HostName;<span class=\"variable\">$i</span>&#125;</span><br><span class=\"line\"><span class=\"variable\">$hostname</span> </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> [System.Net.DNS]::GetHostName() </span><br><span class=\"line\"></span><br><span class=\"line\"> [System.Net.DNS]::GetHostAddresses(<span class=\"string\">\"192.168.12.188\"</span>) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">188</span>..<span class=\"number\">199</span> | % &#123; [System.Net.DNS]::GetHostEntry(<span class=\"string\">\"192.168.12.194\"</span>).HostName; &#125;</span><br><span class=\"line\"><span class=\"number\">188</span>..<span class=\"number\">199</span> | % &#123; [System.Net.DNS]::GetHostEntry(<span class=\"string\">\"192.168.12.<span class=\"variable\">$_</span>\"</span>).HostName; &#125;</span><br><span class=\"line\">HostName        Aliases AddressList</span><br><span class=\"line\">--------        ------- -----------</span><br><span class=\"line\">USER-MVFI1L2V69 &#123;&#125;      &#123;fe80::<span class=\"number\">5936</span>:<span class=\"number\">33</span>a7:<span class=\"number\">29</span>bf:<span class=\"number\">7</span>d6e%<span class=\"number\">5</span>, <span class=\"number\">192.168</span>.<span class=\"number\">12.188</span>&#125;</span><br></pre></td></tr></table></figure></p>\n<p><a href=\"https://docs.microsoft.com/zh-cn/dotnet/api/system.net.dns?view=netcore-3.1\" target=\"_blank\" rel=\"noopener\">https://docs.microsoft.com/zh-cn/dotnet/api/system.net.dns?view=netcore-3.1</a></p>\n<p>下面再附带两个循环读取一个文件夹下的所有子文件夹下的、所有的文件个数的代码：</p>\n<p>Get-ChildItem -Path $env:windir -Force -Recurse -ErrorAction SilentlyContinue |<br> Where-Object { $_.PSIsContainer -eq $false } |<br> Measure-Object |<br> Select-Object -ExpandProperty Count</p>\n<p>[System.IO.Directory]::GetFiles(“F:\\gzkz-2020\\new”, “*”, “AllDirectories”).Count</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">param</span><br><span class=\"line\">(</span><br><span class=\"line\">    [Parameter(Mandatory&#x3D;$true)][string]$DnsName,</span><br><span class=\"line\">    [Parameter(Mandatory&#x3D;$true)][string]$UserName,</span><br><span class=\"line\">    [string]$RoleName&#x3D;$null,</span><br><span class=\"line\">    [string]$InstanceName&#x3D;$null,</span><br><span class=\"line\">    [switch]$ManagementServer,</span><br><span class=\"line\">    [switch]$Agent</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$PDF_DIR&#x3D;&quot;C:\\Users\\WeiyiGeek\\Desktop\\123\\2021年10月自考答案pdf&quot;</span><br><span class=\"line\"># PDF 批量更名</span><br><span class=\"line\">function PDF_copy() &#123;</span><br><span class=\"line\">   Write-Output &quot;# 正在更名 $&#123;PDF_DIR&#125; 目录中的PDF文件到..\\rename目录中....&quot;</span><br><span class=\"line\">   foreach ( $pdf in (Get-ChildItem &quot;$&#123;PDF_DIR&#125;&quot; -Filter *.PDF).Name )&#123;</span><br><span class=\"line\">     $sub &#x3D; $pdf.Substring(5,5)+&quot;.pdf&quot;</span><br><span class=\"line\">     Write-Host &quot;$pdf -&gt; $sub&quot; -ForegroundColor Green</span><br><span class=\"line\">     Copy-Item -Path &quot;$&#123;PDF_DIR&#125;\\$&#123;pdf&#125;&quot; -Destination &quot;..\\rename\\$&#123;sub&#125;&quot; -Recurse -Force</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># PDF 批量打印</span><br><span class=\"line\">$PDF_DIR&#x3D;&quot;C:\\Users\\WeiyiGeek\\Desktop\\123\\123&quot;</span><br><span class=\"line\">function PDF_print()&#123;</span><br><span class=\"line\">    Write-Output &quot;# 正在打印 $&#123;PDF_DIR&#125; 目录中的PDF文件....&quot;</span><br><span class=\"line\">    foreach ( $pdf in (Get-ChildItem &quot;$&#123;PDF_DIR&#125;&quot; -Filter *.PDF).FullName )</span><br><span class=\"line\">    &#123; </span><br><span class=\"line\">       Write-Output &quot;$&#123;pdf&#125;&quot;</span><br><span class=\"line\">       Start-Process -FilePath &quot;C:\\Program Files (x86)\\Adobe\\Acrobat Reader DC\\Reader\\AcroRd32.exe&quot; -ArgumentList &quot;&#x2F;h &#x2F;p $&#123;pdf&#125;&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">PDF_print</span><br><span class=\"line\">PDF_copy</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">$SRCDIR&#x3D;&quot;\\\\10.10.108.250\\PhotoShare\\ZK202104\\dtk\\pic\\&quot;</span><br><span class=\"line\">$YX&#x3D;&quot;cs&quot;,&quot;cy&quot;,&quot;gs&quot;,&quot;jt&quot;,&quot;kj&quot;,&quot;lg&quot;,&quot;wl&quot;,&quot;xn&quot;,&quot;xz&quot;</span><br><span class=\"line\">foreach ( $xx in $YX) &#123;</span><br><span class=\"line\"> $diskname &#x3D; (get-Volume -FileSystemLabel $xx).DriveLetter</span><br><span class=\"line\"> $srcyx &#x3D; &quot;$&#123;SRCDIR&#125;$&#123;xx&#125;&quot;</span><br><span class=\"line\"> echo $srcyx - &quot;$&#123;diskname&#125;:\\&quot;</span><br><span class=\"line\"> Copy-Item -Path &quot;$srcyx&quot; -Destination &quot;$&#123;diskname&#125;:&#x2F;&quot; -Force -Recurse</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$SRCDIR&#x3D;&quot;\\\\10.10.108.250\\PhotoShare\\ZK202104\\zkyx\\&quot;</span><br><span class=\"line\">$YX&#x3D;&quot;cs&quot;,&quot;cy&quot;,&quot;gs&quot;,&quot;jt&quot;,&quot;kj&quot;,&quot;lg&quot;,&quot;wl&quot;,&quot;xn&quot;,&quot;xz&quot;</span><br><span class=\"line\">foreach ( $xx in $YX) &#123;</span><br><span class=\"line\"> $diskname &#x3D; (get-Volume -FileSystemLabel $xx).DriveLetter</span><br><span class=\"line\"> $srcyx &#x3D; &quot;$&#123;SRCDIR&#125;$&#123;xx&#125;\\*&quot;</span><br><span class=\"line\"> echo &quot;$srcyx - $&#123;diskname&#125;:\\&quot;</span><br><span class=\"line\"> Copy-Item -Path &quot;$srcyx&quot; -Destination &quot;$&#123;diskname&#125;:&#x2F;&quot; -Force -Recurse</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS C:/Documents and Settings/Administrator&gt; ./Convert-Image.ps1 -inFile <span class=\"number\">01</span>.jpg</span><br><span class=\"line\"></span><br><span class=\"line\">GAC    Version        Location</span><br><span class=\"line\">---    -------        --------</span><br><span class=\"line\">True   v2.<span class=\"number\">0.50727</span>     C:/WINDOWS/assembly/GAC_MSIL/System.Drawing/<span class=\"number\">2.0</span>.<span class=\"number\">0.0</span>__b03f5f7f11d50a3a/System.Drawing.dll</span><br><span class=\"line\"></span><br><span class=\"line\">LastWriteTime : <span class=\"number\">2008</span>-<span class=\"number\">7</span>-<span class=\"number\">25</span> <span class=\"number\">22</span>:<span class=\"number\">05</span>:<span class=\"number\">36</span></span><br><span class=\"line\">Length        : <span class=\"number\">135580</span></span><br><span class=\"line\">Name          : <span class=\"number\">01</span>.gif</span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"></span><br><span class=\"line\">代码如下:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Convert one graphic image to another</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">param</span> ( <span class=\"variable\">$inFile</span>, <span class=\"variable\">$type</span> = <span class=\"string\">\"gif\"</span>, <span class=\"variable\">$outFile</span>, [switch]<span class=\"variable\">$force</span> )</span><br><span class=\"line\"></span><br><span class=\"line\">[reflection.assembly]::LoadWithPartialName(<span class=\"string\">\"System.drawing\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># First check to see if our input file exists</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$iFile</span> = (<span class=\"built_in\">resolve-path</span> <span class=\"variable\">$inFile</span> -ea silentlycontinue ).path</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> ( ! <span class=\"variable\">$iFile</span> ) &#123; <span class=\"string\">\"File '<span class=\"variable\">$inFile</span>' not found, exiting\"</span> ; <span class=\"keyword\">exit</span> &#125; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># now check to see if the output file exists, if force</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># we will continue, otherwise we exit</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> ( ! <span class=\"variable\">$outFile</span> )</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$tFile</span> = <span class=\"built_in\">get-item</span> (<span class=\"built_in\">resolve-path</span> <span class=\"variable\">$inFile</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$outFile</span> = <span class=\"variable\">$tFile</span>.Fullname <span class=\"nomarkup\">-replace</span> (<span class=\"variable\">$tFile</span>.Extension + <span class=\"string\">\"`$\"</span>),<span class=\"string\">\".<span class=\"variable\">$type</span>\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> ( (<span class=\"built_in\">test-path</span> <span class=\"variable\">$outFile</span>) -and (! <span class=\"variable\">$force</span>) ) &#123; <span class=\"string\">\"File '<span class=\"variable\">$outFile</span>' exists, exiting\"</span>; <span class=\"keyword\">exit</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># make sure we have an encoder before changing anything on</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># the filesystem</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$codecs</span> = [drawing.imaging.ImageCodecInfo]::GetImageEncoders() |</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> &#123; <span class=\"variable\">$h</span> = @&#123;&#125; &#125; &#123; <span class=\"variable\">$h</span>.(<span class=\"variable\">$_</span>.formatdescription) = <span class=\"variable\">$_</span> &#125; &#123; <span class=\"variable\">$h</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$encoder</span> = <span class=\"variable\">$codecs</span>.<span class=\"variable\">$type</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> ( ! <span class=\"variable\">$encoder</span> )</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">\"No encoder of type '<span class=\"variable\">$type</span>', exiting\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">\"Available encodings are: \"</span> + [string]::Join(<span class=\"string\">\", \"</span>, <span class=\"variable\">$h</span>.keys)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">exit</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># This hoop is needed because resolve-path needs</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># the file to actually exist.  We shouldn't get here</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># unless the file doesn't exist, or we're going to remove it</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># by force.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> ( <span class=\"built_in\">test-path</span> <span class=\"variable\">$outFile</span> ) &#123; <span class=\"built_in\">remove-item</span> <span class=\"variable\">$outFile</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">[void](<span class=\"built_in\">new-item</span> -type file <span class=\"variable\">$outFile</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$outFile</span> = (<span class=\"built_in\">resolve-path</span> <span class=\"variable\">$outFile</span>).path</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">remove-item</span> <span class=\"variable\">$outFile</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># read the image</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$image</span> = [system.drawing.image]::FromFile(<span class=\"variable\">$iFile</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$image</span>.Save(<span class=\"variable\">$outFile</span>, <span class=\"variable\">$encoder</span>.FormatId)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$image</span>.Dispose()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Get the file we just created</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">get-item</span> <span class=\"variable\">$outFile</span></span><br></pre></td></tr></table></figure>\n<p><br></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$gifs</span>=dir -Path <span class=\"string\">\"C:\\Users\\WeiyiGeek\\Documents\\Tencent Files\\291238737\\FileRecv\\GIF\"</span> -Filter <span class=\"string\">'*.gif'</span>;</span><br><span class=\"line\"><span class=\"variable\">$newPath</span>=<span class=\"variable\">$gifs</span>[0].DirectoryName+<span class=\"string\">'\\JPG'</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(-not (Test-Path <span class=\"variable\">$newPath</span>))&#123;mkdir <span class=\"variable\">$newPath</span>|Out-Null;&#125;;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$gifs</span>)&#123;</span><br><span class=\"line\">  foreach(<span class=\"variable\">$g</span> <span class=\"keyword\">in</span> <span class=\"variable\">$gifs</span>)&#123;</span><br><span class=\"line\">      <span class=\"variable\">$bf</span>=[System.Drawing.Bitmap]::FromFile(<span class=\"variable\">$g</span>.fullName);</span><br><span class=\"line\">      <span class=\"variable\">$newFileName</span>=<span class=\"variable\">$newPath</span>+<span class=\"string\">'\\'</span>+<span class=\"variable\">$g</span>.BaseName+<span class=\"string\">'.jpg'</span>;</span><br><span class=\"line\">      <span class=\"variable\">$bf</span>.Save(<span class=\"variable\">$newFileName</span>,[System.Drawing.Imaging.ImageFormat]::Jpeg);</span><br><span class=\"line\">      <span class=\"variable\">$bf</span>.Dispose();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  Write-Host (<span class=\"string\">'共'</span>+<span class=\"variable\">$gifs</span>.Count+<span class=\"string\">'个，转换完成...'</span>);</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">  Write-Host <span class=\"string\">'当前目录没有找到任何GIF文件！'</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 另存为转换GIF到PNG-递归.bat文件，放在某个目录下，双击运行即可。会自动查找子目录中，转换后存于每个子目录的PNG目录中。</span></span><br><span class=\"line\"></span><br><span class=\"line\">powershell.exe -<span class=\"built_in\">command</span> <span class=\"string\">\"<span class=\"variable\">$path</span>=(Get-Location).Path;<span class=\"variable\">$gifs</span>=dir -Path <span class=\"variable\">$path</span> -Filter '*.gif' -Recurse;if(<span class=\"variable\">$gifs</span>)&#123;foreach(<span class=\"variable\">$g</span> in <span class=\"variable\">$gifs</span>)&#123;<span class=\"variable\">$bf</span>=[System.Drawing.Bitmap]::FromFile(<span class=\"variable\">$g</span>.fullName);<span class=\"variable\">$newPath</span>=<span class=\"variable\">$g</span>.DirectoryName+'\\PNG';if(-not (Test-Path <span class=\"variable\">$newPath</span>))&#123;mkdir <span class=\"variable\">$newPath</span>|Out-Null;&#125;;<span class=\"variable\">$newFileName</span>=<span class=\"variable\">$newPath</span>+'\\'+<span class=\"variable\">$g</span>.BaseName+'.png';<span class=\"variable\">$bf</span>.Save(<span class=\"variable\">$newFileName</span>,[System.Drawing.Imaging.ImageFormat]::Png);<span class=\"variable\">$bf</span>.Dispose();&#125;Write-Host ('共'+<span class=\"variable\">$gifs</span>.Count+'个，转换完成...');&#125;else&#123;Write-Host '当前目录没有找到任何GIF文件！';&#125;;\"</span></span><br></pre></td></tr></table></figure>\n<p>类库探源——System.Drawing.Bitmap<br><a href=\"https://www.cnblogs.com/Aphasia/p/4158827.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/Aphasia/p/4158827.html</a></p>\n<p><a href=\"http://www.colorconsole.de/PS_Windows/de/Get-Counter.htm\" target=\"_blank\" rel=\"noopener\">http://www.colorconsole.de/PS_Windows/de/Get-Counter.htm</a></p>\n<p>Get-Counter </p>\n<p>该函数下可以把现有的电脑监控统计数据 直接提取出来 ,</p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Development","path":"api/categories/Development.json"}],"tags":[{"name":"Powershell","path":"api/tags/Powershell.json"}]}