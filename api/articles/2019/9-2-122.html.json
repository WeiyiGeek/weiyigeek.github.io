{"title":"4.Nginx安全加固与性能调优最佳指南","slug":"系统运维/Application/Web/WebApp/Nginx/4.Nginx安全加固与性能调优","date":"2019-09-02T05:34:30.000Z","updated":"2022-08-12T06:56:56.682Z","url":"2019/9-2-122.html","path":"api/articles/2019/9-2-122.html.json","covers":["https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190908115539.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190909092436.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190909113519.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190909113755.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190909115355.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<center><br><br><strong>修订控制页</strong><br><br>|版本 |修订日期 |修订人 |修订摘要|<br>|—|—|—|—|<br>|1.0| 2019年9月8日 09点18分 |WeiyiGeek |初稿|<br>|2.0| 2022年1月8日 18点18分 |WeiyiGeek |扩充|<br><br></center>\n\n<hr>\n<h4 id=\"1-引言\"><a href=\"#1-引言\" class=\"headerlink\" title=\"1.引言\"></a>1.引言</h4><h5 id=\"1-1-目的\"><a href=\"#1-1-目的\" class=\"headerlink\" title=\"1.1 目的\"></a>1.1 目的</h5><p>为了更好的指导部署与测试艺术升系统nginx网站服务器高性能同时下安全稳定运行,需要对nginx服务进行调优与加固;</p>\n<p>本次进行Nginx服务调优加固主要从以下几个部分：</p>\n<ul>\n<li>模块性能优化</li>\n<li>系统内核优化</li>\n<li>编译安装优化</li>\n<li>性能参数优化</li>\n<li>安全加固配置</li>\n</ul>\n<h5 id=\"1-2-目标范围\"><a href=\"#1-2-目标范围\" class=\"headerlink\" title=\"1.2 目标范围\"></a>1.2 目标范围</h5><p>本文档仅供内部使用，禁止外传，帮助研发人员，运维人员对系统长期稳定的运行提供技术文档参考。</p>\n<h5 id=\"1-3-读者对象\"><a href=\"#1-3-读者对象\" class=\"headerlink\" title=\"1.3 读者对象\"></a>1.3 读者对象</h5><p>1) 项目经理<br>2) 开发人员<br>3) 测试人员<br>4) 运维人员<br>5) 相关领导</p>\n<hr>\n\n<h4 id=\"2-参考说明\"><a href=\"#2-参考说明\" class=\"headerlink\" title=\"2.参考说明\"></a>2.参考说明</h4><h5 id=\"2-1-帮助参考\"><a href=\"#2-1-帮助参考\" class=\"headerlink\" title=\"2.1 帮助参考\"></a>2.1 帮助参考</h5><p>Nginx是一个高性能的HTTP和反向代理服务器，也是一个IMAP/POP3/SMTP服务器。Nginx作为负载均衡服务器, Nginx 既可以在内部直接支持 Rails 和 PHP 程序对外进行服务，也可以支持作为 HTTP代理服务器对外进行服务。</p>\n<p>Nginx版本选择:</p>\n<ul>\n<li>Mainline version 最新版本,推荐测试的业务项目的时候使用</li>\n<li>Stable version  稳定版本,推荐项目上线实际使用</li>\n<li>Legacy versions 历史版本,不推荐选择可能存在脆弱性漏洞</li>\n</ul>\n<p>项目结构:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#编译后的nginx项目结结构</span></span><br><span class=\"line\">/etc/nginx/</span><br><span class=\"line\">├── client_body_temp  <span class=\"comment\">#客户端上面的临时文件存放目录</span></span><br><span class=\"line\">├── conf              <span class=\"comment\">#nginx的配置文件存放目录</span></span><br><span class=\"line\">├── fastcgi_temp      <span class=\"comment\">#fastcgi的临时文件存放目录</span></span><br><span class=\"line\">├── html              <span class=\"comment\">#存放静态资源或者脚本文件的地方</span></span><br><span class=\"line\">├── logs              <span class=\"comment\">#nginx日志文件</span></span><br><span class=\"line\">├── proxy_temp        <span class=\"comment\">#nginx正向/反向代理缓存文件存放目录</span></span><br><span class=\"line\">├── sbin              <span class=\"comment\">#nginx可执行文件</span></span><br><span class=\"line\">├── scgi_temp         <span class=\"comment\">#scgi临时文件目录</span></span><br><span class=\"line\">└── uwsgi_temp        <span class=\"comment\">#uwsgi临时文件存放目录</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p>Nginx文档帮助: <a href=\"http://nginx.org/en/docs/\" target=\"_blank\" rel=\"noopener\">http://nginx.org/en/docs/</a><br>Nginx首页地址目录: /usr/share/nginx/html<br>Nginx配置文件: </p>\n<ul>\n<li>/etc/nginx/nginx.conf </li>\n<li>/usr/local/nginx/conf/nginx.conf </li>\n<li>/usr/local/etc/nginx/nginx.conf</li>\n</ul>\n<p><br></p>\n<h5 id=\"2-2-参数说明\"><a href=\"#2-2-参数说明\" class=\"headerlink\" title=\"2.2 参数说明\"></a>2.2 参数说明</h5><p>localtion 请求匹配的url实是一个正则表达式:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 语法规则: </span></span><br><span class=\"line\">location [=|~|~*|^~] /uri/ &#123; ... &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 参数解析: </span></span><br><span class=\"line\">= 表示精确匹配,这个优先级也是最高的</span><br><span class=\"line\">/ 通用匹配，任何请求都会匹配到，默认匹配.</span><br><span class=\"line\">~ 表示区分大小写的正则匹配</span><br><span class=\"line\">~* 表示不区分大小写的正则匹配(和上面的唯一区别就是大小写) !~和!~*分别为区分大小写不匹配及不区分大小写不匹配的正则</span><br><span class=\"line\">!~,!~* : 分别标识为区分大小写不匹配及不区分大小写不匹配的正则</span><br><span class=\"line\">^~ 表示 uri 以某个常规字符串开头，理解为匹配 url 路径即可。nginx 不对 url 做编码，因此请求为/static/20%/aa，可以被规则^~ /static/ /aa 匹配到(注意是空格)</span><br></pre></td></tr></table></figure></p>\n<p>Nginx 匹配判断表达式:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-f 和 !-f: 用来判断是否存在文件</span><br><span class=\"line\">-d 和 !-d: 用来判断是否存在目录</span><br><span class=\"line\">-e 和 !-e: 用来判断是否存在文件或目录</span><br><span class=\"line\">-x 和 !-x: 用来判断文件是否可执行</span><br></pre></td></tr></table></figure></p>\n<p>例如,匹配末尾为如下后缀的静态并判断是否存在该文件, 如不存在则404。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location ~* \\.(js|css|jpg|jpeg|gif|png|swf)$ &#123;</span><br><span class=\"line\">  if (-f $request_filename) &#123; </span><br><span class=\"line\">    return 403;</span><br><span class=\"line\">    break;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"3-3-模块说明\"><a href=\"#3-3-模块说明\" class=\"headerlink\" title=\"3.3 模块说明\"></a>3.3 模块说明</h5><p>查看可用模块编译参数：<a href=\"http://nginx.org/en/docs/configure.html\" target=\"_blank\" rel=\"noopener\">http://nginx.org/en/docs/configure.html</a><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#可以通过运行 \"./configure --help\" 查看编译帮助，决定是否需要安装哪些模块,比如下面的ssi模块能够实现访问shtml页面</span></span><br><span class=\"line\">./configure -<span class=\"built_in\">help</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>http_gzip模块</strong><br>开启gzip压缩输出(常常是大于1kb的静态文件)，减少网络传输;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gzip_min_length 1k <span class=\"comment\">#设置允许压缩的页面最小字节数页面字节数从content-length中进行获取,默认值是20</span></span><br><span class=\"line\">gzip_buffers 4 16k <span class=\"comment\">#设置系统获取几个单位的缓存用于存储gzip的压缩结果数据流。4 16k代表以16k为单位，安装原始数据大小以16k为单位的4倍申请内存。</span></span><br><span class=\"line\">gzip_comp_level 2 <span class=\"comment\">#gzip压缩比，其值从1到9数字越大压缩率越高，越消耗CPU负载也越高</span></span><br><span class=\"line\">gzip_types <span class=\"comment\">#匹配mime类型进行压缩，无论是否指定”text/html”类型总是会被压缩的，推荐配置：`gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript。`</span></span><br><span class=\"line\">gzip_http_version 1.0 <span class=\"comment\">#用于识别 http 协议的版本早期的浏览器不支持 Gzip 压缩，用户就会看到乱码，所以为了支持前期版本加上了这个选项;如果你用了 Nginx 的反向代理并期望也启用 Gzip 压缩的话，由于末端通信是 http/1.0，故请设置为 1.0。</span></span><br><span class=\"line\">gzip_proxied any <span class=\"comment\">#Nginx作为反向代理的时候启用，决定开启或者关闭后端服务器返回的结果是否压缩，匹配的前提是后端服务器必须要返回包含”Via”的 header头。</span></span><br><span class=\"line\">gzip_vary on <span class=\"comment\">#和http头有关系会在响应头加个 Vary: Accept-Encoding ，可以让前端的缓存服务器缓存经过gzip压缩的页面，例如用Squid缓存经过Nginx压缩的数据。</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>http_fastcgi_module模块</strong><br>nginx可以用来请求路由到FastCGI服务器运行应用程序由各种框架和PHP编程语言等。可以开启FastCGI的缓存功能以及将静态资源进行剥离，从而提高性能。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">指令：fastcgi_temp_path  <span class=\"comment\">#定义FastCGI缓存文件保存临时路径。</span></span><br><span class=\"line\">指令：fastcgi_cache_path  <span class=\"comment\">#定义FastCGI缓存文件保存路径和缓存的其它参数。缓存数据以二进制数据文件形式存储，缓存文件名和key都是通过对访问URL使用MD5计算获得的结果。缓存文件先保存至fastcgi_temp_path指定的临时目录下，然后通过重命名操作移至fastcgi_cache_path指定的缓存目录。建议fastcgi_temp_path和fastcgi_cache_path设为同一分区，同分区移动操作效率更高。示例：</span></span><br><span class=\"line\">fastcgi_temp_path /tmp/fastcgi_temp;</span><br><span class=\"line\">fastcgi_cache_path /tmp/fastcgi_cache levels=1:2 keys_zone=cache_fastcgi:16m inactive=30m max_size=1g;</span><br><span class=\"line\"><span class=\"comment\"># levels指定了目录结构,子目录数以16为基数；</span></span><br><span class=\"line\"><span class=\"comment\"># keys_zone指定了共享内存区名和大小，用于保存缓存key和数据信息；</span></span><br><span class=\"line\"><span class=\"comment\"># inactive指定了缓存数据保存的时间，当这段时间内未被访问将被移出；</span></span><br><span class=\"line\"><span class=\"comment\"># max_size指定了缓存使用的最大磁盘空间，超过容量时将最近最少使用数据删除。</span></span><br><span class=\"line\"><span class=\"comment\">#示例中使用/tmp/fastcgi_temp作为FastCGI缓存的临时目录；/tmp/fastcgi_cache作为FastCGI缓存保存的最终目录；一级子目录为16的一次方16个，二级子目录为16的2次方256个；共享内存区名为cache_fastcgi，占用内存128MB；缓存过期时间为30分钟；缓存数据保存于磁盘的最大空间大小为1GB。</span></span><br><span class=\"line\"></span><br><span class=\"line\">指令：fastcgi_cache_key        <span class=\"comment\"># 定义FastCGI缓存关键字。启用FastCGI缓存必须加上这个配置，不然访问所有PHP的请求都为访问第一个PHP文件URL的结果。</span></span><br><span class=\"line\">指令：fastcgi_cache_valid      <span class=\"comment\"># 为指定的Http状态码指定缓存时间。</span></span><br><span class=\"line\">指令：fastcgi_cache_min_uses   <span class=\"comment\"># 指定经过多少次请求相同的URL将被缓存。</span></span><br><span class=\"line\">指令：fastcgi_cache_use_stale  <span class=\"comment\"># 指定当连接FastCGI服务器发生错误时，哪些情况使用过期数据回应。</span></span><br><span class=\"line\">指令：fastcgi_cache            <span class=\"comment\"># 缓存使用哪个共享内存区</span></span><br></pre></td></tr></table></figure>\n<p><br></p>\n<p><strong>keepalive模块</strong><br>长连接对性能有很大的影响，通过减少CPU和网络开销需要开启或关闭连接;</p>\n<ul>\n<li>keepalive_timeout 闲长连接保持打开状态的时间;</li>\n<li>keepalive_requests 单个客户端长连接可以请求的数量;</li>\n<li>keepalive 上游服务器长连接的相关指令，每个工作进程中空闲长连接到上游服务器保持开启的连接数量(没有默认值)。<br>要使用连接到上游服务器的长连接，必须要配置文件中下面的指令：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proxy_http_version 1.1;</span><br><span class=\"line\">proxy_set_header Connection <span class=\"string\">\"\"</span>;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br></p>\n<p><strong>http_ssl_module模块</strong><br>Nginx开启支持Https协议的SSL模块<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Nginx SSL性能调优</span></span><br><span class=\"line\">ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class=\"line\"><span class=\"comment\">#注意这里的加密方式</span></span><br><span class=\"line\">ssl_ciphers ECDHE-RSA-AES256-SHA384:AES256-SHA256:RC4:HIGH:!MD5:!aNULL:!eNULL:!NULL:!DH:!EDH:!AESGCM;</span><br><span class=\"line\">ssl_prefer_server_ciphers on;</span><br><span class=\"line\">ssl_session_cache shared:SSL:10m;</span><br><span class=\"line\">ssl_session_timeout 10m;</span><br></pre></td></tr></table></figure></p>\n<hr>\n\n\n<h4 id=\"3-服务优化\"><a href=\"#3-服务优化\" class=\"headerlink\" title=\"3.服务优化\"></a>3.服务优化</h4><h5 id=\"3-1-系统内核\"><a href=\"#3-1-系统内核\" class=\"headerlink\" title=\"3.1 系统内核\"></a>3.1 系统内核</h5><p>Linux内核参数部分默认值不适合高并发,Linux内核调优，主要涉及到网络和文件系统、内存等的优化，</p>\n<ul>\n<li>临时方法可以通过调整/Proc文件系统，需要注意调整/Proc文件系统系统重启后还原至默认值(不推荐)。</li>\n<li>永久修改/etc/sysctl.conf配置文件永久保存</li>\n</ul>\n<p>下面是我常用的内核调优配置：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep -q <span class=\"string\">\"net.ipv4.tcp_max_tw_buckets\"</span> /etc/sysctl.conf || cat &gt;&gt; /etc/sysctl.conf &lt;&lt; EOF</span><br><span class=\"line\"><span class=\"comment\">########################################</span></span><br><span class=\"line\">net.core.rmem_default = 262144</span><br><span class=\"line\">net.core.rmem_max = 16777216</span><br><span class=\"line\">net.core.wmem_default = 262144</span><br><span class=\"line\">net.core.wmem_max = 16777216</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#缓冲区队列设置与连接及其如何排队相关#</span></span><br><span class=\"line\"><span class=\"comment\">#调节系统同时发起的tcp连接数，在高并发的请求中，默认的值可能会导致链接超时或者重传，因此需要结合并发请求数来调节此值。</span></span><br><span class=\"line\"><span class=\"comment\">#net.core.somaxconn = 262144</span></span><br><span class=\"line\"><span class=\"comment\">#在提交到CPU前网卡中数据包缓冲的速率，高带宽下提高这个值可提高性能;检查内核日志文件中有关这个设置的错误，根据网卡文档中的建议修改这个值。</span></span><br><span class=\"line\">net.core.netdev_max_backlog = 262144</span><br><span class=\"line\"><span class=\"comment\">#设定系统中最多有多少个TCP套接字不被关联到任何一个用户文件句柄上</span></span><br><span class=\"line\">net.ipv4.tcp_max_orphans = 262144</span><br><span class=\"line\"><span class=\"comment\">#用于记录那些尚未收到客户端确认信息的连接请求的最大值(根据类才更改)</span></span><br><span class=\"line\">net.ipv4.tcp_max_syn_backlog = 1024</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#设定timewait的数量默认是180000设为10000。</span></span><br><span class=\"line\">net.ipv4.tcp_max_tw_buckets = 10000</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#在高并发情况端口值的起止范围一般端口号设置是1024到65000,用来设定允许系统打开的端口范围;</span></span><br><span class=\"line\">net.ipv4.ip_local_port_range = 1024 65500</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#用于设置启用timewait快速回收</span></span><br><span class=\"line\">net.ipv4.tcp_tw_recycle = 1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#用于设置开启重用，允许将TIME-WAIT sockets重新用于新的TCP连接。</span></span><br><span class=\"line\">net.ipv4.tcp_tw_reuse = 1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#用于设置开启SYN Cookies，当出现SYN等待队列溢出时，启用cookies进行处理。</span></span><br><span class=\"line\">net.ipv4.tcp_syncookies = 1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#决定了内核放弃连接之前发送SYN+ACK包的数量。</span></span><br><span class=\"line\">net.ipv4.tcp_synack_retries = 1</span><br><span class=\"line\"><span class=\"comment\">#表示在内核放弃建立连接之前发送SYN包的数量。</span></span><br><span class=\"line\">net.ipv4.tcp_syn_retries = 1</span><br><span class=\"line\"><span class=\"comment\">#决定了套接字保持在FIN-WAIT-2状态的时间。默认值是60秒。</span></span><br><span class=\"line\"><span class=\"comment\">#正确设置这个值非常重要，有时即使一个负载很小的Web服务器，也会出现大量的死套接字而产生内存溢出的风险。</span></span><br><span class=\"line\">net.ipv4.tcp_fin_timeout = 30</span><br><span class=\"line\"><span class=\"comment\">#选项表示当keepalive启用的时候，TCP发送keepalive消息的频度。默认值是2（单位是小时）。</span></span><br><span class=\"line\">net.ipv4.tcp_keepalive_time = 600</span><br><span class=\"line\">net.ipv4.tcp_keepalive_intvl = 30</span><br><span class=\"line\">net.ipv4.tcp_keepalive_probes = 3</span><br><span class=\"line\">net.ipv4.tcp_mem = 786432 1048576 1572864</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#文件描述符系统级别的限制#</span></span><br><span class=\"line\">kernel.sem = 250 32000 100 128</span><br><span class=\"line\">fs.file-max = 6815744</span><br><span class=\"line\">vm.swappiness = 10</span><br><span class=\"line\">fs.aio-max-nr = 1048576</span><br><span class=\"line\">EOF</span><br><span class=\"line\">sysctl -p</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><em>文件描述符</em><br>文件描述符是操作系统资源，用于表示连接、打开的文件，以及其他信息。NGINX 每个连接可以使用两个文件描述符。<br>例如如果NGINX充当代理时，通常一个文件描述符表示客户端连接，另一个连接到代理服务器，如果开启了HTTP 保持连接，这个比例会更低（译注：为什么更低呢）。</p>\n<p>对于有大量连接服务的系统，下面的设置可能需要调整一下：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#修改文件描述符方式</span></span><br><span class=\"line\">vim /etc/security/limits.conf</span><br><span class=\"line\">* - nofile 65536  <span class=\"comment\">#用户级别文件描述符限制</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#然后进行启动文件修改</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"ulimit -Hsn 65536\"</span> &gt;&gt; /etc/profile</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"3-2-编译优化\"><a href=\"#3-2-编译优化\" class=\"headerlink\" title=\"3.2 编译优化\"></a>3.2 编译优化</h5><p>精简模块:Nginx由于不断添加新的功能，附带的模块也越来越多,建议一般常用的服务器软件<code>使用源码编译安装管理</code>;</p>\n<p>(1) 减小Nginx编译后的文件大小</p>\n<ul>\n<li>编译Nginx时默认以debug模式进行，而在debug模式下会插入很多跟踪和ASSERT之类的信息，编译完成后一个Nginx要有好几兆字节;因此可以在编译之前，修改相关源码，取消debug模式;<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 找到源码目录下 auto/cc/gcc  文件 debug</span></span><br><span class=\"line\">CFLAGS=<span class=\"string\">\"<span class=\"variable\">$CFLAGS</span> -g\"</span> <span class=\"comment\">#注释掉或删掉这两行，即可取消debug模式。</span></span><br><span class=\"line\"></span><br><span class=\"line\">ls -alh /usr/<span class=\"built_in\">local</span>/nginx/sbin/nginx</span><br><span class=\"line\">-rwxr-xr-x. 1 root root 915K Aug 17 09:49 /usr/<span class=\"built_in\">local</span>/nginx/sbin/nginx  <span class=\"comment\">#可以看到体积大大减少</span></span><br></pre></td></tr></table></figure>\n<br></li>\n</ul>\n<p>(2) 指定GCC编译参数<br>修改GCC编译参数提高编译优化级别稳妥起见采用 <code>-O2</code> 这也是大多数软件编译推荐的优化级别。</p>\n<ul>\n<li>Nginx源码文件 auto/cc/gcc 搜索 NGX_GCC_OPT默认GCC编译参数为-O，可以直接修改内容为 <code>NGX_GCC_OPT=&quot;-O2&quot; 或者在 ./configure配置时添加--with-cc-opt=&#39;-O2&#39;选项</code>。</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--with-cc-opt=<span class=\"string\">'-O3'</span>  <span class=\"comment\">#编译级别</span></span><br><span class=\"line\">--with-cpu-opt=CPU   <span class=\"comment\">#为特定的 CPU 编译，有效的值包括：pentium, pentiumpro, pentium3, # pentium4, athlon, opteron, amd64, sparc32, sparc64, ppc64</span></span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190908115539.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n<p><em>GCC编译参数优化 [可选项] 总共提供了5级编译优化级别：</em></p>\n<ul>\n<li>-O0:无优化。</li>\n<li>-O和-O1:使用能减少目标代码尺寸以及执行时间并且不会使编译时间明显增加的优化，在编译大型程序的时候会显著增加编译时内存的使用。</li>\n<li>-O2:包含-O1的优化并增加了不需要在目标文件大小和执行速度上进行折衷的优化。编译器不执行循环展开以及函数内联。此选项将增加编译时间和目标文件的执行性能。</li>\n<li>-Os:可以看成 -O2.5，专门优化目标文件大小，执行所有的不增加目标文件大小的-O2优化选项，并且执行专门减小目标文件大小的优化选项。适用于磁盘空间紧张时使用。但有可能有未知的问题发生，况且目前硬盘容量很大，常用程序无必要使用。</li>\n<li>-O3:打开所有 -O2 的优化选项外增加 -finline-functions、-funswitch-loops、-fgcse-after-reload 优化选项。相对于 -O2 性能并未有较多提高，编译时间也最长，生成的目标文件也更大更占内存，有时性能不增反而降低，甚至产生不可预知的问题(包括错误)，所以并不被大多数软件安装推荐，除非有绝对把握方可使用此优化级别。</li>\n</ul>\n<p><br></p>\n<p>常用编译参数:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#编译0:常规编译参数</span></span><br><span class=\"line\">configure arguments: </span><br><span class=\"line\"><span class=\"comment\">#安装的目录或者路径#</span></span><br><span class=\"line\">--prefix=/etc/nginx </span><br><span class=\"line\">--sbin-path=/usr/sbin/nginx </span><br><span class=\"line\">--modules-path=/usr/lib64/nginx/modules </span><br><span class=\"line\">--conf-path=/etc/nginx/nginx.conf </span><br><span class=\"line\">--error-log-path=/var/<span class=\"built_in\">log</span>/nginx/error.log </span><br><span class=\"line\">--http-log-path=/var/<span class=\"built_in\">log</span>/nginx/access.log </span><br><span class=\"line\">--pid-path=/var/run/nginx.pid </span><br><span class=\"line\">--lock-path=/var/run/nginx.lock</span><br><span class=\"line\"><span class=\"comment\">#执行对应模块nginx所保留的临时文件#</span></span><br><span class=\"line\">--http-client-body-temp-path=/var/cache/nginx/client_temp </span><br><span class=\"line\">--http-proxy-temp-path=/var/cache/nginx/proxy_temp </span><br><span class=\"line\">--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp </span><br><span class=\"line\">--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp </span><br><span class=\"line\">--http-scgi-temp-path=/var/cache/nginx/scgi_temp </span><br><span class=\"line\"><span class=\"comment\">#启动的用户和组用户#</span></span><br><span class=\"line\">--user=nginx </span><br><span class=\"line\">--group=nginx </span><br><span class=\"line\"><span class=\"comment\">#模块参数#</span></span><br><span class=\"line\">--with-compat </span><br><span class=\"line\">--with-file-aio </span><br><span class=\"line\">--with-threads </span><br><span class=\"line\">--with-http_addition_module </span><br><span class=\"line\">--with-http_auth_request_module </span><br><span class=\"line\">--with-http_dav_module </span><br><span class=\"line\">--with-http_flv_module </span><br><span class=\"line\">--with-http_gunzip_module </span><br><span class=\"line\">--with-http_gzip_static_module </span><br><span class=\"line\">--with-http_mp4_module </span><br><span class=\"line\">--with-http_random_index_module </span><br><span class=\"line\">--with-http_realip_module </span><br><span class=\"line\">--with-http_secure_link_module </span><br><span class=\"line\">--with-http_slice_module </span><br><span class=\"line\">--with-http_ssl_module </span><br><span class=\"line\">--with-http_stub_status_module </span><br><span class=\"line\">--with-http_sub_module </span><br><span class=\"line\">--with-http_v2_module </span><br><span class=\"line\">--with-mail </span><br><span class=\"line\">--with-mail_ssl_module </span><br><span class=\"line\">--with-stream </span><br><span class=\"line\">--with-stream_realip_module </span><br><span class=\"line\">--with-stream_ssl_module </span><br><span class=\"line\">--with-stream_ssl_preread_module</span><br><span class=\"line\"><span class=\"comment\">#设置额外的参数将被添加到CFLAGS#</span></span><br><span class=\"line\">--with-cc-opt=<span class=\"string\">'-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -fPIC'</span> </span><br><span class=\"line\"><span class=\"comment\">#设置附件参数,链接系统库#</span></span><br><span class=\"line\">-with-ld-opt=<span class=\"string\">'-Wl,-z,relro -Wl,-z,now -pie'</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#编译1:除多余模块</span></span><br><span class=\"line\">./configure \\</span><br><span class=\"line\"><span class=\"string\">\"--prefix=/App/nginx\"</span> \\ </span><br><span class=\"line\"><span class=\"string\">\"--user=nginx\"</span> \\ </span><br><span class=\"line\"><span class=\"string\">\"--group=nginx\"</span> \\</span><br><span class=\"line\"><span class=\"string\">\"--with-http_stub_status_module\"</span> \\</span><br><span class=\"line\"><span class=\"string\">\"--without-http_auth_basic_module\"</span> \\</span><br><span class=\"line\"><span class=\"string\">\"--without-http_autoindex_module\"</span> \\</span><br><span class=\"line\"><span class=\"string\">\"--without-http_browser_module\"</span> \\</span><br><span class=\"line\"><span class=\"string\">\"--without-http_empty_gif_module\"</span> \\</span><br><span class=\"line\"><span class=\"string\">\"--without-http_geo_module\"</span> \\</span><br><span class=\"line\"><span class=\"string\">\"--without-http_limit_conn_module\"</span> \\</span><br><span class=\"line\"><span class=\"string\">\"--without-http_limit_req_module\"</span> \\</span><br><span class=\"line\"><span class=\"string\">\"--without-http_map_module\"</span> \\</span><br><span class=\"line\"><span class=\"string\">\"--without-http_memcached_module\"</span> \\</span><br><span class=\"line\"><span class=\"string\">\"--without-http_proxy_module\"</span> \\</span><br><span class=\"line\"><span class=\"string\">\"--without-http_referer_module\"</span> \\</span><br><span class=\"line\"><span class=\"string\">\"--without-http_scgi_module\"</span> \\</span><br><span class=\"line\"><span class=\"string\">\"--without-http_split_clients_module\"</span> \\</span><br><span class=\"line\"><span class=\"string\">\"--without-http_ssi_module\"</span> \\</span><br><span class=\"line\"><span class=\"string\">\"--without-http_upstream_ip_hash_module\"</span> \\</span><br><span class=\"line\"><span class=\"string\">\"--without-http_upstream_keepalive_module\"</span> \\</span><br><span class=\"line\"><span class=\"string\">\"--without-http_upstream_least_conn_module\"</span> \\</span><br><span class=\"line\"><span class=\"string\">\"--without-http_userid_module\"</span> \\</span><br><span class=\"line\"><span class=\"string\">\"--without-http_uwsgi_module\"</span> \\</span><br><span class=\"line\"><span class=\"string\">\"--without-mail_imap_module\"</span> \\</span><br><span class=\"line\"><span class=\"string\">\"--without-mail_pop3_module\"</span> \\</span><br><span class=\"line\"><span class=\"string\">\"--without-mail_smtp_module\"</span> \\</span><br><span class=\"line\"><span class=\"string\">\"--without-poll_module\"</span> \\</span><br><span class=\"line\"><span class=\"string\">\"--without-select_module\"</span> \\</span><br><span class=\"line\"><span class=\"string\">\"--with-cc-opt='-O2'\"</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"3-3-性能优化\"><a href=\"#3-3-性能优化\" class=\"headerlink\" title=\"3.3 性能优化\"></a>3.3 性能优化</h5><p><em>缓存和压缩与限制可以提高性能</em><br>NGINX的一些额外功能可用于提高Web应用的性能，调优的时候web应用不需要关掉但值得一提，因为它们的影响可能很重要。 </p>\n<ul>\n<li>1)缓存<br>一个启用NGINX缓存的情景，一组web或者应用服务器负载均衡，可以显著缩短对客户端的响应时间，同时大幅度降低后端服务器的负载。缓存本身就可以作个专题来讲，这里我们就不试图讲它了。</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 网页资源缓存</span></span><br><span class=\"line\">location ~* \\.(xml|html|htm)$ &#123;</span><br><span class=\"line\">  <span class=\"comment\"># 资源决绝对目录设置</span></span><br><span class=\"line\">  root /var/www/html;</span><br><span class=\"line\">  <span class=\"comment\"># 日志文件的相对路径或完整路径</span></span><br><span class=\"line\">  access_log /path/to/file.log;</span><br><span class=\"line\">  <span class=\"comment\"># 开启日志记录</span></span><br><span class=\"line\">  access_log on;</span><br><span class=\"line\">  <span class=\"comment\"># 设置过期时间</span></span><br><span class=\"line\">  expires 24h;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 样式、JS、图片资源缓存</span></span><br><span class=\"line\">location ~* \\.(css|js|ico|gif|jpg|jpeg|png)$ &#123;</span><br><span class=\"line\">  root /var/www/html/res;</span><br><span class=\"line\">  <span class=\"comment\"># 禁用404错误日志</span></span><br><span class=\"line\">  log_not_found off;</span><br><span class=\"line\">  <span class=\"comment\"># 关闭日志</span></span><br><span class=\"line\">  access_log off;</span><br><span class=\"line\">  <span class=\"comment\"># 缓存时间7天</span></span><br><span class=\"line\">  expires 7d;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 字体资源缓存</span></span><br><span class=\"line\">location ~* \\.(eot|ttf|otf|woff|woff2|svg)$ &#123;</span><br><span class=\"line\">  root /var/www/html/static;</span><br><span class=\"line\">  log_not_found off;</span><br><span class=\"line\">  access_log off;</span><br><span class=\"line\">  expires max;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>2)压缩<br>所以使用更小的网络带宽。然而尽管压缩数据会消耗CPU资源，但当需要减少网络带宽使用时这样做非常有效。需要注意的是，不能对已压缩的文件再压缩例如JPEG 文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 启用 gzip 压缩</span></span><br><span class=\"line\">gzip on;</span><br><span class=\"line\"><span class=\"comment\"># 启用gzip压缩的最小文件，小于设置值的文件将不会压缩</span></span><br><span class=\"line\">gzip_min_length 2k;</span><br><span class=\"line\"><span class=\"comment\"># gzip 压缩级别，1-10，数字越大压缩的越好，也越占用CPU时间，后面会有详细说明</span></span><br><span class=\"line\">gzip_comp_level 2;</span><br><span class=\"line\"><span class=\"comment\"># 进行压缩的文件类型，javascript有多种形，其中的值可以在 mime.types 文件中找到。</span></span><br><span class=\"line\">gzip_types text/html text/plain text/css text/javascript application/javascript application/x-javascript application/xml application/x-httpd-php image/x-icon image/jpeg image/gif image/png image/svg+xml image/avif image/webp font/ttf font/opentype;</span><br><span class=\"line\"><span class=\"comment\"># 建议在http header中添加Vary: Accept-Encoding支持</span></span><br><span class=\"line\">gzip_vary on;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>3)限制<br>防止用户消耗太多的资源，避免影响系统性能和用户体验及安全性，以下是相关的指令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">limit_conn and limit_conn_zone  <span class=\"comment\"># NGINX接受客户连接的数量限制，例如单个IP地址的连接。设置这些指令可以防止单个用户打开太多的连接，消耗超出自己的资源。</span></span><br><span class=\"line\">limit_req and limit_req_zon <span class=\"comment\">#NGINX处理请求的速度限制，与limit_rate有相同的功能。可以提高安全性，尤其是对登录页面，通过对用户限制请求速率设置一个合理的值，避免太慢的程序覆盖你的应用请求（比如DDoS攻击)。</span></span><br><span class=\"line\">limit_rate <span class=\"comment\">#  传输到客户端响应速度的限制（每个打开多个连接的客户消耗更多的带宽）。设置这个限制防止系统过载，确保所有客户端更均匀的服务质量。</span></span><br><span class=\"line\">max_conns <span class=\"comment\">#上游配置块中服务器指令参数。在上游服务器组中单个服务器可接受最大并发数量。使用这个限制防止上游服务器过载。设置值为0（默认值）表示没有限制。</span></span><br><span class=\"line\">queue (NGINX Plus - 商业版本提供) <span class=\"comment\"># 创建一个队列，用来存放在上游服务器中超出他们最大max_cons限制数量的请求。这个指令可以设置队列请求的最大值，还可以选择设置在错误返回之前最大等待时间（默认值是60秒）。如果忽略这个指令，请求不会放入队列。</span></span><br></pre></td></tr></table></figure>\n<p>简单示例:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http &#123;</span><br><span class=\"line\">  <span class=\"comment\"># 请根据业务需求配置同一IP地址连接数</span></span><br><span class=\"line\">  limit_conn_zone <span class=\"variable\">$binary_remote_addr</span> zone=www_weiyigeek_top:10m;</span><br><span class=\"line\">  <span class=\"comment\"># 请根据业务需求配置同一IP地址请求速率</span></span><br><span class=\"line\">  limit_req_zone <span class=\"variable\">$binary_remote_addr</span> zone=blog_weiyigeek_top:10m rate=1r/s;</span><br><span class=\"line\"></span><br><span class=\"line\">  server &#123;</span><br><span class=\"line\">    <span class=\"comment\"># 建议创建黑白名单</span></span><br><span class=\"line\">    allow 内部IP或负载均衡IP;</span><br><span class=\"line\">    deny 恶意IP;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 限流</span></span><br><span class=\"line\">    location ^~ /download/ &#123; </span><br><span class=\"line\">      <span class=\"comment\"># 表示单个IP连接数不超过 2 个</span></span><br><span class=\"line\">      limit_conn www_weiyigeek_top 2; </span><br><span class=\"line\">      <span class=\"comment\"># 表示单个IP请求速率为1s一个, 允许超过频率限制的请求数不多于5个，最多请求不能超过 burst + rate 数量。</span></span><br><span class=\"line\">      limit_req zone=blog_weiyigeek_top burst=5 nodelay; </span><br><span class=\"line\">      <span class=\"built_in\">alias</span> /data/weiyigeek.top/download/;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>4)减少磁盘IO<br>减少磁盘IO次数可以帮助我们更好的提升服务器性能，增强服务器的负载能力。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 关闭不需要记录指定目录或者文件访问日志</span></span><br><span class=\"line\">access_log off;</span><br><span class=\"line\">error_log /dev/null</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 为日志写入创建缓存区减少IO次数,例如下面当缓存达到128k或者日志刷新时间为1m时将写入日志文件中(gzip 压缩日志-按需开启)</span></span><br><span class=\"line\">access_log /var/<span class=\"built_in\">log</span>/nginx/access.log main buffer=128k gzip flush=1m;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br></p>\n<h5 id=\"3-4-运营优化\"><a href=\"#3-4-运营优化\" class=\"headerlink\" title=\"3.4 运营优化\"></a>3.4 运营优化</h5><p><strong>1) 永久重定向</strong></p>\n<blockquote>\n<p>如果你的站点需要让http URL跳转到https,则非建议设置永久重定向，而非临时重定向，这可以帮助你站点更好的被收录（SEO）。</p>\n</blockquote>\n<p>例如，配置 http 向 https 跳转 (永久)<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 方式1.Redirect（重定向）- 推荐</span></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">  listen 80;</span><br><span class=\"line\">  server_name weiyigeek.top www.weiyigeek.top;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> 301 https://<span class=\"variable\">$host</span><span class=\"variable\">$request_uri</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方式2.ReWrite 重写</span></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">  listen 80;</span><br><span class=\"line\">  server_name weiyigeek.top www.weiyigeek.top;</span><br><span class=\"line\">  <span class=\"comment\"># 判断请求host是否是 www.weiyigeek.top ,如果是 weiyigeek.top 则重写为 www.weiyigeek.top </span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable\">$http_host</span> !~ <span class=\"string\">\"^www\\.weiyigeek\\.top$\"</span> &#123;</span><br><span class=\"line\">    rewrite ^(.*) https://www.weiyigeek.top<span class=\"variable\">$1</span> permanent;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"3-5-配置优化\"><a href=\"#3-5-配置优化\" class=\"headerlink\" title=\"3.5 配置优化\"></a>3.5 配置优化</h5><p><strong>nginx配置文件指令优化一览表</strong></p>\n<table>\n<thead>\n<tr>\n<th>位置</th>\n<th>指令</th>\n<th>说明</th>\n<th>优化</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>main</td>\n<td>worker_processes</td>\n<td>工作进程数的选择包括（但不限于）CPU核心的数量、存储数据的硬盘数量及负载模式</td>\n<td>设置 auto 或者 <b>  `cat /proc/cpuinfo</td>\n<td>grep processor</td>\n<td>wc -l` </b> 服务器逻辑核心总数</td>\n</tr>\n<tr>\n<td>main</td>\n<td>worker_cpu_affinity</td>\n<td>Nginx默认未开启CPU绑定，绑定工作进程到对应CPU核心</td>\n<td>多核CPU建议设置CPU绑定,绑定样例: <br> <b><code>worker_processes    4;</code>  <br> <code>worker_cpu_affinity 0001 0010 0100 1000;</code> </b> </td>\n</tr>\n<tr>\n<td>main</td>\n<td>worker_rlimit_nofile</td>\n<td>打开文件数限制(默认值1024),受限于系统的用户进程打开文件数限制，未设置则使用系统默认值</td>\n<td>修改用户打开文件数限制：<br> <b> <code>echo &quot;* - nofile 65536&quot; &gt;&gt; /etc/security/limits.conf</code> </b> <br> 修改所有Shell和通过Shell启动的进程打开文件数限制： <br><b> <code>echo &quot;ulimit -n 65536&quot; &gt;&gt; /etc/profile</code> </b><br> 临时生效(重启后生效): ulimit -n 65536</td>\n</tr>\n<tr>\n<td>main</td>\n<td>worker_connections</td>\n<td>Nginx一个工作进程的最大同时连接数，不仅限于客户端连接，包括了和后端被代理服务器等其他的连接</td>\n<td>建议设置成与 <b>  <code>worker_rlimit_nofile</code> </b> 值相等</td>\n</tr>\n<tr>\n<td>mian</td>\n<td>sendfile</td>\n<td>在http或server或location环境中包含sendfile指令。<br>NGINX可以不需要切换到用户态，就把缓存或磁盘上的内容写入套接字而且写的速度非常快，消耗更少的CPU周期。<br> 注意尽管使用sendfile()数据拷贝可以绕过用户态但不适用于常规的NGINX处理改变内容的链和过滤器比如gzip</td>\n<td>建议设置成 on</td>\n</tr>\n<tr>\n<td>main-events</td>\n<td>accept_mutex</td>\n<td>惊群问题:<br> 如果指令值为 on 启用，那么将轮流唤醒一个工作进程接收处理新的连接，其余工作进程继续保持睡眠 <br> 如果指令值为 off 关闭，那么将唤醒所有工作进程，由系统通过use指令指定的网络IO模型调度决定由哪个工作进程处理，未接收到连接请求的工作进程继续保持睡眠</td>\n<td>on开启状态为了稳定参数值;  <br> off关闭状态提高性能和吞吐量但是会带来上下文切换增多或者负载升高等等其它资源更多消耗的后果(推荐)</td>\n</tr>\n<tr>\n<td>main-events</td>\n<td>use</td>\n<td>定义了Nginx设置用于复用客户端线程的轮询方法(也可称多路复用网络IO模型),自然是选择效率更高的优先(默认即可)</td>\n<td>use epoll</td>\n</tr>\n<tr>\n<td>main</td>\n<td>open_file_cache</td>\n<td>开启关闭打开文件缓存默认值 off 关闭，强烈建议开启可以避免重新打开同一文件带来的系统开销节省响应时间</td>\n<td>max=数字设置缓存元素的最大数量 <br> inactive=时间设置超时 当缓存溢出时使用LRU(最近最少使用)算法删除缓存中的元素；在这段时间内缓存元素如果没有被访问将从缓存中删除; <br><b> open_file_cache max=65536  inactive=60s </b></td>\n</tr>\n<tr>\n<td>main</td>\n<td>open_file_cache_valid</td>\n<td>设置检查open_file_cache缓存的元素的时间间隔</td>\n<td>80s</td>\n</tr>\n<tr>\n<td>main</td>\n<td>open_file_cache_min_uses</td>\n<td>设置在由open_file_cache指令的inactive参数配置的超时时间内文件应该被访问的最小次数。<br> 如果访问次数大于等于此值，文件描述符会保留在缓存中，否则从缓存中删除。</td>\n<td>1</td>\n</tr>\n<tr>\n<td>main</td>\n<td>error_log</td>\n<td>错误的访问请求日志记录,当并发很大时Nginx的访问日志和错误日志的保存肯定会造成对磁盘的大量读写也将影响Nginx的性能</td>\n<td>注释即可 或者 错误日志设置为 error 或者 crit</td>\n</tr>\n<tr>\n<td>main-http</td>\n<td>access_log</td>\n<td>成功的访问请求日志记录, 如必须保存日志，可以按每日或者每时或者其它时间段对日志做切割，这也可以减小IO，虽然可能效果不是特别大，不过因为日志文件尺寸变小了很多，也方便查阅或归档分析日志</td>\n<td>建议开启日志记录级别 main </td>\n</tr>\n<tr>\n<td>main-http</td>\n<td>gzip</td>\n<td>默认开启了gzip压缩功能:增加CPU的处理时间和负载(默认即可) <br> 关闭gzip压缩功能:虽然减少了CPU计算节省了服务器的响应时间，但网站页面总体响应时间反而加长了静态文件数据传输时间增加;</td>\n<td>设置 gzip on 即可;(该模块中有附带参数)</td>\n</tr>\n<tr>\n<td>main-http</td>\n<td>keepalive_timeout</td>\n<td>空闲长连接保持打开状态的时间;复用之前已建立的TCP连接接收请求、发送回应，减少重新建立TCP连接的资源时间开销</td>\n<td>正数为开启持久连接(常规设置120)而0关闭。 <br> 当网站页面内容以静态为主时，开启持久连接; <br> 动态网页且不能被转化为静态页面，则关闭持久连接; </td>\n</tr>\n<tr>\n<td>main-http</td>\n<td>keepalive_requests</td>\n<td>单个客户端长连接可以请求的数量但是当使用压力测试工具从一个客户端发送多个请求测试时，这个值设更高些特别有用</td>\n<td>默认值是100</td>\n</tr>\n<tr>\n<td>main-http-server-location</td>\n<td>expires</td>\n<td>浏览器缓存设置HTTP应答中的“Expires”和“Cache-Control”头标。”Expires”一般结合”Last-Modified”使用比较缓存时间,避免了从服务器再次传送文件内容减小了服务器压力，节省了带宽同时也提高了用户访问速度</td>\n<td>-1 表示永远过期不缓存,推荐静态文件如js/css等等访问设置 <code>expires 30d</code>a;</td>\n</tr>\n</tbody>\n</table>\n<p><br></p>\n<h4 id=\"4-安全配置\"><a href=\"#4-安全配置\" class=\"headerlink\" title=\"4.安全配置\"></a>4.安全配置</h4><p>描述:Nginx因为安全配置不合适导致的安全问题,Nginx的默认配置中存在一些安全问题,例如版本号信息泄露、未配置使用SSL协议等。<br>对Nginx进行安全配置可以有效的防范一些常见安全问题，按照基线标准做好安全配置能够减少安全事件的发生,保证采用Nginx服务器系统应用安全运行;</p>\n<p><strong>Nginx安全配置项：</strong></p>\n<h5 id=\"0-隐藏nginx服务及其版本\"><a href=\"#0-隐藏nginx服务及其版本\" class=\"headerlink\" title=\"0.隐藏nginx服务及其版本\"></a>0.隐藏nginx服务及其版本</h5><p>温馨提示: 在修改相应的源代码文件后需重新编译。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#方式1:</span></span><br><span class=\"line\"><span class=\"comment\">#vi nginx-1.9.11/src/http/ngx_http_header_filter_module.c</span></span><br><span class=\"line\">static char ngx_http_server_string[] = <span class=\"string\">\"Server: LTWS\"</span> ; <span class=\"comment\">#修改处</span></span><br><span class=\"line\"><span class=\"comment\">#修改nginx_http_header_filter_module</span></span><br><span class=\"line\"><span class=\"comment\">#vi nginx-1.9.11/src/http/ngx_http_special_response.c</span></span><br><span class=\"line\">static u_char ngx_http_error_full_tail[] =</span><br><span class=\"line\"><span class=\"string\">\"&lt;center&gt; NGINX_VER &lt;/center&gt;\"</span> </span><br><span class=\"line\"><span class=\"string\">\"&lt;hr&gt;&lt;center&gt; http://www.weiyigeek.com&lt;/center&gt;\"</span> </span><br><span class=\"line\"><span class=\"string\">\"&lt;/body&gt;\"</span> </span><br><span class=\"line\"><span class=\"string\">\"&lt;/html&gt;\"</span> </span><br><span class=\"line\">;</span><br><span class=\"line\"></span><br><span class=\"line\">static u_char ngx_http_error_tail[] =</span><br><span class=\"line\"><span class=\"string\">\"&lt;hr&gt;&lt;center&gt;LTWS&lt;/center&gt;\"</span> </span><br><span class=\"line\"><span class=\"string\">\"&lt;/body&gt;\"</span> </span><br><span class=\"line\"><span class=\"string\">\"&lt;/html&gt;\"</span> </span><br><span class=\"line\">;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#设置响应头版本版本</span></span><br><span class=\"line\"><span class=\"comment\">#vim src/core/nginx.h</span></span><br><span class=\"line\"><span class=\"comment\">#define NGINX_VERSION      \"secWaf\"            #可以改成你要的版本号</span></span><br><span class=\"line\"><span class=\"comment\">#define NGINX_VER          \"1.1\" NGINX_VERSION #改成你的服务名称</span></span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190909092436.png\" alt=\"WeiyiGeek.修改服务名及其版本对应文件\" title=\"\" class=\"\">\n                <p>WeiyiGeek.修改服务名及其版本对应文件</p>\n            </figure></p>\n<p>设置成功后验证:<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190909113519.png\" alt=\"WeiyiGeek.验证服务名及其版本修改\" title=\"\" class=\"\">\n                <p>WeiyiGeek.验证服务名及其版本修改</p>\n            </figure></p>\n<p><br></p>\n<h5 id=\"1-低权限用户运行服务\"><a href=\"#1-低权限用户运行服务\" class=\"headerlink\" title=\"1.低权限用户运行服务\"></a>1.低权限用户运行服务</h5><p>应配置非root低权限用户来运行nginx服务,设置如下建立Nginx用户组和用户，采用user指令指运行用户</p>\n<p>加固方法:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">groupadd nginxweb;</span><br><span class=\"line\">useradd -M -g nginxweb -s /sbin/nologin nginxweb </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#nginx.conf 中配置 或者编译 的时候指定</span></span><br><span class=\"line\"><span class=\"comment\">#nginx 安装编译参数--user=nginx --group=nginx</span></span><br><span class=\"line\">user nginxweb</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"2-配置SSL及其会话复用\"><a href=\"#2-配置SSL及其会话复用\" class=\"headerlink\" title=\"2.配置SSL及其会话复用\"></a>2.配置SSL及其会话复用</h5><p>我们应该为提供的站点配置Secure Sockets Layer Protocol (SSL协议)，配置其是为了数据传输的安全，SSL依靠证书来验证服务器的身份，并为浏览器和服务器之间的通信加密。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">  <span class=\"comment\"># 开启 SSL 与 http2 支持</span></span><br><span class=\"line\">  listen 443 ssl http2;</span><br><span class=\"line\">  listen [::]:443 ssl http2;</span><br><span class=\"line\">  <span class=\"comment\"># 开启 SSL ，如果想http 与 https 公用一个配置则可以将其注释( the \"ssl\" directive is deprecated )</span></span><br><span class=\"line\">  <span class=\"comment\"># ssl on;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># 配置证书链与证书密钥</span></span><br><span class=\"line\">  ssl_certificate      /etc/nginx/ssl/fullchain.cer;</span><br><span class=\"line\">  ssl_certificate_key  /etc/nginx/ssl/weiyigeek.top.key;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># ssl会话复用超时时间以及会话复用缓存大小</span></span><br><span class=\"line\">  ssl_session_timeout 1d;</span><br><span class=\"line\">  ssl_session_cache shared:MozSSL:10m;  <span class=\"comment\"># about 40000 sessions</span></span><br><span class=\"line\">  ......</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><br></p>\n<h5 id=\"3-限制SSL协议与加密套件\"><a href=\"#3-限制SSL协议与加密套件\" class=\"headerlink\" title=\"3.限制SSL协议与加密套件\"></a>3.限制SSL协议与加密套件</h5><p>不应使用不安全SSLv2、SSLv3协议即以下和存在脆弱性的加密套件(ciphers), 我们应该使用较新的TLS协议也应该优于旧的,并使用安全的加密套件。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 兼容性较为通用的SSL协议与加密算法套件</span></span><br><span class=\"line\">ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;</span><br><span class=\"line\">ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE:ECDH:AES:HIGH:EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:!NULL:!aNULL:!eNULL:!EXPORT:!PSK:!ADH:!DH:!DES:!MD5:!RC4;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 浏览器客户端自动协商加密套件(为了兼容性)</span></span><br><span class=\"line\">ssl_prefer_server_ciphers  on;</span><br></pre></td></tr></table></figure><br><br></p>\n<h5 id=\"4-拦截垃圾信息\"><a href=\"#4-拦截垃圾信息\" class=\"headerlink\" title=\"4.拦截垃圾信息\"></a>4.拦截垃圾信息</h5><p>HTTP Referrer Spam是垃圾信息发送者用来提高他们正在尝试推广的网站的互联网搜索引擎排名一种技术，如果他们的垃圾信息链接显示在访问日志中，并且这些日志被搜索引擎扫描，则会对网站排名产生不利影响<br>加固方法:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> ( <span class=\"variable\">$http_referer</span> ~* (babes|forsale|girl|jewelry|love|nudit|organic|poker|porn|sex|teen) )&#123;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> 403;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"5-恶意扫描拦截\"><a href=\"#5-恶意扫描拦截\" class=\"headerlink\" title=\"5.恶意扫描拦截\"></a>5.恶意扫描拦截</h5><p>当恶意攻击者采用扫描器进行扫描时候利用use-agent判断是否是常用的工具扫描以及特定的版本,是则返回错误或者重定向;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 封杀各种user-agent</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$http_user_agent</span> ~* <span class=\"string\">\"java|python|perl|ruby|curl|bash|echo|uname|base64|decode|md5sum|select|concat|httprequest|httpclient|nmap|scan|nessus|wvs\"</span> ) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> 403;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$http_user_agent</span> ~* <span class=\"string\">\"\"</span> ) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> 403;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 封杀特定的文件扩展名比如.bak以及目录;</span></span><br><span class=\"line\">location ~* \\.(bak|swp|save|sh|sql|mdb|svn|git|old)$ &#123;</span><br><span class=\"line\">  rewrite ^/(.*)$  <span class=\"variable\">$host</span>  permanent;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">location /(admin|phpadmin|status)\t&#123; deny all; &#125;</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190909113755.png\" alt=\"WeiyiGeek.恶意扫描拦截\" title=\"\" class=\"\">\n                <p>WeiyiGeek.恶意扫描拦截</p>\n            </figure></p>\n<p><br></p>\n<h5 id=\"6-禁用WebDAV\"><a href=\"#6-禁用WebDAV\" class=\"headerlink\" title=\"6.禁用WebDAV\"></a>6.禁用WebDAV</h5><p>Nginx支持webdav，虽然默认情况下不会编译。如果使用webdav，则应该在Nginx策略中禁用此规则。<br>加固方法: dav_methods 应设置为off</p>\n<p><br></p>\n<h5 id=\"7-禁用Nginx状态模块\"><a href=\"#7-禁用Nginx状态模块\" class=\"headerlink\" title=\"7.禁用Nginx状态模块\"></a>7.禁用Nginx状态模块</h5><p>当访问一个特制的URL时，如”../nginx.status”，stub_status模块提供一个简短的Nginx服务器状态摘要,大多数情况下不应启用此模块。<br>加固方法：nginx.conf文件中stub_status不应设置为：on</p>\n<p><br></p>\n<h5 id=\"8-关闭默认错误页上的Nginx版本号\"><a href=\"#8-关闭默认错误页上的Nginx版本号\" class=\"headerlink\" title=\"8.关闭默认错误页上的Nginx版本号\"></a>8.关闭默认错误页上的Nginx版本号</h5><p>如果在浏览器中出现Nginx自动生成的错误消息，默认情况下会包含Nginx的版本号,这些信息可以被攻击者用来帮助他们发现服务器的潜在漏洞<br>加固方法: 关闭”Server”响应头中输出的Nginx版本号将server_tokens应设置为：off<br><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">server_tokens</span> <span class=\"literal\">off</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"9-设置client-body-timeout超时\"><a href=\"#9-设置client-body-timeout超时\" class=\"headerlink\" title=\"9.设置client_body_timeout超时\"></a>9.设置client_body_timeout超时</h5><p>client_body_timeout设置请求体（request body）的读超时时间。仅当在一次readstep中，没有得到请求体，就会设为超时。超时后Nginx返回HTTP状态码408(Request timed out)。<br>加固方法：nginx.conf文件中client_body_timeout应设置为：10</p>\n<p><br></p>\n<h5 id=\"10-设置client-header-timeout\"><a href=\"#10-设置client-header-timeout\" class=\"headerlink\" title=\"10.设置client_header_timeout\"></a>10.设置client_header_timeout</h5><p>client_header_timeout设置等待client发送一个请求头的超时时间（例如：GET / HTTP/1.1）。仅当在一次read中没有收到请求头，才会设为超时。超时后Nginx返回HTTP状态码408(Request timed out)。</p>\n<p>加固方法：nginx.conf文件中client_header_timeout应设置为：10</p>\n<p><br></p>\n<h5 id=\"11-设置keepalive-timeout超时\"><a href=\"#11-设置keepalive-timeout超时\" class=\"headerlink\" title=\"11.设置keepalive_timeout超时\"></a>11.设置keepalive_timeout超时</h5><p>keepalive_timeout设置与client的keep-alive连接超时时间。服务器将会在这个时间后关闭连接。</p>\n<p>加固方法：nginx.conf文件中keepalive_timeout应设置为：55</p>\n<p><br></p>\n<h5 id=\"12-设置send-timeout超时\"><a href=\"#12-设置send-timeout超时\" class=\"headerlink\" title=\"12.设置send_timeout超时\"></a>12.设置send_timeout超时</h5><p>send_timeout设置客户端的响应超时时间。这个设置不会用于整个转发器，而是在两次客户端读取操作之间。如果在这段时间内，客户端没有读取任何数据，Nginx就会关闭连接。</p>\n<p>加固方法：nginx.conf文件中send_timeout应设置为：10</p>\n<p><br></p>\n<h5 id=\"13-Nginx可用的方法应限制为GET-HEAD-POST\"><a href=\"#13-Nginx可用的方法应限制为GET-HEAD-POST\" class=\"headerlink\" title=\"13.Nginx可用的方法应限制为GET, HEAD, POST\"></a>13.Nginx可用的方法应限制为GET, HEAD, POST</h5><p>GET和POST是Internet上最常用的方法。Web服务器方法在RFC 2616中定义禁用不需要实现的可用方法。</p>\n<p>加固方法:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#nginx.conf文件中应存在</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$request_method</span> !~ ^(GET|HEAD|POST)$ )</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"14-控制并发连接limit-zone-slimits\"><a href=\"#14-控制并发连接limit-zone-slimits\" class=\"headerlink\" title=\"14.控制并发连接limit_zone slimits\"></a>14.控制并发连接limit_zone slimits</h5><p>limit_zone 配置项限制来自客户端的同时连接数。通过此模块可以从一个地址限制分配会话的同时连接数量或特殊情况。</p>\n<p>加固方法：<code>nginx.conf文件中limit_zone应设置为：slimits $binary_remote_addr 5m</code><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 设定保存各个键(例如$binary_remote_addr)状态的共享内存空间的参数，zone=空间名字:大小大小的计算与变量有关</span></span><br><span class=\"line\">limit_conn_zone <span class=\"variable\">$binary_remote_addr</span> zone=ops:10m;</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"15-控制并发连接limit-conn-slimits\"><a href=\"#15-控制并发连接limit-conn-slimits\" class=\"headerlink\" title=\"15.控制并发连接limit_conn slimits\"></a>15.控制并发连接limit_conn slimits</h5><p>该配置项控制一个会话同时连接的最大数量，即限制来自单个IP地址的连接数量。</p>\n<p>加固方法：nginx.conf 文件中 limit_conn 应设置为: slimits 5<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 表示同一IP同一时间只允许10个连接</span></span><br><span class=\"line\">limit_conn ops 5;</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"16-主机防webshell跨目录浏览以及列目录\"><a href=\"#16-主机防webshell跨目录浏览以及列目录\" class=\"headerlink\" title=\"16.主机防webshell跨目录浏览以及列目录\"></a>16.主机防webshell跨目录浏览以及列目录</h5><p>加固方法：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a.在nginx.conf里把每个虚拟主机站点请求端口给区别开</span><br><span class=\"line\">b.为每个站点建一个conf，并进行配置</span><br><span class=\"line\">c.修改php-fpm启动脚本</span><br><span class=\"line\">d.启动服务</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#在main-http-server段中设置开启或者关闭(对于需要列目录的则开启,否则默认是关闭的)</span></span><br><span class=\"line\">autoindex off</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"17-文件名解析漏洞php-info-加入fcgi-conf即可\"><a href=\"#17-文件名解析漏洞php-info-加入fcgi-conf即可\" class=\"headerlink\" title=\"17.文件名解析漏洞php_info,加入fcgi.conf即可\"></a>17.文件名解析漏洞php_info,加入fcgi.conf即可</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$request_filename</span> ~* (.*)\\.php) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">set</span> <span class=\"variable\">$php_url</span> <span class=\"variable\">$1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (!-e <span class=\"variable\">$php_url</span>.php) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> 403;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<h5 id=\"18-访问权限控制nginx\"><a href=\"#18-访问权限控制nginx\" class=\"headerlink\" title=\"18.访问权限控制nginx\"></a>18.访问权限控制nginx</h5><p>加固方法:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#nginx.conf</span></span><br><span class=\"line\">location ~ ^/script/ &#123;</span><br><span class=\"line\">    auth_basic <span class=\"string\">\"welcome to weiyigeek.github.io\"</span>;</span><br><span class=\"line\">    auth_basic_user_file /var/www/<span class=\"built_in\">test</span>/script/.htpasswd;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#建立htpasswd密码进行认证</span></span><br><span class=\"line\">mkdir /var/www/<span class=\"built_in\">test</span>/script</span><br><span class=\"line\">perl -e <span class=\"string\">\"print crypt('baidu.eud',\"</span>n<span class=\"string\">\");\"</span></span><br><span class=\"line\">nnUygd3RSf3u6</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'nginx:nnUygd3RSf3u6'</span> &gt; /var/www/<span class=\"built_in\">test</span>/script/.htpasswd</span><br><span class=\"line\">/usr/<span class=\"built_in\">local</span>/nginx/sbin/nginx -s reload</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190909115355.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p><br></p>\n<h5 id=\"19-异常状态返回200隐藏URL\"><a href=\"#19-异常状态返回200隐藏URL\" class=\"headerlink\" title=\"19.异常状态返回200隐藏URL\"></a>19.异常状态返回200隐藏URL</h5><p>解决办法:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server&#123;</span><br><span class=\"line\">  listen       80;</span><br><span class=\"line\">  server_name  weiyigeek.top;</span><br><span class=\"line\">  index index.html index.htm index.php;</span><br><span class=\"line\">  root  /data/web;</span><br><span class=\"line\">  error_page 404 =200 /404.jpg;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"20-安全模块的选择\"><a href=\"#20-安全模块的选择\" class=\"headerlink\" title=\"20.安全模块的选择\"></a>20.安全模块的选择</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安全检测模块选择</span></span><br><span class=\"line\">http_sub_module</span><br><span class=\"line\">http_stub_status_module</span><br><span class=\"line\">xss-nginx-module</span><br><span class=\"line\">with-http_ssl_module</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<h5 id=\"21-记录访问者真实IP\"><a href=\"#21-记录访问者真实IP\" class=\"headerlink\" title=\"21.记录访问者真实IP\"></a>21.记录访问者真实IP</h5><p>描述后端获取Proxy后的真实Client的IP获取需要安装<code>--with-http_realip_module</code>，然后后端程序采用JAVA(<code>request.getAttribute(&quot;X-Real-IP&quot;)</code>)进行获取;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set_real_ip_from 100.0.0.0/8;<span class=\"comment\">#（这里是已知的代理ip）</span></span><br><span class=\"line\">real_ip_header X-Forwarded-For;</span><br><span class=\"line\">real_ip_recursive on;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 代理转发</span></span><br><span class=\"line\">location / &#123;</span><br><span class=\"line\">  proxy_pass http://weiyigeek.top</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">proxy_set_header Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">proxy_set_header X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\"><span class=\"built_in\">set</span> <span class=\"variable\">$Real</span> <span class=\"variable\">$http_x_forwarded_for</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> ( <span class=\"variable\">$Real</span> ~ (\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+),(.*) )&#123;</span><br><span class=\"line\">    <span class=\"built_in\">set</span> <span class=\"variable\">$Real</span> <span class=\"variable\">$1</span>.<span class=\"variable\">$2</span>.<span class=\"variable\">$3</span>.<span class=\"variable\">$4</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">proxy_set_header X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#区别</span></span><br><span class=\"line\"><span class=\"variable\">$proxy_add_x_forwarded_for</span> <span class=\"comment\">#较下面多一个$remote_addr的(只能获取到与服务器本身直连的上层请求ip)</span></span><br><span class=\"line\"><span class=\"variable\">$http_x_forwarded_for</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#日志获取</span></span><br><span class=\"line\"><span class=\"variable\">$http_x_real_ip</span>|<span class=\"variable\">$remote_addr</span>  <span class=\"comment\">#前提条件是cdn 那边也设置了X-forward否则获取的是cdn的ip</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"22-地区访问响应措施\"><a href=\"#22-地区访问响应措施\" class=\"headerlink\" title=\"22.地区访问响应措施\"></a>22.地区访问响应措施</h5><p>描述: 如果要使用geoip地区选择,我们需要再nginx编译时加入 <code>--with-http_geoip_module</code> 编译参数。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 例如,访问者IP地址不为中国或者美国的都返回403。</span><br><span class=\"line\">if ( $geoip_country_code !~  ^(CN|US)$ ) &#123;</span><br><span class=\"line\">  return 403;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"23-资源防盗链设置\"><a href=\"#23-资源防盗链设置\" class=\"headerlink\" title=\"23.资源防盗链设置\"></a>23.资源防盗链设置</h5><p>描述: 为了防止外部站点引用我们的静态资源，我们需要设置那些域名可以访问我们的静态资源。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># none : \"Referer\" 来源头部为空的情况</span></span><br><span class=\"line\"><span class=\"comment\"># blocked : \"Referer\" 来源头部不为空</span></span><br><span class=\"line\"><span class=\"comment\"># server_names : \"Referer\"来源头部包含当前的server_names（当前域名）</span></span><br><span class=\"line\">location ~* \\.(gif|jpg|png|swf|flv)$ &#123; </span><br><span class=\"line\">  valid_referers none blocked weiyigeek.top server_names ~\\.google\\. ~\\.baidu\\.; <span class=\"comment\">#这是可以盗链的域名或IP地址，一般情况可以把google，baidu，sogou，soso，bing，feedsky，zhuaxia，photozero等域名放进来</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable\">$invalid_referer</span>) &#123; </span><br><span class=\"line\">    <span class=\"comment\">#这样设置能够防盗链，不断地302重定向很多次，可能会加重服务器的负担，所以不建议这么做，除非有单独的图片服务器支持</span></span><br><span class=\"line\">    <span class=\"built_in\">return</span> 403; <span class=\"comment\"># 或者返回 403 错误代码 或者 JSON 字符串</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 返回json</span></span><br><span class=\"line\">    add_header Content-Type <span class=\"string\">'application/json; charset=utf-8'</span>;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> 200 <span class=\"string\">\"&#123;'msg':'valid'&#125;\"</span>; </span><br><span class=\"line\">    <span class=\"comment\"># 本地目录重写</span></span><br><span class=\"line\">    rewrite ^/.*.(gif|jpg|jpeg|png)$ /static/qrcode.jpg last;</span><br><span class=\"line\">    <span class=\"comment\"># 重写远程URL</span></span><br><span class=\"line\">    rewrite ^/ https://www.weiyigeek.top/picture/images/details-image-1.jpg;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"24-常规安全响应头配置\"><a href=\"#24-常规安全响应头配置\" class=\"headerlink\" title=\"24.常规安全响应头配置\"></a>24.常规安全响应头配置</h5><p>描述: 下面收集了Web服务中常规的安全响应头, 它可以保证不受到某些攻击,建议在指定的 <code>server{}</code> 代码块进行配置。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># HSTS (ngx_http_headers_module is required) 应该只使用 HTTPS 而不是使用 HTTP 通信</span></span><br><span class=\"line\">add_header Strict-Transport-Security <span class=\"string\">\"max-age=31536000;includeSubDomains;preload\"</span> always;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># XXS-Protection</span></span><br><span class=\"line\">add_header X-XSS-Protection <span class=\"string\">\"1; mode=block\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># MIME 模拟探测</span></span><br><span class=\"line\">add_header X-Content-Type-Options nosniff;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Frame 安全控制</span></span><br><span class=\"line\">add_header X-Frame-Options ALLOW-FROM music.163.com;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Spider Robots 爬取策略限制</span></span><br><span class=\"line\">add_header X-Robots-Tag none;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># CORS 跨域设置</span></span><br><span class=\"line\">add_header Access-Control-Allow-Origin <span class=\"string\">'*.weiyigeek.top'</span>;</span><br><span class=\"line\">add_header Access-Control-Allow-Methods <span class=\"string\">'GET'</span>;</span><br><span class=\"line\">add_header Access-Control-Allow-Headers <span class=\"string\">'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># CSP</span></span><br><span class=\"line\"><span class=\"comment\"># 现在让我们允许自托管 scripts、images、CSS、fonts 和 AJAX，以及 jQuery CDN 托管脚本和 Google Analytics 的内容:</span></span><br><span class=\"line\">Content-Security-Policy: default-src <span class=\"string\">'none'</span>; script-src <span class=\"string\">'self'</span> https://code.jquery.com https://www.google-analytics.com; img-src <span class=\"string\">'self'</span> https://www.google-analytics.com; connect-src <span class=\"string\">'self'</span>; font-src <span class=\"string\">'self'</span>; style-src <span class=\"string\">'self'</span>;</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"25-防止非所属域名解析到服务器\"><a href=\"#25-防止非所属域名解析到服务器\" class=\"headerlink\" title=\"25.防止非所属域名解析到服务器\"></a>25.防止非所属域名解析到服务器</h5><p>描述: 为了防止某些未备案的域名或者恶意镜像站域名绑定到我们服务器上, 导致服务器被警告关停，将会对业务或者SEO排名以及企业形象造成影响，我们可以通过如下方式进行防范。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">  listen 80 default_server;</span><br><span class=\"line\">  server_name 82.156.18.253;</span><br><span class=\"line\">  <span class=\"comment\"># 禁止搜索引擎收录IP</span></span><br><span class=\"line\">  add_header X-Robots-Tag <span class=\"string\">'noindex,noarchive,nosnippet'</span>;</span><br><span class=\"line\">  location ^~ / &#123;</span><br><span class=\"line\">    <span class=\"comment\"># IP地址访问强制301跳转</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( <span class=\"variable\">$host</span> = 82.156.18.253 )&#123;</span><br><span class=\"line\">      <span class=\"built_in\">return</span> 301 https://www.weiyigeek.top/index.html;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\"># 请求host非指定域名时返回json</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( <span class=\"variable\">$host</span> !~* weiyigeek\\.top ) &#123;</span><br><span class=\"line\">      add_header Content-Type <span class=\"string\">'application/json; charset=utf-8'</span>;</span><br><span class=\"line\">      <span class=\"built_in\">return</span> 200 <span class=\"string\">'&#123;\"status\":\"error\",\"Author\":\"WeiyiGeek\",\"Site\":\"https://www.weiyigeek.top\",\"Chinese\":\"大佬, 请不要把你的域名解析到我的服务器上\",\"English\":\"Friend, Please do not resolve your domain name to my server\"&#125;'</span>;</span><br><span class=\"line\">      <span class=\"comment\"># return 301 https://space.bilibili.com/385802642;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>执行结果:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ curl -I 82.156.18.253</span><br><span class=\"line\">HTTP/1.1 301 Moved Permanently</span><br><span class=\"line\">Server: nginx</span><br><span class=\"line\">Date: Mon, 11 Apr 2022 12:15:02 GMT</span><br><span class=\"line\">Content-Type: text/html</span><br><span class=\"line\">Content-Length: 162</span><br><span class=\"line\">Connection: keep-alive</span><br><span class=\"line\">Location: https://www.weiyigeek.top/index.html</span><br><span class=\"line\">X-Robots-Tag: noindex,noarchive,nosnippet</span><br><span class=\"line\"></span><br><span class=\"line\">$ curl --insecure -I https://82.156.18.253</span><br><span class=\"line\">HTTP/2 301</span><br><span class=\"line\">server: nginx</span><br><span class=\"line\">date: Mon, 11 Apr 2022 12:15:24 GMT</span><br><span class=\"line\">content-type: text/html</span><br><span class=\"line\">content-length: 162</span><br><span class=\"line\">location: https://www.weiyigeek.top/index.html</span><br><span class=\"line\">x-robots-tag: noindex,noarchive,nosnippet</span><br><span class=\"line\"></span><br><span class=\"line\">$ curl weiyigeek.cn</span><br><span class=\"line\">&#123;<span class=\"string\">\"status\"</span>:<span class=\"string\">\"error\"</span>,<span class=\"string\">\"Author\"</span>:<span class=\"string\">\"WeiyiGeek\"</span>,<span class=\"string\">\"Site\"</span>:<span class=\"string\">\"https://www.weiyigeek.top\"</span>,<span class=\"string\">\"Chinese\"</span>:<span class=\"string\">\"大佬, 请不要把你的域名解析到我的服务器上\"</span>,<span class=\"string\">\"English\"</span>:<span class=\"string\">\"Friend, Please do not resolve your domain name to my server\"</span>&#125;</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"25-限制指定客户端地址访问\"><a href=\"#25-限制指定客户端地址访问\" class=\"headerlink\" title=\"25.限制指定客户端地址访问\"></a>25.限制指定客户端地址访问</h5><p>描述: 有时你的网站可能只需要被某一IP或者IP段的地址请求访问，那么非白名单中的地址访问将被阻止访问, 我们可以如下配置;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location / &#123;</span><br><span class=\"line\">  allow  12.97.167.194; </span><br><span class=\"line\">  allow  12.33.1.2; </span><br><span class=\"line\">  allow  12.152.49.4;</span><br><span class=\"line\">  deny  all;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h4 id=\"5-配置说明\"><a href=\"#5-配置说明\" class=\"headerlink\" title=\"5.配置说明\"></a>5.配置说明</h4><p><strong>常用nginx配置文件解释：</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#[Main] Nginx启动的用户(建议非root用户)</span></span><br><span class=\"line\">user nginx;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#[Main] NGINX工作进程数设置值和CPU核心数一致(优化选项)</span></span><br><span class=\"line\"><span class=\"comment\">#采用 grep ^processor /proc/cpuinfo | wc -l 进行查看或者auto</span></span><br><span class=\"line\">worker_processes  auto;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#[Main] 工作模式与连接数上限即每个工作进程可以处理并发的最大连接数(优化选项)</span></span><br><span class=\"line\">events &#123;</span><br><span class=\"line\">    <span class=\"comment\"># [Main-events] nginx作为反向代理服务器单个进程最大连接数（最大连接数=连接数*进程数）</span></span><br><span class=\"line\">    <span class=\"comment\">#建议与worker_rlimit_nofile一致</span></span><br><span class=\"line\">    worker_connections  65535;</span><br><span class=\"line\">     <span class=\"comment\">#[Main-events] use [ kqueue | rtsig | epoll | /dev/poll | select | poll ]; </span></span><br><span class=\"line\">    <span class=\"comment\"># epoll模型是Linux 2.6以上版本内核中的高性能网络I/O模型，如果跑在FreeBSD上面，就用kqueue模型。</span></span><br><span class=\"line\">    use epoll;</span><br><span class=\"line\">    <span class=\"comment\"># [Main-events] 提高性能和吞吐量</span></span><br><span class=\"line\">    accept_mutex off;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#[Main] 高并发参数(通过设置cpu粘性来降低由于多CPU核切换造成的寄存器等现场重建带来的性能损耗)(优化选项)</span></span><br><span class=\"line\">worker_cpu_affinity 0001 0010 0100 1000; <span class=\"comment\"># 四核的时候</span></span><br><span class=\"line\"><span class=\"comment\">#假如是8 cpu 分配如下: worker_cpu_affinity 00000001 00000010 00000100 00001000 0001000000100000 01000000 10000000</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#[Main] 默认是没有设置，可以限制为操作系统最大的限制65535。(优化选项)</span></span><br><span class=\"line\">worker_rlimit_nofile 65535</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#[Main]日志位置和日志级别[ debug | info | notice | warn | error | crit ]</span></span><br><span class=\"line\"><span class=\"comment\">#error_log  logs/error.log;</span></span><br><span class=\"line\"><span class=\"comment\">#error_log  logs/error.log  notice;</span></span><br><span class=\"line\"><span class=\"comment\">#error_log  logs/error.log  info;</span></span><br><span class=\"line\">error_log logs/error.log  error;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#服务进程启动文件</span></span><br><span class=\"line\">pid /var/run/nginx.pid;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#当前主配置文件包含其他的nginx模块配置文件</span></span><br><span class=\"line\">include /etc/nginx/conf.d/*.conf; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#[Main部分] http服务器提供http服务相关的一些配置参数。例如：是否使用keepalive啊，是否使用gzip进行压缩等。</span></span><br><span class=\"line\">http &#123;</span><br><span class=\"line\">    <span class=\"comment\">#文件扩展名与文件类型映射表</span></span><br><span class=\"line\">    include       mime.types;</span><br><span class=\"line\">    <span class=\"comment\">#默认文件类型</span></span><br><span class=\"line\">    default_type  text/html;</span><br><span class=\"line\">    <span class=\"comment\">#响应的编码格式</span></span><br><span class=\"line\">    charset UTF-8;</span><br><span class=\"line\">    <span class=\"comment\">#服务器名字的hash表大小</span></span><br><span class=\"line\">    server_names_hash_bucket_size  128;</span><br><span class=\"line\">    <span class=\"comment\">#缓冲区代理缓冲用户端请求的最大字节数， </span></span><br><span class=\"line\">    client_body_buffer_size 128k</span><br><span class=\"line\">    <span class=\"comment\">#上传文件大小限制</span></span><br><span class=\"line\">    client_header_buffer_size 4k;</span><br><span class=\"line\">    <span class=\"comment\">#允许客户端请求的最大单文件字节数。如果有上传较大文件，请设置它的限制值</span></span><br><span class=\"line\">    client_max_body_size 50m</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#文件访问缓存设置与系统文件描述符设置一致</span></span><br><span class=\"line\">    open_file_cache max=65536  inactive=60s;</span><br><span class=\"line\">    open_file_cache_valid      80s;</span><br><span class=\"line\">    open_file_cache_min_uses   1;</span><br><span class=\"line\"></span><br><span class=\"line\">    large_client_header_buffers 4 64k; <span class=\"comment\">#设定请求缓</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#nginx日志记录格式</span></span><br><span class=\"line\">    log_format  main  <span class=\"string\">'$remote_addr - $remote_user [$time_local] \"$request\" '</span></span><br><span class=\"line\">                      <span class=\"string\">'$status $body_bytes_sent \"$http_referer\" '</span></span><br><span class=\"line\">                     <span class=\"string\">'\"$http_user_agent\" \"$http_x_forwarded_for\"'</span>;</span><br><span class=\"line\">    log_format custom <span class=\"string\">'$remote_addr - $remote_user [$time_local] \"$request\" '</span></span><br><span class=\"line\">                    <span class=\"string\">'$status $body_bytes_sent \"$http_referer\" '</span></span><br><span class=\"line\">                    <span class=\"string\">'\"$http_user_agent\" \"$http_x_forwarded_for\" rt=$request_time urt=$upstream_response_time'</span>;</span><br><span class=\"line\">    <span class=\"comment\">#使用缓冲而不是每条日志记录都单独执行写操作，NGINX会缓冲一连串的日志记录使用单个操作把它们一起写到文件中。</span></span><br><span class=\"line\">    access_log  logs/access.log  main buffer=1024 flush=60s;</span><br><span class=\"line\">    access_log  /var/<span class=\"built_in\">log</span>/nginx/access.log  custom buffer=128k flush=5m;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#关闭server信息头响应</span></span><br><span class=\"line\">    server_tokens off;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#[MAIN-http]开启高效文件传输模式,指定nginx是否调用sendfile函数来输出文件，减少用户空间到内核空间的上下文切换(与accept_mutex关联配置)</span></span><br><span class=\"line\">    <span class=\"comment\">#对于普通应用设为 on，如果用来进行下载等应用磁盘IO重负载应用可设置为off，以平衡磁盘与网络I/O处理速度，降低系统的负载。</span></span><br><span class=\"line\">    <span class=\"comment\">#系统调用可以实现从一个文件描述符到另一个文件描述符的数据拷贝，通常实现零拷贝，这能加速TCP数据传输</span></span><br><span class=\"line\">    <span class=\"comment\">#当配置环境下有sendfile指令和激活内容更改过滤器的指令时NGINX会自动禁用sendfile。#(优化选项)</span></span><br><span class=\"line\">    sendfile        on; </span><br><span class=\"line\">    <span class=\"comment\">#防止网络阻塞,不过要包涵在keepalived参数才有效</span></span><br><span class=\"line\">    tcp_nopush on; </span><br><span class=\"line\">    tcp_nodelay on; </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#空闲长连接保持打开状态的时间(优化选项)</span></span><br><span class=\"line\">    <span class=\"comment\">#长连接请求大量小文件的时候，可以减少重建连接的开销，但假如有大文件上传120s内没上传完成会导致失败。如果设置时间过长，用户又多，长时间保持连接会占用大量资源。</span></span><br><span class=\"line\">    keepalive_timeout  120;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#用于指定响应客户端的超时时间。这个超时仅限于两个连接活动之间的时间，如果超过这个时间客户端没有任何活动，Nginx将会关闭连接</span></span><br><span class=\"line\">    <span class=\"comment\">#send_timeout  180s</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">###模块http_gzip#####</span></span><br><span class=\"line\">    <span class=\"comment\">#开启gzip压缩输出，减少网络传输。</span></span><br><span class=\"line\">    gzip  on;</span><br><span class=\"line\">    <span class=\"comment\">#最小压缩文件大小(注意不能小于1k)</span></span><br><span class=\"line\">    gzip_min_length 1k;</span><br><span class=\"line\">    <span class=\"comment\">#压缩缓冲区</span></span><br><span class=\"line\">    gzip_buffers 4 64k;</span><br><span class=\"line\">    <span class=\"comment\">#压缩版本（默认1.1，前端如果是squid2.5请使用1.0）</span></span><br><span class=\"line\">    gzip_http_version 1.1;</span><br><span class=\"line\">    <span class=\"comment\">#压缩等级</span></span><br><span class=\"line\">    gzip_comp_level 2;</span><br><span class=\"line\">    <span class=\"comment\">##压缩类型，默认就已经包含text/html，</span></span><br><span class=\"line\">    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">###模块fastcgi#####</span></span><br><span class=\"line\">    <span class=\"comment\">#FastCGI相关参数是为了改善网站的性能：减少资源占用，提高访问速度。</span></span><br><span class=\"line\">    <span class=\"comment\"># fastcgi_temp_path  /tmp/fastcgi_temp;</span></span><br><span class=\"line\">    <span class=\"comment\"># fastcgi_cache_path /tmp/fastcgi_cache levels=1:2 keys_zone=cache_fastcgi:128m inactive=30m max_size=1g;</span></span><br><span class=\"line\">    <span class=\"comment\"># fastcgi_cache_key  $host$request_uri;</span></span><br><span class=\"line\">    <span class=\"comment\">#指定的Http状态码指定缓存时间</span></span><br><span class=\"line\">    <span class=\"comment\"># fastcgi_cache_valid 200 302 1h; </span></span><br><span class=\"line\">    <span class=\"comment\"># fastcgi_cache_valid 301 1d;</span></span><br><span class=\"line\">    <span class=\"comment\"># fastcgi_cache_valid any 1m;</span></span><br><span class=\"line\">    <span class=\"comment\"># fastcgi_cache_min_uses 1;</span></span><br><span class=\"line\">    <span class=\"comment\"># fastcgi_cache_use_stale error timeout http_500 http_503 invalid_header;</span></span><br><span class=\"line\">    <span class=\"comment\">#指定链接到后端FastCGI的超时时间。</span></span><br><span class=\"line\">    <span class=\"comment\"># fastcgi_connect_timeout 300;</span></span><br><span class=\"line\">    <span class=\"comment\">#向FastCGI传送请求的超时时间，这个值是指已经完成两次握手后向FastCGI传送请求的超时时间。</span></span><br><span class=\"line\">    <span class=\"comment\"># fastcgi_send_timeout 300;</span></span><br><span class=\"line\">    <span class=\"comment\">#指定接收FastCGI应答的超时时间，这个值是指已经完成两次握手后接收FastCGI应答的超时时间。</span></span><br><span class=\"line\">    <span class=\"comment\"># fastcgi_read_timeout 300;</span></span><br><span class=\"line\">    <span class=\"comment\">#指定读取FastCGI应答第一部分需要用多大的缓冲区，这个值表示将使用1个64KB的缓冲区读取应答的第一部分（应答头），可以设置为gastcgi_buffers选项指定的缓冲区大小。</span></span><br><span class=\"line\">    <span class=\"comment\"># fastcgi_buffer_size 64k;</span></span><br><span class=\"line\">    <span class=\"comment\">#一个php脚本所产生的页面大小为256KB，那么会分配4个64KB的缓冲区来缓存</span></span><br><span class=\"line\">    <span class=\"comment\"># fastcgi_buffers 4 64k; </span></span><br><span class=\"line\">    <span class=\"comment\">#建议设置为fastcgi_buffer的两倍，繁忙时候的buffer</span></span><br><span class=\"line\">    <span class=\"comment\"># fastcgi_busy_buffers_size 128k;</span></span><br><span class=\"line\">    <span class=\"comment\"># fastcgi_temp_file_write_size 128k;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#[Main-http]配置虚拟主机设置</span></span><br><span class=\"line\">    <span class=\"comment\">#http服务上支持若干虚拟主机。每个虚拟主机一个对应的server配置项，配置项里面包含该虚拟主机相关的配置</span></span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        <span class=\"comment\">#[Main-http-server] ngnix监听端口</span></span><br><span class=\"line\">        listen       80;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">#服务器名：虚拟主机的域名可以写多个域名，可以通过正则匹配。</span></span><br><span class=\"line\">        server_name  localhost;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#实现访问http时自动跳转到https</span></span><br><span class=\"line\">        <span class=\"built_in\">return</span> 301 https://<span class=\"variable\">$host</span><span class=\"variable\">$request_uri</span>;</span><br><span class=\"line\">        <span class=\"comment\">#access_log  logs/host.access.log  main;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#请求正则匹配的来判断访问路径，默认访问localhost:80 访问的是下面这个路径的网页</span></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            <span class=\"comment\">#站点根目录你网站文件存放的地方</span></span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">            <span class=\"comment\">#定义路径下默认访问的文件名，一般跟着root放</span></span><br><span class=\"line\">            index  index.html index.htm;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">#开启限制IP连接数的时候需要使用</span></span><br><span class=\"line\">            <span class=\"comment\">#limit_zone crawler $binary_remote_addr 10m; </span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">#访问控制模块默认就会安装，而且写法也非常简单，可以分别有多个allow,deny，允许或禁止某个ip或ip段访问，</span></span><br><span class=\"line\">            <span class=\"comment\">#依次满足任何一个规则就停止往下匹配 (安全选项)</span></span><br><span class=\"line\">            allow 192.168.10.100;</span><br><span class=\"line\">            allow 172.29.73.0/24;</span><br><span class=\"line\">            deny all;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">#认证访问 通过httpd-devel 工具的 htpasswd 来为访问的路径设置登录密码 (安全选项)</span></span><br><span class=\"line\">            <span class=\"comment\">#比如：htpasswd -c nginx.htpasswd admin 生成了默认使用CRYPT加密的密码文件#</span></span><br><span class=\"line\">            auth_basic <span class=\"string\">\"Nginx Status\"</span></span><br><span class=\"line\">            auth_basic_user_file /usr/<span class=\"built_in\">local</span>/nginx/nginx.passwd</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">#列出目录 autoindex Nginx默认是不允许列出整个目录的合适下载服务器。(非常不推荐)</span></span><br><span class=\"line\">            <span class=\"comment\">#如需此功能，打开nginx.conf文件，在location，server 或 http段中加入autoindex on;</span></span><br><span class=\"line\">            <span class=\"comment\">#autoindex on</span></span><br><span class=\"line\">            <span class=\"comment\">#显示出文件的确切大小单位是bytes。改为off后显示出文件的大概大小，单位是kB或者MB或者GB</span></span><br><span class=\"line\">            <span class=\"comment\">#autoindex_exact_size off</span></span><br><span class=\"line\">            <span class=\"comment\">#默认为off，显示的文件时间为GMT时间。改为on后，显示的文件时间为文件的服务器时间</span></span><br><span class=\"line\">            <span class=\"comment\">#autoindex_localtime on;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">#error_page  404              /404.html;</span></span><br><span class=\"line\">        <span class=\"comment\">#将服务器错误页面直接指向静态页面/50x.html</span></span><br><span class=\"line\">        error_page   500 502 503 504  /50x.html;</span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#代理PHP脚本到Apache上监听127.0.0.1:80 末尾以php或者php5结尾的</span></span><br><span class=\"line\">        <span class=\"comment\">#location ~ \\.(php|php5)?$ &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">#    proxy_pass   http://127.0.0.1;</span></span><br><span class=\"line\">        <span class=\"comment\">#&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#将PHP脚本传递到正在监听127.0.0.1:9000的FastCGI服务器</span></span><br><span class=\"line\">        <span class=\"comment\">#location ~ .+\\.(php|php5)$ &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">#    root           html;</span></span><br><span class=\"line\">        <span class=\"comment\">#    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class=\"line\">        <span class=\"comment\">#    fastcgi_pass   unix:/tmp/php.sock;  #为了安全推荐方式</span></span><br><span class=\"line\">        <span class=\"comment\">#    fastcgi_index  index.php;</span></span><br><span class=\"line\">        <span class=\"comment\">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class=\"line\">        <span class=\"comment\">#    include        fastcgi_params;</span></span><br><span class=\"line\">        <span class=\"comment\">#    fastcgi_cache  cache_fastcgi;</span></span><br><span class=\"line\">        <span class=\"comment\">#&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 如果Apache的文档根目录与nginx的根目录一致，则拒绝访问.htaccess文件</span></span><br><span class=\"line\">        <span class=\"comment\">#location ~ /\\.ht &#123;</span></span><br><span class=\"line\">        <span class=\"comment\">#    deny  all;</span></span><br><span class=\"line\">        <span class=\"comment\">#&#125;</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">#静态资源正则请求路径匹配</span></span><br><span class=\"line\">        location ~ .+\\.(gif|jpg|jpeg|png|bmp|swf|txt|csv|doc|docx|xls|xlsx|ppt|pptx|flv)$ &#123;  </span><br><span class=\"line\">          root  e:wwwroot; </span><br><span class=\"line\">          expires 30d;  <span class=\"comment\">#缓存有效期30天</span></span><br><span class=\"line\">          access_log off; <span class=\"comment\">#访问记录</span></span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">        <span class=\"comment\">#JS和CSS缓存时间设置</span></span><br><span class=\"line\">        location ~ .+\\.(js|css|html|xml)$ &#123; expires 30d;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#访问控制也可以加入认证</span></span><br><span class=\"line\">        location /nginx-status&#123;</span><br><span class=\"line\">            <span class=\"comment\">#nginx中的stub_status模块主要用于查看Nginx的一些状态信息. 本模块默认没有安装需要编译安装。</span></span><br><span class=\"line\">            stub_status on;</span><br><span class=\"line\">            allow 192.168.1.0/24;</span><br><span class=\"line\">            allow 127.0.0.1;</span><br><span class=\"line\">            deny all;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#### Nginx反向代理 ######</span></span><br><span class=\"line\">    <span class=\"comment\">#[Main-http] upstream模块设置反向代理和负载均衡的连接的内部web应用服务IP端口</span></span><br><span class=\"line\">    upstream monitor_server &#123;</span><br><span class=\"line\">        <span class=\"comment\">#seesion记录访问的主机，比如第一次访问该服务器后就记录，之后再访问都是该服务器了-进行了绑定</span></span><br><span class=\"line\">        ip_hash;</span><br><span class=\"line\">        <span class=\"comment\">#内网的应用服务,weigth参数表示权值越高被分配到的几率越大。</span></span><br><span class=\"line\">        <span class=\"comment\">#max_fails当有max_fails个请求失败，就表示后端的服务器不可用，默认为1将其设置为0可以关闭检查 </span></span><br><span class=\"line\">        <span class=\"comment\">#fail_timeout 在以后的fail_timeout时间内nginx不会再把请求发往已检查出标记为不可用的服务器 </span></span><br><span class=\"line\">        server 192.168.0.131:80 weight=9 max_fails=5 fail_timeout=600s;  </span><br><span class=\"line\">        server 192.168.0.132:80 weight=1 max_fails=5 fail_timeout=600s;</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#server指令配置项</span></span><br><span class=\"line\">    server &#123; </span><br><span class=\"line\">        listen 80; </span><br><span class=\"line\">        <span class=\"comment\">#请求响应的域名</span></span><br><span class=\"line\">        server_name blog.weiyigeek.top; </span><br><span class=\"line\">        </span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">          <span class=\"comment\">##### 模块http_proxy：##### 反向代理主要配置</span></span><br><span class=\"line\">          <span class=\"comment\">#即反向代理，对应upstream负载均衡器</span></span><br><span class=\"line\">          proxy_pass http://monitor_server;</span><br><span class=\"line\">          </span><br><span class=\"line\">          <span class=\"comment\">#代理服务器相关信息头设置</span></span><br><span class=\"line\">          proxy_redirect off;</span><br><span class=\"line\">          <span class=\"comment\">#如果是有涉及redirect的服务，一定要加上端口8081，否 则默认tomcat在redirect时候默认找80端口 </span></span><br><span class=\"line\">          proxy_set_header Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">          <span class=\"comment\">#转发请求的原IP地址，程序中通过request.getHeader(\"Proxy-Client-IP\")获得ip </span></span><br><span class=\"line\">          proxy_set_header X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">          <span class=\"comment\">#端的Web服务器可以通过X-Forwarded-For获取用户真实IP</span></span><br><span class=\"line\">          proxy_set_header X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>; </span><br><span class=\"line\">          </span><br><span class=\"line\">          <span class=\"comment\">##nginx跟后端服务器连接超时时间(代理连接超时)</span></span><br><span class=\"line\">          <span class=\"comment\">#模块http_proxy代理超时设置</span></span><br><span class=\"line\">          proxy_connect_timeout 60s;  </span><br><span class=\"line\">          </span><br><span class=\"line\">          <span class=\"comment\">##nginx跟后端服务器连接超时时间(代理连接超时) </span></span><br><span class=\"line\">          proxy_read_timeout 60s;     </span><br><span class=\"line\">          </span><br><span class=\"line\">          <span class=\"comment\">#后端服务器数据回传时间(代理发送超时) 间</span></span><br><span class=\"line\">          proxy_send_timeout 30s;</span><br><span class=\"line\">          </span><br><span class=\"line\">          <span class=\"comment\">#设置代理服务器（nginx）从后端realserver读取并保存用户头信息的缓冲区大小，默认与proxy_buffers大小相同，其实可以将这个指令值设的小一点</span></span><br><span class=\"line\">          proxy_buffer_size 4k</span><br><span class=\"line\">          <span class=\"comment\">#proxy_buffers缓冲区，nginx针对单个连接缓存来自后端realserver的响应，网页平均在32k以下的</span></span><br><span class=\"line\">          proxy_buffers 4 32k</span><br><span class=\"line\">          </span><br><span class=\"line\">          <span class=\"comment\">#高负荷下缓冲大小（proxy_buffers*2）</span></span><br><span class=\"line\">          proxy_busy_buffers_size 64k</span><br><span class=\"line\">          </span><br><span class=\"line\">          <span class=\"comment\">#当proxy_buffers放不下后端服务器的响应内容时，会将一部分保存到硬盘的临时文件中，这个值用来设置最大临时文件大小，默认1024M</span></span><br><span class=\"line\">          <span class=\"comment\">#它与proxy_cache没有关系。大于这个值，将从upstream服务器传回。设置为0禁用。</span></span><br><span class=\"line\">          proxy_max_temp_file_size 0</span><br><span class=\"line\">          </span><br><span class=\"line\">          <span class=\"comment\">#当缓存被代理的服务器响应到临时文件时，限制每次写临时文件的大小。proxy_temp_path（可以在编译的时候）指定写到哪那个目录。</span></span><br><span class=\"line\">          proxy_temp_file_write_size 64k</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"comment\">#把cookie的作用域替换成我们的域名。</span></span><br><span class=\"line\">          <span class=\"comment\">#proxy_cookie_domain google.com.hk www.example.com;  </span></span><br><span class=\"line\">          <span class=\"comment\">#proxy_set_header Host \"www.google.com.hk\";          #设置反向代理得header请求头</span></span><br><span class=\"line\">          <span class=\"comment\">#proxy_redirect http://www.google.com.hk/ ;          #重定向</span></span><br><span class=\"line\">          <span class=\"comment\">#proxy_redirect http:// https://;</span></span><br><span class=\"line\">          <span class=\"comment\">#sub_filter www.google.com.hk www.example.com;       #把谷歌的域名替换成自己的，注意需要安装nginx的sub_filter模块</span></span><br><span class=\"line\">          <span class=\"comment\">#反向代理的配置. END</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#本地动静分离反向代理配置</span></span><br><span class=\"line\">        <span class=\"comment\">#所有jsp的页面均交由tomcat或resin处理</span></span><br><span class=\"line\">        location ~ .(jsp|jspx|<span class=\"keyword\">do</span>)?$ &#123;</span><br><span class=\"line\">            proxy_set_header Host <span class=\"variable\">$host</span>;</span><br><span class=\"line\">            proxy_set_header X-Real-IP <span class=\"variable\">$remote_addr</span>;</span><br><span class=\"line\">            proxy_set_header X-Forwarded-For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br><span class=\"line\">            proxy_pass http://127.0.0.1:8080;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#所有静态文件由nginx直接读取不经过tomcat或resin</span></span><br><span class=\"line\">        location ~ \\.(htm|html|gif|jpg|jpeg|png|bmp|swf|ioc|rar|zip|txt|flv|mid|doc|ppt|pdf|xls|mp3|wma)$ &#123; expires 15d; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        location ~ \\.(js|css)$ &#123; expires 1h; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 另一个虚拟主机，混合使用IP、名称和基于端口的配置</span></span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">      listen 80;</span><br><span class=\"line\">      listen [::]:80;</span><br><span class=\"line\">      server_name weiyigeek.top;</span><br><span class=\"line\">      <span class=\"built_in\">return</span> 301 https://<span class=\"variable\">$host</span><span class=\"variable\">$request_uri</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">    listen 443 ssl http2;</span><br><span class=\"line\">    listen [::]:443 ssl http2;</span><br><span class=\"line\">    server_name weiyigeek.top;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># HSTS (ngx_http_headers_module is required) 应该只使用 HTTPS 而不是使用 HTTP 通信</span></span><br><span class=\"line\">    add_header Strict-Transport-Security <span class=\"string\">\"max-age=31536000;includeSubDomains;preload\"</span> always;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># XXS-Protection</span></span><br><span class=\"line\">    add_header X-XSS-Protection <span class=\"string\">\"1; mode=block\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># MIME 模拟探测</span></span><br><span class=\"line\">    add_header X-Content-Type-Options nosniff;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Frame 安全控制</span></span><br><span class=\"line\">    add_header X-Frame-Options ALLOW-FROM music.163.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Spider Robots 爬取策略限制</span></span><br><span class=\"line\">    <span class=\"comment\"># add_header X-Robots-Tag none; # 不限制</span></span><br><span class=\"line\">    <span class=\"comment\"># add_header X-Robots-Tag noindex, noarchive, nosnippet; # 限制</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 开启 SSL ，如果想http 与 https 公用一个配置则可以将其注释( the \"ssl\" directive is deprecated )</span></span><br><span class=\"line\">    <span class=\"comment\"># ssl on;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 配置证书链与证书密钥</span></span><br><span class=\"line\">    ssl_certificate      /etc/nginx/ssl/fullchain.cer;</span><br><span class=\"line\">    ssl_certificate_key  /etc/nginx/ssl/weiyigeek.top.key;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># ssl会话复用超时时间以及会话复用缓存大小</span></span><br><span class=\"line\">    ssl_session_timeout 1d;</span><br><span class=\"line\">    ssl_session_cache shared:MozSSL:10m;  <span class=\"comment\"># about 40000 sessions</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 配置双证书时开启否则应该关闭</span></span><br><span class=\"line\">    ssl_session_tickets off;  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">## OCSP stapling</span></span><br><span class=\"line\">    ssl_stapling on;</span><br><span class=\"line\">    ssl_stapling_verify on;</span><br><span class=\"line\">    <span class=\"comment\"># 使用根 CA 和中间证书验证 OCSP 响应的信任链</span></span><br><span class=\"line\">    ssl_trusted_certificate /etc/nginx/ssl/ca.cer;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 仅使用ECDH是不用配置ssl_dhparam的否则你应该为它配置上 </span></span><br><span class=\"line\">    <span class=\"comment\"># curl https://ssl-config.mozilla.org/ffdhe2048.txt &gt; /path/to/dhparam</span></span><br><span class=\"line\">    ssl_dhparam /path/to/dhparam;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 兼容性较为通用的SSL协议与加密算法套件</span></span><br><span class=\"line\">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;</span><br><span class=\"line\">    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE:ECDH:AES:HIGH:EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:!NULL:!aNULL:!eNULL:!EXPORT:!PSK:!ADH:!DH:!DES:!MD5:!RC4;</span><br><span class=\"line\">    <span class=\"comment\"># 安全配置: ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4:!DH:!DHE;</span></span><br><span class=\"line\">    <span class=\"comment\"># 证书常规握手加密算法方式共十八个，ECDHE、DHE、AES开头分别6个</span></span><br><span class=\"line\">    ; ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:HIGH:!NULL:!aNULL:!eNULL:!EXPORT:!PSK:!ADH:!DES:!MD5:!RC4;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 为了兼容性推荐服务器自动选择要使用的算法套件</span></span><br><span class=\"line\">    ssl_prefer_server_ciphers  on;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># replace with the IP address of your resolver</span></span><br><span class=\"line\">    resolver 223.6.6.6 8.8.8.8 192.168.12.254;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>为了更好的指导部署与测试系统，在保证nginx网站服务器高性能的同时下，为了保证其安全稳定运行，我们需要对nginx服务进行调优与加固; 本次进行Nginx服务调优加固主要从以下几个部分，模块性能优化，系统内核优化，编译安装优化，性能参数优化，安全加固配置，<br>可以帮助安全开发运维者加速进行Nginx服务器相关优化。</p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"安全加固","path":"api/categories/安全加固.json"},{"name":"性能优化","path":"api/categories/性能优化.json"},{"name":"运维实践","path":"api/categories/运维实践.json"}],"tags":[{"name":"Nginx","path":"api/tags/Nginx.json"}]}