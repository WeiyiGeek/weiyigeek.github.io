{"title":"Sed三剑客入门与进阶实践指南","slug":"系统运维/Linux/常用命令/脚本常用类命令/sed三剑客入门与进阶实践指南","date":"2019-06-26T13:37:30.000Z","updated":"2023-03-06T07:37:48.216Z","url":"2019/6-26-177.html","path":"api/articles/2019/6-26-177.html.json","covers":["https://img.weiyigeek.top/2019/20190713225828.png","https://img.weiyigeek.top/2019/20190715090708.png","https://img.weiyigeek.top/2019/20190715093221.png","https://img.weiyigeek.top/2019/20190713231707.png","https://img.weiyigeek.top/2019/20190715093449.png","https://img.weiyigeek.top/2019/20190715100037.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h4 id=\"0x00-快速入门\"><a href=\"#0x00-快速入门\" class=\"headerlink\" title=\"0x00 快速入门\"></a>0x00 快速入门</h4><p>描述：功能强大的流式文本编辑器(流编辑器-Stream editor)进行文本过滤与格式化替换输出,是在进行文本处理中非常实用的工具,能够完美的配合正则表达式使用;</p>\n<p>Sed主要用来<code>自动编辑一个或多个文件</code>,简化对文件的反复操作,编写转换程序等，处理时把当前处理的行存储在临时缓冲区中,称<code>“模式空间”(pattern space)</code>,可以指定仅仅处理哪些行</p>\n<p><a href=\"https://github.com/WeiyiGeek/mindmap/blob/master/Linux/Command/Sed%E5%91%BD%E4%BB%A4%E9%80%9F%E8%AE%B0.png\" target=\"_blank\" rel=\"noopener\">+ sed 命令脑图</a></p>\n<p><strong>Sed执行流程：</strong></p>\n<ul>\n<li>将要处理的文本文件通过指定文本文件路径或者管道输入;</li>\n<li>循环读取文本中的行到<code>模式空间</code>,进行判断是否要被处理的行;</li>\n<li>执行sed命令进行进一步的处理缓冲区中的内容;</li>\n<li>打印模式空间 / 清空模式空间;</li>\n<li>读取下一行直至文本结束,并将结果输出或者重定向存储输出;</li>\n</ul>\n<p>sed 软件有两个内置的存储空间：</p>\n<ul>\n<li>模式空间(pattern space) : 是处理时<code>把当前处理的行存储在临时缓冲区中</code>接着用sed命令处理操作模式空间，<code>处理完成后把缓冲区的内容送往屏幕</code>，接着处理下一行这样不断重复直到文件末尾；</li>\n<li>保持空间(hold space) ：是sed的另外一个缓冲区，用来存放临时数据，sed可以交换保持空间与模式空间数据，但不能在保持空间上执行普通的sed命令；</li>\n</ul>\n<p>备注：初始情况下，模式空间和保持空间都是没有内容的，每次循环读取数据的过程中，模式空间的内容都会被清空写入新的内容，但保持空间的内容保持不变，不会再循环中被删除；</p>\n<p>命令格式<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># sed 选项  sed-命令 文件|标准输入|管道符</span></span><br><span class=\"line\">sed [options] <span class=\"string\">'command'</span> files   <span class=\"comment\">#文件：指定待处理的文本文件列表或者通过管道符（支持多个文件）</span></span><br><span class=\"line\">sed [options] -f scriptfile files</span><br><span class=\"line\">sed <span class=\"string\">'[地址范围|模式范围] s#&#123;被替换的字符串&#125;#&#123;替换后的字符串&#125;#&#123;替换标准&#125;'</span> [输入文件]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#组合多个表达式</span></span><br><span class=\"line\">sed <span class=\"string\">'表达式'</span> | sed <span class=\"string\">'表达式'</span> <span class=\"comment\">#等价于下面这一条sed语句</span></span><br><span class=\"line\">sed <span class=\"string\">'表达式; 表达式'</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><em>Sed命令的选项</em><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#选项参数</span></span><br><span class=\"line\">-e &lt;script&gt;或--expression=&lt;script&gt;：<span class=\"comment\">#以选项中的指定的script来处理编辑输入的文本文件，可以执行多条sed命令</span></span><br><span class=\"line\">-f &lt;script文件&gt;或--file=&lt;script文件&gt;：<span class=\"comment\">#以选项中指定的script文件来处理输入的文本文件</span></span><br><span class=\"line\">-i ：<span class=\"comment\">#用于sed修改的结果直接修改读取数据的文件，而不有Screen输出.（直接在源文件里加入）</span></span><br><span class=\"line\">-n或--quiet或--silent：<span class=\"comment\">#只列出结果sed特殊处理的那一行，不显示原来那一行</span></span><br><span class=\"line\">-r :支持扩展表达式sed里面()就不需要使用\\();</span><br></pre></td></tr></table></figure></p>\n<p>示例解释：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed <span class=\"string\">'Ms#[源字符串]#[替换的字符]#[Ns|N]'</span> file</span><br><span class=\"line\"><span class=\"comment\">#Ms ： 对第M行操作 无g标志对匹配的第1列处理;有g则对着一行操作；</span></span><br><span class=\"line\"><span class=\"comment\">#Ng :  从第N处/列后面全部开始替换</span></span><br><span class=\"line\"><span class=\"comment\">#Ms Ng : 对第M行从第N出开始匹配替换</span></span><br><span class=\"line\"><span class=\"comment\">#N ：从N处进行匹配替换一次 1&lt;N&lt;512</span></span><br><span class=\"line\"></span><br><span class=\"line\">[root@master tmp]<span class=\"comment\"># sed '2s#1#0#2' test.txt</span></span><br><span class=\"line\">1 1 1 1 1</span><br><span class=\"line\">1 0 1 1 1</span><br><span class=\"line\">1 1 1 1 1</span><br><span class=\"line\">1 1 1 1 1</span><br><span class=\"line\">1 1 1 1 1</span><br><span class=\"line\">[root@master tmp]<span class=\"comment\"># sed '2s#1#0#2g' test.txt</span></span><br><span class=\"line\">1 1 1 1 1</span><br><span class=\"line\">1 0 0 0 0</span><br><span class=\"line\">1 1 1 1 1</span><br><span class=\"line\">1 1 1 1 1</span><br><span class=\"line\">1 1 1 1 1</span><br></pre></td></tr></table></figure></p>\n<hr>\n\n<h4 id=\"0x01-命令替换标记\"><a href=\"#0x01-命令替换标记\" class=\"headerlink\" title=\"0x01 命令替换标记\"></a>0x01 命令替换标记</h4><p><strong>sed命令标志</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a 在当前行下面插入文本。</span><br><span class=\"line\">i 在当前行上面插入文本。</span><br><span class=\"line\">c 把选定的行改为新的文本(类似于替换)。</span><br><span class=\"line\">d 删除选择的行</span><br><span class=\"line\">D 删除模板块的第一行</span><br><span class=\"line\">s 替换指定字符</span><br><span class=\"line\">h 拷贝模板块的内容到内存中的缓冲区。</span><br><span class=\"line\">H 追加模板块的内容到内存中的缓冲区。</span><br><span class=\"line\">g 获得内存缓冲区的内容，并替代当前模板块中的文本。</span><br><span class=\"line\">G 获得内存缓冲区的内容，并追加到当前模板块文本的后面。</span><br><span class=\"line\">l 打印显示特殊字符（行尾以及tab标志）</span><br><span class=\"line\">n 读取下一个输入行，用下一个命令处理新的行而不是用第一个命令。</span><br><span class=\"line\">N 追加下一个输入行到模板块后面并在二者间嵌入一个新行，改变当前行号码。</span><br><span class=\"line\">p 显示打印模板块的行。</span><br><span class=\"line\">P(大写) 打印模板块的第一行。</span><br><span class=\"line\">q 退出Sed。</span><br><span class=\"line\">b lable 分支到脚本中带有标记的地方，如果分支不存在则分支到脚本的末尾。</span><br><span class=\"line\">r file 从file中读行。</span><br><span class=\"line\">t label <span class=\"keyword\">if</span>分支，从最后一行开始，条件一旦满足或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。</span><br><span class=\"line\">T label 错误分支，从最后一行开始，一旦发生错误或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。</span><br><span class=\"line\">w file 写并追加模板块到file末尾。  </span><br><span class=\"line\">W file 写并追加模板块的第一行到file末尾。  </span><br><span class=\"line\">! 表示后面的命令对所有没有被选定的行发生作用。  </span><br><span class=\"line\">= 打印当前行号码。  </span><br><span class=\"line\"><span class=\"comment\"># 把注释扩展到下一个换行符以前。</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>sed替换标记</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1-512 数字标志确定处理第几个字符处开始处理，</span><br><span class=\"line\">i 忽略大小写进行替换/匹配/查找</span><br><span class=\"line\">\\l 小写的l，它会把紧跟再其后面的字符当作小写字符来处理</span><br><span class=\"line\">\\L 大写的L，他会把后面所有的字符都当作小写字符来处理</span><br><span class=\"line\">\\u 他会紧跟在其后的字符当作大写字符来处理</span><br><span class=\"line\">\\U 他会把后面的所有的字符当作大写字符来处理</span><br><span class=\"line\">\\E 需要和\\U和\\L标志使用,他会把后面的所有字符都当作大写字符来处理</span><br><span class=\"line\">e 执行命令标志，将模式空间的任何内容当作bash命令执行</span><br><span class=\"line\">g 表示行内全面替换。  </span><br><span class=\"line\">p 表示打印行。  </span><br><span class=\"line\">w 表示把行写入一个文件。  </span><br><span class=\"line\">x 表示互换模板块中的文本和缓冲区中的文本。  </span><br><span class=\"line\">y 表示把一个字符翻译为另外的字符（但是不用于正则表达式）</span><br><span class=\"line\">\\1 子串匹配标记</span><br><span class=\"line\">&amp; 已匹配字符串标记</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>sed元字符集-即正则表达式</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^ 匹配行开始，如：/^sed/匹配所有以sed开头的行。</span><br><span class=\"line\">$ 匹配行结束，如：/sed$/匹配所有以sed结尾的行。</span><br><span class=\"line\">. 匹配一个非换行符的任意字符，如：/s.d/匹配s后接一个任意字符，最后是d。</span><br><span class=\"line\">* 匹配0个或多个字符，如：/*sed/匹配所有模板是一个或多个空格后紧跟sed的行。</span><br><span class=\"line\">[] 匹配一个指定范围内的字符，如/[ss]ed/匹配sed和Sed。  </span><br><span class=\"line\">[^] 匹配一个不在指定范围内的字符，如：/[^A-RT-Z]ed/匹配不包含A-R和T-Z的一个字母开头，紧跟ed的行。</span><br><span class=\"line\">\\(..\\) 匹配子串，保存匹配的字符，如s/\\(love\\)able/\\1rs，loveable被替换成lovers。</span><br><span class=\"line\">&amp; 保存搜索字符用来替换其他字符，如s/love/**&amp;**/，love这成**love**。</span><br><span class=\"line\">\\&lt; 匹配单词的开始，如:/\\&lt;love/匹配包含以love开头的单词的行。</span><br><span class=\"line\">\\&gt; 匹配单词的结束，如/love\\&gt;/匹配包含以love结尾的单词的行。</span><br><span class=\"line\">x\\&#123;m\\&#125; 重复字符x，m次，如：/0\\&#123;5\\&#125;/匹配包含5个0的行。</span><br><span class=\"line\">x\\&#123;m,\\&#125; 重复字符x，至少m次，如：/0\\&#123;5,\\&#125;/匹配至少有5个0的行。</span><br><span class=\"line\">x\\&#123;m,n\\&#125; 重复字符x，至少m次，不多于n次，如：/0\\&#123;5,10\\&#125;/匹配5~10个0的行。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 其他，特殊符号标识</span></span><br><span class=\"line\">[[:space:]]</span><br></pre></td></tr></table></figure></p>\n<hr>\n\n<h4 id=\"0x02-sed选项案例\"><a href=\"#0x02-sed选项案例\" class=\"headerlink\" title=\"0x02 sed选项案例\"></a>0x02 sed选项案例</h4><p><strong>定界符</strong><br>描述：在sed中常用字符 / 作为定界符使用，当然您也可以使用任意的定界符;<code>当定界符出现在样式内部时，需要进行转义</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#实例1.常用定界符</span></span><br><span class=\"line\">sed <span class=\"string\">'s:test:TEXT:g'</span></span><br><span class=\"line\">sed <span class=\"string\">'s|test|TEXT|g'</span></span><br><span class=\"line\">sed <span class=\"string\">'s#test#TEXT#g'</span> <span class=\"comment\">#推荐方法</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#实例2.定界符出现在要被替换的字符串中时候需要进行转义</span></span><br><span class=\"line\">sed <span class=\"string\">'s/\\/bin/\\/usr\\/local\\/bin/g'</span></span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190713225828.png\" alt=\"WeiyiGeek.自定义定界符\" title=\"\" class=\"\">\n                <p>WeiyiGeek.自定义定界符</p>\n            </figure>\n<p><br></p>\n<p><strong>修改写入i命令实例：</strong><br>-i选项可以直接修改源文件中替换删除的字符串,也能进行备份将要修改的文件；<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#采用-i 选项 【.bak文件后缀】，进行正则匹配的时候进行先备份将被替换的文件.bak</span></span><br><span class=\"line\">$ sed -i.bak -e <span class=\"string\">'s/^\\(PASS_MAX_DAYS\\).*/\\1 90/'</span> /etc/login.defs   <span class=\"comment\">#以PASS_MAX_DAYS开头 采用字符串匹配标记 \\1</span></span><br><span class=\"line\">sed -i.bak <span class=\"string\">'s#22#OK#g'</span> text.txt     <span class=\"comment\">#更改的同时进行备份</span></span><br><span class=\"line\">sed -i.bak <span class=\"string\">'/SELINUX/s/enforcing/disabled/'</span> /etc/sysconfig/selinux  <span class=\"comment\">#值得学习</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#直接在文件中进行末尾负复制添加：</span></span><br><span class=\"line\">sed -i <span class=\"string\">'4p'</span> file.txt</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190715090708.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p><br></p>\n<p><strong>多点编辑e命令实例</strong><br>-e选项允许在同一行里执行多条命令，常常与下面的-n选项进行联用;</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#上面sed表达式的第一条命令删除1至5行，第二条命令用check替换test。</span></span><br><span class=\"line\"><span class=\"comment\">#示例1.命令的执行顺序对结果有影响,如果两个命令都是替换命令，那么第一个替换命令将影响第二个替换命令的结果。</span></span><br><span class=\"line\">sed -e <span class=\"string\">'1,5d'</span> -e <span class=\"string\">'s/test/check/'</span> file</span><br><span class=\"line\"><span class=\"comment\">#和 -e 等价的命令是 --expression：</span></span><br><span class=\"line\">sed --expression=<span class=\"string\">'s/test/check/'</span> --expression=<span class=\"string\">'/love/d'</span> file</span><br><span class=\"line\"><span class=\"comment\">#或者采用一条sed语句执行多条命令 (以 ; 来分割)</span></span><br><span class=\"line\">sed <span class=\"string\">'s/test/check/;/love/d'</span> file</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2.指定单行或者多行不显示</span></span><br><span class=\"line\">sed -n -e <span class=\"string\">'2!p'</span>  fstab    <span class=\"comment\">#表示第二行不显示</span></span><br><span class=\"line\">sed -n -e <span class=\"string\">'2!p;6!p'</span>       <span class=\"comment\">#表示第2行与第6行不显示</span></span><br><span class=\"line\">sed -n -e <span class=\"string\">'2,5!p'</span>  fstab  <span class=\"comment\">#表示第2到5行不现实</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例3. 多条语句执行，表示删除空行并且以#开头的行</span></span><br><span class=\"line\">sed -e <span class=\"string\">'/^$/d;/^#/d'</span> fstab   <span class=\"comment\">#^$表示首尾相连，也就是空行</span></span><br></pre></td></tr></table></figure>\n<p><br></p>\n<p><strong>显示操作n命令选项示例</strong><br>描述:利用<code>-n选项</code>与<code>p命令</code>来进行指定行的数据查看并且不显示已改变源文件的那一行;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#实例1.打印需要显示的行</span></span><br><span class=\"line\">cat -n ReleaseNotes.css | sed -n <span class=\"string\">\"10,13P\"</span></span><br><span class=\"line\">10  a &#123;</span><br><span class=\"line\">11          color: <span class=\"comment\">#94C3FF;</span></span><br><span class=\"line\">12          text-decoration: none;</span><br><span class=\"line\">13  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2.选定行的范围：,（逗号）**</span></span><br><span class=\"line\"><span class=\"comment\">#所有在模板test和check所确定的范围内的行都被打印：</span></span><br><span class=\"line\">sed -n <span class=\"string\">'/test/,/check/p'</span> file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#打印从第5行开始到第一个包含以test开始的行之间的所有行：</span></span><br><span class=\"line\">sed -n <span class=\"string\">'5,/^test/p'</span> file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#对于模板test和west之间的行，每行的末尾用字符串aaa bbb替换：</span></span><br><span class=\"line\">sed <span class=\"string\">'/test/,/west/s/$/aaa bbb/'</span> file</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例3.打印奇数行或偶数行（s）</span></span><br><span class=\"line\"><span class=\"comment\">#方法1：</span></span><br><span class=\"line\">sed -n <span class=\"string\">'p;n'</span> test.txt  <span class=\"comment\">#奇数行</span></span><br><span class=\"line\">sed -n <span class=\"string\">'n;p'</span> test.txt  <span class=\"comment\">#偶数行</span></span><br><span class=\"line\"><span class=\"comment\">#方法2：sed命令通用的 'n&#123;sed-command&#125;'</span></span><br><span class=\"line\">sed -n <span class=\"string\">'1~2p'</span> test.txt  <span class=\"comment\">#奇数行 1 3 5 7 9  ~后面的数字是Step</span></span><br><span class=\"line\">sed -n <span class=\"string\">'2~2p'</span> test.txt  <span class=\"comment\">#偶数行 2 4 6 8 10</span></span><br><span class=\"line\">sed -n <span class=\"string\">'2p'</span> test.txt    <span class=\"comment\">#打印第二行</span></span><br><span class=\"line\">sed -n <span class=\"string\">'2,10p'</span> test.txt  <span class=\"comment\">#打印二至十行</span></span><br><span class=\"line\">sed -n <span class=\"string\">'2,+20p'</span> test.txt  <span class=\"comment\">#打印二至十二行</span></span><br><span class=\"line\">sed -n <span class=\"string\">'/test/,+20p'</span> test.txt <span class=\"comment\">#打印test字符串行到，前面行+20行截止</span></span><br><span class=\"line\">sed -n <span class=\"string\">'2,$ p'</span> test.txt <span class=\"comment\">#从第二行答应到末尾 (注意空格)</span></span><br><span class=\"line\">sed -n <span class=\"string\">'/test/,/text/p'</span> test.txt <span class=\"comment\">#打印test字符串行到text字符串的行之间的行 （自己组合上面的来达到各种效果）</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2.与正则联用打印</span></span><br><span class=\"line\">sed -n <span class=\"string\">'/^#/p'</span> fstab      <span class=\"comment\">#表示显示以#开头的行</span></span><br><span class=\"line\">sed -n <span class=\"string\">'/^#/!p'</span> fstab     <span class=\"comment\">#表示以#开头的行不显示</span></span><br><span class=\"line\">sed -n <span class=\"string\">'/0$/!p'</span> fstab     <span class=\"comment\">#表示以0结尾的行不显示</span></span><br><span class=\"line\">sed -n <span class=\"string\">'/0$/p'</span> fstab      <span class=\"comment\">#表示显示以0结尾结尾的行</span></span><br><span class=\"line\">sed -n <span class=\"string\">'/^#/!p'</span> /etc/ssh/sshd_config</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#实例3.可直接替换配置文件文本</span></span><br><span class=\"line\">sed -n <span class=\"string\">\"s/^\\(PermitRootLogin\\).*/\\1 no/p\"</span> /etc/ssh/sshd_config</span><br><span class=\"line\"><span class=\"comment\">#PermitRootLogin no</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#读取配置文件，利用正则查找指定的行不进行删除(!d)然后替换(s)=号及前的字符串为空;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">ReadConfig</span></span>() &#123;</span><br><span class=\"line\">  <span class=\"comment\"># 使用方法: ReadConfig &lt;配置文件&gt; &lt;读取参数&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># Example : ReadConfig \"/etc/config.cfg\" \"Parameter\"</span></span><br><span class=\"line\">  cat <span class=\"variable\">$1</span> | sed <span class=\"string\">'/^'</span><span class=\"variable\">$2</span><span class=\"string\">'=/!d;s/.*=//'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190715093221.png\" alt=\"WeiyiGeek.奇数与偶数行打印\" title=\"\" class=\"\">\n                <p>WeiyiGeek.奇数与偶数行打印</p>\n            </figure></p>\n<p>_总结_：</p>\n<ul>\n<li>sed 匹配是贪婪模式匹配到越多;</li>\n</ul>\n<p><br></p>\n<p><strong>正则扩展命令sed之-r选项</strong><br>描述：使用了该-r选择后就能使用正则表达式的扩展语法，<code>在写一些正则符号前无需添加\\(</code><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#这里url是存储着url的文件：</span></span><br><span class=\"line\">sed -nr <span class=\"string\">'s/^http:\\/\\/([0-9.]+):[0-9]+.*$/\\1/p'</span> url <span class=\"comment\"># 取出IP地址</span></span><br><span class=\"line\">sed -nr <span class=\"string\">'s/^http:\\/\\/[0-9.]+:([0-9]+).*$/\\1/p'</span> url <span class=\"comment\"># 取出端口</span></span><br><span class=\"line\">sed -nr <span class=\"string\">'s/^http:\\/\\/[0-9.]+:[0-9]+(.*$)/\\1/p'</span> url <span class=\"comment\"># 取出后续路径</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>选项执行脚本中的sed表达式</strong><br>sed脚本是一个sed的命令清单，启动Sed时以-f选项引导脚本文件名。<br>Sed对于脚本中输入的命令非常挑剔，在<code>·</code>命令的末尾不能有任何空白或文本<code>，如果在一行中</code>有多个命令，要用分号分隔`以#开头的行为注释行，且不能跨行。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed [options] -f scriptfile file(s)</span><br><span class=\"line\">$ sed -f <span class=\"string\">'脚本文件'</span> file</span><br><span class=\"line\"><span class=\"comment\">#建立一个sed脚本文件 sed.script 每一行一条</span></span><br><span class=\"line\">1,2d</span><br><span class=\"line\">s<span class=\"comment\">#1#0#3g</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ sed -f sed.script test.txt  </span><br><span class=\"line\">1 1 0 0 0</span><br><span class=\"line\">1 1 0 0 0</span><br><span class=\"line\">1 1 0 0 0</span><br></pre></td></tr></table></figure></p>\n<hr>\n\n<h4 id=\"0x03-增删改查命令\"><a href=\"#0x03-增删改查命令\" class=\"headerlink\" title=\"0x03 增删改查命令\"></a>0x03 增删改查命令</h4><p><strong>单行插入和多行插入</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#头部插入（行上）：i\\命令</span></span><br><span class=\"line\"><span class=\"comment\">#将 this is a test line 追加到以test开头的 行前面：</span></span><br><span class=\"line\">sed <span class=\"string\">'/^test/i\\this is a test line'</span> file</span><br><span class=\"line\"><span class=\"comment\">#单行插入：在test.conf文件第5行之前插入this is a test line</span></span><br><span class=\"line\">sed -i <span class=\"string\">'5i\\this is a test line'</span> test.conf</span><br><span class=\"line\"><span class=\"comment\">#多行插入：在test.conf文件第5行前插入first insert \\n seconde insert</span></span><br><span class=\"line\">sed -i <span class=\"string\">'5i first insert\\nseconde insert'</span> test.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#尾部追加插入（行下）：a\\命令</span></span><br><span class=\"line\"><span class=\"comment\">#将 this is a test line 追加到 以test 开头的 行后面：</span></span><br><span class=\"line\">sed <span class=\"string\">'/^test/a\\this is a test line'</span> file</span><br><span class=\"line\"><span class=\"comment\">#单行插入：在 test.conf 文件第2行之后插入 this is a test line：</span></span><br><span class=\"line\">sed -i <span class=\"string\">'2a\\this is a test line'</span> test.conf</span><br><span class=\"line\"><span class=\"comment\">#多行插入：在test.conf文件第5行后插入first insert \\n seconde insert</span></span><br><span class=\"line\">sed -i <span class=\"string\">'5a first insert\\nseconde insert'</span> test.conf</span><br></pre></td></tr></table></figure></p>\n<p>示例1.优化ssh配置文件写入<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -i <span class=\"string\">'13i Port 52113\\nPermirRootLogin no\\nPermitEmptyPasswords no\\nUseDNS no\\nGSSAPIAuthentication no'</span> /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>删除操作</strong><br>描述：删除匹配的字符串以及行采用d命令,源文件并没有改变如果改变需要加上选项-i<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#更多格式需要参考：示例3.打印奇数行或偶数行（s）</span></span><br><span class=\"line\">sed <span class=\"string\">'d'</span> file       <span class=\"comment\">#删除文件的所有行</span></span><br><span class=\"line\">sed <span class=\"string\">'2d'</span> file       <span class=\"comment\">#删除文件的第2行</span></span><br><span class=\"line\">sed <span class=\"string\">'2,5d'</span> file       <span class=\"comment\">#删除文件的第2行到第五行</span></span><br><span class=\"line\">sed <span class=\"string\">'$d'</span> file       <span class=\"comment\">#删除文件最后一行</span></span><br><span class=\"line\">sed <span class=\"string\">'2,$d'</span> file     <span class=\"comment\">#删除文件的第2行到末尾所有行</span></span><br><span class=\"line\">sed <span class=\"string\">'/^test/d'</span> file <span class=\"comment\"># 删除文件中所有开头是test的行注意是一行</span></span><br><span class=\"line\">sed <span class=\"string\">'/^$/d'</span> file    <span class=\"comment\"># 删除空白行</span></span><br></pre></td></tr></table></figure></p>\n<p>示例2：匹配的行(文本、正则)进行删除<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#(1) 删除或者不删除指定字符串的行</span></span><br><span class=\"line\">sed -e <span class=\"string\">'/UUID/d'</span> fstab   <span class=\"comment\">#表示删除含有UUID的行</span></span><br><span class=\"line\">sed -e <span class=\"string\">'/UUID/!d'</span> fstab  <span class=\"comment\">#表示不删除含有UUID的行，也就是只显示含有UUID的行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#(2) 以正则表达式匹配删除</span></span><br><span class=\"line\">sed -e <span class=\"string\">'/^#/d'</span> fstab   <span class=\"comment\">#表示删除以#开头的行</span></span><br><span class=\"line\">sed -e<span class=\"string\">'/^#/d;/^$/d'</span> _config.yml  <span class=\"comment\">#采用多行命令，后面的命令以前面命令为基础;</span></span><br><span class=\"line\"><span class=\"comment\"># include:</span></span><br><span class=\"line\"><span class=\"comment\">#   - .nojekyll</span></span><br><span class=\"line\"><span class=\"comment\"># exclude:</span></span><br><span class=\"line\"><span class=\"comment\">#   - .DS_Store</span></span><br><span class=\"line\"><span class=\"comment\"># search:</span></span><br><span class=\"line\"><span class=\"comment\">#   path: search.xml</span></span><br><span class=\"line\"><span class=\"comment\">#   filed: post</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>替换操作</strong></p>\n<p>描述：替换文本的字符串,采用s命令以及g来进行全局替换,也可以采用c命令指定行替换;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">######### 行替换(多行/单行) ############</span></span><br><span class=\"line\"><span class=\"comment\">#将text.txt文本的第二行替换成为\"second insert txt\" (支持多行和单行替换)</span></span><br><span class=\"line\">$ sed <span class=\"string\">'2c second insert \\n there txt'</span> text.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">############## 字符替换操作 ###############</span></span><br><span class=\"line\"><span class=\"comment\">#-n选项和p命令一起使用表示只打印那些发生替换的行（并未写入文件中）</span></span><br><span class=\"line\">$ sed -n <span class=\"string\">'s/test/TEST/p'</span> file </span><br><span class=\"line\">$ sed <span class=\"string\">'s/book/books/'</span> file  <span class=\"comment\">#将文件中的第一个book字符串换成books</span></span><br><span class=\"line\">$ sed <span class=\"string\">'3s/60/90/'</span> file.txt <span class=\"comment\"># 将text.txt第三行中得60换成90；</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#直接编辑文件-i选项，会匹配file文件中每一行的book替换为books（直接写入到源文件中）</span></span><br><span class=\"line\">$ sed -i <span class=\"string\">'s/book/books/g'</span> file <span class=\"comment\">#使用后缀 /g 标记会替换每一行中的所有匹配：</span></span><br><span class=\"line\">$ sed -i <span class=\"string\">'s/book/books/4g'</span> file <span class=\"comment\">#每行从第四个book字符串开始替换</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#开始从第二个匹配字符串进行替换</span></span><br><span class=\"line\">$ sed <span class=\"string\">'s/test/TEST/2g'</span> www  </span><br><span class=\"line\">testTESTTEST</span><br><span class=\"line\">testTESTTEST</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">################ 变量替换 ################</span></span><br><span class=\"line\"><span class=\"comment\">#sed表达式可以使用单引号来引用，但是如果`表达式内部包含变量字符串，就需要使用双引号`。</span></span><br><span class=\"line\"><span class=\"built_in\">test</span>=hello</span><br><span class=\"line\"><span class=\"built_in\">echo</span> hello WORLD | sed <span class=\"string\">\"s/<span class=\"variable\">$test</span>/HELLO\"</span></span><br><span class=\"line\">HELLO WORLD</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">################ 分组替换 ################</span></span><br><span class=\"line\">描述：就是正则表达式中的元组即\\(...\\)包含匹配的字符串,即匹配给定样式的其中一部分，</span><br><span class=\"line\">\\(..\\) 用于匹配子串，对于匹配到的第一个子串就标记为 \\1，依此类推匹配到的第二个结果就是 \\2，例如：</span><br><span class=\"line\"><span class=\"comment\">#实例1.样式匹配到的子串是 7，命令中 digit 7，被替换成了 7</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> this is digit 7 <span class=\"keyword\">in</span> a number | sed <span class=\"string\">'s/digit \\([0-9]\\)/\\1/'</span></span><br><span class=\"line\"><span class=\"comment\">#this is 7 in a number</span></span><br></pre></td></tr></table></figure></p>\n<p>实际示例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#行替换/字符替换</span></span><br><span class=\"line\">sed <span class=\"string\">\"/SELINUX/s/disabled/enforcing/#\"</span> etc/selinux/config</span><br><span class=\"line\">sed <span class=\"string\">\"/^SELINUX/s/disabled/enforcing/#\"</span> /etc/selinux/config</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#变量替换</span></span><br><span class=\"line\">x=a;y=b <span class=\"comment\">#将字符a替换成为b（四种形式）,</span></span><br><span class=\"line\">sed <span class=\"string\">\"s#<span class=\"variable\">$x</span>#<span class=\"variable\">$y</span>#g\"</span> test.txt</span><br><span class=\"line\">sed s<span class=\"comment\">#$x#$y#g test.txt</span></span><br><span class=\"line\">sed <span class=\"string\">'s#'</span><span class=\"variable\">$x</span><span class=\"string\">'#'</span><span class=\"variable\">$y</span><span class=\"string\">'#g'</span> test.txt <span class=\"comment\">#注意单引号不能解析变量</span></span><br><span class=\"line\"><span class=\"built_in\">eval</span> sed <span class=\"string\">'s#'</span><span class=\"variable\">$x</span><span class=\"string\">'#'</span><span class=\"variable\">$y</span><span class=\"string\">'#g'</span> test.txt </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#分组替换</span></span><br><span class=\"line\"><span class=\"comment\">#love被标记为1，所有loveable会被替换成lovers，并打印出来.组合多个表达式 (值得学习借鉴)</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"loveable\"</span> | sed -n <span class=\"string\">'s/\\(love\\)able/\\1rs/p;s/\\(love\\)rs/\\1 You/p'</span>  <span class=\"comment\">#lovers  #love You</span></span><br><span class=\"line\"><span class=\"variable\">$echo</span> aaa BBB | sed <span class=\"string\">'s/\\([a-z]\\+\\) \\([A-Z]\\+\\)/\\2 \\1/'</span>  <span class=\"comment\">#BBB aaa</span></span><br><span class=\"line\"><span class=\"comment\">#传递每行到shell中进行执行</span></span><br><span class=\"line\">systemctl list-unit-files | grep <span class=\"string\">\"disabled\"</span> | grep -E <span class=\"string\">\"socket\"</span>|awk <span class=\"string\">'&#123;print $1&#125;'</span>|sed -r <span class=\"string\">'s#(.*)#systemctl \\1 enable#g'</span>|bash</span><br><span class=\"line\">systemctl docker.socket <span class=\"built_in\">enable</span></span><br><span class=\"line\">systemctl rsyncd.socket <span class=\"built_in\">enable</span></span><br><span class=\"line\">systemctl sshd.socket <span class=\"built_in\">enable</span></span><br><span class=\"line\">systemctl tftp.socket <span class=\"built_in\">enable</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><em>已匹配字符串标记 &amp;</em><br>描述： 正则表达式 \\w+ 匹配每一个单词，使用 [&amp;] 替换它，&amp; 对应于之前所匹配到的单词<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#实例1.用来字符串拼接使用</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> this is a <span class=\"built_in\">test</span> line | sed <span class=\"string\">'s/\\w\\+/[&amp;]/g'</span></span><br><span class=\"line\"><span class=\"comment\">#[this] [is] [a] [test] [line]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#所有以192.168.0.1开头的行都会被替换成它自已加localhost：</span></span><br><span class=\"line\">sed <span class=\"string\">'s/^192.168.0.1/&amp; localhost/'</span> file <span class=\"comment\"># &amp; 代表匹配字符串本身</span></span><br><span class=\"line\"><span class=\"comment\">#192.168.0.1 localhost </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#批量更改文件名称</span></span><br><span class=\"line\">$ ls *.jpg | sed -r <span class=\"string\">'s#(.*).finish.*#mv &amp; \\1.jpg#'</span>  | bash</span><br><span class=\"line\">mv 1_student_10_finish.jpg 1_student_10.jpg</span><br><span class=\"line\">mv 1_student_1_finish.jpg 1_student_1.jpg</span><br><span class=\"line\">mv 1_student_2_finish.jpg 1_student_2.jpg</span><br><span class=\"line\">mv 1_student_3_finish.jpg 1_student_3.jpg</span><br><span class=\"line\">mv 1_student_4_finish.jpg 1_student_4.jpg</span><br><span class=\"line\">mv 1_student_5_finish.jpg 1_student_5.jpg</span><br><span class=\"line\">mv 1_student_6_finish.jpg 1_student_6.jpg</span><br><span class=\"line\">mv 1_student_7_finish.jpg 1_student_7.jpg</span><br><span class=\"line\">mv 1_student_8_finish.jpg 1_student_8.jpg</span><br><span class=\"line\">mv 1_student_9_finish.jpg 1_student_9.jpg</span><br><span class=\"line\">$ ls *.jpg</span><br><span class=\"line\">1_student_1.jpg   1_student_2.jpg  1_student_4.jpg  1_student_6.jpg  1_student_8.jpg</span><br><span class=\"line\">1_student_10.jpg  1_student_3.jpg  1_student_5.jpg  1_student_7.jpg  1_student_9.jpg</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190713231707.png\" alt=\"WeiyiGeek.已匹配字符串标记\" title=\"\" class=\"\">\n                <p>WeiyiGeek.已匹配字符串标记</p>\n            </figure></p>\n<p><br></p>\n<p><strong>查操作</strong><br>描述：采用p命令进行打印常常和-n选项联用，在前面介绍-n的时候有介绍<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ifconfig | sed -nr <span class=\"string\">'s#([0-9]+\\.)&#123;3&#125;[0-9]&#123;1,3&#125;#[&amp;]#gp'</span> <span class=\"comment\">#打印出匹配的行</span></span><br><span class=\"line\">inet [192.168.1.99]  netmask [255.255.255.0]  broadcast [192.168.1.255]</span><br><span class=\"line\">inet [10.10.107.222]  netmask [255.255.255.0]  broadcast [10.10.107.255]</span><br><span class=\"line\">inet [127.0.0.1]  netmask [255.0.0.0]</span><br></pre></td></tr></table></figure></p>\n<hr>\n\n<h5 id=\"sed-文件修改-另存为-读取\"><a href=\"#sed-文件修改-另存为-读取\" class=\"headerlink\" title=\"sed 文件修改,另存为,读取\"></a>sed 文件修改,另存为,读取</h5><p>写入文件：w命令,当然也可以采用重定向的方式也是可以的;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">############## 文件另存为 ####################</span></span><br><span class=\"line\"><span class=\"comment\">#实例1.在example中所有包含test的行都被写入file里：</span></span><br><span class=\"line\">sed -n <span class=\"string\">'/test/w file'</span> example</span><br><span class=\"line\">sed -n <span class=\"string\">'/test/'</span> example &gt; file</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#实例2.将匹配出的IP输出到文件</span></span><br><span class=\"line\">ifconfig | sed -nr <span class=\"string\">'sed -nr '</span>s<span class=\"comment\">#(([0-9]+\\.)&#123;3&#125;[0-9]&#123;1,3&#125;)#[\\1]#g w output.txt'</span></span><br><span class=\"line\">$ cat output.txt</span><br><span class=\"line\">inet [192.168.1.99] netmask [255.255.255.0]  broadcast [192.168.1.255]</span><br><span class=\"line\">inet [10.10.107.222]  netmask [255.255.255.0]  broadcast [10.10.107.255]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例3.通过正则匹配出的行写入到文件中</span></span><br><span class=\"line\">sed -n <span class=\"string\">'/bash$/p'</span> passwd &gt; file  <span class=\"comment\">#重定向写入文件</span></span><br><span class=\"line\">sed -n <span class=\"string\">'/bash$/wfile'</span> passwd     <span class=\"comment\">#在w模式下，可以直接写入文件，这是追加的过程不会覆盖原文</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p>从文件读入：r命令<br>描述:file里的内容被读进来，显示在与test匹配的行后面，如果匹配多行，则file的内容将显示在所有匹配行的下面<br><figure class=\"highlight zsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1.读取file文件中的到并且插入到查找到test字符串的后面</span></span><br><span class=\"line\">sed <span class=\"string\">'/test/r file'</span> filename</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2.读取passwd</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"User list:\"</span> | sed  <span class=\"string\">'r /etc/passwd'</span></span><br><span class=\"line\">User list:</span><br><span class=\"line\">root:x:0:0:root:/root:/bin/bash</span><br><span class=\"line\">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class=\"line\">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class=\"line\">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class=\"line\">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h4 id=\"0x04-其他命令\"><a href=\"#0x04-其他命令\" class=\"headerlink\" title=\"0x04 其他命令\"></a>0x04 其他命令</h4><p>显示文本或者匹配文本的行数<code>=</code><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ getent passwd | sed -n <span class=\"string\">'=;/root/p'</span></span><br><span class=\"line\"><span class=\"comment\"># 1</span></span><br><span class=\"line\"><span class=\"comment\"># root:x:0:0:root:/root:/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\"># 10</span></span><br><span class=\"line\"><span class=\"comment\"># operator:x:11:0:operator:/root:/sbin/nologin</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#改进采用N命令来保持模式空间里面的数据</span></span><br><span class=\"line\">$ getent passwd | sed -n <span class=\"string\">'=;/root/p'</span> | sed <span class=\"string\">'N;s#\\n# #'</span></span><br><span class=\"line\">1 root:x:0:0:root:/root:/bin/bash</span><br><span class=\"line\">10 operator:x:11:0:operator:/root:/sbin/nologin</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p>忽略大小写进行匹配替换i：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">\"abc ABC\"</span> |sed <span class=\"string\">'s#a#W#ig'</span></span><br><span class=\"line\">Wbc WBC</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p>执行命令标志e的使用：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cat txt </span><br><span class=\"line\">RPM-GPG-KEY-weiyigeek</span><br><span class=\"line\">aaa.jpg</span><br><span class=\"line\">compare_varnish.jpg</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#将匹配到的文件相当于执行 ls -lh [filename]</span></span><br><span class=\"line\">$ sed <span class=\"string\">'s#^#ls -lh &amp; #e'</span> txt   <span class=\"comment\">#注意这里命令后需要空格 &amp; ,否则有一定的报错;</span></span><br><span class=\"line\">-rw-r--r-- 1 root root 1.1K Jun 20 09:13 RPM-GPG-KEY-weiyigeek</span><br><span class=\"line\">-rw-r--r-- 1 root root 106K Jun 27 17:10 aaa.jpg</span><br><span class=\"line\">-rw-r--r-- 1 root root 106K Jun 27 17:11 compare_varnish.jpg</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p>大小写转换\\l \\L 与 \\u \\U；<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">\"abcdefg\"</span> | sed <span class=\"string\">'s#d# WEIYI \\lGEEK #p'</span> <span class=\"comment\">#符号后的一个字符变成小写</span></span><br><span class=\"line\">abc WEIYI gEEK efg</span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">\"abcdefg\"</span> | sed <span class=\"string\">'s#d# WEIYI \\LGEEK #p'</span> <span class=\"comment\">#其后所有字母都变小写</span></span><br><span class=\"line\">abc WEIYI geek efg</span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">\"abcdefG\"</span> | sed <span class=\"string\">'s#d# WEIYI \\ugeek #p'</span></span><br><span class=\"line\">abc WEIYI Geek efG</span><br><span class=\"line\">$ <span class=\"built_in\">echo</span> <span class=\"string\">\"abcdefG\"</span> | sed <span class=\"string\">'s#d# WEIYI \\Ugeek #p'</span></span><br><span class=\"line\">abc WEIYI GEEK efG</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#可以将匹配的字符放在\\U|u|l|L后面即可</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"abcdefG\"</span> | sed  -nr <span class=\"string\">'s#([a-z]&#123;1,10&#125;)# WEIYIGEEK \\U\\1#p'</span> <span class=\"comment\">#全部转成大写</span></span><br><span class=\"line\">WEIYIGEEK ABCDEFG</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p>大小写变形y命令:注意正则表达式元字符不能使用这个命令<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#把1~10行内所有abcde转变为大写，</span></span><br><span class=\"line\">sed <span class=\"string\">'1,10y/abcde/ABCDE/'</span> file</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>特殊符号 {}</strong><br>描述：包含在{}中的命令按照顺序执行，并且前面命令会影响后面的命令;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#打印匹配字符串的下一行然后并打印</span></span><br><span class=\"line\">sed -n <span class=\"string\">'/SCC/&#123;n;p&#125;'</span> URFILE  <span class=\"comment\"># 5字符的下一行就是6 （值得学习）</span></span><br><span class=\"line\">grep -A 1 SCC URFILE   <span class=\"comment\"># -A 显示的行数 在字符的下面</span></span><br><span class=\"line\">awk <span class=\"string\">'/SCC/&#123;getline; print&#125;'</span> URFILE   <span class=\"comment\"># 5字符的下一行就是6</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#只打印指定的行号的选项</span></span><br><span class=\"line\">sed -n <span class=\"string\">'2,5&#123;=;p&#125;'</span> /etc/passwd</span><br><span class=\"line\">2</span><br><span class=\"line\">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class=\"line\">3</span><br><span class=\"line\">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class=\"line\">4</span><br><span class=\"line\">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class=\"line\">5</span><br><span class=\"line\">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#进一步完善</span></span><br><span class=\"line\">sed -n <span class=\"string\">'2,5&#123;=;p&#125;'</span> /etc/passwd | sed  <span class=\"string\">\"N;s#\\n# #g\"</span></span><br><span class=\"line\">2 bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class=\"line\">3 daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class=\"line\">4 adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class=\"line\">5 lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190715093449.png\" alt=\"WeiyiGeek.补充实例\" title=\"\" class=\"\">\n                <p>WeiyiGeek.补充实例</p>\n            </figure></p>\n<p><br></p>\n<p><strong>特殊符号 1</strong></p>\n<p>描述：打印显示特殊字符（行尾以及tab标志）,小写的L；<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$echo</span> -e  <span class=\"string\">\"abc \\n cde \\n hfg \\t qwe \"</span> | sed -n <span class=\"string\">'l'</span></span><br><span class=\"line\">abc $</span><br><span class=\"line\"> cde $</span><br><span class=\"line\"> hfg \\t qwe $</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>双引号内的命令</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#退出：q命令</span></span><br><span class=\"line\"><span class=\"comment\">#打印完第10行后，退出sed</span></span><br><span class=\"line\">sed <span class=\"string\">'10q'</span> file</span><br><span class=\"line\">sed -n <span class=\"string\">'10q;p'</span> /etc/passwd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#保持和互换：h命令和x命令</span></span><br><span class=\"line\"><span class=\"comment\">#互换模式空间和保持缓冲区的内容。也就是把包含test与check的行互换：</span></span><br><span class=\"line\">sed -e <span class=\"string\">'/test/h'</span> -e <span class=\"string\">'/check/x'</span> file</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#保持和获取：h命令和G命令</span></span><br><span class=\"line\"><span class=\"comment\">#在sed处理文件的时候，每一行都被保存在一个叫模式空间的临时缓冲区中，除非行被删除或者输出被取消，否则所有被处理的行都将 打印在屏幕上。接着模式空间被清空，并存入新的一行等待处理。</span></span><br><span class=\"line\">sed -e <span class=\"string\">'/test/h'</span> -e <span class=\"string\">'$G'</span> file <span class=\"comment\">#追加到最后一行简单来说，任何包含test的行都被复制并追加到该文件的末尾。不加$则每一行下一行进行显示复制的数据;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#在这个例子里，匹配test的行被找到后，将存入模式空间，h命令将其复制并存入一个称为保持缓存区的特殊缓冲区内。</span></span><br><span class=\"line\"><span class=\"comment\">#第二条语句的意思是，当到达最后一行后，G命令取出保持缓冲区的行，然后把它放回模式空间中，且追加到现在已经存在于模式空间中的行的末尾。</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190715100037.png\" alt=\"WeiyiGeek.实例\" title=\"\" class=\"\">\n                <p>WeiyiGeek.实例</p>\n            </figure>\n<p><br></p>\n<p><strong>模式空间</strong><br>n命令:打印下一行并且清空当前模式空间进入下一次循环<br>N命令:不清空当前模式空间，然后读入下一行以\\n分隔两行;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#n命令示例</span></span><br><span class=\"line\"><span class=\"comment\">#如果test被匹配，则移动到匹配行的下一行，替换这一行的aa，变为bb并打印该行</span></span><br><span class=\"line\">sed <span class=\"string\">'/test/&#123; n; s/aa/bb/; &#125;'</span> file</span><br><span class=\"line\">sed <span class=\"string\">'/test/&#123; n;p &#125;'</span> file <span class=\"comment\">#打印test字符串的下一行 </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#N命令示例 （模式空间的\\n替换为空）</span></span><br><span class=\"line\">$ sed -n <span class=\"string\">'10&#123;=;p&#125;'</span> /etc/passwd | sed <span class=\"string\">'N; s#\\n# #g'</span></span><br><span class=\"line\">10 news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#其他用法(值得学习)</span></span><br><span class=\"line\"><span class=\"variable\">$cat</span> txt</span><br><span class=\"line\">name</span><br><span class=\"line\">weiyigeek</span><br><span class=\"line\">age</span><br><span class=\"line\">29</span><br><span class=\"line\">love</span><br><span class=\"line\">computer</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$sed</span> <span class=\"string\">'N;s#\\n# = #g'</span> txt</span><br><span class=\"line\">name = weiyigeek</span><br><span class=\"line\">age = 29</span><br><span class=\"line\">love = computer</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>Sed模拟其他命令</strong><br><em>模拟：cat text.txt</em><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#不改动模式空间内容，既可以输入text文件中的全部内容</span></span><br><span class=\"line\">sed <span class=\"string\">\"\"</span> text.txt</span><br><span class=\"line\">sed -n <span class=\"string\">'p'</span> text.txt</span><br><span class=\"line\">sed <span class=\"string\">'n'</span> text.txt</span><br><span class=\"line\">sed <span class=\"string\">'N'</span> text.txt</span><br><span class=\"line\">sed <span class=\"string\">'s# # #g'</span> text.txt</span><br></pre></td></tr></table></figure></p>\n<p><em>模拟：grep -v反过滤</em><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#显示带有字符的行或者不显示带有字符的行</span></span><br><span class=\"line\">sed -n <span class=\"string\">'/test/ p'</span> text.txt</span><br><span class=\"line\">sed -n <span class=\"string\">'/test/ !p'</span> text.txt</span><br></pre></td></tr></table></figure></p>\n<p><em>模拟：wc -l命令</em><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#统计文件中的行数</span></span><br><span class=\"line\">sed -n <span class=\"string\">\"$=\"</span> /etc/passwd</span><br></pre></td></tr></table></figure></p>\n<p><strong>内容中的换行符替换</strong><br>描述:sed是可以处理多行数据的,N是把下一行加入到当前的hold space模式空间里，使之进行后续处理，最后sed会默认打印hold space模式空间里的内容。</p>\n<p>基础实例:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (方式1):a和ta是配套使用，实现跳转功能，t是test测试的意思。 </span></span><br><span class=\"line\">sed <span class=\"string\">\":a;N;s/\\n//g;ta\"</span> file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># test可以根据替换命令的完成是否成功，决定是否跳转，类比下面的伪代码</span></span><br><span class=\"line\"><span class=\"comment\"># while(state == 1) &#123; #注释：默认state就当是1好了。</span></span><br><span class=\"line\"><span class=\"comment\">#  N;</span></span><br><span class=\"line\"><span class=\"comment\">#  s/\\n//g;  #注释：成功，返回state为1；否则返回state=0。此state用于跳转判断。</span></span><br><span class=\"line\"><span class=\"comment\"># &#125;else &#123;</span></span><br><span class=\"line\"><span class=\"comment\">#  last; #注释：即退出循环语句。</span></span><br><span class=\"line\"><span class=\"comment\"># &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (方式2):a和ba的配套使用方式，也可以实现跳转功能，b是branch分支的意思。</span></span><br><span class=\"line\">sed <span class=\"string\">\":a;N;s/\\n//g;ba\"</span> file</span><br><span class=\"line\"><span class=\"comment\">#branch循环到文本结束类比下面的伪代码</span></span><br><span class=\"line\"><span class=\"comment\"># while(1) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">#  N;</span></span><br><span class=\"line\"><span class=\"comment\">#  s/\\n//g;</span></span><br><span class=\"line\"><span class=\"comment\"># &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#比如:增加$!ba语句，$的意思是最后一行，不跳转到标记a处，即退出命令循环(两种写法)。</span></span><br><span class=\"line\">sed <span class=\"string\">\":a;N;s/\\n//g;$!ba\"</span> file</span><br><span class=\"line\">sed <span class=\"string\">\":a;$!N;s/\\n//g;ba\"</span> file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#(方式3).替换\\n也就是把所有的行都归为一行</span></span><br><span class=\"line\">sed <span class=\"string\">':a;N;$!ba;s/\\n/ /g'</span> file.txt </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 实际可以将上面的命令拆分描述，就比较简单多了;</span></span><br><span class=\"line\"><span class=\"comment\"># 多次匹配替换</span></span><br><span class=\"line\">sed -i -e <span class=\"string\">'s/12_/abc/g'</span> -e <span class=\"string\">'s/aa_/aa_3rth/g'</span> AAA.txt </span><br><span class=\"line\">sed -e <span class=\"string\">':a'</span> -e <span class=\"string\">'N'</span> -e <span class=\"string\">'$!ba'</span> -e <span class=\"string\">'s/\\n//g'</span> file.txt</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>在指定字符前后进行添加插入相应字符</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -1.在1111之前添加AAA, 方法 sed -i 's/指定的字符/要插入的字符&amp;/'文件</span></span><br><span class=\"line\">sed -i <span class=\"string\">'s/1111/AAA&amp;/'</span> /tmp/input.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -2.在1111之后添加BBB，方法 sed -i 's/指定的字符/&amp;要插入的字符/' 文件</span></span><br><span class=\"line\">sed -i <span class=\"string\">'s/1111/&amp;BBB/'</span> /tmp/input.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -3.在每行的头添加字符比如\"HEAD\"以及在每行的尾部添加字符比如\"END\", 命令如下：</span></span><br><span class=\"line\">sed <span class=\"string\">'s/^/HEAD&amp;/;s/$/&amp;END/'</span> /tmp/input.txt   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -4.(1) 删除所有空行；(2) 一行中，如果包含\"1111\"，则在\"1111\"前面插入\"AAA\"，在\"11111\"后面插入\"BBB\"</span></span><br><span class=\"line\">sed <span class=\"string\">'/^$/d;s/1111/AAA&amp;/;s/1111/&amp;BBB/'</span> /tmp/input.txt   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -5.在包含www.baidu.com的行前面或后面添加多一行内容www.qq.com</span></span><br><span class=\"line\"><span class=\"comment\"># 匹配行前加</span></span><br><span class=\"line\">sed -i <span class=\"string\">'/www.baidu.com/i www.qq.com'</span> domain.file</span><br><span class=\"line\"><span class=\"comment\"># 匹配行后加</span></span><br><span class=\"line\">sed -i <span class=\"string\">'/www.baidu.com/a www.qq.com'</span> domain.file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -6.在62行前面或后面添加多一行内容\" chmod 644 /data/backup/2015-08-22/* \"</span></span><br><span class=\"line\"><span class=\"comment\"># 在指定行前加</span></span><br><span class=\"line\">sed -i <span class=\"string\">'N;62 i chmod 644 /data/backup/2015-08-22/*'</span> /home/bin/backup_data.sh</span><br><span class=\"line\"><span class=\"comment\"># 在指定行后加</span></span><br><span class=\"line\">sed -i <span class=\"string\">'N;62 a chmod 644 /data/backup/2015-08-22/*'</span> /home/bin/backup_data.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -7.在指定行之前插入`*  soft  nofile  65535` 到 /etc/security/limits.conf 中</span></span><br><span class=\"line\"><span class=\"comment\"># sed \"/# End/ i *  soft  nofile  65535\" /etc/security/limits.conf</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -8.在查询到关键字的行中进行字符串替换</span></span><br><span class=\"line\">sed -i <span class=\"string\">'/echo \"$os\" | grub_quote/ &#123; s/menuentry/menuentry --unrestricted/g;&#125;'</span> /etc/grub.d/10_linux</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -9.查找指定行并进行插入指定字符串</span></span><br><span class=\"line\">linenumber=`expr $(egrep -n <span class=\"string\">\"pam_unix.so\\s$\"</span> /etc/pam.d/common-session-noninteractive | cut -f 1 -d <span class=\"string\">\":\"</span>) - 2`</span><br><span class=\"line\">sudo sed -ri <span class=\"string\">\"<span class=\"variable\">$&#123;linenumber&#125;</span>a session [success=1 default=ignore] pam_succeed_if.so service in cron quiet use_uid\"</span> /etc/pam.d/common-session-noninteractive</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -10.换行替换</span></span><br><span class=\"line\"><span class=\"comment\"># 通过 :a创建一个标记</span></span><br><span class=\"line\"><span class=\"comment\"># 通过N追加当前行和下一行到模式区域</span></span><br><span class=\"line\"><span class=\"comment\"># 如果处于最后一行前，跳转到之前的标记处。 $!ba ($! 意思是不在最后一行做这操作 (最后一行就被当成最后的一行）).</span></span><br><span class=\"line\"><span class=\"comment\"># 最后置换操作把模式区域（就是整个文件）的每一个换行符换成一个|符号。</span></span><br><span class=\"line\">cat test.txt | cut -d <span class=\"string\">\" \"</span> -f 2 | sed <span class=\"string\">':a;N;$!ba;s/\\n/|/g'</span></span><br><span class=\"line\">23500124120125|23502117131999|</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># -11.删除行首空格、删除行末空格、删除所有的空格。</span></span><br><span class=\"line\">sed <span class=\"string\">'s/^[ \\t]*//g'</span></span><br><span class=\"line\">sed <span class=\"string\">'s/[ \\t]*$//g'</span></span><br><span class=\"line\">sed <span class=\"string\">'s/[[:space:]]//g'</span></span><br></pre></td></tr></table></figure></p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Linux命令","path":"api/categories/Linux命令.json"}],"tags":[{"name":"shell","path":"api/tags/shell.json"}]}