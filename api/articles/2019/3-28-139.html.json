{"title":"Linux系统运维问题解决(一)","slug":"系统运维/Linux/入坑容灾/Linux系统运维问题解决","date":"2019-03-28T05:34:30.000Z","updated":"2022-06-14T01:18:14.788Z","url":"2019/3-28-139.html","path":"api/articles/2019/3-28-139.html.json","covers":["https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190809115356.png"],"content":"<p>[TOC]</p>\n<p>主要记录工作和学习中遇到的一些问题;</p>\n<p><strong>Q：挂载的目录进行卸载挂载繁忙,如：umount: /var: device is busy</strong><br>A：解决方法<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fuser -m -v /dev/mapper/vg_zabbix-LogVol02</span><br><span class=\"line\">fuser -m –k /dev/mapper/vg_zabbix-LogVol02</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">注：上面是使用<span class=\"built_in\">kill</span>直接杀掉挂载点上面的进程，建议使用daemon的方式停掉进程。</span></span><br><span class=\"line\">/etc/init.d/rsyslog stop </span><br><span class=\"line\">fuser -m -v /dev/mapper/vg_zabbix-LogVol02</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">停止上面显示的守护进程</span></span><br><span class=\"line\">[root@zabbix ~]# /etc/init.d/crond stop</span><br><span class=\"line\">root@zabbix ~]# /etc/init.d/auditd stop</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">重新卸载</span></span><br><span class=\"line\">umount /dev/mapper/vg_zabbix-LogVol02</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p><strong>Q: CentOs6.x误卸载自带python和yum后的解决办法</strong><br>A：解决方法：<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Step1. 卸载python（以免有些同学没有卸载干净）</span><br><span class=\"line\">rpm -qa|grep python|xargs rpm -ev --allmatches --nodeps #强制删除已安装程序及其关联</span><br><span class=\"line\">whereis python|xargs rm -frv #删除所有残余文件 #xargs，允许你对输出执行其他某些命令</span><br><span class=\"line\"></span><br><span class=\"line\">Step2. 卸载yum</span><br><span class=\"line\">rpm -qa|grep yum|xargs rpm -ev --allmatches --nodeps</span><br><span class=\"line\">rm -rf /etc/yum.repos.d/*</span><br><span class=\"line\">whereis yum|xargs rm -frv&lt;br&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">step3. 验证是否删除干净</span><br><span class=\"line\">whereis python </span><br><span class=\"line\">whereis yum</span><br><span class=\"line\"></span><br><span class=\"line\">Step4.重新安装python和yum</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">在以下链接的镜像站中找到你系统对应版本的python rpm包，选择系统对应的位数，32位选i386，64位选择x86_64，进入Packages文件夹</span></span><br><span class=\"line\">http://vault.centos.org/</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">进去之后你会看到很多rpm文件，下载如下文件：</span></span><br><span class=\"line\">python-2.6.6-66.el6_8.x86_64.rpm</span><br><span class=\"line\">python-devel-2.6.6-66.el6_8.x86_64.rpm</span><br><span class=\"line\">python-iniparse-0.3.1-2.1.el6.noarch.rpm</span><br><span class=\"line\">python-libs-2.6.6-66.el6_8.x86_64.rpm</span><br><span class=\"line\">python-pycurl-7.19.0-9.el6.x86_64.rpm</span><br><span class=\"line\">python-urlgrabber-3.9.1-11.el6.noarch.rpm</span><br><span class=\"line\">rpm-python-4.8.0-55.el6.x86_64.rpm</span><br><span class=\"line\">yum-3.2.29-81.el6.centos.noarch.rpm</span><br><span class=\"line\">yum-metadata-parser-1.1.2-16.el6.x86_64.rpm</span><br><span class=\"line\">yum-plugin-fastestmirror-1.1.30-40.el6.noarch.rpm</span><br><span class=\"line\"></span><br><span class=\"line\">Step5.登录服务器，在你喜欢的地方建一个python文件夹，这里我local的src下</span><br><span class=\"line\">mkdir /usr/local/src/python</span><br><span class=\"line\">cd /usr/local/src/python</span><br><span class=\"line\">rz -be  #出现弹框，上传文件</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Step6.#这里建议先安装 python-*的文件，再安装rpm-python-*的文件，最后安装yum-*的文件</span><br><span class=\"line\">rpm -ivh python-*</span><br><span class=\"line\">rpm -ivh rpm-python-*</span><br><span class=\"line\">rpm -ivh yum-*</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">这里博主没有用rpm -ivh python-*命令安装是怕以防万一会漏掉，所以还是乖乖的输入全名安装，安装yum的时候同理</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">rpm -ivh python-2.6.6-66.el6_8.x86_64.rpm python-devel-2.6.6-66.el6_8.x86_64.rpm python-iniparse-0.3.1-2.1.el6.noarch.rpm python-libs-2.6.6-66.el6_8.x86_64.rpm python-pycurl-7.19.0-9.el6.x86_64.rpm python-urlgrabber-3.9.1-11.el6.noarch.rpm</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Step7.测试安装，测试有版本信息就成功了</span><br><span class=\"line\">yum --version</span><br><span class=\"line\">python -V</span><br></pre></td></tr></table></figure><br><em>注意事项：</em><br>(1)    一定要选对应自己系统版本的文件，<br>(2) 当安装依赖包错误的时候进行一起安装即可(不知道谁与谁有依赖关系，就都一起安装就好了，亲测有效）)</p>\n<ol start=\"3\">\n<li>Q：Centos6.x安装/升级到python2.7<br>A：因为在linux机器上用yum安装的默认是2.6.6版本的想升级到2.7。<br>测试环境：CentOS release 6.10 (Final)  2.6.32-754.10.1.el6.i686<br>安装过程：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#安装相应的依赖</span></span><br><span class=\"line\">yum -y install gcc openssl-devel bzip2-devel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#下载最新Python 2.x 版本</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /opt &amp;&amp; wget https://www.python.org/ftp/python/2.7.16/Python-2.7.16.tgz</span><br><span class=\"line\">tar xvzf Python-2.7.15.tgz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#检测脚本中加上enable-optimizations优化，主要是在这个版本上能启用PGO优化，让Python在运行时能变得更快</span></span><br><span class=\"line\">make 加altinstall参数，避免覆盖原来安装在/usr/bin/python 的版本</span><br><span class=\"line\"><span class=\"built_in\">cd</span> Python-2.7.15</span><br><span class=\"line\">./configure --<span class=\"built_in\">enable</span>-optimizations</span><br><span class=\"line\">make &amp;&amp; make altinstall</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#安装是否成功</span></span><br><span class=\"line\">/usr/<span class=\"built_in\">local</span>/bin/python2.7 -V</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#建立软连接，使系统默认python指向2.7版本</span></span><br><span class=\"line\">mv /usr/bin/python /usr/bin/python2.6.6    <span class=\"comment\">#这一步重要</span></span><br><span class=\"line\">ln -s /usr/<span class=\"built_in\">local</span>/bin/python2.7 /usr/bin/python</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#直接用vi编辑/usr/bin/yum把头部的python换成2.6.6。</span></span><br><span class=\"line\"><span class=\"comment\">#ps：编辑前记得备份。</span></span><br><span class=\"line\">sed -i <span class=\"string\">'s/python/python2.6.6/'</span> /usr/bin/yum</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#安装升级pip （因为2.7.16版本已经内建了ensurepip模块）</span></span><br><span class=\"line\">python -m ensurepip</span><br><span class=\"line\"></span><br><span class=\"line\">pip -V</span><br><span class=\"line\">--&gt;pip 9.0.3 from /usr/<span class=\"built_in\">local</span>/lib/python2.7/site-packages (python 2.7)</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><br></p>\n<ol start=\"4\">\n<li>CentOS7 Failed to start LSB: Bring up/down networking 问题<br>虚拟机复制机器并且更改了网卡名称,服务器更换了主板之前配置的静态IP发现启动网卡出现异常<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#在centos7系统下执行：</span></span><br><span class=\"line\"><span class=\"comment\">#显示有标题的错误信息。《Failed to start LSB: Bring up/down networking.》 原因是mac地址的问题</span></span><br><span class=\"line\">systemctl status network。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#解决方案如下：</span></span><br><span class=\"line\">1. 查看服务对应网卡最新的mac地址 命令：ip addr  下图 圈出来就是最新的mac地址</span><br><span class=\"line\">ip addr | grep <span class=\"string\">\"link/ether\"</span> | awk <span class=\"string\">'&#123;print $2&#125;'</span></span><br><span class=\"line\"></span><br><span class=\"line\">2. <span class=\"built_in\">cd</span> /etc/sysconfig/network-scripts/</span><br><span class=\"line\"><span class=\"comment\">#修改ifcfg-XXX文件了，只修改HWADDR就可以了。接下来执行service network restart 就正常了。</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> HWADDR=08:00:27:46:9b:14 &gt;&gt; ifcfg-eth0</span><br><span class=\"line\"><span class=\"built_in\">echo</span> HWADDR=08:00:27:36:63:b1 &gt;&gt; ifcfg-eth1</span><br><span class=\"line\"><span class=\"built_in\">echo</span> HWADDR=08:00:27:0b:01:7d &gt;&gt; ifcfg-eth2</span><br><span class=\"line\"></span><br><span class=\"line\">3. <span class=\"comment\">#前提是上面得都不行得时候</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> NetworkManager-wait-online.service</span><br><span class=\"line\">systemctl stop NetworkManager</span><br><span class=\"line\">systemctl <span class=\"built_in\">disable</span> NetworkManager</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##完美解决</span></span><br><span class=\"line\">[root@data2 ~]<span class=\"comment\"># service network restart</span></span><br><span class=\"line\">Restarting network (via systemctl):                        [  OK  ]</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><br></p>\n<ol start=\"5\">\n<li>不小心执行 rm -rf该如何恢复？<br><em>在什么情况下，文件才是可恢复的?</em><br>答：有先决条件,就是在进程中被打开，在内存中被分配资源;</li>\n</ol>\n<p>恢复原理：<br>在Linux系统中，每个运行中的程序都有一个宿主进程彼此隔离，以/proc/进程号来体现（Linux本质上就是一个文件系统）<br>比如：ls -l /proc/13067 查看进程PID为13067的进程信息；当程序运行时操作系统会专门开辟一块内存区域，提供给当前进程使用，对于依赖的文件，操作系统会发放一个文件描述符，以便读写文件；<br>当我们执行 rm -f 删除文件时，其实只是删除了文件的目录索引节点，对于文件系统不可见，但是对于打开它的进程依然可见，即仍然可以使用先前发放的文件描述符读写文件，正是利用这样的原理，所以我们可以使用I/O重定向的方式来恢复文件。</p>\n<p>执行步骤：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#1.使用lsof查看打开该文件进程</span></span><br><span class=\"line\"><span class=\"comment\">#2.再使用cat /proc/进程号/fd/文件描述符 查看恢复数据</span></span><br><span class=\"line\"><span class=\"comment\">#3.最后使用I/O重定向的方式来恢复文件</span></span><br></pre></td></tr></table></figure></p>\n<p>常见模拟：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#1.误删除文件</span></span><br><span class=\"line\">&gt; rm -f /root/selenium/Spider/MySql.Data.dll</span><br><span class=\"line\">&gt; ll /root/selenium/Spider/MySql.Data.dll</span><br><span class=\"line\">ls: cannot access /root/selenium/Spider/MySql.Data.dll: No such file or directory</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#2.恢复</span></span><br><span class=\"line\">yum install lsof -y  <span class=\"comment\">#没有的请自行安装</span></span><br><span class=\"line\">(1)、使用lsof命令查看当前是否有进程打开/root/selenium/Spider/MySql.Data.dll文件：</span><br><span class=\"line\">&gt; lsof | grep /root/selenium/Spider/MySql.Data.dll</span><br><span class=\"line\">root 86r REG 253,1 702464 141324 /root/selenium/Spider/MySql.Data.dll</span><br><span class=\"line\"></span><br><span class=\"line\">(2)、查看是否存在恢复数据：</span><br><span class=\"line\">/proc/13067/fd：进程操作的文件描述符目录。</span><br><span class=\"line\">86：文件描述符。</span><br><span class=\"line\">&gt; cat /proc/13067/fd/86</span><br><span class=\"line\"></span><br><span class=\"line\">(3)、使用I/O重定向恢复文件</span><br><span class=\"line\">&gt; cat /proc/23778/fd/86 &gt; /root/selenium/Spider/MySql.Data.dll</span><br><span class=\"line\">&gt; ls -l /root/selenium/Spider/MySql.Data.dll</span><br><span class=\"line\">-rw-r--r-- 1 root root 702464 Feb 10 12:03 /root/selenium/Spider/MySql.Data.dll</span><br></pre></td></tr></table></figure></p>\n<p>补充方法：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#找到删除的文件的进程PID </span></span><br><span class=\"line\">pid=25499</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#获取进程映射地址</span></span><br><span class=\"line\">cat /proc/<span class=\"variable\">$pid</span>/maps | awk <span class=\"string\">'$6 !~ \"^/\" &#123;split($1,addrs,\"-\"); print \"dump memory mem_\" addrs[1] \"0x\" addrs[1] \" 0x\" addrs[2] ;&#125;END&#123;print \"quit\"&#125;'</span> &gt; gdb-commands</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#dump地址中数据</span></span><br><span class=\"line\">gdb -p <span class=\"variable\">$pid</span> -x gdb-commands</span><br><span class=\"line\"></span><br><span class=\"line\">比如查找mysql参数信息， grep datadir ./mem_* 会显示所有包含datadir字符串二进制文件。</span><br><span class=\"line\">vim ./mem_7f18284af000 查找datadir如下，跟进程信息获取参数有部分重复</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190809115356.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n","comments":true,"excerpt":null,"categories":[{"name":"SystemOperation","path":"api/categories/SystemOperation.json"},{"name":"Problem","path":"api/categories/Problem.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"Problem","path":"api/tags/Problem.json"}]}