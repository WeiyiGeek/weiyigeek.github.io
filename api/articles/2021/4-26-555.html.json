{"title":"5.Prometheus监控入门之企业监控实战采集展示","slug":"虚拟云容/云容器/Kubernetes/功能组件/Prometheus/5.Prometheus监控入门之企业监控实战采集展示","date":"2021-04-26T11:37:47.000Z","updated":"2023-01-31T02:29:10.642Z","url":"2021/4-26-555.html","path":"api/articles/2021/4-26-555.html.json","covers":["https://img.weiyigeek.top/2021/5/20210510223606.png","https://img.weiyigeek.top/2021/5/20210511095523.png","https://img.weiyigeek.top/2021/5/20210511101724.png","https://img.weiyigeek.top/2021/5/20210511102236.png","https://img.weiyigeek.top/2021/5/20210511105433.png","https://img.weiyigeek.top/2021/5/20210511142554.png","https://img.weiyigeek.top/2021/5/20210511145358.png","https://img.weiyigeek.top/2021/5/20210511150205.png","https://img.weiyigeek.top/2021/5/20210508114838.png","https://img.weiyigeek.top/2021/5/20210508114953.png","https://img.weiyigeek.top/2021/5/20210508145407.png","https://img.weiyigeek.top/2021/5/20210508151102.png","https://img.weiyigeek.top/2021/5/20210514165746.png","https://img-blog.csdnimg.cn/20210121114537533.png","https://img.weiyigeek.top/2021/5/20210514165418.png","https://img.weiyigeek.top/2021/5/20210514184144.png","https://img.weiyigeek.top/2021/5/20210514230434.png","https://img.weiyigeek.top/2021/5/20210515003322.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h2 id=\"0x00-前言简述及环境准备\"><a href=\"#0x00-前言简述及环境准备\" class=\"headerlink\" title=\"0x00 前言简述及环境准备\"></a>0x00 前言简述及环境准备</h2><p>描述: 本章主要讲解和实践Prometheus在企业中的应用场景的复现,采用了docker-compose的资源清单进行快速构建prometheus_server、prometheus_pushgateway、prometheus_alertmanager、grafana等环境。</p>\n<p><strong>主要实现目标(功能):</strong></p>\n<ul>\n<li>0) 实现Windows主机的监控和展示</li>\n<li>1) 实现MySQL与Redis数据库的监控和展示</li>\n<li>2) 实现外部kubernetes集群的监控和展示</li>\n</ul>\n<p><strong>主机说明:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Kubernetes cluster 0: weiyigeek-lb-vip.k8s (正式环境)</span></span><br><span class=\"line\">192.168.12.107 - master</span><br><span class=\"line\">192.168.12.108 - master</span><br><span class=\"line\">192.168.12.109 - master</span><br><span class=\"line\">192.168.12.223 - work</span><br><span class=\"line\">192.168.12.224 - work</span><br><span class=\"line\">192.168.12.225 - work</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Kubernetes cluster 1: k8s-test.weiyigeek (测试环境-单master节点)</span></span><br><span class=\"line\">192.168.12.111</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Kubernetes cluster 2: 192.168.12.226(开发环境-单master节点)</span></span><br><span class=\"line\">192.168.12.226</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>环境说明</strong><br>描述: 上述环境中都安装了docker运行环境,并在<code>192.168.12.107</code>主机中安装了<code>docker-compose</code>软件,下面进行的配置循序渐进的进行添加。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下面表示在主机下进行基础环境的安装部署的组件(node_export与cAdivsor的安装配置参考“1.Prometheus(普罗米修斯)容器集群监控入门.md”,此处不在重新累述)</span></span><br><span class=\"line\">192.168.12.107</span><br><span class=\"line\">- prometheus_server: 30090</span><br><span class=\"line\">- prometheus_pushgateway: 30091</span><br><span class=\"line\">- prometheus_alertmanager: 30093</span><br><span class=\"line\">- grafana: 9091</span><br><span class=\"line\"></span><br><span class=\"line\">192.168.12.108~109</span><br><span class=\"line\">192.168.12.223~225</span><br><span class=\"line\">- node_exporter: 9091</span><br><span class=\"line\"></span><br><span class=\"line\">192.168.12.111</span><br><span class=\"line\">- cAdivsor: 9100</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 此处暂时不进行配置后续利用prometheus监控第三方k8s集群时使用</span></span><br><span class=\"line\">192.168.12.226</span><br><span class=\"line\">- kubernetes Api Server: 6443</span><br></pre></td></tr></table></figure></p>\n<p>目录结构一览:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ tree -L 5</span><br><span class=\"line\">.</span><br><span class=\"line\">├── docker-compose.yml <span class=\"comment\"># 资源清单</span></span><br><span class=\"line\">├── grafana            <span class=\"comment\"># grafana UI 展示: 针对于数据持久化(插件、dashboard等)</span></span><br><span class=\"line\">│   └── data</span><br><span class=\"line\">└── prometheus         <span class=\"comment\"># Prometheus 监控相关配置以及数据持久化目录   </span></span><br><span class=\"line\">    ├── conf  </span><br><span class=\"line\">    │   ├── alertmanager.yaml  <span class=\"comment\"># 报警发送器配置</span></span><br><span class=\"line\">    │   ├── conf.d            </span><br><span class=\"line\">    │   │   ├── discovery      <span class=\"comment\"># 自动化发现相关配置文件</span></span><br><span class=\"line\">    │   │   │   └── k8s_nodes.yaml</span><br><span class=\"line\">    │   │   ├── rules          <span class=\"comment\"># 报警规则</span></span><br><span class=\"line\">    │   │   │   └── alert.rules</span><br><span class=\"line\">    │   │   └── auth            <span class=\"comment\"># k8s 以及 相关认证使用</span></span><br><span class=\"line\">    │   │       ├── k8s_client.crt</span><br><span class=\"line\">    │   │       ├── k8s_client.key</span><br><span class=\"line\">    │   │       └── k8s_token</span><br><span class=\"line\">    │   └── prometheus.yml</span><br><span class=\"line\">    └── data</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>环境快速准备</strong></p>\n<ul>\n<li><p>0.目录结构快速生成</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -vp /nfsdisk-31/monitor/prometheus/conf/conf.d/&#123;discovery,rules,auth&#125;</span><br><span class=\"line\">mkdir -vp /nfsdisk-31/monitor/prometheus/data</span><br><span class=\"line\">mkdir -vp /nfsdisk-31/monitor/grafana/date</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>1.prometheus.yaml 主配置文件:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">tee</span> <span class=\"string\">prometheus.yaml</span> <span class=\"string\">&lt;&lt;'EOF'</span></span><br><span class=\"line\"><span class=\"attr\">global:</span></span><br><span class=\"line\"><span class=\"attr\">  scrape_interval:</span> <span class=\"number\">2</span><span class=\"string\">m</span></span><br><span class=\"line\"><span class=\"attr\">  scrape_timeout:</span> <span class=\"number\">10</span><span class=\"string\">s</span></span><br><span class=\"line\"><span class=\"attr\">  evaluation_interval:</span> <span class=\"number\">1</span><span class=\"string\">m</span></span><br><span class=\"line\"><span class=\"attr\">  external_labels:</span></span><br><span class=\"line\"><span class=\"attr\">    monitor:</span> <span class=\"string\">'prom-demo'</span></span><br><span class=\"line\"><span class=\"attr\">scrape_configs:</span></span><br><span class=\"line\"><span class=\"attr\">  - job_name:</span> <span class=\"string\">'prom-Server'</span></span><br><span class=\"line\"><span class=\"attr\">    static_configs:</span></span><br><span class=\"line\"><span class=\"attr\">      - targets:</span> <span class=\"string\">['localhost:9090']</span></span><br><span class=\"line\"><span class=\"attr\">  - job_name:</span> <span class=\"string\">'cAdvisor'</span></span><br><span class=\"line\"><span class=\"attr\">    static_configs:</span></span><br><span class=\"line\"><span class=\"attr\">      - targets:</span> <span class=\"string\">['192.168.12.111:9100']</span></span><br><span class=\"line\"><span class=\"attr\">  - job_name:</span> <span class=\"string\">'prom-Host'</span></span><br><span class=\"line\"><span class=\"attr\">    file_sd_configs:</span></span><br><span class=\"line\"><span class=\"attr\">    - files:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">/etc/prometheus/conf.d/discovery/k8s_nodes.yaml</span></span><br><span class=\"line\"><span class=\"attr\">      refresh_interval:</span> <span class=\"number\">1</span><span class=\"string\">m</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">rule_files:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">/etc/prometheus/conf.d/rules/*.rules</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">alerting:</span></span><br><span class=\"line\"><span class=\"attr\">  alertmanagers:</span></span><br><span class=\"line\"><span class=\"attr\">  - scheme:</span> <span class=\"string\">http</span></span><br><span class=\"line\"><span class=\"attr\">    static_configs:</span></span><br><span class=\"line\"><span class=\"attr\">    - targets:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">'192.168.12.107:30093'</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>2.alert.rules 配置文件:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tee alert.rules &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">groups:</span><br><span class=\"line\">- name: node-normal</span><br><span class=\"line\">  rules:</span><br><span class=\"line\">  - alert: service_down</span><br><span class=\"line\">    expr: up == 0</span><br><span class=\"line\">    <span class=\"keyword\">for</span>: 2m</span><br><span class=\"line\">    labels:</span><br><span class=\"line\">      severity: 1</span><br><span class=\"line\">      team: node</span><br><span class=\"line\">    annotations:</span><br><span class=\"line\">      summary: <span class=\"string\">\"主机 &#123;&#123; <span class=\"variable\">$labels</span>.instance &#125;&#125; 监控服务已停止运行超过 15s！\"</span></span><br><span class=\"line\">  - alert: high_load</span><br><span class=\"line\">    expr: node_load1 &gt; 0.7</span><br><span class=\"line\">    <span class=\"keyword\">for</span>: 5m</span><br><span class=\"line\">    labels:</span><br><span class=\"line\">      severity: 1</span><br><span class=\"line\">      team: node</span><br><span class=\"line\">    annotations:</span><br><span class=\"line\">      summary: <span class=\"string\">\"主机 &#123;&#123; <span class=\"variable\">$labels</span>.instance &#125;&#125; 高负载大于0.7以上运行超过 5m！\"</span></span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>3.k8s_nodes.yaml 自动发现<code>file_sd_configs</code>配置文件。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">tee</span> <span class=\"string\">k8s_nodes.yaml</span> <span class=\"string\">&lt;&lt;'EOF'</span></span><br><span class=\"line\"><span class=\"attr\">- targets:</span> <span class=\"string\">[</span> <span class=\"string\">'192.168.12.107:9100'</span><span class=\"string\">,'192.168.12.108:9100','192.168.12.109:9100'</span> <span class=\"string\">]</span></span><br><span class=\"line\"><span class=\"attr\">  labels:</span> <span class=\"string\">&#123;'env':</span> <span class=\"string\">'prod'</span><span class=\"string\">,'cluster':</span> <span class=\"string\">'weiyigeek-lb-vip.k8s'</span><span class=\"string\">,'nodeType':</span> <span class=\"string\">'master'</span><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"attr\">- targets:</span> <span class=\"string\">[</span> <span class=\"string\">'192.168.12.223:9100'</span><span class=\"string\">,'192.168.12.224:9100','192.168.12.225:9100'</span> <span class=\"string\">]</span></span><br><span class=\"line\"><span class=\"attr\">  labels:</span> <span class=\"string\">&#123;'env':</span> <span class=\"string\">'prod'</span><span class=\"string\">,'cluster':</span> <span class=\"string\">'weiyigeek-lb-vip.k8s'</span><span class=\"string\">,'nodeType':</span> <span class=\"string\">'work'</span><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>4.alertmanager.yaml 邮箱报警发送配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tee alertmanager.yaml &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">global:</span><br><span class=\"line\">  resolve_timeout: 5m</span><br><span class=\"line\">  smtp_from: <span class=\"string\">'monitor@weiyigeek.top'</span></span><br><span class=\"line\">  smtp_smarthost: <span class=\"string\">'smtp.exmail.qq.com:465'</span></span><br><span class=\"line\">  smtp_auth_username: <span class=\"string\">'monitor@weiyigeek.top'</span></span><br><span class=\"line\">  smtp_auth_password: xxxxxxxxxxx<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">  smtp_require_tls: false</span></span><br><span class=\"line\"><span class=\"string\">  # smtp_hello: '</span>qq.com<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">route:</span></span><br><span class=\"line\"><span class=\"string\">  group_by: ['</span>alertname<span class=\"string\">']</span></span><br><span class=\"line\"><span class=\"string\">  group_wait: 30s</span></span><br><span class=\"line\"><span class=\"string\">  group_interval: 1m</span></span><br><span class=\"line\"><span class=\"string\">  repeat_interval: 10m</span></span><br><span class=\"line\"><span class=\"string\">  receiver: '</span>default-email<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">receivers:</span></span><br><span class=\"line\"><span class=\"string\">- name: '</span>default-email<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">  email_configs:</span></span><br><span class=\"line\"><span class=\"string\">  - to: '</span>master@weiyigeek.top<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">    send_resolved: true</span></span><br><span class=\"line\"><span class=\"string\"># inhibit_rules:</span></span><br><span class=\"line\"><span class=\"string\">#   - source_match:</span></span><br><span class=\"line\"><span class=\"string\">#       severity: '</span>critical<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">#     target_match:</span></span><br><span class=\"line\"><span class=\"string\">#       severity: '</span>warning<span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">#     equal: ['</span>alertname<span class=\"string\">', '</span>instance<span class=\"string\">']</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br><span class=\"line\"><span class=\"string\"># Tips : 可以采用amtool工具校验该yml文件是否无误`./amtool check-config alertmanager.yml`</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>5.docker-compose.yml 资源清单内容:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Desc:  prometheus / pushgateway / alertmanager / grafana 环境搭建</span></span><br><span class=\"line\"><span class=\"comment\"># author: WeiyiGeek</span></span><br><span class=\"line\"><span class=\"comment\"># email: master@weiyigeek.top</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建一个名称为monitor的桥接网络</span></span><br><span class=\"line\">$ docker network create monitor --driver bridge</span><br><span class=\"line\"></span><br><span class=\"line\">tee docker-compose.yml &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">version: <span class=\"string\">'3.2'</span></span><br><span class=\"line\">services:</span><br><span class=\"line\">  prometheus:</span><br><span class=\"line\">    image: prom/prometheus:v2.26.0</span><br><span class=\"line\">    container_name: prometheus_server</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      TZ: Asia/Shanghai</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - /nfsdisk-31/monitor/prometheus/conf/prometheus.yaml:/etc/prometheus/prometheus.yaml</span><br><span class=\"line\">      - /nfsdisk-31/monitor/prometheus/conf/conf.d:/etc/prometheus/conf.d</span><br><span class=\"line\">      - /nfsdisk-31/monitor/prometheus/data:/prometheus/data</span><br><span class=\"line\">      - /etc/localtime:/etc/localtime</span><br><span class=\"line\">    <span class=\"built_in\">command</span>:</span><br><span class=\"line\">      - <span class=\"string\">'--config.file=/etc/prometheus/prometheus.yaml'</span></span><br><span class=\"line\">      - <span class=\"string\">'--storage.tsdb.path=/prometheus/data'</span></span><br><span class=\"line\">      - <span class=\"string\">'--web.enable-admin-api'</span></span><br><span class=\"line\">      - <span class=\"string\">'--web.enable-lifecycle'</span></span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - <span class=\"string\">'30090:9090'</span></span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - monitor</span><br><span class=\"line\"></span><br><span class=\"line\">  pushgateway:</span><br><span class=\"line\">    image: prom/pushgateway</span><br><span class=\"line\">    container_name: prometheus_pushgateway</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      TZ: Asia/Shanghai</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - /etc/localtime:/etc/localtime</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - <span class=\"string\">'30091:9091'</span></span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - monitor</span><br><span class=\"line\"></span><br><span class=\"line\">  alertmanager:</span><br><span class=\"line\">    image: prom/alertmanager:v0.21.0</span><br><span class=\"line\">    container_name: prometheus_alertmanager</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      TZ: Asia/Shanghai</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - /nfsdisk-31/monitor/prometheus/conf/alertmanager.yaml:/etc/alertmanager.yaml</span><br><span class=\"line\">      - /etc/localtime:/etc/localtime</span><br><span class=\"line\">      <span class=\"comment\"># - /nfsdisk-31/monitor/prometheus/alertmanager:/alertmanager</span></span><br><span class=\"line\">    <span class=\"built_in\">command</span>:</span><br><span class=\"line\">      - <span class=\"string\">'--config.file=/etc/alertmanager.yaml'</span></span><br><span class=\"line\">      - <span class=\"string\">'--storage.path=/alertmanager'</span></span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - <span class=\"string\">'30093:9093'</span></span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - monitor</span><br><span class=\"line\"></span><br><span class=\"line\">  grafana:</span><br><span class=\"line\">    image: grafana/grafana:7.5.5</span><br><span class=\"line\">    container_name: grafana</span><br><span class=\"line\">    user: <span class=\"string\">\"472\"</span></span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      - TZ=Asia/Shanghai</span><br><span class=\"line\">      - GF_SECURITY_ADMIN_PASSWORD=weiyigeek</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - /nfsdisk-31/monitor/grafana/data:/var/lib/grafana</span><br><span class=\"line\">      - /etc/localtime:/etc/localtime</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - <span class=\"string\">'30000:3000'</span></span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - monitor</span><br><span class=\"line\">    dns:</span><br><span class=\"line\">      - 223.6.6.6</span><br><span class=\"line\">      - 192.168.12.254</span><br><span class=\"line\"></span><br><span class=\"line\">networks:</span><br><span class=\"line\">  monitor:</span><br><span class=\"line\">    external: <span class=\"literal\">true</span></span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 验证配置</span></span><br><span class=\"line\">docker-compose config </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建和后台启动容器</span></span><br><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>6.环境验证: 访问搭建的<code>prometheus server</code> 服务地址<code>http://192.168.12.107:30090/service-discovery</code>进行查询以及监控节点的查看。</p>\n</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/5/20210510223606.png\" alt=\"WeiyiGeek.基础环境验证\" title=\"\" class=\"\">\n                <p>WeiyiGeek.基础环境验证</p>\n            </figure>\n<p><br></p>\n<h2 id=\"0x01-实现Windows主机的监控和展示\"><a href=\"#0x01-实现Windows主机的监控和展示\" class=\"headerlink\" title=\"0x01 实现Windows主机的监控和展示\"></a>0x01 实现Windows主机的监控和展示</h2><p>描述: 我们采用 Prometheus 监控进行 Windows 机器,我们也要像在 <code>node_exporter</code> 二进制可执行软件安装运行在Linux系统上, 在Windows系统上安装 <a href=\"https://github.com/prometheus-community/windows_exporter\" target=\"_blank\" rel=\"noopener\">windows_exporter</a> 操作流程如下:</p>\n<ul>\n<li><p>Step 1.下载安装<code>windows_exporter</code>可执行软件其<a href=\"https://github.com/prometheus-community/windows_exporter/releases\" target=\"_blank\" rel=\"noopener\">releases地址</a> 我们可以选择<code>exe或者msi</code>安装方式;</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># exe与msi下载</span></span><br><span class=\"line\">windows_exporter-0.16.0-amd64.exe</span><br><span class=\"line\">windows_exporter-0.16.0-amd64.msi</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># msi - 安装执行调用示例：</span></span><br><span class=\"line\">msiexec /i &lt;path-to-msi-file&gt; ENABLED_COLLECTORS=os,iis LISTEN_PORT=5000</span><br><span class=\"line\"><span class=\"comment\"># 带有自定义查询的示例服务收集器</span></span><br><span class=\"line\">msiexec /i &lt;path-to-msi-file&gt; ENABLED_COLLECTORS=os,service --% EXTRA_FLAGS=<span class=\"string\">\"--collector.service.services-where \"</span><span class=\"string\">\"Name LIKE 'sql%'\"</span><span class=\"string\">\"\"</span></span><br><span class=\"line\"><span class=\"comment\"># 在某些旧版本的Windows上，可能需要用双引号将参数值括起来，以正确解析install命令：</span></span><br><span class=\"line\">msiexec /i C:\\Users\\Administrator\\Downloads\\windows_exporter.msi ENABLED_COLLECTORS=<span class=\"string\">\"ad,iis,logon,memory,process,tcp,thermalzone\"</span> TEXTFILE_DIR=<span class=\"string\">\"C:\\custom_metrics\\\"</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># exe - Examples</span></span><br><span class=\"line\"><span class=\"comment\"># 仅启用service collector并指定自定义查询</span></span><br><span class=\"line\">.\\windows_exporter.exe --collectors.enabled <span class=\"string\">\"service\"</span> --collector.service.services-where <span class=\"string\">\"Name='windows_exporter'\"</span></span><br><span class=\"line\"><span class=\"comment\"># 仅启用process collector并指定自定义查询</span></span><br><span class=\"line\">.\\windows_exporter.exe --collectors.enabled <span class=\"string\">\"process\"</span> --collector.process.whitelist=<span class=\"string\">\"firefox.+\"</span></span><br><span class=\"line\"><span class=\"comment\"># 将[defaults]与--collectors.enabled参数一起使用，该参数将与所有默认收集器一起展开。</span></span><br><span class=\"line\">.\\windows_exporter.exe --collectors.enabled <span class=\"string\">\"[defaults],process,container\"</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 2.使用配置文件config.yml运行后将在9182端口启用监听我们可以访问该<code>http://127.0.0.1:9182/metrics</code>url查看metrics.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.\\windows_exporter-0.16.0-amd64.exe --config.file=config.yml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># config.yml</span></span><br><span class=\"line\"><span class=\"comment\"># 默认启用 Collectors 收集器以及额外添加的收集器</span></span><br><span class=\"line\">collectors:</span><br><span class=\"line\">  enabled: cpu,cs,logical_disk,net,os,system,service,logon,process,tcp\t</span><br><span class=\"line\">collector:</span><br><span class=\"line\">  service:</span><br><span class=\"line\">    services-where: Name=<span class=\"string\">'windows_exporter'</span></span><br><span class=\"line\"><span class=\"built_in\">log</span>:</span><br><span class=\"line\">  level: debug</span><br><span class=\"line\">scrape:</span><br><span class=\"line\">  timeout-margin: 0.5</span><br><span class=\"line\">telemetry:</span><br><span class=\"line\">  addr: <span class=\"string\">\":9182\"</span></span><br><span class=\"line\">  path: /metrics</span><br><span class=\"line\">  max-requests: 5</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 防火墙规则调整(指定远程连接的地址以及本地开放端口)</span></span><br><span class=\"line\">New-NetFirewallRule -Name prom-windows_exporter -Direction Inbound -DisplayName <span class=\"string\">'windows_exporter'</span> -RemoteAddress 192.168.12.107 -LocalPort 9182 -Protocol <span class=\"string\">'TCP'</span></span><br><span class=\"line\">  <span class=\"comment\"># Name                  : prom-windows_exporter</span></span><br><span class=\"line\">  <span class=\"comment\"># DisplayName           : windows_exporter</span></span><br><span class=\"line\">  <span class=\"comment\"># Description           :</span></span><br><span class=\"line\">  <span class=\"comment\"># DisplayGroup          :</span></span><br><span class=\"line\">  <span class=\"comment\"># Group                 :</span></span><br><span class=\"line\">  <span class=\"comment\"># Enabled               : True</span></span><br><span class=\"line\">  <span class=\"comment\"># Profile               : Any</span></span><br><span class=\"line\">  <span class=\"comment\"># Platform              : &#123;&#125;</span></span><br><span class=\"line\">  <span class=\"comment\"># Direction             : Inbound</span></span><br><span class=\"line\">  <span class=\"comment\"># Action                : Allow</span></span><br><span class=\"line\">  <span class=\"comment\"># EdgeTraversalPolicy   : Block</span></span><br><span class=\"line\">  <span class=\"comment\"># LooseSourceMapping    : False</span></span><br><span class=\"line\">  <span class=\"comment\"># LocalOnlyMapping      : False</span></span><br><span class=\"line\">  <span class=\"comment\"># Owner                 :</span></span><br><span class=\"line\">  <span class=\"comment\"># PrimaryStatus         : OK</span></span><br><span class=\"line\">  <span class=\"comment\"># Status                : 已从存储区成功分析规则。 (65536)</span></span><br><span class=\"line\">  <span class=\"comment\"># EnforcementStatus     : NotApplicable</span></span><br><span class=\"line\">  <span class=\"comment\"># PolicyStoreSource     : PersistentStore</span></span><br><span class=\"line\">  <span class=\"comment\"># PolicyStoreSourceType : Local</span></span><br><span class=\"line\"><span class=\"comment\"># New-NetFirewallRule -Name powershell-remote-udp -Direction Inbound -DisplayName 'PowerShell远程连接 UDP' -LocalPort 9182 -Protocol 'UDP'  # http 协议走的是tcp所以不用添加UDP协议的防火墙策略</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/5/20210511095523.png\" alt=\"WeiyiGeek.windows-metrics\" title=\"\" class=\"\">\n                <p>WeiyiGeek.windows-metrics</p>\n            </figure>\n<ul>\n<li>Step 3.添加到<code>prometheus.yaml</code>主配置文件之中进行重新加载配置即可发现该机器，如下图所示。<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># prometheus.yaml</span></span><br><span class=\"line\">scrape_configs:</span><br><span class=\"line\">- job_name: <span class=\"string\">'windows-exporter'</span></span><br><span class=\"line\">    file_sd_configs:</span><br><span class=\"line\">    - files:</span><br><span class=\"line\">      - /etc/prometheus/conf.d/discovery/win_nodes.yaml</span><br><span class=\"line\">      refresh_interval: 1m</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># vi win_nodes.yaml</span></span><br><span class=\"line\">- targets: [ <span class=\"string\">'192.168.12.240:9182'</span> ]</span><br><span class=\"line\">  labels: &#123;<span class=\"string\">'env'</span>: <span class=\"string\">'temp'</span>,<span class=\"string\">'osType'</span>: <span class=\"string\">'windows'</span>,<span class=\"string\">'nodeType'</span>: <span class=\"string\">'master'</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># PromQL</span></span><br><span class=\"line\">windows_os_info or windows_exporter_build_info&#123;instance=<span class=\"string\">'192.168.12.240:9182'</span>&#125; or windows_logical_disk_free_bytes&#123;volume=<span class=\"string\">\"C:\"</span>&#125; / (1024^3) or windows_net_current_bandwidth</span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/5/20210511101724.png\" alt=\"WeiyiGeek.windows_exporter_promQL\" title=\"\" class=\"\">\n                <p>WeiyiGeek.windows_exporter_promQL</p>\n            </figure>\n</li>\n</ul>\n<ul>\n<li>Step 4.配置<code>Grafana</code>添加prometheus的windows监控的dashboard(<a href=\"https://grafana.com/grafana/dashboards?search=windows_export\" target=\"_blank\" rel=\"noopener\">官方搜索</a>)<ul>\n<li>安装地址:<a href=\"https://grafana.com/grafana/dashboards/10467\" target=\"_blank\" rel=\"noopener\">https://grafana.com/grafana/dashboards/10467</a></li>\n</ul>\n</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/5/20210511102236.png\" alt=\"WeiyiGeek.Grafana_windows_export\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Grafana_windows_export</p>\n            </figure>\n<ul>\n<li>Step 5.访问Grafana的Dashbord查看windows采集的数据展示验证</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/5/20210511105433.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n<p><br></p>\n<h2 id=\"0x02-实现MySQL与Redis数据库的监控和展示\"><a href=\"#0x02-实现MySQL与Redis数据库的监控和展示\" class=\"headerlink\" title=\"0x02 实现MySQL与Redis数据库的监控和展示\"></a>0x02 实现MySQL与Redis数据库的监控和展示</h2><p>描述: 我们可以针对于MySQL以及Redis进行数据库的监控配置利用到的软件是<code>mysql_exporter</code>(<a href=\"https://github.com/prometheus/mysqld_exporter)和`redis_exporter`(https://github.com/oliver006/redis_exporter/)。\" target=\"_blank\" rel=\"noopener\">https://github.com/prometheus/mysqld_exporter)和`redis_exporter`(https://github.com/oliver006/redis_exporter/)。</a></p>\n<ul>\n<li><p>Step 1.准备测试的MySQL与Redis的数据库然后利用docker容器进行监控指标的采集;</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># - mysqld-exporter : export DATA_SOURCE_NAME='user:password@(hostname:3306)/'</span></span><br><span class=\"line\"><span class=\"comment\"># (1) 在执行的MySQL数据库中添加监控用户</span></span><br><span class=\"line\">CREATE USER <span class=\"string\">'exporter'</span>@<span class=\"string\">'%'</span> IDENTIFIED BY <span class=\"string\">'XXXXXXXX'</span> WITH MAX_USER_CONNECTIONS 3;</span><br><span class=\"line\">GRANT PROCESS, REPLICATION CLIENT, SELECT ON *.* TO <span class=\"string\">'exporter'</span>@<span class=\"string\">'%'</span>;</span><br><span class=\"line\"><span class=\"comment\"># (2) 运行 prom/mysqld-exporter 容器</span></span><br><span class=\"line\">docker run -d -p 9104:9104 --name mysqld-exporter -e DATA_SOURCE_NAME=<span class=\"string\">\"exporter:XXXXXXXX@(192.168.12.185:3306)/\"</span> prom/mysqld-exporter</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - redis_exporter:  Supports Redis 2.x, 3.x, 4.x, 5.x, and 6.x</span></span><br><span class=\"line\"><span class=\"comment\"># Redis instance addresses can be tcp addresses: redis://localhost:6379, redis.example.com:6379 or e.g. unix sockets: unix:///tmp/redis.sock.</span></span><br><span class=\"line\">docker run -d  --name redis_exporter --network host -e REDIS_ADDR=<span class=\"string\">\"redis://192.168.12.1doc85:6379\"</span>  -e REDIS_PASSWORD=<span class=\"string\">\"weiyigeek.top\"</span> oliver006/redis_exporter <span class=\"comment\"># -p 9121:9121</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看部署的exporter</span></span><br><span class=\"line\">$ docker ps</span><br><span class=\"line\">CONTAINER ID        IMAGE                      COMMAND                  CREATED             STATUS              PORTS                    NAMES</span><br><span class=\"line\">c3a7a5663143        oliver006/redis_exporter   <span class=\"string\">\"/redis_exporter\"</span>        9 minutes ago       Up 9 minutes                                 redis_exporter</span><br><span class=\"line\">0a3d557bf36b        prom/mysqld-exporter       <span class=\"string\">\"/bin/mysqld_exporter\"</span>   16 minutes ago      Up 16 minutes       0.0.0.0:9104-&gt;9104/tcp   mysqld-exporter</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 2.分别访问mysqld-exporter和redis_exporter的metrics的URL</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ curl -s http://192.168.12.111:9104/metrics | tail -n -5</span><br><span class=\"line\">  <span class=\"comment\"># HELP promhttp_metric_handler_requests_total Total number of scrapes by HTTP status code.</span></span><br><span class=\"line\">  <span class=\"comment\"># TYPE promhttp_metric_handler_requests_total counter</span></span><br><span class=\"line\">  promhttp_metric_handler_requests_total&#123;code=<span class=\"string\">\"200\"</span>&#125; 2</span><br><span class=\"line\">  promhttp_metric_handler_requests_total&#123;code=<span class=\"string\">\"500\"</span>&#125; 2</span><br><span class=\"line\">  promhttp_metric_handler_requests_total&#123;code=<span class=\"string\">\"503\"</span>&#125; 0</span><br><span class=\"line\"></span><br><span class=\"line\">$ curl -s http://192.168.12.111:9121/metrics | tail -n -5</span><br><span class=\"line\">  <span class=\"comment\"># TYPE redis_up gauge</span></span><br><span class=\"line\">  redis_up 1</span><br><span class=\"line\">  <span class=\"comment\"># HELP redis_uptime_in_seconds uptime_in_seconds metric</span></span><br><span class=\"line\">  <span class=\"comment\"># TYPE redis_uptime_in_seconds gauge</span></span><br><span class=\"line\">  redis_uptime_in_seconds 1.281979e+06</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 3.prometheus.yaml 主配置文件修改和添加;</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">scrape_configs:</span></span><br><span class=\"line\"><span class=\"attr\">  - job_name:</span> <span class=\"string\">'mysql_discovery'</span></span><br><span class=\"line\"><span class=\"attr\">    file_sd_configs:</span></span><br><span class=\"line\"><span class=\"attr\">    - files:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">/etc/prometheus/conf.d/discovery/mysql_discovery.yaml</span></span><br><span class=\"line\"><span class=\"attr\">      refresh_interval:</span> <span class=\"number\">1</span><span class=\"string\">m</span></span><br><span class=\"line\"><span class=\"attr\">  - job_name:</span> <span class=\"string\">'redis_discovery'</span></span><br><span class=\"line\"><span class=\"attr\">    file_sd_configs:</span></span><br><span class=\"line\"><span class=\"attr\">    - files:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">/etc/prometheus/conf.d/discovery/redis_discovery.yaml</span></span><br><span class=\"line\"><span class=\"attr\">      refresh_interval:</span> <span class=\"number\">1</span><span class=\"string\">m</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># vi mysql_discovery.yaml</span></span><br><span class=\"line\"><span class=\"attr\">- targets:</span> <span class=\"string\">[</span> <span class=\"string\">'192.168.12.111:9104'</span> <span class=\"string\">]</span></span><br><span class=\"line\"><span class=\"attr\">  labels:</span> <span class=\"string\">&#123;'env':</span> <span class=\"string\">'test'</span><span class=\"string\">,'osType':</span> <span class=\"string\">'container'</span><span class=\"string\">,'nodeType':</span> <span class=\"string\">'database'</span><span class=\"string\">&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># vi redis_discovery.yaml</span></span><br><span class=\"line\"><span class=\"attr\">- targets:</span> <span class=\"string\">[</span> <span class=\"string\">'192.168.12.111:9121'</span> <span class=\"string\">]</span></span><br><span class=\"line\"><span class=\"attr\">  labels:</span> <span class=\"string\">&#123;'env':</span> <span class=\"string\">'test'</span><span class=\"string\">,'osType':</span> <span class=\"string\">'container'</span><span class=\"string\">,'nodeType':</span> <span class=\"string\">'database'</span><span class=\"string\">&#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 4.热加载prometheus.yaml配置或者重新启动prometheus容器验证monitor目标执行PromQL表达式: <code>redis_instance_info or mysql_version_info</code></p>\n</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/5/20210511142554.png\" alt=\"WeiyiGeek.redis&mysql_exporter\" title=\"\" class=\"\">\n                <p>WeiyiGeek.redis&mysql_exporter</p>\n            </figure>\n<ul>\n<li>Step 5.在Grafana中找寻安装<code>Prometheus Redis Dashboard</code>(<a href=\"https://grafana.com/grafana/dashboards/763)和`Prometheus\" target=\"_blank\" rel=\"noopener\">https://grafana.com/grafana/dashboards/763)和`Prometheus</a> mysql Dashboard`(<a href=\"https://grafana.com/grafana/dashboards/7362\" target=\"_blank\" rel=\"noopener\">https://grafana.com/grafana/dashboards/7362</a>)</li>\n</ul>\n<p><img src=\"https://img.weiyigeek.top/2021/5/20210511145358.png\" alt=\"WeiyiGeek.Redis-Dashbord\"></p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/5/20210511150205.png\" alt=\"WeiyiGeek.MySQL-Dashbord\" title=\"\" class=\"\">\n                <p>WeiyiGeek.MySQL-Dashbord</p>\n            </figure>\n<hr>\n<h2 id=\"0x03-实现Jenkins持续集成和交付的服务监控和展示\"><a href=\"#0x03-实现Jenkins持续集成和交付的服务监控和展示\" class=\"headerlink\" title=\"0x03 实现Jenkins持续集成和交付的服务监控和展示\"></a>0x03 实现Jenkins持续集成和交付的服务监控和展示</h2><p>目标: 使用Prometheus对持续集成Jenkins进行监控，并通过Grafana展示监控数据。</p>\n<ul>\n<li><p>Step 1.安装Prometheus metrics插件(<code>Prometheus metrics: Expose Jenkins metrics in prometheus format</code>)</p>\n</li>\n<li><p>Step 2.在系统管理-&gt; 系统配置-&gt;配置Prometheus插件，主要填写Path地址和url路径namespace最后应用保存即可。</p>\n</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/5/20210508114838.png\" alt=\"WeiyiGeek.Prometheus metrics\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Prometheus metrics</p>\n            </figure>\n<ul>\n<li>Step 3.测试验证Prometheus插件运行情况,即访问<code>http://yourjenkinserver:port/prometheus</code></li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/5/20210508114953.png\" alt=\"WeiyiGeek.reuqets-Prometheus\" title=\"\" class=\"\">\n                <p>WeiyiGeek.reuqets-Prometheus</p>\n            </figure>\n<ul>\n<li><p>Step 4.在我们的Prometheus服务端将该端点地址添加到<code>prometheus.yml</code>之中。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- job_name: <span class=\"string\">'jenkins'</span></span><br><span class=\"line\">    metrics_path: <span class=\"string\">'/prometheus/'</span></span><br><span class=\"line\">    scheme: <span class=\"string\">'http'</span></span><br><span class=\"line\">    bearer_token: <span class=\"string\">'bearer_token'</span></span><br><span class=\"line\">    static_configs:</span><br><span class=\"line\">      - targets: [<span class=\"string\">'192.168.12.107:30001'</span>]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 5.重载prometheus.yml配置(使用方式必须是在有<code>--web.enable-lifecycle</code>启动参数为真的情况下)，然后验证监控项：<code>devops_jenkins_executors_available</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 使修改后的配置生效(在也不用重启容器了)</span></span><br><span class=\"line\">curl -X POST http://192.168.12.107:30090/-/reload</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看当前配置</span></span><br><span class=\"line\">curl http://192.168.12.107:30090/api/v1/status/config</span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/5/20210508145407.png\" alt=\"WeiyiGeek.jenkins-prometheus\" title=\"\" class=\"\">\n                <p>WeiyiGeek.jenkins-prometheus</p>\n            </figure>\n</li>\n</ul>\n<ul>\n<li>Step 6.在Grafana进行添加数据源配置并显示采集的指标。<ul>\n<li>首先安装<a href=\"https://grafana.com/grafana/dashboards/9524\" target=\"_blank\" rel=\"noopener\">a Jenkins performance and health overview for jenkinsci/prometheus-plugin</a>,在面板中<code>+-&gt;Import</code>然后输入vid Grafana Dashboard URL:<a href=\"https://grafana.com/grafana/dashboards/9524\" target=\"_blank\" rel=\"noopener\">https://grafana.com/grafana/dashboards/9524</a> -&gt; load -&gt; Import然后跳转到监控页面数据就可以展示出来了;</li>\n</ul>\n</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/5/20210508151102.png\" alt=\"WeiyiGeek.a Jenkins performance and health overview\" title=\"\" class=\"\">\n                <p>WeiyiGeek.a Jenkins performance and health overview</p>\n            </figure>\n<hr>\n<h2 id=\"0x04-实现kubernetes外部集群的监控和展示\"><a href=\"#0x04-实现kubernetes外部集群的监控和展示\" class=\"headerlink\" title=\"0x04 实现kubernetes外部集群的监控和展示\"></a>0x04 实现kubernetes外部集群的监控和展示</h2><p>描述: 我们知道学习测试 Prometheus 一般将其安装在k8s集群中进行数据metrics的采集，但在实际的环境中企业大多选择将<br>ometheus 单独部署在集群外部进行监控某一集群，如果有多套集群时使用不同的 Prometheus 实例监控不同的集群，然后用联邦的方式进行汇总。<br>其次由于我们学习环境的原因，本章将使用 Prometheus 监控外部的 Kubernetes 集群进行配置讲解(在kubernetes集群中即可参照下面某些方式进行配置)</p>\n<p><br/></p>\n<p><strong>Q: Prometheus 如何采集Kubernetes集群数据?</strong></p>\n<blockquote>\n<p>答: 如果我们对集群内部的 Prometheus 自动发现 Kubernetes 的数据比较熟悉的话，那么监控外部集群的原理也是一样的，只是访问 APIServer 的形式有 inCluster 模式变成了 KubeConfig 的模式，inCluster 模式下在 Pod 中就已经自动注入了访问集群的 token 和 ca.crt 文件，所以非常方便，那么在集群外的话就需要我们手动提供这两个文件，才能够做到自动发现了。</p>\n</blockquote>\n<p><br/></p>\n<p><strong>Q: Prometheus通过exporter收集各种维度的监控指标</strong></p>\n<blockquote>\n<p>答: Prometheus 通过 kubernetes_sd_configs 从 Kubernetes 的 REST API 查找并拉取指标，并始终与集群状态保持同步，使用<code>endpoints,service,node,pod,ingress</code>等角色进行自动发现</p>\n<ul>\n<li>endpoints : 自动发现service中的endpoint</li>\n<li>node: 自动发现每个集群节点发现一个target，其地址默认为Kubelet的HTTP端口如<code>&quot;https://192.168.3.217:10250/metrics&quot;</code></li>\n<li>service : 自动发现每个服务的每个服务端口的target</li>\n<li>pod : 自动发现所有容器及端口</li>\n<li>ingrsss : 自动发现ingress中path</li>\n</ul>\n</blockquote>\n<p><br/></p>\n<p><strong>Q: 可以通过哪几种方式维度收集监控指标?</strong></p>\n<p>维度 | 工具 | 监控url(<code>__metrics_path__</code>) |备注|<br>|:—:|:—:|:—|—-|<br>|Node性能  | node-exporter    | /api/v1/nodes/node名:9100/proxy/metrics | 节点状态 |<br>|Pod性能 | kubelet <br/>cadvisor | /api/v1/nodes/node名:10250/proxy/metrics<br>/api/v1/nodes/node名:10250/proxy/metrics/cadvisor|容器状态|<br>|K8S资源| kube-state-metrics|<code>__scheme__://__address____metrics_path__</code>|Deploy/ds等|</p>\n<p>Tips : 注意kube-state-metrics监控的URL的动态发现是基于标签的自动补全,其中标签的值都可以通过Prometheus的relabel_config拼接成最终的监控url，由于集群外部署Prometheus和集群内部署Prometheus是不一样的，因此我们可以通过<code>proxy url</code>集群外Prometheus就可以访问监控url来拉取监控指标。</p>\n<p><br/></p>\n<p><strong>Q: 如何构造Apiserver proxy url?</strong><br>描述: 在k8s集群中nodes、pods、services都有自己的私有IP，但是无法从集群外访问；但K8S提供以下几种方式来访问：<code>1.通过public IPs访问service , 2.通过proxy 访问node、pod、service, 3.通过集群内的node或pod间接访问</code></p>\n<p>例如: 通过<code>kubectl cluster-info</code>命令可以查看kube-system命令空间的proxy url<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl cluster-info</span><br><span class=\"line\">Kubernetes master is running at https://k8s-dev.weiyigeek:6443</span><br><span class=\"line\">KubeDNS is running at https://k8s-dev.weiyigeek:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy</span><br></pre></td></tr></table></figure></p>\n<p>所以其默认的构造规则为如下格式。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> other_apiserver_address = k8s-dev.weiyigeek:6443</span><br><span class=\"line\"><span class=\"comment\"># 访问node</span></span><br><span class=\"line\">https://<span class=\"variable\">$&#123;other_apiserver_address&#125;</span>/api/v1/nodes/node_name:[port_name]/proxy/metrics</span><br><span class=\"line\"><span class=\"comment\"># 访问service</span></span><br><span class=\"line\">https://<span class=\"variable\">$&#123;other_apiserver_address&#125;</span>/api/v1/namespaces/service_namespace/services/http:service_name[:port_name]/proxy/metrics</span><br><span class=\"line\"><span class=\"comment\"># 访问pod</span></span><br><span class=\"line\">https://<span class=\"variable\">$&#123;other_apiserver_address&#125;</span>/api/v1/namespaces/pod_namespace/pods/http:pod_name[:port_name]/proxy/metrics</span><br></pre></td></tr></table></figure></p>\n<p>在我们了解如何构造proxy url后,我们可以通过集群外Prometheus的relabel_config自行构造proxy url。</p>\n<p><br/></p>\n<h4 id=\"1-Endpoints-之服务自动发现\"><a href=\"#1-Endpoints-之服务自动发现\" class=\"headerlink\" title=\"1.Endpoints 之服务自动发现\"></a>1.Endpoints 之服务自动发现</h4><p>描述: 此处我们采用进行安装部署k8s集群监控的<code>kube-state-metrics</code>服务, 它监听Kubernetes API服务器并生成关联对象的指标, 它不关注单个Kubernetes组件的运行状况，而是关注内部各种对象（<code>如deployment、node、pod等</code>）的运行状况。</p>\n<p><strong>流程步骤:</strong></p>\n<ul>\n<li>Step 1.我们先查看当前<code>kube-state-metrics兼容性矩阵</code>与我们kubernetes集群版本的对应<a href=\"https://github.com/kubernetes/kube-state-metrics#compatibility-matrix\" target=\"_blank\" rel=\"noopener\">参考地址</a>,下面最多记录5个kube状态度量和5个kubernetes版本。<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kube-state-metrics \tKubernetes 1.17 \tKubernetes 1.18 \tKubernetes 1.19 \tKubernetes 1.20 \tKubernetes 1.21</span><br><span class=\"line\">v1.8.0 \t- \t- \t- \t- \t-</span><br><span class=\"line\">v1.9.8 \t- \t- \t- \t- \t-</span><br><span class=\"line\">v2.0.0 \t-/✓ \t-/✓ \t✓ \t✓ \t-/✓</span><br><span class=\"line\">master \t-/✓ \t-/✓ \t✓ \t✓ \t✓</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br></p>\n<ul>\n<li>Step 2.k8s集群 ApiServer 访问鉴权账号创建和绑定的集群角色权限配置。<br>描述: 在访问<code>K8S apiserver</code>需要先进行授权，而集群内部Prometheus可以使用集群内默认配置进行访问，而集群外访问需要使用<code>token+客户端cert进行认证</code>因此需要先进行RBAC授权。<ul>\n<li>此处测试由于我们需要访问不同的namespace，建议先使用分配绑定cluster-admin权限,但在生产中一定要使用最小权限原则来保证其安全性(后面会进行演示)。<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.创建名称空间</span></span><br><span class=\"line\">kubectl create ns monitor</span><br><span class=\"line\">  <span class=\"comment\"># namespace/monitor created</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.创建serviceaccounts</span></span><br><span class=\"line\">kubectl create sa prometheus --namespace monitor</span><br><span class=\"line\">  <span class=\"comment\"># serviceaccount/prometheus created</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.创建prometheus角色并对其绑定cluster-admin</span></span><br><span class=\"line\">$ kubectl create clusterrolebinding prometheus --clusterrole cluster-admin --serviceaccount=monitor:prometheus</span><br><span class=\"line\">  <span class=\"comment\"># clusterrolebinding.rbac.authorization.k8s.io/prometheus created</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4.查看创建的角色对应的Token值</span></span><br><span class=\"line\">$ kubectl get sa</span><br><span class=\"line\">  <span class=\"comment\"># NAME         SECRETS   AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># default      1         18d</span></span><br><span class=\"line\">  <span class=\"comment\"># prometheus   1         24s</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ kubectl get sa prometheus -n monitor -o yaml</span><br><span class=\"line\">  <span class=\"comment\"># apiVersion: v1</span></span><br><span class=\"line\">  <span class=\"comment\"># kind: ServiceAccount</span></span><br><span class=\"line\">  <span class=\"comment\"># metadata:</span></span><br><span class=\"line\">  <span class=\"comment\">#   creationTimestamp: \"2021-05-10T06:10:28Z\"</span></span><br><span class=\"line\">  <span class=\"comment\">#   name: prometheus</span></span><br><span class=\"line\">  <span class=\"comment\">#   namespace: default</span></span><br><span class=\"line\">  <span class=\"comment\">#   resourceVersion: \"3596438\"</span></span><br><span class=\"line\">  <span class=\"comment\">#   selfLink: /api/v1/namespaces/default/serviceaccounts/prometheus</span></span><br><span class=\"line\">  <span class=\"comment\">#   uid: af6a884d-2670-4f46-836e-d8ccf9fd0c38</span></span><br><span class=\"line\">  <span class=\"comment\"># secrets:</span></span><br><span class=\"line\">  <span class=\"comment\"># - name: prometheus-token-ft8bd  # secrets Token 关键点</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5.一行命令搞定</span></span><br><span class=\"line\">kubectl get secret -n monitor $(kubectl get sa prometheus -n monitor -o yaml | tail -n 1 | cut -d <span class=\"string\">\" \"</span> -f 3) -o yaml | grep <span class=\"string\">\"token:\"</span> | head -n 1 | awk <span class=\"string\">'&#123;print $2&#125;'</span>|base64 -d &gt; k8s_token</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 6.补充k8s集群相关crt和key获取</span></span><br><span class=\"line\"><span class=\"comment\"># client-certificate-data</span></span><br><span class=\"line\">~$ grep <span class=\"string\">'client-certificate-data'</span> ~/.kube/config | head -n 1 | awk <span class=\"string\">'&#123;print $2&#125;'</span> | base64 -d &gt; k8s_client.crt</span><br><span class=\"line\"><span class=\"comment\"># client-key-data</span></span><br><span class=\"line\">~$ grep <span class=\"string\">'client-key-data'</span> ~/.kube/config | head -n 1 | awk <span class=\"string\">'&#123;print $2&#125;'</span> | base64 -d &gt; k8s_client.key</span><br><span class=\"line\">scp -P20211 weiyigeek@weiyigeek-226:~/.kube/k8s_client.crt ./conf.d/ssl/</span><br><span class=\"line\">scp -P20211 weiyigeek@weiyigeek-226:~/.kube/k8s_client.key ./conf.d/ssl/</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<p><br/></p>\n<ul>\n<li>Step 3.参考采用官方提供的部署资源清单<a href=\"https://github.com/kubernetes/kube-state-metrics/tree/master/examples/standard\" target=\"_blank\" rel=\"noopener\">参考地址</a>,此处已采用上面创建的 prometheus 用户。<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tee kube-state-metrics.yaml &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">apiVersion: apps/v1</span><br><span class=\"line\">kind: Deployment</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  labels:</span><br><span class=\"line\">    app.kubernetes.io/name: kube-state-metrics</span><br><span class=\"line\">    app.kubernetes.io/version: 2.0.0</span><br><span class=\"line\">  name: kube-state-metrics</span><br><span class=\"line\">  namespace: kube-system</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  replicas: 1</span><br><span class=\"line\">  selector:</span><br><span class=\"line\">    matchLabels:</span><br><span class=\"line\">      app.kubernetes.io/name: kube-state-metrics</span><br><span class=\"line\">  template:</span><br><span class=\"line\">    metadata:</span><br><span class=\"line\">      labels:</span><br><span class=\"line\">        app.kubernetes.io/name: kube-state-metrics</span><br><span class=\"line\">        app.kubernetes.io/version: 2.0.0</span><br><span class=\"line\">    spec:</span><br><span class=\"line\">      containers:</span><br><span class=\"line\">      - image: bitnami/kube-state-metrics:2.0.0</span><br><span class=\"line\">        livenessProbe:</span><br><span class=\"line\">          httpGet:</span><br><span class=\"line\">            path: /healthz</span><br><span class=\"line\">            port: 8080</span><br><span class=\"line\">          initialDelaySeconds: 5</span><br><span class=\"line\">          timeoutSeconds: 5</span><br><span class=\"line\">        name: kube-state-metrics</span><br><span class=\"line\">        ports:</span><br><span class=\"line\">        - containerPort: 8080</span><br><span class=\"line\">          name: http-metrics</span><br><span class=\"line\">        - containerPort: 8081</span><br><span class=\"line\">          name: telemetry</span><br><span class=\"line\">        readinessProbe:</span><br><span class=\"line\">          httpGet:</span><br><span class=\"line\">            path: /</span><br><span class=\"line\">            port: 8081</span><br><span class=\"line\">          initialDelaySeconds: 5</span><br><span class=\"line\">          timeoutSeconds: 5</span><br><span class=\"line\">        securityContext:</span><br><span class=\"line\">          runAsUser: 65534</span><br><span class=\"line\">      nodeSelector:</span><br><span class=\"line\">        kubernetes.io/os: linux</span><br><span class=\"line\">      serviceAccountName: prometheus</span><br><span class=\"line\">---</span><br><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">kind: Service</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  labels:</span><br><span class=\"line\">    app.kubernetes.io/name: kube-state-metrics</span><br><span class=\"line\">    app.kubernetes.io/version: 2.0.0</span><br><span class=\"line\">  name: kube-state-metrics</span><br><span class=\"line\">  namespace: kube-system</span><br><span class=\"line\">  annotations:</span><br><span class=\"line\">    <span class=\"comment\"># 注意: 此处需要进行添加到annotations(注释)便于prometheus进行自动发现。</span></span><br><span class=\"line\">    prometheus.io/scrape: <span class=\"string\">'true'</span></span><br><span class=\"line\">spec:</span><br><span class=\"line\">  clusterIP: None</span><br><span class=\"line\">  ports:</span><br><span class=\"line\">  - name: http-metrics</span><br><span class=\"line\">    port: 8080</span><br><span class=\"line\">    targetPort: http-metrics</span><br><span class=\"line\">  - name: telemetry</span><br><span class=\"line\">    port: 8081</span><br><span class=\"line\">    targetPort: telemetry</span><br><span class=\"line\">  selector:</span><br><span class=\"line\">    app.kubernetes.io/name: kube-state-metrics</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - 创建 monitor 名称空间</span></span><br><span class=\"line\">kubectl create ns monitor</span><br><span class=\"line\"></span><br><span class=\"line\">sed -i <span class=\"string\">\"s#kube-system#monitor#g\"</span> kube-state-metrics.yaml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - 部署 kube-state-metrics</span></span><br><span class=\"line\">kubectl apply -f kube-state-metrics.yaml</span><br><span class=\"line\">  <span class=\"comment\"># deployment.apps/kube-state-metrics created</span></span><br><span class=\"line\">  <span class=\"comment\"># service/kube-state-metrics created</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br/></p>\n<ul>\n<li><p>Step 4.验证查看部署情况并获取认证token</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl get pod,svc,ep -n monitor --show-labels</span><br><span class=\"line\">  <span class=\"comment\"># NAME                                      READY   STATUS    RESTARTS   AGE     LABELS</span></span><br><span class=\"line\">  <span class=\"comment\"># pod/kube-state-metrics-777789bc9d-9n6jf   1/1     Running   0          3m30s   app.kubernetes.io/name=kube-state-metrics,app.kubernetes.io/version=2.0.0,pod-template-hash=777789bc9d</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># NAME                         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)             AGE     LABELS</span></span><br><span class=\"line\">  <span class=\"comment\"># service/kube-state-metrics   ClusterIP   None         &lt;none&gt;        8080/TCP,8081/TCP   3m30s   app.kubernetes.io/name=kube-state-metrics,app.kubernetes.io/version=2.0.0,prometheus.io/scrape=true</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># NAME                           ENDPOINTS                                 AGE     LABELS</span></span><br><span class=\"line\">  <span class=\"comment\"># endpoints/kube-state-metrics   172.16.182.199:8081,172.16.182.199:8080   3m30s   app.kubernetes.io/name=kube-state-metrics,app.kubernetes.io/version=2.0.0,prometheus.io/scrape=true,service.kubernetes.io/headless=</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - ca.crt 文件以及Token</span></span><br><span class=\"line\"><span class=\"comment\"># kubectl get secret -n monitor $(kubectl get sa kube-state-metrics -n monitor -o yaml | tail -n 1 | cut -d \" \" -f 3) -o yaml | grep \"ca.crt:\" | head -n 1 | awk '&#123;print $2&#125;' | base64 -d &gt; k8s_ca.crt</span></span><br><span class=\"line\">kubectl get secret -n monitor $(kubectl get sa kube-state-metrics -n monitor -o yaml | tail -n 1 | cut -d <span class=\"string\">\" \"</span> -f 3) -o yaml | grep <span class=\"string\">\"token:\"</span> | head -n 1 | awk <span class=\"string\">'&#123;print $2&#125;'</span>| base64 -d &gt; k8s_token</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 5.将获取到的<code>k8s_ca.crt</code>和<code>k8s_token</code>文件下载到prometheus主配置文件中指定的目录之中;</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible weiyigeek-226 -m fetch -a <span class=\"string\">\"src=/home/weiyigeek/prometheus/k8s_ca.crt dest=/tmp\"</span></span><br><span class=\"line\">ansible weiyigeek-226 -m fetch -a <span class=\"string\">\"src=/home/weiyigeek/prometheus/k8s_token dest=/tmp\"</span></span><br><span class=\"line\">  <span class=\"comment\"># weiyigeek-226 | CHANGED =&gt; &#123;</span></span><br><span class=\"line\">  <span class=\"comment\">#   \"changed\": true,</span></span><br><span class=\"line\">  <span class=\"comment\">#   \"checksum\": \"22c40a4f83ad82343affbab3f8a732c14accbdcd\",</span></span><br><span class=\"line\">  <span class=\"comment\">#   \"dest\": \"/tmp/k8s_token/weiyigeek-226/home/weiyigeek/prometheus/k8s_kube-state-metrics_token\",</span></span><br><span class=\"line\">  <span class=\"comment\">#   \"md5sum\": \"c9d780a62db497bbfd995b548887e4ed\",</span></span><br><span class=\"line\">  <span class=\"comment\">#   \"remote_checksum\": \"22c40a4f83ad82343affbab3f8a732c14accbdcd\",</span></span><br><span class=\"line\">  <span class=\"comment\">#   \"remote_md5sum\": null</span></span><br><span class=\"line\">  <span class=\"comment\"># &#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br/></p>\n<ul>\n<li>Step 6.配置<code>prometheus.yml</code>主配置文件添加<code>kubernetes_sd_configs</code>对象配置endpoints角色的自动发现。<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- job_name: <span class=\"string\">'k8s-endpoint-discover'</span></span><br><span class=\"line\">  scheme: https</span><br><span class=\"line\">  <span class=\"comment\">#使用apiserver授权部分解密的token值以文件形式存储</span></span><br><span class=\"line\">  tls_config:</span><br><span class=\"line\">    ca_file: /etc/prometheus/conf.d/auth/k8s_ca.crt</span><br><span class=\"line\">    insecure_skip_verify: <span class=\"literal\">true</span></span><br><span class=\"line\">  bearer_token_file: /etc/prometheus/conf.d/auth/k8s_token</span><br><span class=\"line\">  <span class=\"comment\"># k8s自动发现具体配置</span></span><br><span class=\"line\">  kubernetes_sd_configs:</span><br><span class=\"line\">  <span class=\"comment\"># 使用endpoint级别自动发现</span></span><br><span class=\"line\">  - role: endpoints</span><br><span class=\"line\">    api_server: <span class=\"string\">'https://192.168.12.226:6443'</span></span><br><span class=\"line\">    tls_config:</span><br><span class=\"line\">      ca_file: /etc/prometheus/conf.d/auth/k8s_ca.crt</span><br><span class=\"line\">      insecure_skip_verify: <span class=\"literal\">true</span></span><br><span class=\"line\">    bearer_token_file: /etc/prometheus/conf.d/auth/k8s_token</span><br><span class=\"line\">  relabel_configs:</span><br><span class=\"line\">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class=\"line\">    <span class=\"comment\"># 只保留指定匹配正则的标签，不匹配则删除</span></span><br><span class=\"line\">    action: keep</span><br><span class=\"line\">    regex: <span class=\"string\">'^(kube-state-metrics)$'</span></span><br><span class=\"line\">  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]</span><br><span class=\"line\">    <span class=\"comment\"># 只保留指定匹配正则的标签，不匹配则删除</span></span><br><span class=\"line\">    action: keep</span><br><span class=\"line\">    regex: <span class=\"literal\">true</span></span><br><span class=\"line\">  - source_labels: [__address__]</span><br><span class=\"line\">    action: replace</span><br><span class=\"line\">    target_label: instance</span><br><span class=\"line\">  - target_label: __address__</span><br><span class=\"line\">    <span class=\"comment\"># 使用replacement值替换__address__默认值</span></span><br><span class=\"line\">    replacement: 192.168.12.226:6443</span><br><span class=\"line\">  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name, __meta_kubernetes_pod_container_port_number]</span><br><span class=\"line\">    <span class=\"comment\"># 正则匹配</span></span><br><span class=\"line\">    regex: ([^;]+);([^;]+);([^;]+)</span><br><span class=\"line\">    <span class=\"comment\"># 使用replacement值替换__metrics_path__默认值</span></span><br><span class=\"line\">    target_label: __metrics_path__</span><br><span class=\"line\">    <span class=\"comment\"># 自行构建的apiserver proxy url</span></span><br><span class=\"line\">    replacement: /api/v1/namespaces/<span class=\"variable\">$&#123;1&#125;</span>/pods/http:<span class=\"variable\">$&#123;2&#125;</span>:<span class=\"variable\">$&#123;3&#125;</span>/proxy/metrics</span><br><span class=\"line\">  - action: labelmap</span><br><span class=\"line\">    regex: __meta_kubernetes_service_label_(.+)</span><br><span class=\"line\">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class=\"line\">    action: replace</span><br><span class=\"line\">    <span class=\"comment\"># 将标签__meta_kubernetes_namespace修改为kubernetes_namespace</span></span><br><span class=\"line\">    target_label: kubernetes_namespace</span><br><span class=\"line\">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class=\"line\">    action: replace</span><br><span class=\"line\">    <span class=\"comment\"># 将标签__meta_kubernetes_service_name修改为service_name</span></span><br><span class=\"line\">    target_label: service_name</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br/></p>\n<p>Tips: 通过<code>relabel_configs</code>构造 prometheus (endpoints) Role 访问 API Server 的 URL;</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">标签</th>\n<th style=\"text-align:left\">默认</th>\n<th style=\"text-align:left\">构造后</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>__scheme__</code></td>\n<td style=\"text-align:left\">https</td>\n<td style=\"text-align:left\">https</td>\n</tr>\n</tbody>\n</table>\n<p><code>__address__</code>    | 172.16.182.200:8081    |192.168.12.226:6443|<br><code>__metrics_path__</code> | /metrics | /api/v1/namespaces/kube-system/pods/http:kube-state-metrics-6477678b78-6qkjg:8081/proxy/metrics |<br>|URL|    <code>https://10.244.2.10:8081/metrics</code> | <code>https://192.168.12.226:6443/api/v1/namespaces/kube-system/pods/http:kube-state-metrics-6477678b78-6qkjg:8081/proxy/metrics</code> |</p>\n<p><br/></p>\n<ul>\n<li>Step 6.修改主配置文件完成后进行重启 <code>prometheus Server</code> 容器然后查看启动状态,由图中可以看见监控成功。<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># k8s-endpoint-discover (2/2 up)</span></span><br><span class=\"line\"><span class=\"comment\"># - Discovered Labels</span></span><br><span class=\"line\">__meta_kubernetes_endpoint_address_target_kind=<span class=\"string\">\"Pod\"</span></span><br><span class=\"line\">__meta_kubernetes_endpoint_address_target_name=<span class=\"string\">\"kube-state-metrics-6477678b78-6qkjg\"</span></span><br><span class=\"line\">__meta_kubernetes_endpoint_node_name=<span class=\"string\">\"weiyigeek-226\"</span></span><br><span class=\"line\">__meta_kubernetes_endpoint_port_name=<span class=\"string\">\"telemetry\"</span></span><br><span class=\"line\">__meta_kubernetes_endpoint_port_protocol=<span class=\"string\">\"TCP\"</span></span><br><span class=\"line\">__meta_kubernetes_endpoint_ready=<span class=\"string\">\"true\"</span></span><br><span class=\"line\">__meta_kubernetes_endpoints_label_app_kubernetes_io_name=<span class=\"string\">\"kube-state-metrics\"</span></span><br><span class=\"line\">__meta_kubernetes_endpoints_label_app_kubernetes_io_version=<span class=\"string\">\"2.0.0\"</span></span><br><span class=\"line\">__meta_kubernetes_endpoints_labelpresent_app_kubernetes_io_name=<span class=\"string\">\"true\"</span></span><br><span class=\"line\">__meta_kubernetes_endpoints_labelpresent_app_kubernetes_io_version=<span class=\"string\">\"true\"</span></span><br><span class=\"line\">__meta_kubernetes_endpoints_labelpresent_service_kubernetes_io_headless=<span class=\"string\">\"true\"</span></span><br><span class=\"line\">__meta_kubernetes_endpoints_name=<span class=\"string\">\"kube-state-metrics\"</span></span><br><span class=\"line\">__meta_kubernetes_namespace=<span class=\"string\">\"monitor\"</span></span><br><span class=\"line\">__meta_kubernetes_pod_annotation_cni_projectcalico_org_podIP=<span class=\"string\">\"172.16.182.200/32\"</span></span><br><span class=\"line\">__meta_kubernetes_pod_annotation_cni_projectcalico_org_podIPs=<span class=\"string\">\"172.16.182.200/32\"</span></span><br><span class=\"line\">__meta_kubernetes_pod_annotationpresent_cni_projectcalico_org_podIP=<span class=\"string\">\"true\"</span></span><br><span class=\"line\">__meta_kubernetes_pod_annotationpresent_cni_projectcalico_org_podIPs=<span class=\"string\">\"true\"</span></span><br><span class=\"line\">__meta_kubernetes_pod_container_name=<span class=\"string\">\"kube-state-metrics\"</span></span><br><span class=\"line\">__meta_kubernetes_pod_container_port_name=<span class=\"string\">\"telemetry\"</span></span><br><span class=\"line\">__meta_kubernetes_pod_container_port_number=<span class=\"string\">\"8081\"</span></span><br><span class=\"line\">__meta_kubernetes_pod_container_port_protocol=<span class=\"string\">\"TCP\"</span></span><br><span class=\"line\">__meta_kubernetes_pod_controller_kind=<span class=\"string\">\"ReplicaSet\"</span></span><br><span class=\"line\">__meta_kubernetes_pod_controller_name=<span class=\"string\">\"kube-state-metrics-6477678b78\"</span></span><br><span class=\"line\">__meta_kubernetes_pod_host_ip=<span class=\"string\">\"192.168.12.226\"</span></span><br><span class=\"line\">__meta_kubernetes_pod_ip=<span class=\"string\">\"172.16.182.200\"</span></span><br><span class=\"line\">__meta_kubernetes_pod_label_app_kubernetes_io_name=<span class=\"string\">\"kube-state-metrics\"</span></span><br><span class=\"line\">__meta_kubernetes_pod_label_app_kubernetes_io_version=<span class=\"string\">\"2.0.0\"</span></span><br><span class=\"line\">__meta_kubernetes_pod_label_pod_template_hash=<span class=\"string\">\"6477678b78\"</span></span><br><span class=\"line\">__meta_kubernetes_pod_labelpresent_app_kubernetes_io_name=<span class=\"string\">\"true\"</span></span><br><span class=\"line\">__meta_kubernetes_pod_labelpresent_app_kubernetes_io_version=<span class=\"string\">\"true\"</span></span><br><span class=\"line\">__meta_kubernetes_pod_labelpresent_pod_template_hash=<span class=\"string\">\"true\"</span></span><br><span class=\"line\">__meta_kubernetes_pod_name=<span class=\"string\">\"kube-state-metrics-6477678b78-6qkjg\"</span></span><br><span class=\"line\">__meta_kubernetes_pod_node_name=<span class=\"string\">\"weiyigeek-226\"</span></span><br><span class=\"line\">__meta_kubernetes_pod_phase=<span class=\"string\">\"Running\"</span></span><br><span class=\"line\">__meta_kubernetes_pod_ready=<span class=\"string\">\"true\"</span></span><br><span class=\"line\">__meta_kubernetes_pod_uid=<span class=\"string\">\"70037554-7c4c-4372-9128-e9689b7cff10\"</span></span><br><span class=\"line\">__meta_kubernetes_service_annotation_kubectl_kubernetes_io_last_applied_configuration=<span class=\"string\">\"&#123;\"</span>apiVersion<span class=\"string\">\":\"</span>v1<span class=\"string\">\",\"</span>kind<span class=\"string\">\":\"</span>Service<span class=\"string\">\",\"</span>metadata<span class=\"string\">\":&#123;\"</span>annotations<span class=\"string\">\":&#123;\"</span>prometheus.io/scrape<span class=\"string\">\":\"</span><span class=\"literal\">true</span><span class=\"string\">\"&#125;,\"</span>labels<span class=\"string\">\":&#123;\"</span>app.kubernetes.io/name<span class=\"string\">\":\"</span>kube-state-metrics<span class=\"string\">\",\"</span>app.kubernetes.io/version<span class=\"string\">\":\"</span>2.0.0<span class=\"string\">\"&#125;,\"</span>name<span class=\"string\">\":\"</span>kube-state-metrics<span class=\"string\">\",\"</span>namespace<span class=\"string\">\":\"</span>monitor<span class=\"string\">\"&#125;,\"</span>spec<span class=\"string\">\":&#123;\"</span>clusterIP<span class=\"string\">\":\"</span>None<span class=\"string\">\",\"</span>ports<span class=\"string\">\":[&#123;\"</span>name<span class=\"string\">\":\"</span>http-metrics<span class=\"string\">\",\"</span>port<span class=\"string\">\":8080,\"</span>targetPort<span class=\"string\">\":\"</span>http-metrics<span class=\"string\">\"&#125;,&#123;\"</span>name<span class=\"string\">\":\"</span>telemetry<span class=\"string\">\",\"</span>port<span class=\"string\">\":8081,\"</span>targetPort<span class=\"string\">\":\"</span>telemetry<span class=\"string\">\"&#125;],\"</span>selector<span class=\"string\">\":&#123;\"</span>app.kubernetes.io/name<span class=\"string\">\":\"</span>kube-state-metrics<span class=\"string\">\"&#125;&#125;&#125; \"</span></span><br><span class=\"line\">__meta_kubernetes_service_annotation_prometheus_io_scrape=<span class=\"string\">\"true\"</span></span><br><span class=\"line\">__meta_kubernetes_service_annotationpresent_kubectl_kubernetes_io_last_applied_configuration=<span class=\"string\">\"true\"</span></span><br><span class=\"line\">__meta_kubernetes_service_annotationpresent_prometheus_io_scrape=<span class=\"string\">\"true\"</span></span><br><span class=\"line\">__meta_kubernetes_service_label_app_kubernetes_io_name=<span class=\"string\">\"kube-state-metrics\"</span></span><br><span class=\"line\">__meta_kubernetes_service_label_app_kubernetes_io_version=<span class=\"string\">\"2.0.0\"</span></span><br><span class=\"line\">__meta_kubernetes_service_labelpresent_app_kubernetes_io_name=<span class=\"string\">\"true\"</span></span><br><span class=\"line\">__meta_kubernetes_service_labelpresent_app_kubernetes_io_version=<span class=\"string\">\"true\"</span></span><br><span class=\"line\">__meta_kubernetes_service_name=<span class=\"string\">\"kube-state-metrics\"</span></span><br><span class=\"line\">__metrics_path__=<span class=\"string\">\"/metrics\"</span></span><br><span class=\"line\">__scheme__=<span class=\"string\">\"https\"</span></span><br><span class=\"line\">job=<span class=\"string\">\"k8s-endpoint-discover\"</span></span><br><span class=\"line\"><span class=\"comment\"># Target Labels</span></span><br><span class=\"line\">app_kubernetes_io_name=<span class=\"string\">\"kube-state-metrics\"</span></span><br><span class=\"line\">app_kubernetes_io_version=<span class=\"string\">\"2.0.0\"</span></span><br><span class=\"line\">instance=<span class=\"string\">\"172.16.182.200:8081\"</span></span><br><span class=\"line\">job=<span class=\"string\">\"k8s-endpoint-discover\"</span></span><br><span class=\"line\">kubernetes_namespace=<span class=\"string\">\"monitor\"</span></span><br><span class=\"line\">service_name=<span class=\"string\">\"kube-state-metrics\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># PromQL 表达式</span></span><br><span class=\"line\">up&#123;job=<span class=\"string\">\"k8s-endpoint-discover\"</span>&#125; or go_info&#123;job=<span class=\"string\">\"k8s-endpoint-discover\"</span>&#125;</span><br><span class=\"line\">  <span class=\"comment\"># up&#123;app_kubernetes_io_name=\"kube-state-metrics\", app_kubernetes_io_version=\"2.0.0\", instance=\"172.16.182.199:8080\", job=\"k8s-endpoint-discover\", kubernetes_namespace=\"monitor\", service_name=\"kube-state-metrics\"&#125; 1</span></span><br><span class=\"line\">  <span class=\"comment\"># up&#123;app_kubernetes_io_name=\"kube-state-metrics\", app_kubernetes_io_version=\"2.0.0\", instance=\"172.16.182.199:8081\", job=\"k8s-endpoint-discover\", kubernetes_namespace=\"monitor\", service_name=\"kube-state-metrics\"&#125; 1</span></span><br><span class=\"line\">  <span class=\"comment\"># go_info&#123;app_kubernetes_io_name=\"kube-state-metrics\", app_kubernetes_io_version=\"2.0.0\", instance=\"172.16.182.199:8081\", job=\"k8s-endpoint-discover\", kubernetes_namespace=\"monitor\", service_name=\"kube-state-metrics\", version=\"go1.16.3\"&#125; 1</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/5/20210514165746.png\" alt=\"WeiyiGeek.k8s-endpoint-discover\" title=\"\" class=\"\">\n                <p>WeiyiGeek.k8s-endpoint-discover</p>\n            </figure>\n<p><br/></p>\n<p><strong>补充说明: metrics-server 和 kube-state-metrics对比</strong></p>\n<table>\n<thead>\n<tr>\n<th>类别</th>\n<th>metrics-server</th>\n<th>kube-state-metrics</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>简单介绍</td>\n<td>Metrics Server通过Metrics API公开核心Kubernetes度量</td>\n<td>kube state metrics是关于从Kubernetes API对象生成度量而不需要修改,确保了kube状态度量提供的特性具有与kubernetesapi对象本身相同的稳定性。</td>\n</tr>\n<tr>\n<td>监控对象</td>\n<td>监控Node和Pod等CPU、内存、网络等系统指标</td>\n<td>关注Node,Deployment,Pod,Services,Namespace等内部对象的状态</td>\n</tr>\n<tr>\n<td>项目地址</td>\n<td><a href=\"https://github.com/kubernetes/kubernetes/tree/master/cluster/addons/metrics-server\" target=\"_blank\" rel=\"noopener\">https://github.com/kubernetes/kubernetes/tree/master/cluster/addons/metrics-server</a> (已丢失) <br> <a href=\"https://github.com/kubernetes-sigs/metrics-server/\" target=\"_blank\" rel=\"noopener\">https://github.com/kubernetes-sigs/metrics-server/</a> (建议)</td>\n<td><a href=\"https://github.com/kubernetes/kube-state-metrics\" target=\"_blank\" rel=\"noopener\">https://github.com/kubernetes/kube-state-metrics</a></td>\n</tr>\n<tr>\n<td>服务端口</td>\n<td>443</td>\n<td>8080</td>\n</tr>\n</tbody>\n</table>\n<p>示例: kube-state-metrics 收集到的节点信息, 如验证指标是否采集成功请求kube-state-metrics的pod ip+8080端口出现以下页面则正常<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kube_node_info&#123;job=<span class=\"string\">\"k8s-endpoint-discover\"</span>&#125;</span><br><span class=\"line\"><span class=\"comment\"># kube_node_info&#123;app_kubernetes_io_name=\"kube-state-metrics\", app_kubernetes_io_version=\"2.0.0\", container_runtime_version=\"docker://19.3.15\", instance=\"172.16.182.200:8080\", internal_ip=\"192.168.12.226\", job=\"k8s-endpoint-discover\", kernel_version=\"5.4.0-73-generic\", kubelet_version=\"v1.19.10\", kubeproxy_version=\"v1.19.10\", kubernetes_namespace=\"monitor\", node=\"weiyigeek-226\", os_image=\"Ubuntu 20.04.2 LTS\", pod_cidr=\"172.16.0.0/24\", service_name=\"kube-state-metrics\"&#125;</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://img-blog.csdnimg.cn/20210121114537533.png\" alt=\"kube-state-metrics\" title=\"\" class=\"\">\n                <p>kube-state-metrics</p>\n            </figure>\n<p><br/></p>\n<h4 id=\"2-Node-之服务自动发现\"><a href=\"#2-Node-之服务自动发现\" class=\"headerlink\" title=\"2.Node 之服务自动发现\"></a>2.Node 之服务自动发现</h4><p>描述: 通过<code>node-exporter</code>采集集群node节点的服务器层面的数据，如cpu、内存、磁盘、网络流量等,当然node-exporter可以独立部署在node节点服务器上但是每次都要进行手动配置添加监控是非常不方便。</p>\n<p><strong>流程步骤:</strong></p>\n<ul>\n<li><p>Step 1.此处将<code>node-exporter</code>以DaemonSet形式部署，配合Prometheus动态发现更加方便。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tee node-exporter.yaml &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">kind: DaemonSet</span><br><span class=\"line\">apiVersion: apps/v1</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: node-exporter</span><br><span class=\"line\">  namespace: monitor</span><br><span class=\"line\">  annotations:</span><br><span class=\"line\">    prometheus.io/scrape: <span class=\"string\">'true'</span></span><br><span class=\"line\">spec:</span><br><span class=\"line\">  selector:</span><br><span class=\"line\">    matchLabels:</span><br><span class=\"line\">      app: node-exporter</span><br><span class=\"line\">  template:</span><br><span class=\"line\">    metadata:</span><br><span class=\"line\">      labels:</span><br><span class=\"line\">        app: node-exporter</span><br><span class=\"line\">      name: node-exporter</span><br><span class=\"line\">    spec:</span><br><span class=\"line\">      containers:</span><br><span class=\"line\">      - image: prom/node-exporter:v1.1.2</span><br><span class=\"line\">        name: node-exporter</span><br><span class=\"line\">        ports:</span><br><span class=\"line\">        - containerPort: 9100</span><br><span class=\"line\">          hostPort: 9100</span><br><span class=\"line\">          name: node-exporter</span><br><span class=\"line\">      hostNetwork: <span class=\"literal\">true</span></span><br><span class=\"line\">      hostPID: <span class=\"literal\">true</span></span><br><span class=\"line\">      tolerations:</span><br><span class=\"line\">      - key: <span class=\"string\">\"node-role.kubernetes.io/master\"</span></span><br><span class=\"line\">        operator: <span class=\"string\">\"Exists\"</span></span><br><span class=\"line\">        effect: <span class=\"string\">\"NoSchedule\"</span></span><br><span class=\"line\">---</span><br><span class=\"line\">kind: Service</span><br><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: node-exporter</span><br><span class=\"line\">  namespace: monitor</span><br><span class=\"line\">  labels:</span><br><span class=\"line\">    app: node-exporter</span><br><span class=\"line\">  annotations:</span><br><span class=\"line\">    prometheus.io/scrape: <span class=\"string\">'true'</span></span><br><span class=\"line\">spec:</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: ClusterIP</span><br><span class=\"line\">  clusterIP: None</span><br><span class=\"line\">  ports:</span><br><span class=\"line\">  - name: node-exporter</span><br><span class=\"line\">    port: 9100</span><br><span class=\"line\">    protocol: TCP</span><br><span class=\"line\">  selector:</span><br><span class=\"line\">    app: node-exporter</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">~$ kubectl apply -f node-exporter.yaml</span><br><span class=\"line\">  <span class=\"comment\"># daemonset.apps/node-exporter created</span></span><br><span class=\"line\"></span><br><span class=\"line\">~$ kubectl get pod -n monitor</span><br><span class=\"line\">  <span class=\"comment\"># NAME                  READY   STATUS    RESTARTS   AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># node-exporter-p5tbp   1/1     Running   0          20s</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 2.创建SA账户并对其进行RBAC权限设置(最小权限原则)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl create sa prometheus -n monitor</span><br><span class=\"line\">  <span class=\"comment\"># serviceaccount/prometheus created</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 集群角色 RBAC 权限申明</span></span><br><span class=\"line\">tee prometheus-clusterRole.yaml &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class=\"line\">kind: ClusterRole</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: prometheus</span><br><span class=\"line\">  namespace: monitor</span><br><span class=\"line\">rules:</span><br><span class=\"line\">- apiGroups:</span><br><span class=\"line\">  - <span class=\"string\">\"\"</span></span><br><span class=\"line\">  resources:</span><br><span class=\"line\">  - nodes</span><br><span class=\"line\">  - services</span><br><span class=\"line\">  - endpoints</span><br><span class=\"line\">  - pods</span><br><span class=\"line\">  - nodes/proxy</span><br><span class=\"line\">  verbs:</span><br><span class=\"line\">  - get</span><br><span class=\"line\">  - list</span><br><span class=\"line\">  - watch</span><br><span class=\"line\">- apiGroups:</span><br><span class=\"line\">  - <span class=\"string\">\"extensions\"</span></span><br><span class=\"line\">  resources:</span><br><span class=\"line\">    - ingresses</span><br><span class=\"line\">  verbs:</span><br><span class=\"line\">  - get</span><br><span class=\"line\">  - list</span><br><span class=\"line\">  - watch</span><br><span class=\"line\">- apiGroups:</span><br><span class=\"line\">  - <span class=\"string\">\"\"</span></span><br><span class=\"line\">  resources:</span><br><span class=\"line\">  - configmaps</span><br><span class=\"line\">  - nodes/metrics</span><br><span class=\"line\">  verbs:</span><br><span class=\"line\">  - get</span><br><span class=\"line\">- nonResourceURLs:</span><br><span class=\"line\">  - /metrics</span><br><span class=\"line\">  verbs:</span><br><span class=\"line\">  - get</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 集群角色权限</span></span><br><span class=\"line\">$ kubectl create -f prometheus-clusterRole.yaml</span><br><span class=\"line\"><span class=\"comment\"># clusterrole.rbac.authorization.k8s.io/prometheus created</span></span><br><span class=\"line\"><span class=\"comment\"># 集群角色绑定</span></span><br><span class=\"line\">$ kubectl create clusterrolebinding prometheus --clusterrole prometheus --serviceaccount=monitor:prometheus</span><br><span class=\"line\"><span class=\"comment\"># 或者一步搞定(此处是上面一步得yaml资源清单)</span></span><br><span class=\"line\"><span class=\"comment\"># apiVersion: rbac.authorization.k8s.io/v1beta1</span></span><br><span class=\"line\"><span class=\"comment\"># kind: ClusterRoleBinding</span></span><br><span class=\"line\"><span class=\"comment\"># metadata:</span></span><br><span class=\"line\"><span class=\"comment\">#   name: prometheus</span></span><br><span class=\"line\"><span class=\"comment\"># roleRef:</span></span><br><span class=\"line\"><span class=\"comment\">#   apiGroup: rbac.authorization.k8s.io</span></span><br><span class=\"line\"><span class=\"comment\">#   kind: ClusterRole</span></span><br><span class=\"line\"><span class=\"comment\">#   name: prometheus</span></span><br><span class=\"line\"><span class=\"comment\"># subjects:</span></span><br><span class=\"line\"><span class=\"comment\"># - kind: ServiceAccount</span></span><br><span class=\"line\"><span class=\"comment\">#   name: prometheus</span></span><br><span class=\"line\"><span class=\"comment\">#   namespace: monitor</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取认证的Token</span></span><br><span class=\"line\">kubectl get secret -n monitor $(kubectl get sa prometheus -n monitor -o yaml | tail -n 1 | cut -d <span class=\"string\">\" \"</span> -f 3) -o yaml | grep <span class=\"string\">\"token:\"</span> | head -n 1 | awk <span class=\"string\">'&#123;print $2&#125;'</span>| base64 -d &gt; k8s_prometheuser_token</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将k8s_prometheuser_token下载到prometheus服务器中</span></span><br><span class=\"line\">ansible weiyigeek-226 -m fetch -a <span class=\"string\">\"src=/home/weiyigeek/prometheus/k8s_prometheuser_token dest=/tmp\"</span></span><br><span class=\"line\"><span class=\"comment\"># weiyigeek-226 | CHANGED =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"comment\">#   \"changed\": true,</span></span><br><span class=\"line\"><span class=\"comment\">#   \"checksum\": \"d4a16cebda1b6037dcb68004d0ff4cdf4079bbc5\",</span></span><br><span class=\"line\"><span class=\"comment\">#   \"dest\": \"/tmp/weiyigeek-226/home/weiyigeek/prometheus/k8s_prometheuser_token\",</span></span><br><span class=\"line\"><span class=\"comment\">#   \"md5sum\": \"bdcd6c4a77ab6ee2afa5ac6f78ddb94a\",</span></span><br><span class=\"line\"><span class=\"comment\">#   \"remote_checksum\": \"d4a16cebda1b6037dcb68004d0ff4cdf4079bbc5\",</span></span><br><span class=\"line\"><span class=\"comment\">#   \"remote_md5sum\": null</span></span><br><span class=\"line\"><span class=\"comment\"># &#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br/></p>\n<ul>\n<li>Step 3.Prometheus.yaml 主配置文件添加<code>kubernetes_sd_configs对象</code>使用node级别自动发现;<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- job_name: <span class=\"string\">'k8s-nodes-discover'</span></span><br><span class=\"line\">  scheme: https</span><br><span class=\"line\">  <span class=\"comment\"># 使用apiserver授权部分解密的token值，以文件形式存储</span></span><br><span class=\"line\">  tls_config:</span><br><span class=\"line\">    <span class=\"comment\"># ca_file: /etc/prometheus/conf.d/auth/k8s_kube-state-metrics_ca.crt</span></span><br><span class=\"line\">    insecure_skip_verify: <span class=\"literal\">true</span></span><br><span class=\"line\">  bearer_token_file: /etc/prometheus/conf.d/auth/k8s_prometheuser_token</span><br><span class=\"line\">  <span class=\"comment\"># k8s自动发现具体配置</span></span><br><span class=\"line\">  kubernetes_sd_configs:</span><br><span class=\"line\">  <span class=\"comment\"># 使用node级别自动发现</span></span><br><span class=\"line\">  - role: node</span><br><span class=\"line\">    api_server: <span class=\"string\">'https://192.168.12.226:6443'</span></span><br><span class=\"line\">    tls_config:</span><br><span class=\"line\">      <span class=\"comment\"># ca_file: /etc/prometheus/conf.d/auth/k8s_kube-state-metrics_ca.crt</span></span><br><span class=\"line\">      insecure_skip_verify: <span class=\"literal\">true</span></span><br><span class=\"line\">    bearer_token_file: /etc/prometheus/conf.d/auth/k8s_prometheuser_token</span><br><span class=\"line\">  relabel_configs:</span><br><span class=\"line\">  <span class=\"comment\">#- source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]</span></span><br><span class=\"line\">    <span class=\"comment\"># 只保留指定匹配正则的标签，不匹配则删除</span></span><br><span class=\"line\">    <span class=\"comment\">#action: keep</span></span><br><span class=\"line\">    <span class=\"comment\">#regex: true</span></span><br><span class=\"line\">  - target_label: __address__</span><br><span class=\"line\">    <span class=\"comment\"># 使用replacement值替换__address__默认值</span></span><br><span class=\"line\">    replacement: 192.168.12.226:6443</span><br><span class=\"line\">  - source_labels: [__meta_kubernetes_node_name]</span><br><span class=\"line\">    regex: (.+)</span><br><span class=\"line\">    <span class=\"comment\"># 使用replacement值替换__metrics_path__默认值 , 如果采用默认的kubelet进行数据的采集</span></span><br><span class=\"line\">    target_label: __metrics_path__</span><br><span class=\"line\">    replacement: /api/v1/nodes/<span class=\"variable\">$&#123;1&#125;</span>:9100/proxy/metrics</span><br><span class=\"line\">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class=\"line\">    action: replace</span><br><span class=\"line\">    <span class=\"comment\"># 将标签__meta_kubernetes_service_name修改为service_name</span></span><br><span class=\"line\">    target_label: service_name</span><br><span class=\"line\">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class=\"line\">    action: replace</span><br><span class=\"line\">    <span class=\"comment\"># 将标签__meta_kubernetes_namespace修改为kubernetes_namespace</span></span><br><span class=\"line\">    target_label: kubernetes_namespace</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br></p>\n<p>Tips: 通过<code>relabel_configs</code>构造 prometheus (node) Role 访问 API Server 的 URL;</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">标签</th>\n<th style=\"text-align:left\">默认</th>\n<th style=\"text-align:left\">构造后</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>__scheme__</code></td>\n<td style=\"text-align:left\">https</td>\n<td style=\"text-align:left\">https</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>__address__</code></td>\n<td style=\"text-align:left\">192.168.3.217:10250</td>\n<td style=\"text-align:left\">192.168.3.217:6443</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>__metrics_path__</code> (node_exporter)</td>\n<td style=\"text-align:left\">/metrics</td>\n<td style=\"text-align:left\">/api/v1/nodes/uvmsvr-3-217:9100/proxy/metrics</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">URL</td>\n<td style=\"text-align:left\"><code>https://192.168.3.217:10250/metrics</code></td>\n<td style=\"text-align:left\"><code>https://192.168.3.217:6443/api/v1/nodes/uvmsvr-3-217:9100/proxy/metrics</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>__metrics_path__</code> (kubelet)</td>\n<td style=\"text-align:left\">/metrics</td>\n<td style=\"text-align:left\">/api/v1/nodes/uvmsvr-3-217:10250/proxy/metrics</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">URL</td>\n<td style=\"text-align:left\"><code>https://192.168.3.217:10250/metrics</code></td>\n<td style=\"text-align:left\"><code>https://192.168.3.217:6443/api/v1/nodes/uvmsvr-3-217:10250/proxy/metrics/cadvisor</code></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>__metrics_path__</code> (advisor)</td>\n<td style=\"text-align:left\">/metrics</td>\n<td style=\"text-align:left\">/api/v1/nodes/uvmsvr-3-217:10250/proxy/metrics</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">URL</td>\n<td style=\"text-align:left\"><code>https://192.168.3.217:10250/metrics</code></td>\n<td style=\"text-align:left\"><code>https://192.168.3.217:6443/api/v1/nodes/uvmsvr-3-217:10250/proxy/metrics/cadvisor</code></td>\n</tr>\n</tbody>\n</table>\n<p><br/></p>\n<ul>\n<li>Step 4.重启服务查看监控目标状态以及服务发现是否成功监控。<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 该Job的状态信息</span></span><br><span class=\"line\">k8s-nodes-discover (1/1 up)</span><br><span class=\"line\">Endpoint\tState\tLabels\tLast Scrape\tScrape Duration\tError</span><br><span class=\"line\">https://192.168.12.226:6443/api/v1/nodes/weiyigeek-226:9100/proxy/metrics\tUP instance=<span class=\"string\">\"weiyigeek-226\"</span>job=<span class=\"string\">\"k8s-nodes-discover\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) PromQL 表达式查询</span></span><br><span class=\"line\">up&#123;job=<span class=\"string\">\"k8s-nodes-discover\"</span>&#125; or go_info&#123;job=<span class=\"string\">\"k8s-nodes-discover\"</span>&#125;</span><br><span class=\"line\"><span class=\"comment\"># up&#123;instance=\"weiyigeek-226\", job=\"k8s-nodes-discover\"&#125;\t1</span></span><br><span class=\"line\"><span class=\"comment\"># go_info&#123;instance=\"weiyigeek-226\", job=\"k8s-nodes-discover\", version=\"go1.15.8\"&#125; 1</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/5/20210514165418.png\" alt=\"WeiyiGeek.k8s-nodes-discover-9100\" title=\"\" class=\"\">\n                <p>WeiyiGeek.k8s-nodes-discover-9100</p>\n            </figure>\n<p><br/></p>\n<ul>\n<li>Step 5.此时我们可以将<code>__metrics_path__</code>替换成<code>/api/v1/nodes/${1}:10250/proxy/metrics</code>,如此便采用了kubelet采集拉取监控指标。</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/5/20210514184144.png\" alt=\"WeiyiGeek.k8s-nodes-discover-10250\" title=\"\" class=\"\">\n                <p>WeiyiGeek.k8s-nodes-discover-10250</p>\n            </figure>\n<p><br></p>\n<h4 id=\"3-综合实践之-cAdvisor-Kube-state-metrics-Grafana-组合拳方案\"><a href=\"#3-综合实践之-cAdvisor-Kube-state-metrics-Grafana-组合拳方案\" class=\"headerlink\" title=\"3.综合实践之(cAdvisor+Kube-state-metrics+Grafana)组合拳方案\"></a>3.综合实践之(cAdvisor+Kube-state-metrics+Grafana)组合拳方案</h4><p>描述: Grafana从prometheus数据源读取监控指标并进行图形化,根据其官网提供的众多模板,我们可以针对不同维度的监控指标，我们可以自行选择喜欢的模板直接导入<code>Dashboard id</code>使用。</p>\n<p>例如:以下针对于不同场景采用的不同的Dashboard面板:</p>\n<ul>\n<li>1.Node 性能监控展示<ul>\n<li><a href=\"https://grafana.com/grafana/dashboards/8919\" target=\"_blank\" rel=\"noopener\">https://grafana.com/grafana/dashboards/8919</a></li>\n<li><a href=\"https://grafana.com/grafana/dashboards/9276\" target=\"_blank\" rel=\"noopener\">https://grafana.com/grafana/dashboards/9276</a></li>\n</ul>\n</li>\n<li>2.pod 性能监控展示<ul>\n<li><a href=\"https://grafana.com/grafana/dashboards/8588\" target=\"_blank\" rel=\"noopener\">https://grafana.com/grafana/dashboards/8588</a></li>\n</ul>\n</li>\n<li>3.K8S 资源性能监控展示(kubernetes资源全面展示！包含K8S整体资源总览、微服务资源明细、Pod资源明细及K8S网络带宽，优化重要指标展示。)<ul>\n<li><a href=\"https://grafana.com/grafana/dashboards/13105\" target=\"_blank\" rel=\"noopener\">https://grafana.com/grafana/dashboards/13105</a></li>\n</ul>\n</li>\n</ul>\n<p><br/></p>\n<p><strong>实践目标:</strong> 使用cadvisor采集Pod容器相关信息+使用kube-state-metrics采集集群相关信息+使用Grafana将Prometheus采集到的数据进行展示。</p>\n<p><strong>流程步骤:</strong></p>\n<ul>\n<li><p>Step 1.在前面的基础环境之上修改的 <code>Prometheus.yaml</code> 主配置文件内容如下:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">tee</span> <span class=\"string\">prometheus.yaml</span> <span class=\"string\">&lt;&lt;'EOF'</span></span><br><span class=\"line\"><span class=\"attr\">global:</span></span><br><span class=\"line\"><span class=\"attr\">  scrape_interval:</span> <span class=\"number\">2</span><span class=\"string\">m</span></span><br><span class=\"line\"><span class=\"attr\">  scrape_timeout:</span> <span class=\"number\">10</span><span class=\"string\">s</span></span><br><span class=\"line\"><span class=\"attr\">  evaluation_interval:</span> <span class=\"number\">1</span><span class=\"string\">m</span></span><br><span class=\"line\"><span class=\"attr\">  external_labels:</span></span><br><span class=\"line\"><span class=\"attr\">    monitor:</span> <span class=\"string\">'prom-demo'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">alerting:</span></span><br><span class=\"line\"><span class=\"attr\">  alertmanagers:</span></span><br><span class=\"line\"><span class=\"attr\">  - scheme:</span> <span class=\"string\">http</span></span><br><span class=\"line\"><span class=\"attr\">    static_configs:</span></span><br><span class=\"line\"><span class=\"attr\">    - targets:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">'192.168.12.107:30093'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">rule_files:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">/etc/prometheus/conf.d/rules/*.rules</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">scrape_configs:</span></span><br><span class=\"line\"><span class=\"attr\">  - job_name:</span> <span class=\"string\">'prom-Server'</span></span><br><span class=\"line\"><span class=\"attr\">    static_configs:</span></span><br><span class=\"line\"><span class=\"attr\">      - targets:</span> <span class=\"string\">['localhost:9090']</span></span><br><span class=\"line\"><span class=\"attr\">  - job_name:</span> <span class=\"string\">'cAdvisor'</span></span><br><span class=\"line\"><span class=\"attr\">    static_configs:</span></span><br><span class=\"line\"><span class=\"attr\">      - targets:</span> <span class=\"string\">['192.168.12.111:9100']</span></span><br><span class=\"line\"><span class=\"attr\">  - job_name:</span> <span class=\"string\">'linux_exporter'</span></span><br><span class=\"line\"><span class=\"attr\">    file_sd_configs:</span></span><br><span class=\"line\"><span class=\"attr\">    - files:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">/etc/prometheus/conf.d/discovery/k8s_nodes.yaml</span></span><br><span class=\"line\"><span class=\"attr\">      refresh_interval:</span> <span class=\"number\">1</span><span class=\"string\">m</span></span><br><span class=\"line\"><span class=\"attr\">  - job_name:</span> <span class=\"string\">'windows-exporter'</span></span><br><span class=\"line\"><span class=\"attr\">    file_sd_configs:</span></span><br><span class=\"line\"><span class=\"attr\">    - files:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">/etc/prometheus/conf.d/discovery/win_nodes.yaml</span></span><br><span class=\"line\"><span class=\"attr\">      refresh_interval:</span> <span class=\"number\">1</span><span class=\"string\">m</span></span><br><span class=\"line\"><span class=\"attr\">  - job_name:</span> <span class=\"string\">'mysql_discovery'</span></span><br><span class=\"line\"><span class=\"attr\">    file_sd_configs:</span></span><br><span class=\"line\"><span class=\"attr\">    - files:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">/etc/prometheus/conf.d/discovery/mysql_discovery.yaml</span></span><br><span class=\"line\"><span class=\"attr\">  - job_name:</span> <span class=\"string\">'redis_discovery'</span></span><br><span class=\"line\"><span class=\"attr\">    file_sd_configs:</span></span><br><span class=\"line\"><span class=\"attr\">    - files:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">/etc/prometheus/conf.d/discovery/redis_discovery.yaml</span></span><br><span class=\"line\"><span class=\"attr\">  - job_name:</span> <span class=\"string\">'k8s-endpoint-discover'</span></span><br><span class=\"line\"><span class=\"attr\">    scheme:</span> <span class=\"string\">https</span></span><br><span class=\"line\">    <span class=\"comment\">#使用apiserver授权部分解密的token值，以文件形式存储</span></span><br><span class=\"line\"><span class=\"attr\">    tls_config:</span> </span><br><span class=\"line\">      <span class=\"comment\">#ca_file: /etc/prometheus/conf.d/auth/k8s_kube-state-metrics_ca.crt</span></span><br><span class=\"line\"><span class=\"attr\">      insecure_skip_verify:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    bearer_token_file:</span> <span class=\"string\">/etc/prometheus/conf.d/auth/k8s_token</span></span><br><span class=\"line\">    <span class=\"comment\"># k8s自动发现具体配置</span></span><br><span class=\"line\"><span class=\"attr\">    kubernetes_sd_configs:</span></span><br><span class=\"line\">    <span class=\"comment\"># 使用endpoint级别自动发现</span></span><br><span class=\"line\"><span class=\"attr\">    - role:</span> <span class=\"string\">endpoints</span></span><br><span class=\"line\"><span class=\"attr\">      api_server:</span> <span class=\"string\">'https://192.168.12.226:6443'</span></span><br><span class=\"line\"><span class=\"attr\">      tls_config:</span></span><br><span class=\"line\">        <span class=\"comment\"># ca_file: /etc/prometheus/conf.d/auth/k8s_kube-state-metrics_ca.crt</span></span><br><span class=\"line\"><span class=\"attr\">        insecure_skip_verify:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">      bearer_token_file:</span> <span class=\"string\">/etc/prometheus/conf.d/auth/k8s_token</span></span><br><span class=\"line\"><span class=\"attr\">    relabel_configs:</span></span><br><span class=\"line\"><span class=\"attr\">    - source_labels:</span> <span class=\"string\">[__meta_kubernetes_service_name]</span></span><br><span class=\"line\">      <span class=\"comment\"># 只保留指定匹配正则的标签，不匹配则删除</span></span><br><span class=\"line\"><span class=\"attr\">      action:</span> <span class=\"string\">keep</span></span><br><span class=\"line\"><span class=\"attr\">      regex:</span> <span class=\"string\">'^(kube-state-metrics)$'</span></span><br><span class=\"line\"><span class=\"attr\">    - source_labels:</span> <span class=\"string\">[__meta_kubernetes_service_annotation_prometheus_io_scrape]</span></span><br><span class=\"line\">      <span class=\"comment\">#只保留指定匹配正则的标签，不匹配则删除</span></span><br><span class=\"line\"><span class=\"attr\">      action:</span> <span class=\"string\">keep</span></span><br><span class=\"line\"><span class=\"attr\">      regex:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    - source_labels:</span> <span class=\"string\">[__address__]</span></span><br><span class=\"line\"><span class=\"attr\">      action:</span> <span class=\"string\">replace</span></span><br><span class=\"line\"><span class=\"attr\">      target_label:</span> <span class=\"string\">instance</span></span><br><span class=\"line\"><span class=\"attr\">    - target_label:</span> <span class=\"string\">__address__</span></span><br><span class=\"line\">      <span class=\"comment\"># 使用replacement值替换__address__默认值</span></span><br><span class=\"line\"><span class=\"attr\">      replacement:</span> <span class=\"number\">192.168</span><span class=\"number\">.12</span><span class=\"number\">.226</span><span class=\"string\">:6443</span></span><br><span class=\"line\"><span class=\"attr\">    - source_labels:</span> <span class=\"string\">[__meta_kubernetes_namespace,</span> <span class=\"string\">__meta_kubernetes_pod_name,</span> <span class=\"string\">__meta_kubernetes_pod_container_port_number]</span></span><br><span class=\"line\">      <span class=\"comment\"># 正则匹配</span></span><br><span class=\"line\"><span class=\"attr\">      regex:</span> <span class=\"string\">([^;]+);([^;]+);([^;]+)</span></span><br><span class=\"line\">      <span class=\"comment\"># 使用replacement值替换__metrics_path__默认值</span></span><br><span class=\"line\"><span class=\"attr\">      target_label:</span> <span class=\"string\">__metrics_path__</span></span><br><span class=\"line\">      <span class=\"comment\"># 自行构建的apiserver proxy url</span></span><br><span class=\"line\"><span class=\"attr\">      replacement:</span> <span class=\"string\">/api/v1/namespaces/$&#123;1&#125;/pods/http:$&#123;2&#125;:$&#123;3&#125;/proxy/metrics</span></span><br><span class=\"line\"><span class=\"attr\">    - action:</span> <span class=\"string\">labelmap</span></span><br><span class=\"line\"><span class=\"attr\">      regex:</span> <span class=\"string\">__meta_kubernetes_service_label_(.+)</span></span><br><span class=\"line\"><span class=\"attr\">    - source_labels:</span> <span class=\"string\">[__meta_kubernetes_namespace]</span></span><br><span class=\"line\"><span class=\"attr\">      action:</span> <span class=\"string\">replace</span></span><br><span class=\"line\">      <span class=\"comment\"># 将标签__meta_kubernetes_namespace修改为kubernetes_namespace</span></span><br><span class=\"line\"><span class=\"attr\">      target_label:</span> <span class=\"string\">kubernetes_namespace</span></span><br><span class=\"line\"><span class=\"attr\">    - source_labels:</span> <span class=\"string\">[__meta_kubernetes_service_name]</span></span><br><span class=\"line\"><span class=\"attr\">      action:</span> <span class=\"string\">replace</span></span><br><span class=\"line\">      <span class=\"comment\"># 将标签__meta_kubernetes_service_name修改为service_name</span></span><br><span class=\"line\"><span class=\"attr\">      target_label:</span> <span class=\"string\">service_name</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"attr\">  - job_name:</span> <span class=\"string\">'k8s-cadvisor'</span></span><br><span class=\"line\"><span class=\"attr\">    scheme:</span> <span class=\"string\">https</span></span><br><span class=\"line\">    <span class=\"comment\"># 使用apiserver授权部分解密的token值，以文件形式存储</span></span><br><span class=\"line\"><span class=\"attr\">    tls_config:</span></span><br><span class=\"line\"><span class=\"attr\">      insecure_skip_verify:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    bearer_token_file:</span> <span class=\"string\">/etc/prometheus/conf.d/auth/k8s_token</span></span><br><span class=\"line\"><span class=\"attr\">    metrics_path:</span> <span class=\"string\">/metrics/cadvisor</span></span><br><span class=\"line\"><span class=\"attr\">    kubernetes_sd_configs:</span></span><br><span class=\"line\"><span class=\"attr\">    - role:</span> <span class=\"string\">node</span></span><br><span class=\"line\"><span class=\"attr\">      api_server:</span> <span class=\"string\">'https://192.168.12.226:6443'</span></span><br><span class=\"line\"><span class=\"attr\">      tls_config:</span></span><br><span class=\"line\"><span class=\"attr\">        insecure_skip_verify:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">      bearer_token_file:</span> <span class=\"string\">/etc/prometheus/conf.d/auth/k8s_token</span></span><br><span class=\"line\"><span class=\"attr\">    relabel_configs:</span></span><br><span class=\"line\"><span class=\"attr\">    - source_labels:</span> <span class=\"string\">[__address__]</span></span><br><span class=\"line\"><span class=\"attr\">      action:</span> <span class=\"string\">replace</span></span><br><span class=\"line\"><span class=\"attr\">      target_label:</span> <span class=\"string\">instance</span></span><br><span class=\"line\"><span class=\"attr\">    - target_label:</span> <span class=\"string\">__address__</span></span><br><span class=\"line\">      <span class=\"comment\"># 使用replacement值替换__address__默认值</span></span><br><span class=\"line\"><span class=\"attr\">      replacement:</span> <span class=\"number\">192.168</span><span class=\"number\">.12</span><span class=\"number\">.226</span><span class=\"string\">:6443</span></span><br><span class=\"line\"><span class=\"attr\">    - source_labels:</span> <span class=\"string\">[__meta_kubernetes_node_name]</span></span><br><span class=\"line\"><span class=\"attr\">      regex:</span> <span class=\"string\">(.+)</span></span><br><span class=\"line\">      <span class=\"comment\"># 使用replacement值替换__metrics_path__默认值 , 如果采用默认的kubelet进行数据的采集</span></span><br><span class=\"line\"><span class=\"attr\">      target_label:</span> <span class=\"string\">__metrics_path__</span></span><br><span class=\"line\"><span class=\"attr\">      replacement:</span> <span class=\"string\">/api/v1/nodes/$&#123;1&#125;:10250/proxy/metrics/cadvisor</span></span><br><span class=\"line\"><span class=\"attr\">    - action:</span> <span class=\"string\">labelmap</span></span><br><span class=\"line\"><span class=\"attr\">      regex:</span> <span class=\"string\">__meta_kubernetes_node_label_(.+)</span></span><br><span class=\"line\"><span class=\"attr\">    metric_relabel_configs:</span></span><br><span class=\"line\"><span class=\"attr\">    - source_labels:</span> <span class=\"string\">[instance]</span></span><br><span class=\"line\"><span class=\"attr\">      separator:</span> <span class=\"string\">;</span></span><br><span class=\"line\"><span class=\"attr\">      regex:</span> <span class=\"string\">(.+)</span></span><br><span class=\"line\"><span class=\"attr\">      target_label:</span> <span class=\"string\">node</span></span><br><span class=\"line\"><span class=\"attr\">      replacement:</span> <span class=\"string\">$1</span></span><br><span class=\"line\"><span class=\"attr\">      action:</span> <span class=\"string\">replace</span></span><br><span class=\"line\"><span class=\"attr\">    - source_labels:</span> <span class=\"string\">[pod_name]</span></span><br><span class=\"line\"><span class=\"attr\">      separator:</span> <span class=\"string\">;</span></span><br><span class=\"line\"><span class=\"attr\">      regex:</span> <span class=\"string\">(.+)</span></span><br><span class=\"line\"><span class=\"attr\">      target_label:</span> <span class=\"string\">pod</span></span><br><span class=\"line\"><span class=\"attr\">      replacement:</span> <span class=\"string\">$1</span></span><br><span class=\"line\"><span class=\"attr\">      action:</span> <span class=\"string\">replace</span></span><br><span class=\"line\"><span class=\"attr\">    - source_labels:</span> <span class=\"string\">[container_name]</span></span><br><span class=\"line\"><span class=\"attr\">      separator:</span> <span class=\"string\">;</span></span><br><span class=\"line\"><span class=\"attr\">      regex:</span> <span class=\"string\">(.+)</span></span><br><span class=\"line\"><span class=\"attr\">      target_label:</span> <span class=\"string\">container</span></span><br><span class=\"line\"><span class=\"attr\">      replacement:</span> <span class=\"string\">$1</span></span><br><span class=\"line\"><span class=\"attr\">      action:</span> <span class=\"string\">replace</span></span><br><span class=\"line\"><span class=\"attr\">    - source_labels:</span> <span class=\"string\">[origin_prometheus]</span></span><br><span class=\"line\"><span class=\"attr\">      separator:</span> <span class=\"string\">;</span></span><br><span class=\"line\"><span class=\"attr\">      regex:</span> <span class=\"string\">(.+)</span></span><br><span class=\"line\"><span class=\"attr\">      target_label:</span> <span class=\"string\">node</span></span><br><span class=\"line\"><span class=\"attr\">      replacement:</span> <span class=\"string\">$1</span></span><br><span class=\"line\"><span class=\"attr\">      action:</span> <span class=\"string\">replace</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 2.关键配置说明由于此处我们的Prometheus是在k8s集群外部署的所以需要重新构建<code>__metrics_path__</code>字符串以便代理访问。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># - k8s-cAdvisor</span></span><br><span class=\"line\">- source_labels: [__meta_kubernetes_node_name]</span><br><span class=\"line\">  regex: (.+)</span><br><span class=\"line\">  <span class=\"comment\"># 使用replacement值替换__metrics_path__默认值 , 如果采用默认的kubelet进行数据的采集</span></span><br><span class=\"line\">  target_label: __metrics_path__</span><br><span class=\"line\">  replacement: /api/v1/nodes/<span class=\"variable\">$&#123;1&#125;</span>:10250/proxy/metrics/cadvisor</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - kube-state-metrics</span></span><br><span class=\"line\">- source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name, __meta_kubernetes_pod_container_port_number]</span><br><span class=\"line\">  <span class=\"comment\"># 正则匹配</span></span><br><span class=\"line\">  regex: ([^;]+);([^;]+);([^;]+)</span><br><span class=\"line\">  <span class=\"comment\"># 使用replacement值替换__metrics_path__默认值</span></span><br><span class=\"line\">  target_label: __metrics_path__</span><br><span class=\"line\">  <span class=\"comment\"># 自行构建的apiserver proxy url</span></span><br><span class=\"line\">  replacement: /api/v1/namespaces/<span class=\"variable\">$&#123;1&#125;</span>/pods/http:<span class=\"variable\">$&#123;2&#125;</span>:<span class=\"variable\">$&#123;3&#125;</span>/proxy/metrics</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br/></p>\n<ul>\n<li>Step 3.重启我们的<code>Prometheus服务</code>并验证服务发现和目标。<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># - k8s-cadvisor (1/1 up) : https://192.168.12.226:6443/api/v1/nodes/weiyigeek-226:10250/proxy/metrics/cadvisor</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - k8s-endpoint-discover (2/2 up)</span></span><br><span class=\"line\"><span class=\"comment\"># https://192.168.12.226:6443/api/v1/namespaces/monitor/pods/http:kube-state-metrics-6477678b78-6qkjg:8080/proxy/metrics</span></span><br><span class=\"line\"><span class=\"comment\"># https://192.168.12.226:6443/api/v1/namespaces/monitor/pods/http:kube-state-metrics-6477678b78-6qkjg:8081/proxy/metrics</span></span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/5/20210514230434.png\" alt=\"WeiyiGeek.k8s-cadvisor\" title=\"\" class=\"\">\n                <p>WeiyiGeek.k8s-cadvisor</p>\n            </figure>\n</li>\n</ul>\n<p><br/></p>\n<ul>\n<li>Step 4.在Grafana中安装<code>Kubernetes for Prometheus Dashboard</code>(<a href=\"https://grafana.com/grafana/dashboards/13105),它提供包含K8S整体资源总览、微服务资源明细、Pod资源明细及K8S网络带宽，优化重要指标展示。\" target=\"_blank\" rel=\"noopener\">https://grafana.com/grafana/dashboards/13105),它提供包含K8S整体资源总览、微服务资源明细、Pod资源明细及K8S网络带宽，优化重要指标展示。</a></li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/5/20210515003322.png\" alt=\"WeiyiGeek.cadvisor+Dashboard\" title=\"\" class=\"\">\n                <p>WeiyiGeek.cadvisor+Dashboard</p>\n            </figure>\n<ul>\n<li>Step 5.至此完毕此项实践。</li>\n</ul>\n<p>Tips : 通过 Dashboard 模板我们需要自行选择并组合, 灵活有余但规范不足, 我们常常使用grafana专门针对Kubernetes集群监控的插件<code>grafana-kubernetes-app</code>它包括4个仪表板，集群，节点，Pod /容器和部署,但由于其插件作者没有更新维护,所以更多是采用<a href=\"https://github.com/devopsprodigy/kubegraf/\" target=\"_blank\" rel=\"noopener\">KubeGraf</a>,该插件可以用来可视化和分析 Kubernetes 集群的性能，通过各种图形直观的展示了 Kubernetes 集群的主要服务的指标和特征，还可以用于检查应用程序的生命周期和错误日志。</p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"monitor","path":"api/categories/monitor.json"},{"name":"kubernetes","path":"api/categories/kubernetes.json"},{"name":"OperationTools","path":"api/categories/OperationTools.json"}],"tags":[{"name":"Prometheus","path":"api/tags/Prometheus.json"}]}