{"title":"kubernetes脑图下载与学习笔记总结","slug":"虚拟云容/kubernetes脑图之学习笔记总结","date":"2020-12-12T09:37:47.000Z","updated":"2020-12-15T14:41:50.710Z","url":"2020/12-12-1000.html","path":"api/articles/2020/12-12-1000.html.json","covers":null,"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h2 id=\"Kubernetes-学习路径\"><a href=\"#Kubernetes-学习路径\" class=\"headerlink\" title=\"Kubernetes 学习路径\"></a>Kubernetes 学习路径</h2><h3 id=\"0x00-简要介绍\"><a href=\"#0x00-简要介绍\" class=\"headerlink\" title=\"0x00 简要介绍\"></a>0x00 简要介绍</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  简要介绍</span><br><span class=\"line\">  发展历史</span><br><span class=\"line\">    公有云类型说明</span><br><span class=\"line\">      基础设施及服务 (IaaS)</span><br><span class=\"line\">      平台及服务(PaaS)</span><br><span class=\"line\">      软件即服务(SaaS)</span><br><span class=\"line\">    部署时代变迁</span><br><span class=\"line\">      传统部署时代 (早期传统IT企业、单机部署、资源利用率较低)</span><br><span class=\"line\">      虚拟化部署时代 (近现代IT企业使用较多)</span><br><span class=\"line\">      容器化部署时代 (现代企业从传统企业向数据信息化建设转型)</span><br><span class=\"line\">    资源管理器对比</span><br><span class=\"line\">      Apache MESOS 分布式的资源管理框架 （早期）</span><br><span class=\"line\">      Docker Swarm Docker官方容器编排项目 (中期)</span><br><span class=\"line\">      Borg(博格)  Google的10年的容器化基础架构它是Kubernetes前身 (后期-现在)</span><br><span class=\"line\">  K8S 简要说明</span><br><span class=\"line\">    Kubernetes 介绍 </span><br><span class=\"line\">      定义</span><br><span class=\"line\">      含义</span><br><span class=\"line\">      完成工作 (快速部署、迁移、运行分布式的应用、扩缩容、故障迁移恢复)</span><br><span class=\"line\">      设计理念(微服务架构：一切以服务为中心，一切围绕服务运转)</span><br><span class=\"line\">    Kubernetes 特性</span><br><span class=\"line\">      Pod 容器、存储编排</span><br><span class=\"line\">      服务发现和负载均衡</span><br><span class=\"line\">      自动发布和回滚</span><br><span class=\"line\">      故障迁移</span><br><span class=\"line\">      密钥及配置管理</span><br><span class=\"line\">      安全角色权限绑定</span><br><span class=\"line\">    Kubernetes 不是什么</span><br><span class=\"line\">      不限制应用程序的类型：广泛支持不同类型的工作负载</span><br><span class=\"line\">      不部署源码、不编译或构建应用程序(只要镜像)</span><br><span class=\"line\">      不提供应用程序级服务</span><br><span class=\"line\">      不提供或者限定配置语言</span><br><span class=\"line\">      不提供或限定任何机器的配置、维护、管理或自愈的系统</span><br><span class=\"line\">      不限定日志、监控、报警的解决方案</span><br><span class=\"line\">    Kubernetes 优缺点</span><br><span class=\"line\">      优点</span><br><span class=\"line\">      缺点</span><br><span class=\"line\">    Kubernetes 版本号</span><br><span class=\"line\">      一般 Kubernetes 项目会维护最近的三个小版本分支</span><br><span class=\"line\">  系统架构</span><br><span class=\"line\">    Borg 结构说明</span><br><span class=\"line\">      BorgMaster : 各组件的请求访问入口</span><br><span class=\"line\">      Borglet : 工作节点实时与Paxos联系</span><br><span class=\"line\">      Persistent Store :  Paxos 它是Google的一个键值对数据库</span><br><span class=\"line\">      Scheduler :  调度器将任务调度的数据写入Persistent Store(Paxos)</span><br><span class=\"line\">      Borgcfg(Config File), Command-line Tools, Web Browsers ： 提供三种访问方式;</span><br><span class=\"line\">    K8S 结构说明</span><br><span class=\"line\">      Kubernetes Master - 主节点</span><br><span class=\"line\">        Kube-APIServer : 各组件的请求访问入口</span><br><span class=\"line\">        Controller Manager ：资源对象的控制器管理中心</span><br><span class=\"line\">        Kube-Shecduler : 任务调度选择合适的节点进行分配任务</span><br><span class=\"line\">        ETCD : 一致性的、可信赖的(自身支持集群化)的分布式(扩容缩方便)键值对存储服务数据库</span><br><span class=\"line\">      Kubernetes Nodes - 工作节点</span><br><span class=\"line\">        Kubelet ：通过CRI与容器引擎通信实现容器的声明周期管理，同时与Master节点密切协作，实现集群管理的基本功能；</span><br><span class=\"line\">        Kube-Proxy ：实现SVC负责写入规则至 IPtables、IPVS 实现服务映射访问以及负载均衡</span><br><span class=\"line\">      Cloud ：共有云、私有云 （访问它的组件是Cloud-Controller-Manager）</span><br><span class=\"line\">      常用插件</span><br><span class=\"line\">        CoreDNS ：它为 Kubernetes 服务提供 DNS 记录 便于集群中的SVC创建一个域名IP的对应关系解析；</span><br><span class=\"line\">        Metrics Server  ：集群各项性能指标采集</span><br><span class=\"line\">        Prometheus : 提供K8S集群的监控与预警</span><br><span class=\"line\">        ELK / EFK ：提供 K8S 集群日志统一分析接入平台并可以以图表的形式展现数据</span><br><span class=\"line\">        Federation ：提供一个可以跨集群中心多K8S统一管理功能</span><br><span class=\"line\">        Ingress Controller ：提供一个实现七层代理的前端代理，例如Ingress-Nginx 、 Ingress-traefik;</span><br><span class=\"line\">        Dashboard ：提供了 Web UI 方式访问 k8s 集群，并能管理在集群中运行的应用程序</span><br><span class=\"line\">      ETCD Storage 扩充 说明</span><br><span class=\"line\">        版本 （V3 、V2）</span><br><span class=\"line\">        组件</span><br><span class=\"line\">          HTTP SERVER : 与K8S一样也是采用HTTP协议进行服务请求提交入口</span><br><span class=\"line\">          Raft : 实时读写的信息</span><br><span class=\"line\">          WAL : 预写日志</span><br><span class=\"line\">          Entry : 实体信息</span><br><span class=\"line\">          Snapshot : 快照信息(按照一定的时间将某个时间节点的大版本与其后的增量子版本进行整合备份便于后期数据恢复)</span><br><span class=\"line\">          Store : 将数据存入到本地存储中进行数据的持久化</span><br><span class=\"line\">      Docker Engine : 负责本机容器创建和管理工作</span><br><span class=\"line\">基础概念</span><br><span class=\"line\">  节点</span><br><span class=\"line\">    Master ： 集群的控制节点负责整个集群的管理和控制；</span><br><span class=\"line\">    Node ：集群的工作(负载)节点负责完成Master分配的工作负载；</span><br><span class=\"line\">  Pod </span><br><span class=\"line\">    简单介绍</span><br><span class=\"line\">      定义：Pod 是可以在 Kubernetes 中创建和管理的、最小的可部署的计算单元;</span><br><span class=\"line\">      特征：通常运行在Node节点，它类似用于特定应用的逻辑主机其中可包含一个或多个容器, 注意内部服务端口不能重叠；</span><br><span class=\"line\">      实现：每个Pod都有一个特殊的被称为根容器的Pause容器；</span><br><span class=\"line\">    简单分类</span><br><span class=\"line\">      自主式 Pod : 被Delete后将不会被重新构建</span><br><span class=\"line\">      管理器管理 Pod ：被Delete后将会根据期望值数量进行重新构建;</span><br><span class=\"line\">        ReplicationController : 简称 RC，确保容器应用的副本数始终保持在用户定义的副本数(`期望值`)</span><br><span class=\"line\">        ReplicaSet : 简称 RS，它与RC没有本质上的不同由于其支持标签（Labels）所以在新的K8S版本建议使用它；</span><br><span class=\"line\">        Deployment ：它为Pod和ReplicaSet提供了一个声明式的定义(Declaratice)；</span><br><span class=\"line\">        StatefullSet：为了`解决有状态服务的问题`(前面所说的`Deployments与ReplicaSets是为了无状态服务而设计`)</span><br><span class=\"line\">        DaemonSet : 确保在全部或者一部分Node节点上运行一个Pod的副本</span><br><span class=\"line\">        Job ：负责批处理任务即仅执行一次的任务，它保证批处理任务的在一个或者多个Pod成功结束</span><br><span class=\"line\">        Cronjob ：管理基于时间的Job即在给定的时间点只运行一次，周期性地在给定时间点运行</span><br><span class=\"line\">        HPA ：水平自动扩容缩根据定义的阈值进行自定的操作</span><br><span class=\"line\">    Pod 周边对象</span><br><span class=\"line\">      Pause容器、业务容器</span><br><span class=\"line\">      EndPoint : Pod IP + Container Port</span><br><span class=\"line\">      Volume : 存储卷</span><br><span class=\"line\">      Event ：事件发生记录</span><br><span class=\"line\">    Pod 资源配额</span><br><span class=\"line\">      每个Pod都可以对其能使用的服务器上的计算机资源比如CPU和Memory进行设置限额，其值都为绝对值</span><br><span class=\"line\">      CPU常以千分之一的CPU配额作为最小的单元通常用`m`表示，而Memory配额单位是内存字节数通常用`Mi`表示；</span><br><span class=\"line\">    Pod 异常处理调度机制</span><br><span class=\"line\">      当Pod里的某个容器停止工作时 ，动检测到该问题将会重新启动该Pod(即重启Pod里的所有容器);</span><br><span class=\"line\">      工作节点宕机的情况下，则会将该Node上的所有Pod重新调度到其它节点之上。</span><br><span class=\"line\">    服务发现</span><br><span class=\"line\">    Pod 协同</span><br><span class=\"line\">  网络通讯模式</span><br><span class=\"line\">    网络通讯模式说明</span><br><span class=\"line\">    组件通讯模式说明</span><br></pre></td></tr></table></figure>\n<p>本章Xmind脑图下载(持续更新)：<a href=\"https://github.com/WeiyiGeek/SecOpsDev/tree/master/Help-MindMap/Kubernetes\" target=\"_blank\" rel=\"noopener\">点击下载</a></p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"kubernetes","path":"api/categories/kubernetes.json"},{"name":"Containers","path":"api/categories/Containers.json"},{"name":"OperationTools","path":"api/categories/OperationTools.json"}],"tags":[{"name":"k8s","path":"api/tags/k8s.json"}]}