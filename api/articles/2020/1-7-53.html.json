{"title":"MySQL基础SQL编程学习2","slug":"数据存储/SQL/基础SQL编程学习2","date":"2020-01-07T13:34:33.000Z","updated":"2022-03-29T05:39:06.310Z","url":"2020/1-7-53.html","path":"api/articles/2020/1-7-53.html.json","covers":["https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200107161240.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200108213948.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200108221324.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200108214630.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200107115530.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200107153921.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200109095917.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200109120125.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200109142553.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200109151609.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h4 id=\"0x00-SQL-高级语句\"><a href=\"#0x00-SQL-高级语句\" class=\"headerlink\" title=\"0x00 SQL 高级语句\"></a>0x00 SQL 高级语句</h4><p>描述:主要学习数据库的DDL数据库定义语言，比如CREATE , DROP, ALTER 等等:</p>\n<hr>\n\n<h5 id=\"CREATE-语句\"><a href=\"#CREATE-语句\" class=\"headerlink\" title=\"CREATE 语句\"></a>CREATE 语句</h5><p>描述:CREATE 语句用于创建数据库和数据表；</p>\n<ul>\n<li>DATABASE 库</li>\n<li>TABLE 表</li>\n<li>INDEX 索引</li>\n<li>VIEW 视图</li>\n</ul>\n<p><strong>CREATE DATABASE|TABLE 语句</strong><br>基础语法:<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 创建数据库</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">DATABASE</span> dbname;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 创建数据库中的表(注意以逗号分隔)</span></span><br><span class=\"line\"><span class=\"comment\">-- # column_name 参数规定表中列的名称。</span></span><br><span class=\"line\"><span class=\"comment\">-- # data_type 参数规定列的数据类型（例如 varchar、integer、decimal、date 等等）。</span></span><br><span class=\"line\"><span class=\"comment\">-- # size 参数规定表中列的最大长度。</span></span><br><span class=\"line\"><span class=\"comment\">-- # Constraints 约束用于规定表中的数据规则。</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> table_name(</span><br><span class=\"line\">column_name1 data_type(<span class=\"keyword\">size</span>) constraint_name <span class=\"keyword\">COMMENT</span> <span class=\"string\">'字段描述'</span>,</span><br><span class=\"line\">column_name2 data_type(<span class=\"keyword\">size</span>) constraint_name <span class=\"keyword\">COMMENT</span> <span class=\"string\">'字段描述'</span>,</span><br><span class=\"line\">column_name3 data_type(<span class=\"keyword\">size</span>) constraint_name <span class=\"keyword\">COMMENT</span> <span class=\"string\">'字段描述'</span>,</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure></p>\n<p><em>约束（Constraints）条件:</em></p>\n<ul>\n<li><p>1.PRIMARY KEY(主键约束) : <code>NOT NULL 和 UNIQUE 的结合</code>;</p>\n<ul>\n<li>约束唯一标识数据库表中的每条记录<code>确保某列（或两个列多个列的结合）有唯一标识主键(键、值)且主键列不能包含 NULL 值</code>，有助于更容易更快速地找到表中的一个特定的记录。</li>\n</ul>\n</li>\n<li><p>2.NOT NULL : 指示某列<code>不能存储 NULL 值</code>;</p>\n<ul>\n<li>如果不向字段添加值就无法插入新记录或者更新记录，否则会报错;</li>\n</ul>\n</li>\n<li><p>3.UNIQUE : 保证某列的每行必须有<code>唯一的值</code>;</p>\n<ul>\n<li>在设置字段为UNIQUE 和 PRIMARY KEY 约束均为列或列集合提供了唯一性的保证，<code>每个表可以有多个UNIQUE 约束，但是每个表只能有一个 PRIMARY KEY 约束</code> 。</li>\n</ul>\n</li>\n<li><p>4.FOREIGN KEY:保证一个表中的数据匹配另一个表中的值的参照完整性（不让用户乱删、错改）。</p>\n<ul>\n<li>一个表中的 FOREIGN KEY 指向另一个表中的 UNIQUE KEY(唯一约束的键),FOREIGN KEY 约束用于预防破坏表之间连接的行为,<code>也能防止非法数据插入外键列</code>因为它必须是它指向的那个表中的值之一。</li>\n<li>级联(CASCADE): 所谓的级联删除，就是删除主键表的同时，外键表同时删除。</li>\n<li>非活动默认(NO ACTION)、(约束/限制)RESTRICT: 当取值为No Action或者Restrict时，则当在主键表中删除对应记录时，首先检查该记录是否有对应外键，如果有则不允许删除。（即外键表约束主键表）</li>\n<li>SET NULL:则当在主键表中删除对应记录时，首先检查该记录是否有对应外键，如果有则设置子表中该外键值为null（<code>一样是外键表约束主键表，不过这就要求该外键允许取null</code>）</li>\n</ul>\n</li>\n<li><p>5.CHECK:保证列中的值符合指定的条件。</p>\n<ul>\n<li>如果对单个列定义 CHECK 约束，那么该列只允许特定的值。</li>\n<li>如果对一个表定义 CHECK 约束，那么此约束会基于行中其他列的值在特定的列中对值进行限制。</li>\n</ul>\n</li>\n<li><p>6.DEFAULT:规定没有给列赋值时的默认值。</p>\n<ul>\n<li>如果没有规定其他的值，那么会将默认值添加到所有的新记录。</li>\n</ul>\n</li>\n<li><p>7.AUTO INCREMENT字段:会在新记录插入表中时生成一个唯一的数字。</p>\n<ul>\n<li>在每次插入新记录时自动地创建主键字段的值,注意Contraints字段必须是非空的;</li>\n</ul>\n</li>\n</ul>\n<p><br></p>\n<p>基础实例:<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- Constraints 约束实例 -- </span></span><br><span class=\"line\"><span class=\"comment\">-- (1) MySQL 约束 : NOT NULL / PRIMARY KEY</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Persons (</span><br><span class=\"line\">  <span class=\"keyword\">Id</span> <span class=\"built_in\">INTEGER</span>(<span class=\"number\">10</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> PRIMARY <span class=\"keyword\">KEY</span>,   <span class=\"comment\">-- 方式1：PRIMARY KEY约束(全部数据库)</span></span><br><span class=\"line\">  LastName <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">255</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  Age <span class=\"built_in\">int</span>,</span><br><span class=\"line\">  Birthday <span class=\"built_in\">DATE</span> <span class=\"keyword\">DEFAULT</span> <span class=\"string\">'1970-01-01'</span>,   <span class=\"comment\">-- 注意括号前无, （MySQL）</span></span><br><span class=\"line\">  PRIMARY <span class=\"keyword\">KEY</span> (<span class=\"keyword\">Id</span>)  <span class=\"comment\">-- 方式2：PRIMARY KEY约束</span></span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"comment\">-- MySQL / SQL Server / Oracle / MS Access (定义多个列的 PRIMARY KEY 约束)</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Persons (</span><br><span class=\"line\">  <span class=\"keyword\">Id</span> <span class=\"built_in\">int</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  LastName <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  FirstName <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>),</span><br><span class=\"line\">  Address <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>),</span><br><span class=\"line\">  City <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>),</span><br><span class=\"line\">  <span class=\"keyword\">CONSTRAINT</span> PersonID PRIMARY <span class=\"keyword\">KEY</span> (<span class=\"keyword\">Id</span>,LastName)</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- (2)SQL UNIQUE 约束</span></span><br><span class=\"line\"><span class=\"comment\">-- MySQL：</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Persons (</span><br><span class=\"line\">  <span class=\"keyword\">Id</span> <span class=\"built_in\">int</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  LastName <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  FirstName <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>),</span><br><span class=\"line\">  Address <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>),</span><br><span class=\"line\">  City <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>),</span><br><span class=\"line\">  <span class=\"keyword\">UNIQUE</span> (<span class=\"keyword\">Id</span>)</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"comment\">-- SQL Server / Oracle / MS Access：</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Persons (</span><br><span class=\"line\">  P_Id <span class=\"built_in\">int</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">UNIQUE</span>,  <span class=\"comment\">-- 关键点:多个数据库的异同</span></span><br><span class=\"line\">  LastName <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  FirstName <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>),</span><br><span class=\"line\">  Address <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>),</span><br><span class=\"line\">  City <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>)</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"comment\">-- 如需命名 UNIQUE 约束，并定义多个列的 UNIQUE 约束</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> UniqueDemo (</span><br><span class=\"line\">  <span class=\"keyword\">Id</span> <span class=\"built_in\">int</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  LastName <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  FirstName <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>),</span><br><span class=\"line\">  Address <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>),</span><br><span class=\"line\">  City <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>),</span><br><span class=\"line\">  <span class=\"keyword\">CONSTRAINT</span> PersonID <span class=\"keyword\">UNIQUE</span> (<span class=\"keyword\">Id</span>,LastName) <span class=\"comment\">-- 关键点:命名UNIQUE约束</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- (3) FOREIGN KEY 约束</span></span><br><span class=\"line\"><span class=\"comment\">-- \"Persons\" 表中的 \"P_Id\" 列是 \"Persons\" 表中的 PRIMARY KEY (主键表)</span></span><br><span class=\"line\"><span class=\"comment\">-- \"Orders\" 表中的 \"P_Id\" 列是 \"Orders\" 表中的 FOREIGN KEY (外键表)</span></span><br><span class=\"line\"><span class=\"comment\">-- MySQL：</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Orders (</span><br><span class=\"line\">  O_Id <span class=\"built_in\">int</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  OrderNo <span class=\"built_in\">int</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  P_Id <span class=\"built_in\">int</span>,</span><br><span class=\"line\">  PRIMARY <span class=\"keyword\">KEY</span> (O_Id),</span><br><span class=\"line\">  <span class=\"keyword\">FOREIGN</span> <span class=\"keyword\">KEY</span> (P_Id) <span class=\"keyword\">REFERENCES</span> Persons(<span class=\"keyword\">id</span>)  </span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"comment\">-- SQL Server / Oracle / MS Access：</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Orders (</span><br><span class=\"line\">  O_Id <span class=\"built_in\">int</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> PRIMARY <span class=\"keyword\">KEY</span>,</span><br><span class=\"line\">  OrderNo <span class=\"built_in\">int</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  P_Id <span class=\"built_in\">int</span> <span class=\"keyword\">FOREIGN</span> <span class=\"keyword\">KEY</span> <span class=\"keyword\">REFERENCES</span> Persons(<span class=\"keyword\">id</span>)</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"comment\">-- 命名 FOREIGN KEY 约束，并定义多个列的 FOREIGN KEY 约束 (全部数据库)</span></span><br><span class=\"line\"><span class=\"comment\">-- 注意\"Orders\" 表中的 \"P_Id\" 列指向 \"Persons\" 表中的 \"P_Id\" 列。</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Orders(</span><br><span class=\"line\">  O_Id <span class=\"built_in\">int</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  OrderNo <span class=\"built_in\">int</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  P_Id <span class=\"built_in\">int</span>,</span><br><span class=\"line\">  PRIMARY <span class=\"keyword\">KEY</span> (P_Id), <span class=\"comment\">-- 关键点</span></span><br><span class=\"line\">  <span class=\"keyword\">CONSTRAINT</span> PersonOrders <span class=\"keyword\">FOREIGN</span> <span class=\"keyword\">KEY</span> (P_Id)  <span class=\"comment\">-- 关键点</span></span><br><span class=\"line\">  <span class=\"keyword\">REFERENCES</span> Person (<span class=\"keyword\">id</span>)</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- (4) CHECK 约束 在 \"Persons\" 表创建时在 \"P_Id\" 列上创建 CHECK 约束。</span></span><br><span class=\"line\"><span class=\"comment\">-- CHECK 约束规定 \"P_Id\" 列必须只包含大于 0 的整数。</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Persons (</span><br><span class=\"line\">  P_Id <span class=\"built_in\">int</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  LastName <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  FirstName <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>),</span><br><span class=\"line\">  Address <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>),</span><br><span class=\"line\">  City <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>),</span><br><span class=\"line\">  <span class=\"keyword\">CHECK</span> (P_Id&gt;<span class=\"number\">0</span>)   <span class=\"comment\">-- 关键点</span></span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"comment\">-- SQL Server / Oracle / MS Access：</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Persons (</span><br><span class=\"line\">  P_Id <span class=\"built_in\">int</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">CHECK</span> (P_Id&gt;<span class=\"number\">0</span>),</span><br><span class=\"line\">  LastName <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  FirstName <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>),</span><br><span class=\"line\">  Address <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>),</span><br><span class=\"line\">  City <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>)</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"comment\">-- 命名 CHECK 约束，并定义多个列的 CHECK 约束</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> CheckDemo (</span><br><span class=\"line\">  P_Id <span class=\"built_in\">int</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  LastName <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  FirstName <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>),</span><br><span class=\"line\">  <span class=\"keyword\">CONSTRAINT</span> chk_Person <span class=\"keyword\">CHECK</span> (P_Id&gt;<span class=\"number\">0</span> <span class=\"keyword\">AND</span> FirstName=<span class=\"string\">'Sandnes'</span>)</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- (5) DEFAULT 约束</span></span><br><span class=\"line\"><span class=\"comment\">--  在 \"DefaultDemo\" 表创建时在 \"City\" 列上创建 DEFAULT 约束：</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> DefaultDemo (</span><br><span class=\"line\">  <span class=\"keyword\">Id</span> <span class=\"built_in\">int</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  City <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>) <span class=\"keyword\">DEFAULT</span> <span class=\"string\">'Sandnes'</span>,</span><br><span class=\"line\">  OrderDate <span class=\"built_in\">date</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">GETDATE</span>() <span class=\"comment\">-- 使用类似 GETDATE() 这样的函数，DEFAULT 约束也可以用于插入系统值</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200107161240.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p><br></p>\n<p><strong>CREATE INDEX 语句</strong><br>描述:CREATE INDEX 语句用于在表中创建索引, 在不读取整个表的情况下，索引使数据库应用程序可以<code>更快地查找数据</code>。</p>\n<p>基础语法:<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- SQL CREATE INDEX 语法</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">INDEX</span> index_name</span><br><span class=\"line\"><span class=\"keyword\">ON</span> table_name (column_name)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- CREATE UNIQUE INDEX 语法</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">UNIQUE</span> <span class=\"keyword\">INDEX</span> index_name</span><br><span class=\"line\"><span class=\"keyword\">ON</span> table_name (column_name)</span><br></pre></td></tr></table></figure></p>\n<p>基础实例:<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 在 \"Persons\" 表的 \"LastName\" 列上创建一个名为 \"PIndex\" 的索引：</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">INDEX</span> PIndex <span class=\"keyword\">ON</span> Persons (LastName);</span><br><span class=\"line\"><span class=\"comment\">-- 如果您希望索引不止一个列，您可以在括号中列出这些列的名称，用逗号隔开：</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">INDEX</span> PIndex <span class=\"keyword\">ON</span> Persons (LastName, FirstName);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 删除索引</span></span><br><span class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">create</span> <span class=\"keyword\">table</span> Orders; <span class=\"comment\">-- 查看创建Table表的语句</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Orders <span class=\"keyword\">DROP</span> <span class=\"keyword\">INDEX</span> PIndex;</span><br><span class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">create</span> <span class=\"keyword\">table</span> Orders;</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200108213948.png\" alt=\"WeiyiGeek.创建索引\" title=\"\" class=\"\">\n                <p>WeiyiGeek.创建索引</p>\n            </figure></p>\n<p><em>注意事项:</em></p>\n<ul>\n<li>注：用户无法看到索引，它们只能被用来加速搜索/查询。</li>\n<li>注：更新一个包含索引的表需要比更新一个没有索引的表花费更多的时间，这是由于索引本身也需要更新, 因此理想的做法是仅仅在常常被搜索的列（以及表）上面创建索引。</li>\n<li>注：在表上创建一个唯一的索引，不允许使用重复的值唯一的索引意味着两个行不能拥有相同的索引值。</li>\n<li>注：用于创建索引的语法在不同的数据库中不一样，因此检查您的数据库中创建索引的语法。 </li>\n</ul>\n<p><br></p>\n<p><strong>AUTO_INCREMENT字段</strong><br>描述:在表中创建一个 auto-increment 字段,每次插入新记录的时候，会自动递增其数值;<br>MySQL 使用 AUTO_INCREMENT 关键字来执行 auto-increment 任务，默认地它的开始值是 1，每条新记录递增 1。</p>\n<p>基础语法:<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 创建 AUTO INCREMENT 字段</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> SYNTAX (</span><br><span class=\"line\">  <span class=\"keyword\">ID</span> <span class=\"built_in\">int</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> AUTO_INCREMENT, <span class=\"comment\">-- MySQL</span></span><br><span class=\"line\">  <span class=\"keyword\">ID</span> <span class=\"built_in\">int</span> <span class=\"keyword\">IDENTITY</span>(<span class=\"number\">1</span>,<span class=\"number\">1</span>) PRIMARY <span class=\"keyword\">KEY</span>, <span class=\"comment\">-- SQL SERVER (表示以1开始递增为1)</span></span><br><span class=\"line\">  <span class=\"keyword\">ID</span> <span class=\"built_in\">Integer</span> PRIMARY <span class=\"keyword\">KEY</span> AUTOINCREMENT, <span class=\"comment\">-- Access (要规定 \"ID\" 列以 10 起始且递增 5，改为 AUTOINCREMENT(10,5)即可)</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- Oracle 的语法</span></span><br><span class=\"line\"><span class=\"comment\">-- 您必须通过 sequence 对象（该对象生成数字序列）创建 auto-increment 字段。</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">SEQUENCE</span> seq_person</span><br><span class=\"line\"><span class=\"keyword\">MINVALUE</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">START</span> <span class=\"keyword\">WITH</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">INCREMENT</span> <span class=\"keyword\">BY</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">CACHE</span> <span class=\"number\">10</span></span><br></pre></td></tr></table></figure></p>\n<p>基础实例:<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 把 \"Persons\" 表中的 \"ID\" 列定义为 auto-increment 主键字段</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Persons (</span><br><span class=\"line\">  <span class=\"keyword\">ID</span> <span class=\"built_in\">int</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> AUTO_INCREMENT,  <span class=\"comment\">-- 关键点</span></span><br><span class=\"line\">  LastName <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  PRIMARY <span class=\"keyword\">KEY</span> (<span class=\"keyword\">ID</span>)</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"comment\">-- 给存在的colume添加自增语法</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> student <span class=\"keyword\">CHANGE</span> <span class=\"keyword\">id</span> <span class=\"keyword\">id</span> <span class=\"built_in\">INT</span>( <span class=\"number\">11</span> ) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> AUTO_INCREMENT;</span><br><span class=\"line\"><span class=\"comment\">-- MySQL要让 AUTO_INCREMENT 序列以其他的值起始</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Persons AUTO_INCREMENT=<span class=\"number\">100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 自增ID实例SQL语句</span></span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> Persons;</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Persons (</span><br><span class=\"line\">  <span class=\"keyword\">ID</span> <span class=\"built_in\">int</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> AUTO_INCREMENT,  <span class=\"comment\">-- 关键点</span></span><br><span class=\"line\">  LastName <span class=\"built_in\">varchar</span>(<span class=\"number\">255</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  PRIMARY <span class=\"keyword\">KEY</span> (<span class=\"keyword\">ID</span>)</span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Persons AUTO_INCREMENT=<span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> Persons(LastName) <span class=\"keyword\">VALUES</span> (<span class=\"string\">'WeiyiGeek'</span>),(<span class=\"string\">'Admin'</span>);</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> Persons;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200108221324.png\" alt=\"WeiyiGeek.INCREMENT\" title=\"\" class=\"\">\n                <p>WeiyiGeek.INCREMENT</p>\n            </figure>\n<p><br></p>\n<h5 id=\"ALTER-语句\"><a href=\"#ALTER-语句\" class=\"headerlink\" title=\"ALTER 语句\"></a>ALTER 语句</h5><p>描述:ALTER语句用于在已有的表中<code>添加、删除或修改列</code>。</p>\n<ul>\n<li>DATABASE 数据库</li>\n<li>TABLE 数据表 <ul>\n<li>ADD 添加</li>\n<li>DROP 删除</li>\n<li>MODIFY 修改</li>\n<li>CHANGE 改变</li>\n</ul>\n</li>\n</ul>\n<p>ALTER 语法:<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 表中添加、修改、删除列(类型)</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> table_name <span class=\"keyword\">ADD</span> column_name datatype</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> table_name <span class=\"keyword\">MODIFY</span> <span class=\"keyword\">COLUMN</span> column_name datatype  <span class=\"comment\">-- MySQL / ORACLE</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> table_name <span class=\"keyword\">DROP</span> <span class=\"keyword\">COLUMN</span> column_name</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--- SQL Server / MS Access：</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> table_name <span class=\"keyword\">ALTER</span> <span class=\"keyword\">COLUMN</span> column_name datatype</span><br><span class=\"line\"><span class=\"comment\">-- Oracle 10G 之后版本:</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> table_name <span class=\"keyword\">MODIFY</span> column_name datatype;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 存在的colume修改字段名称以及添加自增语法</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> table_name <span class=\"keyword\">CHANGE</span> column_name column_name data_type(<span class=\"keyword\">size</span>) constraint_name AUTO_INCREMENT <span class=\"keyword\">COMMENT</span> <span class=\"string\">'Description'</span>;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200108214630.png\" alt=\"WeiyiGeek.ALTER TABLE\" title=\"\" class=\"\">\n                <p>WeiyiGeek.ALTER TABLE</p>\n            </figure>\n<p>基础实例:<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- (0) 添加改变 \"Persons\" 表中 \"DateOfBirth\" 列的数据类型。</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Persons <span class=\"keyword\">ADD</span> DateOfBirth <span class=\"built_in\">date</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> user_log <span class=\"keyword\">ADD</span> <span class=\"keyword\">COLUMN</span> userPass <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">255</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'登陆密码'</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Persons <span class=\"keyword\">MODIFY</span> <span class=\"keyword\">COLUMN</span> DateOfBirth <span class=\"keyword\">year</span> <span class=\"comment\">-- MySQL</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Persons <span class=\"keyword\">ALTER</span> <span class=\"keyword\">COLUMN</span> DateOfBirth <span class=\"keyword\">year</span></span><br><span class=\"line\"><span class=\"comment\">-- 删除 \"Person\" 表中的 \"DateOfBirth\" 列</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Persons <span class=\"keyword\">DROP</span> <span class=\"keyword\">COLUMN</span> DateOfBirth</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- (1) 添加NOT NULL约束</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Persons</span><br><span class=\"line\"><span class=\"keyword\">MODIFY</span> Age <span class=\"built_in\">int</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"><span class=\"comment\">-- 删除NOT NULL约束</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Persons</span><br><span class=\"line\"><span class=\"keyword\">MODIFY</span> Age <span class=\"built_in\">int</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- (2) 创建 UNIQUE 约束</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> UniqueDemo</span><br><span class=\"line\"><span class=\"keyword\">ADD</span> <span class=\"keyword\">CONSTRAINT</span> PersonID <span class=\"keyword\">UNIQUE</span> (<span class=\"keyword\">Id</span>)</span><br><span class=\"line\"><span class=\"comment\">-- 撤销 UNIQUE 约束</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> UniqueDemo</span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">INDEX</span> PersonID</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- (3)创建 PRIMARY KEY 约束 、 命名 PRIMARY KEY 约束，并定义多个列的 PRIMARY KEY 约束</span></span><br><span class=\"line\"><span class=\"comment\">-- MySQL / SQL Server / Oracle / MS Access：</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Persons</span><br><span class=\"line\"><span class=\"keyword\">ADD</span> PRIMARY <span class=\"keyword\">KEY</span> (<span class=\"keyword\">Id</span>)；</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Persons</span><br><span class=\"line\"><span class=\"keyword\">ADD</span> <span class=\"keyword\">CONSTRAINT</span> PersonID PRIMARY <span class=\"keyword\">KEY</span> (<span class=\"keyword\">Id</span>,LastName)；  <span class=\"comment\">-- 设置了约束名称</span></span><br><span class=\"line\"><span class=\"comment\">-- 撤销 PRIMARY KEY 约束</span></span><br><span class=\"line\"><span class=\"comment\">-- MySQL撤销PRIMARY KEY约束时，不论约束条件为一列还是多列（由于PRIMARY KEY唯一性，MYSQL处理办法简单）</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">DATABASE</span> Demo;</span><br><span class=\"line\"><span class=\"keyword\">USE</span> Demo;</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Person (</span><br><span class=\"line\">  <span class=\"keyword\">id</span> <span class=\"built_in\">INT</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  lastname <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">255</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  age <span class=\"built_in\">INT</span>,</span><br><span class=\"line\">  addr <span class=\"built_in\">TEXT</span>,</span><br><span class=\"line\">  brithday <span class=\"built_in\">DATE</span>,</span><br><span class=\"line\">  <span class=\"keyword\">CONSTRAINT</span> psersonID PRIMARY <span class=\"keyword\">KEY</span>(<span class=\"keyword\">id</span>,lastname)</span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Person <span class=\"keyword\">DROP</span> PRIMARY <span class=\"keyword\">KEY</span>;</span><br><span class=\"line\"><span class=\"comment\">-- SQL Server / Oracle / MS Access（单列） 关键点</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Persons</span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">CONSTRAINT</span> <span class=\"keyword\">Id</span></span><br><span class=\"line\"><span class=\"comment\">-- (若起约束名也可如下多个列)</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Persons</span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">CONSTRAINT</span> psersonID</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- (4) 创建 FOREIGN KEY 约束</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Orders</span><br><span class=\"line\"><span class=\"keyword\">ADD</span> <span class=\"keyword\">FOREIGN</span> <span class=\"keyword\">KEY</span> (P_Id)</span><br><span class=\"line\"><span class=\"keyword\">REFERENCES</span> Persons(P_Id)</span><br><span class=\"line\"><span class=\"comment\">-- 定义多个列的 FOREIGN KEY 约束</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Orders</span><br><span class=\"line\"><span class=\"keyword\">ADD</span> <span class=\"keyword\">CONSTRAINT</span> fk_PerOrders</span><br><span class=\"line\"><span class=\"keyword\">FOREIGN</span> <span class=\"keyword\">KEY</span> (P_Id)</span><br><span class=\"line\"><span class=\"keyword\">REFERENCES</span> Persons(P_Id)</span><br><span class=\"line\"><span class=\"comment\">-- 撤销 FOREIGN KEY 约束(制定命名的) MySQL </span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Orders <span class=\"keyword\">DROP</span> <span class=\"keyword\">FOREIGN</span> <span class=\"keyword\">KEY</span> fk_PerOrders</span><br><span class=\"line\"><span class=\"comment\">-- SQL Server / Oracle / MS Access</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Orders <span class=\"keyword\">DROP</span> <span class=\"keyword\">CONSTRAINT</span> fk_PerOrders</span><br><span class=\"line\"><span class=\"comment\">-- 禁用约束（子表的外键约束） </span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> 表名 <span class=\"keyword\">disable</span> <span class=\"keyword\">constraint</span> 约束名;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- (5) 创建 CHECK 约束</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Persons <span class=\"keyword\">ADD</span> <span class=\"keyword\">CHECK</span> (P_Id &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Persons <span class=\"keyword\">ADD</span> <span class=\"keyword\">CONSTRAINT</span> chk_Person <span class=\"keyword\">CHECK</span> (P_Id &gt; <span class=\"number\">0</span> <span class=\"keyword\">AND</span> City=<span class=\"string\">'Sandnes'</span>)</span><br><span class=\"line\"><span class=\"comment\">-- 撤销 CHECK 约束(多个列的CHECK约束)</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Persons <span class=\"keyword\">DROP</span> <span class=\"keyword\">CHECK</span> chk_Person      <span class=\"comment\">-- MySQL</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Persons <span class=\"keyword\">DROP</span> <span class=\"keyword\">CONSTRAINT</span> chk_Person <span class=\"comment\">-- SQL Server / Oracle / MS Access：</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- (6) 创建 DEFAULT 约束</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Persons <span class=\"keyword\">ALTER</span> City <span class=\"keyword\">SET</span> <span class=\"keyword\">DEFAULT</span> <span class=\"string\">'SANDNES'</span>  <span class=\"comment\">-- MySQL</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Persons <span class=\"keyword\">MODIFY</span> City <span class=\"keyword\">DEFAULT</span> <span class=\"string\">'SANDNES'</span>     <span class=\"comment\">-- Oracle</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Persons <span class=\"keyword\">ADD</span> <span class=\"keyword\">CONSTRAINT</span> ab_c <span class=\"keyword\">DEFAULT</span> <span class=\"string\">'SANDNES'</span> <span class=\"keyword\">for</span> City <span class=\"comment\">-- SQL Server / MS Access</span></span><br><span class=\"line\"><span class=\"comment\">-- 撤销 DEFAULT 约束</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Persons <span class=\"keyword\">ALTER</span> City <span class=\"keyword\">DROP</span> <span class=\"keyword\">DEFAULT</span>        <span class=\"comment\">--  MySQL</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Persons <span class=\"keyword\">ALTER</span> <span class=\"keyword\">COLUMN</span> City <span class=\"keyword\">DROP</span> <span class=\"keyword\">DEFAULT</span> <span class=\"comment\">-- SQL Server / Oracle / MS Access</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- (7) AUTO INCREMENT 递增设置 (为表修改一个字段类型、CONSTRAINT、以及自增)</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Persons AUTO_INCREMENT=<span class=\"number\">100</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> student <span class=\"keyword\">CHANGE</span> <span class=\"keyword\">id</span> <span class=\"keyword\">id</span> <span class=\"built_in\">INT</span>( <span class=\"number\">11</span> ) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> AUTO_INCREMENT;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- (8) 修改火灾添加字段注释</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Person <span class=\"keyword\">MODIFY</span> <span class=\"keyword\">COLUMN</span> <span class=\"keyword\">id</span> <span class=\"built_in\">INT</span> <span class=\"keyword\">COMMENT</span> <span class=\"string\">'Desc'</span>;</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200107115530.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p>补充说明:</p>\n<ul>\n<li><p>1.创建外键约束的方式也可以使用工具<code>plsql</code>来新增外键约束；</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 在创建表的时候指定外键约束</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> 表名 (</span><br><span class=\"line\">  column1 datatype <span class=\"literal\">null</span>/<span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</span><br><span class=\"line\">  column2 datatype <span class=\"literal\">null</span>/<span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"keyword\">CONSTRAINT</span> 外键约束名 <span class=\"keyword\">FOREIGN</span> <span class=\"keyword\">KEY</span>  (column1,column2,... column_n) </span><br><span class=\"line\">  <span class=\"keyword\">REFERENCES</span> 外键依赖的表 (column1,column2,...column_n)</span><br><span class=\"line\">  <span class=\"keyword\">ON</span> <span class=\"keyword\">DELETE</span> <span class=\"keyword\">CASCADE</span><span class=\"comment\">--级联删除</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 在创建表后增加外键约束</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> 表名</span><br><span class=\"line\"><span class=\"keyword\">ADD</span> <span class=\"keyword\">CONSTRAINT</span> 外键约束名</span><br><span class=\"line\"><span class=\"keyword\">FOREIGN</span> <span class=\"keyword\">KEY</span> (column1, column2,...column_n) </span><br><span class=\"line\"><span class=\"keyword\">REFERENCES</span> 外键所依赖的表 (column1,column2,...column_n)</span><br><span class=\"line\"><span class=\"keyword\">ON</span> <span class=\"keyword\">DELETE</span> <span class=\"keyword\">CASCADE</span>; <span class=\"comment\">--级联删除</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>2.MySql 中如何删除未命名的外键？删除外键需要知道外键的名称，如果创建时没有设置名称则会自动生成一个，你需要获取改外键的信息。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 方式1 (值得学习)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> constraint_name</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> information_schema.REFERENTIAL_CONSTRAINTS</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> constraint_schema = <span class=\"string\">'Demo'</span> <span class=\"keyword\">AND</span> table_name = <span class=\"string\">'Orders'</span>; <span class=\"comment\">--Demo 数据库 、 Orders 表</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 方式2</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> information_schema.KEY_COLUMN_USAGE</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> constraint_schema = <span class=\"string\">'Demo'</span> <span class=\"keyword\">AND</span> table_name = <span class=\"string\">'Orders'</span> <span class=\"keyword\">AND</span> referenced_table_name <span class=\"keyword\">IS</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>;</span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200107153921.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n</li>\n</ul>\n<p><em>注意事项:</em></p>\n<ul>\n<li>在添加主键时候您使用 ALTER TABLE 语句添加主键，<code>必须把主键列声明为不包含 NULL 值</code>（在表首次创建时）。</li>\n<li>在删除主键时候注意MySQL数据库与其它数据库的不同,由于PRIMARY KEY唯一性MYSQL处理办法简单DROP PRIMARY KEY即可。</li>\n<li>在添加FOREIGN KEY的时候必须先创建外键约束所依赖的表，并且该列为该表的主键(<code>对方表关联字段必须是主键</code>);</li>\n<li>Oracle数据库中，对指定外键的表进行增删改的情况，<code>子表：谁创建外键谁就是子表，父表：这个外键所依赖的表</code>;<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#一、删除时，未指定cascade (级联删除)时</span></span><br><span class=\"line\">1）删除父表/数据</span><br><span class=\"line\">a.因为子表与父表一一对应，删除父表数据时，需要先把子表对应数据删除否则无法删除</span><br><span class=\"line\">b.同理删除表的时候，也需要先删除子表再删除父表</span><br><span class=\"line\"><span class=\"comment\">#解决方案：</span></span><br><span class=\"line\">a.指定cascade，删除父表、数据  CASCADE指当删除主表中被引用列的数据时，级联删除子表中相应的数据行。</span><br><span class=\"line\">b.禁用约束（子表的外键约束）   ALTER TABLE 表名 <span class=\"built_in\">disable</span> constraint 约束名;</span><br><span class=\"line\">2）删除子表：可以删除子表或者数据不报错</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#二、更新时</span></span><br><span class=\"line\">a.更新父表会违反约束</span><br><span class=\"line\">b.可以更新子表</span><br><span class=\"line\">c.没有针对约束的级联更新</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#三、插入时</span></span><br><span class=\"line\">a.父表可以插入</span><br><span class=\"line\">b.子表插入会违反约束</span><br></pre></td></tr></table></figure>\n<br></li>\n</ul>\n<h5 id=\"DROP-语句\"><a href=\"#DROP-语句\" class=\"headerlink\" title=\"DROP 语句\"></a>DROP 语句</h5><p>描述:通过使用 DROP 语句，可以轻松地删除索引、表和数据库(注意删除是立即执行，并且不会留下日志记录)。</p>\n<p>基础语法:<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 删除数据库</span></span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">DATABASE</span> database_name</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 删除表</span></span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> table_name</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 删除表内的数据，但并不删除表本身</span></span><br><span class=\"line\"><span class=\"keyword\">TRUNCATE</span> <span class=\"keyword\">TABLE</span> table_name</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 删除表中的索引</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> table_name <span class=\"keyword\">DROP</span> <span class=\"keyword\">INDEX</span> index_name <span class=\"comment\">--  MySQL</span></span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">INDEX</span> index_name <span class=\"keyword\">ON</span> table_name  <span class=\"comment\">--  MS Access </span></span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">INDEX</span> table_name.index_name <span class=\"comment\">-- MS SQL Server</span></span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">INDEX</span> index_name <span class=\"comment\">--  DB2/Oracle</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"VIEW-视图\"><a href=\"#VIEW-视图\" class=\"headerlink\" title=\"VIEW 视图\"></a>VIEW 视图</h5><p>描述:视图是基于 SQL 语句的结果集的可视化的表, <code>视图包含行和列就像一个真实的表</code>, 视图中的字段就是来自一个或多个数据库中的真实的表中的字段。<br>您可以向视图添加 SQL 函数、WHERE 以及 JOIN 语句，也可以呈现数据，就像这些数据来自于某个单一的表一样。</p>\n<p>视图的作用：</p>\n<ul>\n<li>1) 视图隐藏了底层的表结构，简化了数据访问操作，客户端不再需要知道底层表的结构及其之间的关系。</li>\n<li>2) 视图提供了一个统一访问数据的接口。（即可以允许用户通过视图访问数据的安全机制，而不授予用户直接访问底层表的权限）</li>\n<li>3) 从而加强了安全性，使用户只能看到视图所显示的数据。</li>\n<li>4) 视图还可以被嵌套，一个视图中可以嵌套另一个视图。</li>\n</ul>\n<p>如何创建、更新和删除视图?<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- SQL CREATE VIEW 语法</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">VIEW</span> view_name <span class=\"keyword\">AS</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> column_name(s)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> table_name</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> condition</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- SQL CREATE OR REPLACE VIEW 语法</span></span><br><span class=\"line\">[<span class=\"keyword\">CREATE</span>|<span class=\"keyword\">REPLACE</span>] <span class=\"keyword\">VIEW</span> view_name <span class=\"keyword\">AS</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> column_name(s)</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> table_name</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> condition</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- SQL DROP VIEW 语法</span></span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">VIEW</span> view_name</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- SQL Server --</span></span><br><span class=\"line\"><span class=\"comment\">-- schema_name: 视图所属架构的名称。</span></span><br><span class=\"line\"><span class=\"comment\">-- view_name: 要更改的视图。</span></span><br><span class=\"line\"><span class=\"comment\">-- column: 将成为指定视图的一部分的一个或多个列的名称（以逗号分隔）。</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">VIEW</span> [ schema_name . ] view_name [ ( <span class=\"keyword\">column</span> [ ,...n ] ) ] </span><br><span class=\"line\">[ <span class=\"keyword\">WITH</span> &lt;view_attribute&gt; [ ,...n ] ] </span><br><span class=\"line\"><span class=\"keyword\">AS</span> select_statement </span><br><span class=\"line\">[ <span class=\"keyword\">WITH</span> <span class=\"keyword\">CHECK</span> <span class=\"keyword\">OPTION</span> ] [ ; ]</span><br><span class=\"line\">&lt;view_attribute&gt; ::= </span><br><span class=\"line\">&#123; </span><br><span class=\"line\">  [ ENCRYPTION ]</span><br><span class=\"line\">  [ SCHEMABINDING ]</span><br><span class=\"line\">  [ VIEW_METADATA ]     </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>基础实例:<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 视图 \"Current Product List\" 会从 \"Products\" 表列出所有正在使用的产品（未停产的产品）</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">VIEW</span> [<span class=\"keyword\">Current</span> Product <span class=\"keyword\">List</span>] <span class=\"keyword\">AS</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ProductID,ProductName</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Products</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Discontinued=<span class=\"keyword\">No</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- Northwind 样本数据库的另一个视图会计算在 1997 年每个种类的销售总数</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">VIEW</span> [<span class=\"keyword\">Category</span> Sales <span class=\"keyword\">For</span> <span class=\"number\">1997</span>] <span class=\"keyword\">AS</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">DISTINCT</span> CategoryName,<span class=\"keyword\">Sum</span>(ProductSales) <span class=\"keyword\">AS</span> CategorySales</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> [Product Sales <span class=\"keyword\">for</span> <span class=\"number\">1997</span>]   <span class=\"comment\">-- VIEW 视图的嵌套</span></span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> CategoryName</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 向 \"Current Product List\" 视图添加 \"Category\" 列</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">VIEW</span> [<span class=\"keyword\">Current</span> Product <span class=\"keyword\">List</span>] <span class=\"keyword\">AS</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> ProductID,ProductName,<span class=\"keyword\">Category</span>  <span class=\"comment\">-- 关键点</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Products</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Discontinued=<span class=\"keyword\">No</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 查询视图</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> [<span class=\"keyword\">Current</span> Product <span class=\"keyword\">List</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 综合实例</span></span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> Persons(LastName) <span class=\"keyword\">VALUES</span> (<span class=\"string\">'木子'</span>),(<span class=\"string\">'Weiyi'</span>),(<span class=\"string\">'Young'</span>);</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">VIEW</span> TestID <span class=\"keyword\">AS</span> </span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">ID</span>,LastName <span class=\"keyword\">FROM</span> Persons</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> LastName != <span class=\"string\">'WeiyiGeek'</span>;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> TestID;</span><br><span class=\"line\">desc TestID;</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200109095917.png\" alt=\"WeiyiGeek.VIEW\" title=\"\" class=\"\">\n                <p>WeiyiGeek.VIEW</p>\n            </figure></p>\n<p>注意事项:</p>\n<ul>\n<li>注:<code>视图总是显示最新的数据</code>！每当用户查询视图时，数据库引擎通过使用视图的 SQL 语句重建数据。</li>\n</ul>\n<hr>\n\n<h4 id=\"0x01-SQL-基础函数\"><a href=\"#0x01-SQL-基础函数\" class=\"headerlink\" title=\"0x01 SQL 基础函数\"></a>0x01 SQL 基础函数</h4><p>描述:SQL 拥有很多可用于计数和计算的内建函数,可以帮助我们更方便的存储以及获取数据;</p>\n<h5 id=\"Date-函数\"><a href=\"#Date-函数\" class=\"headerlink\" title=\"Date 函数\"></a>Date 函数</h5><p>描述:在处理日期的时候我们需要确保所插入的日期的格式，与数据库中日期列的格式相匹配；只要您的数据包含的只是日期部分，运行查询就不会出问题。<br>但是如果涉及时间部分，情况就有点复杂了需要采用内置的函数进行转换后进行匹配;</p>\n<p>内建日期处理函数:</p>\n<ul>\n<li>MySQL Date 函数</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>函数</th>\n<th>描述</th>\n<th>语法</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://www.runoob.com/sql/func-now.html\" target=\"_blank\" rel=\"noopener\">NOW()</a></td>\n<td>返回当前的日期和时间</td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/sql/func-curdate.html\" target=\"_blank\" rel=\"noopener\">CURDATE()</a></td>\n<td>返回当前的日期</td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/sql/func-curtime.html\" target=\"_blank\" rel=\"noopener\">CURTIME()</a></td>\n<td>返回当前的时间</td>\n<td></td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/sql/func-date.html\" target=\"_blank\" rel=\"noopener\">DATE()</a></td>\n<td>提取日期或日期/时间表达式的日期部分</td>\n<td>DATE(‘2020-01-09 11:29:33’)</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/sql/func-extract.html\" target=\"_blank\" rel=\"noopener\">EXTRACT()</a></td>\n<td>返回日期/时间的单独部分比如年、月、日、小时、分钟</td>\n<td>EXTRACT(unit值 FROM date字段)</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/sql/func-date-add.html\" target=\"_blank\" rel=\"noopener\">DATE_ADD()</a></td>\n<td>向日期添加指定的时间间隔</td>\n<td>DATE_ADD(date,INTERVAL expr type)</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/sql/func-date-sub.html\" target=\"_blank\" rel=\"noopener\">DATE_SUB()</a></td>\n<td>从日期减去指定的时间间隔</td>\n<td>DATE_SUB(date,INTERVAL expr type)</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/sql/func-datediff-mysql.html\" target=\"_blank\" rel=\"noopener\">DATEDIFF()</a></td>\n<td>返回两个日期之间的天数</td>\n<td>DATEDIFF(date1,date2)</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/sql/func-date-format.html\" target=\"_blank\" rel=\"noopener\">DATE_FORMAT()</a></td>\n<td>用不同的格式显示日期/时间</td>\n<td>DATE_FORMAT(date,format)</td>\n</tr>\n</tbody>\n</table>\n<p>MySQL Date 数据类型存储格式：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- year(data):返回data表达式中的公元年分所对应的数值</span></span><br><span class=\"line\"><span class=\"comment\">-- month(data):返回data表达式中的月分所对应的数值</span></span><br><span class=\"line\"><span class=\"comment\">-- day(data):返回data表达式中的日期所对应的数值</span></span><br><span class=\"line\"><span class=\"comment\">-- 注：SQL语言中提供了如下函数，利用这些函数可以很方便地实现按年、月、日进行查询</span></span><br><span class=\"line\"></span><br><span class=\"line\">YEAR - 格式：YYYY 或 YY</span><br><span class=\"line\">DATE - 格式：YYYY-MM-DD</span><br><span class=\"line\">TIME - 格式：HH:MM:SS</span><br><span class=\"line\">DATETIME - 格式：YYYY-MM-DD HH:MM:SS</span><br><span class=\"line\">TIMESTAMP - 格式：YYYY-MM-DD HH:MM:SS</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- EXTRACT() 函数 unit 参数</span></span><br><span class=\"line\">MICROSECOND</span><br><span class=\"line\">SECOND</span><br><span class=\"line\">MINUTE</span><br><span class=\"line\">HOUR</span><br><span class=\"line\">DAY</span><br><span class=\"line\">WEEK</span><br><span class=\"line\">MONTH</span><br><span class=\"line\">QUARTER</span><br><span class=\"line\">YEAR</span><br><span class=\"line\">SECOND_MICROSECOND</span><br><span class=\"line\">MINUTE_MICROSECOND</span><br><span class=\"line\">MINUTE_SECOND</span><br><span class=\"line\">HOUR_MICROSECOND</span><br><span class=\"line\">HOUR_SECOND</span><br><span class=\"line\">HOUR_MINUTE</span><br><span class=\"line\">DAY_MICROSECOND</span><br><span class=\"line\">DAY_SECOND</span><br><span class=\"line\">DAY_MINUTE</span><br><span class=\"line\">DAY_HOUR</span><br><span class=\"line\">YEAR_MONTH</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- DATE_ADD / DATE_SUB expr 参数值列表</span></span><br><span class=\"line\">MICROSECOND</span><br><span class=\"line\">SECOND</span><br><span class=\"line\">MINUTE</span><br><span class=\"line\">HOUR</span><br><span class=\"line\">DAY</span><br><span class=\"line\">WEEK</span><br><span class=\"line\">MONTH</span><br><span class=\"line\">QUARTER</span><br><span class=\"line\">YEAR</span><br><span class=\"line\">SECOND_MICROSECOND</span><br><span class=\"line\">MINUTE_MICROSECOND</span><br><span class=\"line\">MINUTE_SECOND</span><br><span class=\"line\">HOUR_MICROSECOND</span><br><span class=\"line\">HOUR_SECOND</span><br><span class=\"line\">HOUR_MINUTE</span><br><span class=\"line\">DAY_MICROSECOND</span><br><span class=\"line\">DAY_SECOND</span><br><span class=\"line\">DAY_MINUTE</span><br><span class=\"line\">DAY_HOUR</span><br><span class=\"line\">YEAR_MONTH</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--  DATE_FORMAT() 函数用format参数</span></span><br><span class=\"line\">%a \t缩写星期名</span><br><span class=\"line\">%b \t缩写月名</span><br><span class=\"line\">%c \t月，数值</span><br><span class=\"line\">%D \t带有英文前缀的月中的天</span><br><span class=\"line\">%d \t月的天，数值（00-31）</span><br><span class=\"line\">%e \t月的天，数值（0-31）</span><br><span class=\"line\">%f \t微秒</span><br><span class=\"line\">%H \t小时（00-23）</span><br><span class=\"line\">%h \t小时（01-12）</span><br><span class=\"line\">%I \t小时（01-12）</span><br><span class=\"line\">%i \t分钟，数值（00-59）</span><br><span class=\"line\">%j \t年的天（001-366）</span><br><span class=\"line\">%k \t小时（0-23）</span><br><span class=\"line\">%l \t小时（1-12）</span><br><span class=\"line\">%M \t月名</span><br><span class=\"line\">%m \t月，数值（00-12）</span><br><span class=\"line\">%p \tAM 或 PM</span><br><span class=\"line\">%r \t时间，12-小时（hh:mm:ss AM 或 PM）</span><br><span class=\"line\">%S \t秒（00-59）</span><br><span class=\"line\">%s \t秒（00-59）</span><br><span class=\"line\">%T \t时间, 24-小时（hh:mm:ss）</span><br><span class=\"line\">%U \t周（00-53）星期日是一周的第一天</span><br><span class=\"line\">%u \t周（00-53）星期一是一周的第一天</span><br><span class=\"line\">%V \t周（01-53）星期日是一周的第一天，与 %X 使用</span><br><span class=\"line\">%v \t周（01-53）星期一是一周的第一天，与 %x 使用</span><br><span class=\"line\">%W \t星期名</span><br><span class=\"line\">%w \t周的天（0=星期日, 6=星期六）</span><br><span class=\"line\">%X \t年，其中的星期日是周的第一天，4 位，与 %V 使用</span><br><span class=\"line\">%x \t年，其中的星期一是周的第一天，4 位，与 %v 使用</span><br><span class=\"line\">%Y \t年，4 位</span><br><span class=\"line\">%y \t年，2 位</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<ul>\n<li>SQL Server Date 函数</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>函数</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://www.runoob.com/sql/func-getdate.html\" target=\"_blank\" rel=\"noopener\">GETDATE()</a></td>\n<td>返回当前的日期和时间</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/sql/func-datepart.html\" target=\"_blank\" rel=\"noopener\">DATEPART()</a></td>\n<td>返回日期/时间的单独部分</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/sql/func-dateadd.html\" target=\"_blank\" rel=\"noopener\">DATEADD()</a></td>\n<td>在日期中添加或减去指定的时间间隔</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/sql/func-datediff.html\" target=\"_blank\" rel=\"noopener\">DATEDIFF()</a></td>\n<td>返回两个日期之间的时间</td>\n</tr>\n<tr>\n<td><a href=\"https://www.runoob.com/sql/func-convert.html\" target=\"_blank\" rel=\"noopener\">CONVERT()</a></td>\n<td>用不同的格式显示日期/时间</td>\n</tr>\n</tbody>\n</table>\n<p>MSSQL Date 数据类型存储格式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DATE - 格式：YYYY-MM-DD</span><br><span class=\"line\">DATETIME - 格式：YYYY-MM-DD HH:MM:SS</span><br><span class=\"line\">SMALLDATETIME - 格式：YYYY-MM-DD HH:MM:SS</span><br><span class=\"line\">TIMESTAMP - 格式：唯一的数字</span><br></pre></td></tr></table></figure>\n<p>基础实例(以MySQL为例)：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- MySQL基础含税</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">NOW</span>(),<span class=\"keyword\">CURDATE</span>(),<span class=\"keyword\">CURTIME</span>()</span><br><span class=\"line\"><span class=\"comment\">-- NOW()\t           CURDATE()    CURTIME()</span></span><br><span class=\"line\"><span class=\"comment\">-- 2020-01-09 02:24:40\t2020-01-09\t02:24:40</span></span><br><span class=\"line\"><span class=\"keyword\">select</span>  <span class=\"keyword\">DATE_FORMAT</span>(<span class=\"keyword\">NOW</span>(),<span class=\"string\">'%b %d %Y %h:%i %p'</span>) <span class=\"comment\">-- Jan 09 2020 03:55 AM</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- MySQL基础实例</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> DateTimeTest (</span><br><span class=\"line\"><span class=\"keyword\">ID</span> <span class=\"built_in\">INT</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> PRIMARY <span class=\"keyword\">KEY</span> AUTO_INCREMENT,</span><br><span class=\"line\"><span class=\"keyword\">NAME</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">255</span>),</span><br><span class=\"line\">Birthday DATETIME <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NOW</span>(),   <span class=\"comment\">-- 关键点</span></span><br><span class=\"line\">CurrentDate <span class=\"built_in\">DATE</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"string\">'1970-01-01'</span>,</span><br><span class=\"line\">CurrentTime <span class=\"built_in\">TIME</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"string\">'12:00:00'</span></span><br><span class=\"line\">);</span><br><span class=\"line\">DESC DateTimeTest;</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> DateTimeTest(<span class=\"keyword\">NAME</span>) <span class=\"keyword\">VALUES</span> (<span class=\"string\">'WeiyiGeek'</span>),(<span class=\"string\">'Administrator'</span>);</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> DateTimeTest(<span class=\"keyword\">NAME</span>,CurrentDate,CurrentTime) <span class=\"keyword\">VALUES</span> (<span class=\"string\">'Smail'</span>,<span class=\"keyword\">CURDATE</span>(),<span class=\"keyword\">CURTIME</span>()); <span class=\"comment\">-- 关键点</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> DateTimeTest;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 分别获取Birthday字段的日期和时间</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"built_in\">DATE</span>(Birthday) <span class=\"keyword\">AS</span> <span class=\"string\">'日期'</span>,<span class=\"built_in\">TIME</span>(Birthday) <span class=\"keyword\">AS</span> <span class=\"string\">'时间'</span> <span class=\"keyword\">FROM</span> DateTimeTest;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- EXTRACT函数与CONCAT联合使用案例</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">CONCAT</span>(<span class=\"keyword\">EXTRACT</span>(<span class=\"keyword\">YEAR</span> <span class=\"keyword\">FROM</span> Birthday),<span class=\"string\">'-'</span>,<span class=\"keyword\">EXTRACT</span>(<span class=\"keyword\">MONTH</span> <span class=\"keyword\">FROM</span> Birthday),<span class=\"string\">'-'</span>,<span class=\"keyword\">EXTRACT</span>(<span class=\"keyword\">DAY</span> <span class=\"keyword\">FROM</span> Birthday)) <span class=\"keyword\">AS</span> <span class=\"string\">'日期'</span>, </span><br><span class=\"line\"><span class=\"keyword\">CONCAT</span>(<span class=\"keyword\">EXTRACT</span>(<span class=\"keyword\">HOUR</span> <span class=\"keyword\">FROM</span> Birthday),<span class=\"string\">':'</span>,<span class=\"keyword\">EXTRACT</span>(<span class=\"keyword\">MINUTE</span> <span class=\"keyword\">FROM</span> Birthday),<span class=\"string\">':'</span>,<span class=\"keyword\">EXTRACT</span>(<span class=\"keyword\">SECOND</span> <span class=\"keyword\">FROM</span> Birthday)) <span class=\"keyword\">AS</span> <span class=\"string\">'时间'</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DateTimeTest;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- DATE_ADD / DATE_SUB 时间添加间隔</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">ID</span>,<span class=\"keyword\">DATE_ADD</span>(Birthday, <span class=\"built_in\">INTERVAL</span> <span class=\"number\">5</span> <span class=\"keyword\">DAY</span>) <span class=\"keyword\">AS</span> <span class=\"string\">'ADD'</span>, <span class=\"keyword\">DATE_SUB</span>(Birthday, <span class=\"built_in\">INTERVAL</span> <span class=\"number\">5</span> <span class=\"keyword\">DAY</span>) <span class=\"keyword\">AS</span> <span class=\"string\">'SUB'</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DateTimeTest</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">NAME</span> = <span class=\"string\">'Smail'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 两个时间之差(DATEDIFF())</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">DATEDIFF</span>(<span class=\"keyword\">DATE_ADD</span>(Birthday, <span class=\"built_in\">INTERVAL</span> <span class=\"number\">5</span> <span class=\"keyword\">DAY</span>), <span class=\"keyword\">DATE_SUB</span>(Birthday, <span class=\"built_in\">INTERVAL</span> <span class=\"number\">5</span> <span class=\"keyword\">DAY</span>)) <span class=\"keyword\">AS</span> DiffDate</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> DateTimeTest</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> <span class=\"keyword\">NAME</span> = <span class=\"string\">'Smail'</span>;</span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200109120125.png\" alt=\"WeiyiGeek.MySQL时间处理函数\" title=\"\" class=\"\">\n                <p>WeiyiGeek.MySQL时间处理函数</p>\n            </figure>\n<p>补充案例:<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 日期条件查询 （注:不同数据库对日期型数据存在差异；）</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> tb_stu <span class=\"keyword\">WHERE</span> <span class=\"built_in\">date</span>=<span class=\"string\">'2011-04-08'</span>;       <span class=\"comment\">-- (1)MySQL: 查询日期型数据 (注意单引号)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">from</span> tb_name <span class=\"keyword\">WHERE</span> birthday=<span class=\"string\">'2011-04-08'</span>;  <span class=\"comment\">-- (2)SQLServer:</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">from</span> tb_name <span class=\"keyword\">WHERE</span> birthday=<span class=\"comment\">#2011-04-08;   -- (3)Access:</span></span><br><span class=\"line\"><span class=\"comment\">-- 按月查询统计数据</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> tb_stu <span class=\"keyword\">WHERE</span> <span class=\"keyword\">month</span>(<span class=\"built_in\">date</span>)=<span class=\"string\">'5'</span> <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"built_in\">date</span>;</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"Aggregate-函数\"><a href=\"#Aggregate-函数\" class=\"headerlink\" title=\"Aggregate 函数\"></a>Aggregate 函数</h5><p>描述:函数计算从列中取得的值返回一个单一的值。</p>\n<ul>\n<li>AVG(column_name) - 返回平均值</li>\n<li>COUNT(column_name) - 返回行数</li>\n<li>FIRST(column_name) - 返回第一个记录的值</li>\n<li>LAST(column_name) - 返回最后一个记录的值</li>\n<li>MAX(column_name) - 返回最大值</li>\n<li>MIN(column_name) - 返回最小值</li>\n<li>SUM(column_name) - 返回总和</li>\n<li>ROUND(column_name,decimals) - 对某个数值字段进行指定小数位数的四舍五入(decimals 返回的小数位数)</li>\n</ul>\n<p>基础实例:<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- SQL Server、MySQL 和 Oracle 中的 SQL FIRST() 工作区</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> TOP <span class=\"number\">1</span> <span class=\"keyword\">name</span> <span class=\"keyword\">FROM</span> Websites <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">id</span> <span class=\"keyword\">ASC</span>; <span class=\"comment\">-- MSSQL</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">name</span> <span class=\"keyword\">FROM</span> Websites <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">id</span> <span class=\"keyword\">ASC</span> <span class=\"keyword\">LIMIT</span> <span class=\"number\">1</span>; <span class=\"comment\">-- MySQL</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">name</span> <span class=\"keyword\">FROM</span> Websites <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">id</span> <span class=\"keyword\">ASC</span> <span class=\"keyword\">WHERE</span> <span class=\"keyword\">ROWNUM</span> &lt;=<span class=\"number\">1</span>; <span class=\"comment\">-- ORACLE</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> person <span class=\"keyword\">limit</span> <span class=\"number\">5</span> <span class=\"keyword\">offset</span> <span class=\"number\">2</span>; <span class=\"comment\">-- 排除显示前2条数据，藏第三条数据开始依次显示后5条数据</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- SQL Server、MySQL 和 Oracle 中的 SQL LAST() 工作区</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> TOP <span class=\"number\">1</span> <span class=\"keyword\">name</span> <span class=\"keyword\">FROM</span> Websites <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">id</span> <span class=\"keyword\">DESC</span>; <span class=\"comment\">-- MSSQL</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">name</span> <span class=\"keyword\">FROM</span> Websites <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">id</span> <span class=\"keyword\">DESC</span> <span class=\"keyword\">LIMIT</span> <span class=\"number\">1</span>; <span class=\"comment\">-- MySQL</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">name</span> <span class=\"keyword\">FROM</span> Websites <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">id</span> <span class=\"keyword\">DESC</span> <span class=\"keyword\">WHERE</span> <span class=\"keyword\">ROWNUM</span> &lt;=<span class=\"number\">1</span>; <span class=\"comment\">-- ORACLE</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- ROUND() 函数示例</span></span><br><span class=\"line\">mysql&gt; select ROUND(-1.23);     -- -1 返回参数X的四舍五入的一个整数</span><br><span class=\"line\">mysql&gt; select ROUND(1.58);      -- -2</span><br><span class=\"line\">mysql&gt; select ROUND(1.298, 1);  -- -&gt; 1.3  返回参数X的四舍五入的有 D 位小数的一个数字。</span><br><span class=\"line\">mysql&gt; select ROUND(1.298, 0);  -- -&gt; 1  如果D为0结果将没有小数点或小数部分</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 选择一部分函数进行演示（其它都类似）</span></span><br><span class=\"line\"><span class=\"keyword\">DROP</span> <span class=\"keyword\">TABLE</span> <span class=\"keyword\">Aggregate</span>;</span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"keyword\">Aggregate</span> (</span><br><span class=\"line\">  <span class=\"keyword\">ID</span> <span class=\"built_in\">INT</span> <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> PRIMARY <span class=\"keyword\">KEY</span> AUTO_INCREMENT,</span><br><span class=\"line\">  <span class=\"keyword\">NAME</span> <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">255</span>) <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  BIR DATETIME <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> <span class=\"keyword\">DEFAULT</span> <span class=\"keyword\">NOW</span>()</span><br><span class=\"line\">);</span><br><span class=\"line\">DESC Aggregate;</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> <span class=\"keyword\">Aggregate</span>(<span class=\"keyword\">NAME</span>) <span class=\"keyword\">VALUES</span> (<span class=\"string\">'张三'</span>),(<span class=\"string\">'王五'</span>);</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> <span class=\"keyword\">Aggregate</span> AUTO_INCREMENT = <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> <span class=\"keyword\">Aggregate</span>(<span class=\"keyword\">NAME</span>) <span class=\"keyword\">VALUES</span> (<span class=\"string\">'WeiyiGeek'</span>),(<span class=\"string\">'Demo'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">ID</span>,<span class=\"keyword\">NAME</span> <span class=\"keyword\">FROM</span> <span class=\"keyword\">Aggregate</span> <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">ID</span> <span class=\"keyword\">ASC</span> <span class=\"keyword\">LIMIT</span> <span class=\"number\">1</span>;  <span class=\"comment\">-- 首条 </span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">ID</span>,<span class=\"keyword\">NAME</span> <span class=\"keyword\">FROM</span> <span class=\"keyword\">Aggregate</span> <span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> <span class=\"keyword\">ID</span> <span class=\"keyword\">DESC</span> <span class=\"keyword\">LIMIT</span> <span class=\"number\">1</span>; <span class=\"comment\">-- 尾条</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200109142553.png\" alt=\"WeiyiGeek.LIMIT\" title=\"\" class=\"\">\n                <p>WeiyiGeek.LIMIT</p>\n            </figure>\n<p>注意事项:</p>\n<ul>\n<li>注:ROUND 返回值被变换为一个BIGINT! </li>\n</ul>\n<p><br></p>\n<h5 id=\"Scalar-函数\"><a href=\"#Scalar-函数\" class=\"headerlink\" title=\"Scalar 函数\"></a>Scalar 函数</h5><p>描述:SQL Scalar 函数基于输入值，返回一个单一的值。</p>\n<ul>\n<li>UCASE() - 将某个字段转换为大写</li>\n<li>LCASE() - 将某个字段转换为小写</li>\n<li>MID() - 从某个文本字段提取字符( MySQL - <code>SELECT MID(column_name,start[,length]) FROM table_name;</code>) </li>\n<li>SubString(字段，1，end) - 从某个文本字段提取字符如何输入一个数值则是该数值到末尾;</li>\n<li>LEN() - 返回某个文本字段的长度，<code>MySQL 中函数为 LENGTH():</code></li>\n<li>NOW() - 返回当前的系统日期和时间</li>\n<li>FORMAT(column_name,format) - 格式化某个字段的显示方式</li>\n<li>concat(str1,str2,…)：将多个字符串连接成一个字符串</li>\n<li>concat_ws(separator,str1,str2,……)：将多个字符串连接成一个字符串,中间用separator隔开</li>\n</ul>\n<p>补充说明:<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- Oracle 中没有 MID 函数有 substr 函数有类似功能:</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">substr</span>((<span class=\"string\">\"列名\"</span>, a,b) <span class=\"keyword\">from</span> &lt;table_name&gt;;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">substr</span>(<span class=\"keyword\">name</span>,<span class=\"number\">1</span>,<span class=\"number\">4</span>) <span class=\"keyword\">AS</span> ShortTitle <span class=\"keyword\">FROM</span> Websites;</span><br><span class=\"line\">              </span><br><span class=\"line\"><span class=\"comment\">-- MySQL 中函数为 LENGTH()</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">LENGTH</span>(column_name) <span class=\"keyword\">FROM</span> table_name;</span><br></pre></td></tr></table></figure></p>\n<p>基础示例：<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">UCASE</span>(<span class=\"string\">'WeiyiGeek'</span>) <span class=\"keyword\">as</span> <span class=\"string\">'UCASE'</span> ,<span class=\"keyword\">LCASE</span>(<span class=\"string\">'WeiyiGeek'</span>) <span class=\"keyword\">as</span>  <span class=\"string\">'LCASE'</span>;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">MID</span>(<span class=\"string\">'WeiyiGeek'</span>,<span class=\"number\">1</span>,<span class=\"number\">5</span>) <span class=\"keyword\">as</span> <span class=\"string\">'MID'</span>,<span class=\"keyword\">SUBSTRING</span>(<span class=\"string\">'WeiyiGeek'</span>,<span class=\"number\">6</span>) <span class=\"keyword\">as</span> <span class=\"string\">'SUBSTARING'</span>;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">LENGTH</span>(<span class=\"string\">'WeiyiGeek'</span>) <span class=\"keyword\">as</span> <span class=\"string\">'Length'</span>;</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">DATE_FORMAT</span>(<span class=\"keyword\">Now</span>(),<span class=\"string\">'%Y-%m-%d'</span>) <span class=\"keyword\">AS</span> <span class=\"string\">'DATE_FORMAT'</span>;</span><br><span class=\"line\"><span class=\"comment\">-- 字符串拼接(常用)</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">CONCAT</span>(<span class=\"string\">\"I \"</span>,<span class=\"string\">\"Love \"</span>,<span class=\"string\">\"You! \"</span>) <span class=\"keyword\">AS</span> <span class=\"string\">'concat'</span>,<span class=\"keyword\">CONCAT_WS</span>(<span class=\"string\">\" ：\"</span>,<span class=\"string\">\"时间\"</span>,<span class=\"keyword\">NOW</span>())</span><br><span class=\"line\"><span class=\"comment\">-- concat |\tCONCAT_WS(\" ：\",\"时间\",NOW())</span></span><br><span class=\"line\"><span class=\"comment\">-- I Love You! |\t时间 ：2020-01-12 06:24:18</span></span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200109151609.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<hr>\n\n\n<h4 id=\"0x02-通用数据类型\"><a href=\"#0x02-通用数据类型\" class=\"headerlink\" title=\"0x02 通用数据类型\"></a>0x02 通用数据类型</h4><p>描述:数据类型定义列中存放的值的种类,在创建 SQL 表时决定表中的每个列将要存储的数据的类型；<br>数据类型是一个标签是便于 SQL 了解每个列期望存储什么类型的数据的指南，它也标识了 SQL 如何与存储的数据进行交互。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">数据类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">BOOLEAN</td>\n<td>字存储 TRUE 或 FALSE 值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">VARCHAR(n) 或 CHARACTER VARYING(n)</td>\n<td>字符/字符串。可变长度。最大长度 n。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">CHARACTER(n)</td>\n<td>字符/字符串。固定长度 n。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">BINARY(n)</td>\n<td>二进制串。固定长度 n。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">VARBINARY(n) 或 BINARY VARYING(n)</td>\n<td>二进制串。可变长度。最大长度 n。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">INTEGER(p)</td>\n<td>整数值（没有小数点）精度 p。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">SMALLINT</td>\n<td>整数值（没有小数点）精度 5。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">INTEGER</td>\n<td>整数值（没有小数点）精度 10。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">BIGINT</td>\n<td>整数值（没有小数点）精度 19。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">DECIMAL(p,s)</td>\n<td>精确数值，精度 p，小数点后位数 s。例如：decimal(5,2) 是一个小数点前有 3 位数，小数点后有 2 位数的数字。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">NUMERIC(p,s)</td>\n<td>精确数值，精度 p，小数点后位数 s。（与 DECIMAL 相同）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">FLOAT(p)</td>\n<td>近似数值，尾数精度 p。一个采用以 10 为基数的指数计数法的浮点数。该类型的 size 参数由一个指定最小精度的单一数字组成。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">REAL</td>\n<td>近似数值，尾数精度 7。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">FLOAT</td>\n<td>近似数值，尾数精度 16。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">DOUBLE PRECISION</td>\n<td>近似数值，尾数精度 16。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">DATE</td>\n<td>存储年、月、日的值。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TIME</td>\n<td>存储小时、分、秒的值。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">TIMESTAMP</td>\n<td>存储年、月、日、小时、分、秒的值。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">INTERVAL</td>\n<td>由一些整数字段组成，代表一段时间，取决于区间的类型。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ARRAY</td>\n<td>元素的固定长度的有序集合</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">MULTISET</td>\n<td>元素的可变长度的无序集合</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">XML</td>\n<td>存储 XML 数据</td>\n</tr>\n</tbody>\n</table>\n<p><strong>不同数据库对数据类型的异同</strong></p>\n<table>\n<thead>\n<tr>\n<th>数据类型</th>\n<th>Access</th>\n<th>SQLServer</th>\n<th>Oracle</th>\n<th>MySQL</th>\n<th>PostgreSQL</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>boolean</em></td>\n<td>Yes/No</td>\n<td>Bit</td>\n<td>Byte</td>\n<td>N/A</td>\n<td>Boolean</td>\n</tr>\n<tr>\n<td><em>integer</em></td>\n<td>Number (integer)</td>\n<td>Int</td>\n<td>Number</td>\n<td>Int Integer</td>\n<td>Int Integer</td>\n</tr>\n<tr>\n<td><em>float</em></td>\n<td>Number (single)</td>\n<td>Float Real</td>\n<td>Number</td>\n<td>Float</td>\n<td>Numeric</td>\n</tr>\n<tr>\n<td><em>currency</em></td>\n<td>Currency</td>\n<td>Money</td>\n<td>N/A</td>\n<td>N/A</td>\n<td>Money</td>\n</tr>\n<tr>\n<td><em>string (fixed)</em></td>\n<td>N/A</td>\n<td>Char</td>\n<td>Char</td>\n<td>Char</td>\n<td>Char</td>\n</tr>\n<tr>\n<td><em>string (variable)</em></td>\n<td>Text (&lt;256) Memo (65k+)</td>\n<td>Varchar</td>\n<td>Varchar Varchar2</td>\n<td>Varchar</td>\n<td>Varchar</td>\n</tr>\n<tr>\n<td><em>binary object</em></td>\n<td>OLE Object Memo</td>\n<td>Binary (fixed up to 8K) Varbinary (&lt;8K) Image (&lt;2GB)</td>\n<td>Long Raw</td>\n<td>Blob Text</td>\n<td>Binary Varbinary</td>\n</tr>\n</tbody>\n</table>\n<p><br></p>\n<h5 id=\"Access-数据类型\"><a href=\"#Access-数据类型\" class=\"headerlink\" title=\"Access 数据类型\"></a>Access 数据类型</h5><table>\n<thead>\n<tr>\n<th>数据类型</th>\n<th>描述</th>\n<th>存储</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Text</td>\n<td>用于文本或文本与数字的组合。最多 255 个字符。</td>\n<td></td>\n</tr>\n<tr>\n<td>Memo</td>\n<td>Memo 用于更大数量的文本。最多存储 65,536 个字符。<strong>注释：</strong>无法对 memo 字段进行排序。不过它们是可搜索的。</td>\n<td></td>\n</tr>\n<tr>\n<td>Byte</td>\n<td>允许 0 到 255 的数字。</td>\n<td>1 字节</td>\n</tr>\n<tr>\n<td>Integer</td>\n<td>允许介于 -32,768 与 32,767 之间的全部数字。</td>\n<td>2 字节</td>\n</tr>\n<tr>\n<td>Long</td>\n<td>允许介于 -2,147,483,648 与 2,147,483,647 之间的全部数字。</td>\n<td>4 字节</td>\n</tr>\n<tr>\n<td>Single</td>\n<td>单精度浮点。处理大多数小数。</td>\n<td>4 字节</td>\n</tr>\n<tr>\n<td>Double</td>\n<td>双精度浮点。处理大多数小数。</td>\n<td>8 字节</td>\n</tr>\n<tr>\n<td>Currency</td>\n<td>用于货币。支持 15 位的元，外加 4 位小数。<strong>提示：</strong>您可以选择使用哪个国家的货币。</td>\n<td>8 字节</td>\n</tr>\n<tr>\n<td>AutoNumber</td>\n<td>AutoNumber 字段自动为每条记录分配数字，通常从 1 开始。</td>\n<td>4 字节</td>\n</tr>\n<tr>\n<td>Date/Time</td>\n<td>用于日期和时间</td>\n<td>8 字节</td>\n</tr>\n<tr>\n<td>Yes/No</td>\n<td>逻辑字段，可以显示为 Yes/No、True/False 或 On/Off。在代码中，使用常量 True 和 False （等价于 1 和 0）。<strong>注释：</strong>Yes/No 字段中不允许 Null 值</td>\n<td>1 比特</td>\n</tr>\n<tr>\n<td>Ole Object</td>\n<td>可以存储图片、音频、视频或其他 BLOBs（Binary Large OBjects）。</td>\n<td>最多 1GB</td>\n</tr>\n<tr>\n<td>Hyperlink</td>\n<td>包含指向其他文件的链接，包括网页。</td>\n<td></td>\n</tr>\n<tr>\n<td>Lookup Wizard</td>\n<td>允许您创建一个可从下拉列表中进行选择的选项列表。</td>\n<td>4 字节</td>\n</tr>\n</tbody>\n</table>\n<p><br></p>\n<h5 id=\"MySQL-数据类型\"><a href=\"#MySQL-数据类型\" class=\"headerlink\" title=\"MySQL 数据类型\"></a>MySQL 数据类型</h5><p>在 MySQL 中，有三种主要的类型：<code>Text（文本）、Number（数字）和 Date/Time（日期/时间）</code>类型。</p>\n<p><strong>Text 类型：</strong><br>| 数据类型         | 描述                                                         |<br>| —————- | ———————————————————— |<br>| CHAR(size)       | 保存固定长度的字符串（可包含字母、数字以及特殊字符）。在括号中指定字符串的长度最多 255 个字符。 |<br>| VARCHAR(size)    | 保存可变长度的字符串（可包含字母、数字以及特殊字符）。在括号中指定字符串的最大长度最多 255 个字符。<strong>注释：</strong>如果值的长度大于 255，则被转换为 TEXT 类型。 |<br>| TINYTEXT         | 存放最大长度为 255 个字符的字符串。                          |<br>| TEXT             | 存放最大长度为 65,535 个字符的字符串。                       |<br>| BLOB             | 用于 BLOBs（Binary Large OBjects）。存放最多 65,535 字节的数据。 |<br>| MEDIUMTEXT       | 存放最大长度为 16,777,215 个字符的字符串。                   |<br>| MEDIUMBLOB       | 用于 BLOBs（Binary Large OBjects）。存放最多 16,777,215 字节的数据。 |<br>| LONGTEXT         | 存放最大长度为 4,294,967,295 个字符的字符串。                |<br>| LONGBLOB         | 用于 BLOBs (Binary Large OBjects)。存放最多 4,294,967,295 字节的数据。 |<br>| ENUM(x,y,z,etc.) | 允许您输入可能值的列表。可以在 ENUM 列表中列出最大 65535 个值。如果列表中不存在插入的值，则插入空值。<strong>注释：</strong>这些值是按照您输入的顺序排序的。可以按照此格式输入可能的值：     ENUM(‘X’,’Y’,’Z’) |<br>| SET              | 与 ENUM 类似，不同的是，SET 最多只能包含 64 个列表项且 SET 可存储一个以上的选择。 |</p>\n<p><strong>Number 类型：</strong><br>| 数据类型        | 描述                                                         |<br>| ————— | ———————————————————— |<br>| TINYINT(size)   | 带符号-128到127 ，无符号0到255，占位1Byte                            |<br>| SMALLINT(size)  | 带符号范围-32768到32767，无符号0到65535, size 默认为 6。占位2Byte |<br>| MEDIUMINT(size) | 带符号范围-8388608到8388607，无符号的范围是0到16777215。size 默认为9，占位3Byte|<br>| INT(size)       | 带符号范围-2147483648到2147483647，无符号的范围是0到4294967295。 size 默认为 11，占位4Byte |<br>| BIGINT(size)    | 带符号的范围是-9223372036854775808到9223372036854775807，无符号的范围是0到18446744073709551615。size 默认为 20，占位8Byte |<br>| FLOAT(size,d)   | 带有浮动小数点的小数字。在 size 参数中规定显示最大位数。在 d 参数中规定小数点右侧的最大位数。 |<br>| DOUBLE(size,d)  | 带有浮动小数点的大数字。在 size 参数中规显示定最大位数。在 d 参数中规定小数点右侧的最大位数。 |<br>| DECIMAL(size,d) | 作为字符串存储的 DOUBLE 类型，允许固定的小数点。在 size 参数中规定显示最大位数。在 d 参数中规定小数点右侧的最大位数。 |</p>\n<p><strong>Date 类型：</strong><br>| 数据类型  | 描述                                                         |<br>| ——— | ———————————————————— |<br>| DATE      | 日期。格式：YYYY-MM-DD  <strong>注释：</strong>支持的范围是从 ‘1000-01-01’ 到 ‘9999-12-31’ |<br>| DATETIME  | *日期和时间的组合。格式：YYYY-MM-DD HH:MM:SS  <strong>注释：</strong>支持的范围是从 ‘1000-01-01 00:00:00’ 到 ‘9999-12-31 23:59:59’ |<br>| TIMESTAMP | 时间戳TIMESTAMP 值使用 Unix 纪元(‘1970-01-01 00:00:00’ UTC) 至今的秒数来存储(32位)。格式：YYYY-MM-DD HH:MM:SS  <strong>注释：</strong>支持的范围是从 ‘1970-01-01 00:00:01’ UTC 到 ‘2038-01-09 03:14:07’ UTC |<br>| TIME      | 时间。格式：HH:MM:SS  <strong>注释：</strong>支持的范围是从 ‘-838:59:59’ 到 ‘838:59:59’ |<br>| YEAR      | 2 位或 4 位格式的年。     <strong>注释：</strong>4 位格式所允许的值：1901 到 2155。2 位格式所允许的值：70 到 69，表示从 1970 到 2069。 |</p>\n<p><strong>数据库类型总结</strong></p>\n<ul>\n<li>整型:tinyint , smallint , int , bigint;</li>\n<li>字符串:char, varchar;</li>\n<li>浮点数:float, double;</li>\n<li>日期:date , time , datetime , timestamp;</li>\n<li>文本类型: tinytext , text , blob(二进制) , mediumtext , mediumblob , longtext , longblob;</li>\n</ul>\n<p>补充说明:</p>\n<ul>\n<li>注1: tinyint 比 int 可能有哪些好处？<br>节省存储空间 （如果表的规模很小，则忽略）<br>加快传输效率 （如果MySQL同机部署，则忽略）<br>加快数据备份的速度 （如果数据备份不常发生，则忽略）</li>\n</ul>\n<p><br></p>\n<h5 id=\"SQL-Server-数据类型\"><a href=\"#SQL-Server-数据类型\" class=\"headerlink\" title=\"SQL Server 数据类型\"></a>SQL Server 数据类型</h5><p><strong>String 类型：</strong></p>\n<table>\n<thead>\n<tr>\n<th>数据类型</th>\n<th>描述</th>\n<th>存储</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>char(n)</td>\n<td>固定长度的字符串。最多 8,000 个字符。</td>\n<td>Defined width</td>\n</tr>\n<tr>\n<td>varchar(n)</td>\n<td>可变长度的字符串。最多 8,000 个字符。</td>\n<td>2 bytes + number of chars</td>\n</tr>\n<tr>\n<td>varchar(max)</td>\n<td>可变长度的字符串。最多 1,073,741,824 个字符。</td>\n<td>2 bytes + number of chars</td>\n</tr>\n<tr>\n<td>text</td>\n<td>可变长度的字符串。最多 2GB 文本数据。</td>\n<td>4 bytes + number of chars</td>\n</tr>\n<tr>\n<td>nchar</td>\n<td>固定长度的 Unicode 字符串。最多 4,000 个字符。</td>\n<td>Defined width x 2</td>\n</tr>\n<tr>\n<td>nvarchar</td>\n<td>可变长度的 Unicode 字符串。最多 4,000 个字符。</td>\n<td></td>\n</tr>\n<tr>\n<td>nvarchar(max)</td>\n<td>可变长度的 Unicode 字符串。最多 536,870,912 个字符。</td>\n<td></td>\n</tr>\n<tr>\n<td>ntext</td>\n<td>可变长度的 Unicode 字符串。最多 2GB 文本数据。</td>\n<td></td>\n</tr>\n<tr>\n<td>bit</td>\n<td>允许 0、1 或 NULL</td>\n<td></td>\n</tr>\n<tr>\n<td>binary(n)</td>\n<td>固定长度的二进制字符串。最多 8,000 字节。</td>\n<td></td>\n</tr>\n<tr>\n<td>varbinary</td>\n<td>可变长度的二进制字符串。最多 8,000 字节。</td>\n<td></td>\n</tr>\n<tr>\n<td>varbinary(max)</td>\n<td>可变长度的二进制字符串。最多 2GB。</td>\n<td></td>\n</tr>\n<tr>\n<td>image</td>\n<td>可变长度的二进制字符串。最多 2GB。</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Number 类型：</strong></p>\n<table>\n<thead>\n<tr>\n<th>数据类型</th>\n<th>描述</th>\n<th>存储</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>tinyint</td>\n<td>允许从 0 到 255 的所有数字。</td>\n<td>1 字节</td>\n</tr>\n<tr>\n<td>smallint</td>\n<td>允许介于 -32,768 与 32,767 的所有数字。</td>\n<td>2 字节</td>\n</tr>\n<tr>\n<td>int</td>\n<td>允许介于 -2,147,483,648 与 2,147,483,647 的所有数字。</td>\n<td>4 字节</td>\n</tr>\n<tr>\n<td>bigint</td>\n<td>允许介于 -9,223,372,036,854,775,808 与 9,223,372,036,854,775,807 之间的所有数字。</td>\n<td>8 字节</td>\n</tr>\n<tr>\n<td>decimal(p,s)</td>\n<td>固定精度和比例的数字。 允许从 -10^38 +1 到 10^38 -1 之间的数字。     <br />p 参数指示可以存储的最大位数（小数点左侧和右侧）。p 必须是 1 到 38 之间的值。默认是 18。     <br />s 参数指示小数点右侧存储的最大位数。s 必须是 0 到 p 之间的值。默认是 0。</td>\n<td>5-17 字节</td>\n</tr>\n<tr>\n<td>numeric(p,s)</td>\n<td>固定精度和比例的数字。允许从 -10^38 +1 到 10^38 -1 之间的数字。     <br />p 参数指示可以存储的最大位数（小数点左侧和右侧）。p 必须是 1 到 38 之间的值。默认是 18。<br />s 参数指示小数点右侧存储的最大位数。s 必须是 0 到 p 之间的值。默认是 0。</td>\n<td>5-17 字节</td>\n</tr>\n<tr>\n<td>smallmoney</td>\n<td>介于 -214,748.3648 与 214,748.3647 之间的货币数据。</td>\n<td>4 字节</td>\n</tr>\n<tr>\n<td>money</td>\n<td>介于 -922,337,203,685,477.5808 与 922,337,203,685,477.5807 之间的货币数据。</td>\n<td>8 字节</td>\n</tr>\n<tr>\n<td>float(n)</td>\n<td>从 -1.79E + 308 到 1.79E + 308 的浮动精度数字数据。<br />n 参数指示该字段保存 4 字节还是 8 字节。float(24) 保存 4 字节，而 float(53) 保存 8 字节n 的默认值是 53。</td>\n<td>4 或 8 字节</td>\n</tr>\n<tr>\n<td>real</td>\n<td>从 -3.40E + 38 到 3.40E + 38 的浮动精度数字数据。</td>\n<td>4 字节</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Date 类型：</strong></p>\n<table>\n<thead>\n<tr>\n<th>数据类型</th>\n<th>描述</th>\n<th>存储</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>datetime</td>\n<td>从 1753 年 1 月 1 日 到 9999 年 12 月 31 日，精度为 3.33 毫秒。</td>\n<td>8 字节</td>\n</tr>\n<tr>\n<td>datetime2</td>\n<td>从 1753 年 1 月 1 日 到 9999 年 12 月 31 日，精度为 100 纳秒。</td>\n<td>6-8 字节</td>\n</tr>\n<tr>\n<td>smalldatetime</td>\n<td>从 1900 年 1 月 1 日 到 2079 年 6 月 6 日，精度为 1 分钟。</td>\n<td>4 字节</td>\n</tr>\n<tr>\n<td>date</td>\n<td>仅存储日期。从 0001 年 1 月 1 日 到 9999 年 12 月 31 日。</td>\n<td>3 bytes</td>\n</tr>\n<tr>\n<td>time</td>\n<td>仅存储时间。精度为 100 纳秒。</td>\n<td>3-5 字节</td>\n</tr>\n<tr>\n<td>datetimeoffset</td>\n<td>与 datetime2 相同，外加时区偏移。</td>\n<td>8-10 字节</td>\n</tr>\n<tr>\n<td>timestamp</td>\n<td>存储唯一的数字，每当创建或修改某行时，该数字会更新。timestamp 值基于内部时钟，不对应真实时间。每个表只能有一个 timestamp 变量。</td>\n</tr>\n</tbody>\n</table>\n<p><strong>其他数据类型：</strong></p>\n<table>\n<thead>\n<tr>\n<th>数据类型</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>sql_variant</td>\n<td>存储最多 8,000 字节不同数据类型的数据，除了 text、ntext 以及 timestamp。</td>\n</tr>\n<tr>\n<td>uniqueidentifier</td>\n<td>存储全局唯一标识符 (GUID)。</td>\n</tr>\n<tr>\n<td>xml</td>\n<td>存储 XML 格式化数据。最多 2GB。</td>\n</tr>\n<tr>\n<td>cursor</td>\n<td>存储对用于数据库操作的指针的引用。</td>\n</tr>\n<tr>\n<td>table</td>\n<td>存储结果集，供稍后处理。</td>\n</tr>\n</tbody>\n</table>\n<p>注意事项:</p>\n<ul>\n<li><p>注:在不同的数据库中，同一种数据类型可能有不同的名称。即使名称相同，尺寸和其他细节也可能不同！</p>\n</li>\n<li><p>注:MySQL的NUMBER类型中的 size 代表的并不是存储在数据库中的具体的长度，如 int(4) 并不是只能存储4个长度的数字。实际上int(size)所占多少存储空间并无任何关系。int(3)、int(4)、int(8) 在磁盘上都是占用 4 btyes 的存储空间就是显示的长度不一样而已 ；例如：int的值为10 （指定zerofill）</p>\n</li>\n<li><p><code>`</code><br>int（9）显示结果为000000010<br>int（3）显示结果为010</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">- 注:MySQL中即便 DATETIME 和 TIMESTAMP 返回相同的格式，它们的工作方式很不同。在 INSERT 或 UPDATE  查询中，TIMESTAMP 自动把自身设置为当前的日期和时间。TIMESTAMP 也接受不同的格式，比如 &#96;YYYYMMDDHHMMSS&#96;；</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;br&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">##### NULL 值</span><br><span class=\"line\">描述:NULL 值代表遗漏的未知数据,默认地&#96;表的列可以存放 NULL 值&#96;当我们不向该列添加值的情况下插入新记录或者更新已有记录, 注意前提是我们CONSTRAINT约束没有设置成为NOT NULL。</span><br><span class=\"line\"></span><br><span class=\"line\">基础示例:</span><br><span class=\"line\">&#96;&#96;&#96;SQL</span><br><span class=\"line\">-- SQL IS NULL 带有 NULL 值的记录</span><br><span class=\"line\">SELECT LastName,FirstName,Address FROM Persons WHERE Address IS NULL</span><br><span class=\"line\"></span><br><span class=\"line\">-- SQL IS NOT NULL 不带有 NULL 值的记录</span><br><span class=\"line\">SELECT LastName,FirstName,Address FROM Persons WHERE Address IS NOT NULL</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>注意事项:</p>\n<ul>\n<li>注:无法比较 NULL 和 0 它们是不等价的。</li>\n<li>注:在笔记时候无法使用比较运算符来测试 NULL 值比如<code>=、&lt; 或 &lt;&gt;</code>, 必须使用 IS NULL 和 IS NOT NULL 操作符。</li>\n</ul>\n<p>SELECT name,age,count(*),age FROM tb_stu WHERE age=’19’ group by date;</p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Database","path":"api/categories/Database.json"}],"tags":[{"name":"MySQL","path":"api/tags/MySQL.json"}]}