{"title":"JAVA入门学习十一","slug":"编程世界/Java/JAVA入门学习十一","date":"2019-10-23T02:34:30.000Z","updated":"2023-01-31T02:29:10.672Z","url":"2019/10-23-294.html","path":"api/articles/2019/10-23-294.html.json","covers":["https://img.weiyigeek.top/2019/1/20191031115251.png","https://img.weiyigeek.top/2019/1/20191101132704.png","https://img.weiyigeek.top/2019/1/20191102202843.png","https://img.weiyigeek.top/2019/1/20191102210855.png","https://img.weiyigeek.top/2019/1/20191102221610.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h4 id=\"0x00-网络编程\"><a href=\"#0x00-网络编程\" class=\"headerlink\" title=\"0x00 网络编程\"></a>0x00 网络编程</h4><h5 id=\"1-介绍概述\"><a href=\"#1-介绍概述\" class=\"headerlink\" title=\"1) 介绍概述\"></a>1) 介绍概述</h5><p><strong>1.概述</strong></p>\n<ul>\n<li>计算机网络:是指将地理位置不同的具有独立功能的多台计算机及其外部设备，通过通信线路连接起来，在网络操作系统，网络管理软件及网络通信协议的管理和协调下，实现资源共享和信息传递的计算机系统。</li>\n<li>网络编程:就是用来实现网络互连的不同计算机上运行的程序间可以进行数据交换。</li>\n</ul>\n<p>网络编程三要素:IP / 端口(Port) / 协议(protocol)<br>补充知识: 3G/4G 通过信号塔，有的信号塔连接的是卫星通信;</p>\n<p><br></p>\n<p><strong>2.IP概述</strong></p>\n<ul>\n<li>每个设备在网络中的唯一标识,每台网络终端在网络中都有一个独立的地址，我们在网络中传输数据就是使用这个地址。 </li>\n<li>本地回路地址：127.0.0.1 255.255.255.255是广播地址</li>\n<li>IPv4：4个字节组成，4个0-255。大概42亿，30亿都在北美，亚洲4亿。2011年初已经用尽。 </li>\n<li>IPv6：8组，每组4个16进制数。</li>\n<li>1a2b:0000:aaaa:0000:0000:0000:aabb:1f2f</li>\n<li>1a2b::aaaa:0000:0000:0000:aabb:1f2f</li>\n<li>1a2b:0000:aaaa::aabb:1f2f</li>\n<li>1a2b:0000:aaaa::0000:aabb:1f2f</li>\n<li>1a2b:0000:aaaa:0000::aabb:1f2f</li>\n</ul>\n<p><br></p>\n<p><strong>3.端口号概述</strong></p>\n<ul>\n<li>每个程序在设备上的唯一标识,每个网络程序都需要绑定一个端口号，传输数据的时候除了确定发到哪台机器上，还要明确发到哪个程序。<code>类比于您在什么年级/什么班/位置号</code></li>\n<li>端口号范围从0-65535 (Windows )</li>\n<li>编写网络应用就需要绑定一个端口号，尽量使用1024以上的，1024以下的基本上都被系统程序占用了。</li>\n</ul>\n<p>常用端口:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* mysql: 3306</span><br><span class=\"line\">* oracle: 1521</span><br><span class=\"line\">* web: 80</span><br><span class=\"line\">* tomcat: 8080</span><br><span class=\"line\">* QQ: 4000</span><br><span class=\"line\">* feiQ: 2425</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>4.协议概述</strong><br>为计算机网络中进行数据交换而建立的规则、标准或约定的集合。</p>\n<ul>\n<li>UDP<ul>\n<li>面向无连接，数据不安全，速度快。不区分客户端与服务端。 (发短信)</li>\n</ul>\n</li>\n<li>TCP<ul>\n<li>面向连接（三次握手），数据安全，速度略低。分为客户端和服务端。(打电话)</li>\n<li>三次握手: 客户端先向服务端发起请求, 服务端响应请求, 传输数据</li>\n</ul>\n</li>\n</ul>\n<hr>\n\n<h5 id=\"2-Socket通信原理\"><a href=\"#2-Socket通信原理\" class=\"headerlink\" title=\"2) Socket通信原理\"></a>2) Socket通信原理</h5><p>Socket套接字概述：网络上具有唯一标识的IP地址和端口号组合在一起才能构成唯一能识别的标识符套接字。</p>\n<ul>\n<li>通信的两端都有Socket。</li>\n<li>网络通信其实就是Socket间的通信。</li>\n<li>数据在两个Socket间通过IO流传输。</li>\n</ul>\n<p>Socket在应用程序中创建，<code>通过一种绑定机制与驱动程序建立关系，告诉自己所对应的IP和port</code>。可以类比为码头和集装箱以及货运船只;</p>\n<p><br></p>\n<h5 id=\"3-UDP传输与优化\"><a href=\"#3-UDP传输与优化\" class=\"headerlink\" title=\"3) UDP传输与优化\"></a>3) UDP传输与优化</h5><p>使用的类:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class DatagramSocket extends Object implements Closeable  <span class=\"comment\">#这类代表一个发送和接收数据包的插座。 </span></span><br><span class=\"line\">public final class DatagramPacket extends Object <span class=\"comment\">#这类表示一个数据报包。</span></span><br></pre></td></tr></table></figure><br><br></p>\n<p>UDP-Socket构建发送流程:<br>1.发送Send</p>\n<ul>\n<li>创建DatagramSocket, 随机端口号</li>\n<li>创建DatagramPacket, 指定数据, 长度, 地址, 端口</li>\n<li>使用DatagramSocket.send()发送DatagramPacket</li>\n<li>关闭DatagramSocket.close()</li>\n</ul>\n<p>2.接收Receive</p>\n<ul>\n<li>创建DatagramSocket, 指定端口号</li>\n<li>创建DatagramPacket, 指定数组, 长度</li>\n<li>使用DatagramSocket.receive接收DatagramPacket</li>\n<li>关闭DatagramSocket.close()</li>\n<li>从DatagramPacket中获取数据</li>\n</ul>\n<p>3.接收方获取ip和端口号<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String ip &#x3D; packet.getAddress().getHostAddress();</span><br><span class=\"line\">int port &#x3D; packet.getPort();</span><br></pre></td></tr></table></figure><br><br></p>\n<p>实际案例1:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 发送端1:</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> com.weiyigeek.net;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.DatagramPacket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.DatagramSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.InetAddress;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo1_UDPSend</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 1.网络编程之UDP协议 - socket 传输优化（发送端）</span></span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);  <span class=\"comment\">//创建键盘录入对象</span></span><br><span class=\"line\">    DatagramSocket udpsocket = <span class=\"keyword\">new</span> DatagramSocket(); <span class=\"comment\">//创建一个UDP-socket相当于是一个码头</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">      String str = sc.nextLine();  <span class=\"comment\">//接收我们录入的字符串，如果等于quit则退出循环 相当于是货物</span></span><br><span class=\"line\">      <span class=\"comment\">//创建Packet相当于集装箱</span></span><br><span class=\"line\">      DatagramPacket pt = <span class=\"keyword\">new</span> DatagramPacket(str.getBytes(), str.getBytes().length,InetAddress.getByName(<span class=\"string\">\"127.0.0.1\"</span>), <span class=\"number\">8888</span>);</span><br><span class=\"line\">      udpsocket.send(pt); <span class=\"comment\">//从socket通道将数据发送出去,从码头发送货物;</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(str.equals(<span class=\"string\">\"quit\"</span>))  <span class=\"comment\">//双方都停止通信</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    udpsocket.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//接收端 - 接收端一般先启动</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> com.weiyigeek.net;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.DatagramPacket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.DatagramSocket;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo1_UDPReceive</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//2.Socket 通信接收端</span></span><br><span class=\"line\">    DatagramSocket udpsocket = <span class=\"keyword\">new</span> DatagramSocket(<span class=\"number\">8888</span>);  <span class=\"comment\">//创建socket相当于接收货物的码头</span></span><br><span class=\"line\">    DatagramPacket udppacket = <span class=\"keyword\">new</span> DatagramPacket(<span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>], <span class=\"number\">1024</span>); <span class=\"comment\">//创建接收的集装箱</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">      udpsocket.receive(udppacket); <span class=\"comment\">//接收货物实际就是数据</span></span><br><span class=\"line\">      <span class=\"keyword\">byte</span>[] arr = udppacket.getData(); <span class=\"comment\">// 获取数据</span></span><br><span class=\"line\">      <span class=\"keyword\">int</span> len = udppacket.getLength(); <span class=\"comment\">//获取有效的字节个数</span></span><br><span class=\"line\">      String ip = udppacket.getAddress().getHostAddress();  <span class=\"comment\">//获取IP地址</span></span><br><span class=\"line\">      <span class=\"keyword\">int</span> port = udppacket.getPort(); <span class=\"comment\">//获取端口号</span></span><br><span class=\"line\">      System.out.println(ip+<span class=\"string\">\":\"</span> + port + <span class=\"string\">\" = \"</span> + <span class=\"keyword\">new</span> String(arr,<span class=\"number\">0</span>,len));</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(<span class=\"keyword\">new</span> String(arr,<span class=\"number\">0</span>,len).equals(<span class=\"string\">\"quit\"</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    udpsocket.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>执行结果:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">whoami</span><br><span class=\"line\">Iloveyou</span><br><span class=\"line\">WeiyiGeek</span><br><span class=\"line\">quit  <span class=\"comment\">#非常注意最有一个quit 夹杂有其他的不可见符号</span></span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20191031115251.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p><br><br>实际案例2:多线程实现一个窗口接和发数据<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.weiyigeek.net;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.DatagramPacket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.DatagramSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.InetAddress;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo2_ReceSend</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 多线程实现一个窗口了接和收信息</span></span><br><span class=\"line\">    <span class=\"keyword\">new</span> receive().start();</span><br><span class=\"line\">    <span class=\"keyword\">new</span> send().start();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//接收端线程</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">receive</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      DatagramSocket ss = <span class=\"keyword\">new</span> DatagramSocket(<span class=\"number\">8888</span>);  <span class=\"comment\">//监听端口</span></span><br><span class=\"line\">      DatagramPacket pt = <span class=\"keyword\">new</span> DatagramPacket(<span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>], <span class=\"number\">1024</span>);</span><br><span class=\"line\">      <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        ss.receive(pt);</span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] arr = pt.getData();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> len = pt.getLength();</span><br><span class=\"line\">        String ip = pt.getAddress().getHostAddress();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> port = pt.getPort();</span><br><span class=\"line\">        String msg = <span class=\"keyword\">new</span> String(arr,<span class=\"number\">0</span>,len);</span><br><span class=\"line\">        System.out.println(ip + <span class=\"string\">\":\"</span> + port + <span class=\"string\">\"\\n\"</span> + msg);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(msg.equals(<span class=\"string\">\"quit\"</span>)) &#123;</span><br><span class=\"line\">          System.out.println(<span class=\"string\">\"接收端停止-Recevice Stop\"</span>);</span><br><span class=\"line\">          <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;\t\t\t\t\t</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      ss.close();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// <span class=\"doctag\">TODO:</span> handle exception</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//发送端线程</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">send</span> <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      DatagramSocket ss = <span class=\"keyword\">new</span> DatagramSocket();</span><br><span class=\"line\">      <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">        String msg = sc.nextLine();</span><br><span class=\"line\">        DatagramPacket dp = <span class=\"keyword\">new</span> DatagramPacket(msg.getBytes(), msg.getBytes().length, InetAddress.getByName(<span class=\"string\">\"127.0.0.1\"</span>), <span class=\"number\">8888</span>);</span><br><span class=\"line\">        ss.send(dp);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(msg.equals(<span class=\"string\">\"quit\"</span>)) &#123;</span><br><span class=\"line\">          System.out.println(<span class=\"string\">\"发送端停止-Send Stop\"</span>);</span><br><span class=\"line\">          <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      ss.close();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span>(Exception e) &#123;</span><br><span class=\"line\">      System.out.println(e.getMessage());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>执行结果:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">quit</span><br><span class=\"line\">发送端停止-Send Stop</span><br><span class=\"line\"><span class=\"number\">127.0</span>.0.1:<span class=\"number\">51090</span></span><br><span class=\"line\">quit</span><br><span class=\"line\">接收端停止-Recevice Stop</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"4-TCP传输与优化\"><a href=\"#4-TCP传输与优化\" class=\"headerlink\" title=\"4) TCP传输与优化\"></a>4) TCP传输与优化</h5><p><em>1.客户端Client</em></p>\n<ul>\n<li>创建Socket连接服务端(指定ip地址,端口号)通过ip地址找对应的服务器</li>\n<li>调用Socket的getInputStream()和getOutputStream()方法获取和服务端相连的IO流</li>\n<li>输入流可以<code>读取服务端输出流写出的数据</code></li>\n<li>输出流可以<code>写出数据到服务端的输入流</code></li>\n</ul>\n<p><em>2.服务端Server</em></p>\n<ul>\n<li>创建ServerSocket(需要指定端口号)</li>\n<li>调用ServerSocket的accept()方法接收一个客户端请求，得到一个Socket</li>\n<li>调用Socket的getInputStream()和getOutputStream()方法获取和客户端相连的IO流</li>\n<li>输出流可以<code>写出数据到客户端的输入流</code></li>\n<li>输入流可以<code>读取客户端输出流写出的数据</code></li>\n</ul>\n<p><em>CS对应表:</em><br>客户端 C | 服务端 S<br>—|—<br>getInputStream | getOutputStream<br>getOutoutStream | getInputStream</p>\n<p>实际案例：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//########## Client ############</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> com.weiyigeek.net;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.OutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo3_TcpSend</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//1.tcp Socket 客户端</span></span><br><span class=\"line\">    Socket client = <span class=\"keyword\">new</span> Socket(<span class=\"string\">\"127.0.0.1\"</span>,<span class=\"number\">9999</span>); <span class=\"comment\">//创建Socket指定ip地址和端口号</span></span><br><span class=\"line\">    InputStream is = client.getInputStream(); <span class=\"comment\">// 获取服务端发送的输入流信息</span></span><br><span class=\"line\">    OutputStream os = client.getOutputStream(); <span class=\"comment\">//客户端向服务端发送信息</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//先接送服务端信息</span></span><br><span class=\"line\">    <span class=\"keyword\">byte</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len = is.read(arr);</span><br><span class=\"line\">    System.out.println(<span class=\"keyword\">new</span> String(arr,<span class=\"number\">0</span>,len));</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//在向服务端发送信息</span></span><br><span class=\"line\">    os.write(<span class=\"string\">\"我是客户端发来得消息!\"</span>.getBytes());</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//关闭客户端Socket</span></span><br><span class=\"line\">    client.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//############ server ############</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> com.weiyigeek.net;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.OutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo3_TcpReiceve</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//2.Server服务端TCP socket 案例</span></span><br><span class=\"line\">    ServerSocket ss = <span class=\"keyword\">new</span> ServerSocket(<span class=\"number\">9999</span>); <span class=\"comment\">//服务端监听端口</span></span><br><span class=\"line\">    Socket socket = ss.accept(); <span class=\"comment\">//接受客服端得请求</span></span><br><span class=\"line\">    InputStream is = socket.getInputStream();  <span class=\"comment\">//获取客户端得输入流</span></span><br><span class=\"line\">    OutputStream os = socket.getOutputStream(); <span class=\"comment\">//客户端得输出流</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//向客户端发送信息</span></span><br><span class=\"line\">    os.write(<span class=\"string\">\"这是从服务端发送得信息\"</span>.getBytes());</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//打印出接收客户端发送得信息</span></span><br><span class=\"line\">    <span class=\"keyword\">byte</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len = is.read(arr);</span><br><span class=\"line\">    System.out.println(<span class=\"keyword\">new</span> String(arr,<span class=\"number\">0</span>,len));</span><br><span class=\"line\">    socket.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20191101132704.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p><br></p>\n<p>实际案例: TCP服务端多线程及其优化<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//客户端 - Client</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> com.weiyigeek.net;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.PrintStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo3_TcpSend</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">    Socket socket = <span class=\"keyword\">new</span> Socket(<span class=\"string\">\"127.0.0.1\"</span>, <span class=\"number\">8888</span>);  <span class=\"comment\">//创建客户端连接到服务端的Tcp-socket = 港口</span></span><br><span class=\"line\">    <span class=\"comment\">//优化1:需要读的时候是字符串，写的时候也是字符串</span></span><br><span class=\"line\">    <span class=\"comment\">//优化2:服务器端应该是多线程的</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//这时候我们将一个字节流转换成为了字符流 </span></span><br><span class=\"line\">    BufferedReader br = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(socket.getInputStream())); <span class=\"comment\">//获取服务端发送的信息,读取默认是以\\r\\n为结束符号</span></span><br><span class=\"line\">    <span class=\"comment\">//这里不建议使用BufferedWriter 一行一行写</span></span><br><span class=\"line\">    PrintStream ps = <span class=\"keyword\">new</span> PrintStream(socket.getOutputStream()); <span class=\"comment\">//PrintStream 中有写入换行的方法并且以\\r\\n为结束符号;</span></span><br><span class=\"line\">    <span class=\"comment\">//读取服务端的消息并且输出消息</span></span><br><span class=\"line\">    System.out.println(br.readLine());</span><br><span class=\"line\">    ps.println(<span class=\"string\">\"2.我是客户端的反馈信息!\"</span>);</span><br><span class=\"line\">    System.out.println(br.readLine());</span><br><span class=\"line\">    ps.println(<span class=\"string\">\"4.客户端的通信结束!\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">//关闭客户端的socket</span></span><br><span class=\"line\">    socket.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//服务端</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> com.weiyigeek.net;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.PrintStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo3_TcpReceive</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> ServerSocket ss;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    ss = <span class=\"keyword\">new</span> ServerSocket(<span class=\"number\">8888</span>);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">final</span> Socket socket = ss.accept(); <span class=\"comment\">// 循环的接收客户端的信息</span></span><br><span class=\"line\">      <span class=\"keyword\">new</span> Thread() &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">          <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            BufferedReader br = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(socket.getInputStream())); <span class=\"comment\">//接收的字节流转换成为字符流</span></span><br><span class=\"line\">            PrintStream ps = <span class=\"keyword\">new</span> PrintStream(socket.getOutputStream()); <span class=\"comment\">//向客服端发送信息的对象</span></span><br><span class=\"line\">            ps.println(<span class=\"string\">\"1.我是服务端发出的信息!\"</span>); <span class=\"comment\">//注意这里不能采用print否则会一直卡输入界面，这是由于没有\\r\\n，客户端不知道什么时候结束就一直在读</span></span><br><span class=\"line\">            System.out.println(br.readLine());</span><br><span class=\"line\">            ps.println(<span class=\"string\">\"3.服务端请求客户端关闭通信\"</span>);</span><br><span class=\"line\">            System.out.println(br.readLine());</span><br><span class=\"line\">            socket.close();</span><br><span class=\"line\">          &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;.start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20191102202843.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p><br></p>\n<h5 id=\"5-网络编程练习\"><a href=\"#5-网络编程练习\" class=\"headerlink\" title=\"5) 网络编程练习\"></a>5) 网络编程练习</h5><p><strong>练习1:</strong><br>客户端向服务器写字符串(键盘录入),服务器(多线程)将字符串反转后写回,客户端再次读取到是反转后的字符串;</p>\n<p>客户端:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.weiyigeek.net;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.PrintStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo4_Client</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception, IOException </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//需求:客户端向服务器写字符串(键盘录入),服务器(多线程)将字符串反转后写回,客户端再次读取到是反转后的字符串</span></span><br><span class=\"line\">    <span class=\"comment\">//1.服务端创建socket (码头)</span></span><br><span class=\"line\">    Socket socket = <span class=\"keyword\">new</span> Socket(<span class=\"string\">\"127.0.0.1\"</span>,<span class=\"number\">8888</span>); <span class=\"comment\">//创建客端端连接的服务端的IP:prot</span></span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);  <span class=\"comment\">//创建键盘录入对象</span></span><br><span class=\"line\">    BufferedReader br = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(socket.getInputStream())); <span class=\"comment\">//获取输入流</span></span><br><span class=\"line\">    PrintStream ps = <span class=\"keyword\">new</span> PrintStream(socket.getOutputStream()); <span class=\"comment\">//获取输出流</span></span><br><span class=\"line\">    System.out.print(<span class=\"string\">\"请输入您要发送的字符串:\"</span>);</span><br><span class=\"line\">    ps.println(sc.nextLine() ); <span class=\"comment\">// 向服务端发送信息</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"服务端翻转后的字符串:\"</span> + br.readLine());</span><br><span class=\"line\">    socket.close();  <span class=\"comment\">//关闭socket - 实际开发中非常重要 br / ps 也随之而关闭</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>服务端:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.weiyigeek.net;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.PrintStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo4_Server</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception, IOException </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//创建 服务端  socket</span></span><br><span class=\"line\">    ServerSocket ss = <span class=\"keyword\">new</span> ServerSocket(<span class=\"number\">8888</span>);</span><br><span class=\"line\">    <span class=\"comment\">//不断的接收服务端的请求</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">      <span class=\"keyword\">final</span> Socket sc = ss.accept(); <span class=\"comment\">//接收到客端发送的信息</span></span><br><span class=\"line\">      <span class=\"comment\">//启动服务端多线程</span></span><br><span class=\"line\">      <span class=\"keyword\">new</span> Thread() &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">          <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            BufferedReader br = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(sc.getInputStream())); <span class=\"comment\">//获取输入流</span></span><br><span class=\"line\">            PrintStream ps = <span class=\"keyword\">new</span> PrintStream(sc.getOutputStream()); <span class=\"comment\">//获取输出流</span></span><br><span class=\"line\">            StringBuffer sendMsg = <span class=\"keyword\">new</span> StringBuffer(br.readLine()).reverse(); <span class=\"comment\">//接收客户端的字符串并且进行翻转</span></span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"服务端翻转客户端发送的字符串:\"</span> + sendMsg);</span><br><span class=\"line\">            ps.println(sendMsg); <span class=\"comment\">//向客服端发送翻转轴的字符串</span></span><br><span class=\"line\">            sc.close();  <span class=\"comment\">//关键接收客端端的socket</span></span><br><span class=\"line\">          &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">          &#125;  </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;.start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20191102210855.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p><br></p>\n<p><strong>练习2:</strong><br>客户端向服务器上传文件</p>\n<p>客户端:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.weiyigeek.net;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.PrintStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo5_Client</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception, IOException </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//(1) 客户端流程</span></span><br><span class=\"line\">    <span class=\"comment\">//1.录入上传文件的路径，并且验证该路径是否存在</span></span><br><span class=\"line\">    File upFile = getFile();</span><br><span class=\"line\">    <span class=\"comment\">//2.发送文件名称在服务端</span></span><br><span class=\"line\">    Socket client = <span class=\"keyword\">new</span> Socket(<span class=\"string\">\"127.0.0.1\"</span>,<span class=\"number\">9999</span>);</span><br><span class=\"line\">    BufferedReader br = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(client.getInputStream())); <span class=\"comment\">// 获取输入流</span></span><br><span class=\"line\">    PrintStream ps = <span class=\"keyword\">new</span> PrintStream(client.getOutputStream()); <span class=\"comment\">//获取输出流</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"正在向服务端发送将要上传的文件名称:\"</span> + upFile.getName());</span><br><span class=\"line\">    ps.println(upFile.getName());</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//6.接收结果，判断服务端是否存在该文件</span></span><br><span class=\"line\">     String res = br.readLine();</span><br><span class=\"line\">     System.out.println(res);</span><br><span class=\"line\">     <span class=\"keyword\">if</span>(res.equals(<span class=\"string\">\"Found\"</span>)) &#123;</span><br><span class=\"line\">       System.out.println(<span class=\"string\">\"服务端已经存在该文件请不要重新上传,即将关闭Client Socket!\"</span>);</span><br><span class=\"line\">       client.close();</span><br><span class=\"line\">       <span class=\"keyword\">return</span>;</span><br><span class=\"line\">     &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">       System.out.println(<span class=\"string\">\"服务端不存在该文件正在上传！\"</span>);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">     <span class=\"comment\">//7.用字节流可以拷贝任何文件，使用FileInputStream读取文件并且写入到网络之中</span></span><br><span class=\"line\">     FileInputStream fis = <span class=\"keyword\">new</span> FileInputStream(upFile);</span><br><span class=\"line\">     <span class=\"keyword\">byte</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">8192</span>];</span><br><span class=\"line\">     <span class=\"keyword\">int</span> len;</span><br><span class=\"line\">     </span><br><span class=\"line\">     <span class=\"keyword\">while</span>((len = fis.read(arr)) != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">       <span class=\"comment\">//PrintStream 优点:可以写字符流也可以写字节流</span></span><br><span class=\"line\">       <span class=\"comment\">//BufferedWriter : 只可以写字符流</span></span><br><span class=\"line\">       ps.write(arr, <span class=\"number\">0</span>, len);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">     <span class=\"comment\">//关闭IO文件和socket</span></span><br><span class=\"line\">     fis.close();</span><br><span class=\"line\">     client.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> File <span class=\"title\">getFile</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in); <span class=\"comment\">//创建录入路径的对象</span></span><br><span class=\"line\">    System.out.print(<span class=\"string\">\"请输入您要上传的文件路径: \"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">      String line = sc.nextLine();</span><br><span class=\"line\">      File path = <span class=\"keyword\">new</span> File(line);</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(!path.exists()) &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"文件不存在请重新输入: \"</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (path.isDirectory())&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"您输入的路径是目录不是文件请重新输入: \"</span>);</span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> path;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>服务端:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.weiyigeek.net;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.PrintStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.ServerSocket;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.Socket;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo5_Server</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//(2) 服务端流程</span></span><br><span class=\"line\">    <span class=\"comment\">//3.创建多线程</span></span><br><span class=\"line\">    ServerSocket ss = <span class=\"keyword\">new</span> ServerSocket(<span class=\"number\">9999</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"服务器已启动绑定端口 : 9999 --- run\"</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//4.接收客服端的数据并读取文件名称</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">final</span> Socket res = ss.accept(); <span class=\"comment\">//接收客服端发送的信息</span></span><br><span class=\"line\">      <span class=\"comment\">//多线程实例</span></span><br><span class=\"line\">      <span class=\"keyword\">new</span> Thread() &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">          <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">//需要抽取出来字节流</span></span><br><span class=\"line\">            InputStream is = res.getInputStream(); </span><br><span class=\"line\">            BufferedReader br = <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(is)); <span class=\"comment\">// 获取输入流（字符流）</span></span><br><span class=\"line\">            PrintStream ps = <span class=\"keyword\">new</span> PrintStream(res.getOutputStream()); <span class=\"comment\">//获取输出流</span></span><br><span class=\"line\">            String fileName = br.readLine(); <span class=\"comment\">//读取发送的文件名</span></span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">//5.判断服务端里面文件是否存在将结果发送客户端</span></span><br><span class=\"line\">            File dir = <span class=\"keyword\">new</span> File(<span class=\"string\">\"update\"</span>);</span><br><span class=\"line\">            dir.mkdir();</span><br><span class=\"line\">            File file = <span class=\"keyword\">new</span> File(dir,fileName); <span class=\"comment\">//封装成为File对象</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(file.exists()) &#123;</span><br><span class=\"line\">              ps.println(<span class=\"string\">\"Found\"</span>); <span class=\"comment\">//服务端存在!</span></span><br><span class=\"line\">              res.close();</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              ps.println(<span class=\"string\">\"NotFound\"</span>); <span class=\"comment\">//服务端不存在！</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">//8.从网络中读取传输的文件数据,并且写入到本地之中</span></span><br><span class=\"line\">            FileOutputStream fos = <span class=\"keyword\">new</span> FileOutputStream(file);</span><br><span class=\"line\">            <span class=\"keyword\">byte</span>[] arr = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">8192</span>];</span><br><span class=\"line\">            <span class=\"keyword\">int</span> len;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>((len = is.read(arr)) != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">              fos.write(arr,<span class=\"number\">0</span>,len);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println(file.getName() +<span class=\"string\">\"文件上传成功!\"</span>);</span><br><span class=\"line\">            <span class=\"comment\">//关闭文件IO和SocketIO</span></span><br><span class=\"line\">            fos.close();</span><br><span class=\"line\">            res.close();</span><br><span class=\"line\">          &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;.start();</span><br><span class=\"line\">    &#125;\t</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20191102221610.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Development","path":"api/categories/Development.json"},{"name":"Programming","path":"api/categories/Programming.json"}],"tags":[{"name":"JAVA","path":"api/tags/JAVA.json"}]}