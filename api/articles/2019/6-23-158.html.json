{"title":"文件基本权限与特殊权限","slug":"系统运维/Linux/常用命令/权限管理类命令/文件基本权限与特殊权限","date":"2019-06-23T11:35:30.000Z","updated":"2023-01-31T02:29:09.215Z","url":"2019/6-23-158.html","path":"api/articles/2019/6-23-158.html.json","covers":["https://img.weiyigeek.top/2019/20190624215135.png","https://img.weiyigeek.top/2019/20190624221334.png","https://img.weiyigeek.top/2019/20190624220814.png","https://img.weiyigeek.top/2019/20190625101045.png","https://img.weiyigeek.top/2019/20190625102245.png","https://img.weiyigeek.top/2019/20190625164624.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h4 id=\"0x00-快速入门\"><a href=\"#0x00-快速入门\" class=\"headerlink\" title=\"0x00 快速入门\"></a>0x00 快速入门</h4><p>通过前面我们的学习,我们知道文件基础权限类型以及Linux文件权限的作用：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-rw-r--r-- <span class=\"comment\"># r = 4 / w = 2 / x = 1</span></span><br><span class=\"line\"><span class=\"comment\"># r：read 读取文件内容(cat more tail head)</span></span><br><span class=\"line\"><span class=\"comment\"># w: write 编辑 新增 修改文件内容(vi mvi) 但是不包括删除文件</span></span><br><span class=\"line\"><span class=\"comment\"># x: execute 可执行</span></span><br><span class=\"line\"></span><br><span class=\"line\">-rw-     r--       r--</span><br><span class=\"line\">u所有者   g所属组   o其他人  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#常见的权限</span></span><br><span class=\"line\">rwx 属性：4 + 2 + 1= 7       (可读可写可执行)</span><br><span class=\"line\">rw- 属性：4 + 2 = 6          (可读可写不可执行)</span><br><span class=\"line\">r-x 属性： 4 + 1 = 5         (可读不可写可执行)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#默认建立文件和目录的权限</span></span><br><span class=\"line\"><span class=\"built_in\">umask</span>   0022  <span class=\"comment\">#第一位0:文件特殊权限  / 022:文件默认权限</span></span><br><span class=\"line\"><span class=\"comment\">#对文件来讲 最高权限是x / 对目录来讲 最高权限是w</span></span><br><span class=\"line\">-rw-r--r-- 1 root root    0 Jun 24 21:59 a.sh   <span class=\"comment\">#644 </span></span><br><span class=\"line\">drwxr-xr-x 2 root root 4096 Jun 24 21:59 www    <span class=\"comment\">#755  (主要目录必须要有执行权限和写入权限)</span></span><br><span class=\"line\">对于文件默认权限 644（rw-r--r--）  </span><br><span class=\"line\">对于目录默认权限 755（rwx-r-xr-x）</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190624215135.png\" alt=\"WeiyiGeek.示例\" title=\"\" class=\"\">\n                <p>WeiyiGeek.示例</p>\n            </figure></p>\n<p><br></p>\n<p><em>Linux中权限对文件的作用（注意对root用户没用）</em></p>\n<ul>\n<li>文件默认不能建立为执行文件，必须收工赋予执行权限</li>\n<li>所以文件默认最大权限为666、目录默认的最大权限为777.</li>\n<li>默认权限需要换算成字母再相减,所有建立文件之后的默认权限，为666减去umask的值<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#比如</span></span><br><span class=\"line\">666-022=644  <span class=\"comment\">#文件默认最大权限666  umask值022</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br></p>\n<p><em>Linux中权限对目录的作用（注意对root用户没用）</em></p>\n<ul>\n<li>目录默认最大权限777,默认权限需要换算成字母再相减建立文件之后的默认权限，为777减去umask的值</li>\n<li>r: 可以查询目录下文件名  (ls)</li>\n<li>w: 具有修改目录结构的权限。如新建文件和目录，删除此目录下文件和目录，重命名此目录下文件和目录，剪切（touch rm mv cp)</li>\n<li>x: 可以进入目录   （cd）</li>\n</ul>\n<p>比如：由于A dir没有w得权限，则不能对B dir进行删除操作,因为B dir有rw权限则,可以对c file进行删除操作 （## 都只对下一级有用）<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#比如：目录默认最大权限为777 umask值022</span></span><br><span class=\"line\">777 - 022 = 755</span><br><span class=\"line\">-rwxrwxrwx  减去 -----w--w-  ==  -rwxr-xr-x</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190624221334.png\" alt=\"WeiyiGeek.权限对于目录的作用\" title=\"\" class=\"\">\n                <p>WeiyiGeek.权限对于目录的作用</p>\n            </figure></p>\n<p><br></p>\n<p><em>注意事项：</em></p>\n<ul>\n<li>分配文件基本权限时，核心原则：在最小权限情况下能够实现要求即可<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#下面这种权限慎用:</span></span><br><span class=\"line\">rw-rw-rw- ：666</span><br><span class=\"line\">rwxrwxrwx ：777</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n\n<h4 id=\"0x01-普通文件权限\"><a href=\"#0x01-普通文件权限\" class=\"headerlink\" title=\"0x01 普通文件权限\"></a>0x01 普通文件权限</h4><h5 id=\"chmod-命令\"><a href=\"#chmod-命令\" class=\"headerlink\" title=\"chmod 命令\"></a>chmod 命令</h5><p>描述：对于文件或者目录进行赋予rwx权限,也可以减去特定的权限（常用且非常有用）<br>语法参数：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod [选项] 模式  文件名</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#主要参数</span></span><br><span class=\"line\">-R 递归   <span class=\"comment\">#主要对于目录</span></span><br><span class=\"line\">[ugoa][+-=][rwx]   <span class=\"comment\">#u 用户 g组 o 其他  a 全部</span></span><br><span class=\"line\"></span><br><span class=\"line\">+ 加入</span><br><span class=\"line\">- 减去</span><br><span class=\"line\">= 设置</span><br></pre></td></tr></table></figure></p>\n<p>实际案例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1.给用户和组赋予write权限</span></span><br><span class=\"line\">chmod u+w test.txt</span><br><span class=\"line\">chmod g+w,o+w test.txt</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2.给所有人都赋予可读可写可执行等同于777权限(这样做非常危险)</span></span><br><span class=\"line\">chmod a=rwx text.txt   </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例3.’其中abc分别表示一个数字且&lt;=7,分别表示User，Group，以及Other的权限.</span></span><br><span class=\"line\">chmod +abc text.sh    <span class=\"comment\">#+/-表示赋予和减去</span></span><br><span class=\"line\">chmod +777 text.sh  <span class=\"comment\">#权限777</span></span><br><span class=\"line\">chmod -755 text.sh   <span class=\"comment\">#权限022</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例4.用户、用户组、其他人增加可读减去可执行权限</span></span><br><span class=\"line\">chmod +r test.txt</span><br><span class=\"line\">chmod -w test.txt</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例6.用户可读可写可执行，组与其它人可读可执行</span></span><br><span class=\"line\">chmod 644 test.sh</span><br><span class=\"line\">chmod u=rwx,go=wx test.sh</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"chown-命令\"><a href=\"#chown-命令\" class=\"headerlink\" title=\"chown 命令\"></a>chown 命令</h5><p>描述:chown命令改变某个文件或目录的所有者和所属的组，该命令可以向某个用户授权，使该用户变成指定文件的所有者或者改变文件所属的组。<br>用户可以是用户或者是用户ID，用户组可以是组名或组id，文件名可以使由空格分开的文件列表，在文件名中可以包含通配符。 </p>\n<p>注Tips：只有文件主和超级用户才可以便用该命令。<br>语法参数：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chown(选项)(参数)</span><br><span class=\"line\"></span><br><span class=\"line\">-c或——changes：效果类似“-v”参数，但仅回报更改的部分；</span><br><span class=\"line\">-f或--quite或——silent：不显示错误信息；</span><br><span class=\"line\">-h或--no-dereference：只对符号连接的文件作修改，而不更改其他任何相关文件；</span><br><span class=\"line\">-R或——recursive：递归处理，将指定目录下的所有文件及子目录一并处理；</span><br><span class=\"line\">-v或——version：显示指令执行过程；</span><br><span class=\"line\">--dereference：效果和“-h”参数相同；</span><br><span class=\"line\">--reference=&lt;参考文件或目录&gt;：把指定文件或目录的拥有者与所属群组全部设成和参考文件或目录的拥有者与所属群组相同；</span><br></pre></td></tr></table></figure></p>\n<p>实际案例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1. 将目录/usr/meng及其下面的所有文件、子目录的文件用户/组用户改成 liu：</span></span><br><span class=\"line\">chown -R liu /usr/meng</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2.将文件的所属者和所属组分别设置为root和master</span></span><br><span class=\"line\">drwxr-xr-x   2 git（所有者）    root(所有组)     21 May  9 16:50 testprivate</span><br><span class=\"line\">chown root:master test.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例3.常用赋予权限方式</span></span><br><span class=\"line\">chown git:vsftpd testprivate/   <span class=\"comment\"># 更改所有者:所有组</span></span><br><span class=\"line\">chown -R nobody.nobody /tmp/rsynctest  <span class=\"comment\">#文件夹得宿主</span></span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190624220814.png\" alt=\"WeiyiGeek.示例3\" title=\"\" class=\"\">\n                <p>WeiyiGeek.示例3</p>\n            </figure></p>\n<p><br></p>\n<h5 id=\"chgrp-命令\"><a href=\"#chgrp-命令\" class=\"headerlink\" title=\"chgrp 命令\"></a>chgrp 命令</h5><p>描述:在UNIX系统家族里，文件或目录权限的掌控以拥有者及所属群组来管理。您可以使用chgrp指令去变更文件与目录的所属群组，设置方式采用群组名称或群组识别码皆可；</p>\n<p>注意：选项参数与chown差不多</p>\n<p>实际案例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1.修改文件的所属组, 将/usr/meng及其子目录下的所有文件的用户组改为mengxin</span></span><br><span class=\"line\">chgrp [-R ]组名 文件名</span><br><span class=\"line\">chgrp -R mengxin /usr/meng</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2.让nginx用户对文件及目录拥有一定权限</span></span><br><span class=\"line\"><span class=\"variable\">$chgrp</span> -v -h nginx /tmp/a.sh</span><br><span class=\"line\">changed group of ‘/tmp/a.sh’ from root to nginx</span><br><span class=\"line\"><span class=\"variable\">$ll</span> /tmp/a.sh</span><br><span class=\"line\">-rw-r--r-- 1 root nginx 0 Jun 24 21:59 /tmp/a.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例3.－拥有一个testprivate目录让老师拥有所有的权限,让本课程学员由查看的权限,其他人不许查看这个目录</span></span><br><span class=\"line\">useradd teacher</span><br><span class=\"line\">useradd student</span><br><span class=\"line\">gpasswd -a student teacher <span class=\"comment\">#或者usermod -g teacher student    # -g代表更改用户所在的用户组/附属组</span></span><br><span class=\"line\">mkdir testprivate</span><br><span class=\"line\">chmod +740 testprivate/</span><br><span class=\"line\">chown student:teacher testprivate/</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"umask-命令-文件默认权限\"><a href=\"#umask-命令-文件默认权限\" class=\"headerlink\" title=\"umask 命令 - 文件默认权限\"></a>umask 命令 - 文件默认权限</h5><p>描述：用于修改建立文件或者目录的默认权限，默认情况下用户创建文件与目录的权限如下;</p>\n<ul>\n<li>文件 ：默认没有可执行(x)权限即只有r/w这两个选项即<code>-rw-rw-rw-(666)</code>;</li>\n<li>目录 ：默认所有权限均开放即为777分，默认权限如下<code>drwxrwxrwx(777)</code><br>而umask的分值是为了用在默认权限去掉其分值的所得的权限例如默认的umask的为022即实际上新建文件或者目录权限如下:</li>\n<li>文件 : (-rw-rw-rw-) - (—–w–w-) = (-rw-r–r–) =&gt; 644</li>\n<li>目录 : (drwxrwxrwx) - (d—-w–w-) = (drwxr-xr-x) =&gt; 755</li>\n</ul>\n<p>语法参数:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">usage: <span class=\"built_in\">umask</span> [-p] [-S] [mode]</span><br></pre></td></tr></table></figure></p>\n<p>实际案例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 示例1: umask 值查看</span></span><br><span class=\"line\">❯ <span class=\"built_in\">umask</span></span><br><span class=\"line\">0022</span><br><span class=\"line\">❯ <span class=\"built_in\">umask</span> -p</span><br><span class=\"line\"><span class=\"built_in\">umask</span> 0022</span><br><span class=\"line\">❯ <span class=\"built_in\">umask</span> -S  </span><br><span class=\"line\">u=rwx,g=rx,o=rx  <span class=\"comment\"># 创建目录默认的权限</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例2：临时永久修改umask的值</span></span><br><span class=\"line\"><span class=\"variable\">$umask</span> 0022</span><br><span class=\"line\"><span class=\"variable\">$vi</span> /etc/profile</span><br><span class=\"line\"><span class=\"built_in\">umask</span> 022   <span class=\"comment\"># 如果需要永久修改需要编辑/etc/profile中的umask值</span></span><br><span class=\"line\"><span class=\"variable\">$source</span> /etc/profile</span><br></pre></td></tr></table></figure></p>\n<p>注意事项:</p>\n<ul>\n<li>(1) 上述umask默认022不能由文件默认属性(666)和目录默认属性(777)进行相减运算;</li>\n</ul>\n<hr>\n\n<h4 id=\"0x02-特殊权限之ACL\"><a href=\"#0x02-特殊权限之ACL\" class=\"headerlink\" title=\"0x02 特殊权限之ACL\"></a>0x02 特殊权限之ACL</h4><p>描述：ACL是由一系列的Access Entry所组成的，每一条Access Entry定义了特定的类别可以对文件拥有的操作权限。<br>从上面文件和目录的权限我们就能看出大概就三种权限所有者权限/组权限/其他权限，但是有时候不够用的时候就需要ACL权限,来解决用户身份不够的问题。</p>\n<p>自动创建的规则:文件目录仅包含3个基本的acl规则,为了使规则能正常执行，需要满足以下规则。</p>\n<ul>\n<li>3个基本规则不能被删除。rwx</li>\n<li>任何一条包含指定的用户名或群组名的规则必须包含有效的权限组合。 user/group</li>\n<li>任何一条包含缺省规则的规则在使用时，缺省规则必须存在。 umask</li>\n</ul>\n<p>Access Entry有三个组成部分：</p>\n<ul>\n<li>Entry tag type</li>\n<li>qualifier (optional就是username、groupname)</li>\n<li>permission (权限RWX 0777)<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Entry tag type它有以下几个类型：</span></span><br><span class=\"line\">类型 \t说明</span><br><span class=\"line\">ACL_USER_OBJ： \t相当于Linux里file_owner的permission(原本所有者)</span><br><span class=\"line\">ACL_USER： \t定义了额外的用户可以对此文件拥有的permission</span><br><span class=\"line\">ACL_GROUP_OBJ： \t相当于Linux里group的permission (原本所属组)</span><br><span class=\"line\">ACL_GROUP： \t定义了额外的组可以对此文件拥有的permission</span><br><span class=\"line\">ACL_MASK： \t定义了ACL_USER,ACL_GROUP_OBJ和ACL_GROUP的最大权限</span><br><span class=\"line\">ACL_OTHER： \t相当于Linux里other的permission</span><br><span class=\"line\"></span><br><span class=\"line\">Access Entry都是由三个被：号分隔开的字段所组成，第一个就是Entry tag <span class=\"built_in\">type</span>。</span><br><span class=\"line\">- user 对应了ACL_USER_OBJ和ACL_USER </span><br><span class=\"line\">- group 对应了ACL_GROUP_OBJ和ACL_GROUP</span><br><span class=\"line\">- mask 对应了ACL_MASK</span><br><span class=\"line\">- other 对应了ACL_OTHER</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>示例1.查看分区ACL权限是否开启<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dumpe2fs -h /dev/sda5   <span class=\"comment\">#当分区类型为ext* 才有效</span></span><br><span class=\"line\"><span class=\"comment\">#-h  仅显示超级块中信息，而不显示磁盘块的详细信息</span></span><br><span class=\"line\">Default mount options:    user_xattr acl  <span class=\"comment\">#注意这里的ACL说明分区是支持acl的</span></span><br></pre></td></tr></table></figure></p>\n<p>示例2.临时开启分区ACL权限<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mount -o remount,acl /      <span class=\"comment\">#重新挂载根分区，并挂载加入acl权限</span></span><br></pre></td></tr></table></figure></p>\n<p>示例3.永久开启分区ACL权限<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$vi</span> /etc/fstab</span><br><span class=\"line\">UUID=c2ca6f57-b15c-43ea=bca0-f239083d8bd2 / ext4 defaults,acl 1（＃启动是否需要检测） 1(<span class=\"comment\">#启动是否需要备份)   #加入acl</span></span><br><span class=\"line\"><span class=\"variable\">$mount</span> -o remount / <span class=\"comment\">#然后重写挂载</span></span><br></pre></td></tr></table></figure></p>\n<p>注意：xfs文件系统似乎已经默认/强制开启了acl,不用在mount时增加acl参数，fstab里加acl参数也被认为是无效的(会报错说acl是不识别选项mount会失败)。</p>\n<p><br></p>\n<h5 id=\"getfacl-命令\"><a href=\"#getfacl-命令\" class=\"headerlink\" title=\"getfacl 命令\"></a>getfacl 命令</h5><p>描述：Linux中ACL权限查看与设定getfacl主要是查看权限;<br>基础语法<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getfacl 文件名|目录</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#参数</span></span><br><span class=\"line\">--omit-header <span class=\"comment\">#不显示文件头部信息</span></span><br></pre></td></tr></table></figure></p>\n<p>实际案例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1.查看文件的acl权限</span></span><br><span class=\"line\">getfacl test.jsp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2.查看目录的acl权限</span></span><br><span class=\"line\"> getfacl rpmbuild/</span><br><span class=\"line\"><span class=\"comment\"># file: rpmbuild/</span></span><br><span class=\"line\"><span class=\"comment\"># owner: root</span></span><br><span class=\"line\"><span class=\"comment\"># group: root</span></span><br><span class=\"line\"><span class=\"comment\"># user::rwx</span></span><br><span class=\"line\"><span class=\"comment\"># group::r-x</span></span><br><span class=\"line\"><span class=\"comment\"># other::r-x</span></span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190625101045.png\" alt=\"WeiyiGeek.示例1\" title=\"\" class=\"\">\n                <p>WeiyiGeek.示例1</p>\n            </figure></p>\n<p><br></p>\n<h5 id=\"setfacl-命令\"><a href=\"#setfacl-命令\" class=\"headerlink\" title=\"setfacl 命令\"></a>setfacl 命令</h5><p>描述：给文件或者目录设置acl权限<br>语法参数：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setfacl 选项 文件名</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#参数</span></span><br><span class=\"line\">--<span class=\"built_in\">test</span>：|测试模式，不会改变任何文件的acl规则，操作后的acl规格将被列出。</span><br><span class=\"line\"></span><br><span class=\"line\">-m|设定ACL权限</span><br><span class=\"line\">-M|从一个文件读入ACL设置信息并以此为模版修改当前文件或目录的ACL规则</span><br><span class=\"line\">-x|删除指定的ACL权限</span><br><span class=\"line\">-X|从一个文件读入ACL设置信息并以此为模版删除当前文件或目录的ACL规则</span><br><span class=\"line\"></span><br><span class=\"line\">-d: |设定默认ACL权限</span><br><span class=\"line\">-R：|递归的对所有文件及目录进行操作。 (只能对目录设置不能对文件)</span><br><span class=\"line\">-L：|跟踪符号链接，默认情况下只跟踪符号链接文件，跳过符号链接目录。</span><br><span class=\"line\">-P：|跳过所有符号链接，包括符号链接文件。</span><br><span class=\"line\"></span><br><span class=\"line\">-b 删除所有的ACL权限,基本的acl规则(所有者，群组，其他）将被保留。</span><br><span class=\"line\">-k 删除默认ACL权限,如果没有缺省规则，将不提示。</span><br><span class=\"line\"></span><br><span class=\"line\">--<span class=\"built_in\">set</span>=acl| 设置当前文件的ACL规则</span><br><span class=\"line\">--<span class=\"built_in\">set</span>-file=file| 从文件读入ACL规则来设置当前文件或目录的ACL规则</span><br><span class=\"line\"></span><br><span class=\"line\">-n：|不要重新计算有效权限。setfacl默认会重新计算ACL mask，除非mask被明确的制定。</span><br><span class=\"line\">--mask：|重新计算有效权限，即使ACL mask被明确指定。</span><br><span class=\"line\">--restore=file：|从文件恢复备份的acl规则（这些文件可由getfacl -R产生）。通过这种机制可以恢复整个目录树的acl规则。此参数不能和除--<span class=\"built_in\">test</span>以外的任何参数一同执行。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#ACL规则格式：</span></span><br><span class=\"line\">- [d[efault]:] [u[ser]:]uid [:perms] 指定用户的权限，文件所有者的权限（如果uid没有指定）。</span><br><span class=\"line\">- [d[efault]:] g[roup]:gid [:perms] 指定群组的权限，文件所有群组的权限（如果gid未指定）</span><br><span class=\"line\">- [d[efault]:] m[ask][:] [:perms] 有效权限掩码 </span><br><span class=\"line\">- [d[efault]:] o[ther] [:perms] 其他的权限 </span><br><span class=\"line\"><span class=\"comment\">#比如：</span></span><br><span class=\"line\">setfacl -x u:用户名 文件名</span><br><span class=\"line\">setfacl -x g:组名 文件名</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#提示数据</span></span><br><span class=\"line\">- 选项-m和-x后边跟以acl规则。多条acl规则以逗号(,)隔开。选项-M和-X用来从文件或标准输入读取acl规则。</span><br><span class=\"line\">- 选项--<span class=\"built_in\">set</span>和--<span class=\"built_in\">set</span>-file用来设置文件或目录的acl规则，先前的设定将被覆盖。</span><br><span class=\"line\">- 选项-m(--modify)和-M(--modify-file)选项修改文件或目录的acl规则。</span><br><span class=\"line\">- 选项-x(--remove)和-X(--remove-file)选项删除acl规则。</span><br><span class=\"line\">- Perms域是一个代表各种权限的字母的组合：读-r写-w执行-x(也可设置为八进制格式)，执行只适合目录和一些可执行的文件。</span><br></pre></td></tr></table></figure></p>\n<p>实际案例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1.给其他指定用户mynote设置rw权限</span></span><br><span class=\"line\">setfacl -m u:mynote:rx /home/test.jsp</span><br><span class=\"line\">getfacl test.jsp</span><br><span class=\"line\"><span class=\"comment\"># file: test.jsp</span></span><br><span class=\"line\"><span class=\"comment\"># owner: root</span></span><br><span class=\"line\"><span class=\"comment\"># group: root</span></span><br><span class=\"line\"><span class=\"comment\"># user::rw-</span></span><br><span class=\"line\"><span class=\"comment\"># user:mynote:rw-</span></span><br><span class=\"line\"><span class=\"comment\"># group::r--</span></span><br><span class=\"line\"><span class=\"comment\"># mask::rw-  #mask是用来指定最大有效权限的。 user1:rwx &amp; mask:rw- 与得到：rw-</span></span><br><span class=\"line\"><span class=\"comment\"># other::r--</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#设置后您ll进行查看权限发现权限上会多了个＋号</span></span><br><span class=\"line\"><span class=\"comment\">#当任何一个文件拥有了ACL_USER或者ACL_GROUP的值以后我们就可以称它为ACL文件，这个+号就是用来提示我们的。</span></span><br><span class=\"line\">-rw-rw-r--+ 1 root root 1057 6月  20 09:13 test.jsp</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2.给组tgroup2设定和#先让用户john拥有对test.txt文件的读写权限：</span></span><br><span class=\"line\">setfacl -m g:tgroup2:rwx test.jsp</span><br><span class=\"line\"><span class=\"variable\">$setfacl</span> -m user:john:rw- ./test.txt</span><br><span class=\"line\"><span class=\"variable\">$getfacl</span> --omit-header ./test.txt</span><br><span class=\"line\"> user::rw-</span><br><span class=\"line\"> user:john:rw-</span><br><span class=\"line\"> group::rw-</span><br><span class=\"line\"> mask::rw-</span><br><span class=\"line\"> other::r--</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例3.让用户john也对test.sh具有和root一样的permission。（ACL_MASK重点）、</span></span><br><span class=\"line\">-rwxrw-r-- 1 root admin 0 Jul 3 23:10 test.sh   <span class=\"comment\">#原本权限</span></span><br><span class=\"line\"><span class=\"variable\">$getfacl</span> -m user:john:rwx ./test.sh </span><br><span class=\"line\"><span class=\"variable\">$getfacl</span> --omit-header ./test.sh </span><br><span class=\"line\">user::rwx user:john:rwx   <span class=\"comment\">#john已经拥有了rwx的permission，mask值也被设定为rwx，那是因为它规定了ACL_USER，ACL_GROUP和ACL_GROUP_OBJ的最大值</span></span><br><span class=\"line\">group::rw- </span><br><span class=\"line\">mask::rwx</span><br><span class=\"line\">other::r--</span><br><span class=\"line\">-rwxrwxr--+ 1 root admin 0 Jul 3 23:10 test.sh </span><br><span class=\"line\"><span class=\"comment\">#那么如果现在admin组的用户想要执行test.sh的程序会发生什么情况呢？_</span></span><br><span class=\"line\"><span class=\"comment\">#它会被permission deny，原因在于实际上admin组的用户只有read and write permission，这里当中显示的rwx是ACL_MASK的值而不是group的permission。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#ACL_mask重要性</span></span><br><span class=\"line\"><span class=\"comment\"># 假如现在我们设置test.sh的mask为read only，那么admin组的用户还会有write permission吗？</span></span><br><span class=\"line\">setfacl -m mask::r-- ./test.sh</span><br><span class=\"line\">getfacl --omit-header ./test.sh</span><br><span class=\"line\"><span class=\"comment\"># user::rwx</span></span><br><span class=\"line\"><span class=\"comment\"># user:john:rwx   #effective:r--</span></span><br><span class=\"line\"><span class=\"comment\"># group::rw-      #effective:r--</span></span><br><span class=\"line\"><span class=\"comment\"># mask::r--</span></span><br><span class=\"line\"><span class=\"comment\"># other::r--</span></span><br><span class=\"line\"><span class=\"comment\">#ACL_MASK的定义规定了ACL_USER，ACL_GROUP_OBJ和ACL_GROUP的最大权限。</span></span><br><span class=\"line\"><span class=\"comment\">#那么在我们这个例子中他们的最大权限也就是read only。虽然我们这里给ACL_USER和ACL_GROUP_OBJ设置了其他权限，但是他们真正有效果的只有read权限。</span></span><br><span class=\"line\">-rwxr--r--+ 1 root admin 0 Jul 3 23:10 test.sh <span class=\"comment\">#的group permission也会显示其mask的值</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例4.Linux中ACL最大权限与删除，删除这个文件会文件夹的所有ACL权限</span></span><br><span class=\"line\">setfacl -m u:user1:rwx test.jsp</span><br><span class=\"line\">setfacl -x u:user1:rwx test.jsp</span><br><span class=\"line\">setfacl -b test.jsp    <span class=\"comment\">#删除这个文件的所有的ACL权限</span></span><br><span class=\"line\">-rw-r--r-- 1 root root 1057 6月  20 09:13 test.jsp  <span class=\"comment\">#没有加号了</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例5.递归ACL权限示例</span></span><br><span class=\"line\"><span class=\"comment\">#Default ACL 是指对于一个目录进行Default ACL设置,这就需要递归递归是父目录在设定ACL权限时，所有的子文件和子目录也会拥有相同的ACL权限</span></span><br><span class=\"line\">setfacl -m u:mynote:rwx -R ./<span class=\"built_in\">test</span>/    <span class=\"comment\">#－R 选项、递归只能对目录设置不能对文件</span></span><br><span class=\"line\"><span class=\"comment\">#对目录使用递归权限  本来不想给权限 结果给了出现权限溢出,不是默认的ACL权限 命令执行之后新建的目录不会有ACL权限</span></span><br><span class=\"line\"><span class=\"comment\">#重新对./test/ -R进行设置ACL权限</span></span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190625102245.png\" alt=\"WeiyiGeek.ACL权限示例5\" title=\"\" class=\"\">\n                <p>WeiyiGeek.ACL权限示例5</p>\n            </figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例6.默认ACL权限的作用时如果给父目录设定了默认的ACL权限，那么父目录中所有新建的文件都会继承父目录的ACL权限</span></span><br><span class=\"line\">setfacl -m d:u:lw:rw -R /home/<span class=\"built_in\">test</span>   <span class=\"comment\">#d表示 default  默认  </span></span><br><span class=\"line\"><span class=\"comment\"># 由于test的group::r-x没有写权限，我们拿mynote用户测试不能建立文件和directory,或是使用root用户进行新建</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#所有在此目录下建立的文件都可以被john用户所访问</span></span><br><span class=\"line\"><span class=\"variable\">$setfacl</span> -d -m user:john:rw ./dir</span><br><span class=\"line\"><span class=\"variable\">$getfacl</span> --omit-header ./dir</span><br><span class=\"line\">user::rwx</span><br><span class=\"line\">group::rwx</span><br><span class=\"line\">other::r-x</span><br><span class=\"line\">default:user::rwx</span><br><span class=\"line\">default:user:john:rwx</span><br><span class=\"line\">default:group::rwx</span><br><span class=\"line\">default:mask::rwx</span><br><span class=\"line\">default: other::r-x</span><br><span class=\"line\"><span class=\"comment\">#现在root用户在dir下建立一个test.txt文件。</span></span><br><span class=\"line\"><span class=\"variable\">$touch</span> ./dir/test.txt</span><br><span class=\"line\"><span class=\"variable\">$ls</span> -l ./dir/test.txt</span><br><span class=\"line\">-rw-rw-r--+ 1 root root 0 Jul 3 23:46 ./dir/test.txt</span><br><span class=\"line\"><span class=\"variable\">$getfacl</span> --omit-header ./dir/test.txt</span><br><span class=\"line\">user::rw-</span><br><span class=\"line\">user:john:rw- <span class=\"comment\">#john用户自动就有了read and write permission，</span></span><br><span class=\"line\">group::rwx <span class=\"comment\">#effective:rw-  </span></span><br><span class=\"line\">mask::rw-</span><br><span class=\"line\">other::r--</span><br></pre></td></tr></table></figure>\n<p><em>注意事项：</em></p>\n<ul>\n<li>如果我给用户赋予了ACL权限，是需要和mask的权限“与”才能得到用户的真正权限,(同则同)</li>\n<li>当在不支持ACLs的文件系统上使用setfacl命令时，setfacl将修改文件权限位</li>\n<li>如果acl规则并不完全匹配文件权限位，setfacl将会修改文件权限位使其尽可能的反应acl规则，并会向standard error发送错误消息，以大于0的状态返回。</li>\n<li>如果用chmod命令改变Linux file permission的时候相应的ACL值也会改变，反之改变ACL的值，相应的file permission也会改变。</li>\n<li>mv命令将会默认地移动文件的ACL属性，同样如果操作不允许的情况下会给出警告。 </li>\n</ul>\n<p><br></p>\n<h5 id=\"chacl-命令\"><a href=\"#chacl-命令\" class=\"headerlink\" title=\"chacl 命令\"></a>chacl 命令</h5><p>描述：用来改变文件和目录的Access ACL and Default ACL，它的具体参数大家可以去看man page。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Usage:</span><br><span class=\"line\">        chacl acl pathname...</span><br><span class=\"line\">        chacl -b acl dacl pathname...</span><br><span class=\"line\">        chacl -d dacl pathname...</span><br><span class=\"line\">        chacl -R[|other] pathname...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#基础语法</span></span><br><span class=\"line\">-B | 它可以彻底删除文件或者目录的ACL属性(包括Default ACL)，比如你即使用了setfacl -x删除了所有文件的ACL属性，那个+号还是会出现在文件的末尾</span><br></pre></td></tr></table></figure>\n<hr>\n\n<h4 id=\"0x03-特殊权限之UGB\"><a href=\"#0x03-特殊权限之UGB\" class=\"headerlink\" title=\"0x03 特殊权限之UGB\"></a>0x03 特殊权限之UGB</h4><p>描述：特殊文件权限类型主要是，类似于普通文件权限表示方法rwx：</p>\n<ul>\n<li>SetUID：4</li>\n<li>SetGID：2</li>\n<li>Sticky Bit：1</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#特殊文件权限UGB</span></span><br><span class=\"line\">  u       g        o</span><br><span class=\"line\">  +       +        +</span><br><span class=\"line\">  s       s        s</span><br><span class=\"line\">  =       =        =</span><br><span class=\"line\">  SUID      SGID     SBIT</span><br></pre></td></tr></table></figure>\n<p>示例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +4755 pp.py   <span class=\"comment\">#setUID  -rwsr-xr-x //显示红色</span></span><br><span class=\"line\">chmod +2755 pp.py   <span class=\"comment\">#setGID  -rwxr-sr-x  //显示黄色</span></span><br><span class=\"line\">chmod +1755 <span class=\"built_in\">test</span>/   <span class=\"comment\">#StrckyBit -rwxr-xr-t  //蓝色</span></span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190625164624.png\" alt=\"WeiyiGeek.特殊权限特征\" title=\"\" class=\"\">\n                <p>WeiyiGeek.特殊权限特征</p>\n            </figure></p>\n<p><br></p>\n<h5 id=\"SetUID-权限\"><a href=\"#SetUID-权限\" class=\"headerlink\" title=\"SetUID 权限\"></a>SetUID 权限</h5><p>描述：SetUID的功能只有可以执行的二进制程序才能设定SUID权限,相当于说是以非root用户来指向root所属者的可执行文件;</p>\n<ul>\n<li>命令执行者队该程序拥有x执行权限</li>\n<li>命令执行者在执行该程序时获得该程序文件属主的身份（在执行程序的过程中灵魂附体为文件属主）</li>\n<li>只有文件具有SetUID权限，命令执行时用户身份才会切换到文件所有者的身份(灵魂附体)</li>\n<li>SetUID权限只在该程序执行过程中有效，也就是说身份改变在程序执行过程中有效</li>\n</ul>\n<p><em>操作案例</em>：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#设定SetUID</span></span><br><span class=\"line\">chmod 4755 文件名</span><br><span class=\"line\">chmod u+s 文件名</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#取消SetUID</span></span><br><span class=\"line\">chmod 0755 文件名</span><br><span class=\"line\">chmod u<span class=\"_\">-s</span> 文件名</span><br></pre></td></tr></table></figure></p>\n<p><em>实际案例</em>：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1.shadow只有超级用户才能更改,但为什么自己能改自己的密码呢？</span></span><br><span class=\"line\">ll /etc/shadow  <span class=\"comment\">#保存密码文件</span></span><br><span class=\"line\">---------- 1 root root 867 6月  25 16:22 /etc/shadow</span><br><span class=\"line\">ll /usr/bin/passwd</span><br><span class=\"line\">-rwsr-xr-x. 1 root root 27832 6月  10 2014 /usr/bin/passwd  <span class=\"comment\">#注意这里的权限</span></span><br><span class=\"line\"><span class=\"comment\">#这个指令有SetUID权限执行的时候 ,自己的身份就会这个文件所有者身份,所以就能改密码了</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2.危险的SUID权限危险目录应严格控制写权限。比如\"/\",\"/usr\"等</span></span><br><span class=\"line\">chmod u+s /etc/vi  <span class=\"comment\">#如果这样设置用户就可以修改密码了</span></span><br><span class=\"line\"><span class=\"comment\">#用户的密码设置要严格遵守密码三原则</span></span><br><span class=\"line\"><span class=\"comment\">#对系统中默认应该具有SetUID权限的文件作一列表，定时检查有没有这之外的文件被设置了SetUID权限，参考下面脚本</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p>SUID和SGID权限查找：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">find / -perm -4000 -o -perm -2000 &gt; /tmp/setuid.check</span><br><span class=\"line\"><span class=\"comment\">#搜索系统系统中所有有SUID和SGID的文件，并保存到临时目录中</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> $(cat /tmp/setuid.check)</span><br><span class=\"line\"><span class=\"comment\">#循环去除文件中的文件名</span></span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\"></span><br><span class=\"line\">     grep <span class=\"variable\">$i</span> /root/suid.log &gt; /dev/null</span><br><span class=\"line\">     <span class=\"comment\">#比对这个文件名是否在模板文件中</span></span><br><span class=\"line\">     <span class=\"keyword\">if</span>[ <span class=\"string\">\"$?\"</span> != <span class=\"string\">\"0\"</span> ]</span><br><span class=\"line\">     <span class=\"comment\">#检测上一个命令的返回值，如果不成功，上面报错</span></span><br><span class=\"line\">     <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$i</span> isn't in listfile!\"</span> &gt;&gt; /root/suid_log_$(data+%F)</span><br><span class=\"line\">        <span class=\"comment\">#如果文件名在模板文件中，则输出错误信息，并把错误写到日志中</span></span><br><span class=\"line\">     <span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\">rm -rf /tmp/setuid.check</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#执行结果（默认存在SUID和SGID权限的文件）</span></span><br><span class=\"line\">/run/<span class=\"built_in\">log</span>/journal</span><br><span class=\"line\">/run/<span class=\"built_in\">log</span>/journal/985306ae4b484b90bba97f8d2c2b0b7f</span><br><span class=\"line\">/usr/bin/fusermount</span><br><span class=\"line\">/usr/bin/wall</span><br><span class=\"line\">/usr/bin/mount</span><br><span class=\"line\">/usr/bin/su</span><br><span class=\"line\">/usr/bin/chfn</span><br><span class=\"line\">/usr/bin/write</span><br><span class=\"line\">/usr/bin/chsh</span><br><span class=\"line\">/usr/bin/chage</span><br><span class=\"line\">/usr/bin/gpasswd</span><br><span class=\"line\">/usr/bin/newgrp</span><br><span class=\"line\">/usr/bin/umount</span><br><span class=\"line\">/usr/bin/pkexec</span><br><span class=\"line\">/usr/bin/crontab</span><br><span class=\"line\">/usr/bin/ssh-agent</span><br><span class=\"line\">/usr/bin/passwd</span><br><span class=\"line\">/usr/bin/Xorg</span><br><span class=\"line\">/usr/bin/at</span><br><span class=\"line\">/usr/bin/sudo</span><br><span class=\"line\">/usr/bin/locate</span><br><span class=\"line\">/usr/bin/staprun</span><br><span class=\"line\">/usr/sbin/pam_timestamp_check</span><br><span class=\"line\">/usr/sbin/unix_chkpwd</span><br><span class=\"line\">/usr/sbin/lockdev</span><br><span class=\"line\">/usr/sbin/netreport</span><br><span class=\"line\">/usr/sbin/usernetctl</span><br><span class=\"line\">/usr/sbin/userhelper</span><br><span class=\"line\">/usr/sbin/postdrop</span><br><span class=\"line\">/usr/sbin/mount.nfs</span><br><span class=\"line\">/usr/sbin/postqueue</span><br><span class=\"line\">/usr/lib/polkit-1/polkit-agent-helper-1</span><br><span class=\"line\">/usr/lib64/dbus-1/dbus-daemon-launch-helper</span><br><span class=\"line\">/usr/lib64/vte-2.90/gnome-pty-helper</span><br><span class=\"line\">/usr/libexec/utempter/utempter</span><br><span class=\"line\">/usr/libexec/openssh/ssh-keysign</span><br><span class=\"line\">/usr/libexec/pulse/proximity-helper</span><br><span class=\"line\">/usr/libexec/qemu-bridge-helper</span><br><span class=\"line\">/usr/libexec/abrt-action-install-debuginfo-to-abrt-cache</span><br><span class=\"line\">/usr/libexec/spice-gtk-x86_64/spice-client-glib-usb-acl-helper</span><br></pre></td></tr></table></figure></p>\n<p><em>问题1：那执行这条命令时，身份可以修改密码了，不就能修改其他用户的密码了吗？</em><br>答：实际上linux限制了passwd后跟其他参数,会报只有根用户才能指定用户名称的错误,用户只能 passwd 直接回车修改当前用户的密码;</p>\n<p><br></p>\n<h5 id=\"SetGID-权限\"><a href=\"#SetGID-权限\" class=\"headerlink\" title=\"SetGID 权限\"></a>SetGID 权限</h5><p>描述:SetGID针对文件的作用，只有可执行的二进制程序才能设置SGID权限：</p>\n<ul>\n<li>命令执行者队该程序有x执行权限</li>\n<li>命令执行在执行过程的时候，组身份升级为该程序文件的属主 （在执行程序的过程中灵魂附体为文件属主）</li>\n<li>SetGID权限同样只在该程序执行过程中有效，也就是说组身份改变在程序执行过程中有效</li>\n</ul>\n<p><em>SetGID针对目录的作用</em>：</p>\n<ul>\n<li>普通用户必须对此目录有r和x权限才能进入此目录(目录最大权限w、文件最大权限x)</li>\n<li>普通用户在此目录中的有效组会变成此目录的属组</li>\n<li>若普通用户对此目录有w权限时，新建的文件的默认属组是这个目录的属组</li>\n</ul>\n<p><em>操作案例</em>：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#设定SetGID</span></span><br><span class=\"line\">chmod 2755 文件名</span><br><span class=\"line\">chmod g+s 文件名</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#取消SetGID</span></span><br><span class=\"line\">chmod 0755 文件名</span><br><span class=\"line\">chmod g<span class=\"_\">-s</span> 文件名</span><br></pre></td></tr></table></figure></p>\n<p>操作实例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1.比如ubuntu系统中mlocate.db是可执行二进制程序，可以赋予SGID权限</span></span><br><span class=\"line\">-rwx--s--x 1 root slocate 35612 8月 24 2010 /usr/bin/locate</span><br><span class=\"line\">ll /var/lib/mlocate/mlocate.db</span><br><span class=\"line\">-rw-r----- 1 root slocate 1838850 1月 20 04:29 /var/lib/mlocate/mlocate.db</span><br><span class=\"line\"><span class=\"comment\">#比如：执行用户lamp对/usr/bin/locate命令拥有执行权限</span></span><br><span class=\"line\"><span class=\"comment\">#执行/usr/bin/locate命令时，组身份会升级为slocate组，而slocate组对/var/lib/mlocate/mlocate.db数据库有r权限，所以普通用户可以使用locate</span></span><br><span class=\"line\"><span class=\"comment\"># 命令查询mlocate.db数据库</span></span><br><span class=\"line\"><span class=\"comment\"># 命令结束，lamp用户的组身份返回lamp组</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"Sticky-BIT-权限\"><a href=\"#Sticky-BIT-权限\" class=\"headerlink\" title=\"Sticky BIT 权限\"></a>Sticky BIT 权限</h5><p>描述：SBIT也叫粘着位权限目前只对目录有效,普通用户对该目录拥有w和x权限，即普通用户可以在此目录有写入权限；</p>\n<p>简单的说我们不能删除别人的文件，那我们可以修改别人文件内容啊！就算你是Root都不能删除，必须要把权限关闭后才行。</p>\n<ul>\n<li>如果没有粘着位，因为普通用户拥有w权限，所以可以删除此目录下所有文件，包括其他用户建立的文件。</li>\n<li>如果赋予了粘着位，除了root可以删除所有文件，普通用户就算有w权限也只能删除自己建立的文件，但是不能删除其他用户建立的文件</li>\n</ul>\n<p><em>操作案例</em>：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#设置粘着位</span></span><br><span class=\"line\">chmod 1755 目录名</span><br><span class=\"line\">chmod o+t 目录名</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#取消粘着位</span></span><br><span class=\"line\">chmod 0777 目录名</span><br><span class=\"line\">chmod o-t 目录名</span><br></pre></td></tr></table></figure></p>\n<p><em>实际案例</em>：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1.普通用户无法删除自己创建的文件</span></span><br><span class=\"line\"><span class=\"variable\">$mkdir</span> -p <span class=\"built_in\">test</span>/www    <span class=\"comment\"># 此时test可以删除www目录下的文件（但必须给test赋予w权限）</span></span><br><span class=\"line\"><span class=\"variable\">$chmod</span> -R 1777 <span class=\"built_in\">test</span>/</span><br><span class=\"line\"><span class=\"variable\">$rm</span> -rf test.jsp      <span class=\"comment\"># 即使有w权限也不能删除test/www下的文件，但可以修改文件里面的内容</span></span><br><span class=\"line\">rm: 无法删除<span class=\"string\">\"test.jsp\"</span>: 不允许的操作</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"chattr-命令-文件隐藏属性设置\"><a href=\"#chattr-命令-文件隐藏属性设置\" class=\"headerlink\" title=\"chattr 命令 - 文件隐藏属性设置\"></a>chattr 命令 - 文件隐藏属性设置</h5><p>描述：设置SBIT粘着位权限后用户可以对其进行更改,假如我们不想他更改里面的信息得话就可以用下面的这个命令。</p>\n<p><em>语法参数：</em><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 语法：</span></span><br><span class=\"line\">chattr [+-=][ASaxdistu]文件或目录名</span><br><span class=\"line\">chattr [ -RVf ] [ -v version ] [ -p project ] [ mode ] files</span><br><span class=\"line\">+ - =  增加  删除  等于 某权限</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 选项</span></span><br><span class=\"line\">A <span class=\"comment\"># 访问文件或者目录时候atime将不会被修改;</span></span><br><span class=\"line\">S <span class=\"comment\"># 进行任何文件的修改该改动会同步写入到磁盘之中;</span></span><br><span class=\"line\">d <span class=\"comment\"># 在dump执行时该文件或者目录将不会被dump备份</span></span><br><span class=\"line\">i(insert) <span class=\"comment\">#如果对文件设置i属性，那么 不允许对文件进行删除/改名也不能添加和修改数据;   (不能对文件做任何修改)</span></span><br><span class=\"line\">          <span class=\"comment\">#如果对目录设置i属性，那么 只能修改目录下文件的数据，但不允许建立和删除文件; (修改文件)</span></span><br><span class=\"line\"> </span><br><span class=\"line\">a(append)  <span class=\"comment\"># 如果对文件设置a属性，那么 只能在文件中增加数据，但是不能删除也不能修改数据; (对文件增加数据)</span></span><br><span class=\"line\">           <span class=\"comment\"># 如果对目录设置a属性，那么 只允许在目录中建立和修改文件，但是不允许删除;    (建立修改文件)</span></span><br><span class=\"line\">s <span class=\"comment\"># 文件删除时其将被完全从这个硬盘空间中删除;</span></span><br><span class=\"line\">u <span class=\"comment\"># 与s相反当使用u来配置文件时，如果该文件被删除了它，从这个硬盘空间中任然可以将其找回;</span></span><br></pre></td></tr></table></figure></p>\n<p>实际案例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 示例1.添加目录i权限不能建立和删除文件</span></span><br><span class=\"line\">chattr +i www/</span><br><span class=\"line\">touch www</span><br><span class=\"line\">  <span class=\"comment\"># touch: 无法创建\"www\": 权限不够</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例2.添加文件i权限不能删除与修改</span></span><br><span class=\"line\">chattr +i Weiyieek.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 实例3.不需要修改文件但是可以创建文件（只能追加）</span></span><br><span class=\"line\">chattr -R +a /var/<span class=\"built_in\">log</span>/.<span class=\"built_in\">history</span> </span><br><span class=\"line\">chattr +a /var/<span class=\"built_in\">log</span>/.backups</span><br></pre></td></tr></table></figure></p>\n<p>注意事项:</p>\n<ul>\n<li>(1) 该命令只能在Ext2/Ext3/Ext4的文件系统上执行，其他文件系统可能无法支持该命令比如<code>chattr: Inappropriate ioctl for device while reading flags on hello.txt</code>;<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">❯ df -h</span><br><span class=\"line\">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class=\"line\">rootfs          151G   92G   59G  62% /</span><br></pre></td></tr></table></figure></li>\n<li>(2) 该命令常用选项a/i的设置值，而且很多设置值必须要身为root才能执行</li>\n</ul>\n<p><br></p>\n<h5 id=\"lsattr-权限-文件隐藏属性查看\"><a href=\"#lsattr-权限-文件隐藏属性查看\" class=\"headerlink\" title=\"lsattr 权限 - 文件隐藏属性查看\"></a>lsattr 权限 - 文件隐藏属性查看</h5><p>描述：查看设置chattr的权限;</p>\n<p>语法参数:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lsattr [-adR]  文件名</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 选项：</span></span><br><span class=\"line\">-a 显示所有文件和目录</span><br><span class=\"line\">-d 若目标是目录仅列出目录本身的属性，而不是子文件的属性</span><br><span class=\"line\">-R 连同子目录的数据也一并列出来</span><br></pre></td></tr></table></figure></p>\n<p><em>实际案例：</em><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 示例1.查找所有不可修改的文件</span></span><br><span class=\"line\">lsattr -d ww/ <span class=\"comment\">#目录</span></span><br><span class=\"line\">----i----------- ww/</span><br><span class=\"line\">lsattr -a ww/  <span class=\"comment\">#文件</span></span><br><span class=\"line\">----i----------- ww/.   <span class=\"comment\">#关键点 i</span></span><br><span class=\"line\">---------------- ww/..</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例2.设置文件隐藏属性与查看</span></span><br><span class=\"line\"><span class=\"comment\">#  The 'j' option is only useful for ext3 and ext4 file systems.</span></span><br><span class=\"line\">&gt; chattr +aij weiyigeek.txt</span><br><span class=\"line\">&gt; lsattr weiyigeek.txt</span><br><span class=\"line\">----ia---j--- weiyigeek.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例3.貌似无用</span></span><br><span class=\"line\">find . | xargs -I file lsattr -a file 2&gt;/dev/null | grep <span class=\"string\">\"^----i\"</span></span><br><span class=\"line\">----i----------- ./ww</span><br><span class=\"line\">----i----------- ./ww/</span><br></pre></td></tr></table></figure></p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Linux命令","path":"api/categories/Linux命令.json"}],"tags":[{"name":"权限管理","path":"api/tags/权限管理.json"}]}