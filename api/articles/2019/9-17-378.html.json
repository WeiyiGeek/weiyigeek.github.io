{"title":"Hexo博客优化访问速度与持续集成和部署实践","slug":"编程世界/开发框架/Hexo/Hexo博客优化访问速度与持续集成和发布实践","date":"2019-09-17T15:34:30.000Z","updated":"2022-08-17T05:07:43.175Z","url":"2019/9-17-378.html","path":"api/articles/2019/9-17-378.html.json","covers":["https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200328155938.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200328161441.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200328164818.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200420001309.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200420003450.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200420003843.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200420010049.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200420005013.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h4 id=\"0x00-前言简述\"><a href=\"#0x00-前言简述\" class=\"headerlink\" title=\"0x00 前言简述\"></a>0x00 前言简述</h4><p>最近看了<code>@Tualatrix Chou</code>所写的<code>使用 jsDelivr 来优化网站访问速度</code>,深受启发又加之自己采用Hexo博客框架搭建了一个静态化的博客,同时采用github Page 进行托管，虽然加上Cloudflare的CDN来加速，但是实际上某些情况下还没有直接访问的速度快，当然加了总比没加好;</p>\n<p>我们先来说说<code>优化原理</code>想要提升网站的访问速度,基本上切入点无非是优化前后端的访问性能,根据我的实际情况来说，想前面所说的我的博客采用的是github page搭建问题不出在后端;</p>\n<p>先来看看我优化前的网站访问速度（真的惨不忍睹）,通过 Chrome 的 Developer Tools 的 Network 面板工具可以得到加上请求加载的时间：</p>\n<ul>\n<li>DOMContentLoaded (6.21s) <figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200328155938.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n</li>\n</ul>\n<p>从图中我们可以看出静态资源的加载是从github上面走的所有速度真的是，从中我们需要解决的是<code>图片资源、字体资源、css资源、js资源等</code>访问请求连接问题;</p>\n<hr>\n<h4 id=\"0x01-优化方法\"><a href=\"#0x01-优化方法\" class=\"headerlink\" title=\"0x01 优化方法\"></a>0x01 优化方法</h4><p>常用的优化网站速度的方法(针对于包含了国外的资源访问请求)</p>\n<ul>\n<li>npmjs + jsDelivr</li>\n<li>github + jsDelivr</li>\n</ul>\n<p><br/></p>\n<p><strong>1.npmjs + jsDelivr</strong></p>\n<ul>\n<li>1)创建 npmjs 账号:可以把网站静态资源作为 npm 包的形式放在 npmjs.org 网站上前提我们需要注册一个账号: npmjs.org;</li>\n<li>2)建立并发布一个自定义 npm 包，创建一个目录，然后放一个名为 package.json 的文件，写简单的两行即可：<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"name\"</span>: <span class=\"string\">\"imtx\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"version\"</span>: <span class=\"string\">\"1.0.0\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n将 imtx.js 和 imtx.css 放置其中，然后执行 npm publish，即可发布一个名为 imtx 的 npm 包了。</li>\n<li>3)使用 jsDelivr 来引用这个包等待发布完这个 npm 包后就可以在线使用它了<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#网站的资源文件就通过 jsDelivr 这个全球加速的 CDN 来访问了</span></span><br><span class=\"line\">https://cdn.jsdelivr.net/npm/imtx@1.0.0/imtx.js</span><br><span class=\"line\">https://cdn.jsdelivr.net/npm/imtx@1.0.0/imtx.css</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br/></p>\n<p><strong>2.github + jsDelivr</strong><br>我们也可以采用这样的方式，相比较于npmjs稍稍复杂的配置，采用将博客中所用的静态资源文件都可以采用jsDelivr CDN 进行加速使用而且非常简单；</p>\n<ul>\n<li>1.在我们的Github中创建一个项目Blog里面存放了静态资源文件比如index.js以及index.css</li>\n<li>2.假设项目的访问路径<code>http://github.com/weiyigeek/blog</code></li>\n<li>3.采用CDN加速访问github上面的项目资源的路径<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/gh/weiyigeek/blog/index.js</span><br><span class=\"line\">https://cdn.jsdelivr.net/gh/weiyigeek/blog/index.css</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br></p>\n<p><strong>3.hexo permalink_defaults 持久化链接</strong><br>描述:您可在<code>permalink_defaults</code> 参数下调整永久链接中各变量的默认值,方便网站收录与网站SEO排名上升,而不是一串中文字符为URL的链接;</p>\n<p>需要配置地方:</p>\n<ul>\n<li>hexo _config.yml</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 注意观察 :pageid 关键点</span></span><br><span class=\"line\"><span class=\"attr\">permalink:</span> <span class=\"string\">:year/:i_month/:pageid.html</span></span><br><span class=\"line\"><span class=\"attr\">permalink_defaults:</span></span><br><span class=\"line\"><span class=\"attr\">  pageid:</span> <span class=\"string\">en</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>文章头部</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">Hexo博客优化访问速度与持续集成和部署实践</span></span><br><span class=\"line\"><span class=\"attr\">pageid:</span> <span class=\"number\">378</span></span><br></pre></td></tr></table></figure>\n<p>批量持久化链接shell脚本在您的source/_post目录中执行即可:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 按照数字递增</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> number=0</span><br><span class=\"line\">find /blog/<span class=\"built_in\">source</span>/_posts -name *.md &gt; /tmp/all.md</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> line</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">  <span class=\"comment\"># 在第三行进行插入</span></span><br><span class=\"line\">  sed -i <span class=\"string\">\"3i\\  pageid: <span class=\"variable\">$&#123;number&#125;</span>\"</span> <span class=\"variable\">$line</span></span><br><span class=\"line\">  <span class=\"built_in\">let</span> number++</span><br><span class=\"line\"><span class=\"keyword\">done</span> &lt; /tmp/all.md</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h4 id=\"0x02-优化实操\"><a href=\"#0x02-优化实操\" class=\"headerlink\" title=\"0x02 优化实操\"></a>0x02 优化实操</h4><p>我们的博客框架采用Hexo然后通过Github Page进行访问的，所以我们需要在本地修改配置和代码，比如我们采用的是<code>Hexo Theme By Nayo</code>主题;</p>\n<p>将博客中所有使用到的静态资源CSS/JS/字体/图片都加上jsdelivr CDN的访问;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#\\themes\\nayo\\layout\\_partial\\head.ejs</span></span><br><span class=\"line\">&lt;!-- &lt;%- css(<span class=\"string\">'nayo.min'</span>) %&gt;  --&gt;</span><br><span class=\"line\">&lt;script src=<span class=\"string\">\"https://cdn.jsdelivr.net/gh/WeiyiGeek/weiyigeek.github.io/nayo.min.css\"</span>&gt;&lt;/script&gt;   </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">#themes\\nayo\\layout\\layout.ejs</span></span><br><span class=\"line\">&lt;!-- &lt;%- js(<span class=\"string\">'nayo.bundle'</span>)%&gt;            --&gt;</span><br><span class=\"line\">&lt;script src=<span class=\"string\">\"https://cdn.jsdelivr.net/gh/WeiyiGeek/weiyigeek.github.io/nayo.bundle.js\"</span>&gt;&lt;/script&gt;    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#themes\\nayo\\source\\nayo.min.css</span></span><br><span class=\"line\">@font-face &#123;</span><br><span class=\"line\">font-family:iconfont;</span><br><span class=\"line\">src:url(https://cdn.jsdelivr.net/gh/WeiyiGeek/weiyigeek.github.io/fonts/iconfont.6239.eot);</span><br><span class=\"line\">src:url(https://cdn.jsdelivr.net/gh/WeiyiGeek/weiyigeek.github.io/fonts/iconfont.6239.eot?<span class=\"comment\">#iefix) format(\"embedded-opentype\"),</span></span><br><span class=\"line\">url(https://cdn.jsdelivr.net/gh/WeiyiGeek/weiyigeek.github.io/fonts/iconfont.e69a.woff) format(<span class=\"string\">\"woff\"</span>),</span><br><span class=\"line\">url(https://cdn.jsdelivr.net/gh/WeiyiGeek/weiyigeek.github.io/fonts/iconfont.7c23.ttf) format(<span class=\"string\">\"truetype\"</span>),</span><br><span class=\"line\">url(https://cdn.jsdelivr.net/gh/WeiyiGeek/weiyigeek.github.io/fonts/iconfont.32d1.svg<span class=\"comment\">#iconfont) format(\"svg\")</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#themes\\nayo\\_config.yml</span></span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200328161441.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p>部署后查看一哈修改之后的访问速度效果:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@WeiyiGeek F:\\blog]<span class=\"comment\"># hexo d -g</span></span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200328164818.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p>补充说明:<code>[2020年4月23日 23:51:19]</code></p>\n<ul>\n<li>JsDelivr 全站托管转化脚本<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#规则就是将 github.com 替换为 cdn.jsdelivr.net/gh 然后去掉 /blob/master接上 repo 里文件的绝对路径即可</span></span><br><span class=\"line\">GitHub rul: https://github.com/ohmyzsh/ohmyzsh/blob/master/tools/install.sh</span><br><span class=\"line\">jsDelivr url: https://cdn.jsdelivr.net/gh/ohmyzsh/ohmyzsh/tools/install.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#data: 2020-03-31</span></span><br><span class=\"line\"><span class=\"comment\">#author: muzi502</span></span><br><span class=\"line\"><span class=\"comment\">#GitHub rul: https://github.com/username/project/blob/master/tools/install.sh</span></span><br><span class=\"line\"><span class=\"comment\">#jsDelivr url: https://cdn.jsdelivr.net/gh/username/project/tools/install.sh</span></span><br><span class=\"line\"><span class=\"comment\">#set -xue #要求必须输入参数</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">\"<span class=\"variable\">$2</span>\"</span> = <span class=\"string\">\"wget\"</span> ] || [ -z <span class=\"variable\">$2</span> ];<span class=\"keyword\">then</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"#DownURL : <span class=\"variable\">$1</span>\"</span></span><br><span class=\"line\">wget $(<span class=\"built_in\">echo</span> <span class=\"variable\">$1</span> | sed <span class=\"string\">'s/raw.githubusercontent.com/cdn.jsdelivr.net\\/gh/'</span> \\</span><br><span class=\"line\">               | sed <span class=\"string\">'s/github.com/cdn.jsdelivr.net\\/gh/'</span> \\</span><br><span class=\"line\">               | sed <span class=\"string\">'s/\\/master//'</span> | sed <span class=\"string\">'s/\\/blob//'</span> )</span><br><span class=\"line\"><span class=\"keyword\">elif</span> [ <span class=\"string\">\"<span class=\"variable\">$2</span>\"</span> = <span class=\"string\">\"curl\"</span> ];<span class=\"keyword\">then</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"#DownURL : <span class=\"variable\">$1</span>\"</span></span><br><span class=\"line\">curl $(<span class=\"built_in\">echo</span> <span class=\"variable\">$1</span> | sed <span class=\"string\">'s/raw.githubusercontent.com/cdn.jsdelivr.net\\/gh/'</span> \\</span><br><span class=\"line\">               | sed <span class=\"string\">'s/github.com/cdn.jsdelivr.net\\/gh/'</span> \\</span><br><span class=\"line\">               | sed <span class=\"string\">'s/\\/master//'</span> | sed <span class=\"string\">'s/\\/blob//'</span> )</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\e[33m#Usage: <span class=\"variable\">$0</span> github.com/WeiyiGeek/peoject [wget|curl]\\e[0m\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><strong>参考站点:</strong></p>\n<ul>\n<li><a href=\"https://imtx.me/archives/2810.html\" target=\"_blank\" rel=\"noopener\">https://imtx.me/archives/2810.html</a></li>\n<li><a href=\"https://chi.miantiao.me/make-a-cdn-by-github-jsdelivr-travisci/\" target=\"_blank\" rel=\"noopener\">https://chi.miantiao.me/make-a-cdn-by-github-jsdelivr-travisci/</a></li>\n</ul>\n<hr>\n<h4 id=\"0x03-Hexo-CI-CD\"><a href=\"#0x03-Hexo-CI-CD\" class=\"headerlink\" title=\"0x03 Hexo CI/CD\"></a>0x03 Hexo CI/CD</h4><p>描述：在用hexo写博客记录自己心得以及工作所遇问题的时候是非常方便的，但是每次更改后都需要将修改添加的文件通过git上传到github或者gitee中，同时还需再本机hexo d -g 生成博客的静态化文件然后再上传到github page，由于需要在机器上按照npm环境才能正常使用hexo所以当换了电脑后是非常不方便，因此自建了gitlab来实现hexo 静态化页面的持续集成和部署;</p>\n<p><strong>环境说明:</strong></p>\n<ul>\n<li>Gitlab : 12.9.2</li>\n<li>操作系统: CentOS7 </li>\n<li>系统已安装: Gitlab-Runner(12.9.0) / docker-ce / docker-compose / git 等</li>\n</ul>\n<p>主要安装环境参考本博客文章:</p>\n<ul>\n<li>Gitlab安装流程: <a href=\"https://weiyigeek.top/2019/7/gitlab%E5%AE%89%E8%A3%85%E4%B8%8E%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8.html\" target=\"_blank\" rel=\"noopener\">GitLab安装与基础使用.md</a></li>\n<li>Gitlab-Runner(12.9.0): <a href=\"https://weiyigeek.top/2019/3/%E4%BE%9D%E6%89%98%E4%BA%8Egitlab%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8.html\" target=\"_blank\" rel=\"noopener\">依托于GitLab持续集成基础配置和使用.md</a></li>\n</ul>\n<p><br></p>\n<p><strong>配置流程:</strong><br>Step1.在本机打开git在blog项目中新添加一个gitlab远程仓库并进行代码上传如下操作(如何在Gitlab中创建项目-参考百度即可)；<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Blog Project -&gt; e:\\githubProject\\blog</span></span><br><span class=\"line\">$ git remote add gitlab git@gitlab.weiyigeek.top:WeiyiGeek/blog.git</span><br><span class=\"line\">$ git add .</span><br><span class=\"line\">$ git commit -m <span class=\"string\">\"Init inner gitlab\"</span></span><br><span class=\"line\">$ git push -u gitlab master</span><br><span class=\"line\">Enumerating objects: 5906, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Counting objects: 100% (5906/5906), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Delta compression using up to 4 threads</span><br><span class=\"line\">Compressing objects: 100% (5085/5085), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Writing objects: 100% (5906/5906), 16.27 MiB | 14.65 MiB/s, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Total 5906 (delta 3672), reused 1508 (delta 681)</span><br><span class=\"line\">remote: Resolving deltas: 100% (3672/3672), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote:</span><br><span class=\"line\">remote: ========================================================================</span><br><span class=\"line\">remote:</span><br><span class=\"line\">remote:               Welcome To WeiyiGeek Gitlab Code Repository</span><br><span class=\"line\">remote:</span><br><span class=\"line\">remote: ========================================================================</span><br><span class=\"line\">remote:</span><br><span class=\"line\">To gitlab.weiyigeek.top:WeiyiGeek/blog.git</span><br><span class=\"line\"> * [new branch]      master -&gt; master</span><br><span class=\"line\">Branch <span class=\"string\">'master'</span> <span class=\"built_in\">set</span> up to track remote branch <span class=\"string\">'master'</span> from <span class=\"string\">'gitlab'</span>.</span><br></pre></td></tr></table></figure></p>\n<p>Step2.在gitlab-ci中注册Runner在上面的文章中有详细的说明，以及将项目加入runner之中,注意此处Excuter是使用的shell，当然您也可以使用docker；<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200420001309.png\" alt=\"WeiyiGeek.gitlab-runner\" title=\"\" class=\"\">\n                <p>WeiyiGeek.gitlab-runner</p>\n            </figure></p>\n<p>Step3.在CentOS7即Gitlab-Runner机器上安装git和ssh避免首次登录服务时候需要输入yes；<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#查看git版本</span></span><br><span class=\"line\">[gitlab-runner@initiator blog]$ git --version</span><br><span class=\"line\">git version 2.22.0</span><br><span class=\"line\"><span class=\"comment\">#如果版本低于2.x.x建议更新一下</span></span><br><span class=\"line\">yum install http://opensource.wandisco.com/centos/7/git/x86_64/wandisco-git-release-7-2.noarch.rpm</span><br><span class=\"line\">sudo yum install –y git</span><br><span class=\"line\">git --version</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#ssh避免首次登录服务时候需要输入yes 我们可以将StrictHostKeyChecking修改为no</span></span><br><span class=\"line\"><span class=\"variable\">$vim</span> /etc/ssh/ssh_config</span><br><span class=\"line\">Host *</span><br><span class=\"line\">        ......</span><br><span class=\"line\">        StrictHostKeyChecking no  <span class=\"comment\">#关键点</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#修改后重新sshd服务</span></span><br><span class=\"line\">systemctl restart sshd   </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## [此处是采用docker进行部署的时候可以进行设置仅供参考]</span></span><br><span class=\"line\"><span class=\"comment\">## 写入密钥 并配置 ~/.ssh/config 文件</span></span><br><span class=\"line\"><span class=\"comment\"># before_script:</span></span><br><span class=\"line\"><span class=\"comment\">#   - 'which ssh-agent || ( apt-get update -y &amp;&amp; apt-get install openssh-client -y )'</span></span><br><span class=\"line\"><span class=\"comment\">#   - eval $(ssh-agent -s)</span></span><br><span class=\"line\"><span class=\"comment\">#   - ssh-add &lt;(echo \"$SSH_PRIVATE_KEY\")</span></span><br><span class=\"line\"><span class=\"comment\">#   - mkdir -p ~/.ssh</span></span><br><span class=\"line\"><span class=\"comment\">#   - '[[ -f /.dockerenv ]] &amp;&amp; echo -e \"Host *\\\\n\\\\tStrictHostKeyChecking no\\\\n\\\\n\" &gt; ~/.ssh/config'</span></span><br></pre></td></tr></table></figure></p>\n<p>Step4.拷贝已经在Github以及gitee中认证的公钥/密钥到<code>/home/gitlabp-runner/.ssh</code>之中<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#上传后注意权限</span></span><br><span class=\"line\">[gitlab-runner@initiator .ssh]$ chmod +600 *</span><br><span class=\"line\">[gitlab-runner@initiator .ssh]$ ls -alh</span><br><span class=\"line\">总用量 8.0K</span><br><span class=\"line\">drwxr-xr-x. 2 root          root            38 4月  19 12:54 .</span><br><span class=\"line\">drwx------. 5 gitlab-runner gitlab-runner  140 4月  19 14:47 ..</span><br><span class=\"line\">-rw-------. 1 gitlab-runner gitlab-runner 2.6K 4月  19 12:54 id_rsa</span><br><span class=\"line\">-rw-------. 1 gitlab-runner gitlab-runner  573 4月  19 12:54 id_rsa.pub</span><br></pre></td></tr></table></figure></p>\n<p>Step5.测试是否可以连接到github以及gitee仓库之中;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[gitlab-runner@initiator .ssh]$ ssh -T git@github.com</span><br><span class=\"line\">Failed to add the host to the list of known hosts (/home/gitlab-runner/.ssh/known_hosts). <span class=\"comment\">#该错误是由于我们没有创建known_hosts文件(不影响)</span></span><br><span class=\"line\">Hi WeiyiGeek! You<span class=\"string\">'ve successfully authenticated, but GitHub does not provide shell access.'</span></span><br><span class=\"line\"></span><br><span class=\"line\">[gitlab-runner@initiator .ssh]$ ssh -T git@gitee.com</span><br><span class=\"line\">Hi WeiyiGeek! You<span class=\"string\">'ve successfully authenticated, but GITEE.COM does not provide shell access.'</span></span><br></pre></td></tr></table></figure></p>\n<p>Step6.编写CI/CD hexo博客的.gitlab-ci.yaml 以及 docker-compose.yaml</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#.gitlab-ci.yaml</span></span><br><span class=\"line\"><span class=\"comment\">#Author: WeiyiGeek</span></span><br><span class=\"line\"><span class=\"comment\">#Desc：Hexo Blog 持续集成与部署</span></span><br><span class=\"line\"><span class=\"attr\">stages:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">build</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">deploy</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#采用缓存机制将node.js下载依赖目录进行缓存;</span></span><br><span class=\"line\"><span class=\"attr\">cache:</span></span><br><span class=\"line\"><span class=\"attr\">  untracked:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  paths:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">node_modules/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">hexo_build:</span></span><br><span class=\"line\"><span class=\"attr\">  stage:</span> <span class=\"string\">build</span></span><br><span class=\"line\"><span class=\"attr\">  cache:</span></span><br><span class=\"line\"><span class=\"attr\">    untracked:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    paths:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">node_modules/</span></span><br><span class=\"line\"><span class=\"attr\">    policy:</span> <span class=\"string\">pull</span></span><br><span class=\"line\"><span class=\"attr\">  script:</span></span><br><span class=\"line\"><span class=\"bullet\">   -</span> <span class=\"string\">docker</span> <span class=\"string\">stop</span> <span class=\"string\">blog</span></span><br><span class=\"line\"><span class=\"bullet\">   -</span> <span class=\"string\">docker-compose</span> <span class=\"bullet\">-v</span></span><br><span class=\"line\"><span class=\"bullet\">   -</span> <span class=\"string\">chmod</span> <span class=\"string\">+x</span> <span class=\"string\">./startHexo.sh</span></span><br><span class=\"line\"><span class=\"bullet\">   -</span> <span class=\"string\">docker-compose</span> <span class=\"string\">up</span> <span class=\"bullet\">-d</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">hexo_deploy:</span></span><br><span class=\"line\"><span class=\"attr\">  stage:</span> <span class=\"string\">deploy</span></span><br><span class=\"line\"><span class=\"attr\">  script:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">sleep</span> <span class=\"number\">70</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">cp</span> <span class=\"string\">db.json</span> <span class=\"string\">./public/</span> <span class=\"string\">&amp;&amp;</span> <span class=\"string\">cd</span> <span class=\"string\">./public</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">git</span> <span class=\"string\">init</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">git</span> <span class=\"string\">remote</span> <span class=\"string\">add</span> <span class=\"string\">origin</span> <span class=\"string\">git@github.com:WeiyiGeek/weiyigeek.github.io.git</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">git</span> <span class=\"string\">remote</span> <span class=\"string\">add</span> <span class=\"string\">gitee</span> <span class=\"string\">git@gitee.com:WeiyiGeek/WeiyiGeek.git</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">.</span> <span class=\"string\">&amp;&amp;</span> <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"bullet\">-m</span> <span class=\"string\">\"Gitlab-ci blog\"</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"bullet\">-f</span> <span class=\"bullet\">-u</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"bullet\">-f</span> <span class=\"bullet\">-u</span> <span class=\"string\">gitee</span> <span class=\"string\">master</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">docker</span> <span class=\"string\">stop</span> <span class=\"string\">blog</span></span><br></pre></td></tr></table></figure>\n<p>docker-compose.yaml<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#这里采用alpine-node镜像</span></span><br><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">\"3.0\"</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\"><span class=\"attr\">  blog:</span></span><br><span class=\"line\"><span class=\"attr\">    image:</span> <span class=\"string\">mhart/alpine-node:latest</span></span><br><span class=\"line\"><span class=\"attr\">    container_name:</span> <span class=\"string\">blog</span></span><br><span class=\"line\"><span class=\"attr\">    labels:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">\"com.example.author=weiyigeek\"</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">\"com.example.description=blog\"</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">\"com.example.department=IT\"</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">\"com.example.release=v1.0\"</span></span><br><span class=\"line\"><span class=\"attr\">    ports:</span> </span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">\"8080:4000\"</span></span><br><span class=\"line\"><span class=\"attr\">    volumes:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">\"$PWD:/opt/blog/\"</span></span><br><span class=\"line\"><span class=\"attr\">    working_dir:</span> <span class=\"string\">/opt/blog/</span></span><br><span class=\"line\"><span class=\"attr\">    entrypoint:</span> <span class=\"string\">/opt/blog/startHexo.sh</span> <span class=\"string\">build</span> <span class=\"number\">996</span></span><br><span class=\"line\"><span class=\"attr\">    command:</span> <span class=\"string\">/opt/blog/startHexo.sh</span> <span class=\"string\">start</span></span><br></pre></td></tr></table></figure></p>\n<p>startHexo.sh<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$1</span> == <span class=\"string\">\"build\"</span> ];<span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"comment\">#避免权限问题在alpine镜像中也创建一个gitlab-runner用户</span></span><br><span class=\"line\">  addgroup -S gitlab-runner &amp;&amp; <span class=\"built_in\">echo</span> -e <span class=\"string\">\"WeiyiGeek1\\nWeiyiGeek1\"</span> | adduser gitlab-runner -u <span class=\"variable\">$2</span> -G gitlab-runner -D -S -s /bin/ash</span><br><span class=\"line\">  npm config <span class=\"built_in\">set</span> unsafe-perm <span class=\"literal\">true</span> &amp;&amp; npm config <span class=\"built_in\">set</span> registry https://registry.npmmirror.com \\</span><br><span class=\"line\">  &amp;&amp; npm install -g hexo-cli --save \\</span><br><span class=\"line\">  &amp;&amp; npm install --save </span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\">pkill hexo &amp;&amp; npm install hexo --save</span><br><span class=\"line\">hexo clean &amp;&amp; chown -R gitlab-runner:gitlab-runner ./  &amp;&amp; su gitlab-runner -c <span class=\"string\">\"hexo generate\"</span> &amp;&amp; su gitlab-runner -c <span class=\"string\">\"hexo server\"</span></span><br></pre></td></tr></table></figure></p>\n<p>补充说明:</p>\n<ul>\n<li>上面docker-compose.yaml我们给脚本指定了996参数，这个参数是gitlab-runner主机上的gitlab-runner用户的uid值，由于gitlab-ci执行用户是gitlab-runner这里避免权限不足才进行这样设置的，您需要根据您们机器上gitlab-runner值来修改；<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[gitlab-runner@initiator .ssh]$ grep <span class=\"string\">\"gitlab-runner\"</span> /etc/passwd</span><br><span class=\"line\">gitlab-runner:x:996:497:GitLab Runner:/home/gitlab-runner:/bin/bash</span><br></pre></td></tr></table></figure></li>\n<li>在yaml我们设置一个<code>sleep 120</code>命令由于当build工作执行完成时候 hexo geneater 可能还没生成环境此时便会进行deploy阶段工作这样会导致CI/CD失败，所以这样做防止管道阻塞以及构建失败；</li>\n<li>git命令:本地分支强制推送到远程代码库执行 <code>git push -f origin master</code>,由于远程 <code>github|gitee Page</code> 仓库我们不需要<code>git pull</code> 只需要 <code>git push</code> 所以这里我们强制推送来防止在runner中运行构建失败；</li>\n<li>缓存目录查看:<code>/home/gitlab-runner/cache/WeiyiGeek/blog/default-24/cache.zip</code></li>\n</ul>\n<p>Step7.验证我们编写gitlab-CI/CD 文件 <code>.gitlab-ci.yaml</code></p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200420003450.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n<p>Step8.重新上传更改的文件到gitlab之中，然后它便会自动触发CI/CD流水线我们也可以在Gitlab-CI进行查看;</p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200420003843.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n<p>Step9.在作业中查看gitlab-runner执行的详细情况以及查看docker镜像执行情况；</p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200420010049.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#终端1</span></span><br><span class=\"line\">docker logs --tail 100 -f blog</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#终端2</span></span><br><span class=\"line\">watch -x <span class=\"string\">'ll'</span></span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200420005013.png\" alt=\"WeiyiGeek.blog\" title=\"\" class=\"\">\n                <p>WeiyiGeek.blog</p>\n            </figure>\n<p>Step10.至此Hexo基于Gitlab的自动化集成和部署就完成了,当然您也可以将deploy中的<code>docker stop blog</code>去掉即可直接访问我们hexo blog;</p>\n<hr>\n<h3 id=\"0x04-入坑问题\"><a href=\"#0x04-入坑问题\" class=\"headerlink\" title=\"0x04 入坑问题\"></a>0x04 入坑问题</h3><p><em>问题1：gitlab-runner拉取git仓库失败</em><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Running with gitlab-runner 12.0.1 (0e5417a3)</span><br><span class=\"line\">  on autobuild-02 qyhAY53y</span><br><span class=\"line\">Using Shell executor...</span><br><span class=\"line\">Running on xxxxx.novalocal...</span><br><span class=\"line\">Fetching changes with git depth <span class=\"built_in\">set</span> to 50...</span><br><span class=\"line\">Reinitialized existing Git repository <span class=\"keyword\">in</span> /home/gitlab-runner/builds/qyhAY53y/0/tangaoxiong/ci-hotupdate-demo/.git/</span><br><span class=\"line\">fatal: git fetch-pack: expected shallow list</span><br><span class=\"line\">fatal: The remote end hung up unexpectedly</span><br><span class=\"line\">ERROR: Job failed: <span class=\"built_in\">exit</span> status 1</span><br></pre></td></tr></table></figure></p>\n<p>解决办法:安装较新版本的git即可,此处以CentOS7为例;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install http://opensource.wandisco.com/centos/7/git/x86_64/wandisco-git-release-7-2.noarch.rpm</span><br><span class=\"line\">sudo yum install –y git</span><br><span class=\"line\">git --version</span><br></pre></td></tr></table></figure></p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Blog","path":"api/categories/Blog.json"}],"tags":[{"name":"Hexo","path":"api/tags/Hexo.json"},{"name":"优化配置","path":"api/tags/优化配置.json"},{"name":"持续集成交互","path":"api/tags/持续集成交互.json"}]}