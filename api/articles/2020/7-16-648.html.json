{"title":"Flask基础学习之入坑出坑体验记录","slug":"编程世界/Python/Web开发/Flask/Flask基础学习之入坑出坑体验记录","date":"2020-07-16T12:34:30.000Z","updated":"2022-08-10T08:39:22.412Z","url":"2020/7-16-648.html","path":"api/articles/2020/7-16-648.html.json","covers":null,"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h2 id=\"0x00-问题解决\"><a href=\"#0x00-问题解决\" class=\"headerlink\" title=\"0x00 问题解决\"></a>0x00 问题解决</h2><h3 id=\"1-使用Flash原生的app-run运行一个简易的http服务用来提供接口，出现请勿在生产环境中使用开发服务器，使用生产WSGI服务器的提示。\"><a href=\"#1-使用Flash原生的app-run运行一个简易的http服务用来提供接口，出现请勿在生产环境中使用开发服务器，使用生产WSGI服务器的提示。\" class=\"headerlink\" title=\"1.使用Flash原生的app.run运行一个简易的http服务用来提供接口，出现请勿在生产环境中使用开发服务器，使用生产WSGI服务器的提示。\"></a>1.使用Flash原生的app.run运行一个简易的http服务用来提供接口，出现请勿在生产环境中使用开发服务器，使用生产WSGI服务器的提示。</h3><p>错误信息: <code>WARNING: Do not use the development server in a production environment. Use a production WSGI server</code></p>\n<p>问题原因: 由于原生的 <code>app.run(host=&quot;0.0.0.0&quot;, port=80)</code> 只适用于开发模式，因为它是单线程的，生产环境影响性能，替代方案是可以用 uWSGI 或者 pywsgi。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 三者区别</span></span><br><span class=\"line\">1.app.run 启动的是单线程服务，性能很低</span><br><span class=\"line\"></span><br><span class=\"line\">2.pywsgi 服务器使用的是gevent的pywsgi模块，性能不错，配置也很简单，但是它只是把单线程改造成了单线程异步方式</span><br><span class=\"line\"></span><br><span class=\"line\">3.uWSGI 性能最好，配置稍微比上面难一点，但是它是支持多进程、多线程、和多协程的方式，简直就是完美，所以我选择尝试使用uWSGI服务器来替代</span><br></pre></td></tr></table></figure>\n<p>解决办法: 从上面可知解决版本无非两种 <code>pywsgi</code> 与 <code>uWSGI</code>.</p>\n<ul>\n<li>pywsgi 模块方式</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.安装gevent模块</span></span><br><span class=\"line\">pip install gevent</span><br><span class=\"line\"><span class=\"comment\"># 2.在启动类里引入模块</span></span><br><span class=\"line\">from gevent import pywsgi</span><br><span class=\"line\"><span class=\"comment\"># 3.在main方法里将app.run替换</span></span><br><span class=\"line\">server = pywsgi.WSGIServer((<span class=\"string\">'0.0.0.0'</span>, 80), app,)</span><br><span class=\"line\">server.serve_forever()</span><br></pre></td></tr></table></figure>\n<ul>\n<li>uWSGI 模块方式</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.安装uWSGI模块</span></span><br><span class=\"line\">pip install uwsgi</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.在根目录下创建uWSGI配置文件(uwsgi.ini)</span></span><br><span class=\"line\">tee uwsgi.ini &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">[uwsgi]</span><br><span class=\"line\"><span class=\"comment\"># 地址端口</span></span><br><span class=\"line\">http = 0.0.0.0:80</span><br><span class=\"line\"><span class=\"comment\"># 项目路径</span></span><br><span class=\"line\"><span class=\"built_in\">chdir</span> = /root/projectname</span><br><span class=\"line\"><span class=\"comment\"># 项目启动文件</span></span><br><span class=\"line\">wsgi-file = manage.py</span><br><span class=\"line\"><span class=\"comment\"># 项目需要调用的启动类</span></span><br><span class=\"line\">callable = app</span><br><span class=\"line\"><span class=\"comment\"># 进程线程设置</span></span><br><span class=\"line\">processes = 4</span><br><span class=\"line\">threads = 10</span><br><span class=\"line\"><span class=\"comment\"># 日志文件</span></span><br><span class=\"line\">daemonize = /app/logs/uwsgi.log</span><br><span class=\"line\"><span class=\"comment\"># 保存主进程pid文件</span></span><br><span class=\"line\">pidfile = uwsgi.pid</span><br><span class=\"line\"><span class=\"comment\"># 是否需要主进程</span></span><br><span class=\"line\">master = <span class=\"literal\">true</span></span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.相关指令</span></span><br><span class=\"line\"><span class=\"comment\"># 启动</span></span><br><span class=\"line\">uwsgi --ini uwsgi.ini</span><br><span class=\"line\"><span class=\"comment\"># 重新加载</span></span><br><span class=\"line\">uwsgi --reload uwsgi.pid</span><br><span class=\"line\"><span class=\"comment\"># 停止</span></span><br><span class=\"line\">uwsgi --stop uwsgi.pid</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4.Flask 入口文件（示例，app 后面需要自行实现）</span></span><br><span class=\"line\"><span class=\"comment\"># manage.py</span></span><br><span class=\"line\">from app import create_app</span><br><span class=\"line\">app = create_app()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name_ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">  app.run(host=<span class=\"string\">\"0.0.0.0\"</span>, port=80)</span><br></pre></td></tr></table></figure>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Python3","path":"api/categories/Python3.json"},{"name":"Web开发","path":"api/categories/Web开发.json"}],"tags":[{"name":"Flask","path":"api/tags/Flask.json"}]}