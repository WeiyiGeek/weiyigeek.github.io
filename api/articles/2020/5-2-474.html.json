{"title":"n2-kubernetes操作命令详细一览","slug":"虚拟云容/云容器/Kubernetes/n2-kubernetes操作命令详细一览","date":"2020-05-02T09:37:47.000Z","updated":"2023-03-05T09:22:43.128Z","url":"2020/5-2-474.html","path":"api/articles/2020/5-2-474.html.json","covers":null,"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h2 id=\"0x00-前言简述\"><a href=\"#0x00-前言简述\" class=\"headerlink\" title=\"0x00 前言简述\"></a>0x00 前言简述</h2><p>描述: 学习 Kubernetes 最重要的是其基础的理论概念以及实践操作, 而实际操作又必不可少的是k8s相关的命令，所以为了方便自己以及读者的查阅，将自己在学习过程中所遇的命令进行一个简单的记录；</p>\n<h2 id=\"0x01-Kubeadm-命令-用来初始化集群的指令\"><a href=\"#0x01-Kubeadm-命令-用来初始化集群的指令\" class=\"headerlink\" title=\"0x01 Kubeadm 命令 - 用来初始化集群的指令\"></a>0x01 Kubeadm 命令 - 用来初始化集群的指令</h2><p>描述:该命令是安装K8s后的基础命令可以进行K8s主或者从节点的初始化，以及节点加入管理;</p>\n<h3 id=\"init-初始化配置相关\"><a href=\"#init-初始化配置相关\" class=\"headerlink\" title=\"init - 初始化配置相关\"></a>init - 初始化配置相关</h3><p>描述:该命令用户初始化节点设置master节点的控制面板以及网络相关的设置;</p>\n<p><strong>命令参数</strong></p>\n<ul>\n<li>phase : 该子命令分阶段创建控制平面节点。</li>\n</ul>\n<p>参数说明:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--apiserver-advertise-address string ： API 服务器所公布的其正在监听的 IP 地址。</span><br><span class=\"line\">--apiserver-bind-port int32 ： API 服务器绑定的端口, 默认值：6443</span><br><span class=\"line\">--apiserver-cert-extra-sans stringSlice : 用于 API Server 服务证书的可选附加主题备用名称（SAN）,可以是 IP 地址和 DNS 名称。</span><br><span class=\"line\">--certificate-key string ：用于加密 kubeadm-certs Secret 中的控制平面证书的密钥。</span><br><span class=\"line\"></span><br><span class=\"line\">--control-plane-endpoint string ： 为控制平面指定一个稳定的 IP 地址或 DNS 名称。</span><br><span class=\"line\">--image-repository string ：选择用于拉取控制平面镜像的容器仓库，默认值：<span class=\"string\">\"k8s.gcr.io\"</span>, 国内一般要设置镜像源。</span><br><span class=\"line\">--kubernetes-version string ：为控制平面选择一个特定的 Kubernetes 版本，默认值：<span class=\"string\">\"stable-1\"</span>。</span><br><span class=\"line\">--cri-socket string ：指定要连接的 CRI 套接字的路径。</span><br><span class=\"line\"></span><br><span class=\"line\">--node-name string : 指定节点的名称。</span><br><span class=\"line\"></span><br><span class=\"line\">--pod-network-cidr string : 指明 pod 网络可以使用的 IP 地址段,如果设置了这个参数，控制平面将会为每一个节点自动分配 CIDRs。(flannel-10.244.0.0/16)</span><br><span class=\"line\">--service-cidr string : 为服务的虚拟 IP 地址另外指定 IP 地址段, 默认值：<span class=\"string\">\"10.96.0.0/12\"</span></span><br><span class=\"line\">--service-dns-domain string ：为服务另外指定域名，默认值：<span class=\"string\">\"cluster.local\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">--token string ：用于建立控制平面节点与工作节点间的双向通信,格式为`[a-z0-9]&#123;6&#125;\\.[a-z0-9]&#123;16&#125;`-示例`abcdef.0123456789abcdef`</span><br><span class=\"line\">--token-ttl duration ：令牌被自动删除之前的持续时间（例如1s、2m、3h），如果设置为 <span class=\"string\">'0'</span>，则令牌将永不过期</span><br><span class=\"line\">--upload-certs : 将控制平面证书上传到 kubeadm-certs Secret。</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p><strong>简单示例:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 示例1.Master节点初始化采用指定yaml配置文件进行初始化参数的传入，下述配置清单可由 kubeadm config print init-defaults 生成</span></span><br><span class=\"line\">cat &lt;&lt;EOF &gt; ./kubeadm-config.yaml</span><br><span class=\"line\">apiVersion: kubeadm.k8s.io/v1beta2</span><br><span class=\"line\">kind: ClusterConfiguration</span><br><span class=\"line\">kubernetesVersion: v<span class=\"variable\">$&#123;K8SVERSION&#125;</span></span><br><span class=\"line\">imageRepository: registry.cn-hangzhou.aliyuncs.com/google_containers</span><br><span class=\"line\">controlPlaneEndpoint: <span class=\"string\">\"<span class=\"variable\">$&#123;APISERVER_NAME&#125;</span>:6443\"</span></span><br><span class=\"line\">networking:</span><br><span class=\"line\">  serviceSubnet: <span class=\"string\">\"10.99.0.0/16\"</span></span><br><span class=\"line\">  podSubnet: <span class=\"string\">\"<span class=\"variable\">$&#123;POD_SUBNET&#125;</span>\"</span></span><br><span class=\"line\">  dnsDomain: <span class=\"string\">\"cluster.local\"</span></span><br><span class=\"line\">EOF</span><br><span class=\"line\"><span class=\"comment\"># 执行完成会显示集群master节点加入以及Node节点加入的命令行(有效期24个小时)</span></span><br><span class=\"line\">kubeadm init --config=kubeadm-config.yaml --upload-certs</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例2.Master节点初始可以直接采用参数进行指定</span></span><br><span class=\"line\">kubeadm init --apiserver-advertise-address=0.0.0.0 \\               </span><br><span class=\"line\">--apiserver-cert-extra-sans=127.0.0.1 \\</span><br><span class=\"line\">--image-repository=registry.aliyuncs.com/google_containers  \\</span><br><span class=\"line\">--ignore-preflight-errors=all \\</span><br><span class=\"line\">--kubernetes-version=v1.23.5  \\</span><br><span class=\"line\">--service-cidr=10.96.0.0/16  \\</span><br><span class=\"line\">--pod-network-cidr=10.244.0.0/16 \\</span><br><span class=\"line\">--token-ttl=24h0m0s \\</span><br><span class=\"line\">--control-plane-endpoint=192.168.2.175 \\</span><br><span class=\"line\">--upload-certs </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例3.获得加入控制平台的证书 (使用此命令调用init工作流的单个阶段并且上传证书到kubeadm-certs)</span></span><br><span class=\"line\">sudo kubeadm init phase upload-certs --upload-certs</span><br><span class=\"line\">sudo kubeadm init phase control-plane all --config=configfile.yaml</span><br><span class=\"line\">sudo kubeadm init phase etcd <span class=\"built_in\">local</span> --config=configfile.yaml</span><br><span class=\"line\"><span class=\"comment\"># 你现在可以修改控制平面和 etcd 清单文件</span></span><br><span class=\"line\">sudo kubeadm init --skip-phases=control-plane,etcd --config=configfile.yaml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例4.以下阶段命令可用于证书到期后重新上传证书</span></span><br><span class=\"line\"><span class=\"comment\"># 如果未将参数 --certificate-key 传递给 kubeadm init 和 kubeadm init phase upload-certs， 则会自动生成一个新密钥。</span></span><br><span class=\"line\">kubeadm init phase upload-certs --upload-certs --certificate-key=SOME_VALUE --config=SOME_YAML_FILE</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"token-生成认证相关信息\"><a href=\"#token-生成认证相关信息\" class=\"headerlink\" title=\"token - 生成认证相关信息\"></a>token - 生成认证相关信息</h3><p><strong>命令参数:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Available Commands:</span></span><br><span class=\"line\">create      创建服务器上的引导令牌</span><br><span class=\"line\">delete      删除服务器上的引导令牌</span><br><span class=\"line\">generate    生成并打印引导令牌，但不要在服务器上创建它</span><br><span class=\"line\">list        列出服务器上的引导令牌</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 常用子命令</span></span><br><span class=\"line\">--dry-run : 是否启用干运行模式(模拟)</span><br><span class=\"line\">--<span class=\"built_in\">print</span>-join-command ：create - 打印节点加入命令</span><br></pre></td></tr></table></figure></p>\n<p><strong>基础实例:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 示例1.节点初始化命令行生成(有效期两个小时，token有效期24h)</span></span><br><span class=\"line\">kubeadm token create --<span class=\"built_in\">print</span>-join-command</span><br><span class=\"line\">kubeadm token create $(kubeadm token generate) --<span class=\"built_in\">print</span>-join-command --ttl=0 <span class=\"comment\">#方式2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例2.查看生成的token有效期（通常24H）</span></span><br><span class=\"line\">kubeadm token list</span><br><span class=\"line\">  <span class=\"comment\"># TOKEN                   TTL  EXPIRES                     USAGES                   DESCRIPTION    EXTRA GROUPS</span></span><br><span class=\"line\">  <span class=\"comment\"># 2af75y.5fio8knxu9e2ygvz 23h  2020-06-25T09:28:19+08:00   authentication,signing   &lt;none&gt;         system:bootstrappers:kubeadm:default-node-token</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例3.生成一个令牌</span></span><br><span class=\"line\">kubeadm token generate</span><br><span class=\"line\">  <span class=\"comment\"># w9tc5q.keah29ljmqonx00n</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"config-基础环境依赖配置\"><a href=\"#config-基础环境依赖配置\" class=\"headerlink\" title=\"config - 基础环境依赖配置\"></a>config - 基础环境依赖配置</h3><p>描述: 该命令可以显示或者打印集群初始化相关配置信息, 其次可以进行版本迁移，最后用于列举并拉取 kubeadm 所需的镜像。</p>\n<p><strong>命令参数:</strong></p>\n<ul>\n<li>images [list|pull] : 查看和拉取kubeadm初始化所需镜像。</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 关键参数</span></span><br><span class=\"line\">--config string : kubeadm 配置文件的路径。</span><br><span class=\"line\">--image-repository string : 选择要从中拉取控制平面镜像的容器仓库</span><br><span class=\"line\">--kubernetes-version string : 选择一个特定的 Kubernetes 版本</span><br><span class=\"line\">-o, --experimental-output string  默认值：<span class=\"string\">\"text\"</span>, 可选 text|json|yaml|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-as-json|jsonpath-file</span><br><span class=\"line\"><span class=\"comment\"># pull </span></span><br><span class=\"line\">--cri-socket string : 要连接的 CRI 套接字的路径, 仅当安装了多个CRI或具有非标准CRI插槽时，才使用此选项.</span><br></pre></td></tr></table></figure>\n<ul>\n<li>print : 打印集群Master初始化或者Node节点加入所提供的配置信息。</li>\n<li>migrate : 允许将本地旧版本的配置对象转换为最新支持的版本，而无需变更集群中的任何内容。</li>\n</ul>\n<p><br></p>\n<p><strong>基础实例:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 示例1.指定kubernetes版本查看依赖镜像，并指定仓库源;</span></span><br><span class=\"line\">kubeadm config images list --image-repository mirrorgcrio  --kubernetes-version=1.18.3</span><br><span class=\"line\"><span class=\"comment\"># mirrorgcrio/kube-apiserver:v1.18.3</span></span><br><span class=\"line\">.....</span><br><span class=\"line\"><span class=\"comment\"># mirrorgcrio/coredns:1.6.7</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例2.拉取指定版本以及镜像仓库(由于国内环境无法访问 k8s.gcr.io，此处最新推荐设置为阿里云镜像 )</span></span><br><span class=\"line\">kubeadm config images pull --image-repository  registry.cn-hangzhou.aliyuncs.com/google_containers --kubernetes-version=1.23.5</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> $(kubeadm config images list --kubernetes-version=1.23.5 --image-repository registry.cn-hangzhou.aliyuncs.com/google_containers -v 5);<span class=\"keyword\">do</span></span><br><span class=\"line\">  ctr -n k8s.io images pull <span class=\"variable\">$&#123;i&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例3.集群初始化配置信息查看</span></span><br><span class=\"line\">kubeadm config view </span><br><span class=\"line\">$ kubectl get cm -o yaml -n kube-system kubeadm-config <span class=\"comment\"># 官方建议</span></span><br><span class=\"line\"><span class=\"comment\"># Command \"view\" is deprecated, This command is deprecated and will be removed in a future release, please use 'kubectl get cm -o yaml -n kube-system kubeadm-config' to get the kubeadm config directly.</span></span><br><span class=\"line\"><span class=\"comment\"># apiServer:</span></span><br><span class=\"line\"><span class=\"comment\">#   extraArgs:</span></span><br><span class=\"line\"><span class=\"comment\">#     authorization-mode: Node,RBAC</span></span><br><span class=\"line\"><span class=\"comment\">#   timeoutForControlPlane: 4m0s</span></span><br><span class=\"line\"><span class=\"comment\"># apiVersion: kubeadm.k8s.io/v1beta2</span></span><br><span class=\"line\"><span class=\"comment\"># certificatesDir: /etc/kubernetes/pki</span></span><br><span class=\"line\"><span class=\"comment\"># clusterName: kubernetes</span></span><br><span class=\"line\"><span class=\"comment\"># controlPlaneEndpoint: weiyigeek.k8s:6443</span></span><br><span class=\"line\"><span class=\"comment\"># controllerManager: &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"># dns:</span></span><br><span class=\"line\"><span class=\"comment\">#   type: CoreDNS</span></span><br><span class=\"line\"><span class=\"comment\"># etcd:</span></span><br><span class=\"line\"><span class=\"comment\">#   local:</span></span><br><span class=\"line\"><span class=\"comment\">#     dataDir: /var/lib/etcd</span></span><br><span class=\"line\"><span class=\"comment\"># imageRepository: registry.cn-hangzhou.aliyuncs.com/google_containers</span></span><br><span class=\"line\"><span class=\"comment\"># kind: ClusterConfiguration</span></span><br><span class=\"line\"><span class=\"comment\"># kubernetesVersion: v1.19.3</span></span><br><span class=\"line\"><span class=\"comment\"># networking:</span></span><br><span class=\"line\"><span class=\"comment\">#   dnsDomain: cluster.local</span></span><br><span class=\"line\"><span class=\"comment\">#   podSubnet: 10.244.0.0/16</span></span><br><span class=\"line\"><span class=\"comment\">#   serviceSubnet: 10.96.0.0/12</span></span><br><span class=\"line\"><span class=\"comment\"># scheduler: &#123;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 实例4.打印用于 'kubeadm init' 的默认 init 配置对象资源清单（即集群Master节点初始化清单）</span></span><br><span class=\"line\">kubeadm config <span class=\"built_in\">print</span> init-defaults</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 实例5.打印用于 'kubeadm join' 的默认 join 配置对象。（即集群Node节点初始化清单）</span></span><br><span class=\"line\">kubeadm config <span class=\"built_in\">print</span> join-defaults</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 实例6.将本地旧版本的配置对象转换为最新支持的版本，例如v1.23.1版本变成当前最新的v1.23.5版本</span></span><br><span class=\"line\">$ kubeadm config migrate --new-config 输出新配置文件 --old-config 读取旧初始化配置文件(必须)</span><br><span class=\"line\">$ kubeadm config migrate --old-config=kubeadm-config-init.yml</span><br><span class=\"line\">apiVersion: kubeadm.k8s.io/v1beta3</span><br><span class=\"line\">bootstrapTokens:</span><br><span class=\"line\">- groups:</span><br><span class=\"line\">  - system:bootstrappers:kubeadm:default-node-token</span><br><span class=\"line\">  token: abcdef.0123456789abcdef</span><br><span class=\"line\">  ttl: 24h0m0s</span><br><span class=\"line\">  usages:</span><br><span class=\"line\">  - signing</span><br><span class=\"line\">  - authentication</span><br><span class=\"line\">kind: InitConfiguration</span><br><span class=\"line\">localAPIEndpoint:</span><br><span class=\"line\">  advertiseAddress: 10.10.107.225</span><br><span class=\"line\">  bindPort: 6443</span><br><span class=\"line\">nodeRegistration:</span><br><span class=\"line\">  criSocket: /run/containerd/containerd.sock</span><br><span class=\"line\">  imagePullPolicy: IfNotPresent</span><br><span class=\"line\">  name: node</span><br><span class=\"line\">  taints:</span><br><span class=\"line\">  - effect: NoSchedule</span><br><span class=\"line\">    key: node-role.kubernetes.io/master</span><br><span class=\"line\">---</span><br><span class=\"line\">apiServer:</span><br><span class=\"line\">  timeoutForControlPlane: 4m0s</span><br><span class=\"line\">apiVersion: kubeadm.k8s.io/v1beta3</span><br><span class=\"line\">certificatesDir: /etc/kubernetes/pki</span><br><span class=\"line\">clusterName: kubernetes</span><br><span class=\"line\">controllerManager: &#123;&#125;</span><br><span class=\"line\">dns: &#123;&#125;</span><br><span class=\"line\">etcd:</span><br><span class=\"line\">  <span class=\"built_in\">local</span>:</span><br><span class=\"line\">    dataDir: /var/lib/etcd</span><br><span class=\"line\">imageRepository: registry.cn-hangzhou.aliyuncs.com/google_containers</span><br><span class=\"line\">kind: ClusterConfiguration</span><br><span class=\"line\">kubernetesVersion: v1.23.5</span><br><span class=\"line\">networking:</span><br><span class=\"line\">  dnsDomain: cluster.local</span><br><span class=\"line\">  serviceSubnet: 10.96.0.0/12</span><br><span class=\"line\">scheduler: &#123;&#125;</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"join-集群或者节点加入初始化\"><a href=\"#join-集群或者节点加入初始化\" class=\"headerlink\" title=\"join - 集群或者节点加入初始化\"></a>join - 集群或者节点加入初始化</h3><p><strong>命令参数:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--control-plane : 控制面板地址</span><br><span class=\"line\">--certificate-key : 证书密钥</span><br><span class=\"line\">--discovery-token-ca-cert-hash : CA证书SHA256哈希值</span><br><span class=\"line\">--token : bootstrap 认证 token</span><br><span class=\"line\">--cri-socket string : CRI套接字的路径, 当系统中存在非标准或者多个CRI套接字时使用该选项。</span><br><span class=\"line\">--config string ：kubeadm 配置文件的路径</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p><strong>基础使用:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 示例1.Master主节点加入到集群控制平面</span></span><br><span class=\"line\">kubeadm join apiserver.test:6443 --token hzlzrr.uwuegx4locpu36oc \\</span><br><span class=\"line\">  --discovery-token-ca-cert-hash sha256:4cbe428cb3503277be9fbcf3a99de82a97397a624dd94d4270c4eed1b861f951 \\</span><br><span class=\"line\">  --control-plane --certificate-key 28b178f04afae3770aa92add0206650b2359dd61424f127a6d44142dd15a280d</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例2.Node工作节点的加入到集群控制平面 , 并指定CRI的套接字为 /run/containerd/containerd.sock。</span></span><br><span class=\"line\">kubeadm join apiserver.test:6443 --token hzlzrr.uwuegx4locpu36oc \\</span><br><span class=\"line\">  --discovery-token-ca-cert-hash sha256:4cbe428cb3503277be9fbcf3a99de82a97397a624dd94d4270c4eed1b861f951 \\</span><br><span class=\"line\">  --cri-socket /run/containerd/containerd.sock</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例3.使用 kubeadm 配置文件进行配置加入的节点信息。</span></span><br><span class=\"line\">kubeadm join --config node.yaml</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"reset-节点重置操作\"><a href=\"#reset-节点重置操作\" class=\"headerlink\" title=\"reset - 节点重置操作\"></a>reset - 节点重置操作</h3><p>基础实例:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 重置Workers节点操作</span></span><br><span class=\"line\">kubeadm reset -f</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"upgrade-节点更新操作\"><a href=\"#upgrade-节点更新操作\" class=\"headerlink\" title=\"upgrade - 节点更新操作\"></a>upgrade - 节点更新操作</h3><p>描述: 使用此命令将集群顺利升级到新版本</p>\n<p><strong>基础语法:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Usage:</span></span><br><span class=\"line\">  kubeadm upgrade [flags]</span><br><span class=\"line\">  kubeadm upgrade [<span class=\"built_in\">command</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Commands:</span></span><br><span class=\"line\">apply：将Kubernetes集群升级到指定的版本</span><br><span class=\"line\">diff：显示将应用于现有静态pod清单的差异。另请参见： `kubeadm upgrade apply --dry-run`</span><br><span class=\"line\">node：群集中节点的升级命令</span><br><span class=\"line\">plan：检查可升级到的版本，并验证当前集群是否可升级。要跳过internet检查，请传入可选的[version]参数</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Flags:</span></span><br><span class=\"line\">--add-dir-header           If <span class=\"literal\">true</span>, adds the file directory to the header of the <span class=\"built_in\">log</span> messages</span><br><span class=\"line\">--<span class=\"built_in\">log</span>-file string          If non-empty, use this <span class=\"built_in\">log</span> file</span><br><span class=\"line\">--<span class=\"built_in\">log</span>-file-max-size uint   Defines the maximum size a <span class=\"built_in\">log</span> file can grow to. Unit is megabytes. If the value is 0, the maximum file size is unlimited. (default 1800)</span><br><span class=\"line\">--rootfs string            [EXPERIMENTAL] The path to the <span class=\"string\">'real'</span> host root filesystem.</span><br><span class=\"line\">--skip-headers             If <span class=\"literal\">true</span>, avoid header prefixes <span class=\"keyword\">in</span> the <span class=\"built_in\">log</span> messages</span><br><span class=\"line\">--skip-log-headers         If <span class=\"literal\">true</span>, avoid headers when opening <span class=\"built_in\">log</span> files</span><br><span class=\"line\">-v, --v Level              number <span class=\"keyword\">for</span> the <span class=\"built_in\">log</span> level verbosity</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>基础示例:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 0.查看检查可升级到的版本</span></span><br><span class=\"line\">kubeadm upgrade plan</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 1.更新集群为指定版本v1.18.5</span></span><br><span class=\"line\">kubeadm upgrade apply v1.18.5 --config kubeadm-config.yaml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.不要更改任何状态，只输出将要执行的操作。</span></span><br><span class=\"line\">kubeadm upgrade node --dry-run</span><br><span class=\"line\">  <span class=\"comment\"># apiVersion: v1</span></span><br><span class=\"line\">  <span class=\"comment\"># data:</span></span><br><span class=\"line\">  <span class=\"comment\">#   ClusterConfiguration: |</span></span><br><span class=\"line\">  <span class=\"comment\">#     apiServer:</span></span><br><span class=\"line\">  <span class=\"comment\">#       certSANs:</span></span><br><span class=\"line\">  <span class=\"comment\">#       - 192.168.12.226</span></span><br><span class=\"line\">  <span class=\"comment\">#       extraArgs:</span></span><br><span class=\"line\">  <span class=\"comment\">#         authorization-mode: Node,RBAC</span></span><br><span class=\"line\">  <span class=\"comment\"># .....................................</span></span><br></pre></td></tr></table></figure></p>\n<hr>\n<h2 id=\"0x02-Kubelet-命令-在集群中的每个节点上用来启动-pod-和容器等。\"><a href=\"#0x02-Kubelet-命令-在集群中的每个节点上用来启动-pod-和容器等。\" class=\"headerlink\" title=\"0x02 Kubelet 命令 - 在集群中的每个节点上用来启动 pod 和容器等。\"></a>0x02 Kubelet 命令 - 在集群中的每个节点上用来启动 pod 和容器等。</h2><hr>\n<h2 id=\"0x03-Kubectl-命令-用来与集群通信的命令行工具\"><a href=\"#0x03-Kubectl-命令-用来与集群通信的命令行工具\" class=\"headerlink\" title=\"0x03 Kubectl 命令 - 用来与集群通信的命令行工具\"></a>0x03 Kubectl 命令 - 用来与集群通信的命令行工具</h2><p>描述:该命令实际上是操作 Kubernetes 对象（创建、修改、删除）的方法;<br><a href=\"https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands\" target=\"_blank\" rel=\"noopener\">https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands</a></p>\n<p>Kubectl 自动补全:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 自动补全</span></span><br><span class=\"line\"><span class=\"built_in\">source</span> &lt;(kubectl completion bash) <span class=\"comment\"># 在 bash 中设置当前 shell 的自动补全，要先安装 bash-completion 包</span></span><br><span class=\"line\"><span class=\"comment\"># 在您的 bash shell 中永久的添加自动补全</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"source &lt;(kubectl completion bash)\"</span> &gt;&gt; ~/.bashrc</span><br><span class=\"line\"><span class=\"comment\"># 在您的 zsh shell 中永久的添加自动补全</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"if [ <span class=\"variable\">$commands</span>[kubectl] ]; then source &lt;(kubectl completion zsh); fi\"</span> &gt;&gt; ~/.zshrc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#加入到启动配置文件中为 kubectl 使用一个速记别名该别名也可以与 completion 一起使用;</span></span><br><span class=\"line\">cat &gt;&gt;  ~/.bashrc &lt;&lt;<span class=\"string\">'END'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> k=kubectl</span><br><span class=\"line\">complete -F __start_kubectl k</span><br><span class=\"line\">END</span><br></pre></td></tr></table></figure></p>\n<p>使用案例:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@master-01 ~]$ k get cs</span><br><span class=\"line\">NAME                 STATUS    MESSAGE             ERROR</span><br><span class=\"line\">scheduler            Healthy   ok</span><br><span class=\"line\">controller-manager   Healthy   ok</span><br><span class=\"line\">etcd-2               Healthy   &#123;<span class=\"string\">\"health\"</span>:<span class=\"string\">\"true\"</span>&#125;</span><br><span class=\"line\">etcd-1               Healthy   &#123;<span class=\"string\">\"health\"</span>:<span class=\"string\">\"true\"</span>&#125;</span><br><span class=\"line\">etcd-0               Healthy   &#123;<span class=\"string\">\"health\"</span>:<span class=\"string\">\"true\"</span>&#125;</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"api-versions-当前可用集群支持的版本\"><a href=\"#api-versions-当前可用集群支持的版本\" class=\"headerlink\" title=\"api-versions - 当前可用集群支持的版本\"></a>api-versions - 当前可用集群支持的版本</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl api-versions</span><br><span class=\"line\"><span class=\"comment\"># admissionregistration.k8s.io/v1</span></span><br><span class=\"line\"><span class=\"comment\"># admissionregistration.k8s.io/v1beta1</span></span><br><span class=\"line\"><span class=\"comment\"># apiextensions.k8s.io/v1</span></span><br><span class=\"line\"><span class=\"comment\"># apiextensions.k8s.io/v1beta1</span></span><br><span class=\"line\"><span class=\"comment\"># apiregistration.k8s.io/v1</span></span><br><span class=\"line\"><span class=\"comment\"># apiregistration.k8s.io/v1beta1</span></span><br><span class=\"line\"><span class=\"comment\"># apps/v1</span></span><br><span class=\"line\"><span class=\"comment\"># authentication.k8s.io/v1</span></span><br><span class=\"line\"><span class=\"comment\"># authentication.k8s.io/v1beta1</span></span><br><span class=\"line\"><span class=\"comment\"># authorization.k8s.io/v1</span></span><br><span class=\"line\"><span class=\"comment\"># authorization.k8s.io/v1beta1</span></span><br><span class=\"line\"><span class=\"comment\"># autoscaling/v1</span></span><br><span class=\"line\"><span class=\"comment\"># autoscaling/v2beta1</span></span><br><span class=\"line\"><span class=\"comment\"># autoscaling/v2beta2</span></span><br><span class=\"line\"><span class=\"comment\"># batch/v1</span></span><br><span class=\"line\"><span class=\"comment\"># batch/v1beta1</span></span><br><span class=\"line\"><span class=\"comment\"># certificates.k8s.io/v1beta1</span></span><br><span class=\"line\"><span class=\"comment\"># coordination.k8s.io/v1</span></span><br><span class=\"line\"><span class=\"comment\"># coordination.k8s.io/v1beta1</span></span><br><span class=\"line\"><span class=\"comment\"># crd.projectcalico.org/v1</span></span><br><span class=\"line\"><span class=\"comment\"># discovery.k8s.io/v1beta1</span></span><br><span class=\"line\"><span class=\"comment\"># events.k8s.io/v1beta1</span></span><br><span class=\"line\"><span class=\"comment\"># extensions/v1beta1</span></span><br><span class=\"line\"><span class=\"comment\"># networking.k8s.io/v1</span></span><br><span class=\"line\"><span class=\"comment\"># networking.k8s.io/v1beta1</span></span><br><span class=\"line\"><span class=\"comment\"># node.k8s.io/v1beta1</span></span><br><span class=\"line\"><span class=\"comment\"># policy/v1beta1</span></span><br><span class=\"line\"><span class=\"comment\"># rbac.authorization.k8s.io/v1</span></span><br><span class=\"line\"><span class=\"comment\"># rbac.authorization.k8s.io/v1beta1</span></span><br><span class=\"line\"><span class=\"comment\"># scheduling.k8s.io/v1</span></span><br><span class=\"line\"><span class=\"comment\"># scheduling.k8s.io/v1beta1</span></span><br><span class=\"line\"><span class=\"comment\"># storage.k8s.io/v1</span></span><br><span class=\"line\"><span class=\"comment\"># storage.k8s.io/v1beta1</span></span><br><span class=\"line\"><span class=\"comment\"># v1</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"api-resources-获得支持资源的完整列表\"><a href=\"#api-resources-获得支持资源的完整列表\" class=\"headerlink\" title=\"api-resources - 获得支持资源的完整列表\"></a>api-resources - 获得支持资源的完整列表</h3><p>描述:在必须指定要描述的资源类型的时候使用，注意可以看出资源对象是否支持名称空间。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl api-resources</span><br><span class=\"line\">NAME                              SHORTNAMES   APIGROUP                       NAMESPACED   KIND</span><br><span class=\"line\">bindings                                                                      <span class=\"literal\">true</span>         Binding</span><br><span class=\"line\">componentstatuses                 cs                                          <span class=\"literal\">false</span>        ComponentStatus</span><br><span class=\"line\">configmaps                        cm                                          <span class=\"literal\">true</span>         ConfigMap</span><br><span class=\"line\">endpoints                         ep                                          <span class=\"literal\">true</span>         Endpoints</span><br><span class=\"line\">events                            ev                                          <span class=\"literal\">true</span>         Event</span><br><span class=\"line\">limitranges                       limits                                      <span class=\"literal\">true</span>         LimitRange</span><br><span class=\"line\">namespaces                        ns                                          <span class=\"literal\">false</span>        Namespace</span><br><span class=\"line\">nodes                             no                                          <span class=\"literal\">false</span>        Node</span><br><span class=\"line\">persistentvolumeclaims            pvc                                         <span class=\"literal\">true</span>         PersistentVolumeClaim</span><br><span class=\"line\">persistentvolumes                 pv                                          <span class=\"literal\">false</span>        PersistentVolume</span><br><span class=\"line\">pods                              po                                          <span class=\"literal\">true</span>         Pod</span><br><span class=\"line\">podtemplates                                                                  <span class=\"literal\">true</span>         PodTemplate</span><br><span class=\"line\">replicationcontrollers            rc                                          <span class=\"literal\">true</span>         ReplicationController</span><br><span class=\"line\">resourcequotas                    quota                                       <span class=\"literal\">true</span>         ResourceQuota</span><br><span class=\"line\">secrets                                                                       <span class=\"literal\">true</span>         Secret</span><br><span class=\"line\">serviceaccounts                   sa                                          <span class=\"literal\">true</span>         ServiceAccount</span><br><span class=\"line\">services                          svc                                         <span class=\"literal\">true</span>         Service</span><br><span class=\"line\">mutatingwebhookconfigurations                  admissionregistration.k8s.io   <span class=\"literal\">false</span>        MutatingWebhookConfiguration</span><br><span class=\"line\">validatingwebhookconfigurations                admissionregistration.k8s.io   <span class=\"literal\">false</span>        ValidatingWebhookConfiguration</span><br><span class=\"line\">customresourcedefinitions         crd,crds     apiextensions.k8s.io           <span class=\"literal\">false</span>        CustomResourceDefinition</span><br><span class=\"line\">apiservices                                    apiregistration.k8s.io         <span class=\"literal\">false</span>        APIService</span><br><span class=\"line\">controllerrevisions                            apps                           <span class=\"literal\">true</span>         ControllerRevision</span><br><span class=\"line\">daemonsets                        ds           apps                           <span class=\"literal\">true</span>         DaemonSet</span><br><span class=\"line\">deployments                       deploy       apps                           <span class=\"literal\">true</span>         Deployment</span><br><span class=\"line\">replicasets                       rs           apps                           <span class=\"literal\">true</span>         ReplicaSet</span><br><span class=\"line\">statefulsets                      sts          apps                           <span class=\"literal\">true</span>         StatefulSet</span><br><span class=\"line\">tokenreviews                                   authentication.k8s.io          <span class=\"literal\">false</span>        TokenReview</span><br><span class=\"line\">localsubjectaccessreviews                      authorization.k8s.io           <span class=\"literal\">true</span>         LocalSubjectAccessReview</span><br><span class=\"line\">selfsubjectaccessreviews                       authorization.k8s.io           <span class=\"literal\">false</span>        SelfSubjectAccessReview</span><br><span class=\"line\">selfsubjectrulesreviews                        authorization.k8s.io           <span class=\"literal\">false</span>        SelfSubjectRulesReview</span><br><span class=\"line\">subjectaccessreviews                           authorization.k8s.io           <span class=\"literal\">false</span>        SubjectAccessReview</span><br><span class=\"line\">horizontalpodautoscalers          hpa          autoscaling                    <span class=\"literal\">true</span>         HorizontalPodAutoscaler</span><br><span class=\"line\">cronjobs                          cj           batch                          <span class=\"literal\">true</span>         CronJob</span><br><span class=\"line\"><span class=\"built_in\">jobs</span>                                           batch                          <span class=\"literal\">true</span>         Job</span><br><span class=\"line\">certificatesigningrequests        csr          certificates.k8s.io            <span class=\"literal\">false</span>        CertificateSigningRequest</span><br><span class=\"line\">leases                                         coordination.k8s.io            <span class=\"literal\">true</span>         Lease</span><br><span class=\"line\">bgpconfigurations                              crd.projectcalico.org          <span class=\"literal\">false</span>        BGPConfiguration</span><br><span class=\"line\">bgppeers                                       crd.projectcalico.org          <span class=\"literal\">false</span>        BGPPeer</span><br><span class=\"line\">blockaffinities                                crd.projectcalico.org          <span class=\"literal\">false</span>        BlockAffinity</span><br><span class=\"line\">clusterinformations                            crd.projectcalico.org          <span class=\"literal\">false</span>        ClusterInformation</span><br><span class=\"line\">felixconfigurations                            crd.projectcalico.org          <span class=\"literal\">false</span>        FelixConfiguration</span><br><span class=\"line\">globalnetworkpolicies                          crd.projectcalico.org          <span class=\"literal\">false</span>        GlobalNetworkPolicy</span><br><span class=\"line\">globalnetworksets                              crd.projectcalico.org          <span class=\"literal\">false</span>        GlobalNetworkSet</span><br><span class=\"line\">hostendpoints                                  crd.projectcalico.org          <span class=\"literal\">false</span>        HostEndpoint</span><br><span class=\"line\">ipamblocks                                     crd.projectcalico.org          <span class=\"literal\">false</span>        IPAMBlock</span><br><span class=\"line\">ipamconfigs                                    crd.projectcalico.org          <span class=\"literal\">false</span>        IPAMConfig</span><br><span class=\"line\">ipamhandles                                    crd.projectcalico.org          <span class=\"literal\">false</span>        IPAMHandle</span><br><span class=\"line\">ippools                                        crd.projectcalico.org          <span class=\"literal\">false</span>        IPPool</span><br><span class=\"line\">networkpolicies                                crd.projectcalico.org          <span class=\"literal\">true</span>         NetworkPolicy</span><br><span class=\"line\">networksets                                    crd.projectcalico.org          <span class=\"literal\">true</span>         NetworkSet</span><br><span class=\"line\">endpointslices                                 discovery.k8s.io               <span class=\"literal\">true</span>         EndpointSlice</span><br><span class=\"line\">events                            ev           events.k8s.io                  <span class=\"literal\">true</span>         Event</span><br><span class=\"line\">ingresses                         ing          extensions                     <span class=\"literal\">true</span>         Ingress</span><br><span class=\"line\">ingressclasses                                 networking.k8s.io              <span class=\"literal\">false</span>        IngressClass</span><br><span class=\"line\">ingresses                         ing          networking.k8s.io              <span class=\"literal\">true</span>         Ingress</span><br><span class=\"line\">networkpolicies                   netpol       networking.k8s.io              <span class=\"literal\">true</span>         NetworkPolicy</span><br><span class=\"line\">runtimeclasses                                 node.k8s.io                    <span class=\"literal\">false</span>        RuntimeClass</span><br><span class=\"line\">poddisruptionbudgets              pdb          policy                         <span class=\"literal\">true</span>         PodDisruptionBudget</span><br><span class=\"line\">podsecuritypolicies               psp          policy                         <span class=\"literal\">false</span>        PodSecurityPolicy</span><br><span class=\"line\">clusterrolebindings                            rbac.authorization.k8s.io      <span class=\"literal\">false</span>        ClusterRoleBinding</span><br><span class=\"line\">clusterroles                                   rbac.authorization.k8s.io      <span class=\"literal\">false</span>        ClusterRole</span><br><span class=\"line\">rolebindings                                   rbac.authorization.k8s.io      <span class=\"literal\">true</span>         RoleBinding</span><br><span class=\"line\">roles                                          rbac.authorization.k8s.io      <span class=\"literal\">true</span>         Role</span><br><span class=\"line\">priorityclasses                   pc           scheduling.k8s.io              <span class=\"literal\">false</span>        PriorityClass</span><br><span class=\"line\">csidrivers                                     storage.k8s.io                 <span class=\"literal\">false</span>        CSIDriver</span><br><span class=\"line\">csinodes                                       storage.k8s.io                 <span class=\"literal\">false</span>        CSINode</span><br><span class=\"line\">storageclasses                    sc           storage.k8s.io                 <span class=\"literal\">false</span>        StorageClass</span><br><span class=\"line\">volumeattachments                              storage.k8s.io                 <span class=\"literal\">false</span>        VolumeAttachment</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<h3 id=\"apply-当资源清单重新修改后采用此命令重新应用\"><a href=\"#apply-当资源清单重新修改后采用此命令重新应用\" class=\"headerlink\" title=\"apply - 当资源清单重新修改后采用此命令重新应用\"></a>apply - 当资源清单重新修改后采用此命令重新应用</h3><p><strong>基础示例</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.使用 kube apply 命令可以创建该 .yaml 文件中的 Deployment 对象</span></span><br><span class=\"line\">kubectl apply -f deployment.yaml</span><br><span class=\"line\">kubectl apply -f https://weiyigeek.top/k8s/deployment.yaml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.执行deployment/services操作的部署命令</span></span><br><span class=\"line\">kubectl apply -f nginx-deployment.yaml</span><br><span class=\"line\">kubectl apply -f redis-master-service.yaml</span><br><span class=\"line\">  <span class=\"comment\"># deployment.apps/nginx-deployment created</span></span><br><span class=\"line\">  <span class=\"comment\"># service/redis-master-service created</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.更新k8s ConfigMap或Secret而不删除现有的（值得学习）</span></span><br><span class=\"line\">kubectl -n default create secret tls weiyigeek.top --cert=2023.weiyigeek.top.pem --key=2023.weiyigeek.top.key -o yaml --dry-run=client  | kubectl apply -f -</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"attach-进入pod容器中进行交互式运行\"><a href=\"#attach-进入pod容器中进行交互式运行\" class=\"headerlink\" title=\"attach - 进入pod容器中进行交互式运行\"></a>attach - 进入pod容器中进行交互式运行</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 示例1.在pod运行时使用命令以下命令继续在Pod子容器中进行交互式运行</span></span><br><span class=\"line\">~$ kubectl attach load-generator -c load-generator -i -t</span><br><span class=\"line\">If you don<span class=\"string\">'t see a command prompt, try pressing enter.</span></span><br><span class=\"line\"><span class=\"string\">/ #</span></span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<h3 id=\"cluster-info-K8s-集群信息\"><a href=\"#cluster-info-K8s-集群信息\" class=\"headerlink\" title=\"cluster-info - K8s 集群信息\"></a>cluster-info - K8s 集群信息</h3><p>示例1.集群相关信息包括 API-Server 地址 以及 KubeDNS 相关信息<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~$  kubectl cluster-info</span><br><span class=\"line\"><span class=\"comment\"># Kubernetes master is running at https://weiyigeek-lb-vip.k8s:16443</span></span><br><span class=\"line\"><span class=\"comment\"># KubeDNS is running at https://weiyigeek-lb-vip.k8s:16443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"config-集群上下文以及用户配置\"><a href=\"#config-集群上下文以及用户配置\" class=\"headerlink\" title=\"config - 集群上下文以及用户配置\"></a>config - 集群上下文以及用户配置</h3><p>常规示例:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 设置外部集群 &amp;&amp; 删除外部集群</span></span><br><span class=\"line\">kubectl config <span class=\"built_in\">set</span>-cluster k8s-cluster- --server=https://slb-vip.k8s:16443 --certificate-authority=/etc/kubernetes/pki/ca.crt  --embed-certs=<span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># Cluster \"k8s-cluster\" set.</span></span><br><span class=\"line\">kubectl config delete-cluster k8s-cluster</span><br><span class=\"line\">  <span class=\"comment\"># deleted cluster k8s-cluster from /root/.kube/config</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置上下文 &amp;&amp; 删除上下文</span></span><br><span class=\"line\">kubectl config <span class=\"built_in\">set</span>-context devops-ctx --cluster=k8s-cluster --user=devopsuser --namespace=devops</span><br><span class=\"line\">  <span class=\"comment\"># Context \"devops-ctx \" created.</span></span><br><span class=\"line\">kubectl config delete-context devops-ctx</span><br><span class=\"line\">  <span class=\"comment\"># deleted context devops-ctx from /root/.kube/config</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置用户 &amp;&amp; 删除用户</span></span><br><span class=\"line\">kubectl config <span class=\"built_in\">set</span>-credentials devopsuser --client-key=/etc/kubernetes/pki/user/devopsuser-key.pem --client-certificate=/etc/kubernetes/pki/user/devopsuser-key.pem --user=devopsuser --embed-certs=<span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># User \"devopsuser\" set.</span></span><br><span class=\"line\">kubectl config delete-user devopsuser</span><br><span class=\"line\">  <span class=\"comment\"># deleted user devopsuser from /root/.kube/config</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取全局上下文</span></span><br><span class=\"line\">kubectl config get-contexts</span><br><span class=\"line\"><span class=\"comment\"># 获取当前上下文</span></span><br><span class=\"line\">kubectl config current-context</span><br><span class=\"line\"><span class=\"comment\"># 切换指定上下文</span></span><br><span class=\"line\">kubectl config use-context devops-ctx</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"cp-复制Pod中的文件到指定目录之中\"><a href=\"#cp-复制Pod中的文件到指定目录之中\" class=\"headerlink\" title=\"cp - 复制Pod中的文件到指定目录之中\"></a>cp - 复制Pod中的文件到指定目录之中</h3><p>示例1.从Pod中复制文件到本地<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl cp weiyigeek/users-0:/usr/<span class=\"built_in\">local</span>/tomcat/logs /tmp/logs/</span><br><span class=\"line\">kubectl cp devops/<span class=\"built_in\">test</span>-28-1vw8p-vlr29-fxvqs:/home/jenkins/.ssh /tmp</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"create-根据资源清单创建对应的Pod\"><a href=\"#create-根据资源清单创建对应的Pod\" class=\"headerlink\" title=\"create - 根据资源清单创建对应的Pod\"></a>create - 根据资源清单创建对应的Pod</h3><p><strong>基础示例</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 示例1.资源清单来创建 pod</span></span><br><span class=\"line\">kubectl create -f nginx_pod.yaml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例2.根据命令行生成一个 `deployment` 资源清单</span></span><br><span class=\"line\">kubectl create  deployment  java-demo  --image=WeiyiGeek/java-demo  --dry-run -o yaml &gt; deploy.yaml</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"cordon-节点限制加入资源\"><a href=\"#cordon-节点限制加入资源\" class=\"headerlink\" title=\"cordon - 节点限制加入资源\"></a>cordon - 节点限制加入资源</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># kubectl cordon [节点名称]</span></span><br><span class=\"line\"><span class=\"comment\"># (1) 禁止新建立的Pod在该节点上运行</span></span><br><span class=\"line\">kubectl cordon node-1</span><br><span class=\"line\">node/node-1 cordoned</span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<h3 id=\"describe-显示有关资源的详细信息\"><a href=\"#describe-显示有关资源的详细信息\" class=\"headerlink\" title=\"describe - 显示有关资源的详细信息\"></a>describe - 显示有关资源的详细信息</h3><p>语法参数:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl describe 资源类型 资源名称</span><br></pre></td></tr></table></figure></p>\n<p>基础实例:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#1.查看名称为nginx-deployment-674ff86d-btmt4的Pod的信息</span></span><br><span class=\"line\">kubectl describe pod nginx-deployment-674ff86d-btmt4</span><br><span class=\"line\"><span class=\"comment\"># Name:         nginx-deployment-674ff86d-btmt4</span></span><br><span class=\"line\"><span class=\"comment\"># Namespace:    default</span></span><br><span class=\"line\"><span class=\"comment\"># Priority:     0</span></span><br><span class=\"line\"><span class=\"comment\"># Node:         node/10.10.107.192</span></span><br><span class=\"line\"><span class=\"comment\"># Start Time:   Thu, 07 May 2020 14:12:18 +0800</span></span><br><span class=\"line\"><span class=\"comment\"># Labels:       app=nginx</span></span><br><span class=\"line\"><span class=\"comment\">#               pod-template-hash=674ff86d</span></span><br><span class=\"line\"><span class=\"comment\"># Annotations:  cni.projectcalico.org/podIP: 10.100.167.129/32</span></span><br><span class=\"line\"><span class=\"comment\">#               cni.projectcalico.org/podIPs: 10.100.167.129/32</span></span><br><span class=\"line\"><span class=\"comment\"># Status:       Running</span></span><br><span class=\"line\"><span class=\"comment\"># IP:           10.100.167.129</span></span><br><span class=\"line\"><span class=\"comment\"># IPs:</span></span><br><span class=\"line\"><span class=\"comment\">#   IP:           10.100.167.129</span></span><br><span class=\"line\"><span class=\"comment\"># Controlled By:  ReplicaSet/nginx-deployment-674ff86d</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#2.查看名称为nginx-deployment的Deployment的信息</span></span><br><span class=\"line\">kubectl describe deployment nginx-deployment</span><br><span class=\"line\"><span class=\"comment\"># Name:                   nginx-deployment</span></span><br><span class=\"line\"><span class=\"comment\"># Namespace:              default</span></span><br><span class=\"line\"><span class=\"comment\"># CreationTimestamp:      Thu, 07 May 2020 14:12:18 +0800</span></span><br><span class=\"line\"><span class=\"comment\"># Labels:                 app=nginx</span></span><br><span class=\"line\"><span class=\"comment\"># Annotations:            deployment.kubernetes.io/revision: 1</span></span><br><span class=\"line\"><span class=\"comment\"># Selector:               app=nginx</span></span><br><span class=\"line\"><span class=\"comment\"># Replicas:               1 desired | 1 updated | 1 total | 1 available | 0 unavailable</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\"><span class=\"comment\"># Conditions:</span></span><br><span class=\"line\"><span class=\"comment\">#   Type           Status  Reason</span></span><br><span class=\"line\"><span class=\"comment\">#   ----           ------  ------</span></span><br><span class=\"line\"><span class=\"comment\">#   Available      True    MinimumReplicasAvailable</span></span><br><span class=\"line\"><span class=\"comment\">#   Progressing    True    NewReplicaSetAvailable</span></span><br><span class=\"line\"><span class=\"comment\"># OldReplicaSets:  &lt;none&gt;</span></span><br><span class=\"line\"><span class=\"comment\"># NewReplicaSet:   nginx-deployment-674ff86d (1/1 replicas created)</span></span><br><span class=\"line\"><span class=\"comment\"># Events:          &lt;none&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#3.查看节点各项信息</span></span><br><span class=\"line\">kubectl describe node master-03</span><br><span class=\"line\"><span class=\"comment\"># Name:               master-03</span></span><br><span class=\"line\"><span class=\"comment\"># Roles:              master</span></span><br><span class=\"line\"><span class=\"comment\"># Labels:             beta.kubernetes.io/arch=amd64</span></span><br><span class=\"line\"><span class=\"comment\">#                     beta.kubernetes.io/os=linux</span></span><br><span class=\"line\"><span class=\"comment\">#                     kubernetes.io/arch=amd64</span></span><br><span class=\"line\"><span class=\"comment\">#                     kubernetes.io/hostname=master-03</span></span><br><span class=\"line\"><span class=\"comment\">#                     kubernetes.io/os=linux</span></span><br><span class=\"line\"><span class=\"comment\">#                     node-role.kubernetes.io/master=</span></span><br><span class=\"line\"><span class=\"comment\"># Annotations:        kubeadm.alpha.kubernetes.io/cri-socket: /var/run/dockershim.sock</span></span><br><span class=\"line\"><span class=\"comment\">#                     node.alpha.kubernetes.io/ttl: 0</span></span><br><span class=\"line\"><span class=\"comment\">#                     projectcalico.org/IPv4Address: 10.10.107.193/24</span></span><br><span class=\"line\"><span class=\"comment\">#                     projectcalico.org/IPv4IPIPTunnelAddr: 10.100.133.128</span></span><br><span class=\"line\"><span class=\"comment\">#                     volumes.kubernetes.io/controller-managed-attach-detach: true</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"delete-删除节点和资源\"><a href=\"#delete-删除节点和资源\" class=\"headerlink\" title=\"delete - 删除节点和资源\"></a>delete - 删除节点和资源</h3><p>描述: 可以删除相关节点和资源对象，例如<code>Pods 、Svc、Nodes、 Namespace、 Configmap、 Deployment、rs、rc、sts</code>等。</p>\n<p>语法说明:<code>kubectl delete [TYPE] Flags</code></p>\n<p>示例演示:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.在Master节点上删除指定的节点。</span></span><br><span class=\"line\">kubectl delete node k8s-master-1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.指定kube-system名称空间删除其Pods。</span></span><br><span class=\"line\">kubectl -n kube-system delete Pods calico-xxxx</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"drain-节点组件清理\"><a href=\"#drain-节点组件清理\" class=\"headerlink\" title=\"drain - 节点组件清理\"></a>drain - 节点组件清理</h3><p><strong>基础示例:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 示例1.强制删除节点本地数据以及运行的容器</span></span><br><span class=\"line\">kubectl drain master-02 --delete-local-data --force --ignore-daemonsets</span><br><span class=\"line\"><span class=\"comment\"># WARNING: ignoring DaemonSet-managed Pods: kube-system/kube-flannel-ds-amd64-mlcvm, kube-system/kube-proxy-f7rnh</span></span><br><span class=\"line\"><span class=\"comment\"># evicting pod kube-system/coredns-5fd54d7f56-22fwz</span></span><br><span class=\"line\"><span class=\"comment\"># bec\tpod/coredns-5fd54d7f56-22fwz evicted</span></span><br><span class=\"line\"><span class=\"comment\"># node/server4 evicted</span></span><br><span class=\"line\">kubectl get nodes master-02</span><br><span class=\"line\"><span class=\"comment\"># NAME      STATUS                     ROLES    AGE     VERSION</span></span><br><span class=\"line\"><span class=\"comment\"># master-02   Ready,SchedulingDisabled   &lt;none&gt;   3h36m   v1.18.3\t\t# 不再调用此结点</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例2.强制删除处于terminal状态或者异常状态的Pod，等待时间为0</span></span><br><span class=\"line\">kubectl delete pod -n ingress-nginx --force --grace-period=0 ingress-nginx-controller-6b8bd48548-jmblv</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"exec-在pod中的容器环境内执行命令-和命令docker-exec-类似\"><a href=\"#exec-在pod中的容器环境内执行命令-和命令docker-exec-类似\" class=\"headerlink\" title=\"exec - 在pod中的容器环境内执行命令(和命令docker exec 类似)\"></a>exec - 在pod中的容器环境内执行命令(和命令docker exec 类似)</h3><p><strong>语法参数:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl <span class=\"built_in\">exec</span> Pod名称 操作命令</span><br><span class=\"line\">kubectl <span class=\"built_in\">exec</span> -n 名称空间 -ti Pod名称 -c 容器名称 -- /bin/sh</span><br></pre></td></tr></table></figure></p>\n<p><strong>基础示例:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 在名称为 nginx-pod-xxxxxx 的Pod中运行bash。</span></span><br><span class=\"line\">kubectl <span class=\"built_in\">exec</span> -it nginx-deployment-674ff86d-btmt4 /bin/bash</span><br><span class=\"line\"><span class=\"comment\"># kubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl kubectl exec [POD] -- [COMMAND] instead.</span></span><br><span class=\"line\"><span class=\"comment\"># root@nginx-deployment-674ff86d-btmt4:/# </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 进入Pod多个容器中的其中一个容器，例如进入名称为 weiyigeek 的Pod中的blog容器。</span></span><br><span class=\"line\">kubectl <span class=\"built_in\">exec</span> -n <span class=\"built_in\">test</span> -ti weiyigeek -c blog -- /bin/sh</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"expose-将资源公开保留为新的SVC服务。\"><a href=\"#expose-将资源公开保留为新的SVC服务。\" class=\"headerlink\" title=\"expose - 将资源公开保留为新的SVC服务。\"></a>expose - 将资源公开保留为新的SVC服务。</h3><p>描述:按名称查找 <code>deployment, service, replica set, replication controller or pod</code>，并使用该资源的选择器作为指定端口上新服务的选择器, 即创建新的服务。</p>\n<p>温馨提示: 如果没有端口通过–port指定，并且公开的资源有多个端口，所有端口都将被新服务。此外如果未指定标签，新服务将重新使用它暴露的资源。</p>\n<p>可能的资源包括（不区分大小写）：pod (po), service (svc), replicationcontroller (rc), deployment (deploy), replicaset (rs)</p>\n<p><strong>语法参数:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 语法</span></span><br><span class=\"line\">kubectl expose (-f FILENAME | TYPE NAME) [--port=port] [--protocol=TCP|UDP|SCTP]</span><br><span class=\"line\">[--target-port=number-or-name] [--name=name] [--external-ip=external-ip-of-service] [--<span class=\"built_in\">type</span>=<span class=\"built_in\">type</span>]</span><br><span class=\"line\">[options]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 常用参数</span></span><br><span class=\"line\">--name=<span class=\"string\">''</span>: 新创建的对象的名称。</span><br><span class=\"line\">--port=<span class=\"string\">''</span>: SVC 服务端口。</span><br><span class=\"line\">--target-port=<span class=\"string\">''</span>: Pod 容器端口。</span><br><span class=\"line\">--protocol=<span class=\"string\">''</span>: SVC 服务网络协议, 默认TCP。</span><br><span class=\"line\">--<span class=\"built_in\">type</span>=<span class=\"string\">''</span>: 指定服务类型,可用范围`ClusterIP, NodePort, LoadBalancer, or ExternalName. Default</span><br><span class=\"line\">is <span class=\"string\">'ClusterIP'</span>`。</span><br></pre></td></tr></table></figure></p>\n<p><strong>基础实例:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.为 nginx 部署创建一个服务名为nginx-external ，该部署服务于端口80并连接到Pod容器的8080端口</span></span><br><span class=\"line\">kubectl expose deployment nginx --name nginx-external --<span class=\"built_in\">type</span>=ClusterIP  --port=80 --target-port=8000</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.为 nginx-web 服务创建一个别名服务 nginx-web-external , 其类型为NodePort，注意此处我随机端口。</span></span><br><span class=\"line\">kubectl expose service -n devtest nginx-web --name nginx-web-external --<span class=\"built_in\">type</span>=NodePort  --port=80 --target-port=80</span><br><span class=\"line\"><span class=\"comment\"># 执行结果</span></span><br><span class=\"line\">$ kubectl get svc -n devtest nginx-web-external</span><br><span class=\"line\"><span class=\"comment\"># NAME                 TYPE       CLUSTER-IP     EXTERNAL-IP   PORT(S)        AGE</span></span><br><span class=\"line\"><span class=\"comment\"># nginx-web-external   NodePort   10.102.35.45   &lt;none&gt;        80:30230/TCP   70s</span></span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<h3 id=\"get-显示资源列表\"><a href=\"#get-显示资源列表\" class=\"headerlink\" title=\"get - 显示资源列表\"></a>get - 显示资源列表</h3><p>描述: 显示kubernetes相关资源对象信息,例如<code>Pods 、Svc、Nodes、 Namespace、 Configmap、 Deployment、rs、rc、sts</code>相关资源信息。</p>\n<p><strong>基础语法</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 语法</span></span><br><span class=\"line\">kubectl get 资源类型</span><br><span class=\"line\"><span class=\"comment\"># 参数</span></span><br><span class=\"line\">-l          <span class=\"comment\">#获取相关label标签的资源列表</span></span><br><span class=\"line\">-o          <span class=\"comment\">#以 wide,yaml,jsonpath=\"&#123;..image&#125;\",go-template 格式化输出</span></span><br><span class=\"line\">--namespace <span class=\"comment\">#查找指定名称空间下的 Pod</span></span><br><span class=\"line\">--template  <span class=\"comment\">#使用 go-template 格式化</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>基础示例</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.获取类型为Deployment的资源列表</span></span><br><span class=\"line\">kubectl get deployments</span><br><span class=\"line\"><span class=\"comment\"># NAME               READY   UP-TO-DATE   AVAILABLE   AGE</span></span><br><span class=\"line\"><span class=\"comment\"># nginx-deployment   1/1     1            1           8h</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.获取类型为Pod的资源列表</span></span><br><span class=\"line\">kubectl get pods <span class=\"comment\"># 默认显示名称为default的pod列表</span></span><br><span class=\"line\">kubectl get pods --all-namespaces <span class=\"comment\">#执行命令，获取所有名称空间中的所有 Pod</span></span><br><span class=\"line\"><span class=\"comment\"># NAME                              READY   STATUS    RESTARTS   AGE</span></span><br><span class=\"line\"><span class=\"comment\"># nginx-deployment-674ff86d-btmt4   1/1     Running   0          8h</span></span><br><span class=\"line\">kubectl get pods -l app=nginx  <span class=\"comment\"># 获取相关label标签的资源列表</span></span><br><span class=\"line\"><span class=\"comment\"># NAME                               READY   STATUS    RESTARTS   AGE</span></span><br><span class=\"line\"><span class=\"comment\"># nginx-deployment-cc7df4f8f-2jlnp   1/1     Running   0          47m</span></span><br><span class=\"line\"><span class=\"comment\"># nginx-deployment-cc7df4f8f-jxwrs   1/1     Running   0          47m </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 采用jsonpath过滤语法获取符合条件得得Pod名称</span></span><br><span class=\"line\">kubectl get pods -n kube-system -l <span class=\"string\">\"app.kubernetes.io/name=kubernetes-dashboard,app.kubernetes.io/instance=kubernetes-dashboard\"</span> -o jsonpath=<span class=\"string\">\"&#123;.items[0].metadata.name&#125;\"</span>  <span class=\"comment\"># kubernetes-dashboard-879457794-kxvcr</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用 -o jsonpath=&#123;..image&#125; 参数，输出结果将格式化为只包含容器镜像名字的形式 </span></span><br><span class=\"line\">kubectl get pods --namespace kube-system -o jsonpath=<span class=\"string\">\"&#123;..image&#125;\"</span>         <span class=\"comment\"># 按名称空间查找容器</span></span><br><span class=\"line\">kubectl get pods --all-namespaces -o=jsonpath=<span class=\"string\">\"&#123;..image&#125;\"</span> -l app=redis   <span class=\"comment\"># redis redis:latest</span></span><br><span class=\"line\"></span><br><span class=\"line\">kubectl get pods --all-namespaces -o jsonpath=<span class=\"string\">\"&#123;..image&#125;\"</span> | tr -s <span class=\"string\">'[[:space:]]'</span> <span class=\"string\">'\\n'</span> |sort | uniq -c  <span class=\"comment\"># jsonpath 将空格替换为新的行并对对结果排序，然后进行计数</span></span><br><span class=\"line\"><span class=\"comment\"># 24 calico/cni:v3.13.1</span></span><br><span class=\"line\"><span class=\"comment\"># 2 calico/kube-controllers:v3.13.1</span></span><br><span class=\"line\"><span class=\"comment\"># 12 calico/node:v3.13.1</span></span><br><span class=\"line\"><span class=\"comment\"># 12 calico/pod2daemon-flexvol:v3.13.1</span></span><br><span class=\"line\"><span class=\"comment\"># 4 mirrorgcrio/coredns:1.6.7</span></span><br><span class=\"line\"><span class=\"comment\"># 6 mirrorgcrio/etcd:3.4.3-0</span></span><br><span class=\"line\"><span class=\"comment\"># 6 mirrorgcrio/kube-apiserver:v1.18.4</span></span><br><span class=\"line\"><span class=\"comment\"># 6 mirrorgcrio/kube-controller-manager:v1.18.4</span></span><br><span class=\"line\"><span class=\"comment\"># 12 mirrorgcrio/kube-proxy:v1.18.4</span></span><br><span class=\"line\"><span class=\"comment\"># 6 mirrorgcrio/kube-scheduler:v1.18.4</span></span><br><span class=\"line\"><span class=\"comment\"># 1 redis</span></span><br><span class=\"line\"><span class=\"comment\"># 1 redis:latest</span></span><br><span class=\"line\"></span><br><span class=\"line\">kubectl get pod -n weiyigeek -l ref=info-student -o jsonpath=<span class=\"string\">\"&#123;.items[*].status.podIP&#125;\"</span> | tr -s <span class=\"string\">'[[:space:]]'</span> <span class=\"string\">'\\n'</span> &gt; ip.txt</span><br><span class=\"line\"><span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> $(cat ip.txt);<span class=\"keyword\">do</span> <span class=\"built_in\">echo</span> -n <span class=\"string\">\"<span class=\"variable\">$x</span> - \"</span>;curl -v http://<span class=\"variable\">$&#123;x&#125;</span>:8080/ ;<span class=\"built_in\">echo</span> <span class=\"string\">\"\"</span>;<span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#用 Pod 中 image 字段的绝对路径来查找容器的镜像名字，可以规避 image 字段重复出现的情况。</span></span><br><span class=\"line\">kubectl get pods --all-namespaces -o jsonpath=<span class=\"string\">\"&#123;.items[*].spec.containers[*].image&#125;\"</span> |tr -s <span class=\"string\">'[[:space:]]'</span> <span class=\"string\">'\\n'</span> |  uniq -c | sort -r</span><br><span class=\"line\"><span class=\"comment\"># .items[*]：每一个返回值</span></span><br><span class=\"line\"><span class=\"comment\"># .spec： 获取 spec</span></span><br><span class=\"line\"><span class=\"comment\"># .containers[*]： 每一个 container</span></span><br><span class=\"line\"><span class=\"comment\"># .image：获取 image</span></span><br><span class=\"line\"></span><br><span class=\"line\">kubectl get pods -o jsonpath=<span class=\"string\">\"&#123;.items[*].spec.containers[*].image&#125;\"</span> |tr -s <span class=\"string\">'[[:space:]]'</span> <span class=\"string\">'\\n'</span> |  uniq -c | sort -r</span><br><span class=\"line\">    <span class=\"comment\">#   1 redis</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果通过名字查找 Pod由于返回结果只有一个 Pod，此时，.items[*] 这一部分应该从 jsonpath 中移除(效果同上)</span></span><br><span class=\"line\">kubectl get pods redis-master-deployment-7d557b94bb-bzw2v -o jsonpath=<span class=\"string\">\"&#123;.spec.containers[*].image&#125;\"</span> |tr -s <span class=\"string\">'[[:space:]]'</span> <span class=\"string\">'\\n'</span> |  uniq -c | sort -r</span><br><span class=\"line\">    <span class=\"comment\">#   1 redis</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># map[containerPort:6379 protocol:TCP]</span></span><br><span class=\"line\"><span class=\"comment\"># 按Pod查找容器输出结果可以通过 rannge 操作遍历(值得学习分隔)</span></span><br><span class=\"line\">kubectl get pods -o=jsonpath=<span class=\"string\">'&#123;range .items[*]&#125;&#123;\"\\n\"&#125;&#123;.metadata.name&#125;&#123;\":\\t\"&#125;&#123;range .spec.containers[*]&#125;&#123;.image&#125;&#123;\", \"&#125;&#123;end&#125;&#123;end&#125;'</span> |sort</span><br><span class=\"line\"><span class=\"comment\"># redis-master-deployment-7d557b94bb-bzw2v:       redis,</span></span><br><span class=\"line\">kubectl get pods --all-namespaces -o go-template --template=<span class=\"string\">\"&#123;&#123;range .items&#125;&#125;&#123;&#123;range .spec.containers&#125;&#125;&#123;&#123;.image&#125;&#125; &#123;&#123;end&#125;&#125;&#123;&#123;end&#125;&#125;\"</span></span><br><span class=\"line\">kubectl get pods redis-master-deployment-7d557b94bb-bzw2v --template=<span class=\"string\">'&#123;&#123;(index (index .spec.containers 0).ports 0)&#125;&#125;&#123;&#123;\"\\n\"&#125;&#125;'</span>  <span class=\"comment\">##使用go-template罗列容器进行Json解析</span></span><br><span class=\"line\">kubectl get pods --all-namespaces -o=jsonpath=<span class=\"string\">'&#123;range .items[*]&#125;&#123;\"\\n\"&#125;&#123;.metadata.namespace&#125;&#123;\":\\t\"&#125;&#123;.metadata.name&#125;&#123;\":\\t\"&#125;&#123;range .spec.volumes[*]&#125;&#123;.hostPath.path&#125;&#123;\", \"&#125;&#123;end&#125;&#123;end&#125;'</span> | sort</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.获取类型为Node的资源列表</span></span><br><span class=\"line\">kubectl get nodes</span><br><span class=\"line\"><span class=\"comment\"># NAME   STATUS   ROLES    AGE   VERSION</span></span><br><span class=\"line\"><span class=\"comment\"># k8s    Ready    master   29h   v1.18.2</span></span><br><span class=\"line\">kubectl get nodes -o wide</span><br><span class=\"line\"><span class=\"comment\"># NAME      STATUS   ROLES    AGE   VERSION   INTERNAL-IP     EXTERNAL-IP   OS-IMAGE                KERNEL-VERSION              CONTAINER-RUNTIME</span></span><br><span class=\"line\"><span class=\"comment\"># ks8test   Ready    master   23h   v1.18.3   10.10.107.193   &lt;none&gt;        CentOS Linux 7 (Core)   5.7.0-1.el7.elrepo.x86_64   docker://19.3.9</span></span><br><span class=\"line\"><span class=\"comment\"># node-1    Ready    &lt;none&gt;   41m   v1.18.3   10.20.172.82    &lt;none&gt;        CentOS Linux 7 (Core)   5.7.0-1.el7.elrepo.x86_64   docker://19.3.9</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4.名称空间在命令后增加 -A 或 --all-namespaces 可查看所有 名称空间中 的对象，使用参数 -n 可查看指定名称空间的对象，</span></span><br><span class=\"line\"><span class=\"comment\"># 查看所有名称空间的 Deployment</span></span><br><span class=\"line\">kubectl get deployments -A  <span class=\"comment\"># --all-namespaces</span></span><br><span class=\"line\"><span class=\"comment\"># 查看 kube-system 名称空间的 Deployment</span></span><br><span class=\"line\">kubectl get deployments -n kube-system</span><br><span class=\"line\"><span class=\"comment\"># NAME                      READY   UP-TO-DATE   AVAILABLE   AGE</span></span><br><span class=\"line\"><span class=\"comment\"># calico-kube-controllers   1/1     1            1           29h</span></span><br><span class=\"line\"><span class=\"comment\"># coredns                   2/2     2            2           29h</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5.Services抽象层查看</span></span><br><span class=\"line\">kubectl get services -o wide</span><br><span class=\"line\">kubectl get svc -o wide</span><br><span class=\"line\"><span class=\"comment\"># NAME            TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)        AGE   SELECTOR</span></span><br><span class=\"line\"><span class=\"comment\"># kubernetes      ClusterIP   10.96.0.1      &lt;none&gt;        443/TCP        40h   &lt;none&gt;</span></span><br><span class=\"line\"><span class=\"comment\"># redis-master-service   ClusterIP   10.99.192.159   &lt;none&gt;        6379/TCP   8m24s   app=redis,role=master,tier=backend</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 6.指定名称空间的配置信息查看</span></span><br><span class=\"line\">kubectl get cm kubeadm-config -n kube-system -o yaml</span><br><span class=\"line\"><span class=\"comment\"># apiVersion: v1</span></span><br><span class=\"line\"><span class=\"comment\"># data:</span></span><br><span class=\"line\"><span class=\"comment\">#   ClusterConfiguration: |</span></span><br><span class=\"line\"><span class=\"comment\">#     apiServer:</span></span><br><span class=\"line\"><span class=\"comment\">#       extraArgs:</span></span><br><span class=\"line\"><span class=\"comment\">#         authorization-mode: Node,RBAC</span></span><br><span class=\"line\"><span class=\"comment\">#       timeoutForControlPlane: 4m0s</span></span><br><span class=\"line\"><span class=\"comment\">#     apiVersion: kubeadm.k8s.io/v1beta2</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 7.指定名称空间选举信息查看</span></span><br><span class=\"line\">kubectl get ep kube-controller-manager -n kube-system -o yaml</span><br><span class=\"line\"><span class=\"comment\"># apiVersion: v1</span></span><br><span class=\"line\"><span class=\"comment\"># kind: Endpoints</span></span><br><span class=\"line\"><span class=\"comment\"># metadata:</span></span><br><span class=\"line\"><span class=\"comment\">#   annotations:</span></span><br><span class=\"line\"><span class=\"comment\">#     control-plane.alpha.kubernetes.io/leader: '&#123;\"holderIdentity\":\"master-01_137ddc1b-55bf-413b-81d3-f76654daa41e\",\"leaseDurationSeconds\":15,\"acquireTime\":\"2020-06-24T03:51:16Z\",\"renewTime\":\"2020-06-28T07:56:52Z\",\"leaderTransitions\":6&#125;'</span></span><br><span class=\"line\"><span class=\"comment\">#   creationTimestamp: \"2020-06-23T04:45:29Z\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 8.查看 ReplicaSet(副本) 状态与信息</span></span><br><span class=\"line\">kubectl get rs</span><br><span class=\"line\"><span class=\"comment\"># NAME                                 DESIRED   CURRENT   READY   AGE</span></span><br><span class=\"line\"><span class=\"comment\"># redis-master-deployment-7d557b94bb   1         1         1       4m46s</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>补充说明:</strong><br>示例.以YAML的格式显示 k8s 中 kubeadm-config 的配置;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~$ kubectl get cm -o yaml -n kube-system kubeadm-config</span><br><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">data:</span><br><span class=\"line\">  ClusterConfiguration: |</span><br><span class=\"line\">    apiServer:</span><br><span class=\"line\">      extraArgs:</span><br><span class=\"line\">        authorization-mode: Node,RBAC</span><br><span class=\"line\">      timeoutForControlPlane: 4m0s</span><br><span class=\"line\">    apiVersion: kubeadm.k8s.io/v1beta2</span><br><span class=\"line\">    certificatesDir: /etc/kubernetes/pki</span><br><span class=\"line\">    clusterName: kubernetes</span><br><span class=\"line\">    controlPlaneEndpoint: weiyigeek.k8s:6443</span><br><span class=\"line\">    controllerManager: &#123;&#125;</span><br><span class=\"line\">    dns:</span><br><span class=\"line\">      <span class=\"built_in\">type</span>: CoreDNS</span><br><span class=\"line\">    etcd:</span><br><span class=\"line\">      <span class=\"built_in\">local</span>:</span><br><span class=\"line\">        dataDir: /var/lib/etcd</span><br><span class=\"line\">    imageRepository: registry.cn-hangzhou.aliyuncs.com/google_containers</span><br><span class=\"line\">    kind: ClusterConfiguration</span><br><span class=\"line\">    kubernetesVersion: v1.19.3</span><br><span class=\"line\">    networking:</span><br><span class=\"line\">      dnsDomain: cluster.local</span><br><span class=\"line\">      podSubnet: 10.244.0.0/16</span><br><span class=\"line\">      serviceSubnet: 10.100.0.0/12</span><br><span class=\"line\">    scheduler: &#123;&#125;</span><br><span class=\"line\">  ClusterStatus: |</span><br><span class=\"line\">    apiEndpoints:</span><br><span class=\"line\">      ubuntu:</span><br><span class=\"line\">        advertiseAddress: 10.10.107.202</span><br><span class=\"line\">        bindPort: 6443</span><br><span class=\"line\">    apiVersion: kubeadm.k8s.io/v1beta2</span><br><span class=\"line\">    kind: ClusterStatus</span><br><span class=\"line\">kind: ConfigMap</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  creationTimestamp: <span class=\"string\">\"2020-11-04T13:30:06Z\"</span></span><br><span class=\"line\">  managedFields:</span><br><span class=\"line\">  - apiVersion: v1</span><br><span class=\"line\">    fieldsType: FieldsV1</span><br><span class=\"line\">    fieldsV1:</span><br><span class=\"line\">      f:data:</span><br><span class=\"line\">        .: &#123;&#125;</span><br><span class=\"line\">        f:ClusterConfiguration: &#123;&#125;</span><br><span class=\"line\">        f:ClusterStatus: &#123;&#125;</span><br><span class=\"line\">    manager: kubeadm</span><br><span class=\"line\">    operation: Update</span><br><span class=\"line\">    time: <span class=\"string\">\"2020-11-04T13:30:06Z\"</span></span><br><span class=\"line\">  name: kubeadm-config</span><br><span class=\"line\">  namespace: kube-system</span><br><span class=\"line\">  resourceVersion: <span class=\"string\">\"162\"</span></span><br><span class=\"line\">  selfLink: /api/v1/namespaces/kube-system/configmaps/kubeadm-config</span><br><span class=\"line\">  uid: ee701525-7242-42b3-bc64-6c7ac27dd5d3</span><br></pre></td></tr></table></figure></p>\n<p><em>注意事项:</em></p>\n<ul>\n<li>注意并非所有对象都在名称空间里；</li>\n</ul>\n<p><br/></p>\n<h3 id=\"logs-查看pod中的容器的打印日志（和命令docker-logs-类似）\"><a href=\"#logs-查看pod中的容器的打印日志（和命令docker-logs-类似）\" class=\"headerlink\" title=\"logs - 查看pod中的容器的打印日志（和命令docker logs 类似）\"></a>logs - 查看pod中的容器的打印日志（和命令docker logs 类似）</h3><p>描述:输出pod中一个容器的日志,如果pod只包含一个容器则可以省略容器名。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># kubectl logs [Pod名称]</span></span><br><span class=\"line\">-c, --container=<span class=\"string\">\"\"</span>: 容器名。</span><br><span class=\"line\">-f, --follow[=<span class=\"literal\">false</span>]: 指定是否持续输出日志。</span><br><span class=\"line\">    --interactive[=<span class=\"literal\">true</span>]: 如果为<span class=\"literal\">true</span>，当需要时提示用户进行输入。默认为<span class=\"literal\">true</span>。</span><br><span class=\"line\">    --<span class=\"built_in\">limit</span>-bytes=0: 输出日志的最大字节数。默认无限制。</span><br><span class=\"line\">-p, --previous[=<span class=\"literal\">false</span>]: 如果为<span class=\"literal\">true</span>，输出pod中曾经运行过，但目前已终止的容器的日志。</span><br><span class=\"line\">    --since=0: 仅返回相对时间范围，如5s、2m或3h，之内的日志。默认返回所有日志。只能同时使用since和since-time中的一种。</span><br><span class=\"line\">    --since-time=<span class=\"string\">\"\"</span>: 仅返回指定时间（RFC3339格式）之后的日志。默认返回所有日志。只能同时使用since和since-time中的一种。</span><br><span class=\"line\">    --tail=-1: 要显示的最新的日志条数。默认为-1，显示所有的日志。</span><br><span class=\"line\">    --timestamps[=<span class=\"literal\">false</span>]: 在日志中包含时间戳。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看名称为nginx-pod-XXXXXXX的Pod内的容器打印的日志</span></span><br><span class=\"line\"><span class=\"comment\">#本案例中的 nginx-pod 没有输出日志，所以您看到的结果是空的</span></span><br><span class=\"line\">kubectl logs -f nginx-deployment-674ff86d-btmt4</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 返回pod ruby中已经停止的容器web-1的日志快照</span></span><br><span class=\"line\">$ kubectl logs -p -c ruby web-1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 持续输出pod ruby中的容器web-1的日志</span></span><br><span class=\"line\">$ kubectl logs -f -c ruby web-1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 仅输出pod nginx中最近的20条日志</span></span><br><span class=\"line\">$ kubectl logs --tail=20 nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输出pod nginx中最近一小时内产生的所有日志</span></span><br><span class=\"line\">$ kubectl logs --since=1h nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输出命名空间为WeiyiGeek，pods为Blog的日志仅返回指定时间（RFC3339格式）之后的日志并且仅仅输出1024bytes</span></span><br><span class=\"line\"><span class=\"comment\"># 注意, 北京时间需要+8小时</span></span><br><span class=\"line\">$ kubectl logs Blog -n WeiyiGeek --since-time=<span class=\"string\">\"2021-12-23T20:20:59Z\"</span> --<span class=\"built_in\">limit</span>-bytes=1024</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<h3 id=\"run-运行一个pod应用\"><a href=\"#run-运行一个pod应用\" class=\"headerlink\" title=\"run - 运行一个pod应用\"></a>run - 运行一个pod应用</h3><p>基础示例:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 示例1.这是一种自主式的pod建立方式,还有一种deployment控制器方式;</span></span><br><span class=\"line\">kubectl run helloworld --image=hello-world\t</span><br><span class=\"line\">pod/helloworld created</span><br><span class=\"line\"><span class=\"comment\"># 查看执行的结果日志</span></span><br><span class=\"line\"><span class=\"comment\"># kubectl logs helloworld</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"replace-用文件名或stdin替换资源\"><a href=\"#replace-用文件名或stdin替换资源\" class=\"headerlink\" title=\"replace - 用文件名或stdin替换资源\"></a>replace - 用文件名或stdin替换资源</h3><p>描述: 该命令支持JSON和YAML格式,可以帮助我们快速更换现有资源。</p>\n<p><strong>语法参数:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-f, --filename=[]: 指定格式的资源文件。</span><br><span class=\"line\">--force=<span class=\"literal\">false</span>: 强制删除资源。</span><br><span class=\"line\">--<span class=\"built_in\">wait</span>=<span class=\"literal\">false</span>: 如果为真，等待资源消失后再返回。</span><br></pre></td></tr></table></figure></p>\n<p><strong>基础实例:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.使用json或者yaml格式，替换现有资源。</span></span><br><span class=\"line\">kubectl replace -f ./pod.json</span><br><span class=\"line\">kubectl replace -f ./deployment.yaml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.根据传递给stdin的JSON替换一个pod</span></span><br><span class=\"line\">cat pod.json | kubectl replace -f -</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.将单个容器吊舱的图像版本（标签）更新为v4 (值得学习)</span></span><br><span class=\"line\">kubectl get pod mypod -o yaml | sed <span class=\"string\">'s/\\(image: myimage\\):.*$/\\1:v4/'</span> | kubectl replace -f -</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4.强制替换、删除，然后重新创建资源</span></span><br><span class=\"line\">kubectl replace --force -f ./pod.json</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"port-forward-使用资源的名称来进行本地端口转发pod\"><a href=\"#port-forward-使用资源的名称来进行本地端口转发pod\" class=\"headerlink\" title=\"port-forward - 使用资源的名称来进行本地端口转发pod\"></a>port-forward - 使用资源的名称来进行本地端口转发pod</h3><p>描述: 将一个或多个本地端口转发到pod, 此命令要求节点安装 socat, 使用资源类型/名称<code>（如deployment/mydeployment）</code>来选择pod, 如果省略资源类型默认为“pod”。</p>\n<p>适用范围 Pod（缺省）、Service、RC、deployment。</p>\n<p>Tips : 转发会话结束当选定的pod终止时，需要重新运行命令才能恢复转发。</p>\n<p><strong>语法参数:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 语法</span></span><br><span class=\"line\">kubectl port-forward TYPE/NAME [options] [LOCAL_PORT:]REMOTE_PORT [...[LOCAL_PORT_N:]REMOTE_PORT_N]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 参数</span></span><br><span class=\"line\">--address=[localhost]       <span class=\"comment\">#  要监听的地址(逗号分隔)。</span></span><br><span class=\"line\">--pod-running-timeout=1m0s: <span class=\"comment\"># 等待时间的长度(如5s, 2m，或3h，大于零)</span></span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p><strong>基础实例:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># - (0) 在本地的随机端口上侦听，转发到pod中的5000</span></span><br><span class=\"line\">kubectl port-forward pod/mypod :5000</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - (1) 本地侦听端口 8443 转发到服务选择的pod中名为“https”的服务端口的targetPort</span></span><br><span class=\"line\">kubectl port-forward service/myservice 8443:https</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - (2) 映射 redis-master-7d557b94bb-bzw2v Pod 的 6379 到 127.0.0.1,10.10.107.191 接口的7000</span></span><br><span class=\"line\">kubectl port-forward --address 127.0.0.1,10.10.107.191 pod/redis-master-7d557b94bb-bzw2v 7000:6379</span><br><span class=\"line\">  <span class=\"comment\"># Forwarding from 10.10.107.191:7000 -&gt; 6379</span></span><br><span class=\"line\">  <span class=\"comment\"># Forwarding from 127.0.0.1:7000 -&gt; 6379</span></span><br><span class=\"line\">  <span class=\"comment\"># Handling connection for 7000</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"label-节点、资源标签更新与设置\"><a href=\"#label-节点、资源标签更新与设置\" class=\"headerlink\" title=\"label - 节点、资源标签更新与设置\"></a>label - 节点、资源标签更新与设置</h3><p>描述: 更新资源的标签信息，我们可以根据标签来设置Pod与节点亲和性。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 节点角色名称设置</span></span><br><span class=\"line\">~$ kubectl label node weiyigeek-223 node-role.kubernetes.io/work=<span class=\"built_in\">test</span></span><br><span class=\"line\">node/weiyigeek-223 labeled</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 取消节点角色名称</span></span><br><span class=\"line\">kubectl label node weiyigeek-223 node-role.kubernetes.io/work</span><br></pre></td></tr></table></figure>\n<h3 id=\"top-集群相关Metrics资源数据查看-类比于Linux下的Top\"><a href=\"#top-集群相关Metrics资源数据查看-类比于Linux下的Top\" class=\"headerlink\" title=\"top - 集群相关Metrics资源数据查看(类比于Linux下的Top)\"></a>top - 集群相关Metrics资源数据查看(类比于Linux下的Top)</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 没有安装 Kubernerters-Metrics-Server 的时候将会显示以下错误;</span></span><br><span class=\"line\">~$ kubectl top node</span><br><span class=\"line\">error: Metrics API not available</span><br></pre></td></tr></table></figure>\n<h3 id=\"scale-动态更新副本数\"><a href=\"#scale-动态更新副本数\" class=\"headerlink\" title=\"scale - 动态更新副本数\"></a>scale - 动态更新副本数</h3><p>描述: 为部署、副本集、复制控制器或有状态集设置新大小。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl -n app scale statefulset/xk-student --replicas=0</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<h3 id=\"set-配置应用程序资源\"><a href=\"#set-配置应用程序资源\" class=\"headerlink\" title=\"set - 配置应用程序资源\"></a>set - 配置应用程序资源</h3><p><strong>命令参数</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Usage:</span></span><br><span class=\"line\">  kubectl <span class=\"built_in\">set</span> SUBCOMMAND [options]</span><br><span class=\"line\"><span class=\"comment\"># Available Commands:</span></span><br><span class=\"line\">  env            更新模板环境变量</span><br><span class=\"line\">  image          更新模板镜像地址</span><br><span class=\"line\">  resources      在对象的 pod templates 上更新资源的 requests/limits</span><br><span class=\"line\">  selector       设置 resource 的 selector</span><br><span class=\"line\">  serviceaccount 更新资源服务账户</span><br><span class=\"line\">  subject        更新角色绑定或群集角色绑定中的用户、组或服务帐户</span><br></pre></td></tr></table></figure></p>\n<p><strong>使用案例</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.设置deployment控制器管理的nginx资源,将nginx容器的镜像换成1.21.0</span></span><br><span class=\"line\">kubectl <span class=\"built_in\">set</span> image deployment/nginx busybox=busybox:latest nginx=nginx:1.21.0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.将所有deployment和rc的nginx容器映像更新为“nginx:1.9.1”</span></span><br><span class=\"line\">kubectl <span class=\"built_in\">set</span> image deployments,rc nginx=nginx:1.9.1 --all</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.将守护程序abc的所有容器的映像更新为“nginx:1.9.1”</span></span><br><span class=\"line\">kubectl <span class=\"built_in\">set</span> image daemonset abc *=nginx:1.9.1</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"wait-等待一个或多个资源的特定条件-实验性\"><a href=\"#wait-等待一个或多个资源的特定条件-实验性\" class=\"headerlink\" title=\"wait - 等待一个或多个资源的特定条件(实验性)\"></a>wait - 等待一个或多个资源的特定条件(实验性)</h3><p>描述: 该命令会占用多个资源，通过使用–for标志等待在每个给定对象的状态字段中看到指定的条件资源，并将向标准输出一条成功消息，指示何时满足指定条件，同时可以使用-o选项更改为输出目标。</p>\n<p><strong>格式化输出文件类型:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-o, --output=<span class=\"string\">''</span>: Output format. One of:</span><br><span class=\"line\">json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-as-json|jsonpath-file.</span><br></pre></td></tr></table></figure></p>\n<p><strong>简单示例:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.等待Ingress相关资源Pod状态为Ready,使用标签选择器，超时实践为120</span></span><br><span class=\"line\">kubectl <span class=\"built_in\">wait</span> --namespace ingress-nginx \\</span><br><span class=\"line\">  --<span class=\"keyword\">for</span>=condition=ready pod \\</span><br><span class=\"line\">  --selector=app.kubernetes.io/component=controller \\</span><br><span class=\"line\">  --timeout=120s</span><br><span class=\"line\">  <span class=\"comment\"># pod/ingress-nginx-controller-847949b9d7-9fzrj condition met</span></span><br><span class=\"line\"></span><br><span class=\"line\">kubectl <span class=\"built_in\">wait</span> pod --namespace devtest \\</span><br><span class=\"line\">  --<span class=\"keyword\">for</span>=condition=Ready \\</span><br><span class=\"line\">  --selector=app=oa \\</span><br><span class=\"line\">  --timeout=120s</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.等待pod“busybox1”包含类型为“Ready”的状态条件</span></span><br><span class=\"line\">kubectl <span class=\"built_in\">wait</span> --<span class=\"keyword\">for</span>=condition=Ready pod/busybox1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.状态条件的默认值为true,可以将其设置为false</span></span><br><span class=\"line\">kubectl <span class=\"built_in\">wait</span> --<span class=\"keyword\">for</span>=condition=Ready=<span class=\"literal\">false</span> pod/busybox1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4.等待pod“busybox1”包含“正在运行”的状态阶段。</span></span><br><span class=\"line\">kubectl <span class=\"built_in\">wait</span> --<span class=\"keyword\">for</span>=jsonpath=<span class=\"string\">'&#123;.status.phase&#125;'</span>=Running pod/busybox1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 发出“删除”命令后，等待pod“busybox1”被删除，超时60秒</span></span><br><span class=\"line\">kubectl delete pod/busybox1</span><br><span class=\"line\">kubectl <span class=\"built_in\">wait</span> --<span class=\"keyword\">for</span>=delete pod/busybox1 --timeout=60s</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#查看当前更新状态</span><br><span class=\"line\">kubectl rollout status deployments nginx-deployment </span><br><span class=\"line\">kubectl get pods </span><br><span class=\"line\">#查看可回滚的历史版本</span><br><span class=\"line\">kubectl rollout history deployment&#x2F;nginx-deployment </span><br><span class=\"line\">kubectl rollout undo deployment&#x2F;nginx-deployment</span><br><span class=\"line\">##可以使用--revision参数指定回退到某个历史版本 </span><br><span class=\"line\">kubectl rollout undo deployment&#x2F;nginx-deployment --to-revision&#x3D;2  </span><br><span class=\"line\">##暂停 deployment的更新</span><br><span class=\"line\">kubectl rollout pause deployment&#x2F;nginx-deployment</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">$ kubectl get ep -o wide</span><br><span class=\"line\">NAME               ENDPOINTS                                               AGE</span><br><span class=\"line\">deploy-blog-svc    10.244.0.209:80,10.244.1.196:80,10.244.2.99:80          34d</span><br><span class=\"line\">deploy-maven-svc   10.244.0.236:8080,10.244.1.221:8080,10.244.2.124:8080   32d</span><br><span class=\"line\">kubernetes         10.10.107.202:6443                                      83d</span><br><span class=\"line\"># 在Kubenates的上创建devops命名空间，用于Jenkins使用</span><br><span class=\"line\">kubectl create namespace devops</span><br><span class=\"line\"></span><br><span class=\"line\"># 在Kubernetes上为Jenkins构建创建有Cluster Admin权限的Service Account jenkins：</span><br><span class=\"line\">kubectl create clusterrolebinding jenkins --clusterrole cluster-admin --serviceaccount&#x3D;devops:jenkins</span><br><span class=\"line\"></span><br><span class=\"line\">Tips : 创建Deployment控制器控制的资源，实际上不加port也能通过服务进行发现实际工作中一定要加上为了后期问题的排查</span><br><span class=\"line\"></span><br><span class=\"line\">Tips : 可以采用直接 RUN 创建Pod, 实际上不加port也能通过服务进行发现实际工作中一定要加上为了后期问题的排查</span><br><span class=\"line\">kubectl run nginx --image nginx:latest --port&#x3D;80 --replicas&#x3D;2</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">~$ kubectl get clusterroles system:aggregate-to-admin -o yaml</span><br><span class=\"line\">apiVersion: rbac.authorization.k8s.io&#x2F;v1</span><br><span class=\"line\">kind: ClusterRole</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  annotations:</span><br><span class=\"line\">    rbac.authorization.kubernetes.io&#x2F;autoupdate: &quot;true&quot;</span><br><span class=\"line\">  creationTimestamp: &quot;2021-01-11T04:55:10Z&quot;</span><br><span class=\"line\">  labels:</span><br><span class=\"line\">    kubernetes.io&#x2F;bootstrapping: rbac-defaults</span><br><span class=\"line\">    rbac.authorization.k8s.io&#x2F;aggregate-to-admin: &quot;true&quot;</span><br><span class=\"line\">  managedFields:</span><br><span class=\"line\">  - apiVersion: rbac.authorization.k8s.io&#x2F;v1</span><br><span class=\"line\">    fieldsType: FieldsV1</span><br><span class=\"line\">    fieldsV1:</span><br><span class=\"line\">      f:metadata:</span><br><span class=\"line\">        f:annotations:</span><br><span class=\"line\">          .: &#123;&#125;</span><br><span class=\"line\">          f:rbac.authorization.kubernetes.io&#x2F;autoupdate: &#123;&#125;</span><br><span class=\"line\">        f:labels:</span><br><span class=\"line\">          .: &#123;&#125;</span><br><span class=\"line\">          f:kubernetes.io&#x2F;bootstrapping: &#123;&#125;</span><br><span class=\"line\">          f:rbac.authorization.k8s.io&#x2F;aggregate-to-admin: &#123;&#125;</span><br><span class=\"line\">      f:rules: &#123;&#125;</span><br><span class=\"line\">    manager: kube-apiserver</span><br><span class=\"line\">    operation: Update</span><br><span class=\"line\">    time: &quot;2021-01-11T04:55:10Z&quot;</span><br><span class=\"line\">  name: system:aggregate-to-admin</span><br><span class=\"line\">  resourceVersion: &quot;50&quot;</span><br><span class=\"line\">  selfLink: &#x2F;apis&#x2F;rbac.authorization.k8s.io&#x2F;v1&#x2F;clusterroles&#x2F;system%3Aaggregate-to-admin</span><br><span class=\"line\">  uid: 93f094d8-f5f6-42c6-bcc8-e6ca9bb0f37a</span><br><span class=\"line\">rules:</span><br><span class=\"line\">- apiGroups:</span><br><span class=\"line\">  - authorization.k8s.io</span><br><span class=\"line\">  resources:</span><br><span class=\"line\">  - localsubjectaccessreviews</span><br><span class=\"line\">  verbs:</span><br><span class=\"line\">  - create</span><br><span class=\"line\">- apiGroups:</span><br><span class=\"line\">  - rbac.authorization.k8s.io</span><br><span class=\"line\">  resources:</span><br><span class=\"line\">  - rolebindings</span><br><span class=\"line\">  - roles</span><br><span class=\"line\">  verbs:</span><br><span class=\"line\">  - create</span><br><span class=\"line\">  - delete</span><br><span class=\"line\">  - deletecollection</span><br><span class=\"line\">  - get</span><br><span class=\"line\">  - list</span><br><span class=\"line\">  - patch</span><br><span class=\"line\">  - update</span><br><span class=\"line\">  - watch</span><br></pre></td></tr></table></figure>\n<p>参考地址： <a href=\"https://www.cnblogs.com/shunzi115/p/12392056.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/shunzi115/p/12392056.html</a></p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Containers","path":"api/categories/Containers.json"},{"name":"OperationTools","path":"api/categories/OperationTools.json"}],"tags":[{"name":"k8s","path":"api/tags/k8s.json"}]}