{"title":"Python基础学习之pip包管理器介绍与实践","slug":"编程世界/Python/基础环境/Python基础学习之pip包管理器介绍与实践","date":"2020-03-20T12:35:30.000Z","updated":"2023-01-31T02:29:10.671Z","url":"2020/3-20-658.html","path":"api/articles/2020/3-20-658.html.json","covers":["https://img.weiyigeek.top/2022/5/20220714140753.png","https://img.weiyigeek.top/2021/5/20211109210639.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h2 id=\"0x00-前言简述\"><a href=\"#0x00-前言简述\" class=\"headerlink\" title=\"0x00 前言简述\"></a>0x00 前言简述</h2><p>描述: 在Python中默认的包、模块管理工具是 pip, 使得其可以对 Python 包的查找、下载、安装、卸载的功能。</p>\n<hr>\n<h2 id=\"0x01-pip-命令-Python-包管理工具\"><a href=\"#0x01-pip-命令-Python-包管理工具\" class=\"headerlink\" title=\"0x01 pip 命令 - Python 包管理工具\"></a>0x01 pip 命令 - Python 包管理工具</h2><h3 id=\"安装配置\"><a href=\"#安装配置\" class=\"headerlink\" title=\"安装配置\"></a>安装配置</h3><p><strong>pip 安装</strong><br>描述: python 依赖库建议使用pip进行管理, 如果你的没有安装pip可执行如下命令进行安装:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Python 环境通用安装</span></span><br><span class=\"line\">wget https://bootstrap.pypa.io/get-pip.py --no-check-certificate &amp;&amp; python get-pip.py</span><br><span class=\"line\">python get-pip.py  <span class=\"comment\"># 安装 python 2.7 的 pip</span></span><br><span class=\"line\">python3 get-pip.py <span class=\"comment\"># 安装 python 3.7 的 pip3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Ubuntu、Kail 发行版安装</span></span><br><span class=\"line\">apt-get install python-pip</span><br><span class=\"line\">apt-get install python-setuptools</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Python 默认方式安装</span></span><br><span class=\"line\">easy_install pip</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装指定版本的pip</span></span><br><span class=\"line\">python -m pip install pip==22.1.1  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 版本查看</span></span><br><span class=\"line\">pip --version</span><br><span class=\"line\">  <span class=\"comment\"># pip 22.1.1 from D:\\Study\\Python\\lib\\site-packages\\pip (python 3.8)</span></span><br><span class=\"line\">pip3 --version</span><br><span class=\"line\">  <span class=\"comment\"># pip 22.1.1 from /usr/local/python3.8/lib/python3.8/site-packages/pip (python 3.8)</span></span><br></pre></td></tr></table></figure></p>\n<p>温馨提示：pip 已内置于Python3.4和2.7及以上版本，其他版本需另行安装。</p>\n<p><br></p>\n<p><strong>pip 常用命令</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Usage: pip [options]</span><br><span class=\"line\">Commands:</span><br><span class=\"line\">  install   <span class=\"comment\"># 安装包安装 （Install packages.）</span></span><br><span class=\"line\">  download  <span class=\"comment\"># 下载下载包 （Download packages.）</span></span><br><span class=\"line\">  uninstall <span class=\"comment\"># 卸载卸载包 （Uninstall packages.）</span></span><br><span class=\"line\">  freeze    <span class=\"comment\"># 冻结按需求格式安装的包的输出 （Output installed packages in requirements format.）】</span></span><br><span class=\"line\">  list      <span class=\"comment\"># 列表列出已安装的包 （ List installed packages.）】</span></span><br><span class=\"line\">  show      <span class=\"comment\"># 显示已安装软件包的信息 （ Show information about installed packages.）】</span></span><br><span class=\"line\">  check     <span class=\"comment\"># 检查已安装的软件包是否具有兼容的依赖项 （ Verify installed packages have compatible dependencies.）】</span></span><br><span class=\"line\">  config    <span class=\"comment\"># 配置管理本地和全局配置 （ Manage local and global configuration.）】</span></span><br><span class=\"line\">  search    <span class=\"comment\"># 搜索PyPI查找包 （Search PyPI for packages.）】</span></span><br><span class=\"line\">  wheel     <span class=\"comment\"># 根据您的需求构建轮子 （Build wheels from your requirements.）】</span></span><br><span class=\"line\">  <span class=\"built_in\">hash</span>      <span class=\"comment\"># 包存档的哈希计算值 （ Compute hashes of package archives.）】</span></span><br><span class=\"line\">  completion <span class=\"comment\"># 用于命令完成的辅助命令 （ A helper command used for command completion.）】</span></span><br><span class=\"line\">  debug      <span class=\"comment\"># 显示对调试有用的信息 （ Show information useful for debugging.）】</span></span><br><span class=\"line\">  <span class=\"built_in\">help</span>       <span class=\"comment\"># 帮助显示命令的帮助 （Show help for commands.）</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"pip-镜像加速配置\"><a href=\"#pip-镜像加速配置\" class=\"headerlink\" title=\"pip 镜像加速配置\"></a>pip 镜像加速配置</h3><p><strong>pypi 国内镜像源地址:</strong></p>\n<ul>\n<li>阿里云: <a href=\"http://mirrors.aliyun.com/pypi/simple/\" target=\"_blank\" rel=\"noopener\">http://mirrors.aliyun.com/pypi/simple/</a></li>\n<li>豆瓣(douban): <a href=\"http://pypi.douban.com/simple/\" target=\"_blank\" rel=\"noopener\">http://pypi.douban.com/simple/</a></li>\n<li>清华大学: <a href=\"https://pypi.tuna.tsinghua.edu.cn/simple/\" target=\"_blank\" rel=\"noopener\">https://pypi.tuna.tsinghua.edu.cn/simple/</a></li>\n<li>中国科技大学: <a href=\"https://pypi.mirrors.ustc.edu.cn/simple/\" target=\"_blank\" rel=\"noopener\">https://pypi.mirrors.ustc.edu.cn/simple/</a></li>\n<li>中国科学技术大学: <a href=\"http://pypi.mirrors.ustc.edu.cn/simple/\" target=\"_blank\" rel=\"noopener\">http://pypi.mirrors.ustc.edu.cn/simple/</a></li>\n</ul>\n<p><br/></p>\n<p><strong>镜像源配置</strong></p>\n<ul>\n<li><p>方式1.命令行全局配置默认镜像源.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Windows</span></span><br><span class=\"line\">pip config <span class=\"built_in\">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class=\"line\">  <span class=\"comment\"># Writing to C:\\Users\\WeiyiGeek\\AppData\\Roaming\\pip\\pip.ini</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Linux </span></span><br><span class=\"line\">pip3 config <span class=\"built_in\">set</span> global.index-url https://mirrors.aliyun.com/pypi/simple/</span><br><span class=\"line\">  <span class=\"comment\"># Writing to /root/.config/pip/pip.conf</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>方式2.命令行参数配置临时镜像源.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 升级 pip 到最新的版本 (&gt;=10.0.0) 后进行配置</span></span><br><span class=\"line\">pip install pip -U</span><br><span class=\"line\"><span class=\"comment\"># 如果上面升级连接的默认源网络连接较差，临时使用本条命令来升级 pip;</span></span><br><span class=\"line\">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple pip -U  </span><br><span class=\"line\"><span class=\"comment\"># 临时生效</span></span><br><span class=\"line\">pip install &lt;安装包库名称&gt; -i https://pypi.tuna.tsinghua.edu.cn/simple  </span><br><span class=\"line\">pip install &lt;安装包库名称&gt; -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com</span><br><span class=\"line\">pip --default-timeout=100 install 库名称 -i http://pypi.douban.com/simple/ --trusted-host pypi.douban.com</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>方式3.pip 配置文件方式配置.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim /root/.config/pip/pip.conf</span><br><span class=\"line\">[global]</span><br><span class=\"line\">index-url = https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>方式4.第三方IDE软件配置，此处 pycharm 为例配置镜像仓库后，安装速度将会比较快。</p>\n</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/5/20220714140753.png\" alt=\"WeiyiGeek.配置pycharm镜像仓库\" title=\"\" class=\"\">\n                <p>WeiyiGeek.配置pycharm镜像仓库</p>\n            </figure>\n<p><br></p>\n<h3 id=\"pip-使用实践\"><a href=\"#pip-使用实践\" class=\"headerlink\" title=\"pip 使用实践\"></a>pip 使用实践</h3><p><strong>实践实例</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.常规使用下载安装easyocr包或者从requ</span></span><br><span class=\"line\">pip install easyocr</span><br><span class=\"line\"><span class=\"comment\"># 安装最新flask包, -i 指定仓库镜像源, --no-cache-dir 表示不生产缓存目录。</span></span><br><span class=\"line\">pip install flask --no-cache-dir -i https://pypi.tuna.tsinghua.edu.cn/simple </span><br><span class=\"line\"><span class=\"comment\"># 从 requirements.txt 文件中读取要安装下载的包，-r 指定依赖包列表的存储文件</span></span><br><span class=\"line\">pip install -r requirements.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.查看 pip 支持的包类型</span></span><br><span class=\"line\">pip debug --verbose</span><br><span class=\"line\">  <span class=\"comment\"># pip version: pip 22.1.1 from D:\\Study\\Python\\lib\\site-packages\\pip (python 3.8)</span></span><br><span class=\"line\">  <span class=\"comment\"># sys.version: 3.8.10 (tags/v3.8.10:3d8993a, May  3 2021, 11:48:03) [MSC v.1928 64 bit (AMD64)]</span></span><br><span class=\"line\">  <span class=\"comment\"># sys.executable: D:\\Study\\Python\\python.exe</span></span><br><span class=\"line\">  <span class=\"comment\"># sys.getdefaultencoding: utf-8</span></span><br><span class=\"line\">  <span class=\"comment\"># sys.getfilesystemencoding: utf-8</span></span><br><span class=\"line\">  <span class=\"comment\"># locale.getpreferredencoding: cp936</span></span><br><span class=\"line\">  <span class=\"comment\"># sys.platform: win32</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.查看系统所有安装的依赖包</span></span><br><span class=\"line\">pip list  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4.查看并列举出虚拟环境新安装的包</span></span><br><span class=\"line\">pip freeze </span><br><span class=\"line\">pip freeze &gt; requirements.txt</span><br><span class=\"line\">  <span class=\"comment\"># WARNING: Ignoring invalid distribution -ip (d:\\study\\python\\lib\\site-packages)</span></span><br><span class=\"line\">  <span class=\"comment\"># certifi==2022.5.18.1</span></span><br><span class=\"line\">  <span class=\"comment\"># charset-normalizer==2.0.12</span></span><br><span class=\"line\">  <span class=\"comment\"># click==8.0.3</span></span><br><span class=\"line\">  <span class=\"comment\"># colorama==0.4.4</span></span><br><span class=\"line\">  <span class=\"comment\"># cycler==0.10.0</span></span><br><span class=\"line\">  <span class=\"comment\"># easyocr @ file:///G:/%E8%BF%85%E9%9B%B7%E4%B8%8B%E8%BD%BD/easyocr-1.4.2-py3-none-any.whl</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"pip-错误记录\"><a href=\"#pip-错误记录\" class=\"headerlink\" title=\"pip 错误记录\"></a>pip 错误记录</h3><p><strong>问题1：使用pip安装包模块C++运行库报错</strong></p>\n<ul>\n<li>错误信息: Microsoft Visual C++ 14.0 is required. Get it with “Microsoft Visual C++ Build Tools”: <a href=\"https://visualstudio.microsoft.com/downloads/\" target=\"_blank\" rel=\"noopener\">https://visualstudio.microsoft.com/downloads/</a><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Python 2.7 需要Microsoft Visual C++ 9.0的库</span><br><span class=\"line\">Python 3.6 需要Microsoft Visual C++ 14.0的库</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br></p>\n<p><strong>问题2：centos下安装pip时失败的解决方法?</strong><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#解决方法1：先安装扩展源EPEL,EPEL(http://fedoraproject.org/wiki/EPEL) 是由 Fedora 社区打造，为 RHEL 及衍生发行版如 CentOS、Scientific Linux 等提供高质量软件包的项目。</span></span><br><span class=\"line\"><span class=\"comment\">#首先安装epel扩展源：</span></span><br><span class=\"line\">$ sudo yum -y install epel-release</span><br><span class=\"line\"><span class=\"comment\">#然后再安装pip</span></span><br><span class=\"line\">$ sudo yum -y install python-pip</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#解决方法2：如过没有安装pip, 可执行如下命令进行安装:</span></span><br><span class=\"line\">wget https://sec.ly.com/mirror/get-pip.py --no-check-certificate &amp;&amp; python get-pip.py</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#更新到pip最新版本:</span></span><br><span class=\"line\">$ pip install -U pip</span><br><span class=\"line\">$ python -m pip install --upgrade pip</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>问题3：输入pip命令报错：from pip import main ImportError: cannot import name ‘main’</strong></p>\n<ul>\n<li>错误信息:<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> workspace&gt; pip</span><br><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File <span class=\"string\">\"/usr/bin/pip\"</span>, line 9, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">    from pip import main</span><br><span class=\"line\">ImportError: cannot import name main</span><br></pre></td></tr></table></figure></li>\n<li>问题原因: 由于在ubuntu 16.04上升级pip版本后导致的:</li>\n<li>修复流程:<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.若在只读权限下强制保存会导致文件受损，建议修改配置文件时先查看是否具有权限 </span></span><br><span class=\"line\">$ vim /usr/bin/pip</span><br><span class=\"line\">from pip import __main__  <span class=\"comment\">#这行也要修改</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:  </span><br><span class=\"line\">  sys.exit(__main__._main())<span class=\"comment\">#增加__main__._</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.最后保存查看</span></span><br><span class=\"line\">workspace&gt; pip -V              </span><br><span class=\"line\">  pip 19.1.1 from /home/coding/.<span class=\"built_in\">local</span>/lib/python2.7/site-packages/pip (python 2.7)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br/></p>\n<p><strong>问题4:安装BeautifulSoup失败</strong><br>原因分析：</p>\n<ul>\n<li>1) 可能是PIP版本过低造成安装不成功，目前使用版本10.0.1，已有最新版本18.1；</li>\n<li>2) 也可能是安装包不对，需要使用BeautifulSoup4的包进行安装,不升级PIP的情况下，进行安装BeautifulSoup4包成功。</li>\n</ul>\n<p><br/></p>\n<p><strong>问题5:采用pip3安装Certbot出错</strong></p>\n<ul>\n<li>问题描述:<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Command python setup.py egg_info failed with error code 1 <span class=\"keyword\">in</span> /tmp/pip_build_root/cryptography</span><br><span class=\"line\">Storing debug <span class=\"built_in\">log</span> <span class=\"keyword\">for</span> failure <span class=\"keyword\">in</span> /root/.pip/pip.log</span><br></pre></td></tr></table></figure></li>\n<li>解决办法:<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">easy_install -U setuptools</span><br><span class=\"line\">sudo pip3 install certbot</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br/></p>\n<p><strong>问题6: setuptools版本太老导致依赖无法下载</strong></p>\n<ul>\n<li>问题描述: RuntimeError: cryptography requires setuptools 18.5 or newer, please upgrade to a newer version of setuptool.</li>\n<li>解决办法: <code>pip install --upgrade setuptools</code></li>\n</ul>\n<p><br/></p>\n<p><strong>问题7.执行pip命令出现<code>ModuleNotFoundError: No module named &#39;pip&#39;</code>错误</strong></p>\n<ul>\n<li>问题原因: 系统中没有安装pip模块</li>\n<li>解决办法: 安装和升级pip模块<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -m ensurepip</span><br><span class=\"line\">python -m pip install --upgrade pip</span><br><span class=\"line\">python -m pip install pip==19.0.3  <span class=\"comment\"># 安装指定版本</span></span><br></pre></td></tr></table></figure>\n<br/></li>\n</ul>\n<p><strong>问题8.在Windows中使用pip安装某个库的时候，出现如图错误提示<code>WARNING: Ignoring invalid distribution -ip</code></strong></p>\n<ul>\n<li>错误原因: 在之前下载某个库的时候没有成功或者中途异常退出导致。</li>\n<li>解决方法：我们进入到Python安装目录，例如我的<code>D:\\Program Files (x86)\\Python37-32\\Lib\\site-packages</code>,删除~ip开头的目录，然后pip重新安装库即可。</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/5/20211109210639.png\" alt=\"WeiyiGeek.pip安装时错误\" title=\"\" class=\"\">\n                <p>WeiyiGeek.pip安装时错误</p>\n            </figure>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Python3","path":"api/categories/Python3.json"}],"tags":[{"name":"pip","path":"api/tags/pip.json"}]}