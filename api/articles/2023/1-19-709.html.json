{"title":"18.计算机科学导论之人工智能初识学习笔记","slug":"书籍笔记/计算机科学导论/18.计算机科学导论之人工智能初识学习笔记","date":"2023-01-19T10:35:30.000Z","updated":"2023-02-13T08:02:27.234Z","url":"2023/1-19-709.html","path":"api/articles/2023/1-19-709.html.json","covers":["https://docs.microsoft.com/zh-cn/learn/wwl-data-ai/get-started-ai-fundamentals/media/anomaly-detection.gif","https://docs.microsoft.com/zh-cn/learn/wwl-data-ai/get-started-ai-fundamentals/media/machine-learn.gif","https://img.weiyigeek.top/2023/1/20230131112201.png","https://img.weiyigeek.top/2023/1/20230131112653.png","https://img.weiyigeek.top/2023/1/20230131113004.png","https://img.weiyigeek.top/2023/1/20230131115140.png","https://img.weiyigeek.top/2023/1/20230131142855.png","https://img.weiyigeek.top/2023/1/20230131145551.png","https://img.weiyigeek.top/2023/1/20230131145742.png","https://img.weiyigeek.top/2023/1/20230131150017.png","https://img.weiyigeek.top/2023/1/20230209151631.png","https://img.weiyigeek.top/2023/1/20230209173827.png","https://img.weiyigeek.top/2023/1/20230209174908.png","https://img.weiyigeek.top/2023/1/20230210111822.png","https://img.weiyigeek.top/2023/1/20230210115957.png","https://img.weiyigeek.top/2023/1/20230210130203.png","https://img.weiyigeek.top/2023/1/20230210130753.png","https://img.weiyigeek.top/2023/1/20230210141105.png","https://img.weiyigeek.top/2023/1/20230210142701.png","https://img.weiyigeek.top/2023/1/20230210143858.png"],"content":"<p>[TOC]</p>\n<h1 id=\"计算机科学导论学习笔记\"><a href=\"#计算机科学导论学习笔记\" class=\"headerlink\" title=\"计算机科学导论学习笔记\"></a>计算机科学导论学习笔记</h1><h1 id=\"第-5-部分-数据安全与人工智能\"><a href=\"#第-5-部分-数据安全与人工智能\" class=\"headerlink\" title=\"第 5 部分 数据安全与人工智能\"></a>第 5 部分 数据安全与人工智能</h1><p>此部分包含第15、16、17和18章，包含了计算机中传输的数据压缩(有损与无损)、网络数据在传输过程中如何保证其数据安全, 讨论计算理论，即哪些是可计算的，哪些是不可计算的，最后介绍当前热门的人工智能(AI)的观点，加深我们对计算机数据处理的的认识，为后续学习扩展基础认识。</p>\n<p>原文地址: <a href=\"https://mp.weixin.qq.com/s/Sa9dVU7JOS5zEddldf22mw\" target=\"_blank\" rel=\"noopener\">https://mp.weixin.qq.com/s/Sa9dVU7JOS5zEddldf22mw</a><br><a id=\"more\"></a></p>\n<h2 id=\"18-人工智能\"><a href=\"#18-人工智能\" class=\"headerlink\" title=\"18.人工智能\"></a>18.人工智能</h2><p>作为最后一章，我们将对人工智能（AI）作简单的介绍，当前人工智能不是即将实现，而是已经实现了，将主要介绍人工智能的简史和定义，以及AI需要了解的基础知识学习，最后介绍两种在人工智能中常用的编程语言。</p>\n<h3 id=\"18-1-简单介绍\"><a href=\"#18-1-简单介绍\" class=\"headerlink\" title=\"18.1 简单介绍\"></a>18.1 简单介绍</h3><h4 id=\"0-人工智能简史\"><a href=\"#0-人工智能简史\" class=\"headerlink\" title=\"(0) 人工智能简史\"></a>(0) 人工智能简史</h4><p>虽然人工智能作为一门独立的学科是相对年轻的，但它还是经历了一段发展的时间，当2400年前希腊哲学家亚里多斯德发明了逻辑推理这个概念时，人工智能就开始了，接着莱布尼茨和牛顿完成了逻辑语言的定稿。</p>\n<p>乔治•布尔在19世纪逐步提出的布尔代数（附录E）奠定计算机电子电路的基础。但是思维计算机的主要思想却来自于<code>阿兰•图灵</code>，他提出了图灵测试, “人工智能”这个术语是<code>John McCarthy</code> （约翰•麦卡思）在1956年首次提出的。</p>\n<p><br/></p>\n<h4 id=\"1-什么是人工智能AI\"><a href=\"#1-什么是人工智能AI\" class=\"headerlink\" title=\"(1) 什么是人工智能AI?\"></a>(1) 什么是人工智能AI?</h4><blockquote>\n<p>答: 人工智能（AI,Artificial Intelligence）是对程序系统的研究，该程序系统在一定程度上能模仿人类的活动，如感知、思考、学习和反应。<br>简而言之，AI 即模仿人类行为和能力创建软件，</p>\n</blockquote>\n<p><br/></p>\n<p><strong>人脑与人工智能对比</strong></p>\n<ul>\n<li>功耗：20W/几十万倍</li>\n<li>鲁棒性：极强 / 弱</li>\n<li>推广性：强 / 弱</li>\n<li>犯大错误概率(原理): 没有 / 有</li>\n<li>学习样本:少量 / 大量</li>\n<li>可理解性(可解释性)：好 / 差</li>\n</ul>\n<p><br/></p>\n<p>当前人工智能技术的五大局限性条件:</p>\n<ul>\n<li>拥有丰富的数据或(和)知识</li>\n<li>完全信息</li>\n<li>确定性</li>\n<li>静态(按确定的规则演化)</li>\n<li>有限领域于单任务</li>\n</ul>\n<p><br/></p>\n<h4 id=\"2-人工智能AI应用场景有那些\"><a href=\"#2-人工智能AI应用场景有那些\" class=\"headerlink\" title=\"(2) 人工智能AI应用场景有那些?\"></a>(2) 人工智能AI应用场景有那些?</h4><p>当下AI应用场景多如以下情况:</p>\n<ul>\n<li>机器学习 - 它通常是 AI 系统的基础，也是我们“教”计算机模型进行预测并根据数据得出结论的方式。</li>\n<li>异常情况检测 - 自动检测系统中的错误或异常活动的能力。</li>\n<li>计算机视觉 - 软件通过相机、视频和图像直观地解释世界的能力。</li>\n<li>自然语言处理 - 计算机理解书面或口头语言并作出相应反应的能力。</li>\n<li>对话式 AI - 软件“代理”参与对话的能力。</li>\n<li>知识挖掘 - 从大量通常非结构化数据中提取信息以创建可搜索的知识存储的功能。</li>\n</ul>\n<p><br/></p>\n<p><strong>异常情况检测应用场景</strong><br>假设你要创建一个软件系统来监视信用卡交易，并检测可能表示欺诈的异常使用模式。</p>\n<p>或者要创建一个应用程序来跟踪自动化生产线中的活动并识别故障。</p>\n<p>或者要创建一个赛车遥测系统，使用传感器在潜在机械故障发生之前主动向工程师发出相关警告。</p>\n<p>可以通过异常情况检测应对这些类型的场景。异常情况检测是一种基于机器学习的技术，可用于分析一段时间内的数据并标识异常更改。</p>\n<p>让我们探讨一下异常情况检测如何在赛车场景中发挥作用, 我们可利用汽车内的传感器收集遥测数据，如发动机转速、刹车温度等。<br>异常情况检测模型经过训练，了解一段时间内遥测度量值的预期波动情况。</p>\n<p>如果度量值在正常预期范围之外，则该模型将报告异常，用于提醒赛车工程师通知车手先进站修理，以免因该问题而被迫退赛。</p>\n<figure class=\"image-box\">\n                <img src=\"https://docs.microsoft.com/zh-cn/learn/wwl-data-ai/get-started-ai-fundamentals/media/anomaly-detection.gif\" alt=\"异常情况检测应用场景\" title=\"\" class=\"\">\n                <p>异常情况检测应用场景</p>\n            </figure>\n<p><br/></p>\n<p><strong>计算机视觉应用场景</strong></p>\n<p>计算机视觉是 AI 的一个领域，它负责处理视觉对象，让我们了解一下计算机视觉带来的一些可能性。</p>\n<p>例如，Seeing AI 应用是一个很好的计算机视觉示例，Seeing AI 应用专门面向盲人和弱视群体，它利用 AI 的力量来打开视觉世界，描述附近的人、文字和物体。</p>\n<p>大多数计算机视觉解决方案都基于机器学习模型，这些模型可应用于来自相机、视频或图像的视觉输入，如下表描述了常见的计算机视觉任务。</p>\n<table>\n<thead>\n<tr>\n<th>任务</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>图像分类 | 带有“出租车”标签的出租车图像，图像分类涉及训练机器学习模型，使其根据图像内容对图像进行分类。 <br/> 例如，你可以在交通监控解决方案中使用图像分类模型，根据图像所包含的车辆类型（例如出租车、公共汽车、骑自行车的人等）对图像进行分类。|<br>物体检测 | 用边界框突出显示公交车、汽车和自行车骑行者的街道图像，对象检测机器学习模型经过训练，可以对图像中的单个对象进行分类，并使用边界框确定其位置。 <br/> 例如，交通监控解决方案可使用对象检测来识别不同类别车辆的位置。|<br>语义分割 | 街道图像，其中已识别出属于公交车、汽车和骑行者的像素，语义分割是一种高级机器学习技术，其中图像中的各个|像素根据其所属的对象进行分类。 <br/> 例如，交通监控解决方案可能会在交通图像上覆盖“蒙版”图层，以使用特定颜色突出显示不同的车辆。<br>图像分析 | 显示遛狗人的街道图像，标题为“街道上的遛狗人”，可以创建结合使用机器学习模型和高级图像分析技术从图像中提取信息的解决方案，包括可以帮助对图像进行归类的“标签”，甚至可以归纳总结图像中所示场景的描述性标题。|<br>人脸检测、分析和识别 | 多个人站在城市街道上的图像，其中突出显示了这些人的人脸人脸检测是对象检测的一种特殊形式，可以在图像中找出人脸。 这可以与分类和面部几何分析技术相结合，用来推断出年龄和情绪状态等细节；甚至根据他们的面部特征来识别个人。|<br>光学字符识别 (OCR) | 突出显示“多伦多道明银行”标志的建筑物图像，光学字符识别是一种用于检测和读取图像中文本的技术。你可以使用 OCR 读取照片中的文字（例如：路标或店面），或从扫描的文档中提取信息，例如字母、发票或表格。 |</p>\n<p><br/></p>\n<p><strong>自然语言处理应用场景</strong></p>\n<p>自然语言处理 (NLP) 是 AI 的一个领域，它负责创建能够理解书面和口头语言的软件。</p>\n<p>NLP 使你能够创建可以执行以下操作的软件：</p>\n<ul>\n<li>分析和解释文档、电子邮件和其他来源中的文本。</li>\n<li>解释口头语言，并合成语音响应。</li>\n<li>将口头或书面短语在各种语言之间进行翻译（不用语言之间的同步翻译）。</li>\n<li>解释命令并确定合适的操作。</li>\n</ul>\n<p>例如，星舰指挥官是一款由 Human Interact 开发的虚拟现实 (VR) 游戏，故事发生在科幻世界中, 该游戏使用自然语言处理让玩家能够控制对白，并与游戏中的人物和星舰系统交互。</p>\n<p>例如，当前流行元宇宙（Metaverse），是人类运用数字技术构建的，由现实世界映射或超越现实世界，可与现实世界交互的虚拟世界 ，具备新型社会体系的数字生活空间。</p>\n<p>如下表描述了自然语言处理常见的任务<br>| 任务 | 功能 |<br>|——|——|<br>文本分析 | 使用此服务可以分析文本文档并提取关键短语，检测实体（例如地点、日期和人物）并评估情绪（文档内容的正面或负面程度如何）。|<br>文本翻译 | 使用此服务可在 60 多种语言之间进行文本翻译。 |<br>语音 | 使用此服务可识别和合成语音，并翻译口语。 |<br>语言理解智能服务 (LUIS)     | 使用此服务可以训练能够理解口头或文本命令的语言模型。 |</p>\n<p><br/></p>\n<p><strong>对话式AI应用场景</strong><br>对话式 AI 这一术语用于描述 AI 代理参与人类对话的解决方案。 </p>\n<p>通常，对话式 AI 解决方案使用机器人来管理与用户的对话, 对话可以通过网站界面、电子邮件、社交媒体平台、消息系统、电话和其他渠道进行。</p>\n<p>机器人可以作为以下 AI 解决方案的基础：</p>\n<ul>\n<li>产品或服务的客户支持。</li>\n<li>餐厅、航空公司、电影院和其他以预约为基础的业务的预订系统。</li>\n<li>卫生保健咨询和自我诊断。</li>\n<li>智能家居和个人数字助理。</li>\n</ul>\n<p>例如，当前最流行强大的ChatGPT(OpenAI)可模拟人类间的相互对话（问答），以及按照使用者的描述生成或者操作某一对象, 如生成图像。</p>\n<p><br/></p>\n<h4 id=\"3-那么人工智能AI如何学习？\"><a href=\"#3-那么人工智能AI如何学习？\" class=\"headerlink\" title=\"(3) 那么人工智能AI如何学习？\"></a>(3) 那么人工智能AI如何学习？</h4><p>当前是从数据中学习, 在当今世界，我们在日常生活中会创建大量数据。 </p>\n<p>从我们发送的短信、电子邮件和社交媒体帖子，到我们用手机拍摄的照片和视频，我们产生了大量信息。 我们的房屋、汽车、城市、公共交通基础设施和工厂中的数百万个传感器也在创建更多数据。</p>\n<p>数据科学家可使用所有这些数据来训练机器学习模型，这些模型可以根据它们在数据中找到的关系进行预测和推断。</p>\n<p>例如，假设一个环境保护组织需要志愿者使用手机应用来对不同种类的野花进行识别和分类，以下动画展示了如何使用机器学习来实现此方案。</p>\n<figure class=\"image-box\">\n                <img src=\"https://docs.microsoft.com/zh-cn/learn/wwl-data-ai/get-started-ai-fundamentals/media/machine-learn.gif\" alt=\"识别分类图\" title=\"\" class=\"\">\n                <p>识别分类图</p>\n            </figure>\n<p><strong>动画流程:</strong></p>\n<ul>\n<li>(1) 一个由植物学家和科学家组成的团队<code>收集</code>有关野花样本的数据。</li>\n<li>(2) 并对样本的物种进行正确<code>标记</code>。</li>\n<li>(3) 使用算法对标记的数据进行处理，该算法可以<code>提取样本特征与标记的物种之间的关系</code>。</li>\n<li>(4) 该算法的结果内嵌在<code>模型</code>中。</li>\n<li>(5) 志愿者发现新样本后，该模型可以正确<code>识别</code>物种标记。</li>\n</ul>\n<p><br/></p>\n<h4 id=\"4-人工智能挑战和风险有那些\"><a href=\"#4-人工智能挑战和风险有那些\" class=\"headerlink\" title=\"(4) 人工智能挑战和风险有那些?\"></a>(4) 人工智能挑战和风险有那些?</h4><p>描述: 人工智能是一种强大的工具，可以极大地造福世界, 但是像任何工具一样, 其有好有坏,必须负责任地使用它。</p>\n<p>AI 应用程序开发人员面临的一些潜在挑战，例如包括但不限于如下表所示：</p>\n<table>\n<thead>\n<tr>\n<th>挑战或风险</th>\n<th>示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>偏差可能会影响结果</td>\n<td>贷款审批模型因训练数据中的偏差而产生性别歧视</td>\n</tr>\n<tr>\n<td>错误可能会造成伤害</td>\n<td>自动驾驶车辆遇到系统故障并引发碰撞</td>\n</tr>\n<tr>\n<td>可以公开数据</td>\n<td>医疗诊断机器人使用敏感患者数据进行训练，这些数据存储不安全</td>\n</tr>\n<tr>\n<td>解决方案可能并不适用于所有人</td>\n<td>家庭自动化助手不为视觉障碍用户提供音频输出</td>\n</tr>\n<tr>\n<td>用户必须信任复杂系统</td>\n<td>基于 AI 的金融服务工具提供投资建议 - 它们基于什么？</td>\n</tr>\n<tr>\n<td>谁对 AI 驱动的决策负责？</td>\n<td>一个无辜的人因为面部识别证据而被判有罪 - 谁该为此负责？</td>\n</tr>\n</tbody>\n</table>\n<p><br></p>\n<p><strong>规避风险</strong></p>\n<p>为了解决上述问题在我们进行 AI 软件的开发时，需要遵循六项原则，旨在确保 AI 应用程序能为棘手的问题提供出色的解决方案，而不产生任何意外的负面影响。</p>\n<ul>\n<li><p>(1) 公平性: AI 系统应该公平对待所有人。 例如，假设你创建了一个机器学习模型来为银行的贷款审批应用程序提供支持。 该模型应在不考虑任何基于性别、种族或其他因素的偏见的情况下，对是否应批准贷款做出预测，这些偏见可能导致特定的申请人群遭受不公平的差别待遇。<br>意味着公平性在 AI 提供的上下文中是一个基本的社会与技术双重挑战，也就是说我们必须有足够多样化的人来开发和部署 AI 系统。</p>\n</li>\n<li><p>(2) 可靠性和安全性 AI 系统应可靠且安全地运行。 例如，大家思考一下基于 AI 的自动驾驶软件系统；或诊断患者症状并推荐处方的机器学习模型这些案例。 这些系统一旦出现不可靠性，就可能会给生命安全带来重大风险。</p>\n<p>基于 AI 的软件应用程序开发必须经过严格的测试和部署管理，以在发布前确保它们能达到预期。</p>\n<p>确保自己开发的系统与我们的设计理念一致，并且符合我们的价值观和原则。系统和模型不会为世界带来损害。<br>考虑安全性时，我们首先想到的例子时自动驾驶汽车，但绝不限于这些物理系统、物理代理。</p>\n</li>\n<li><p>(3) 隐私和安全<br>AI 系统应该保护并尊重隐私。 AI 系统所基于的机器学习模型依赖于大量数据，这些数据可能包含必须保密的个人详细信息。 即使对模型进行了训练且系统已投入生产，它仍可能在使用新数据进行预测或采取行动时侵犯隐私或安全。</p>\n<p>与日俱增的依赖性和数据对保持系统安全提出了新要求。</p>\n<p>当考虑这些人工智能系统的安全性时，你需要考虑数据从何而来、是如何到来的，如果是用户提交的数据，或是预测中使用的公共数据源，你如何防止数据被破坏，并配备异常检测或其他用于检测数据变化的系统，这些变化可能表明有对手试图影响系统结果。</p>\n</li>\n<li><p>(4) 包容性<br>AI 系统应该成为人们的有力助手，并与人互动。 AI 应不分身体能力、性别、性取向、种族或其他因素，造福社会各个阶层。</p>\n</li>\n</ul>\n<ul>\n<li><p>(5) 透明度<br>AI 系统应该是可理解的。 应让用户能充分了解系统的用途、工作方式以及局限性。</p>\n<p>透明度具有两面性；一方面，透明度意味着创建人工智能系统的人应该对他们使用人工智能的方式和原因持开放态度，同时也要对他们系统的局限性持开放态度。<br>另一方面，透明度意味着人们应能够理解人工智能系统的行为，这就是人们常说的可解释性或可理解性。</p>\n</li>\n<li><p>(6) 问责<br>应有相关人员对 AI 系统负责。 设计和开发基于 AI 的解决方案的人员应在管理和组织原则的框架内工作，以确保解决方案符合定义明确的道德和法律标准。</p>\n</li>\n</ul>\n<p>总结: 所以，在将我们的面部识别原则用于整个公司都可以遵循的实践和过程时，我们必须要做的是设定大概的原则（例如对于公平性的承诺），并思考如何让开发团队秉持这些原则来审视开发生命周期的每个阶段。</p>\n<p><strong>参考文章</strong></p>\n<ul>\n<li>Microsoft Azure AI 基础知识(人工智能入门) : <a href=\"https://learn.microsoft.com/zh-cn/training/paths/get-started-with-artificial-intelligence-on-azure/\" target=\"_blank\" rel=\"noopener\">https://learn.microsoft.com/zh-cn/training/paths/get-started-with-artificial-intelligence-on-azure/</a></li>\n</ul>\n<p><br/></p>\n<h3 id=\"18-2-基础知识\"><a href=\"#18-2-基础知识\" class=\"headerlink\" title=\"18.2 基础知识\"></a>18.2 基础知识</h3><h4 id=\"1-图灵测试\"><a href=\"#1-图灵测试\" class=\"headerlink\" title=\"(1) 图灵测试\"></a>(1) 图灵测试</h4><p>在1950年，阿兰•图灵提出了图灵测试, 该测试提出了机器具有智能的一个定义，测试的方式是简单地比较人类的智能行为和计算机的智能行为。</p>\n<p>即一个询问者对计算机和人类都提出一组问题，然后询问者得到两组答案，但他不知道哪一组是来自人类，哪一组来自计算机。</p>\n<p>在仔细检查两组答案后，如果询问者不能肯定地说出哪一组来自人类，哪一组来自计算机（计算机模拟人类回答），那么，计算机就通过了具有智能行为的图灵测试。</p>\n<p><br/></p>\n<h4 id=\"2-智能体\"><a href=\"#2-智能体\" class=\"headerlink\" title=\"(2) 智能体\"></a>(2) 智能体</h4><p><strong>什么是智能体?</strong></p>\n<blockquote>\n<p>智能体是一个能智能地感知环境、从环境中学习并与环境进行交互的系统。</p>\n</blockquote>\n<p>智能体可以分成两大类：软件智能体和物理智能体。</p>\n<p><strong>1) 软件智能体</strong></p>\n<blockquote>\n<p>软件智能体是一组用来完成特殊任务的程序。<br>例如，有些智能系统能用来整理电子邮件（e-mail）,能检査收到的邮件的内容，然后把它们归到不同的类别中（垃圾、不重要、重要、非常重要等）, 另外一个软件智能体的例子是搜索引擎，它搜索万维网，发现能提供与查询主题相关信息的网址。</p>\n</blockquote>\n<p><strong>2) 物理智能体</strong></p>\n<blockquote>\n<p>物理智能体（机器人）是一个用来完成各项任务的可编程系统。简单的机器人可以用在制造行业，从事一些日常的工作，如装配、焊接或油漆。有些组织使用移动机器人去做一些日常的分发工作，如分发邮件或明信片到不同的房间, 移动机器人可以在水下探测石油。<br>人型机器人是一种自治的移动机器人，它模仿人类的行为。虽然人型机器人只在科幻小说中流行，但是要使这种机器人能合理地与周围环境交互并从环境里发生的事件中学习，这里面还有很多工作要做，在当前正在如火如荼的进行着，坚信通过不断的发展一定会成功的。</p>\n</blockquote>\n<p><br/></p>\n<h4 id=\"3-编程语言\"><a href=\"#3-编程语言\" class=\"headerlink\" title=\"(3) 编程语言\"></a>(3) 编程语言</h4><p>描述: 虽然有些通用语言（如C、C++和Java、Python）能用来编写智能软件，但有两种语言是特别为人工智能设计的，它们是 LISP 和 PROLOG 语言</p>\n<p><br/></p>\n<p><strong>1) LISP</strong><br>LISP （LISt Programming）是约翰•麦卡思在1958年发明的，顾名思义，LISP是一种操纵表的编程语言。LISP把数据和程序都当成表，这就意味着LISP程序能改变它自身。这个特性与智能体的理念相吻合，智能体能从环境中学习并改善自身行为。<br>但是，LISP的一个缺点是它的行动迟缓。如果要处理的表比较长，LISP就变得很慢。另一个缺点是它的语法复杂。</p>\n<p><strong>2) PROLOG</strong><br>PROLOG （PROgraming in LOGic）是一种能建立事实数据库和规则知识库的编程语言。使用PROLOG编程能使用逻辑推理来回答那些可或从知识库中推导出来的问题。但是，PROLOG不是一种效率很高的编程语言，有些复杂问题使用其他语言（如C、C++或Java） 来解决时，效率更高。</p>\n<p><br/></p>\n<p><strong>3) Python</strong></p>\n<p>此处不得不提到Python编程语言，Python是人工智能中使用最广泛的编程语言之一，因为它简单易用，而且可以与数据结构和其他常用的AI算法无缝地使用。</p>\n<p>Python是适用AI项目的原因是许多基于Python的有用库可以在AI中使用，比如Numpy提供科学计算能力，Scypy提供高级计算，Pybrain提供机器学习。</p>\n<p><strong>4) Java</strong><br>Java也是AI项目的好选择。它是一种面向对象的编程语言，专注于提供AI项目所需的所有高级特性，是可移植的，并提供内置的垃圾收集。</p>\n<p>Java社区也是一个优势，丰富的社区生态系统可以帮助开发人员随时随地查询和解决问题。</p>\n<p>对于AI项目来说，算法是灵魂，无论是搜索算法、自然语言处理算法还是神经网络，Java都可以提供简单的编码算法。此外，Java可扩展性也是AI项目的一个基本特征。</p>\n<p><strong>5) C++</strong><br>C++是世界上速度比较快的编程语言，其在硬件层面上的交流能力使开发人员能够改进程序执行时间。对于时间很敏感，这对于AI项目是非常有用的，例如，搜索引擎可以广泛使用C++。</p>\n<p>在AI项目中，C++可以用于统计，比如神经网络。此外，该算法可以在C++被广泛地快速执行，游戏AI主要使用C++代码，以便更快地执行和响应时间。</p>\n<p><br></p>\n<h3 id=\"18-3-知识表示\"><a href=\"#18-3-知识表示\" class=\"headerlink\" title=\"18.3 知识表示\"></a>18.3 知识表示</h3><p>当下阶段常常使用人工智能体来解决现实世界中的一些问题，此时就需要他能够进行知识的表达，当知识<code>被表示成数据结构后就能被存储在计算机中的程序操纵</code>, 此小节中我们描述4种常见的知识表示方法<code>语义网、框架、谓词逻辑和基于规则的系统</code>。</p>\n<h4 id=\"1-语义网\"><a href=\"#1-语义网\" class=\"headerlink\" title=\"(1) 语义网\"></a>(1) 语义网</h4><p>语义网是Richard H.Richens在20世纪60年代提出的, 其使用<code>有向图</code>表示知识。</p>\n<p>正如在第12章讨论的，有向图由顶点（nodes）和边（arcs）构成, 语义网用顶点代表概念, 用边（用箭头表示）表示两个概念间的关系。</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2023/1/20230131112201.png\" alt=\"WeiyiGeek.简单的语义网图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.简单的语义网图</p>\n            </figure>\n<p><strong>1) 概念</strong><br>描述: 为了给概念一个准确的定义，专家们把概念的定义与集合理论联系起来。因此，概念被看成一个集合或一个子集。</p>\n<p>例如，“动物”是所有动物的集合，“马”是所有马的集合，也是“动物”的子集。对象是集合中的成员（实例），概念用顶点表示, 是不是与我们在学习对象编程语言中的类class相似。</p>\n<p><strong>2) 关系</strong></p>\n<p>描述: 我们使用关系（用边）, 表示一条边可以定义一个“子类”关系一条边从子类指向超类，一条边可以定义一个“实例”关系一条边从实例指向它所属的集合，一条边也可以定 义一个对象的属性（颜色、大小……）。</p>\n<p>最后，一条边可以定义一个对象的所有权，例如拥有另外一个对象，语义网能很好定义的最重要的关系是“继承”，继承关系定义明了这样一个事实: 一个类的所有属性将出现在继承的类中。</p>\n<p>这可以用来从用图表示的知识中推导出新的知识。</p>\n<p><br/></p>\n<h4 id=\"2-框架\"><a href=\"#2-框架\" class=\"headerlink\" title=\"(2) 框架\"></a>(2) 框架</h4><p>框架与语义网是紧密相关的，在语义网中，<code>图用来表示知识</code>；在框架中，<code>数据结构（记录）用来表示相同的知识</code>。</p>\n<p>与语义网相比，框架的一个优点是程序更容易处理框架，而不是语义网。</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2023/1/20230131112653.png\" alt=\"WeiyiGeek.框架表示语义图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.框架表示语义图</p>\n            </figure>\n<p><strong>1) 对象</strong><br>语义网中的一个节点变成了一组框架中的一个对象，所以一个对象可以定义一个类、一个子类或类的一个实例。例如上图中，爬行动物、哺乳动物、狗、Roxy 和 Ringo 都是对象。</p>\n<p><strong>2) 槽</strong><br>语义网中的边被翻译成“槽”（数据结构中的域）, 槽的名字定义了关系的类型和构成关系的槽的值。例如上图中，动物是爬行动物对象的一个槽。</p>\n<p><br/></p>\n<h4 id=\"3-谓词逻辑\"><a href=\"#3-谓词逻辑\" class=\"headerlink\" title=\"(3) 谓词逻辑\"></a>(3) 谓词逻辑</h4><p>通常的知识表示是谓词逻辑, 谓词逻辑可以用来表示复杂的事实。</p>\n<p>由于有了悠久历史的理论逻辑的支持，谓词逻辑成为一门良好定义的语言，此节我们先介绍简单一些的语言——命题逻辑，然后再介绍谓词逻辑。</p>\n<p><strong>1) 命题逻辑</strong></p>\n<p>命题逻辑是由对世界进行逻辑推理的一组句子组成的一种语言。</p>\n<ul>\n<li><strong>运算符</strong>: 命题逻辑使用5种运算符，如下所示：<blockquote>\n<p>第一个运算符是一元运算符（运算符带一个句子），其他4个都是二元运算符（运算符带两个句子）, 每个句子的逻辑值（真或假）取决于原子句子的逻辑值，原子句子是不带运算符的构成复杂句子的特殊句子。图18-3显示了命题逻辑中每个运算符的真值表。</p>\n</blockquote>\n</li>\n</ul>\n<p><img src=\"https://img.weiyigeek.top/2023/1/20230131113004.png\" alt=\"WeiyiGeek.命题逻辑运算符图\"></p>\n<ul>\n<li><strong>句子</strong>: 在此种语言中的句子递归定义，如下所示:<blockquote>\n<p>1) 大写字母（如A、B、S或T）表示在自然语言中的一个语句，它们是一个句子。<br>2) 两个常数值（真和假）中的任意一个都是句子。<br>3) 如果P是句子，则<code>非P</code>也是句子。<br>4）如果P和Q是句子，则 P V Q， P ^ Q, P -&gt; Q 和 P <-> Q 都是句子。</p>\n</blockquote>\n</li>\n</ul>\n<p>例如, 以下的是命题语言中的句子：<br>a. 今天是星期天（S）<br>b. 天在下雨（R）<br>c. 今天是星期天或者是星期一（S V M）<br>d. 天没下雨 （<code>非R</code>）<br>e. 如果狗是哺乳动物，那么猫也是哺乳动物（D→C）</p>\n<ul>\n<li><strong>推演</strong>: 在命题逻辑中需要从已知的事实中推导出新的事实此过程称为<code>推演</code>，给定两个假定为真的句子，我们能推演出新的为真的句子，前面两个句子称为前提，推演出的句子称为结论，而整个称为论断。</li>\n</ul>\n<blockquote>\n<p>前提1：    他或者在家或者在办公室<br>前提2：    他不在家<br>结论    所以，他在办公室<br>如果我们用H代表 “他在家”，O代表 “他在办公室”，符号I-代表“所以”，那上面的论断可以表示成 <code>{H V O , 非 H}| - O</code>。</p>\n</blockquote>\n<p>我们是如何证明推演的论断是合法的，一个合法的论断是指它的结论是前提的必然延续。换言之，在一个合法的推演论断中，如果所有的前提都为真，而结论为假，这是不可能的。</p>\n<p>验证论断合法性的一种方法是为前提和结论建立真值表，如果我们在其中发现了反例，那么结论就是非法的，反例就像所有的前提都为真，而结论却是假。</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2023/1/20230131115140.png\" alt=\"WeiyiGeek.推演图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.推演图</p>\n            </figure>\n<p>所以当找不到反例时，论断就是合法的。</p>\n<p><br/></p>\n<p><strong>2) 谓词逻辑</strong></p>\n<p>在命题逻辑中，表示句子的符号是原子的，我们不能分割开它而发现各个组成部分中所含的信息。</p>\n<p>例如，如下这样的句子：<code>P1：&quot;琳达是玛丽的母亲”    P2： “玛丽是安妮的母亲”</code> , 我们可以用很多方法来组合这两个句子从而产生其他的句子, 但却不能抽取出琳达和安妮间的任何关系。</p>\n<p>例如，我们不能从上面两个句子中推导出琳达是安妮的祖母, 若要进行这样的推导，我们就需要使用带谓词逻辑，这种逻辑定义了命题各部分间的关系。</p>\n<p>在谓词逻辑中，句子被分成谓词和参数。例如，如下的句子被写成了谓词带两个参数的形式：</p>\n<blockquote>\n<p>P1： “琳达 是 玛丽 的母亲” 变成 母亲（琳达，玛丽）<br>P2： “玛丽 是 安妮 的母亲” 变成 母亲（玛丽，安妮）</p>\n</blockquote>\n<p>上面句子中的母亲关系是由谓词“母亲”来定义的，如果在两个句子中的玛丽是指同一 个人，我们可以推导出琳达和安妮间的新的关系：祖母（琳达，安妮）, 这就是谓词逻辑要实现的目的。</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2023/1/20230131142855.png\" alt=\"WeiyiGeek.谓词逻辑之句子、量词、推演图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.谓词逻辑之句子、量词、推演图</p>\n            </figure>\n<p><br/></p>\n<p><strong>3) 超谓词逻辑</strong></p>\n<p>由于逻辑推理的需要，逻辑得到了进一步的发展，这些包括高阶逻辑、默认逻辑、模态逻辑和时态逻辑，此处只是简单地罗列一下这些名词。</p>\n<p>1) 高阶逻辑: 扩展了谓词逻辑中量词 ∀（所有的）和 彐 (存在) 的范围, 这些谓词逻辑中的量词把变量x和y绑定到实例(在初始化时), 在高阶逻辑中我们能使用量词捆绑那些代表属性和关系的变量，这样在初始化的过程中，这些变量被换成了谓词。</p>\n<blockquote>\n<p>例如，我们可以有 ∀ P(Pj v Ps), 下标 j 和 a 表示 John 和 Anne, 意味着 John 和 Anne 具有完全相同的属性。</p>\n</blockquote>\n<p>2) 模态逻辑: 逻辑的一个快速发展的趋势是模态逻辑, 逻辑中包含了“could”“should”、“may”might”“ought”等这样的表达式，来表达句子中语法上的语气。在这样的逻辑中，我们有符号表示“it is possible that”这样的运算符。</p>\n<p>3) 时态逻辑：像模态逻辑一样，用一套时态运算符扩展了谓词逻辑，如“from now on”或者“at some point in time”，它们包含了论断合法性中的时间因素。</p>\n<p>4) 默认逻辑: 我们假定论断的默认结论可以被接收，只要论断与知识库中的内容相一致即可。例如，我们假定所有的鸟都会飞，除非知识库中有内容废除了这条通用的事实。</p>\n<p><br/></p>\n<h4 id=\"4-基于规则的系统\"><a href=\"#4-基于规则的系统\" class=\"headerlink\" title=\"(4) 基于规则的系统\"></a>(4) 基于规则的系统</h4><p>描述: 基于规则的系统使用一组规则来表示知识，这些规则能用来从已知的事实中推导出新的事实。</p>\n<p>规则表示当指定条件满足时什么为真，基于规则的数据库是一组<code>if……then……</code>语句，它们的形式为：<code>if A then B 或 A → B</code>, 其中A称为前提,B为结论。</p>\n<p>注意在基于规则的系统中，每条规则都是独立处理的，与其他规则没有关联。</p>\n<p><strong>1) 组成</strong><br>描述: 一个基于规则的系统由三部分构成<code>解释器（或推理机）、知识库和事实库</code>, 其关系如下所示:</p>\n<ul>\n<li>知识库: 基于规则系统中的知识库部分就是规则的数据库（仓库）。它包含一组预先建立的规则，这些规则能从给定事实中得出结论。</li>\n<li>事实库: 包含了知识库中的规则要使用的一组条件。</li>\n<li>解释器:（推理机）是一个处理器或控制器（如一段程序），它把规则和事实组合在一起,解释器有两种类型<code>正向推理</code>和<code>反向推理</code>。</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2023/1/20230131145551.png\" alt=\"WeiyiGeek.基于规则的系统三部分组成图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.基于规则的系统三部分组成图</p>\n            </figure>\n<p><br/></p>\n<p><strong>2) 正向推理</strong></p>\n<p>正向推理是这样一个过程，解释器使用一组规则和一组事实来执行一个行动，此行动可能是向事实库中增加一条新的事实，或处理其他一些命令，如开启另一个程序或机器，解释器解释和执行规则，直到不再有要解释的规则。</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2023/1/20230131145742.png\" alt=\"WeiyiGeek.正向推理的流程图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.正向推理的流程图</p>\n            </figure>\n<p>如果系统中有任何冲突发生，冲突是指有两条不同的规则可以应用到一个事实上，或一条规则可以应用到两个事实上，这时系统就要调用冲突处理过程来解决这个问题，这就保证了只有一个输出能被加到事实库中或一个行动被采取</p>\n<p><br/></p>\n<p><strong>3) 反向推理</strong></p>\n<p>如果系统是证明一个结论，那么正向推理效率不高，面对给出的结论，所有的规则检査所有的事实。这种情况下如果使用反向推理，效率会高些。</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2023/1/20230131150017.png\" alt=\"WeiyiGeek.反向推理的流程图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.反向推理的流程图</p>\n            </figure>\n<p>过程从一个结论（目标）开始，如果目标已在事实库中，则过程停止，结论得到验证，如果结论不在事实库中，那么系统査找目标在规则结论中的规则。</p>\n<p>但是，反向推理不是触发这条规则，而是去验证这条规则中的每个事实（递归）。如果这条规则中的所有事实都在事实库中，那么原来的目标就得到验证。</p>\n<p><br/></p>\n<h3 id=\"18-4-专家系统\"><a href=\"#18-4-专家系统\" class=\"headerlink\" title=\"18.4 专家系统\"></a>18.4 专家系统</h3><p>专家系统使用前面所讨论的知识表示语言，来执行通常需要人类专家才能完成的任务。它们被用在需要人类专家，而人类专家却缺少、昂贵或不可用等场合。</p>\n<p>例如，在医疗领域，可建立专家系统从一组症状中得到可能病因的子集，而这项任务通常是由医生来进行的。</p>\n<h4 id=\"1-知识抽取\"><a href=\"#1-知识抽取\" class=\"headerlink\" title=\"(1) 知识抽取\"></a>(1) 知识抽取</h4><p>描述: 一个专家系统是建立在预先定义的关于领域专家经验的知识的基础上的, 因此建立专家系统的第一步就是从人类专家身上抽取知识, 抽取的知识就变成了我们前面讲到的知识库。</p>\n<p>从专家身上抽取知识通常是困难的，这有几个原因：</p>\n<ul>\n<li>1）专家拥有的知识通常是启发式的，它们是基于概率的，而不是确定的。</li>\n<li>2）专家常常发现用可以存放在知识库中的规则形式来描述知识是艰难的。<blockquote>\n<p>例如，要一步一步地显示故障电动机是如何被诊断的，这对电气工程师来说是非常艰难的, 知识常常是直觉的。</p>\n</blockquote>\n</li>\n<li>3）知识获取只能通过与专家个人会面才能进行, 如果会面者对这种会面并不擅长，那么会面将是累人的和枯燥的。</li>\n</ul>\n<p>所以说，知识抽取过程通常是由知识工程师来完成, 他可能并不是此领域的专家，但他有经验，知道如何去会面，如何去解释答案，所有这些工程师能用来建立知识库。</p>\n<p><br/></p>\n<h4 id=\"2-事实抽取\"><a href=\"#2-事实抽取\" class=\"headerlink\" title=\"(2) 事实抽取\"></a>(2) 事实抽取</h4><p>为了能推导新的事实或采取动作，除了需要用知识表示语言表示的知识库外，还需要事实库, 专家系统中的事实库是基于事例的，在事例中事实被收集或度量，然后进入系统，被推理机使用。</p>\n<p><br/></p>\n<h4 id=\"3-体系结构\"><a href=\"#3-体系结构\" class=\"headerlink\" title=\"(3) 体系结构\"></a>(3) 体系结构</h4><p>下图显示了一个专家系统体系结构背后的通常理念，该专家系统有7个部分构成：<code>用户、用户界面、推理机、知识库、事实库、解释系统和知识库编辑器</code>, 图中阴影的方框中通常它们被称为专家系统外壳。</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2023/1/20230209151631.png\" alt=\"WeiyiGeek.专家系统体系结构图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.专家系统体系结构图</p>\n            </figure>\n<p>其中<code>推理机</code>是专家系统的心脏，它与<code>知识库、事实库和用户界面</code>进行通信, 专家系统中7个部分中的4个<code>（用户界面、推理机、解释系统和知识库编辑器）</code>是能一次建造，为多个应用使用的，因为它们并不依赖于特殊的知识库或事实库。</p>\n<ul>\n<li>用户: 使用系统，从所提供的专家经验中获益的实体。</li>\n<li>用户界面: 允许用户与系统交互，用户界面能接收用户的自然语言，然后把它们翻译给系统。大多数用户界面提供用户友好的菜单系统。</li>\n<li>推理机: 专家系统的心脏，它使用知识库和事实库推导出要釆取的动作。 </li>\n<li>知识库: 是基于与相关领域专家的会面而得到的知识的集合。</li>\n<li>事实库: 在专家系统中是基于事例的。对于每个事例，用户输入可用的或度量的数据进入事实库，推理机为这特殊的事例使用这些数据。</li>\n<li>解释系统: 并不是所有的专家系统都有解释系统，它用来解释推理机得出的结论的合理性。</li>\n<li>知识编辑器: 并不是所有的专家系统都有知识编辑器，当从领域专家那里获得新的经验时，用知识库编辑器来更新知识库。</li>\n</ul>\n<p><br/></p>\n<h3 id=\"18-5-感知系统\"><a href=\"#18-5-感知系统\" class=\"headerlink\" title=\"18.5 感知系统\"></a>18.5 感知系统</h3><p>人工智能的一个目标是创建一台行为像专家的机器(<code>专家系统</code>), 另外一个目标是创建一台行为像普通人的机器。</p>\n<p>通过模拟人类感知（视觉、听觉、触觉、 嗅觉、味觉）进行执行对应操作，例如人类通过眼睛看风景，头脑把它解释成在风景中抽取出来的对象类型。人类通过耳朵听到一组声音信号，头脑把它解释成有意思的句子等等。</p>\n<p>如果一个智能体要表现得像人类，那它就应该有感知能力，当前人工智能已经初步完成两种感知<code>视觉和听觉</code>，并广泛应用在社会的各个层面，所以此处将主要讨论两种感知。</p>\n<h4 id=\"1-图像处理\"><a href=\"#1-图像处理\" class=\"headerlink\" title=\"(1) 图像处理\"></a>(1) 图像处理</h4><p>图像处理或计算机视觉是人工智能的一个研究领域，它处理通过像摄像机这样的智能体的人工眼睛而获得的对对象的感知，一个图像传感器从外部世界获得二维图像，然后创建在场景中的这个对象的三维描述。</p>\n<p>虽然，这对人类来说是容易的事情，但对智能体来说却是困难的事情，图像处理器的输入是一幅或多幅场景图像，而得到的输岀是场景中对象的描述（<code>抽取出对象的特征</code>）。</p>\n<p><strong>1.边缘探测</strong></p>\n<p>图像处理的第一步是边缘探测，去査找图像中的边缘在哪里，边缘定义了图像中的对象和背景间的边界。</p>\n<p>例如，下图显示了一个非常简单的图像和用0〜9表示的像素点的亮度值，此处0表示黑，9表示白，<code>使用亮度较大的差异值去査找邻接像素点，就能找到边缘</code>(重点)。</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2023/1/20230209173827.png\" alt=\"WeiyiGeek.图像处理器与边缘探测处理图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.图像处理器与边缘探测处理图</p>\n            </figure>\n<p><strong>2.分段</strong><br>分段把图像分成同构的段或区域，同构的定义随着方法的不同而不同，但是，通常同构的区域是其中像素点亮度值变化平滑的区域。</p>\n<p>分段与边缘探测非常类似（区别）</p>\n<ul>\n<li>在边缘探测中，对象的边缘和背景被找到。</li>\n<li>在分段中，对象中两个不同区域的边界被找到，经过分段后，对象被分成不同的区域。</li>\n</ul>\n<p>有几种方法进行分段，例如<code>阈值化</code>和<code>分割</code>与<code>合并</code>。</p>\n<ul>\n<li>阈值化: 它把指定亮度值的像素点选择出来，试图去发现所有具有相同或非常相近亮度值的像素点，通过这种方法找到的像素点形成了一个段。</li>\n<li>分割: 选取一个非同构的区域，把它分成同构的区域。</li>\n<li>合并: 它用来进行具有相同亮度值区域的合并。</li>\n</ul>\n<p><br/></p>\n<p><strong>3.査找深度</strong></p>\n<p>图像分析接下来的一步是查找对象的深度或是图像中的对象, 深度的查找可以<code>帮助智能体去测量对象距它多远</code>， 有两种常用的方法<code>立体视觉</code>和<code>运动</code>。</p>\n<ul>\n<li>立体视觉，(有时称为立体影像)使用人类眼睛的技术来发现对象的深度，识别对象距离的一种工具就是两只眼睛或两台摄像机，两台摄像机创建的图像能帮助智能体去判定对象是近还是远。</li>\n<li>运动，当图中一个或多个对象移动时建立多幅图像，在场景中移动对象与其他对象间的相对位置能给出对象距离的提示。</li>\n</ul>\n<p><br/></p>\n<p><strong>4.查找方向</strong></p>\n<p>场景中的对象的方向可以使用两种技术来发现<code>光照和纹理</code>。</p>\n<ul>\n<li><p>光照: 光从物体表面反射的总量由多个因素来决定</p>\n<blockquote>\n<p>如何一个对象的不同表面的光学特性是相同的，那么反射光线的总量将取决于反射光源的物体表面(它的相对位置)的方向。(如下图所示)</p>\n</blockquote>\n</li>\n<li><p>纹理: (有规律重复的图案)也能对査找方向或表面的曲率有所帮助, 如果智能体能识别图案，这将帮助它査找对象的方向或曲率。</p>\n</li>\n</ul>\n<p><br/></p>\n<p><strong>5.对象识别</strong><br>图像处理的最后一步是对象识别，智能体需要在它的记忆里有可进行比较的对象模型，但是，把所见的每个对象模型都进行创建和存储是一个不可能的任务。</p>\n<p>一个解决方案是假定要识别的对象是一个复合的对象，它由一组简单的几何形状体组成，此时原始的形状能在智能体的记忆中创建并存储，我们需要智能体识别的对象类型能用这些对象的组合创建出来并保存起来。</p>\n<p>当智能体“看”到对象，它就进行对象的分解，把对象分解成原始形状的组合，如果组合的对象对智能体来说是已知的，那对象就被识别了。（如下图所示）</p>\n<p><img src=\"https://img.weiyigeek.top/2023/1/20230209174908.png\" alt=\"WeiyiGeek.查找方向与对象识别图\"></p>\n<p><br/></p>\n<p><strong>6.应用场景</strong></p>\n<p>图像处理的一个应用领域是制造业，特别是在组装生产线上（工业控制），一个具有图像处理能力的机器人能用来测定组装生产线上的对象的位置。</p>\n<p>在这样的环境下，需要感知的对象数目是有限的，所以图像处理就变得非常有帮助。</p>\n<p><br/></p>\n<h4 id=\"2-语言理解\"><a href=\"#2-语言理解\" class=\"headerlink\" title=\"(2) 语言理解\"></a>(2) 语言理解</h4><p>描述: 人类一个固有的能力是能理解（即解释）所感知的声音信号，一台能理解自然语言的机器在日常生活中是非常有用的。</p>\n<p>例如，当前流行的智能AI语音接听单行，它能替代电话操作员（在大部分时间里），它还可以用在系统需要预先定义格式査询的场合，即送到数据库的查询必须遵循指定系统所用的格式。</p>\n<p>机器理解自然语言的任务分成4个连续的步骤：<code>语音识别</code>、<code>语法分析</code>、<code>语义分析</code>和<code>语用分析</code>。</p>\n<h5 id=\"1-语音识别\"><a href=\"#1-语音识别\" class=\"headerlink\" title=\"1.语音识别\"></a>1.语音识别</h5><p>在这一步中语音信号被分析，其中所含的单词序列被抽取出来。</p>\n<p>语音识别子系统的输入是连续（模拟）的信号，输出是单词的序列，信号需要被分割成不同的声音，有时称为<code>“音素”</code>，而声音还需要组合到单词中。</p>\n<h5 id=\"2-语法分析\"><a href=\"#2-语法分析\" class=\"headerlink\" title=\"2.语法分析\"></a>2.语法分析</h5><p>语法分析这一步用来定义单词在句子中是如何组织的, 这对于像英语这样的语言是非常困难的任务, 因为单词在句子的作用并不是由它在句中的位置决定的。</p>\n<p>例如，下面两个句子 <code>Mary rewarded John.</code> 与 <code>John was rewarded by Mary.</code> 此两个句子中John都是受到奖励的，但在第一个句子中，John 在最后的位置，而 Mary 在第一个位置，此处机器需要进行语法分析解释，得到相同的结论。</p>\n<p><strong>文法:</strong> 正确分析句子的第一工具是良好定义的文法。</p>\n<blockquote>\n<p>一种像英语这样的完全成熟的语言具有非常大的文法规则集合, 语言的文法定义可以使用多种方法, 我们可使用BNF （Backus-Naur范式）的一个简单的版本，Backus-Naur范式被用在计算机科学中，定义编程语言的语法。</p>\n<ul>\n<li>第一条规则定义了一个句子是一个名词短语跟着一个动词短语</li>\n<li>第二条规则定义了名词短语有三个选择：单个名词、一个冠词跟一个名词，或者一个冠词跟一个形容词再跟一个名词。</li>\n<li>第四条规则明确地定义了什么是一个名词, 在我们这个简单的语言里只定义了7个名词，而在像英语这样的语言里名词表是在词典中定义的。</li>\n<li>第六条规则定义了形容词一个非常小的集合。</li>\n<li>第七条规则定义了动词一个非常小的集合。</li>\n</ul>\n</blockquote>\n<p>虽然我们的语言的语法非常原始，但我们能从中产生许多句子，例如，我们有:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">John comes home.  约翰回家了。</span><br><span class=\"line\">Mary drinks water. </span><br><span class=\"line\">John has a white dog. 约翰有一只白色的狗。</span><br><span class=\"line\">John loves Mary. </span><br><span class=\"line\">Mary loves John.</span><br></pre></td></tr></table></figure></p>\n<p><strong>词法</strong>: 下图中定义了简单文法，即使使用不同的选项，它也将是非常清楚的，判定一个句子是否符合文法（语法）的机器在判定一个句子是否合法之前，并不需要检查所有可能的选项，此操作由<code>词法分析器</code>完成。</p>\n<blockquote>\n<p>词法分析器基于文法规则建立一棵词法分析树来判断一个句子的合法性。<br>例如，下图中显示了句子”John has a white dog”对应的词法分析树。</p>\n</blockquote>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2023/1/20230210111822.png\" alt=\"WeiyiGeek.分析一个句子图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.分析一个句子图</p>\n            </figure>\n<h5 id=\"3-语义分析\"><a href=\"#3-语义分析\" class=\"headerlink\" title=\"3.语义分析\"></a>3.语义分析</h5><p>义分析就是在句子被语法分析之后抽取出句子的意思。这种分析建立了句子中所涉及的对象的表示方法、它们的关系以及它们的属性。分析能用我们前面所讨论的任一种知识表示模式。</p>\n<blockquote>\n<p>例如，句子<code>John has a dog</code>可以用谓词逻辑表示成：<code>∃(存在)x dog(x) has(John,x)</code></p>\n</blockquote>\n<h5 id=\"4-语用分析\"><a href=\"#4-语用分析\" class=\"headerlink\" title=\"4.语用分析\"></a>4.语用分析</h5><p>前面的三个步骤<code>(语音识别、语法分析和语义分析)</code>能创建口语句子的知识表示, 此<code>语用分析</code>是用来进一步明确句子的意图和消除歧义。</p>\n<p><strong>意图</strong>: 英语句子有许多种不同的意图，如告诉、请求、答应、询问等, 语用分析就是用来发现句子的这些意图的。</p>\n<blockquote>\n<p>例如，句子“Can you swim a mile?”问 的是听者的能力，而句子“Can you pass the salt?”(你能把盐递给我吗？)却只是一句礼貌的请求。</p>\n</blockquote>\n<p><strong>消除歧义</strong>: 有时句子在语义分析之后是有歧义的, 歧义的出现有不同的情况, 一个单词有多于一种的功能，如单词“hard”既能作形容词又能作副词,一个单词有多于一种的意思。</p>\n<blockquote>\n<p>例如，如单词“ball”在“football”和“ballroom”中是不同的含义，两个单词有着相同的发音，却有着不同的拼写和含义，一个句子在语法上可能是正确的，但在含义上却是没有道理的。<br>如，句子 <code>John ate the mountain</code> （<code>约翰吃了这座山</code>）语法分析时是合法的，语义分析时也是正确的，但含义却是毫无道理的</p>\n</blockquote>\n<p><br/></p>\n<h3 id=\"18-6-搜索技术\"><a href=\"#18-6-搜索技术\" class=\"headerlink\" title=\"18.6 搜索技术\"></a>18.6 搜索技术</h3><p>AI人工智能解决问题的一种技术是搜索，搜索可以描述成用状态(情形)集合求解问题。<br>搜索过程开始于一个<code>起始状态，经过中间状态，最后到达目标状态</code>, 搜索过程所使用的全部状态的集合称为<code>搜索空间</code>。</p>\n<blockquote>\n<p>例如，在难题求解中，初始状态就是未解决的难题，中间状态就是对难题釆取的每一个步骤，目标状态就是难题被解决时的情形。</p>\n</blockquote>\n<p>例1.显不了一个具有5个状态的状态空间的例子。</p>\n<blockquote>\n<p>其中任一个状态都可能是初始状态或目标状态, 带箭头的线显示了采取合适的动作后，一个状态是如何从一个状态走到另一个状态的。<br>注意：如果没有动作或动作系列可被采取，那么从一个状态到另一个状态的转化也许就是不可能的。</p>\n</blockquote>\n<p>例2.显示搜索空间的难题的示例是著名的8数字游戏，难题是一个具有9个方块格子的盘子。</p>\n<blockquote>\n<p>方块有一个初始随机的安排（初始状态）.目标就是重新安排这些方块，直至实现方块的有序排列（目标状态）。</p>\n</blockquote>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2023/1/20230210115957.png\" alt=\"WeiyiGeek.搜索空间示例图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.搜索空间示例图</p>\n            </figure>\n<p>当前搜索，有两种常用的搜索方法，<code>蛮力搜索</code>和<code>启发式搜索</code>, 其中搜索本身又有<code>广度优先</code>和<code>深度优先</code>。</p>\n<p><br/></p>\n<h4 id=\"1-蛮力搜索\"><a href=\"#1-蛮力搜索\" class=\"headerlink\" title=\"(1) 蛮力搜索\"></a>(1) 蛮力搜索</h4><p>当对搜索没有任何先验的知识时，我们就使用蛮力搜索。例如，在图中，A和T 分别代表起点和终点，我们要在迷宫中找到从A到T的路，我们将其转为树形图。</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2023/1/20230210130203.png\" alt=\"WeiyiGeek.迷宫的树形图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.迷宫的树形图</p>\n            </figure>\n<p>转换为树形结构后，我们就可以使用前面数据结构中学过的树搜索的两种方法，<code>广度优先搜索</code>与<code>深度优先搜索</code>。</p>\n<h5 id=\"1-广度优先搜索（遍历）\"><a href=\"#1-广度优先搜索（遍历）\" class=\"headerlink\" title=\"1.广度优先搜索（遍历）\"></a>1.广度优先搜索（遍历）</h5><p>在这种方法中，我们从树的根开始，在我们走向下一层前，检查当前层中的所有节点，下图中显示了迷宫的从左到右的广度优先搜索。</p>\n<p>温馨提示：在到达目标状态前，我们不得不搜索所有的节点，所以这种方法是低效的，如果我们的搜索是从右到左的，那么我们要搜索的节点数可能就不同了。</p>\n<h5 id=\"2-深度优先搜索（纵深）\"><a href=\"#2-深度优先搜索（纵深）\" class=\"headerlink\" title=\"2.深度优先搜索（纵深）\"></a>2.深度优先搜索（纵深）</h5><p>在这种方法中，我们从树的根开始，做一个向前搜索，直至发现目标或到达一个死端。如果到达了死端，我们回溯到最近的分支，然后再次向前搜索，我们继续这样的过程直至达到目标。</p>\n<p>温馨提示：针对迷宫问题这种搜索方法的效率比广度优先搜索要高。</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2023/1/20230210130753.png\" alt=\"WeiyiGeek.广度优先搜索深度优先搜索与图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.广度优先搜索深度优先搜索与图</p>\n            </figure>\n<p><br/></p>\n<h4 id=\"2-启发式搜索\"><a href=\"#2-启发式搜索\" class=\"headerlink\" title=\"(2) 启发式搜索\"></a>(2) 启发式搜索</h4><p>使用启发式搜索，我们给每个节点赋一个称为启发值（h值）的定量值。这个定量值显示了该节点与目标节点间的相对远近。</p>\n<p>例如，考虑上图18-19中的要解决的8数字游戏，假定难题的初始和目标状态如图所示，每一个方块的启发值是它到目标状态要移动的最小步数，每个状态的启发值是这个状态中所有方块的启发值之和。</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2023/1/20230210141105.png\" alt=\"WeiyiGeek.启发式搜索示例图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.启发式搜索示例图</p>\n            </figure>\n<p><br/></p>\n<h3 id=\"18-7-神经网络\"><a href=\"#18-7-神经网络\" class=\"headerlink\" title=\"18.7 神经网络\"></a>18.7 神经网络</h3><p>神经网络试图使用神经元网络去模仿人脑的学习过程，我们知道学习是一种复杂的生物现象，即使是人类自己也没有完全理解, 要使人工智能体自我学习肯定不是件容易的事情。但是, 在过去已经有好几种方法为未来建立了希望，大多数方法使用了归纳学习或从例子中学习，这意味着把很大集合的问题和解法都给计算机，让计算机从中学习</p>\n<p>本节我们只讨论其中一种方法，它可以不必使用复杂的数学概念来描述，它就是神经网络。</p>\n<h4 id=\"1-生物神经元\"><a href=\"#1-生物神经元\" class=\"headerlink\" title=\"(1) 生物神经元\"></a>(1) 生物神经元</h4><p>人脑中有数以亿计的处理单元, 称为神经元, 每个神经元平均与数以千计的其他神经元相连, 神经元有三部分构成：<code>胞体、轴突和树突</code>。</p>\n<ul>\n<li><code>胞体（身体）</code>中含有细胞核：它是处理器</li>\n<li><code>树突起到输入设备</code>的作用：它接收其他神经元的输入</li>\n<li><code>轴突起到输出设备</code>的作用：它把输出送到其他神经元</li>\n<li><code>神经键</code>是神经元的轴突和其他神经元的树突的连接点, 树突从相邻的神经元中收集电信号把它传给胞体。<blockquote>\n<p>实际上神经键的工作就是给传到相邻神经元的信号上加上权重，它根据产生的化学物质的数量来判断是强连接还是弱连接。</p>\n</blockquote>\n</li>\n</ul>\n<p>一个神经元有两种状态：<code>兴奋和抑制</code>。<br>如果接收的信号总量达到一个阈值，身体就兴奋，并触发一个输出信号，该信号传给轴突，最终传给其他的神经元。<br>如果接收的信号总量没有达到阈值，神经元仍然处于抑制状态：它不触发或产生输出。</p>\n<p><br/></p>\n<h4 id=\"2-感知器\"><a href=\"#2-感知器\" class=\"headerlink\" title=\"(2) 感知器\"></a>(2) 感知器</h4><p>感知器是一个类似于单个生物的人工神经元的人工神经元，它是带有一组具有权重的输入，对输入求和，把结果与阈值进行比较，若结果大于阈值感知器触发（输出1），否则不触发（输出0）。</p>\n<p>例如，下图中一个带有5个输入(x1~x5)和5个权重(w1~w5)的感知器，在此感知器中，如果T是阈值，输出值确定如下。</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2023/1/20230210142701.png\" alt=\"WeiyiGeek.感知器技术与权重图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.感知器技术与权重图</p>\n            </figure>\n<p><br/></p>\n<h4 id=\"3-多层网络\"><a href=\"#3-多层网络\" class=\"headerlink\" title=\"(3) 多层网络\"></a>(3) 多层网络</h4><p>几个层次的感知器可以组合起来，形成多层神经网络，每一层的输出变成下一层的输入，<code>第一层称为输入层，中间层称为隐藏层，最后一层称为输出层</code>。</p>\n<blockquote>\n<p>输入层中的节点不是神经元，它们是分配器，隐藏的节点通常用来给上一层的输出加上权重的，如下图所示显示了一个三层的神经网络。</p>\n</blockquote>\n<p><img src=\"https://img.weiyigeek.top/2023/1/20230210143858.png\" alt=\"WeiyiGeek.一个多层神经网络图\"></p>\n<p><br/></p>\n<h4 id=\"4-应用\"><a href=\"#4-应用\" class=\"headerlink\" title=\"(4) 应用\"></a>(4) 应用</h4><p>当有足够的预先定义的输入和输岀时，就可以使用神经网络。两个证明神经网络有用的领域是光学字符识别（OCR）（智能体读任何的手写体）和信用赋值（不同的因素赋予不同的权重去建立信用等级，例如用于贷款申请）。</p>\n<p>本文作为【计算机科学导论学习】的最后一章，至此完毕，相信随着前面的学习，读者已经对计算机有了一个初步的了解，包括其发展、硬件组成、使用以及编程算法、数据结构、计算机安全、和计算机应用，针对于读者进行后续全栈相关技术的学习，提供了基础知识储备，当遇到相关概念或者问题时，可以快速了解并进行学习，希望能的帮助到各位看。</p>\n<p>后续【WeiyiGeek】作者将持续推出，计算机全栈入门学习系列教程（学习笔记），希望大家多多支持!.</p>\n","comments":true,"excerpt":"[TOC]计算机科学导论学习笔记第 5 部分 数据安全与人工智能此部分包含第15、16、17和18章，包含了计算机中传输的数据压缩(有损与无损)、网络数据在传输过程中如何保证其数据安全, 讨论计算理论，即哪些是可计算的，哪些是不可计算的，最后介绍当前热门的人工智能(AI)的观点，加深我们对计算机数据处理的的认识，为后续学习扩展基础认识。原文地址: https://mp.weixin.qq.com/s/Sa9dVU7JOS5zEddldf22mw<br>","categories":[{"name":"计算机基础知识","path":"api/categories/计算机基础知识.json"}],"tags":[{"name":"计算机科学导论","path":"api/tags/计算机科学导论.json"}]}