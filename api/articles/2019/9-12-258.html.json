{"title":"SpringCloud架构入门学习和使用","slug":"系统运维/系统架构/WebAPP/SpringCloud架构入门学习和使用","date":"2019-09-12T06:34:30.000Z","updated":"2023-01-31T02:29:10.468Z","url":"2019/9-12-258.html","path":"api/articles/2019/9-12-258.html.json","covers":["https://img.weiyigeek.top/2019/1/20190917114128.png","https://img.weiyigeek.top/2019/1/20190917115108.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h4 id=\"0x00-前言介绍\"><a href=\"#0x00-前言介绍\" class=\"headerlink\" title=\"0x00 前言介绍\"></a>0x00 前言介绍</h4><p><em>什么是SpringCloud?</em><br>答:SpringCloud是在SpringBoot的基础上构建的,目标是<code>协调任何服务，简化分布式系统开发</code>。</p>\n<p><em>SpringCloud的作用是什么?</em><br>SpringCloud对常见的分布式系统模式提供了简单易用的编程模型，<code>帮助开发者构建弹性、可靠、协调的应用程序</code>;</p>\n<p>SpringCloud是一系列框架的有序集合，它基于SpringBoot的便利性融合了一整套实现微服务的框架并提供了服务发现注册、配置中心、消息总线、负载均衡、断路器、数据监控等组件。<br>SpringCloud的官网：<a href=\"https://spring.io/projects/spring-cloud\" target=\"_blank\" rel=\"noopener\">https://spring.io/projects/spring-cloud</a> </p>\n<p>SpringCloud优点:</p>\n<ul>\n<li>轻松入门并快速提高工作效率</li>\n<li>约定优于配置,适用于各种环境</li>\n<li>快速构建分布式系统架构的工具,例如轻量级的组件<code>配置管理，服务发现，断路器，智能路由，微代理，控制总线，一次性令牌，全局锁定，领导选举，分布式会话，集群状态</code>等。</li>\n<li>组件支持丰富，功能齐全</li>\n</ul>\n<p>Spring整体架构:</p>\n<ul>\n<li>API 网关 / 微服务</li>\n<li>断路器面板/设置面板/服务注册/分布式跟踪</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20190917114128.png\" alt=\"WeiyiGeek.整体架构\" title=\"\" class=\"\">\n                <p>WeiyiGeek.整体架构</p>\n            </figure>\n<p><br></p>\n<p><strong>SpringCloud的版本关系</strong><br>描述:SpringCloud是一个由许多子项目组成的综合项目，各子项目有不同的发布节奏。为了避免SpringCloud版本号与子项目版本号混淆，SpringCloud版本采用了名称而非版本号的命名;<br>比如当前SpringCloud版本Greenwich SR3,其中SR3是当SpringCloud的发布内容积累到临界点或者一个重大BUG被解决后，会发布一个”service releases”版本，简称SRX版</p>\n<p><em>SpringCloud和SpringBoot版本对应关系</em><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SpringCloud SpringBoot </span><br><span class=\"line\">Hoxton     \t2.2.x</span><br><span class=\"line\">Greenwich\t  2.1.x</span><br><span class=\"line\">Finchley  \t2.0.x</span><br><span class=\"line\">Edgware\t    1.5.x</span><br><span class=\"line\">Dalston   \t1.5.x</span><br></pre></td></tr></table></figure><br><br></p>\n<p><strong>SpringCloud子项目简介:</strong></p>\n<ul>\n<li><p>Spring Cloud Config</p>\n<ul>\n<li>集中配置管理工具，分布式系统中统一的外部配置管理，默认使用Git来存储配置，可以支持客户端配置的刷新及加密、解密操作。</li>\n</ul>\n</li>\n<li><p>Spring Cloud Netflix</p>\n<ul>\n<li>Netflix OSS 开源组件集成，包括Eureka、Hystrix、Ribbon、Feign、Zuul等核心组件。<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Eureka：服务治理组件，包括服务端的注册中心和客户端的服务发现机制；</span><br><span class=\"line\">Ribbon：负载均衡的服务调用组件，具有多种负载均衡调用策略；</span><br><span class=\"line\">Hystrix：服务容错组件，实现了断路器模式，为依赖服务的出错和延迟提供了容错能力；</span><br><span class=\"line\">Feign：基于Ribbon和Hystrix的声明式服务调用组件；</span><br><span class=\"line\">Zuul：API网关组件，对请求提供路由及过滤功能。</span><br><span class=\"line\">Archaius：配置管理API，包含一系列配置管理API，提供动态类型化属性、线程安全配置操作、轮询框架、回调机制等功能。</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>Spring Cloud Bus</p>\n<ul>\n<li>用于传播集群状态变化的消息总线，使用轻量级消息代理链接分布式系统中的节点，可以用来动态刷新集群中的服务配置。</li>\n</ul>\n</li>\n<li><p>Spring Cloud Consul</p>\n<ul>\n<li>基于Hashicorp Consul的服务治理组件。</li>\n</ul>\n</li>\n<li><p>Spring Cloud Security</p>\n<ul>\n<li>安全工具包，对Zuul代理中的负载均衡OAuth2客户端及登录认证进行支持。</li>\n</ul>\n</li>\n<li><p>Spring Cloud Sleuth</p>\n<ul>\n<li>SpringCloud应用程序的分布式请求链路跟踪，支持使用Zipkin、HTrace和基于日志（例如ELK）的跟踪。</li>\n</ul>\n</li>\n<li><p>Spring Cloud Stream</p>\n<ul>\n<li>轻量级事件驱动微服务框架，可以使用简单的声明式模型来发送及接收消息，主要实现为Apache Kafka及RabbitMQ。</li>\n</ul>\n</li>\n<li><p>Spring Cloud Task</p>\n<ul>\n<li>用于快速构建短暂、有限数据处理任务的微服务框架，用于向应用中添加功能性和非功能性的特性。</li>\n</ul>\n</li>\n<li><p>Spring Cloud Zookeeper</p>\n<ul>\n<li>基于Apache Zookeeper的服务治理组件。</li>\n</ul>\n</li>\n<li><p>Spring Cloud Gateway</p>\n<ul>\n<li>API网关组件，对请求提供路由及过滤功能。</li>\n</ul>\n</li>\n<li><p>Spring Cloud OpenFeign</p>\n<ul>\n<li>基于Ribbon和Hystrix的声明式服务调用组件，可以动态创建基于Spring MVC注解的接口实现用于服务调用，在SpringCloud 2.0中已经取代Feign成为了一等公民。s</li>\n</ul>\n</li>\n</ul>\n<p>SpringCloud子项目组织架构<br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20190917115108.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p><em>注意事项：</em> </p>\n<ul>\n<li>Greenwich版本是基于SpringBoot 2.1.x版本构建的，不适用于1.5.x版本。随着2019年8月SpringBoot 1.5.x版本停止维护，Edgware版本也将停止维护。</li>\n</ul>\n<h4 id=\"SpringCloud-config\"><a href=\"#SpringCloud-config\" class=\"headerlink\" title=\"SpringCloud config\"></a>SpringCloud config</h4><p>描述:配置文件中有些敏感数据需要加密处理,在使用SpringCloud中实现SpringCloud config配置文件加密<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#下载jce替换java_home/jre/lib/security下的两个jar包</span></span><br><span class=\"line\">http://www.oracle.com/technetwork/java/javase/downloads/jce8-download-2133166.html</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#配置文件添加</span></span><br><span class=\"line\">encrypt:</span><br><span class=\"line\">  key-store:</span><br><span class=\"line\">    <span class=\"built_in\">alias</span>: mytestkey</span><br><span class=\"line\">    location: server-rsa.jks</span><br><span class=\"line\">    password: pppppppp</span><br><span class=\"line\">    secret: ssssssss</span><br></pre></td></tr></table></figure></p>\n<p>测试加密解密启动eureka、config-server<br>可以使用curl和postman测试/enrypt、/derypt，如果加密解密结果一致就没问题。</p>\n<p>生成证书<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">keytool -genkeypair -<span class=\"built_in\">alias</span> mytestkey -keyalg RSA -dname <span class=\"string\">\"CN=Web Server,OU=Unit,O=Organization,L=City,S=State,C=US\"</span> -keypass ssssssss -keystore server-rsa.jks -storepass pppppppp</span><br></pre></td></tr></table></figure><br>在文件夹找到生成的server-rsa.jks,复制到项目classpath。</p>\n<p>配置中心加密test</p>\n<p>在rsatest-dev.yml添加以下内容</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># &#123;cipher&#125;后的内容是待解密内容</span></span><br><span class=\"line\"></span><br><span class=\"line\">profile: <span class=\"string\">'&#123;cipher&#125;AQCjXw/kh/GoWo/rjBB48ISnT1A74hsXg1AaVZRuOfJN0BmoiKSqJYtY/ivwe6mCOXTT3rb6ttI+fmz1zUYkjyomlU2owwz6uG6nBMuMSQdiS2ExMFGPfZwovfYbg/0IijxQ2+UDr51nNzDtTXAvAo6DhlkoCGC1MEHcRyakOg7SD1hYwUoAxls5A2v+8934iKIP2tVd+YEzHkDMYG5BS1XkiXLBV6ctVRerdlNO5XYqR7l9k8KP4uehTkZDYnuF3oJpf3ZMDHnimk9KH0KKgds3CC63X4bPPb9Ytetx/CrdZlpK9/VwQqe6b4HIu7KLM4TfsWKKiyI6n2jZ+8gEuLigfRovFQjCkG+EvMmMJKNDll/x0q47T2S1+CX4JXNAMd0='</span></span><br></pre></td></tr></table></figure>\n<p>访问ip:port/rsatest-dev.yml</p>\n<p>key-store配置正确情况下，可以看到profile: test</p>\n<p>配置错误，会看到 invalid: profile</p>\n<p><strong>另一种配置文件加密</strong><br>jasypt安全框架继承springboot，可以实现配置加载前解密。<br>具体操作：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#添加pom</span></span><br><span class=\"line\"> &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;com.github.ulisesbocchio&lt;/groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;jasypt-spring-boot-starter&lt;/artifactId&gt;</span><br><span class=\"line\">            &lt;version&gt;1.16&lt;/version&gt;</span><br><span class=\"line\">&lt;/dependency&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"> // 密钥</span><br><span class=\"line\">    private static final String KEY = <span class=\"string\">\"1234567a?\"</span>;</span><br><span class=\"line\">    public static void main(String[] args) &#123;</span><br><span class=\"line\">        String ciphertext1 = encrypt(<span class=\"string\">\"abcdefg\"</span>); // Wu11fsC0gpgSET5aU8GXUA==</span><br><span class=\"line\">        String ciphertext2 = encrypt(<span class=\"string\">\"abcdefg\"</span>); // ESXlHsVk2YM7mGcHy2ccGg==</span><br><span class=\"line\">        System.out.println(ciphertext1);</span><br><span class=\"line\">        System.out.println(ciphertext2);</span><br><span class=\"line\">        String text1 = decrypt(ciphertext1);</span><br><span class=\"line\">        String text2 = decrypt(ciphertext2);</span><br><span class=\"line\">        System.out.println(text1);               // abcdefg</span><br><span class=\"line\">        System.out.println(text2);               // abcdefg</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 加密</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @param text 明文</span><br><span class=\"line\">     * @<span class=\"built_in\">return</span> 密文</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static String encrypt(String text) &#123;</span><br><span class=\"line\">        StandardPBEStringEncryptor encryptor = new StandardPBEStringEncryptor();</span><br><span class=\"line\">        encryptor.setPassword(KEY);</span><br><span class=\"line\">        <span class=\"built_in\">return</span> encryptor.encrypt(text);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 解密</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @param ciphertext 密文</span><br><span class=\"line\">     * @<span class=\"built_in\">return</span> 明文</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static String decrypt(String ciphertext) &#123;</span><br><span class=\"line\">        StandardPBEStringEncryptor encryptor = new StandardPBEStringEncryptor();</span><br><span class=\"line\">        encryptor.setPassword(<span class=\"string\">\"e!Jd&amp;ljyJ^e4I5oU\"</span>);</span><br><span class=\"line\">        <span class=\"built_in\">return</span> encryptor.decrypt(ciphertext);</span><br><span class=\"line\"></span><br><span class=\"line\">配置加上</span><br><span class=\"line\"></span><br><span class=\"line\">jasypt:</span><br><span class=\"line\">  encryptor:</span><br><span class=\"line\">    password: e!Jd&amp;ljyJ^e4I5oU <span class=\"comment\"># 密钥</span></span><br><span class=\"line\">xxx: </span><br><span class=\"line\">    password: ENC(jWgGELCkuxRuCI2Aqa6cF9VCxYpuKEZr)</span><br><span class=\"line\"></span><br><span class=\"line\">ENC()里是待解密内容。</span><br></pre></td></tr></table></figure></p>\n<hr>\n\n<h5 id=\"Spring-Cloud-Security\"><a href=\"#Spring-Cloud-Security\" class=\"headerlink\" title=\"Spring Cloud Security\"></a>Spring Cloud Security</h5><hr>\n\n<h4 id=\"补充附录\"><a href=\"#补充附录\" class=\"headerlink\" title=\"补充附录\"></a>补充附录</h4><p><strong>附录1:SpringCloud与Dubbo的比较</strong></p>\n<table>\n<thead>\n<tr>\n<th>核心要素</th>\n<th>SpringCloud</th>\n<th>Dubbo</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>服务注册中心(Service Register)</td>\n<td>SpringCloud Netflix EureKa(单一)</td>\n<td>Zookeeper/Redis</td>\n</tr>\n<tr>\n<td>服务调用方式</td>\n<td>REST API</td>\n<td>RPC</td>\n</tr>\n<tr>\n<td>服务网关</td>\n<td>SpringCloud Netflix Zuul</td>\n<td>无</td>\n</tr>\n<tr>\n<td>断路器(Breaker)</td>\n<td>SpringCloud Netflix Hystrix</td>\n<td>未完善</td>\n</tr>\n<tr>\n<td>分布式配置</td>\n<td>SpringCloud Config</td>\n<td>无</td>\n</tr>\n<tr>\n<td>分布式跟踪系统</td>\n<td>SpringCloud Sleuth</td>\n<td>无</td>\n</tr>\n<tr>\n<td>消息总线</td>\n<td>SpringCloud Bus</td>\n<td>无</td>\n</tr>\n<tr>\n<td>数据流</td>\n<td>SpringCloud Stream(Redis/Rabbit/kafka信息微服务)</td>\n<td>无</td>\n</tr>\n<tr>\n<td>批量任务</td>\n<td>SpringCloud Task</td>\n<td>无</td>\n</tr>\n<tr>\n<td>占用带宽</td>\n<td>比较多(HTTP协议传输)</td>\n<td>较少(二进制传输)</td>\n</tr>\n<tr>\n<td>开发依赖</td>\n<td>接口协议约定比较自由且松散</td>\n<td>发难度较大以及Jar包依赖问题</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Spring项目访问日志设置</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- --server.tomcat.accesslog.buffered=<span class=\"literal\">true</span></span><br><span class=\"line\">- --server.tomcat.accesslog.directory=/app/tomcat/<span class=\"built_in\">log</span></span><br><span class=\"line\">- --server.tomcat.accesslog.enabled=<span class=\"literal\">true</span></span><br><span class=\"line\">- --server.tomcat.accesslog.file-date-format=.yyyy-MM-dd</span><br><span class=\"line\">- --server.tomcat.accesslog.pattern=common</span><br><span class=\"line\">- --server.tomcat.accesslog.prefix=access_log</span><br><span class=\"line\">- --server.tomcat.accesslog.rename-on-rotate=<span class=\"literal\">false</span></span><br><span class=\"line\">- --server.tomcat.accesslog.request-atteributes-enabled=<span class=\"literal\">false</span></span><br><span class=\"line\">- --server.tomcat.accesslog.ratate=<span class=\"literal\">true</span></span><br><span class=\"line\">- --server.tomcat.accesslog.suffix=.<span class=\"built_in\">log</span></span><br></pre></td></tr></table></figure></p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"系统架构","path":"api/categories/系统架构.json"},{"name":"运维基础","path":"api/categories/运维基础.json"}],"tags":[{"name":"SpringCloud","path":"api/tags/SpringCloud.json"}]}