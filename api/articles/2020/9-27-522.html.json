{"title":"7-Kubernetes入门基础之存储Volume介绍","slug":"虚拟云容/云容器/Kubernetes/7-Kubernetes入门基础之存储Volume介绍","date":"2020-09-27T10:37:47.000Z","updated":"2022-06-21T02:33:02.087Z","url":"2020/9-27-522.html","path":"api/articles/2020/9-27-522.html.json","covers":["https://upload-images.jianshu.io/upload_images/2032456-c85dde456ae345c1.jpg?imageMogr2/auto-orient/strip|imageView2/2/w/664/format/webp","https://upload-images.jianshu.io/upload_images/2032456-3fe73ae1f3fb4d1b.jpg?imageMogr2/auto-orient/strip|imageView2/2/w/623/format/webp","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2021/1/20210220140128.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/2/20201209223436.png"],"content":"<p>[TOC]</p>\n<h2 id=\"0x00-前言简述\"><a href=\"#0x00-前言简述\" class=\"headerlink\" title=\"0x00 前言简述\"></a>0x00 前言简述</h2><p>描述: 我们知道在Docker中可以通过Volume将宿主机文件(<code>配置文件、数据库等</code>等)映射到Container内部供其容器内的应用程序使用。在Kubernrtes中我们可以采用<code>ConfigMap控制器</code>创建共享应用配置，亦可采用Kubernetes中的<code>volume</code>（卷）在一个Pod内多个Container之间进行文件共享;</p>\n<p><br/></p>\n<p><strong>Q: K8s 与 Docker 两者之间卷的区别?</strong></p>\n<ul>\n<li>1) K8S 的 Volume (卷) 定义在Pod之上被同一个Pod内的多个容器挂载到具体文件之下便于文件的共享;</li>\n<li>2) K8S 的 Volume (卷) 与 Pod 的生命周期相同（持久卷除外），即Pod销毁后Volume也会被销毁，但Pod中容器重启或者终止并不会导致Volumes中数据的丢失；</li>\n<li>3) K8S 的 VOlume (卷) 支持多种分布式文件系统，例如GlusterFS、NFS、Ceph、</li>\n</ul>\n<p><br/></p>\n<p><strong>Volume 使用流程</strong></p>\n<ul>\n<li>1) 声明一个Volume(可以是多种类型)</li>\n<li>2) 在容器内引用该Volume并Mount到Pod容器里的某个指定文件目录之中;</li>\n</ul>\n<p><br/></p>\n<p><strong>k8s持久化存储方案</strong><br>描述: 共享存储为分布式系统非常重要的一部分，存储一般要求稳定、可用、性能、可靠。</p>\n<ul>\n<li><p>1.从用户角度看<br>存储就是一块盘或者一个目录，用户不关心盘或者目录如何实现，用户要求非常“简单”，就是稳定，性能好。为了能够提供稳定可靠的存储产品，各个厂家推出了各种各样的存储技术和概念。为了能够让大家有一个整体认识，本文先介绍存储中的这些概念。</p>\n</li>\n<li><p>2.从存储介质角度<br>存储介质分为机械硬盘和固态硬盘（SSD）。机械硬盘泛指采用磁头寻址的磁盘设备，包括SATA硬盘和SAS硬盘。由于采用磁头寻址，机械硬盘性能一般，随机IOPS一般在200左右，顺序带宽在150MB/s左右。固态硬盘是指采用Flash/DRAM芯片+控制器组成的设备，根据协议的不同，又分为SATA SSD，SAS SSD，PCIe SSD和NVMe SSD。</p>\n</li>\n<li><p>3.从产品定义角度<br>存储分为本地存储（DAS），网络存储（NAS），存储局域网（SAN）和软件定义存储（SDS）四大类</p>\n<ul>\n<li>DAS就是本地盘，直接插到服务器上</li>\n<li>NAS是指提供NFS协议的NAS设备，通常采用磁盘阵列+协议网关的方式</li>\n<li>SAN跟NAS类似，提供SCSI/iSCSI协议，后端是磁盘阵列</li>\n<li>SDS是一种泛指，包括分布式NAS（并行文件系统），ServerSAN等</li>\n</ul>\n<ul>\n<li>4.从应用场景角度<br>存储分为文件存储（Posix/MPI），块存储（iSCSI/Qemu）和对象存储（S3/Swift）三大类。</li>\n</ul>\n</li>\n</ul>\n<p><br/></p>\n<p><strong>Kubernetes是如何给存储定义和分类呢？</strong></p>\n<ul>\n<li>1.Kubernetes中跟存储相关的概念有PersistentVolume （PV）和PersistentVolumeClaim（PVC），PV又分为静态PV和动态PV。静态PV方式如下：</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://upload-images.jianshu.io/upload_images/2032456-c85dde456ae345c1.jpg?imageMogr2/auto-orient/strip|imageView2/2/w/664/format/webp\" alt=\"PV-PVC\" title=\"\" class=\"\">\n                <p>PV-PVC</p>\n            </figure>\n<ul>\n<li>2.动态PV需要引入StorageClass的概念，使用方式如下：</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://upload-images.jianshu.io/upload_images/2032456-3fe73ae1f3fb4d1b.jpg?imageMogr2/auto-orient/strip|imageView2/2/w/623/format/webp\" alt=\"StorageClass\" title=\"\" class=\"\">\n                <p>StorageClass</p>\n            </figure>\n<p><br/></p>\n<p><strong>Kubernetes 常见类型以及支持的卷</strong></p>\n<ul>\n<li><code>configMap (常用)</code> <code>secret (常用)</code> <code>emptyDir (常用)</code> <code>hostPath (常用)</code> <code>nfs (常用)</code> <code>persistentVolumeClaim (常用)</code> <code>cephfs (常用)</code></li>\n<li>awsElasticBlockStore  azureDisk  azureFile csi downwardAPI </li>\n<li>fc flocker gcePersistentDisk gitRepo glusterfs iscsi local</li>\n<li>projected portworxVolume quobyte  rbd scaleI0 </li>\n<li>storageos  vsphereVolume   </li>\n</ul>\n<hr>\n<h2 id=\"0x01-Storage-存储\"><a href=\"#0x01-Storage-存储\" class=\"headerlink\" title=\"0x01 Storage - 存储\"></a>0x01 Storage - 存储</h2><p>描述: 以下都是 <code>statefulSet 控制器</code>涉及有状态服务必须拥有的一些资源对象</p>\n<ul>\n<li>1) configMap : 在k8s中专门用来存储配置文件。</li>\n<li>2) Secret : 有一些需要加密的信息，例如密钥、用户名密码信息在Secret中可以被加密，是k8s中加密的<code>解决方案【base64】</code>。</li>\n<li>3) Volume  : 用于赋予k8s中pod共享存储卷的能力，例如可以通过nfs共享，本地磁盘目录共享等等。</li>\n<li>4) Persistent Volume : 简称PV【持久卷】，还包含一个PVC，通过服务进行持久卷的构建。</li>\n<li>5) StorageClass : 存储类可以动态的绑定PV(持久卷)和创建PVC(持久卷要求)。</li>\n<li>6) Nfs / Cephfs : 常用的分布式共享存储解决方案。</li>\n</ul>\n<p><br></p>\n<h3 id=\"1-ConfigMap\"><a href=\"#1-ConfigMap\" class=\"headerlink\" title=\"1.ConfigMap\"></a>1.ConfigMap</h3><p>描述: 在部署应用时常常需要给应用程序提供一些配置信息，比如Database的IP地址和开放端口以及用户密码等；</p>\n<p>常用的简单方法有如下几种：</p>\n<ul>\n<li>1) 通过构建镜像时(Build)将应用配置文件打入Docker Images : 不灵活且以明文不安全，并且修改配置还需重新构建打包Image;</li>\n<li>2) 通过environment(环境环境)传参 : 不灵活且明文传入，而且更新环境变量时资源对象将需要重新部署;</li>\n<li>3) 配置管理中心 : 例如 百度 Disconf 、360 的qconf配置管理，在大规模的分布式系统之中将分布式应用所需的配置信息与应用程序进行分离及其重要，它可以极大的简化应用配置管理工作;</li>\n<li>4) 通过K8s提供的 ConfigMap 资源对象进行实现;</li>\n</ul>\n<p>Tips : DisConf 将 X/Y/Z 多个业务平台进行配置统一管理, 其主要实现目标是对于同一个上线包，无需改动配置，即可在多个环境（<code>DEV/TEST/STAGE/PRODUCTION</code>）上线，简单的说其实现了<code>配置信息与应用程序进行解耦操作</code>;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 1) 动态化更改配置部署 : 当更改配置后无需重新打包或重启，即可实时生效;</span><br><span class=\"line\">- 2) 配置统一管理 : 提供Web平台统一管理多个配置的应用环境（`DEV/TEST/STAGE/PRODUCTION`），以及多个产品的所有配置;</span><br><span class=\"line\">- 3) 核心目标 : 一个 Jar 包到处运行;</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<h4 id=\"configMap-介绍\"><a href=\"#configMap-介绍\" class=\"headerlink\" title=\"configMap - 介绍\"></a>configMap - 介绍</h4><p>描述: ConfigMap 功能在 Kubernetes 1.2 版本中引入，许多应用程序会<code>从配置文件、命令行参数或环境变量</code>中读取配置信息。ConfigMap API 给我们提供了向容器中注入配置信息的机制(<code>即配置的一种统一管理方法</code>,使得应用程序与配置信息进行解耦)，ConfigMap可以被用来保存单个属性，也可以用来保存整个配置文件或者JSON 二进制大对象。</p>\n<p>简单的说: 通过ConfigMap能够把配置以<code>Key-Value</code>对的形式供其它资源对象消费;</p>\n<p><strong>Q: configMap 配置文件注册中心</strong></p>\n<blockquote>\n<p>A: 在集群中有一个配置文件注册中心，集群中的节点向配置中心索要属于自身的配置，配置中心根据各节点的主机名或ip地址进行分发配置。<br>作用: k8s创建configMap，pod去引用，来达到类似于配置文件注册中心的效果。</p>\n</blockquote>\n<p>Tips : 不同集群获取到的信息是不一样的需要使用者自己配置;</p>\n<p><br/></p>\n<h4 id=\"configMap-创建\"><a href=\"#configMap-创建\" class=\"headerlink\" title=\"configMap - 创建\"></a>configMap - 创建</h4><p>描述: configMap的几种创建方式进行实践演示基本创建格式:<code>kubectl create configmap [map-name] [data-source]</code></p>\n<ul>\n<li>0) 通过<code>--from-file</code>参数进行目录批量&amp;单一文件configMap创建实践流程:<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 查看目录文件清单 &amp; 内容</span></span><br><span class=\"line\">cat &gt; ~/K8s/Day8/demo1/dir1.properties &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">dir.number=1</span><br><span class=\"line\">dir.name=demo1</span><br><span class=\"line\">dir.path=~/K8s/Day8/demo1</span><br><span class=\"line\">EOF</span><br><span class=\"line\">cat &gt; ~/K8s/Day8/demo1/dir2.properties &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">dir.number=2</span><br><span class=\"line\">dir.name=demo2</span><br><span class=\"line\">dir.path=~/K8s/Day8/demo2</span><br><span class=\"line\">EOF</span><br><span class=\"line\">cat &gt; ~/K8s/Day8/demo2/file.properties &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">file.number=2</span><br><span class=\"line\">file.name=file.properties</span><br><span class=\"line\">file.path=~/K8s/Day8/demo2/file.properties</span><br><span class=\"line\">file.html=configMap Test - WeiyiGeek</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 目录批量创建 configMap （注意路径为全路径）</span></span><br><span class=\"line\">~/K8s/Day8/demo1$ ls</span><br><span class=\"line\">  <span class=\"comment\"># dir1.properties  dir2.properties</span></span><br><span class=\"line\">~/K8s/Day8/demo1$ kubectl create configmap dir-config --from-file=/home/weiyigeek/K8s/Day8/demo1/</span><br><span class=\"line\">  <span class=\"comment\"># configmap/dir-config created</span></span><br><span class=\"line\"><span class=\"comment\"># - dir-config : 指创建的configMap的名称</span></span><br><span class=\"line\"><span class=\"comment\"># - --from-file : 指定该目录下的所有文件都会被用在ConfigMap里面创建一个键值对, 注意目录可以是在本地或者远程地址中;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (3) 文件创建 configMap</span></span><br><span class=\"line\">~/K8s/Day8/demo1$ kubectl create configmap file-config --from-file=/home/weiyigeek/K8s/Day8/demo2/file.properties</span><br><span class=\"line\">  <span class=\"comment\"># configmap/file-config created</span></span><br><span class=\"line\"><span class=\"comment\"># - --from-file : 在Volume中使用时键的名字就是文件名，值就是对应文件的内容【K/V结构】</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (4) 我们也可以通过Key制定文件创建，通过使用Key制定文件创建的好处是可以使用Key替代文件名称(类似 Alias )可以更改增强文件的可读性;</span></span><br><span class=\"line\">~/K8s/Day8/demo1$ kubectl create configmap file-config-aliase --from-file file-key=~/K8s/Day8/demo2/file.properties</span><br><span class=\"line\">  <span class=\"comment\"># configmap/file-config-aliase created  </span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (5) 信息查看示例关键点</span></span><br><span class=\"line\">~/K8s/Day8/demo2$ kubectl get cm file-config-aliase</span><br><span class=\"line\">  <span class=\"comment\"># NAME                 DATA   AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># file-config-aliase   1      109s</span></span><br><span class=\"line\"></span><br><span class=\"line\">~/K8s/Day8/demo2$ kubectl get cm file-config-aliase -o yaml   </span><br><span class=\"line\">  <span class=\"comment\"># apiVersion: v1</span></span><br><span class=\"line\">  <span class=\"comment\"># data:</span></span><br><span class=\"line\">  <span class=\"comment\">#   file-key: |   # 别名</span></span><br><span class=\"line\">  <span class=\"comment\">#     file.number=2</span></span><br><span class=\"line\">  <span class=\"comment\">#     file.name=file.properties</span></span><br><span class=\"line\">  <span class=\"comment\">#     file.path=~/K8s/Day8/demo2/file.properties</span></span><br><span class=\"line\">  <span class=\"comment\">#     file.html=configMap Test - WeiyiGeek</span></span><br><span class=\"line\">  <span class=\"comment\"># kind: ConfigMap</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>Tips ： 如需要通过多个文件创建configMap可以分别通过多个 –from-file 参数进行制定对应的配置文件;</p>\n<p><br></p>\n<ul>\n<li>1) 通过 <code>--from-env-file</code> 参数进行创建configMap与上面的方式不同，此种形式对env-file的内容格式有则严格的要求，并且如果您提供了多个<code>env-file文件</code>仅最后一个文件的内容生效;</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) env-file.properties</span></span><br><span class=\"line\">cat &gt; ~/K8s/Day8/demo2/env-file.properties &lt;&lt;<span class=\"string\">'END'</span></span><br><span class=\"line\">name=weiyigeek</span><br><span class=\"line\">age=88</span><br><span class=\"line\">allowed=<span class=\"string\">\"True\"</span></span><br><span class=\"line\">END</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 进行创建configMap</span></span><br><span class=\"line\">kubectl create configmap env-file --from-env-file env-file.properties</span><br><span class=\"line\"><span class=\"comment\"># configmap/env-file created</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (3) 查看 env-file 的configMap</span></span><br><span class=\"line\">~/K8s/Day8/demo2$ kubectl get cm env-file -o yaml</span><br><span class=\"line\">  <span class=\"comment\"># apiVersion: v1</span></span><br><span class=\"line\">  <span class=\"comment\"># data:</span></span><br><span class=\"line\">  <span class=\"comment\">#   age: \"88\"</span></span><br><span class=\"line\">  <span class=\"comment\">#   allowed: '\"True\"'</span></span><br><span class=\"line\">  <span class=\"comment\">#   name: weiyigeek</span></span><br><span class=\"line\">  <span class=\"comment\"># kind: ConfigMap</span></span><br><span class=\"line\">  <span class=\"comment\"># metadata:</span></span><br><span class=\"line\">  <span class=\"comment\">#   creationTimestamp: \"2021-02-07T01:11:48Z\"</span></span><br><span class=\"line\">  <span class=\"comment\">#   managedFields:</span></span><br><span class=\"line\">  <span class=\"comment\">#   - apiVersion: v1</span></span><br><span class=\"line\">  <span class=\"comment\">#     fieldsType: FieldsV1</span></span><br><span class=\"line\">  <span class=\"comment\">#     fieldsV1:</span></span><br><span class=\"line\">  <span class=\"comment\">#       f:data:</span></span><br><span class=\"line\">  <span class=\"comment\">#         .: &#123;&#125;</span></span><br><span class=\"line\">  <span class=\"comment\">#         f:age: &#123;&#125;</span></span><br><span class=\"line\">  <span class=\"comment\">#         f:allowed: &#123;&#125;</span></span><br><span class=\"line\">  <span class=\"comment\">#         f:name: &#123;&#125;</span></span><br><span class=\"line\">  <span class=\"comment\">#     manager: kubectl-create</span></span><br><span class=\"line\">  <span class=\"comment\">#     operation: Update</span></span><br><span class=\"line\">  <span class=\"comment\">#     time: \"2021-02-07T01:11:48Z\"</span></span><br><span class=\"line\">  <span class=\"comment\">#   name: env-file</span></span><br><span class=\"line\">  <span class=\"comment\">#   namespace: default</span></span><br><span class=\"line\">  <span class=\"comment\">#   resourceVersion: \"19745894\"</span></span><br><span class=\"line\">  <span class=\"comment\">#   selfLink: /api/v1/namespaces/default/configmaps/env-file</span></span><br><span class=\"line\">  <span class=\"comment\">#   uid: 9fb64e82-3ab1-4bcf-b528-c1f8b9aef026</span></span><br></pre></td></tr></table></figure>\n<p><br></p>\n<ul>\n<li>2) 字面值创建简单示例:<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 使用文字值创建利用--from-literal 参数传递配置信息，该参数可以使用多次;</span></span><br><span class=\"line\">~/K8s/Day8/demo2 $ kubectl create configmap text-config --from-literal=my.name=weiyigeek --from-literal=my.age=18 --from-literal=my.site=http://www.weiyigeek.top</span><br><span class=\"line\">  <span class=\"comment\"># configmap/text-config created</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>Tips ：通过字面值创建的configMap<code>不便于配置管理的记录</code>所以不推荐使用;</p>\n<p><br/></p>\n<ul>\n<li>3) 以资源清单创建<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 资源清单</span></span><br><span class=\"line\">mkdir -pv ~/K8s/Day8/demo3/</span><br><span class=\"line\">cat  &gt; ~/K8s/Day8/demo3/configmap.yaml &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">apiVersion: v1 </span><br><span class=\"line\">kind: ConfigMap </span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: configmap-demo</span><br><span class=\"line\">  namespace: default </span><br><span class=\"line\">data:</span><br><span class=\"line\">  special.name: weiyigeek</span><br><span class=\"line\">  special.site: www.weiyigeek.top</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 创建</span></span><br><span class=\"line\">~/K8s/Day8/demo3$ kubectl create -f configmap.yaml</span><br><span class=\"line\">  configmap/configmap-demo created</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br/></p>\n<h4 id=\"configMap-操作\"><a href=\"#configMap-操作\" class=\"headerlink\" title=\"configMap - 操作\"></a>configMap - 操作</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.查看创建configMap信息</span></span><br><span class=\"line\">~/K8s/Day8/demo3$ kubectl api-resources | grep <span class=\"string\">\"configmap\"</span></span><br><span class=\"line\">  <span class=\"comment\"># configmaps    cm(缩写)    true         ConfigMap  #  没有 APIGROUP 其资源版本都是 v1</span></span><br><span class=\"line\"></span><br><span class=\"line\">~/K8s/Day8/demo3$ kubectl get cm  <span class=\"comment\"># 创建的configmap-demo</span></span><br><span class=\"line\">  <span class=\"comment\"># NAME             DATA   AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># configmap-demo   2      3m3s</span></span><br><span class=\"line\">  <span class=\"comment\"># dir-config       2      23m</span></span><br><span class=\"line\">  <span class=\"comment\"># flie-config      1      16m</span></span><br><span class=\"line\">  <span class=\"comment\"># text-config      3      10m</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.详细信息(通过信息展示的内容与通过cat命令查看一致)</span></span><br><span class=\"line\">~/K8s/Day8/demo3$ kubectl describe cm file-config</span><br><span class=\"line\"><span class=\"comment\"># kubectl get cm file-config -o yaml</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Name:         file-config</span></span><br><span class=\"line\">  <span class=\"comment\"># Namespace:    default</span></span><br><span class=\"line\">  <span class=\"comment\"># Labels:       &lt;none&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># Annotations:  &lt;none&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Data</span></span><br><span class=\"line\">  <span class=\"comment\"># ====</span></span><br><span class=\"line\">  <span class=\"comment\"># file.properties:  # Key</span></span><br><span class=\"line\">  <span class=\"comment\"># ----</span></span><br><span class=\"line\">  <span class=\"comment\"># file.number=2     # Value</span></span><br><span class=\"line\">  <span class=\"comment\"># file.name=file.properties</span></span><br><span class=\"line\">  <span class=\"comment\"># file.path=~/K8s/Day8/demo2/file.properties</span></span><br><span class=\"line\">  <span class=\"comment\"># file.html=configMap Test - WeiyiGeek</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Events:  &lt;none&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.删除指定名称的configMap的配置</span></span><br><span class=\"line\">~/K8s/Day8/demo3$ kubectl delete cm flie-config</span><br><span class=\"line\">  <span class=\"comment\"># configmap \"flie-config\" deleted</span></span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<h4 id=\"configMap-使用\"><a href=\"#configMap-使用\" class=\"headerlink\" title=\"configMap - 使用\"></a>configMap - 使用</h4><ul>\n<li>(1) 创建Pod资源控制器并以ConfigMap作为环境变量&amp;命令行参数（非常值得学习）<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">cat</span> <span class=\"string\">&gt; configmap-use-1.yaml&lt;&lt;'EOF'</span></span><br><span class=\"line\"><span class=\"string\"># Pod Controller</span></span><br><span class=\"line\"><span class=\"string\"></span><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span> </span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Pod</span> </span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">configmap-env-demo</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  containers:</span></span><br><span class=\"line\"><span class=\"attr\">    - name:</span> <span class=\"string\">configmap-env-demo</span></span><br><span class=\"line\"><span class=\"attr\">      image:</span> <span class=\"string\">harbor.weiyigeek.top/test/busbox:latest</span></span><br><span class=\"line\"><span class=\"attr\">      imagePullPolicy:</span> <span class=\"string\">IfNotPresent</span></span><br><span class=\"line\"><span class=\"attr\">      command:</span> <span class=\"string\">[</span> <span class=\"string\">\"/bin/sh\"</span><span class=\"string\">,</span> <span class=\"string\">\"-c\"</span><span class=\"string\">,</span> <span class=\"string\">\"env; echo Name: $&#123;USERNAME_KEY&#125;, Site: $&#123;SITE_KEY&#125;\"</span> <span class=\"string\">]</span></span><br><span class=\"line\"><span class=\"attr\">      env:</span>                         <span class=\"comment\"># 关键点     </span></span><br><span class=\"line\"><span class=\"attr\">        - name:</span> <span class=\"string\">USERNAME_KEY</span></span><br><span class=\"line\"><span class=\"attr\">          valueFrom:</span></span><br><span class=\"line\"><span class=\"attr\">            configMapKeyRef:</span>       <span class=\"comment\"># 关键点key来源设置</span></span><br><span class=\"line\"><span class=\"attr\">              name:</span> <span class=\"string\">configmap-demo</span></span><br><span class=\"line\"><span class=\"attr\">              key:</span> <span class=\"string\">special.name</span>    <span class=\"comment\"># Value</span></span><br><span class=\"line\"><span class=\"attr\">        - name:</span> <span class=\"string\">SITE_KEY</span> </span><br><span class=\"line\"><span class=\"attr\">          valueFrom:</span></span><br><span class=\"line\"><span class=\"attr\">            configMapKeyRef:</span></span><br><span class=\"line\"><span class=\"attr\">              name:</span> <span class=\"string\">configmap-demo</span></span><br><span class=\"line\"><span class=\"attr\">              key:</span> <span class=\"string\">special.site</span>    <span class=\"comment\"># Value</span></span><br><span class=\"line\"><span class=\"attr\">      envFrom:</span></span><br><span class=\"line\"><span class=\"attr\">        - configMapRef:</span></span><br><span class=\"line\"><span class=\"attr\">            name:</span> <span class=\"string\">configmap-demo</span>   <span class=\"comment\"># Key</span></span><br><span class=\"line\"><span class=\"attr\">  restartPolicy:</span> <span class=\"string\">Never</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>configMap使用操作流程:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.上传镜像到私有仓库</span></span><br><span class=\"line\">~/K8s/Day8/demo3$ docker tag busybox:latest harbor.weiyigeek.top/<span class=\"built_in\">test</span>/busbox:latest</span><br><span class=\"line\">~/K8s/Day8/demo3$ docker push harbor.weiyigeek.top/<span class=\"built_in\">test</span>/busbox:latest</span><br><span class=\"line\">  <span class=\"comment\"># The push refers to repository [harbor.weiyigeek.top/test/busbox]</span></span><br><span class=\"line\">  <span class=\"comment\"># d2421964bad1: Pushed</span></span><br><span class=\"line\">  <span class=\"comment\"># latest: digest: sha256:c9249fdf56138f0d929e2080ae98ee9cb2946f71498fc1484288e6a935b5e5bc size: 527</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.部署Pod</span></span><br><span class=\"line\">~$ kubectl create -f configmap-use-1.yaml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.查看</span></span><br><span class=\"line\">~$ kubectl get pod</span><br><span class=\"line\">  <span class=\"comment\"># NAME                 READY   STATUS      RESTARTS   AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># configmap-env-demo   0/1     Completed   0          157m</span></span><br><span class=\"line\">$ kubectl logs configmap-env-demo</span><br><span class=\"line\">  <span class=\"comment\"># KUBERNETES_PORT=tcp://10.96.0.1:443</span></span><br><span class=\"line\">  <span class=\"comment\"># KUBERNETES_SERVICE_PORT=443</span></span><br><span class=\"line\">  <span class=\"comment\"># HOSTNAME=configmap-env-demo</span></span><br><span class=\"line\">  <span class=\"comment\"># SHLVL=1</span></span><br><span class=\"line\">  <span class=\"comment\"># HOME=/root</span></span><br><span class=\"line\">  <span class=\"comment\"># SITE_KEY=www.weiyigeek.top      # 关键点</span></span><br><span class=\"line\">  <span class=\"comment\"># special.site=www.weiyigeek.top  # 关键点</span></span><br><span class=\"line\">  <span class=\"comment\"># KUBERNETES_PORT_443_TCP_ADDR=10.96.0.1</span></span><br><span class=\"line\">  <span class=\"comment\"># PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span></span><br><span class=\"line\">  <span class=\"comment\"># KUBERNETES_PORT_443_TCP_PORT=443</span></span><br><span class=\"line\">  <span class=\"comment\"># KUBERNETES_PORT_443_TCP_PROTO=tcp</span></span><br><span class=\"line\">  <span class=\"comment\"># KUBERNETES_PORT_443_TCP=tcp://10.96.0.1:443</span></span><br><span class=\"line\">  <span class=\"comment\"># KUBERNETES_SERVICE_PORT_HTTPS=443</span></span><br><span class=\"line\">  <span class=\"comment\"># KUBERNETES_SERVICE_HOST=10.96.0.1</span></span><br><span class=\"line\">  <span class=\"comment\"># PWD=/</span></span><br><span class=\"line\">  <span class=\"comment\"># USERNAME_KEY=weiyigeek      # 关键点</span></span><br><span class=\"line\">  <span class=\"comment\"># special.name=weiyigeek      # 关键点</span></span><br><span class=\"line\">  <span class=\"comment\"># Name: weiyigeek, Site: www.weiyigeek.top   # 输出</span></span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>(2) 创建Pod资源控制器并通过数据卷(Volume)插件使用ConfigMap对象&amp;热更新<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 在数据卷里面使用这个ConfigMap，有不同的选项。</span></span><br><span class=\"line\"><span class=\"comment\"># 最基本的就是将文件填入数据卷，在这个文件中键就是文件名键值就是文件内容;</span></span><br><span class=\"line\">cat &gt; configmap-use-3.yaml&lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\"><span class=\"comment\"># Deployment Controller</span></span><br><span class=\"line\">apiVersion: apps/v1 </span><br><span class=\"line\">kind: Deployment </span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: configmap-update-demo</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  replicas: 1</span><br><span class=\"line\">  selector:                  <span class=\"comment\"># 注意它是在Deployment控制器中需要依赖的</span></span><br><span class=\"line\">    matchLabels:  </span><br><span class=\"line\">      app: configmap-update-demo  <span class=\"comment\"># 匹配的Pod标签非常重要</span></span><br><span class=\"line\">  template:</span><br><span class=\"line\">    metadata:</span><br><span class=\"line\">      labels:</span><br><span class=\"line\">        app: configmap-update-demo</span><br><span class=\"line\">    spec:</span><br><span class=\"line\">      containers:</span><br><span class=\"line\">        - name: configmap-update-demo</span><br><span class=\"line\">          image: harbor.weiyigeek.top/<span class=\"built_in\">test</span>/nginx:v3.0</span><br><span class=\"line\">          imagePullPolicy: IfNotPresent</span><br><span class=\"line\">          volumeMounts:</span><br><span class=\"line\">          - name: config-volume </span><br><span class=\"line\">            mountPath: /usr/share/nginx/html/</span><br><span class=\"line\">      volumes:</span><br><span class=\"line\">        - name: config-volume </span><br><span class=\"line\">          configMap:</span><br><span class=\"line\">            name: file-config</span><br><span class=\"line\">EOF</span><br><span class=\"line\">$  kubectl create -f configmap-use-3.yaml</span><br><span class=\"line\">  <span class=\"comment\"># deployment.apps/configmap-update-demo created</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 查看</span></span><br><span class=\"line\">~/K8s/Day8/demo4$ kubectl get pod -o wide --show-labels</span><br><span class=\"line\">  <span class=\"comment\"># NAME                                     READY   STATUS      RESTARTS   AGE   IP             NODE         LABELS</span></span><br><span class=\"line\">  <span class=\"comment\"># configmap-env-demo                       0/1     Completed   0          25h   10.244.1.129   k8s-node-4   &lt;none&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># configmap-update-demo-597f67f4df-v82j6   1/1     Running     0          56s   10.244.1.131   k8s-node-4   app=configmap-update-demo,pod-template-hash=597f67f4df</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">~/K8s/Day8/demo4$ kubectl describe cm file-config  <span class=\"comment\"># file-config 的ConfifMap信息</span></span><br><span class=\"line\">  <span class=\"comment\"># Name:         file-config</span></span><br><span class=\"line\">  <span class=\"comment\"># Namespace:    default</span></span><br><span class=\"line\">  <span class=\"comment\"># Labels:       &lt;none&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># Annotations:  &lt;none&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># Data</span></span><br><span class=\"line\">  <span class=\"comment\"># ====</span></span><br><span class=\"line\">  <span class=\"comment\"># file.properties:</span></span><br><span class=\"line\">  <span class=\"comment\"># ----</span></span><br><span class=\"line\">  <span class=\"comment\"># file.number=2</span></span><br><span class=\"line\">  <span class=\"comment\"># file.name=file.properties</span></span><br><span class=\"line\">  <span class=\"comment\"># file.path=~/K8s/Day8/demo2/file.properties</span></span><br><span class=\"line\">  <span class=\"comment\"># file.html=configMap Test - WeiyiGeek</span></span><br><span class=\"line\">  <span class=\"comment\"># Events:  &lt;none&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (3) 验证</span></span><br><span class=\"line\">~/K8s/Day8/demo4$ kubectl <span class=\"built_in\">exec</span> `kubectl get pods -l app=configmap-update-demo -o name` -it -- sh -c <span class=\"string\">\"ls /usr/share/nginx/html\"</span></span><br><span class=\"line\">file.properties</span><br><span class=\"line\">~/K8s/Day8/demo4$ curl http://10.244.1.131/file.properties</span><br><span class=\"line\">  <span class=\"comment\"># file.number=2</span></span><br><span class=\"line\">  <span class=\"comment\"># file.name=file.properties</span></span><br><span class=\"line\">  <span class=\"comment\"># file.path=~/K8s/Day8/demo2/file.properties</span></span><br><span class=\"line\">  <span class=\"comment\"># file.html=configMap Test - WeiyiGeek</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (4) 热更新修改ConfigMap的值【使用该命令打开yaml文件进行修改】</span></span><br><span class=\"line\">~/K8s/Day8/demo4$ kubectl edit cm file-config    <span class=\"comment\"># file.add=append Text with me, and hot update!</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># configmap/file-config edited</span></span><br><span class=\"line\">~/K8s/Day8/demo4$ curl http://10.244.1.131/file.properties</span><br><span class=\"line\">~/K8s/Day8/demo4$ kubectl <span class=\"built_in\">exec</span> `kubectl get pods -l app=configmap-update-demo -o name` -it -- sh -c <span class=\"string\">\"cat /usr/share/nginx/html/file.properties\"</span></span><br><span class=\"line\">  <span class=\"comment\"># file.number=2</span></span><br><span class=\"line\">  <span class=\"comment\"># file.name=file.properties</span></span><br><span class=\"line\">  <span class=\"comment\"># file.path=/K8s/Day8/demo2/file.properties</span></span><br><span class=\"line\">  <span class=\"comment\"># file.html=configMap Test - WeiyiGeek</span></span><br><span class=\"line\">  <span class=\"comment\"># file.add=append Text with me, and hot update!</span></span><br><span class=\"line\">~/K8s/Day8/demo4$ kubectl logs configmap-update-demo </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (5) 手动更新</span></span><br><span class=\"line\"><span class=\"comment\"># PS: ConfigMap更新后Pod并不会重载这个文件，更新 ConfigMap目前并不会触发相关Pod 的滚动更新，可以通过修改 pod annotations 的方式强制触发滚动更新</span></span><br><span class=\"line\"><span class=\"comment\"># 例子中我们在 .spec.template.metadata.annotations 中添加 version/config，每次通过修改 version/config 来触发滚动更新</span></span><br><span class=\"line\"><span class=\"comment\"># 未复现成功: kubectl patch deployment my-nginx --patch '&#123;\"spec\": &#123;\"template\": &#123;\"metadata\": &#123;\"annotations\": &#123;\"version/config\": \"20200430\"&#125;&#125;&#125;&#125;&#125;' </span></span><br><span class=\"line\"><span class=\"comment\"># 错误的例子: kubectl patch deployment configmap-update-demo--patch ' &#123;\"metadata\": &#123;\"annotations\": &#123;\"deployment.kubernetes.io/revision\": \"2\"&#125;&#125;&#125;'</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>Tips : configMap 资源对象消费常用于<code>Pod环境变量消费、Pod command 中消费、Volume 中消费</code>;</p>\n<p>Tips : 非常注意更新 ConfigMap 后数据同步会有一定延迟</p>\n<ul>\n<li>1.使用该 ConfigMap 挂载的Env不会同步更新</li>\n<li>2.使用该 ConfigMap 挂载的Volume中的数据需要一段时间(实测大概10秒)才能同步更新</li>\n</ul>\n<hr>\n<h3 id=\"2-Secret\"><a href=\"#2-Secret\" class=\"headerlink\" title=\"2.Secret\"></a>2.Secret</h3><p>描述: 前面我们说过在k8s中利用<code>ConfigMap</code>控制器可以去保存配置文件以及一些数据, 这些数据可以被导入到<code>Pod内部</code>成为环境变量或者文件，从而可以达到热更新的目的, 带来便利的同时却有一定的安全问题（保存的配置以明文的形式保存的），所以密码文件、密钥文件类型的文件通过<code>ConfigMap</code>去保存就不是很合适，在k8s还有一种保存机制即<code>Secret</code>。</p>\n<p>简单的说: Secret 主要用于保存需要进行加密访问的的配置,解决了密码、token、密钥等敏感数据的配置问题，而不需要把这些敏感数据暴露到镜像或者 <code>Pod Spec</code> 中。</p>\n<p>在k8s资源清单中<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl api-resources | grep <span class=\"string\">\"secret\"</span></span><br><span class=\"line\">NAME     NAMESPACED   KIND</span><br><span class=\"line\">secrets  <span class=\"literal\">true</span>         Secret      <span class=\"comment\"># kubectl api-versions 由于没有APIGROUP则默认为v1</span></span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p><strong>Q: Secret的应用场景</strong></p>\n<blockquote>\n<p>答: Secret 可以<code>Volume卷或者环境变量</code>的方式进行消费使用。</p>\n</blockquote>\n<p><strong>Secret 的三种类型</strong></p>\n<ul>\n<li>(1) <code>Service Account</code> : 由 Kubernetes 自动创建用来访问Kubernetes API (<code>所以其访问安全至关重要常规的应用一般不涉及配置它</code>),并且会自动挂载到Pod的 /run/secrets/kubernetes.io/serviceaccount 目录中</li>\n<li>(2) <code>Opaque</code> : Base64编码格式的Secret 用来存储密码、密钥等，注意加密程度并不高。</li>\n<li>(3) <code>Kubernetes.io/dockerconfigjson</code> : 将私有仓库的登陆认证信息进行存储;</li>\n</ul>\n<p><br/></p>\n<h4 id=\"Service-Account\"><a href=\"#Service-Account\" class=\"headerlink\" title=\"Service Account\"></a>Service Account</h4><p>描述: 由Kubernetes 自动创建, 它用于访问我们的 <code>Kubernetes API</code> 并且会自动挂载到Pod的 <code>/run/secrets/kubernetes.io/serviceaccount</code> 目录中<code>注意其并不需要我们手动去管理和创建</code>。</p>\n<p>实践演示:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (0) 查看 service-account-token </span></span><br><span class=\"line\">$ kubectl get secret</span><br><span class=\"line\">  <span class=\"comment\"># NAME                  TYPE                                  DATA   AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># default-token-zglkd   kubernetes.io/service-account-token   3      11d</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (1) 查看现有的 pod</span></span><br><span class=\"line\">$ kubectl get pod configmap-update-demo-597f67f4df-v82j6</span><br><span class=\"line\">  <span class=\"comment\"># NAME                                     READY   STATUS    RESTARTS   AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># configmap-update-demo-597f67f4df-v82j6   1/1     Running   0          18h</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 进入 Pod 容器内部</span></span><br><span class=\"line\">$ kubectl <span class=\"built_in\">exec</span> configmap-update-demo-597f67f4df-v82j6 -it -- bash</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (3) 验证 /run/secrets/kubernetes.io/serviceaccount 目录中存在的文件</span></span><br><span class=\"line\">root@configmap-update-demo-597f67f4df-v82j6:/$ ls /run/secrets/kubernetes.io/serviceaccount/ &amp; <span class=\"built_in\">cd</span> <span class=\"variable\">$_</span></span><br><span class=\"line\">  <span class=\"comment\"># ca.crt      # 访问API所需的证书文件</span></span><br><span class=\"line\">  <span class=\"comment\"># namespace   # 当前Pod的名称空间</span></span><br><span class=\"line\">  <span class=\"comment\"># token       # 认证鉴权相关Token</span></span><br><span class=\"line\">root@configmap-update-demo-597f67f4df-v82j6:$ /run/secrets/kubernetes.io/serviceaccount<span class=\"comment\"># cat namespace</span></span><br><span class=\"line\">  <span class=\"comment\"># default</span></span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<h4 id=\"Opaque-Secret\"><a href=\"#Opaque-Secret\" class=\"headerlink\" title=\"Opaque Secret\"></a>Opaque Secret</h4><p>描述: Opaque <code>英 /əʊˈpeɪk/</code> Secret 类型的数据是一个 map 类型，并且要求 Value 是 Base64 编码格式;</p>\n<p>资源清单示例:<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">cat</span> <span class=\"string\">&gt; Opaque-Secret.yaml&lt;&lt;'EOF'</span></span><br><span class=\"line\"><span class=\"string\"></span><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span> </span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Secret</span> </span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">secret-test</span></span><br><span class=\"line\"><span class=\"attr\">type:</span> <span class=\"string\">Opaque</span> </span><br><span class=\"line\"><span class=\"attr\">data:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">dXNlcm5hbWU=</span></span><br><span class=\"line\"><span class=\"attr\">  pass:</span> <span class=\"string\">d2VpeWlnZWVr</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - 指定字符的base64加密</span></span><br><span class=\"line\"><span class=\"string\">~$</span> <span class=\"string\">echo</span> <span class=\"bullet\">-n</span> <span class=\"string\">\"username\"</span> <span class=\"string\">| base64</span></span><br><span class=\"line\"><span class=\"string\">dXNlcm5hbWU=</span></span><br><span class=\"line\"><span class=\"string\">~$ echo -n \"weiyigeek\" | base64</span></span><br><span class=\"line\"><span class=\"string\">d2VpeWlnZWVr</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># - 输出指定字符的base64解密形式</span></span><br><span class=\"line\"><span class=\"string\">echo -n \"d2VpeWlnZWVr\" | base64 -d  # weiyigeek</span></span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p><strong>Opaque Secret 创建与查看:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.创建</span></span><br><span class=\"line\">~/K8s/Day8/demo5$ kubectl create -f Opaque-Secret.yaml</span><br><span class=\"line\">  <span class=\"comment\"># secret/secret-test created</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.查看当前系统中已创建的secret</span></span><br><span class=\"line\">~/K8s/Day8/demo5$ kubectl get secret</span><br><span class=\"line\">  <span class=\"comment\"># NAME                  TYPE                                  DATA   AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># basic-auth            Opaque                                1      2d1h</span></span><br><span class=\"line\">  <span class=\"comment\"># default-token-zglkd   kubernetes.io/service-account-token   3      11d</span></span><br><span class=\"line\">  <span class=\"comment\"># secret-test           Opaque                                2      63s</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.查看</span></span><br><span class=\"line\">~/K8s/Day8/demo5$ kubectl describe secret secret-test</span><br><span class=\"line\">  <span class=\"comment\"># Name:         secret-test</span></span><br><span class=\"line\">  <span class=\"comment\"># Namespace:    default</span></span><br><span class=\"line\">  <span class=\"comment\"># Labels:       &lt;none&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># Annotations:  &lt;none&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Type:  Opaque</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Data</span></span><br><span class=\"line\">  <span class=\"comment\"># ====</span></span><br><span class=\"line\">  <span class=\"comment\"># name:  8 bytes</span></span><br><span class=\"line\">  <span class=\"comment\"># pass:  9 bytes</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>下面演示 Opaque Secret 在实际环境中的两种使用方式;</strong></p>\n<ul>\n<li>1) 将Secret挂载到<code>Volume</code>中将会生成文件</li>\n<li>2) 将Secret导出到<code>环境变量(env)</code>中以供脚本使用</li>\n</ul>\n<p>资源清单示例:<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">cat</span> <span class=\"string\">&gt; opaque-Secret-1.yaml&lt;&lt;'EOF'</span></span><br><span class=\"line\"><span class=\"string\"># 1) Volume 挂载使用</span></span><br><span class=\"line\"><span class=\"string\"></span><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span>   <span class=\"comment\"># 注意点: Pod 是 v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Pod</span> </span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">seret-test-1</span></span><br><span class=\"line\"><span class=\"attr\">  labels:</span></span><br><span class=\"line\"><span class=\"attr\">    name:</span> <span class=\"string\">seret-test-1</span> </span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  volumes:</span>    </span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">secrets</span>    <span class=\"comment\"># 关键点</span></span><br><span class=\"line\"><span class=\"attr\">    secret:</span></span><br><span class=\"line\"><span class=\"attr\">      secretName:</span> <span class=\"string\">secret-test</span> </span><br><span class=\"line\"><span class=\"attr\">  containers:</span></span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">seret-test-1</span>  </span><br><span class=\"line\"><span class=\"attr\">    image:</span> <span class=\"string\">harbor.weiyigeek.top/test/busbox:latest</span></span><br><span class=\"line\"><span class=\"attr\">    command:</span> <span class=\"string\">[</span> <span class=\"string\">\"/bin/sh\"</span><span class=\"string\">,</span> <span class=\"string\">\"-c\"</span><span class=\"string\">,</span> <span class=\"string\">\"ls /etc/secrets;  sleep 700\"</span> <span class=\"string\">]</span></span><br><span class=\"line\"><span class=\"attr\">    imagePullPolicy:</span> <span class=\"string\">IfNotPresent</span></span><br><span class=\"line\"><span class=\"attr\">    volumeMounts:</span></span><br><span class=\"line\"><span class=\"attr\">    - name:</span> <span class=\"string\">secrets</span> </span><br><span class=\"line\"><span class=\"attr\">      mountPath:</span> <span class=\"string\">\"/etc/secrets\"</span>  <span class=\"comment\"># 关键点挂载到此目录之中</span></span><br><span class=\"line\"><span class=\"attr\">      readOnly:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"comment\"># 2) enviroment 环境变量使用</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">apps/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Deployment</span> </span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">seret-test-2</span>      <span class=\"comment\"># 元数据名称</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  replicas:</span> <span class=\"number\">2</span> </span><br><span class=\"line\"><span class=\"attr\">  selector:</span>                  <span class=\"comment\"># 注意它是在Deployment控制器中需要依赖的</span></span><br><span class=\"line\"><span class=\"attr\">    matchLabels:</span>  </span><br><span class=\"line\"><span class=\"attr\">      app:</span> <span class=\"string\">seret-test-2</span>  <span class=\"comment\"># 匹配的Pod标签非常重要</span></span><br><span class=\"line\"><span class=\"attr\">  template:</span></span><br><span class=\"line\"><span class=\"attr\">    metadata:</span></span><br><span class=\"line\"><span class=\"attr\">      labels:</span></span><br><span class=\"line\"><span class=\"attr\">        app:</span> <span class=\"string\">seret-test-2</span></span><br><span class=\"line\"><span class=\"attr\">    spec:</span></span><br><span class=\"line\"><span class=\"attr\">      containers:</span></span><br><span class=\"line\"><span class=\"attr\">      - name:</span> <span class=\"string\">seret-test-2</span></span><br><span class=\"line\"><span class=\"attr\">        image:</span> <span class=\"string\">harbor.weiyigeek.top/test/busbox:latest</span></span><br><span class=\"line\"><span class=\"attr\">        imagePullPolicy:</span> <span class=\"string\">IfNotPresent</span></span><br><span class=\"line\"><span class=\"attr\">        command:</span> <span class=\"string\">[</span> <span class=\"string\">\"/bin/sh\"</span><span class=\"string\">,</span> <span class=\"string\">\"-c\"</span><span class=\"string\">,</span> <span class=\"string\">\"env; echo Name: $&#123;USERNAME&#125;, Pass: $&#123;PASSWORD&#125;; sleep 700\"</span> <span class=\"string\">]</span></span><br><span class=\"line\"><span class=\"attr\">        env:</span>              <span class=\"comment\"># 环境变量设置</span></span><br><span class=\"line\"><span class=\"attr\">        - name:</span> <span class=\"string\">USERNAME</span></span><br><span class=\"line\"><span class=\"attr\">          valueFrom:</span>      <span class=\"comment\"># Value 来源</span></span><br><span class=\"line\"><span class=\"attr\">            secretKeyRef:</span>   <span class=\"comment\"># 关键点：上面我们接触过 configMapKeyRef ，此处是 secretKeyRef</span></span><br><span class=\"line\"><span class=\"attr\">              name:</span> <span class=\"string\">secret-test</span> </span><br><span class=\"line\"><span class=\"attr\">              key:</span> <span class=\"string\">name</span> </span><br><span class=\"line\"><span class=\"attr\">        - name:</span> <span class=\"string\">PASSWORD</span> </span><br><span class=\"line\"><span class=\"attr\">          valueFrom:</span></span><br><span class=\"line\"><span class=\"attr\">            secretKeyRef:</span></span><br><span class=\"line\"><span class=\"attr\">              name:</span> <span class=\"string\">secret-test</span></span><br><span class=\"line\"><span class=\"attr\">              key:</span> <span class=\"string\">pass</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure></p>\n<p>操作流程:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 创建</span></span><br><span class=\"line\">~/K8s/Day8/demo5$ kubectl create -f opaque-Secret-1.yaml</span><br><span class=\"line\">  <span class=\"comment\"># pod/seret-test-1 created</span></span><br><span class=\"line\">  <span class=\"comment\"># deployment.apps/seret-test-2 created</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 查看</span></span><br><span class=\"line\">~/K8s/Day8/demo5$ kubectl get pod -o wide --show-labels</span><br><span class=\"line\">  <span class=\"comment\"># NAME                            READY   STATUS    RESTARTS   AGE   IP             NODE         LABELS</span></span><br><span class=\"line\">  <span class=\"comment\"># seret-test-1                    1/1     Running   0          24s   10.244.2.6     k8s-node-5   name=seret-test-1</span></span><br><span class=\"line\">  <span class=\"comment\"># seret-test-2-5bffbffc7d-444db   1/1     Running   0          24s   10.244.1.134   k8s-node-4   app=seret-test-2,pod-template-hash=5bffbffc7d</span></span><br><span class=\"line\">  <span class=\"comment\"># seret-test-2-5bffbffc7d-c5mqv   1/1     Running   0          24s   10.244.2.5     k8s-node-5   app=seret-test-2,pod-template-hash=5bffbffc7d</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (3) 验证</span></span><br><span class=\"line\"><span class=\"comment\"># - Volument</span></span><br><span class=\"line\">~/K8s/Day8/demo5$ kubectl logs seret-test-1</span><br><span class=\"line\">  <span class=\"comment\"># name</span></span><br><span class=\"line\">  <span class=\"comment\"># pass</span></span><br><span class=\"line\">~/K8s/Day8/demo5$ kubectl <span class=\"built_in\">exec</span> seret-test-1 -- sh -c <span class=\"string\">\"cat /etc/secrets/pass\"</span></span><br><span class=\"line\">  <span class=\"comment\"># weiyigeek</span></span><br><span class=\"line\">~/K8s/Day8/demo5$ kubectl <span class=\"built_in\">exec</span> -it seret-test-1 -- sh</span><br><span class=\"line\">  <span class=\"comment\"># / # cd /etc/secrets/ &amp;  ls</span></span><br><span class=\"line\">  <span class=\"comment\"># name  pass                      # 关键点: Key成为了文件名称，而Value成为的文件内容</span></span><br><span class=\"line\">  <span class=\"comment\"># /etc/secrets # cat name</span></span><br><span class=\"line\">  <span class=\"comment\"># /etc/secrets # cat pass</span></span><br><span class=\"line\">  <span class=\"comment\"># weiyigeek</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - environment</span></span><br><span class=\"line\">~/K8s/Day8/demo5$ kubectl logs seret-test-2-5bffbffc7d-444db</span><br><span class=\"line\">  <span class=\"comment\"># KUBERNETES_SERVICE_PORT=443</span></span><br><span class=\"line\">  <span class=\"comment\"># KUBERNETES_PORT=tcp://10.96.0.1:443</span></span><br><span class=\"line\">  <span class=\"comment\"># HOSTNAME=seret-test-2-5bffbffc7d-444db</span></span><br><span class=\"line\">  <span class=\"comment\"># SHLVL=1</span></span><br><span class=\"line\">  <span class=\"comment\"># HOME=/root</span></span><br><span class=\"line\">  <span class=\"comment\"># USERNAME=username</span></span><br><span class=\"line\">  <span class=\"comment\"># KUBERNETES_PORT_443_TCP_ADDR=10.96.0.1</span></span><br><span class=\"line\">  <span class=\"comment\"># PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span></span><br><span class=\"line\">  <span class=\"comment\"># KUBERNETES_PORT_443_TCP_PORT=443</span></span><br><span class=\"line\">  <span class=\"comment\"># KUBERNETES_PORT_443_TCP_PROTO=tcp</span></span><br><span class=\"line\">  <span class=\"comment\"># KUBERNETES_SERVICE_PORT_HTTPS=443</span></span><br><span class=\"line\">  <span class=\"comment\"># KUBERNETES_PORT_443_TCP=tcp://10.96.0.1:443</span></span><br><span class=\"line\">  <span class=\"comment\"># KUBERNETES_SERVICE_HOST=10.96.0.1</span></span><br><span class=\"line\">  <span class=\"comment\"># PWD=/</span></span><br><span class=\"line\">  <span class=\"comment\"># PASSWORD=weiyigeek</span></span><br><span class=\"line\">  <span class=\"comment\"># Name: username, Pass: weiyigeek</span></span><br><span class=\"line\">~/K8s/Day8/demo5$ kubectl logs seret-test-2-5bffbffc7d-c5mqv | egrep <span class=\"string\">\"username|weiyigeek\"</span></span><br><span class=\"line\">  <span class=\"comment\"># USERNAME=username</span></span><br><span class=\"line\">  <span class=\"comment\"># PASSWORD=weiyigeek</span></span><br><span class=\"line\">  <span class=\"comment\"># Name: username, Pass: weiyigeek</span></span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<h4 id=\"kubernetes-io-dockerconfigjson\"><a href=\"#kubernetes-io-dockerconfigjson\" class=\"headerlink\" title=\"kubernetes.io/dockerconfigjson\"></a>kubernetes.io/dockerconfigjson</h4><p>描述: 它可以设置我们私有镜像仓库信息帮助我们在没有进行<code>docker login</code>的Node节点上也可以拉取私有镜像;</p>\n<p>演示示例:<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 使用Kuberctl 创建docker registry 认证的 secret</span></span><br><span class=\"line\"><span class=\"string\">kuberctl</span> <span class=\"string\">create</span> <span class=\"string\">secret</span> <span class=\"string\">docker-registry</span> <span class=\"string\">private-registry-key</span> <span class=\"string\">\\</span></span><br><span class=\"line\"><span class=\"bullet\">-</span><span class=\"bullet\">-docker-server=harbor.weiyigeel.top</span> <span class=\"string\">\\</span></span><br><span class=\"line\"><span class=\"bullet\">-</span><span class=\"bullet\">-docker-username=weiyigeek</span> <span class=\"string\">\\</span></span><br><span class=\"line\"><span class=\"bullet\">-</span><span class=\"bullet\">-docker-password=Harbor12345</span> <span class=\"string\">\\</span></span><br><span class=\"line\"><span class=\"bullet\">-</span><span class=\"bullet\">-docker-email=master@weiyigeek.top</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 资源清单: kubernetes.io/dockerconfigjson 之 Secret 的 引用;</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span> </span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Pod</span> </span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">docker-config-json</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  containers:</span></span><br><span class=\"line\"><span class=\"attr\">    - name:</span> <span class=\"string\">busybox</span></span><br><span class=\"line\"><span class=\"attr\">      image:</span> <span class=\"string\">harbor.weiyigeel.top/private/busybox:v1.0</span>  <span class=\"comment\"># 拉取的私有镜像</span></span><br><span class=\"line\"><span class=\"attr\">  imagePullSecrets:</span>               <span class=\"comment\"># 关键点: 通过 imagePullSecrets 来引用刚创建的`private-registry-key `</span></span><br><span class=\"line\"><span class=\"attr\">    - name:</span> <span class=\"string\">private-registry-key</span>  <span class=\"comment\"># 创建的 docker-registry 类型 secret 的名称</span></span><br></pre></td></tr></table></figure></p>\n<hr>\n<h3 id=\"3-Volume\"><a href=\"#3-Volume\" class=\"headerlink\" title=\"3.Volume\"></a>3.Volume</h3><p>描述: 由于容器磁盘上文件的生命周期是短暂的，这就使得在容器中运行重要应用时会出现一些问题。</p>\n<p>首先当容器崩溃时kubelet会重启它，但是容器中的文件将丢失,容器以干净的状态(镜像最初的状态)重新启动。其次，在Pod 中同时运行多个容器时，这些容器之间通常需要共享文件。</p>\n<p>Kubernetes 中的 Volume 抽象就很好的解决了这些问题。</p>\n<ul>\n<li>Volume 生命周期 : Kubernetes中的卷有明确的寿命与封装它的Pod相同, 所以卷的生命比 Pod 中的所有容器都长</li>\n<li>Volume 作用 : 当这个容器重启时数据仍然得以保存, 注意<code>当 Pod不再存在时卷也将不复存在</code>, 也许更重要的是Kubernetes支持多种类型的卷，Pod 可以同时使用任意数量的卷。</li>\n</ul>\n<p>PS : 在 Docker 中如果 <code>restartPolicy</code> 设置为always时容器因docker崩溃重启时将会保留数据，但是<code>在K8s中并不会这样所以我们需要用到持久卷保证容器中指定数据的留存</code>;</p>\n<p>下面实践中讲解一些经常使用以及后续遇到的一些卷配置使用:</p>\n<p><br/></p>\n<h4 id=\"emptyDir-空卷\"><a href=\"#emptyDir-空卷\" class=\"headerlink\" title=\"emptyDir - 空卷\"></a>emptyDir - 空卷</h4><p>描述: 正如卷的名字所述它最初是空的，其作用是可以在不同的容器中相同或者不同路径进行文件共享，当 Pod 被分配给节点时，首先创建 emptyDir 卷，并且只要该 Pod 在该节点上运行该卷就会存在，Pod中的容器可以读取和写入 emptyDir 卷中的相同文件，但是<code>当出于任何原因从节点中删除Pod时,emptyDir 中的数据也将被永久删除</code>;</p>\n<p><strong>emptyDir 使用场景：</strong></p>\n<ul>\n<li>1.Pod 内多容器共享目录，例如一个Pod内的多个Container共享一个目录(<code>生产者 &lt;-&gt; 消费者</code>)</li>\n<li>2.暂存空间(临时目录), 例如用于基于磁盘的合并排序，用作长时间计算崩溃恢复时的检查点(<code>即该目录无需持久化保留</code>)</li>\n<li>3.Web服务器容器提供数据时，保存内容管理器容器提取的文件</li>\n</ul>\n<p>PS : 容器崩溃不会从节点中移除 pod,因此 <code>emptyDir</code>卷中的数据在容器崩溃时是安全的;</p>\n<p>资源清单示例:<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">cat</span> <span class=\"string\">&gt; emptydir-demo-1.yaml&lt;&lt;'EOF'</span></span><br><span class=\"line\"><span class=\"string\"># 1) Volume 挂载使用</span></span><br><span class=\"line\"><span class=\"string\"></span><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span>   <span class=\"comment\"># 注意点: Pod 是 v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Pod</span> </span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">emptydir-test-1</span></span><br><span class=\"line\"><span class=\"attr\">  labels:</span></span><br><span class=\"line\"><span class=\"attr\">    name:</span> <span class=\"string\">emptydir-test-1</span> </span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  volumes:</span>    </span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">cachedir</span>          <span class=\"comment\"># 关键点卷名称</span></span><br><span class=\"line\"><span class=\"attr\">    emptyDir:</span> <span class=\"string\">&#123;&#125;</span>            <span class=\"comment\"># 使用空卷</span></span><br><span class=\"line\"><span class=\"attr\">  containers:</span></span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">emptydir-pod-1</span>  </span><br><span class=\"line\"><span class=\"attr\">    image:</span> <span class=\"string\">harbor.weiyigeek.top/test/busbox:latest</span></span><br><span class=\"line\"><span class=\"attr\">    command:</span> <span class=\"string\">[</span> <span class=\"string\">\"/bin/sh\"</span><span class=\"string\">,</span> <span class=\"string\">\"-c\"</span><span class=\"string\">,\"sleep</span> <span class=\"number\">700</span><span class=\"string\">\" ]</span></span><br><span class=\"line\"><span class=\"string\">    imagePullPolicy: IfNotPresent</span></span><br><span class=\"line\"><span class=\"string\">    volumeMounts:</span></span><br><span class=\"line\"><span class=\"string\">    - name: cachedir            # 引用卷配置名称</span></span><br><span class=\"line\"><span class=\"string\">      mountPath: \"</span><span class=\"string\">/cache/pod1\"</span>  <span class=\"comment\"># 挂载空卷到此目录之中</span></span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">emptydir-pod-2</span>  </span><br><span class=\"line\"><span class=\"attr\">    image:</span> <span class=\"string\">harbor.weiyigeek.top/test/busbox:latest</span></span><br><span class=\"line\"><span class=\"attr\">    command:</span> <span class=\"string\">[</span> <span class=\"string\">\"/bin/sh\"</span><span class=\"string\">,</span> <span class=\"string\">\"-c\"</span><span class=\"string\">,\"sleep</span> <span class=\"number\">700</span><span class=\"string\">\" ]</span></span><br><span class=\"line\"><span class=\"string\">    imagePullPolicy: IfNotPresent</span></span><br><span class=\"line\"><span class=\"string\">    volumeMounts:</span></span><br><span class=\"line\"><span class=\"string\">    - name: cachedir </span></span><br><span class=\"line\"><span class=\"string\">      mountPath: \"</span><span class=\"string\">/cache/pod2\"</span>  <span class=\"comment\"># 挂载空卷到此目录之中</span></span><br><span class=\"line\"><span class=\"attr\">  restartPolicy:</span> <span class=\"string\">Never</span>  </span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure></p>\n<p>操作流程:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 创建</span></span><br><span class=\"line\">~/K8s/Day8/demo6$ kubectl create -f emptydir-demo-1.yaml</span><br><span class=\"line\">  <span class=\"comment\"># pod/emptydir-test-1 created</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 查看</span></span><br><span class=\"line\">~/K8s/Day8/demo6$ kubectl get pod -o wide --show-labels</span><br><span class=\"line\">  <span class=\"comment\"># NAME                            READY   STATUS    RESTARTS   AGE   IP             NODE         LABELS</span></span><br><span class=\"line\">  <span class=\"comment\"># emptydir-test-1                 2/2     Running   0          16s   10.244.2.9     k8s-node-5   name=emptydir-test-1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (3) 验证(分别在一个Pod的两个容器中查看创建追加的内容)</span></span><br><span class=\"line\">weiyigeek@ubuntu:~$ kubectl <span class=\"built_in\">exec</span> emptydir-test-1 -c emptydir-pod-1 -it -- sh <span class=\"comment\"># emptydir-pod-1</span></span><br><span class=\"line\">/ <span class=\"comment\"># echo $HOSTNAME</span></span><br><span class=\"line\">  <span class=\"comment\"># emptydir-test-1</span></span><br><span class=\"line\">/ <span class=\"comment\"># echo $HOSTNAME-$(date) &gt; /cache/pod1/time.log</span></span><br><span class=\"line\">/ <span class=\"comment\"># cat /cache/pod1/time.log</span></span><br><span class=\"line\">emptydir-test-1-Wed Nov 18 03:43:48 UTC 2020</span><br><span class=\"line\">/ <span class=\"comment\"># exit</span></span><br><span class=\"line\">weiyigeek@ubuntu:~$ kubectl <span class=\"built_in\">exec</span> emptydir-test-1 -c emptydir-pod-2 -it -- sh -c <span class=\"string\">\"echo <span class=\"variable\">$HOSTNAME</span>-<span class=\"variable\">$(date)</span> &gt;&gt; /cache/pod2/time.log\"</span> <span class=\"comment\"># emptydir-pod-2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在两个容器不同的目录实际指向的是同一个文件(内部通过 `/cache/pod1/` 与 `/cache/pod2/` 进行消费)</span></span><br><span class=\"line\">weiyigeek@ubuntu:~$ kubectl <span class=\"built_in\">exec</span> emptydir-test-1 -c emptydir-pod-1 -it -- sh -c <span class=\"string\">\"cat /cache/pod1/time.log\"</span></span><br><span class=\"line\">weiyigeek@ubuntu:~$ kubectl <span class=\"built_in\">exec</span> emptydir-test-1 -c emptydir-pod-2 -it -- sh -c <span class=\"string\">\"cat /cache/pod2/time.log\"</span></span><br><span class=\"line\">  <span class=\"comment\"># emptydir-test-1-Wed Nov 18 03:43:48 UTC 2020</span></span><br><span class=\"line\">  <span class=\"comment\"># ubuntu-Wed 18 Nov 2020 11:44:41 AM CST</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (4) 删除pod则emptyDir失效(正对于deployment创建的Pod是在deployment删除时候失效)</span></span><br><span class=\"line\">$ kubectl delete pod emptydir-test-1</span><br><span class=\"line\">pod <span class=\"string\">\"emptydir-test-1\"</span> deleted</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h4 id=\"hostPath-主机路径卷\"><a href=\"#hostPath-主机路径卷\" class=\"headerlink\" title=\"hostPath - 主机路径卷\"></a>hostPath - 主机路径卷</h4><p>描述：与emptyDir方式直接将目录或者文件写在Container内部不同，hostPath 卷将主机节点(宿主机)的文件系统(<code>FileSystem</code>)中的文件或目录<code>挂载到集群(Cluster)中</code>类似于docker中使用的 <code>-v 宿主机目录:容器挂载目录</code>, 使用其的好处是可以与任何存储进行对接使用;</p>\n<p><strong>hostPath 与 emptyDir 比较</strong></p>\n<ul>\n<li>(1) emptyDir 直接将目录或者文件写在Container内部, 而 HostPath 可以使用<code>宿主机的高速文件系统</code>以及更好的持久化;</li>\n<li>(2) emptyDir 被限制在一个Pod共享文件或目录中, 而 HostPath 可以实现跨Pod共享;</li>\n</ul>\n<p><strong>hostPath 使用场景:</strong></p>\n<ul>\n<li>1.运行需要访问 Docker 内部的容器(<code>即容器内部使用容器</code>), 例如使用 <code>/var/lib/docker 以及 /var/run/docker.sock</code> 的 hostPath以及依赖挂载的方式;</li>\n<li>2.在容器中运行 cAdvisor, 使用 /dev/cgroups 的 hostPath;</li>\n<li>3.同一个宿主机跨Pod共享文件或者;</li>\n</ul>\n<p><br/></p>\n<p>Tips: 允许 pod 指定给定的 hostPath 是否应该在 pod 运行之前存在，是否应该创建以及它应该以什么形式存在(除了所需的 path 属性之外，用户还可以为 hostPath 卷指定 type);</p>\n<p><strong>hostPath 卷指定 type 类型说明:</strong></p>\n<ul>\n<li>空字符串  :  (默认)用于向后兼容，这意味着在挂载 hostPath 卷之前不会执行任何检查。</li>\n<li>DirectoryOrCreate : 如果在给定的路径上没有任何东西存在，那么将根据需要在那里创建一个空目录，权限设置为0755,与Kubelet 具有相同的组和所有权。</li>\n<li>Directory : 给定的路径下必须存在目录</li>\n<li>FileOrCreate : 如果在给定的路径上没有任何东西存在，那么会根据需要创建一个空文件，权限设置为0644，与Kubelet具有相同的组和所有权。</li>\n<li>File : 给定的路径下必须存在文件</li>\n<li>Socket : 给定的路径下必须存在UNIX套接字</li>\n<li>CharDevic : 给定的路径下必须存在字符设备</li>\n<li>BlockDevice :  给定的路径下必须存在块设备</li>\n</ul>\n<p><br/></p>\n<p><strong>注意事项:</strong></p>\n<ul>\n<li>1.由于每个节点上的文件都不同，具有相同配置(<code>例如从 podTemplate 创建的</code>)的pod在不同节点上的行为<code>可能会导致访问的结果不一致</code>；</li>\n<li>2.当Kubernetes 按照计划添加资源感知调度时，将无法考虑 hostPath 使用的资源；</li>\n<li>3.在底层主机上创建的文件或目录只能由 root 写入或者其他可读可写用户。您需要在特权容器中以 root 身份运行进程或修改主机上的文件权限以便写入 hostPath 卷；</li>\n<li>4.hostPath使用宿主机Qutoa不会纳入或记录到k8s的资源管理配额管理中;</li>\n</ul>\n<p><br/></p>\n<p><strong>资源清单示例:</strong><br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">cat</span> <span class=\"string\">&gt; hostPath-demo.yaml&lt;&lt;'EOF'</span></span><br><span class=\"line\"><span class=\"string\"></span><span class=\"attr\">apiVersion:</span> <span class=\"string\">apps/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Deployment</span> </span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">hostpath-test-1</span>      <span class=\"comment\"># 元数据名称</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  replicas:</span> <span class=\"number\">2</span> </span><br><span class=\"line\"><span class=\"attr\">  selector:</span>                  <span class=\"comment\"># 注意它是在Deployment控制器中需要依赖的</span></span><br><span class=\"line\"><span class=\"attr\">    matchLabels:</span>  </span><br><span class=\"line\"><span class=\"attr\">      app:</span> <span class=\"string\">hostpath-test-1</span>   <span class=\"comment\"># 匹配的Pod标签非常重要</span></span><br><span class=\"line\"><span class=\"attr\">  template:</span></span><br><span class=\"line\"><span class=\"attr\">    metadata:</span></span><br><span class=\"line\"><span class=\"attr\">      labels:</span></span><br><span class=\"line\"><span class=\"attr\">        app:</span> <span class=\"string\">hostpath-test-1</span></span><br><span class=\"line\"><span class=\"attr\">    spec:</span></span><br><span class=\"line\"><span class=\"attr\">      volumes:</span>                <span class=\"comment\"># volumes 关键点</span></span><br><span class=\"line\"><span class=\"attr\">      - name:</span> <span class=\"string\">test-volume</span> </span><br><span class=\"line\"><span class=\"attr\">        hostPath:</span>             <span class=\"comment\"># 采用 hostPath 类型的卷</span></span><br><span class=\"line\"><span class=\"attr\">          type:</span> <span class=\"string\">DirectoryOrCreate</span>    <span class=\"comment\"># 卷类型此处选择如果DirectoryOrCreate如何子节点上没有该目录便会进行创建</span></span><br><span class=\"line\"><span class=\"attr\">          path:</span> <span class=\"string\">/data</span>                <span class=\"comment\"># 各主机节点上已存在的目录</span></span><br><span class=\"line\"><span class=\"attr\">      containers:</span></span><br><span class=\"line\"><span class=\"attr\">      - name:</span> <span class=\"string\">hostpath-test</span></span><br><span class=\"line\"><span class=\"attr\">        image:</span> <span class=\"string\">harbor.weiyigeek.top/test/busbox:latest</span></span><br><span class=\"line\"><span class=\"attr\">        imagePullPolicy:</span> <span class=\"string\">IfNotPresent</span></span><br><span class=\"line\"><span class=\"attr\">        command:</span> <span class=\"string\">[</span> <span class=\"string\">\"/bin/sh\"</span><span class=\"string\">,</span> <span class=\"string\">\"-c\"</span><span class=\"string\">,</span> <span class=\"string\">\"sleep 700\"</span> <span class=\"string\">]</span></span><br><span class=\"line\"><span class=\"attr\">        volumeMounts:</span>     </span><br><span class=\"line\"><span class=\"attr\">        - name:</span> <span class=\"string\">test-volume</span>  <span class=\"comment\"># 挂载指定卷目录</span></span><br><span class=\"line\"><span class=\"attr\">          mountPath:</span> <span class=\"string\">/disk/hostpath/</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure></p>\n<p>Tips : Deployment 不支持 restartPolicy: Never 其参数选项必须是 Always</p>\n<p><strong>操作流程:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 创建Pod资源</span></span><br><span class=\"line\">$ kubectl create -f hostPath-demo.yaml</span><br><span class=\"line\">  <span class=\"comment\"># deployment.apps/hostpath-test-1 created</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 查看创建的Pod</span></span><br><span class=\"line\">~/K8s/Day8/demo6$ kubectl get pod -o wide --show-labels</span><br><span class=\"line\">  <span class=\"comment\"># NAME                               READY   STATUS    RESTARTS   AGE   IP             NODE        LABELS</span></span><br><span class=\"line\">  <span class=\"comment\"># hostpath-test-1-785b9544b9-n5vcz   1/1     Running   0          43s   10.244.1.137   k8s-node-4  app=hostpath-test-1,pod-template-hash=785b9544b9</span></span><br><span class=\"line\">  <span class=\"comment\"># hostpath-test-1-785b9544b9-sv2wh   1/1     Running   0          44s   10.244.2.11    k8s-node-5  app=hostpath-test-1,pod-template-hash=785b9544b9</span></span><br><span class=\"line\">~/K8s/Day8/demo6$ kubectl describe pod hostpath-test-1-785b9544b9-sv2wh</span><br><span class=\"line\">  <span class=\"comment\"># Events:</span></span><br><span class=\"line\">  <span class=\"comment\">#   Type    Reason     Age   From               Message</span></span><br><span class=\"line\">  <span class=\"comment\">#   ----    ------     ----  ----               -------</span></span><br><span class=\"line\">  <span class=\"comment\">#   Normal  Scheduled  102s  default-scheduler  Successfully assigned default/hostpath-test-1-785b9544b9-sv2wh to k8s-node-5</span></span><br><span class=\"line\">  <span class=\"comment\">#   Normal  Pulled     102s  kubelet            Container image \"harbor.weiyigeek.top/test/busbox:latest\" already present on machine</span></span><br><span class=\"line\">  <span class=\"comment\">#   Normal  Created    101s  kubelet            Created container hostpath-test</span></span><br><span class=\"line\">  <span class=\"comment\">#   Normal  Started    101s  kubelet            Started container hostpath-test</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (3) 测试Pod与宿主机间共享的目录和文件</span></span><br><span class=\"line\">$ kubectl <span class=\"built_in\">exec</span> -it hostpath-test-1-785b9544b9-n5vcz -- sh   <span class=\"comment\"># Node-4</span></span><br><span class=\"line\">/ $ <span class=\"built_in\">echo</span> $(id)-$(date)-$(<span class=\"built_in\">pwd</span>) &gt; /disk/hostpath/hostpath.log</span><br><span class=\"line\">/ $ cat /disk/hostpath/hostpath.log</span><br><span class=\"line\">  <span class=\"comment\"># uid=0(root) gid=0(root) groups=0(root)-Wed 18 Nov 2020 01:34:51 PM CST-/root</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ kubectl <span class=\"built_in\">exec</span> -it hostpath-test-1-785b9544b9-sv2wh -- sh    <span class=\"comment\"># Node-5</span></span><br><span class=\"line\">/ $ <span class=\"built_in\">echo</span> <span class=\"variable\">$HOSTNAME</span>-$(date)-$(<span class=\"built_in\">pwd</span>) &gt;&gt; /disk/hostpath/hostpath.log</span><br><span class=\"line\">/ $ cat /disk/hostpath/hostpath.log</span><br><span class=\"line\">  <span class=\"comment\"># hostpath-test-1-785b9544b9-sv2wh-Wed Nov 18 08:20:42 UTC 2020-/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (4) 验证(由于hostPath是各个节点的指定目录他们是独立存在的，除非所有的节点挂载的同一块NFS指向同一个目录除外)</span></span><br><span class=\"line\"><span class=\"comment\"># Pod 容器</span></span><br><span class=\"line\">kubectl <span class=\"built_in\">exec</span> pod/hostpath-test-1-785b9544b9-n5vcz -it -- sh -c <span class=\"string\">\"cat /disk/hostpath/hostpath.log\"</span>  <span class=\"comment\"># Node 4</span></span><br><span class=\"line\"><span class=\"comment\"># uid=0(root) gid=0(root) groups=10(wheel)-Wed Nov 18 06:40:20 UTC 2020-/disk/hostpath</span></span><br><span class=\"line\">kubectl <span class=\"built_in\">exec</span> pod/hostpath-test-1-785b9544b9-sv2wh -it -- sh  -c <span class=\"string\">\"cat /disk/hostpath/hostpath.log\"</span>   <span class=\"comment\"># Node 5</span></span><br><span class=\"line\"><span class=\"comment\"># hostpath-test-1-785b9544b9-sv2wh-Wed Nov 18 08:20:42 UTC 2020-/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 主机文件(各节点主机如果目录不存在分别创建一个目录存放分配Pod的hostpath卷的数据文件)</span></span><br><span class=\"line\">weiyigeek@Ubuntu-PC:~$ ansible k8s-node-4 -a <span class=\"string\">\"cat /data/hostpath.log\"</span></span><br><span class=\"line\">  <span class=\"comment\"># k8s-node-4 | CHANGED | rc=0 &gt;&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># uid=0(root) gid=0(root) groups=10(wheel)-Wed Nov 18 06:40:20 UTC 2020-/disk/hostpath</span></span><br><span class=\"line\">weiyigeek@Ubuntu-PC:~$ ansible k8s-node-5 -a <span class=\"string\">\"cat /data/hostpath.log\"</span></span><br><span class=\"line\">  <span class=\"comment\"># k8s-node-5 | CHANGED | rc=0 &gt;&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># hostpath-test-1-785b9544b9-sv2wh-Wed Nov 18 08:20:42 UTC 2020-/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (5) 测试删除(重启)Pod中Volume卷中的数据是否保留</span></span><br><span class=\"line\">$ kubectl delete pod --all</span><br><span class=\"line\">  <span class=\"comment\"># pod \"hostpath-test-1-785b9544b9-n5vcz\" deleted</span></span><br><span class=\"line\">  <span class=\"comment\"># pod \"hostpath-test-1-785b9544b9-sv2wh\" deleted</span></span><br><span class=\"line\">$ kubectl get pod -o wide  <span class=\"comment\"># 由于我们设置的replicas副本期望值为2所以又会进行重建Pod</span></span><br><span class=\"line\">  <span class=\"comment\"># NAME                               READY   STATUS    RESTARTS   AGE     IP             NODE         NOMINATED NODE   READINESS GATES</span></span><br><span class=\"line\">  <span class=\"comment\"># hostpath-test-1-785b9544b9-h5dbw   1/1     Running   0          3m11s   10.244.1.138   k8s-node-4   &lt;none&gt;           &lt;none&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># hostpath-test-1-785b9544b9-hnngk   1/1     Running   0          3m11s   10.244.2.12    k8s-node-5   &lt;none&gt;           &lt;none&gt;</span></span><br><span class=\"line\">$ kubectl get pod -o name</span><br><span class=\"line\">kubectl <span class=\"built_in\">exec</span> pod/hostpath-test-1-785b9544b9-h5dbw -it -- sh -c <span class=\"string\">\"cat /disk/hostpath/hostpath.log\"</span> 0 <span class=\"comment\"># 数据依然存在</span></span><br><span class=\"line\">  <span class=\"comment\"># uid=0(root) gid=0(root) groups=10(wheel)-Wed Nov 18 06:40:20 UTC 2020-/disk/hostpath</span></span><br><span class=\"line\">kubectl <span class=\"built_in\">exec</span> pod/hostpath-test-1-785b9544b9-hnngk -it -- sh -c <span class=\"string\">\"cat /disk/hostpath/hostpath.log\"</span>  <span class=\"comment\"># 数据依然存在</span></span><br><span class=\"line\">  <span class=\"comment\"># hostpath-test-1-785b9544b9-sv2wh-Wed Nov 18 08:20:42 UTC 2020-/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (6) 删除deployment资源控制器，此时各节点中/data的数据并不会随着资源控制器的删除而删除;</span></span><br><span class=\"line\">$ kubectl delete deploy hostpath-test-1</span><br><span class=\"line\"><span class=\"comment\"># deployment.apps \"hostpath-test-1\" deleted</span></span><br></pre></td></tr></table></figure></p>\n<p>Tips : Deployment 中只有在副本数为1的运行时候此种方式持久化是没有没有问题的因为一把情况下它会运行在初次运行的节点之上，但是如果多个副本数则需要下面的PVC持久化卷才能进行数据的持久化与一致性;</p>\n<p>Tips : 通过控制器创建的Pod共享了宿主机上的目录，做到了Node层面的数据持久化，但需要注意删除Pod后宿主机上的Volume仍然存在需要按需清理;</p>\n<p>Tips : 通过 docker 的 voulme 命令选择查看与删除未使用的voulme或者通过docker volume rm -force 强制删除一个护或者多个Volume;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker volume ls</span><br><span class=\"line\">  <span class=\"comment\"># DRIVER    VOLUME NAME</span></span><br><span class=\"line\">  <span class=\"comment\"># local     1b39579ff10934e81a10652ba201635141db80aea377e8a7c322533673f64a80</span></span><br><span class=\"line\">  <span class=\"comment\"># local     4d655ca0a6fe6eb6df6616b141ba16e9e7e3900d63ae53ea35879d999a061596</span></span><br><span class=\"line\">  <span class=\"comment\"># local     05d7960fecfe1ce5810e37f61a179ec0f3e50b4bf7f36b494346715ff0bd60c4</span></span><br><span class=\"line\">  <span class=\"comment\"># local     8b2ccd3e2e9707970c61ddaea96e3ed02c83770f560b18591fa4fad1c08f7a8e</span></span><br><span class=\"line\">  <span class=\"comment\"># local     73b0aee0ffbe7d467ec5744690b167f2e57496d08fea93a3c0992bb701af4ff0</span></span><br><span class=\"line\">  <span class=\"comment\"># local     78f74566d76be4cea00378cb0bfc70f18a3b2592ccf7fda90bf7a584964fd733</span></span><br><span class=\"line\">  <span class=\"comment\"># local     3512ea706cfc7f289e3945eaa220e51d91274057cd8463a6b94b52738019bafa</span></span><br><span class=\"line\">  <span class=\"comment\"># local     4438e2bfff84a56f1fa321789924701f7c44af3f8e3f199972adfa5151bf9f83</span></span><br><span class=\"line\">  <span class=\"comment\"># local     8210de4bab78e36f455772caeb261ebd81e32ea9f6753d717f86e44f579a3baa</span></span><br><span class=\"line\">  <span class=\"comment\"># local     831413f617021be764d8b18ca72d6d50381bc7c1816af7da20b7f065eed41c5d</span></span><br><span class=\"line\">  <span class=\"comment\"># local     b97aa9d44e9bf45e38275eec57f3073ab8e0687580b1f34edce12c8ca1f81fe3</span></span><br><span class=\"line\">  <span class=\"comment\"># local     b64726c080fd675bde2199a6845702d19ccea2ffda97a1a63e4ffb0ed3c1ec7b</span></span><br><span class=\"line\">  <span class=\"comment\"># local     bcb02978c32a5f284f675ac2a8088b356a97da5c767c4209f559ac2f11d79f09</span></span><br><span class=\"line\">  <span class=\"comment\"># local     c3407cff74c46e9672758dc9e17b4e6f01aafa982e18abb3ec7dc201975f506b</span></span><br><span class=\"line\">  <span class=\"comment\"># local     d1b64baa6fb899ad03117957839deeed722d2214ab2a59f0abc444bb3d292f5b</span></span><br><span class=\"line\">  <span class=\"comment\"># local     df9e564daff5f45f3c37e38490f8c653b8fc0e0fe7bdd2ee0224e46915cad8f0</span></span><br><span class=\"line\">  <span class=\"comment\"># local     ecd52129f73d26d3028ae84a3a690a3b0012341c1b25c53010e1b4a491313adb</span></span><br><span class=\"line\">  <span class=\"comment\"># local     fd4f5c7b9ca9dafec3f2ec8b54e9da9d87f9468b67d40afec94bdc2ebd9a0a69</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ docker volume inspect  1b39579ff10934e81a10652ba201635141db80aea377e8a7c322533673f64a80</span><br><span class=\"line\">  <span class=\"comment\"># [</span></span><br><span class=\"line\">  <span class=\"comment\">#   &#123;</span></span><br><span class=\"line\">  <span class=\"comment\">#     \"CreatedAt\": \"2021-02-03T10:55:08Z\",</span></span><br><span class=\"line\">  <span class=\"comment\">#     \"Driver\": \"local\",</span></span><br><span class=\"line\">  <span class=\"comment\">#     \"Labels\": null,</span></span><br><span class=\"line\">  <span class=\"comment\">#     \"Mountpoint\": \"/var/lib/docker/volumes/1b39579ff10934e81a10652ba201635141db80aea377e8a7c322533673f64a80/_data\",</span></span><br><span class=\"line\">  <span class=\"comment\">#     \"Name\": \"1b39579ff10934e81a10652ba201635141db80aea377e8a7c322533673f64a80\",</span></span><br><span class=\"line\">  <span class=\"comment\">#     \"Options\": null,</span></span><br><span class=\"line\">  <span class=\"comment\">#     \"Scope\": \"local\"</span></span><br><span class=\"line\">  <span class=\"comment\">#   &#125;</span></span><br><span class=\"line\">  <span class=\"comment\"># ]</span></span><br><span class=\"line\"></span><br><span class=\"line\">~$ docker volume prune</span><br><span class=\"line\">  <span class=\"comment\"># WARNING! This will remove all local volumes not used by at least one container.</span></span><br><span class=\"line\">  <span class=\"comment\"># Are you sure you want to continue? [y/N] y</span></span><br><span class=\"line\">  <span class=\"comment\"># Deleted Volumes:</span></span><br><span class=\"line\">  <span class=\"comment\"># 05d7960fecfe1ce5810e37f61a179ec0f3e50b4bf7f36b494346715ff0bd60c4</span></span><br><span class=\"line\">  <span class=\"comment\"># 4438e2bfff84a56f1fa321789924701f7c44af3f8e3f199972adfa5151bf9f83</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>入坑计:</strong></p>\n<ul>\n<li>问题1.配置Volume时各node节点可能没有/data目录此时需要type指定为DirectoryOrCreate，即目录不存在时创建目录（巨坑）;<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/K8s/Day8/demo6$ kubectl get pod</span><br><span class=\"line\">  <span class=\"comment\"># NAME                               READY   STATUS              RESTARTS   AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># hostpath-test-1-565b986876-qgfhk   0/1     ContainerCreating   0          4m59s</span></span><br><span class=\"line\"></span><br><span class=\"line\">~/K8s/Day8/demo6$ kubectl describe pod hostpath-test-1-565b986876-qgfhk</span><br><span class=\"line\">  <span class=\"comment\"># Events:</span></span><br><span class=\"line\">  <span class=\"comment\">#   Type     Reason       Age                From               Message</span></span><br><span class=\"line\">  <span class=\"comment\">#   ----     ------       ----               ----               -------</span></span><br><span class=\"line\">  <span class=\"comment\">#   Normal   Scheduled    29s                default-scheduler  Successfully assigned default/hostpath-test-1-565b986876-qgfhk to k8s-node-5</span></span><br><span class=\"line\">  <span class=\"comment\">#   Warning  FailedMount  14s (x6 over 30s)  kubelet            MountVolume.SetUp failed for volume \"test-volume\" : hostPath type check failed: /data is not a directory</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br/></p>\n<h4 id=\"nfs-分布式共享存储卷\"><a href=\"#nfs-分布式共享存储卷\" class=\"headerlink\" title=\"nfs - 分布式共享存储卷\"></a>nfs - 分布式共享存储卷</h4><p>描述: 我们可以采用nfs直接给我们的Pod定义一个NFS类型的卷Volume示例如下;</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt; nfs-volume-demo.yaml&lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">apiVersion: apps/v1</span><br><span class=\"line\">kind: Deployment </span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: nfs-test-1      <span class=\"comment\"># 元数据名称</span></span><br><span class=\"line\">spec:</span><br><span class=\"line\">  replicas: 1                <span class=\"comment\"># 副本数量为1，否则大家都写进同一个目录可能会导致日志记录混乱;</span></span><br><span class=\"line\">  selector:                  <span class=\"comment\"># 注意它是在Deployment控制器中需要依赖的</span></span><br><span class=\"line\">    matchLabels:  </span><br><span class=\"line\">      app: nfs-test-1   <span class=\"comment\"># 匹配的Pod标签非常重要</span></span><br><span class=\"line\">  template:</span><br><span class=\"line\">    metadata:</span><br><span class=\"line\">      labels:</span><br><span class=\"line\">        app: nfs-test-1</span><br><span class=\"line\">    spec:</span><br><span class=\"line\">      volumes:                         <span class=\"comment\"># volumes 关键点</span></span><br><span class=\"line\">      - name: <span class=\"built_in\">test</span>-volume </span><br><span class=\"line\">        nfs:                           <span class=\"comment\"># 采用 nfs 类型的卷</span></span><br><span class=\"line\">          server: 192.168.1.253        <span class=\"comment\"># nfs 主机地址</span></span><br><span class=\"line\">          path: <span class=\"string\">'/data'</span>                <span class=\"comment\"># nfs 共享目录</span></span><br><span class=\"line\">      containers:</span><br><span class=\"line\">      - name: nfs-test</span><br><span class=\"line\">        image: harbor.weiyigeek.top/<span class=\"built_in\">test</span>/busbox:latest</span><br><span class=\"line\">        imagePullPolicy: IfNotPresent</span><br><span class=\"line\">        <span class=\"built_in\">command</span>: [ <span class=\"string\">\"/bin/sh\"</span>, <span class=\"string\">\"-c\"</span>, <span class=\"string\">\"sleep 700\"</span> ]</span><br><span class=\"line\">        volumeMounts:     </span><br><span class=\"line\">        - name: <span class=\"built_in\">test</span>-volume       </span><br><span class=\"line\">          mountPath: /app/tools/    <span class=\"comment\"># 指定卷挂载到Pod指定的目录路径之中</span></span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n<p>Tips : 此处针对于无状态服务创建,如果是有状态服务请采用<code>statefulset</code>控制创建;</p>\n<hr>\n<h3 id=\"4-PersistentVolume-amp-PersistentVolumeClaim\"><a href=\"#4-PersistentVolume-amp-PersistentVolumeClaim\" class=\"headerlink\" title=\"4.PersistentVolume &amp; PersistentVolumeClaim\"></a>4.PersistentVolume &amp; PersistentVolumeClaim</h3><p>描述: 默认情况下对于运行的容器，其对文件系统的写入都发生在其分层文件系统的可写层的(Copy-On-Write), 当迁移应用程序从开发到生产环境时，开发与运维面临着挑战，为了防止容器挂掉、崩溃或者运行结束时，任何与之相关的数据都将会丢失，为了解决这个问题引发的数据丢失，所以我们需要将数据存储持久化也就是本章主题(Persistent Volume [Claim]);</p>\n<h4 id=\"基础概念\"><a href=\"#基础概念\" class=\"headerlink\" title=\"基础概念\"></a>基础概念</h4><p>Q: 什么是PersistentVolume（PV）?</p>\n<blockquote>\n<p>答: PV是Volume之类的卷插件，但具有独立于使用PV的Pod的生命周期、不支持命名空间划分。它是由管理员设置的存储并且是属于群集的一部分(资源)<br>此API对象包含存储实现的细节，即NFS、iSCSl或特定于云供应商的存储系统。</p>\n</blockquote>\n<p>Q: 什么是PersistentVolumeClaim (PVC) ?</p>\n<blockquote>\n<p>答: PVC 是用户存储的请求它与Pod比较相似，<code>支持命名空间的划分</code>，例如 Pod 消耗节点资源，而PVC消耗PV资源<br>又例如Pod可以请求特定级别的资源（CPU和内存），而PVC 声明可以请求特定的大小和访问模式（例如，可以以读/写一次或只读多次模式挂载）</p>\n</blockquote>\n<p><br/></p>\n<p><strong>PV/PVC生命周期流程</strong><br>答: 供应准备 -&gt; 绑定 -&gt; 使用 -&gt; 释放 -&gt; 回收(Reclaiming)</p>\n<p><br></p>\n<p><strong>持久卷(PV)插件类型</strong><br>描述: PersistentVolume类型以插件形式实现下面是K8s目前支持的一些插件类型;</p>\n<ul>\n<li>·GCEPersistentDisk AWSElasticBlockStore AzureFile AzureDisk FC(Fibre Channel) </li>\n<li>·FlexVolume Flocker NFS iSCSI RBD(Ceph Block Device)CephFS </li>\n<li>·Cinder(OpenStack block storage)Glusterfs VsphereVolume Quobyte Volumes </li>\n<li>·HostPath VMware Photon Portworx Volumes Scalelo Volumes StorageOS</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 卷插件\tReadWriteOnce\tReadOnlyMany\tReadWriteMany</span></span><br><span class=\"line\">AWSElasticBlockStore\t✓\t-\t-</span><br><span class=\"line\">AzureFile\t✓\t✓\t✓</span><br><span class=\"line\">AzureDisk\t✓\t-\t-</span><br><span class=\"line\">CephFS\t✓\t✓\t✓</span><br><span class=\"line\">Cinder\t✓\t-\t-</span><br><span class=\"line\">CSI\t取决于驱动\t取决于驱动\t取决于驱动</span><br><span class=\"line\">FC\t✓\t✓\t-</span><br><span class=\"line\">FlexVolume\t✓\t✓\t取决于驱动</span><br><span class=\"line\">Flocker\t✓\t-\t-</span><br><span class=\"line\">GCEPersistentDisk\t✓\t✓\t-</span><br><span class=\"line\">Glusterfs\t✓\t✓\t✓</span><br><span class=\"line\">HostPath\t✓\t-\t-</span><br><span class=\"line\">iSCSI\t✓\t✓\t-</span><br><span class=\"line\">Quobyte\t✓\t✓\t✓</span><br><span class=\"line\">NFS\t✓\t✓\t✓</span><br><span class=\"line\">RBD\t✓\t✓\t-</span><br><span class=\"line\">VsphereVolume\t✓\t-\t- (Pod 运行于同一节点上时可行)</span><br><span class=\"line\">PortworxVolume\t✓\t-\t✓</span><br><span class=\"line\">ScaleIO\t✓\t✓\t-</span><br><span class=\"line\">StorageOS\t✓\t-\t-</span><br></pre></td></tr></table></figure>\n<p>参考地址: <a href=\"https://kubernetes.io/zh/docs/concepts/storage/persistent-volumes/#access-modes\" target=\"_blank\" rel=\"noopener\">https://kubernetes.io/zh/docs/concepts/storage/persistent-volumes/#access-modes</a></p>\n<p><br></p>\n<h4 id=\"PV-分类\"><a href=\"#PV-分类\" class=\"headerlink\" title=\"PV 分类\"></a>PV 分类</h4><p>描述: 供应准备通过集群外的存储系统或者云平台来提供存储持久化支持;</p>\n<ul>\n<li>1) 静态pv : 由集群管理员创建一些PV。它们带有可供群集用户使用的实际存储的细节。它们存在于KubernetesAPl中可用于消费。</li>\n<li>2) 动态pv : 当管理员创建的静态PV都不匹配用户的<code>PersistentVolumeClaim</code> 时，集群可能会尝试动态地为PVC创建卷。此配置<code>基于StorageClasse:PVC必须请求[存储类]</code>，并且管理员必须创建并配置该类才能进行动态创建。声明该类为空可以有效地禁用其动态配置；要启用基于存储级别的动态存储配置，集群管理员需要启用API server上的<code>DefaultStorageClass[准入控制器]</code>。<ul>\n<li>例如，通过确保 DefaultStorageClass位于API server 组件的–admission-control标志，使用逗号分隔的有序值列表中，可以完成此操作。</li>\n</ul>\n</li>\n</ul>\n<p><br></p>\n<h4 id=\"PV-绑定\"><a href=\"#PV-绑定\" class=\"headerlink\" title=\"PV 绑定\"></a>PV 绑定</h4><p><strong>Q: 什么是绑定PV以及为啥需要绑定?</strong></p>\n<blockquote>\n<p>答: 由于 PVC 需要对接绑定一个PV才能够正常使用, 由于 master 中的控制环路监视新的PVC，寻找匹配的PV（如果可能），并将它们绑定在一起。<br>如果为新的PVC动态调配PV，则该环路将始终将该PV绑定到PVC。否则，用户总会得到他们所请求的存储，但是容量可能超出要求的数量。<code>一旦PV和PVC绑定后 PersistentVolumeClaim 绑定是排他性的</code>不管它们是如何绑定的。简单的说PVC跟PV绑定是一对一的映射一旦PV绑定后便不可与其它PVC绑定。</p>\n</blockquote>\n<p><strong>持久卷(PV)状态</strong><br>描述: PV卷可以处于以下的某种状态;</p>\n<ul>\n<li>·Available（可用） - 空闲资源还没有被任何声明绑定</li>\n<li>·Bound（已绑定） - 卷已经被声明绑定</li>\n<li>·Released（已释放）- 声明被删除，但是资源还未被集群重新声明</li>\n<li>·Failed（失败）- 该卷的自动回收失败</li>\n</ul>\n<p><br></p>\n<h4 id=\"PV-使用\"><a href=\"#PV-使用\" class=\"headerlink\" title=\"PV 使用\"></a>PV 使用</h4><p>描述: 用户可在Pod中像Volume一样使用PVC;</p>\n<p><strong>持久卷(PV)声明的保护</strong><br>描述: PVC保护的目的是确保由pod正在使用的PVC不会从系统中移除，因为如果被移除的话可能会导致数据丢失当<code>启用PVC保护 alpha功能时</code>，如果用户删除了一个pod 正在使用的PVC，则该PVC不会被立即删除。PVC的删除将被推迟，直到PVC不再被任何 pod 使用;</p>\n<p><strong>持久卷(PV)访问模式</strong><br>描述: PersistentVolume可以资源提供者支持的任何方式挂载到主机上, 如下表所示供应商具有不同的功能，每个PV的访问模式都将被设置为该卷支持的特定模式。<br>例如，NFS可以<code>支持多个读/写客户端</code>，但特定的NFSPV可能以只读方式导出到服务器上。每个PV都有一套自己的用来描述特定功能的访问模式;</p>\n<ul>\n<li>·RWO (<code>Cli 格式简写</code>)-ReadWriteOnce 该卷可以被单个节点以读/写模式挂载</li>\n<li>·ROX-ReadOnlyMany                  - 该卷可以被多个节点以只读模式挂载</li>\n<li>·RWX-ReadWriteMany                 - 该卷可以被多个节点以读/写模式挂载</li>\n</ul>\n<p>PS : 每个卷只能同一时刻只能以一种访问模式挂载，即使该卷能够支持 多种访问模式。例如<code>GCEPersistentDisk</code>可以由单个节点作为<code>ReadWriteOnce</code>模式挂载，或由多个节点以<code>ReadOnlyMany</code>模式挂载，但不能同时挂载 ;</p>\n<p><br></p>\n<h4 id=\"PV-释放\"><a href=\"#PV-释放\" class=\"headerlink\" title=\"PV 释放\"></a>PV 释放</h4><p>描述: 用户删除PVC来回收存储资源此时PV将变成Released状态，由于其还保留着之前的数据，该数据需要根据不同的策略来处理，否则这些存储资源无法被其它PVC使用;</p>\n<p><br></p>\n<h4 id=\"PV-回收\"><a href=\"#PV-回收\" class=\"headerlink\" title=\"PV 回收\"></a>PV 回收</h4><p>描述: 持久卷(PV) 回收的几种策略</p>\n<ul>\n<li>·Retain（保留）– 允许人工处理保留的数据;</li>\n<li>·Recycle (deprecated) – 基本擦除将删除PV与外部关联的存储资源 (rm -rf /thevolume/*)，注意:需要插件支持</li>\n<li>·Delete（删除）– 关联的存储资产（例如AWS EBS、GCE PD、Azure Disk 和OpenStack Cinder卷）将被删除， 注意:需要插件支持</li>\n</ul>\n<p>PS :当前只有 NFS 和 HostPath 支持回收策略基本不用(Recycle已被废弃)。AWS EBS、GCE PD、Azure Disk 和Cinder 卷支持删除策略;</p>\n<p><br></p>\n<h4 id=\"PV-PVC-举例\"><a href=\"#PV-PVC-举例\" class=\"headerlink\" title=\"PV/PVC 举例\"></a>PV/PVC 举例</h4><p>Volume API 资源清单:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/K8s/Day8/demo6$ kubectl api-resources | grep <span class=\"string\">\"volume\"</span></span><br><span class=\"line\">  <span class=\"comment\"># persistentvolumeclaims            pvc                                         true         PersistentVolumeClaim</span></span><br><span class=\"line\">  <span class=\"comment\"># persistentvolumes                 pv                                          false        PersistentVolume</span></span><br></pre></td></tr></table></figure></p>\n<p>PV（持久卷）NFS 类型 与 HostPath 类型资源清单:<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 以NFS类型的PV示例</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span> </span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">PersistentVolume</span> </span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">nfs-test</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  capacity:</span></span><br><span class=\"line\"><span class=\"attr\">    storage:</span> <span class=\"number\">5</span><span class=\"string\">Gi</span> </span><br><span class=\"line\"><span class=\"attr\">  volumeMode:</span> <span class=\"string\">Filesystem</span> </span><br><span class=\"line\"><span class=\"attr\">  accessModes:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">ReadWriteOnce</span>                       <span class=\"comment\"># 单节点读写</span></span><br><span class=\"line\"><span class=\"attr\">  persistentVolumeReclaimPolicy:</span> <span class=\"string\">Delete</span>   <span class=\"comment\"># 回收策略</span></span><br><span class=\"line\"><span class=\"attr\">  storageClassName:</span> <span class=\"string\">slow</span>                  <span class=\"comment\"># 此持久卷所属的StorageClass的名称，空值意味着此卷不属于任何存储类。</span></span><br><span class=\"line\"><span class=\"attr\">  mountOptions:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">hard</span> </span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">nfsvers=4.1</span> </span><br><span class=\"line\"><span class=\"attr\">  nfs:</span>             <span class=\"comment\">#PV 类型</span></span><br><span class=\"line\"><span class=\"attr\">    path:</span> <span class=\"string\">/tmp</span> </span><br><span class=\"line\"><span class=\"attr\">    server:</span> <span class=\"number\">172.17</span><span class=\"number\">.0</span><span class=\"number\">.2</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"comment\"># (2) 以hostpath类型的PV示例</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">PersistentVolume</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">hostpath-test</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  capacity:</span></span><br><span class=\"line\"><span class=\"attr\">    storage:</span> <span class=\"number\">2</span><span class=\"string\">Gi</span> </span><br><span class=\"line\"><span class=\"attr\">  accessModes:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">ReadWriteOnce</span>                       <span class=\"comment\"># 单节点读写</span></span><br><span class=\"line\"><span class=\"attr\">  hostPath:</span></span><br><span class=\"line\"><span class=\"attr\">    path:</span> <span class=\"string\">/tmp/local</span></span><br></pre></td></tr></table></figure></p>\n<p>PS : storageClassName 表示所属卷的 StorageClass 的名称，空值意味着此卷不属于任何存储类, 他是PVC绑定到PV卷的重要指标。</p>\n<p><br/></p>\n<p>PVC（持久卷）NFS 类型 与 HostPath 类型资源清单:<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># PVC（持久卷）NFS 类型 </span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span> </span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">PersistentVolumeClaim</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">nfs-test-claim</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  accessModes:</span> <span class=\"string\">[\"ReadWriteOnce\"]</span></span><br><span class=\"line\"><span class=\"attr\">  storageClassName:</span> <span class=\"string\">slow</span>       <span class=\"comment\"># 关键点(与上面的NFS创建的PV进行关联)</span></span><br><span class=\"line\"><span class=\"attr\">  volumeMode:</span> <span class=\"string\">Filesystem</span> </span><br><span class=\"line\"><span class=\"attr\">  resources:</span></span><br><span class=\"line\"><span class=\"attr\">    requests:</span></span><br><span class=\"line\"><span class=\"attr\">      storage:</span> <span class=\"number\">5</span><span class=\"string\">Gi</span></span><br><span class=\"line\"><span class=\"attr\">  selector:</span></span><br><span class=\"line\"><span class=\"attr\">    matchLabels:</span></span><br><span class=\"line\"><span class=\"attr\">      release:</span> <span class=\"string\">\"stable\"</span></span><br><span class=\"line\"><span class=\"attr\">    matchExpressions:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">&#123;key:</span> <span class=\"string\">environment,</span> <span class=\"attr\">operator:</span> <span class=\"string\">In,</span> <span class=\"attr\">values:</span> <span class=\"string\">[dev]&#125;</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"comment\"># PVC（持久卷）HostPath 类型 </span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span> </span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">PersistentVolumeClaim</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">hostpath-test-claim</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  accessModes:</span> <span class=\"string\">[\"ReadWriteOnce\"]</span></span><br><span class=\"line\"><span class=\"attr\">  resources:</span></span><br><span class=\"line\"><span class=\"attr\">    requests:</span></span><br><span class=\"line\"><span class=\"attr\">      storage:</span> <span class=\"number\">1</span><span class=\"string\">Gi</span></span><br></pre></td></tr></table></figure></p>\n<p>Pod 消费 PV 卷资源清单示例:<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Pod</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">pv-consumer</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  containers:</span></span><br><span class=\"line\"><span class=\"attr\">    - name:</span> <span class=\"string\">myfrontend</span></span><br><span class=\"line\"><span class=\"attr\">      image:</span> <span class=\"attr\">nginx:latest</span></span><br><span class=\"line\"><span class=\"attr\">      imagePullPolicy:</span> <span class=\"string\">ifNotPresent</span></span><br><span class=\"line\"><span class=\"attr\">      ports:</span></span><br><span class=\"line\"><span class=\"attr\">      - containerPort:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"attr\">        name:</span> <span class=\"string\">web</span> </span><br><span class=\"line\"><span class=\"attr\">      volumeMounts:</span>     <span class=\"comment\"># 卷挂载</span></span><br><span class=\"line\"><span class=\"attr\">      - name:</span> <span class=\"string\">pv-claim</span>  <span class=\"comment\"># 卷名称</span></span><br><span class=\"line\"><span class=\"attr\">        mountPath:</span> <span class=\"string\">/usr/share/nginx/html</span>  <span class=\"comment\"># 卷挂载路径</span></span><br><span class=\"line\"><span class=\"attr\">  volumes:</span></span><br><span class=\"line\"><span class=\"attr\">    - name:</span> <span class=\"string\">pv-claim</span></span><br><span class=\"line\"><span class=\"attr\">      persistentVolumeClaim:</span> </span><br><span class=\"line\"><span class=\"attr\">        claimName:</span> <span class=\"string\">nfs-test-claim</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h4 id=\"PV-PVC-实例\"><a href=\"#PV-PVC-实例\" class=\"headerlink\" title=\"PV/PVC 实例\"></a>PV/PVC 实例</h4><h5 id=\"NFS-持久化卷配置演示\"><a href=\"#NFS-持久化卷配置演示\" class=\"headerlink\" title=\"NFS 持久化卷配置演示\"></a>NFS 持久化卷配置演示</h5><ul>\n<li>Step 1.NFS 服务端与客户端配置<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在主节点上安装nfs-server</span></span><br><span class=\"line\">&gt; ansible admin -a <span class=\"string\">\"sudo apt install -y nfs-kernel-server rpcbind\"</span></span><br><span class=\"line\">sudo mkdir -pv /nfs/data&#123;1..4&#125; /nfs/datamkdir </span><br><span class=\"line\">  <span class=\"comment\"># mkdir: created directory '/nfs'</span></span><br><span class=\"line\">  <span class=\"comment\"># mkdir: created directory '/nfs/data1'</span></span><br><span class=\"line\">  <span class=\"comment\"># mkdir: created directory '/nfs/data2'</span></span><br><span class=\"line\">  <span class=\"comment\"># mkdir: created directory '/nfs/data3'</span></span><br><span class=\"line\">sudo chmod -R 777 /nfs</span><br><span class=\"line\">sudo chown -R nobody /nfs</span><br><span class=\"line\">sudo tee /etc/exports &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">/nfs/data *(rw,no_root_squash,no_all_squash,sync)</span><br><span class=\"line\">/nfs/data1 *(rw,no_root_squash,no_all_squash,sync)</span><br><span class=\"line\">/nfs/data2 *(rw,no_root_squash,no_all_squash,sync)</span><br><span class=\"line\">/nfs/data3 *(rw,no_root_squash,no_all_squash,sync)</span><br><span class=\"line\">/nfs/data4 *(rw,no_root_squash,no_all_squash,sync)</span><br><span class=\"line\">EOF</span><br><span class=\"line\">sudo systemctl restart rpcbind </span><br><span class=\"line\">sudo systemctl restart nfs-server.service</span><br><span class=\"line\">sudo exportfs -r &amp;&amp; sudo exportfs -av</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Node 节点上安装nfs-client以及mount.nfs</span></span><br><span class=\"line\">&gt; ansible k8s-node-4 -a <span class=\"string\">\"sudo apt install -y nfs-common rpcbind\"</span></span><br><span class=\"line\">&gt; ansible k8s-node-5 -a <span class=\"string\">\"sudo apt install -y nfs-common rpcbind\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 节点上挂载测试</span></span><br><span class=\"line\">showmount -e 10.10.107.202</span><br><span class=\"line\">mount -t nfs 10.10.107.202:/nfsdata /<span class=\"built_in\">test</span>/</span><br><span class=\"line\"><span class=\"built_in\">cd</span> /<span class=\"built_in\">test</span>/ &amp;&amp; ls</span><br><span class=\"line\">umount /<span class=\"built_in\">test</span>/</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br/></p>\n<ul>\n<li>Step 2.PV 创建<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">cat</span> <span class=\"string\">&gt; pv-test-demo-1.yaml&lt;&lt;'EOF'</span></span><br><span class=\"line\"><span class=\"string\"># 1.访问模式为 ReadWriteOnce - pv-test-1</span></span><br><span class=\"line\"><span class=\"string\"></span><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span> </span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">PersistentVolume</span> </span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">pv-test-1</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  capacity:</span>              <span class=\"comment\"># 容量</span></span><br><span class=\"line\"><span class=\"attr\">    storage:</span> <span class=\"number\">1</span><span class=\"string\">Gi</span> </span><br><span class=\"line\"><span class=\"attr\">  accessModes:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">ReadWriteOnce</span> </span><br><span class=\"line\"><span class=\"attr\">  persistentVolumeReclaimPolicy:</span> <span class=\"string\">Retain</span></span><br><span class=\"line\"><span class=\"attr\">  storageClassName:</span> <span class=\"string\">nfs</span>  <span class=\"comment\"># 非常重要 (后面PVC将会根据访问模式以及存储类名称进行绑定PV)</span></span><br><span class=\"line\"><span class=\"attr\">  nfs:</span></span><br><span class=\"line\"><span class=\"attr\">   path:</span> <span class=\"string\">/nfs/data1</span></span><br><span class=\"line\"><span class=\"attr\">   server:</span> <span class=\"number\">10.10</span><span class=\"number\">.107</span><span class=\"number\">.202</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"comment\"># 1.访问模式为 ReadWriteOnce - pv-test-2</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span> </span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">PersistentVolume</span> </span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">pv-test-2</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  capacity:</span>            <span class=\"comment\">#容量</span></span><br><span class=\"line\"><span class=\"attr\">    storage:</span> <span class=\"number\">1</span><span class=\"string\">Gi</span> </span><br><span class=\"line\"><span class=\"attr\">  accessModes:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">ReadWriteOnce</span> </span><br><span class=\"line\"><span class=\"attr\">  persistentVolumeReclaimPolicy:</span> <span class=\"string\">Retain</span></span><br><span class=\"line\"><span class=\"attr\">  storageClassName:</span> <span class=\"string\">nfs</span>  <span class=\"comment\"># 非常重要 (后面PVC将会根据访问模式以及存储类名称进行绑定PV)</span></span><br><span class=\"line\"><span class=\"attr\">  nfs:</span></span><br><span class=\"line\"><span class=\"attr\">   path:</span> <span class=\"string\">/nfs/data2</span></span><br><span class=\"line\"><span class=\"attr\">   server:</span> <span class=\"number\">10.10</span><span class=\"number\">.107</span><span class=\"number\">.202</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"comment\"># 2.访问模式为 ReadOnlyMany </span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span> </span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">PersistentVolume</span> </span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">pv-test-4</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  capacity:</span>            <span class=\"comment\">#容量</span></span><br><span class=\"line\"><span class=\"attr\">    storage:</span> <span class=\"number\">2</span><span class=\"string\">Gi</span> </span><br><span class=\"line\"><span class=\"attr\">  accessModes:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">ReadOnlyMany</span> </span><br><span class=\"line\"><span class=\"attr\">  persistentVolumeReclaimPolicy:</span> <span class=\"string\">Retain</span></span><br><span class=\"line\"><span class=\"attr\">  storageClassName:</span> <span class=\"string\">nfs-retain</span>   <span class=\"comment\"># 非常重要</span></span><br><span class=\"line\"><span class=\"attr\">  nfs:</span></span><br><span class=\"line\"><span class=\"attr\">   path:</span> <span class=\"string\">/nfs/data4</span></span><br><span class=\"line\"><span class=\"attr\">   server:</span> <span class=\"number\">10.10</span><span class=\"number\">.107</span><span class=\"number\">.202</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"comment\"># 3.访问模式为 ReadWriteMany 回收策略为 Delete</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span> </span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">PersistentVolume</span> </span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">pv-test-5</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  capacity:</span>            <span class=\"comment\">#容量</span></span><br><span class=\"line\"><span class=\"attr\">    storage:</span> <span class=\"number\">3</span> <span class=\"string\">Gi</span> </span><br><span class=\"line\"><span class=\"attr\">  accessModes:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">ReadWriteMany</span> </span><br><span class=\"line\"><span class=\"attr\">  persistentVolumeReclaimPolicy:</span> <span class=\"string\">Delete</span></span><br><span class=\"line\"><span class=\"attr\">  storageClassName:</span> <span class=\"string\">nfs-delete</span>     <span class=\"comment\"># 非常重要</span></span><br><span class=\"line\"><span class=\"attr\">  nfs:</span></span><br><span class=\"line\"><span class=\"attr\">   path:</span> <span class=\"string\">/nfs/data</span></span><br><span class=\"line\"><span class=\"attr\">   server:</span> <span class=\"number\">10.10</span><span class=\"number\">.107</span><span class=\"number\">.202</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br/></p>\n<ul>\n<li>Step 3.操作流程&amp;查看<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1) 部署PV</span></span><br><span class=\"line\">~/K8s/Day8/demo7$ kubectl create -f pv-test-demo-1.yaml</span><br><span class=\"line\">  <span class=\"comment\"># persistentvolume/pv-test-1 created</span></span><br><span class=\"line\">  <span class=\"comment\"># persistentvolume/pv-test-2 created</span></span><br><span class=\"line\">  <span class=\"comment\"># persistentvolume/pv-test-4 created</span></span><br><span class=\"line\">  <span class=\"comment\"># persistentvolume/pv-test-5 created</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2) 查看PV</span></span><br><span class=\"line\">~/K8s/Day8/demo7$ kubectl get pv -o wide</span><br><span class=\"line\"><span class=\"comment\"># NAME        CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM   STORAGECLASS   REASON   AGE     VOLUMEMODE</span></span><br><span class=\"line\">  <span class=\"comment\"># pv-test-1   1Gi        RWO            Retain           Available           nfs                     23s   Filesystem</span></span><br><span class=\"line\">  <span class=\"comment\"># pv-test-2   1Gi        RWO            Retain           Available           nfs                     23s   Filesystem</span></span><br><span class=\"line\">  <span class=\"comment\"># pv-test-4   2Gi        ROX            Retain           Available           nfs-retain              22s   Filesystem</span></span><br><span class=\"line\">  <span class=\"comment\"># pv-test-5   3Gi        RWX            Delete           Available           nfs-delete              22s   Filesystem</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3) 查看PV-TEST-1详情</span></span><br><span class=\"line\">~/K8s/Day8/demo7$ kubectl describe pv pv-test-1</span><br><span class=\"line\">  <span class=\"comment\"># Name:            pv-test-1</span></span><br><span class=\"line\">  <span class=\"comment\"># Labels:          &lt;none&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># Annotations:     &lt;none&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># Finalizers:      [kubernetes.io/pv-protection]</span></span><br><span class=\"line\">  <span class=\"comment\"># StorageClass:    nfs</span></span><br><span class=\"line\">  <span class=\"comment\"># Status:          Available</span></span><br><span class=\"line\">  <span class=\"comment\"># Claim:</span></span><br><span class=\"line\">  <span class=\"comment\"># Reclaim Policy:  Retain</span></span><br><span class=\"line\">  <span class=\"comment\"># Access Modes:    RWO</span></span><br><span class=\"line\">  <span class=\"comment\"># VolumeMode:      Filesystem</span></span><br><span class=\"line\">  <span class=\"comment\"># Capacity:        1Gi</span></span><br><span class=\"line\">  <span class=\"comment\"># Node Affinity:   &lt;none&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># Message:</span></span><br><span class=\"line\">  <span class=\"comment\"># Source:</span></span><br><span class=\"line\">  <span class=\"comment\">#     Type:      NFS (an NFS mount that lasts the lifetime of a pod)</span></span><br><span class=\"line\">  <span class=\"comment\">#     Server:    10.10.107.202</span></span><br><span class=\"line\">  <span class=\"comment\">#     Path:      /nfs/data1</span></span><br><span class=\"line\">  <span class=\"comment\">#     ReadOnly:  false</span></span><br><span class=\"line\">  <span class=\"comment\"># Events:        &lt;none&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br/></p>\n<ul>\n<li>Step 4.Service 和 PV 绑定 与 PVC 创建<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">cat</span> <span class=\"string\">&gt; pvc-demo1.yaml&lt;&lt;'EOF'</span></span><br><span class=\"line\"><span class=\"string\"></span><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span> </span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Service</span> </span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">nginx-pvc-demo</span>    <span class=\"comment\"># SVC服务的元数据名称</span></span><br><span class=\"line\"><span class=\"attr\">  labels:</span></span><br><span class=\"line\"><span class=\"attr\">    app:</span> <span class=\"string\">nginx</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  clusterIP:</span> <span class=\"string\">None</span>    <span class=\"comment\"># 关键点: 无头服务可以通过集群CoreDNS解析指向Pod中服务</span></span><br><span class=\"line\"><span class=\"attr\">  selector:</span></span><br><span class=\"line\"><span class=\"attr\">    app:</span> <span class=\"string\">nginx</span></span><br><span class=\"line\"><span class=\"attr\">  ports:</span></span><br><span class=\"line\"><span class=\"attr\">  - port:</span> <span class=\"number\">80</span> </span><br><span class=\"line\"><span class=\"attr\">    name:</span> <span class=\"string\">web</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">apps/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">StatefulSet</span> </span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">web-pvc-demo</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  serviceName:</span> <span class=\"string\">nginx-pvc-demo</span>    <span class=\"comment\"># 绑定Service服务的名称</span></span><br><span class=\"line\"><span class=\"attr\">  replicas:</span> <span class=\"number\">3</span>                    <span class=\"comment\"># 三个副本数</span></span><br><span class=\"line\"><span class=\"attr\">  selector:</span></span><br><span class=\"line\"><span class=\"attr\">    matchLabels:</span></span><br><span class=\"line\"><span class=\"attr\">      app:</span> <span class=\"string\">nginx</span>                 <span class=\"comment\"># 选择器匹配的标签</span></span><br><span class=\"line\"><span class=\"attr\">  template:</span></span><br><span class=\"line\"><span class=\"attr\">    metadata:</span></span><br><span class=\"line\"><span class=\"attr\">      labels:</span></span><br><span class=\"line\"><span class=\"attr\">        app:</span> <span class=\"string\">nginx</span>               <span class=\"comment\"># 模板标签 </span></span><br><span class=\"line\"><span class=\"attr\">    spec:</span></span><br><span class=\"line\"><span class=\"attr\">      containers:</span></span><br><span class=\"line\"><span class=\"attr\">      - name:</span> <span class=\"string\">nginx</span> </span><br><span class=\"line\"><span class=\"attr\">        image:</span> <span class=\"string\">harbor.weiyigeek.top/test/nginx:latest</span></span><br><span class=\"line\"><span class=\"attr\">        imagePullPolicy:</span> <span class=\"string\">IfNotPresent</span></span><br><span class=\"line\"><span class=\"attr\">        ports:</span></span><br><span class=\"line\"><span class=\"attr\">        - containerPort:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"attr\">          name:</span> <span class=\"string\">web</span> </span><br><span class=\"line\"><span class=\"attr\">        volumeMounts:</span>    <span class=\"comment\"># 卷挂载</span></span><br><span class=\"line\"><span class=\"attr\">        - name:</span> <span class=\"string\">diskpv</span>   <span class=\"comment\"># 卷名称</span></span><br><span class=\"line\"><span class=\"attr\">          mountPath:</span> <span class=\"string\">/usr/share/nginx/html</span> </span><br><span class=\"line\"><span class=\"attr\">  volumeClaimTemplates:</span>   <span class=\"comment\"># 持久卷模板引擎</span></span><br><span class=\"line\"><span class=\"attr\">  - metadata:</span> </span><br><span class=\"line\"><span class=\"attr\">      name:</span> <span class=\"string\">diskpv</span>        <span class=\"comment\"># 卷名称元数据与上进行对应</span></span><br><span class=\"line\"><span class=\"attr\">    spec:</span> </span><br><span class=\"line\"><span class=\"attr\">      accessModes:</span> <span class=\"string\">[</span> <span class=\"string\">\"ReadWriteOnce\"</span> <span class=\"string\">]</span>  <span class=\"comment\"># 访问模式 与 PV 卷的属性与之对应</span></span><br><span class=\"line\"><span class=\"attr\">      storageClassName:</span> <span class=\"string\">\"nfs\"</span>           <span class=\"comment\"># 存储类名 与 PV 卷的属性与之对应</span></span><br><span class=\"line\"><span class=\"attr\">      resources:</span></span><br><span class=\"line\"><span class=\"attr\">        requests:</span></span><br><span class=\"line\"><span class=\"attr\">          storage:</span> <span class=\"number\">1</span><span class=\"string\">Gi</span>                  <span class=\"comment\"># 大小可以进行设置</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br/></p>\n<ul>\n<li>Step 5.部署PVC与查看<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1) 部署 Server 与 PVC</span></span><br><span class=\"line\">~/K8s/Day8/demo7$ kubectl create -f pvc-demo1.yaml</span><br><span class=\"line\">  <span class=\"comment\"># service/nginx-pvc-demo created</span></span><br><span class=\"line\">  <span class=\"comment\"># statefulset.apps/web-pvc-demo created</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2) 查看Service Headless</span></span><br><span class=\"line\">~/K8s/Day8/demo7$ kubectl get svc -o wide --show-labels | grep <span class=\"string\">\"nginx-pvc-demo\"</span> <span class=\"comment\"># 无头服务</span></span><br><span class=\"line\">  <span class=\"comment\"># NAME             TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE   SELECTOR    LABELS</span></span><br><span class=\"line\">  <span class=\"comment\"># nginx-pvc-demo   ClusterIP   None         &lt;none&gt;        80/TCP    84s   app=nginx   app=nginx</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3) 查看statefulset 与 Pod</span></span><br><span class=\"line\">~/K8s/Day8/demo7$ kubectl get statefulset -o wide  <span class=\"comment\"># statefulset控制器查看</span></span><br><span class=\"line\">  <span class=\"comment\"># NAME           READY   AGE    CONTAINERS   IMAGES</span></span><br><span class=\"line\">  <span class=\"comment\"># web-pvc-demo   2/3     24m   nginx        harbor.weiyigeek.top/test/nginx:latest</span></span><br><span class=\"line\"></span><br><span class=\"line\">~/K8s/Day8/demo7$ kubectl get pod -o wide</span><br><span class=\"line\">  <span class=\"comment\"># NAME             READY   STATUS    RESTARTS   AGE     IP             NODE         NOMINATED NODE   READINESS GATES</span></span><br><span class=\"line\">  <span class=\"comment\"># web-pvc-demo-0   1/1     Running   0          27m     10.244.2.15    k8s-node-5   &lt;none&gt;           &lt;none&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># web-pvc-demo-1   1/1     Running   0          8m45s   10.244.1.140   k8s-node-4   &lt;none&gt;           &lt;none&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># web-pvc-demo-2   0/1     Pending   0          2m11s   &lt;none&gt;         &lt;none&gt;       &lt;none&gt;           &lt;none&gt;</span></span><br><span class=\"line\"><span class=\"comment\"># PS : web-pvc-demo-2  未成功启动得原因是由于没得持久卷给Pod3使用</span></span><br><span class=\"line\"><span class=\"comment\"># Events:</span></span><br><span class=\"line\"><span class=\"comment\">#   Type     Reason            Age    From               Message</span></span><br><span class=\"line\"><span class=\"comment\">#   ----     ------            ----   ----               -------</span></span><br><span class=\"line\"><span class=\"comment\">#   Warning  FailedScheduling  2m25s  default-scheduler  0/3 nodes are available: 3 pod has unbound immediate PersistentVolumeClaims.</span></span><br><span class=\"line\"><span class=\"comment\">#   Warning  FailedScheduling  2m25s  default-scheduler  0/3 nodes are available: 3 pod has unbound immediate PersistentVolumeClaims.</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4) 创建一个给web-pvc-demo-2使用得存储卷</span></span><br><span class=\"line\">cat &gt; web-pvc-demo-2.yaml&lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">apiVersion: v1 </span><br><span class=\"line\">kind: PersistentVolume </span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: pv-test-3</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  capacity:             <span class=\"comment\">#容量</span></span><br><span class=\"line\">    storage: 1Gi </span><br><span class=\"line\">  accessModes:</span><br><span class=\"line\">    - ReadWriteOnce </span><br><span class=\"line\">  persistentVolumeReclaimPolicy: Delete</span><br><span class=\"line\">  storageClassName: nfs    <span class=\"comment\"># 非常重要</span></span><br><span class=\"line\">  nfs:</span><br><span class=\"line\">   path: /nfs/data3</span><br><span class=\"line\">   server: 10.10.107.202</span><br><span class=\"line\">EOF</span><br><span class=\"line\">~/K8s/Day8/demo7$ kubectl create -f web-pvc-demo-2.yaml</span><br><span class=\"line\"><span class=\"comment\"># persistentvolume/pv-test-3 created</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (5) 创建完成后可以看见所有卷都已经ok</span></span><br><span class=\"line\">~/K8s/Day8/demo7$ kubectl get pvc -o wide <span class=\"comment\"># PVC 绑定的PV 查看</span></span><br><span class=\"line\">  <span class=\"comment\"># NAME                    STATUS   VOLUME      CAPACITY   ACCESS MODES   STORAGECLASS   AGE   VOLUMEMODE</span></span><br><span class=\"line\">  <span class=\"comment\"># diskpv-web-pvc-demo-0   Bound    pv-test-1   1Gi        RWO            nfs            93m   Filesystem</span></span><br><span class=\"line\">  <span class=\"comment\"># diskpv-web-pvc-demo-1   Bound    pv-test-2   4Gi        RWO            nfs            93m   Filesystem</span></span><br><span class=\"line\">  <span class=\"comment\"># diskpv-web-pvc-demo-2   Bound    pv-test-3   1Gi        RWO            nfs            93m   Filesystem</span></span><br><span class=\"line\"></span><br><span class=\"line\">~/K8s/Day8/demo7$ kubectl get pv -o wide  <span class=\"comment\">#命令行会显示PV状态以及绑定到PV的PVC的名称</span></span><br><span class=\"line\">  <span class=\"comment\"># NAME        CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM                           STORAGECLASS   REASON   AGE    VOLUMEMODE</span></span><br><span class=\"line\">  <span class=\"comment\"># pv-test-1   1Gi        RWO            Retain           Bound       default/diskpv-web-pvc-demo-1   nfs                     73m   Filesystem</span></span><br><span class=\"line\">  <span class=\"comment\"># pv-test-2   1Gi        RWO            Retain           Bound       default/diskpv-web-pvc-demo-0   nfs                     73m   Filesystem</span></span><br><span class=\"line\">  <span class=\"comment\"># pv-test-3   1Gi        RWO            Delete           Bound       default/diskpv-web-pvc-demo-2   nfs                     11s   Filesystem</span></span><br><span class=\"line\">  <span class=\"comment\"># pv-test-4   2Gi        ROX            Retain           Available                                   nfs-retain              73m   Filesystem</span></span><br><span class=\"line\">  <span class=\"comment\"># pv-test-5   3Gi        RWX            Delete           Available                                   nfs-delete              73m   Filesystem</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br/></p>\n<ul>\n<li>6.PVC卷使用验证<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 查看Pod容器-&gt;PVC-&gt;PV绑定的目录</span></span><br><span class=\"line\">pv-test-1   1Gi        RWO            Retain           Bound       default/diskpv-web-pvc-demo-1   nfs                     73m   Filesystem</span><br><span class=\"line\">pv-test-2   1Gi        RWO            Retain           Bound       default/diskpv-web-pvc-demo-0   nfs                     73m   Filesystem</span><br><span class=\"line\">pv-test-3   1Gi        RWO            Delete           Bound       default/diskpv-web-pvc-demo-2   nfs                     11s   Filesystem</span><br><span class=\"line\">---</span><br><span class=\"line\"><span class=\"comment\"># 三个Pod的/usr/share/nginx/html指向不同的卷以及</span></span><br><span class=\"line\">NAME             IP             NODE       </span><br><span class=\"line\">web-pvc-demo-0   10.244.2.15    k8s-node-5   /nfs/data2</span><br><span class=\"line\">web-pvc-demo-1   10.244.1.140   k8s-node-4   /nfs/data1</span><br><span class=\"line\">web-pvc-demo-2   10.244.2.16    k8s-node-5   /nfs/data3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 创建html文件(重点) - 此步骤在NFS服务器上执行此处由于我们是在master上建立的</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /nfs/data1 &amp;&amp; <span class=\"built_in\">echo</span> <span class=\"string\">\"web-pvc-demo-1 - <span class=\"variable\">$(pwd)</span> -- <span class=\"variable\">$(date)</span>\"</span> &gt; /nfs/data1/index.html</span><br><span class=\"line\"><span class=\"built_in\">cd</span> /nfs/data2 &amp;&amp; <span class=\"built_in\">echo</span> <span class=\"string\">\"web-pvc-demo-0 - <span class=\"variable\">$(pwd)</span> -- <span class=\"variable\">$(date)</span>\"</span> &gt; /nfs/data2/index.html</span><br><span class=\"line\"><span class=\"built_in\">cd</span> /nfs/data3 &amp;&amp; <span class=\"built_in\">echo</span> <span class=\"string\">\"web-pvc-demo-2 - <span class=\"variable\">$(pwd)</span> -- <span class=\"variable\">$(date)</span>\"</span> &gt; /nfs/data3/index.html</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (3) 访问 Pod 服务查看(由于是无头服务我们可以采用域名方式进行访问)</span></span><br><span class=\"line\">/nfs/data2$ curl http://10.244.2.15</span><br><span class=\"line\">  <span class=\"comment\"># web-pvc-demo-0 - /nfs/data2 -- Thu 19 Nov 2020 02:53:47 PM CST</span></span><br><span class=\"line\">/nfs/data1$ curl http://10.244.1.140</span><br><span class=\"line\">  <span class=\"comment\"># web-pvc-demo-1 - /nfs/data1 -- Thu 19 Nov 2020 02:53:47 PM CST</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (4) 采用coreDNS域名解析方式的访问</span></span><br><span class=\"line\">$ kubectl get pod -n kube-system -o wide | grep <span class=\"string\">\"coredns\"</span></span><br><span class=\"line\">  <span class=\"comment\"># NAME                                  READY   STATUS    RESTARTS   AGE    IP              NODE          NOMINATED NODE   READINESS GATES</span></span><br><span class=\"line\">  <span class=\"comment\"># coredns-6c76c8bb89-8cgjz              1/1     Running   2          13d    10.244.0.7      ubuntu   &lt;none&gt;           &lt;none&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># coredns-6c76c8bb89-wgbs9              1/1     Running   2          13d    10.244.0.8      ubuntu   &lt;none&gt;           &lt;none&gt;</span></span><br><span class=\"line\">$ cat /etc/resolv.conf</span><br><span class=\"line\"><span class=\"comment\"># nameserver 10.244.0.7</span></span><br><span class=\"line\">$ dig -t A nginx-pvc-demo.default.svc.cluster.local. @10.244.0.8    <span class=\"comment\"># nginx-pvc-demo.default</span></span><br><span class=\"line\"><span class=\"comment\"># ;; ANSWER SECTION:</span></span><br><span class=\"line\"><span class=\"comment\"># nginx-pvc-demo.default.svc.cluster.local. 30 IN A 10.244.1.140</span></span><br><span class=\"line\"><span class=\"comment\"># nginx-pvc-demo.default.svc.cluster.local. 30 IN A 10.244.2.16</span></span><br><span class=\"line\"><span class=\"comment\"># nginx-pvc-demo.default.svc.cluster.local. 30 IN A 10.244.2.15</span></span><br><span class=\"line\">/nfs/data3$ curl http://nginx-pvc-demo.default.svc.cluster.local</span><br><span class=\"line\">  web-pvc-demo-2 - /nfs/data3 -- Thu 19 Nov 2020 02:53:48 PM CST</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br/></p>\n<ul>\n<li><p>7.PV 与 PVC 删除 &amp; 回收策略查看</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) statefulSet 资源控制器删除</span></span><br><span class=\"line\">~/K8s/Day8/demo7$ kubectl delete statefulset --all</span><br><span class=\"line\">  <span class=\"comment\"># statefulset.apps \"web-pvc-demo\" deleted</span></span><br><span class=\"line\">~/K8s/Day8/demo7$ kubectl get pod -w  <span class=\"comment\"># 关键点：删除时候是有序的</span></span><br><span class=\"line\">  <span class=\"comment\"># NAME             READY   STATUS        RESTARTS   AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># web-pvc-demo-0   0/1     Terminating   0          105m</span></span><br><span class=\"line\">  <span class=\"comment\"># web-pvc-demo-1   0/1     Terminating   0          105m</span></span><br><span class=\"line\">  <span class=\"comment\"># web-pvc-demo-2   0/1     Terminating   0          105m</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 删除指定的PVC验证PV其Delete的回收策略</span></span><br><span class=\"line\">$ kubectl delete pvc diskpv-web-pvc-demo-2</span><br><span class=\"line\">  <span class=\"comment\"># persistentvolumeclaim \"diskpv-web-pvc-demo-2\" deleted</span></span><br><span class=\"line\"><span class=\"comment\"># 此时pv-test-3无法进行delete回收 (未能解决后续有能力时候补充)</span></span><br><span class=\"line\">pv-test-3   1Gi        RWO            Delete           Failed      default/diskpv-web-pvc-demo-2   nfs                     34m</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (3) 删除所有的PVC</span></span><br><span class=\"line\">$ kubectl delete pvc --all </span><br><span class=\"line\">  <span class=\"comment\"># persistentvolumeclaim \"diskpv-web-pvc-demo-0\" deleted</span></span><br><span class=\"line\">  <span class=\"comment\"># persistentvolumeclaim \"diskpv-web-pvc-demo-1\" deleted</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (4) 手动回收PV卷</span></span><br><span class=\"line\">$ kubectl get pv   <span class=\"comment\"># 查看到PV的STATUS以及CLAIM并未随着PVC删除而变化此时需要进行手动回收</span></span><br><span class=\"line\">  <span class=\"comment\"># NAME        CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM                           STORAGECLASS   REASON   AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># pv-test-1   1Gi        RWO            Retain           Released    default/diskpv-web-pvc-demo-1   nfs                     116m</span></span><br><span class=\"line\">  <span class=\"comment\"># pv-test-2   1Gi        RWO            Retain           Released    default/diskpv-web-pvc-demo-0   nfs                     116m</span></span><br><span class=\"line\">  <span class=\"comment\"># pv-test-3   1Gi        RWO            Delete           Failed      default/diskpv-web-pvc-demo-2   nfs                     42m</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (5) 删除或者nfs共享目录中的数据然后编辑pv删除如下片段</span></span><br><span class=\"line\">~/K8s/Day8/demo7$ kubectl edit pv pv-test-1</span><br><span class=\"line\"><span class=\"comment\"># 删除 yaml 中claimRef对象key-value</span></span><br><span class=\"line\"><span class=\"comment\"># ---</span></span><br><span class=\"line\"><span class=\"comment\"># claimRef:</span></span><br><span class=\"line\"><span class=\"comment\">#   apiVersion: v1</span></span><br><span class=\"line\"><span class=\"comment\">#   kind: PersistentVolumeClaim</span></span><br><span class=\"line\"><span class=\"comment\">#   name: diskpv-web-pvc-demo-0</span></span><br><span class=\"line\"><span class=\"comment\">#   namespace: default</span></span><br><span class=\"line\"><span class=\"comment\">#   resourceVersion: \"2830220\"</span></span><br><span class=\"line\"><span class=\"comment\">#   uid: 02359666-0fcb-4529-8a28-a2fb1dd18008</span></span><br><span class=\"line\"><span class=\"comment\"># ---</span></span><br><span class=\"line\">  <span class=\"comment\"># persistentvolume/pv-test-1 edited</span></span><br><span class=\"line\">$ kubectl edit pv pv-test-2</span><br><span class=\"line\">  <span class=\"comment\"># persistentvolume/pv-test-2 edited</span></span><br><span class=\"line\">$ kubectl edit pv pv-test-3</span><br><span class=\"line\">  <span class=\"comment\"># persistentvolume/pv-test-3 edited</span></span><br><span class=\"line\">$ kubectl get pv   <span class=\"comment\"># 然后您将发现PV一切又恢复到正常的可用状态</span></span><br><span class=\"line\">  <span class=\"comment\"># NAME        CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM   STORAGECLASS   REASON   AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># pv-test-1   1Gi        RWO            Retain           Available           nfs                     119m</span></span><br><span class=\"line\">  <span class=\"comment\"># pv-test-2   1Gi        RWO            Retain           Available           nfs                     119m</span></span><br><span class=\"line\">  <span class=\"comment\"># pv-test-3   1Gi        RWO            Delete           Available           nfs                     46m</span></span><br><span class=\"line\">  <span class=\"comment\"># pv-test-4   2Gi        ROX            Retain           Available           nfs-retain              119m</span></span><br><span class=\"line\">  <span class=\"comment\"># pv-test-5   3Gi        RWX            Delete           Available           nfs-delete              119m</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (6) 删除指定的 PV </span></span><br><span class=\"line\">~/K8s/Day8/demo7$ kubectl delete pv pv-test-3</span><br><span class=\"line\"><span class=\"comment\"># persistentvolume \"pv-test-3\" deleted</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 8.至此持久化数据卷演示结束;</p>\n</li>\n</ul>\n<p><br></p>\n<h3 id=\"5-StorageClass-动态分配持久卷\"><a href=\"#5-StorageClass-动态分配持久卷\" class=\"headerlink\" title=\"5.StorageClass - 动态分配持久卷\"></a>5.StorageClass - 动态分配持久卷</h3><p>描述: StorageClass 被用于描述存储分类(存储类)，不同的<code>StorageClass</code>会被关系的服务质量层面或者备份策略;</p>\n<h4 id=\"基础概念-1\"><a href=\"#基础概念-1\" class=\"headerlink\" title=\"基础概念\"></a>基础概念</h4><p>描述: 前面我们说过 <code>Persistent Volume</code> 简称PV是一个K8S资源对象，所以我们可以单独创建一个PV。它不和Pod直接发生关系，而是通过 <code>Persistent Volume Claim</code>，简称PVC来实现动态绑定。Pod定义里指定的PVC绑定关键字，然后PVC会根据Pod的要求去自动<code>绑定合适的PV给Pod使用</code>。</p>\n<p>Tips : 比如一个配置了许多 50Gi PV 的集群不会匹配到一个要求 100Gi 的PVC。只有在 100Gi PV被加到集群之后，该PVC才可以被绑定。</p>\n<p><br/></p>\n<p><strong>Q: 什么是 storageClass?</strong></p>\n<blockquote>\n<p>答: 前面我们说过创建PV有静态(<code>即手动创建一堆PV组成一个PV池，供PVC来绑定</code>)和动态两种方式, 而动态是指在现有PV不满足PVC的请求时，即通过一个叫<code>StorageClass(存储类)</code>的对象由存储系统根据PVC的要求自动创建来完成的。动态卷供给能力让管理员不必进行预先创建存储卷，而是随用户需求进行创建。<br>所以说 storageclass 是一个存储类，k8s集群管理员通过创建<code>storageclass</code>可以<code>动态生成一个存储卷</code>供k8s用户使用。这是一种新的存储供应方式。</p>\n</blockquote>\n<p><br/></p>\n<p><strong>Q: 使用StorageClass有什么好处呢？</strong></p>\n<blockquote>\n<p>答: 除了由存储系统动态创建，节省了管理员的时间，还有一个好处是可以<code>封装不同类型的存储供PVC选用</code>。在StorageClass出现以前，PVC绑定一个PV只能根据两个条件，<code>一个是存储的大小，另一个是访问模式</code>。在StorageClass出现后，等于增加了一个绑定维度即<code>StorageClassName</code>参数。</p>\n</blockquote>\n<p><br/></p>\n<h4 id=\"资源定义\"><a href=\"#资源定义\" class=\"headerlink\" title=\"资源定义\"></a>资源定义</h4><p><strong>Q: 什么是 storageClass 的资源定义?</strong></p>\n<blockquote>\n<p>答: 每一个StorageClass都包含了<code>Provisioner、Parameters、ReclaimPolicy</code>等几个字段，当需要动态配置属于该类的<code>PersistentVolume</code>时使用这些字段。<br>描述具体过程为: PV先创建分类，PVC请求绑定某个已创建的类<code>(StorageClass)</code>的资源，同时由 <code>Controller控制器</code> 创建的资源绑定到PVC之中,这样就达到动态配置的效果。</p>\n</blockquote>\n<p>Tips : StorageClass对象的名称很重要，是用户可以请求特定类的方式。管理员在首次创建<code>StorageClass</code>对象时设置类的名称和其他参数，<code>注意在创建对象后无法更新这些对象</code>。</p>\n<p>Tips : 管理员可以为不请求任何特定类绑定的PVC指定默认的<code>StorageClass</code>;</p>\n<p>yaml文件示例说明:<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">storage.k8s.io/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">StorageClass</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">standard</span></span><br><span class=\"line\"><span class=\"attr\">provisioner:</span> <span class=\"string\">kubernetes.io/aws-ebs</span></span><br><span class=\"line\"><span class=\"attr\">parameters:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">gp2</span></span><br><span class=\"line\"><span class=\"attr\">reclaimPolicy:</span> <span class=\"string\">Retain</span></span><br><span class=\"line\"><span class=\"attr\">mountOptions:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">debug</span></span><br><span class=\"line\"><span class=\"attr\">volumeBindingMode:</span> <span class=\"string\">Immediate</span></span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<h5 id=\"Provisoner-供应商\"><a href=\"#Provisoner-供应商\" class=\"headerlink\" title=\"Provisoner - 供应商\"></a>Provisoner - 供应商</h5><p><strong>Q: 什么是供应商 (Provisoner)?</strong><br>描述: storageclass需要有一个供应者，用来确定我们使用什么样的存储方式来创建pv;</p>\n<p>Tips : provisioner 供应者它既可以是内部供应程序，也可以由外部供应商提供; 如果是外部供应商可以参考 <a href=\"https://github.com/kubernetes-incubator/external-storage/\" target=\"_blank\" rel=\"noopener\">https://github.com/kubernetes-incubator/external-storage/</a> 下提供的方法创建storageclass的provisioner;</p>\n<p>例如，NFS不提供内部配置程序，但可以使用外部配置程序。</p>\n<p>常见的provisioner供应者列表:</p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2021/1/20210220140128.png\" alt=\"WeiyiGeek.provisioner\" title=\"\" class=\"\">\n                <p>WeiyiGeek.provisioner</p>\n            </figure>\n<p>Tips : nfs 的 provisioner 部署资源清单文件示例 <a href=\"https://github.com/kubernetes-incubator/external-storage/tree/master/nfs/deploy/kubernetes\" target=\"_blank\" rel=\"noopener\">https://github.com/kubernetes-incubator/external-storage/tree/master/nfs/deploy/kubernetes</a></p>\n<p>【2022年6月15日 20:27:10】补充: 注意 nfs-client-provisioner 已经不在更新维护建议使用 nfs-subdir-external-provisioner (<a href=\"https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner\" target=\"_blank\" rel=\"noopener\">https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner</a>)</p>\n<p><br/></p>\n<h5 id=\"Parameters-参数\"><a href=\"#Parameters-参数\" class=\"headerlink\" title=\"Parameters - 参数\"></a>Parameters - 参数</h5><p>描述: 其功能与标签类似，但其是为了给外部插件提供某些自定义参数;</p>\n<p><br/></p>\n<h5 id=\"Reclaim-Policy-回收策略\"><a href=\"#Reclaim-Policy-回收策略\" class=\"headerlink\" title=\"Reclaim Policy - 回收策略\"></a>Reclaim Policy - 回收策略</h5><p>描述: 由一个存储类动态创建持久化卷(<code>Persistent Volumes</code>-PV), 可以通过ReclaimPolicy指定回收策略而该策略可以是删除<code>Delete(默认)</code>或者<code>保持Retain</code>;</p>\n<p><br/></p>\n<h5 id=\"Mount-Options-挂载选项\"><a href=\"#Mount-Options-挂载选项\" class=\"headerlink\" title=\"Mount Options - 挂载选项\"></a>Mount Options - 挂载选项</h5><p>描述: 如果<code>Volume Plugin</code>不支持这个挂载选项，但是指定了就会使<code>provisioner</code>创建StorageClass失败</p>\n<p><br/></p>\n<h5 id=\"Volume-Binding-Mode-卷绑定模式\"><a href=\"#Volume-Binding-Mode-卷绑定模式\" class=\"headerlink\" title=\"Volume Binding Mode - 卷绑定模式\"></a>Volume Binding Mode - 卷绑定模式</h5><p>描述: 该字段用来说明什么时候进行卷绑定和动态配置，默认情况下立即模式表示一旦创建了<code>PersistentVolumeClaim</code>，就会发生卷绑定和动态配置。<br>对于受拓扑约束且无法从群集中的<code>所有节点全局访问的存储后端</code>，将在不知道Pod的调度要求的情况下绑定或配置PersistentVolumes, 这可能导致不可调度的Pod。</p>\n<p>集群管理员可以通过指定<code>WaitForFirstConsumer</code>模式来解决此问题，该模式将延迟绑定和配置<code>PersistentVolume</code>，直到创建使用PersistentVolumeClaim的Pod。将根据Pod的调度约束指定的拓扑选择或配置PersistentVolumes。这些包括但不限于<code>资源需求，节点选择器，pod亲和力和反亲和力，以及污点和容忍度</code>。</p>\n<p><br></p>\n<h4 id=\"基础实例\"><a href=\"#基础实例\" class=\"headerlink\" title=\"基础实例\"></a>基础实例</h4><h5 id=\"环境构建流程\"><a href=\"#环境构建流程\" class=\"headerlink\" title=\"环境构建流程\"></a>环境构建流程</h5><ul>\n<li>Step 1.设置查看当NFS目录以及定义nfs驱动进行编排以下是<code>nfs-client-provisioner</code>部署文件;<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 当前 NFS 共享目录</span></span><br><span class=\"line\"><span class=\"string\">showmount</span> <span class=\"bullet\">-e</span></span><br><span class=\"line\">  <span class=\"comment\"># /nfs/data4 *</span></span><br><span class=\"line\">  <span class=\"comment\"># /nfs/data3 *</span></span><br><span class=\"line\">  <span class=\"comment\"># /nfs/data2 *</span></span><br><span class=\"line\">  <span class=\"comment\"># /nfs/data1 *</span></span><br><span class=\"line\">  <span class=\"comment\"># /nfs/data  *  # 下面案例将使用该目录</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) NFS 驱动编排的资源清单</span></span><br><span class=\"line\"><span class=\"string\">cat</span> <span class=\"string\">&gt; nfs-client-provisioner.yaml  &lt;&lt;'EOF'</span></span><br><span class=\"line\"><span class=\"string\"></span><span class=\"attr\">apiVersion:</span> <span class=\"string\">apps/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Deployment</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">nfs-client-provisioner</span></span><br><span class=\"line\"><span class=\"attr\">  namespace:</span> <span class=\"string\">default</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  replicas:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">  selector:</span></span><br><span class=\"line\"><span class=\"attr\">    matchLabels:</span></span><br><span class=\"line\"><span class=\"attr\">      app:</span> <span class=\"string\">nfs-client-provisioner</span></span><br><span class=\"line\"><span class=\"attr\">  strategy:</span>          <span class=\"comment\"># 策略</span></span><br><span class=\"line\"><span class=\"attr\">    type:</span> <span class=\"string\">Recreate</span>   <span class=\"comment\"># 再生(循环使用)</span></span><br><span class=\"line\"><span class=\"attr\">  template:</span></span><br><span class=\"line\"><span class=\"attr\">    metadata:</span></span><br><span class=\"line\"><span class=\"attr\">      labels:</span></span><br><span class=\"line\"><span class=\"attr\">        app:</span> <span class=\"string\">nfs-client-provisioner</span></span><br><span class=\"line\"><span class=\"attr\">    spec:</span></span><br><span class=\"line\"><span class=\"attr\">      serviceAccountName:</span> <span class=\"string\">nfs-client-provisioner</span>   <span class=\"comment\"># 服务帐户名称</span></span><br><span class=\"line\"><span class=\"attr\">      containers:</span></span><br><span class=\"line\"><span class=\"attr\">      - name:</span> <span class=\"string\">nfs-client-provisioner</span></span><br><span class=\"line\"><span class=\"attr\">        image:</span> <span class=\"string\">registry.cn-hangzhou.aliyuncs.com/open-ali/nfs-client-provisioner</span> </span><br><span class=\"line\"><span class=\"attr\">        volumeMounts:</span></span><br><span class=\"line\"><span class=\"attr\">        - name:</span> <span class=\"string\">timezone</span></span><br><span class=\"line\"><span class=\"attr\">          mountPath:</span> <span class=\"string\">/etc/localtime</span>                <span class=\"comment\"># 时区设置</span></span><br><span class=\"line\"><span class=\"attr\">        - name:</span> <span class=\"string\">nfs-client-root</span></span><br><span class=\"line\"><span class=\"attr\">          mountPath:</span> <span class=\"string\">/persistentvolumes</span></span><br><span class=\"line\"><span class=\"attr\">        env:</span></span><br><span class=\"line\"><span class=\"attr\">        - name:</span> <span class=\"string\">PROVISIONER_NAME</span>                   <span class=\"comment\"># StorageClass 对象中定义的 provisioner 键需要保持一致</span></span><br><span class=\"line\"><span class=\"attr\">          value:</span> <span class=\"string\">fuseim.pri/ifs</span></span><br><span class=\"line\"><span class=\"attr\">        - name:</span> <span class=\"string\">NFS_SERVER</span></span><br><span class=\"line\"><span class=\"attr\">          value:</span> <span class=\"number\">10.10</span><span class=\"number\">.107</span><span class=\"number\">.202</span></span><br><span class=\"line\"><span class=\"attr\">        - name:</span> <span class=\"string\">NFS_PATH</span></span><br><span class=\"line\"><span class=\"attr\">          value:</span> <span class=\"string\">/nfs/data</span></span><br><span class=\"line\"><span class=\"attr\">      volumes:</span></span><br><span class=\"line\"><span class=\"attr\">      - name:</span> <span class=\"string\">timezone</span>                            <span class=\"comment\"># 时区定义</span></span><br><span class=\"line\"><span class=\"attr\">        hostPath:</span></span><br><span class=\"line\"><span class=\"attr\">          path:</span> <span class=\"string\">/usr/share/zoneinfo/Asia/Shanghai</span>   </span><br><span class=\"line\"><span class=\"attr\">      - name:</span> <span class=\"string\">nfs-client-root</span>                     <span class=\"comment\"># 存储卷</span></span><br><span class=\"line\"><span class=\"attr\">        nfs:</span></span><br><span class=\"line\"><span class=\"attr\">          server:</span> <span class=\"number\">10.10</span><span class=\"number\">.107</span><span class=\"number\">.202</span></span><br><span class=\"line\"><span class=\"attr\">          path:</span> <span class=\"string\">/nfs/data</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br/></p>\n<ul>\n<li>Step 2.Storageclass 部署文件<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">cat</span> <span class=\"string\">&gt; nfs-client-storageclass.yaml &lt;&lt;'EOF'</span></span><br><span class=\"line\"><span class=\"string\"></span><span class=\"attr\">apiVersion:</span> <span class=\"string\">storage.k8s.io/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">StorageClass</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">managed-nfs-storage</span>    <span class=\"comment\"># 重要 StorageClass Name绑定</span></span><br><span class=\"line\"><span class=\"attr\">  annotations:</span></span><br><span class=\"line\">    <span class=\"string\">storageclass.kubernetes.io/is-default-class:</span> <span class=\"string\">\"true\"</span>   <span class=\"comment\">#设置其为默认存储后端</span></span><br><span class=\"line\"><span class=\"attr\">provisioner:</span> <span class=\"string\">fuseim.pri/ifs</span>   <span class=\"comment\"># 或选择另一个名称，必须与NFS 驱动编排匹配部署的 env PROVISIONER_NAME</span></span><br><span class=\"line\"><span class=\"attr\">parameters:</span></span><br><span class=\"line\"><span class=\"attr\">  archiveOnDelete:</span> <span class=\"string\">\"false\"</span>    <span class=\"comment\"># 删除pvc后，后端存储上的pv也自动删除</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br/></p>\n<ul>\n<li>Step 3.rbac授权文件<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">cat</span> <span class=\"string\">&gt; nfs-client-rbac.yaml&lt;&lt;'EOF'</span></span><br><span class=\"line\"><span class=\"string\"></span><span class=\"attr\">kind:</span> <span class=\"string\">ServiceAccount</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">nfs-client-provisioner</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">ClusterRole</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">rbac.authorization.k8s.io/v1</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">nfs-client-provisioner-runner</span></span><br><span class=\"line\"><span class=\"attr\">rules:</span></span><br><span class=\"line\"><span class=\"attr\">- apiGroups:</span> <span class=\"string\">[\"\"]</span></span><br><span class=\"line\"><span class=\"attr\">  resources:</span> <span class=\"string\">[\"persistentvolumes\"]</span></span><br><span class=\"line\"><span class=\"attr\">  verbs:</span> <span class=\"string\">[\"get\",</span> <span class=\"string\">\"list\"</span><span class=\"string\">,</span> <span class=\"string\">\"watch\"</span><span class=\"string\">,</span> <span class=\"string\">\"create\"</span><span class=\"string\">,</span> <span class=\"string\">\"delete\"</span><span class=\"string\">]</span></span><br><span class=\"line\"><span class=\"attr\">- apiGroups:</span> <span class=\"string\">[\"\"]</span></span><br><span class=\"line\"><span class=\"attr\">  resources:</span> <span class=\"string\">[\"persistentvolumeclaims\"]</span></span><br><span class=\"line\"><span class=\"attr\">  verbs:</span> <span class=\"string\">[\"get\",</span> <span class=\"string\">\"list\"</span><span class=\"string\">,</span> <span class=\"string\">\"watch\"</span><span class=\"string\">,</span> <span class=\"string\">\"update\"</span><span class=\"string\">]</span></span><br><span class=\"line\"><span class=\"attr\">- apiGroups:</span> <span class=\"string\">[\"storage.k8s.io\"]</span></span><br><span class=\"line\"><span class=\"attr\">  resources:</span> <span class=\"string\">[\"storageclasses\"]</span></span><br><span class=\"line\"><span class=\"attr\">  verbs:</span> <span class=\"string\">[\"get\",</span> <span class=\"string\">\"list\"</span><span class=\"string\">,</span> <span class=\"string\">\"watch\"</span><span class=\"string\">]</span></span><br><span class=\"line\"><span class=\"attr\">- apiGroups:</span> <span class=\"string\">[\"\"]</span></span><br><span class=\"line\"><span class=\"attr\">  resources:</span> <span class=\"string\">[\"events\"]</span></span><br><span class=\"line\"><span class=\"attr\">  verbs:</span> <span class=\"string\">[\"create\",</span> <span class=\"string\">\"update\"</span><span class=\"string\">,</span> <span class=\"string\">\"patch\"</span><span class=\"string\">]</span></span><br><span class=\"line\"><span class=\"attr\">- apiGroups:</span> <span class=\"string\">[\"\"]</span></span><br><span class=\"line\"><span class=\"attr\">  resources:</span> <span class=\"string\">[\"services\",</span> <span class=\"string\">\"endpoints\"</span><span class=\"string\">]</span></span><br><span class=\"line\"><span class=\"attr\">  verbs:</span> <span class=\"string\">[\"get\"]</span></span><br><span class=\"line\"><span class=\"attr\">- apiGroups:</span> <span class=\"string\">[\"extensions\"]</span></span><br><span class=\"line\"><span class=\"attr\">  resources:</span> <span class=\"string\">[\"podsecuritypolicies\"]</span></span><br><span class=\"line\"><span class=\"attr\">  resourceNames:</span> <span class=\"string\">[\"nfs-provisioner\"]</span></span><br><span class=\"line\"><span class=\"attr\">  verbs:</span> <span class=\"string\">[\"use\"]</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">ClusterRoleBinding</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">rbac.authorization.k8s.io/v1</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">run-nfs-client-provisioner</span></span><br><span class=\"line\"><span class=\"attr\">subjects:</span></span><br><span class=\"line\"><span class=\"attr\">- kind:</span> <span class=\"string\">ServiceAccount</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">nfs-client-provisioner</span></span><br><span class=\"line\"><span class=\"attr\">  namespace:</span> <span class=\"string\">default</span></span><br><span class=\"line\"><span class=\"attr\">roleRef:</span></span><br><span class=\"line\"><span class=\"attr\">- kind:</span> <span class=\"string\">ClusterRole</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">nfs-client-provisioner-runner</span></span><br><span class=\"line\"><span class=\"attr\">  apiGroup:</span> <span class=\"string\">rbac.authorization.k8s.io</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Role</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">rbac.authorization.k8s.io/v1</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">leader-locking-nfs-client-provisioner</span></span><br><span class=\"line\"><span class=\"attr\">rules:</span></span><br><span class=\"line\"><span class=\"attr\">- apiGroups:</span> <span class=\"string\">[\"\"]</span></span><br><span class=\"line\"><span class=\"attr\">  resources:</span> <span class=\"string\">[\"endpoints\"]</span></span><br><span class=\"line\"><span class=\"attr\">  verbs:</span> <span class=\"string\">[\"get\",</span> <span class=\"string\">\"list\"</span><span class=\"string\">,</span> <span class=\"string\">\"watch\"</span><span class=\"string\">,</span> <span class=\"string\">\"create\"</span><span class=\"string\">,</span> <span class=\"string\">\"update\"</span><span class=\"string\">,</span> <span class=\"string\">\"patch\"</span><span class=\"string\">]</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">RoleBinding</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">rbac.authorization.k8s.io/v1</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">leader-locking-nfs-client-provisioner</span></span><br><span class=\"line\"><span class=\"attr\">subjects:</span></span><br><span class=\"line\"><span class=\"attr\">- kind:</span> <span class=\"string\">ServiceAccount</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">nfs-client-provisioner</span></span><br><span class=\"line\"><span class=\"attr\">  namespace:</span> <span class=\"string\">default</span></span><br><span class=\"line\"><span class=\"attr\">roleRef:</span></span><br><span class=\"line\"><span class=\"attr\">  kind:</span> <span class=\"string\">Role</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">leader-locking-nfs-client-provisioner</span></span><br><span class=\"line\"><span class=\"attr\">  apiGroup:</span> <span class=\"string\">rbac.authorization.k8s.io</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br/></p>\n<ul>\n<li>Step 4.准备好以上三个文件后，使用kubectl apply命令应用即可完成nfs-client-provisioner的部署。<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 部署</span></span><br><span class=\"line\">/nfs/data~/K8s/Day7/demo3$ ls</span><br><span class=\"line\">  <span class=\"comment\"># nfs-client-provisioner.yaml  nfs-client-rbac.yaml  nfs-client-storageclass.yaml</span></span><br><span class=\"line\">/nfs/data~/K8s/Day7/demo3$ kubectl create -f .</span><br><span class=\"line\">  <span class=\"comment\"># deployment.apps/nfs-client-provisioner created   【前排】</span></span><br><span class=\"line\">  <span class=\"comment\"># serviceaccount/nfs-client-provisioner created    【权限绑定】</span></span><br><span class=\"line\">  <span class=\"comment\"># clusterrole.rbac.authorization.k8s.io/nfs-client-provisioner-runner created</span></span><br><span class=\"line\">  <span class=\"comment\"># clusterrolebinding.rbac.authorization.k8s.io/run-nfs-client-provisioner created</span></span><br><span class=\"line\">  <span class=\"comment\"># role.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner created</span></span><br><span class=\"line\">  <span class=\"comment\"># rolebinding.rbac.authorization.k8s.io/leader-locking-nfs-client-provisioner created</span></span><br><span class=\"line\">  <span class=\"comment\"># storageclass.storage.k8s.io/managed-nfs-storage created  【存储类创建】</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 查看pod、Deployment运行状态和sc</span></span><br><span class=\"line\">~/K8s/Day7/demo3$ kubectl get pod,deployment,sc -o wide</span><br><span class=\"line\">  <span class=\"comment\"># NAME                                          READY   STATUS    RESTARTS   AGE   IP             NODE         NOMINATED NODE   READINESS GATES</span></span><br><span class=\"line\">  <span class=\"comment\"># pod/nfs-client-provisioner-58b5dc958d-5fwl9   1/1     Running   0          9m    10.244.1.172   k8s-node-4   &lt;none&gt;           &lt;none&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># NAME                                     READY   UP-TO-DATE   AVAILABLE   AGE    CONTAINERS               IMAGES                                                              SELECTOR</span></span><br><span class=\"line\">  <span class=\"comment\"># deployment.apps/nfs-client-provisioner   1/1     1            1           9m1s   nfs-client-provisioner   registry.cn-hangzhou.aliyuncs.com/open-ali/nfs-client-provisioner   app=nfs-client-provisioner</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># NAME                                                        PROVISIONER      RECLAIMPOLICY   VOLUMEBINDINGMODE   ALLOWVOLUMEEXPANSION   AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># storageclass.storage.k8s.io/managed-nfs-storage (default)   fuseim.pri/ifs   Delete          Immediate           false                  9m1s</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br/></p>\n<h5 id=\"动态存储类验证\"><a href=\"#动态存储类验证\" class=\"headerlink\" title=\"动态存储类验证\"></a>动态存储类验证</h5><ul>\n<li>Step 5.创建的 nfs-client-provisioner(StorageClass动态存储卷)已经正常运行, 我们现在部署几个PVC来测试验证</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">cat</span> <span class=\"string\">&gt; logstash-pvc.yaml&lt;&lt;'EOF'</span></span><br><span class=\"line\"><span class=\"string\"></span><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">PersistentVolumeClaim</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">log-01-pvc</span></span><br><span class=\"line\"><span class=\"attr\">  annotations:</span>   <span class=\"comment\"># 空间标注</span></span><br><span class=\"line\">    <span class=\"string\">volume.beta.kubernetes.io/storage-class:</span> <span class=\"string\">\"managed-nfs-storage\"</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  accessModes:</span> <span class=\"string\">[\"ReadWriteMany\"]</span></span><br><span class=\"line\"><span class=\"attr\">  resources:</span></span><br><span class=\"line\"><span class=\"attr\">    requests:</span></span><br><span class=\"line\"><span class=\"attr\">      storage:</span> <span class=\"number\">1</span><span class=\"string\">Gi</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">PersistentVolumeClaim</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">log-02-pvc</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  accessModes:</span> <span class=\"string\">[\"ReadWriteMany\"]</span>   <span class=\"comment\"># 注意由于设置默认的存储此次不加注解也是使用的 managed-nfs-storage StorageClass 资源</span></span><br><span class=\"line\"><span class=\"attr\">  resources:</span></span><br><span class=\"line\"><span class=\"attr\">    requests:</span></span><br><span class=\"line\"><span class=\"attr\">      storage:</span> <span class=\"number\">1</span><span class=\"string\">Gi</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure>\n<p>部署与查看PVC持久卷<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/K8s/Day7/demo3$ kubectl create -f logstash-pvc.yaml</span><br><span class=\"line\">  <span class=\"comment\"># persistentvolumeclaim/log-01-pvc created</span></span><br><span class=\"line\">  <span class=\"comment\"># persistentvolumeclaim/log-02-pvc created</span></span><br><span class=\"line\"></span><br><span class=\"line\">~/K8s/Day7/demo3$ kubectl get pv,pvc -o wide</span><br><span class=\"line\">  <span class=\"comment\"># NAME                                                        CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM                STORAGECLASS          REASON   AGE    VOLUMEMODE</span></span><br><span class=\"line\">  <span class=\"comment\"># persistentvolume/pvc-e76d332e-52bf-470a-a362-48742c03ab5f   1Gi        RWX            Delete           Bound    default/log-02-pvc   managed-nfs-storage            4m5s   Filesystem</span></span><br><span class=\"line\">  <span class=\"comment\"># persistentvolume/pvc-f003301b-d22b-4a9f-beb3-b6fe81a6398b   1Gi        RWX            Delete           Bound    default/log-01-pvc   managed-nfs-storage            4m6s   Filesystem</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># NAME                               STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS          AGE    VOLUMEMODE</span></span><br><span class=\"line\">  <span class=\"comment\"># persistentvolumeclaim/log-01-pvc   Bound    pvc-f003301b-d22b-4a9f-beb3-b6fe81a6398b   1Gi        RWX            managed-nfs-storage   4m6s   Filesystem</span></span><br><span class=\"line\">  <span class=\"comment\"># persistentvolumeclaim/log-02-pvc   Bound    pvc-e76d332e-52bf-470a-a362-48742c03ab5f   1Gi        RWX            managed-nfs-storage   4m6s   Filesystem</span></span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<ul>\n<li>Step 6.pvc已经创建成功，并自动创建了一个关联的pv资源对象，我们再查看后端存储目录里面是否生成了对应命名格式的 pv；<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 文件夹的命名方式规则：$&#123;namespace&#125;-$&#123;pvcName&#125;-$&#123;pvName&#125;</span></span><br><span class=\"line\">/nfs/data$ ls -alh | grep <span class=\"string\">\"pvc\"</span></span><br><span class=\"line\">drwxrwxrwx 2 root   root 4.0K Dec  9 20:57 default-log-01-pvc-pvc-f003301b-d22b-4a9f-beb3-b6fe81a6398b</span><br><span class=\"line\">drwxrwxrwx 2 root   root 4.0K Dec  9 20:57 default-log-02-pvc-pvc-e76d332e-52bf-470a-a362-48742c03ab5f</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br/></p>\n<h5 id=\"动态存储类使用\"><a href=\"#动态存储类使用\" class=\"headerlink\" title=\"动态存储类使用\"></a>动态存储类使用</h5><ul>\n<li>Step 7.在实际工作中，使用 StorageClass 更多的是 StatefulSet 类型的服务，StatefulSet 类型的服务我们也可以通过一个 <code>volumeClaimTemplates 属性</code>来直接使用 StorageClass;</li>\n</ul>\n<p>实战利用StatefulSet控制器部署Nginx以及StorageClass动态PV的使用示例如下:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt; nginx-use-storageClass.yaml &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">kind: Service</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: nginx</span><br><span class=\"line\">  labels:</span><br><span class=\"line\">    app: nginx</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: NodePort</span><br><span class=\"line\">  ports:</span><br><span class=\"line\">  - name: web</span><br><span class=\"line\">    port: 80</span><br><span class=\"line\">    targetPort: 80</span><br><span class=\"line\">    nodePort: 30001</span><br><span class=\"line\">  selector:</span><br><span class=\"line\">    app: nginx</span><br><span class=\"line\">---</span><br><span class=\"line\">apiVersion: apps/v1</span><br><span class=\"line\">kind: StatefulSet</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: web</span><br><span class=\"line\">  labels:</span><br><span class=\"line\">    app: nginx</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  serviceName: <span class=\"string\">\"nginx\"</span></span><br><span class=\"line\">  replicas: 8</span><br><span class=\"line\">  selector:</span><br><span class=\"line\">    matchLabels:</span><br><span class=\"line\">      app: nginx</span><br><span class=\"line\">  template:</span><br><span class=\"line\">    metadata:</span><br><span class=\"line\">      labels:</span><br><span class=\"line\">        app: nginx</span><br><span class=\"line\">    spec:</span><br><span class=\"line\">      containers:</span><br><span class=\"line\">      - name: nginx</span><br><span class=\"line\">        image: harbor.weiyigeek.top/<span class=\"built_in\">test</span>/nginx:v3.0</span><br><span class=\"line\">        imagePullPolicy: IfNotPresent</span><br><span class=\"line\">        ports:</span><br><span class=\"line\">        - containerPort: 80</span><br><span class=\"line\">          name: web</span><br><span class=\"line\">        volumeMounts:</span><br><span class=\"line\">        - name: webroot</span><br><span class=\"line\">          mountPath: /usr/share/nginx/html</span><br><span class=\"line\">        - name: weblog</span><br><span class=\"line\">          mountPath: /var/<span class=\"built_in\">log</span>/nginx</span><br><span class=\"line\">        - name: timezone</span><br><span class=\"line\">          mountPath: /etc/localtime</span><br><span class=\"line\">      volumes:</span><br><span class=\"line\">      - name: timezone     <span class=\"comment\"># 容器时区设置</span></span><br><span class=\"line\">        hostPath:</span><br><span class=\"line\">          path: /usr/share/zoneinfo/Asia/Shanghai</span><br><span class=\"line\">  volumeClaimTemplates:    <span class=\"comment\"># 持久卷模板</span></span><br><span class=\"line\">  - metadata:              <span class=\"comment\"># 根据模板自动创建PV与PVC并且进行一一对应绑定;</span></span><br><span class=\"line\">      name: webroot       </span><br><span class=\"line\">    spec:</span><br><span class=\"line\">      accessModes: [ <span class=\"string\">\"ReadWriteOnce\"</span> ]  <span class=\"comment\"># 绑定PV关键点(1) - 访问模式</span></span><br><span class=\"line\">      resources:</span><br><span class=\"line\">        requests:</span><br><span class=\"line\">          storage: 1Gi                  <span class=\"comment\"># 绑定PV关键点(2) - 存储大小</span></span><br><span class=\"line\">  - metadata:</span><br><span class=\"line\">      name: weblog</span><br><span class=\"line\">    spec:</span><br><span class=\"line\">      accessModes: [ <span class=\"string\">\"ReadWriteMany\"</span> ]</span><br><span class=\"line\">      storageClassName: managed-nfs-storage   <span class=\"comment\"># 动态存储类绑定PV/PVC关键点(3)</span></span><br><span class=\"line\">      resources:</span><br><span class=\"line\">        requests:</span><br><span class=\"line\">          storage: 1Gi        </span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><p>Step 8.查看创建的SVC以及StatefulSet、pod状态;</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/K8s/Day7/demo3$ kubectl get svc,sts,pod -o wide --show-labels</span><br><span class=\"line\">  <span class=\"comment\"># NAME                 TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE    SELECTOR    LABELS</span></span><br><span class=\"line\">  <span class=\"comment\"># service/kubernetes   ClusterIP   10.96.0.1       &lt;none&gt;        443/TCP        34d    &lt;none&gt;      component=apiserver,provider=kubernetes</span></span><br><span class=\"line\">  <span class=\"comment\"># service/nginx        NodePort    10.110.119.27   &lt;none&gt;        80:30001/TCP   7m6s   app=nginx   app=nginx</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># NAME                   READY   AGE    CONTAINERS   IMAGES                                 LABELS</span></span><br><span class=\"line\">  <span class=\"comment\"># statefulset.apps/web   8/8     7m6s   nginx        harbor.weiyigeek.top/test/nginx:v3.0   &lt;none&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># NAME                                          READY   STATUS    RESTARTS   AGE     IP             NODE         LABELS</span></span><br><span class=\"line\">  <span class=\"comment\"># pod/nfs-client-provisioner-58b5dc958d-5fwl9   1/1     Running   0          5h43m   10.244.1.172   k8s-node-4   app=nfs-client-provisioner,pod-template-hash=58b5dc958d</span></span><br><span class=\"line\">  <span class=\"comment\"># pod/web-0                                     1/1     Running   0          2m24s   10.244.1.173   k8s-node-4   app=nginx,controller-revision-hash=web-79545bdb6d,statefulset.kubernetes.io/pod-name=web-0</span></span><br><span class=\"line\">  <span class=\"comment\"># pod/web-1                                     1/1     Running   0          2m20s   10.244.2.73    k8s-node-5   app=nginx,controller-revision-hash=web-79545bdb6d,statefulset.kubernetes.io/pod-name=web-1</span></span><br><span class=\"line\">  <span class=\"comment\"># pod/web-2                                     1/1     Running   0          2m15s   10.244.1.174   k8s-node-4   app=nginx,controller-revision-hash=web-79545bdb6d,statefulset.kubernetes.io/pod-name=web-2</span></span><br><span class=\"line\">  <span class=\"comment\"># pod/web-3                                     1/1     Running   0          2m10s   10.244.2.74    k8s-node-5   app=nginx,controller-revision-hash=web-79545bdb6d,statefulset.kubernetes.io/pod-name=web-3</span></span><br><span class=\"line\">  <span class=\"comment\"># pod/web-4                                     1/1     Running   0          2m6s    10.244.1.175   k8s-node-4   app=nginx,controller-revision-hash=web-79545bdb6d,statefulset.kubernetes.io/pod-name=web-4</span></span><br><span class=\"line\">  <span class=\"comment\"># pod/web-5                                     1/1     Running   0          117s    10.244.2.75    k8s-node-5   app=nginx,controller-revision-hash=web-79545bdb6d,statefulset.kubernetes.io/pod-name=web-5</span></span><br><span class=\"line\">  <span class=\"comment\"># pod/web-6                                     1/1     Running   0          107s    10.244.1.176   k8s-node-4   app=nginx,controller-revision-hash=web-79545bdb6d,statefulset.kubernetes.io/pod-name=web-6</span></span><br><span class=\"line\">  <span class=\"comment\"># pod/web-7                                     1/1     Running   0          96s     10.244.2.76    k8s-node-5   app=nginx,controller-revision-hash=web-79545bdb6d,statefulset.kubernetes.io/pod-name=web-7</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 9.访问我们nginx并设置查日志数据存储目录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 访问 Nginx Pod（轮询机制RR）</span></span><br><span class=\"line\">/nfs/data$ curl http://10.110.119.27/host.html &amp;&amp; curl http://10.10.107.202:30001/host.html</span><br><span class=\"line\">  <span class=\"comment\"># Hostname: web-7 ,Image Version: 3.0, Nginx Version: 1.19.4</span></span><br><span class=\"line\">  <span class=\"comment\"># Hostname: web-7 ,Image Version: 3.0, Nginx Version: 1.19.4</span></span><br><span class=\"line\">/nfs/data$ curl http://10.110.119.27/host.html &amp;&amp; curl http://10.10.107.202:30001/host.html</span><br><span class=\"line\">  <span class=\"comment\"># Hostname: web-6 ,Image Version: 3.0, Nginx Version: 1.19.4</span></span><br><span class=\"line\">  <span class=\"comment\"># Hostname: web-6 ,Image Version: 3.0, Nginx Version: 1.19.4</span></span><br><span class=\"line\">/nfs/data$ curl http://10.110.119.27/host.html &amp;&amp; curl http://10.10.107.202:30001/host.html</span><br><span class=\"line\">  <span class=\"comment\"># Hostname: web-5 ,Image Version: 3.0, Nginx Version: 1.19.4</span></span><br><span class=\"line\">  <span class=\"comment\"># Hostname: web-5 ,Image Version: 3.0, Nginx Version: 1.19.4</span></span><br><span class=\"line\">/nfs/data$ curl http://10.110.119.27/host.html &amp;&amp; curl http://10.10.107.202:30001/host.html</span><br><span class=\"line\">  <span class=\"comment\"># Hostname: web-4 ,Image Version: 3.0, Nginx Version: 1.19.4</span></span><br><span class=\"line\">  <span class=\"comment\"># Hostname: web-4 ,Image Version: 3.0, Nginx Version: 1.19.4</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 查看持久卷数据存放目录(可以看出可以自动动态的分配nfs存储卷)</span></span><br><span class=\"line\">/nfs/data$ ls -alh | grep <span class=\"string\">\"web\"</span> | cut -f 13 -d <span class=\"string\">\" \"</span></span><br><span class=\"line\"><span class=\"comment\"># 此处目录定义的格式为 &#123;nameSpace&#125;-&#123;pvcName&#125;-&#123;pvName&#125;</span></span><br><span class=\"line\">  <span class=\"comment\"># default-weblog-web-0-pvc-b24af2f5-e6ad-4487-9f7b-d87d38fd9190</span></span><br><span class=\"line\">  <span class=\"comment\"># ....</span></span><br><span class=\"line\">  <span class=\"comment\"># default-weblog-web-7-pvc-94d2d4a2-fbc7-455a-a554-31e171dd19c9</span></span><br><span class=\"line\">  <span class=\"comment\"># default-webroot-web-0-pvc-f709d766-1061-4703-9c18-c2a814d450bf</span></span><br><span class=\"line\">  <span class=\"comment\"># ...</span></span><br><span class=\"line\">  <span class=\"comment\"># default-webroot-web-7-pvc-a7d6783b-2d91-4839-9a5b-d84436018f84</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># &#123;pvcName&#125; &lt;==&gt; &#123;volumeName&#125;-&#123;statefulSetName&#125;-&#123;replicasSerial&#125;</span></span><br><span class=\"line\">/nfs/data$ kubectl get pvc,pv | grep <span class=\"string\">\"pvc-102f5ada-5599-4152-bae4-968670a0d9a8\"</span></span><br><span class=\"line\">  <span class=\"comment\"># persistentvolumeclaim/weblog-web-1    Bound    pvc-102f5ada-5599-4152-bae4-968670a0d9a8   1Gi        RWX            managed-nfs-storage   22m</span></span><br><span class=\"line\">  <span class=\"comment\"># persistentvolume/pvc-102f5ada-5599-4152-bae4-968670a0d9a8   1Gi        RWX            Delete           Bound    default/weblog-web-1    managed-nfs-storage            22m</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (3) 查看web访问的页面以及日志数据</span></span><br><span class=\"line\">/nfs/data$ find . -name <span class=\"string\">\"host.html\"</span> -<span class=\"built_in\">exec</span> grep -H <span class=\"string\">\"Hostname\"</span> &#123;&#125; \\;  <span class=\"comment\"># 可以看到各个 Pod 的 host.html 是不一致的;</span></span><br><span class=\"line\">  <span class=\"comment\"># ./default-webroot-web-5-pvc-e77bbe07-bf82-4be8-9bc2-c3721c2db4ae/host.html:Hostname: web-5 ,Image Version: 3.0, Nginx Version: 1.19.4</span></span><br><span class=\"line\">  <span class=\"comment\"># ./default-webroot-web-4-pvc-c0c41528-85c0-4881-b05b-8e236bc77a47/host.html:Hostname: web-4 ,Image Version: 3.0, Nginx Version: 1.19.4</span></span><br><span class=\"line\">  <span class=\"comment\"># ./default-webroot-web-0-pvc-f709d766-1061-4703-9c18-c2a814d450bf/host.html:Hostname: web-0 ,Image Version: 3.0, Nginx Version: 1.19.4</span></span><br><span class=\"line\">  <span class=\"comment\"># ./default-webroot-web-6-pvc-9b482936-5252-43b2-b3a0-22bfee032dfb/host.html:Hostname: web-6 ,Image Version: 3.0, Nginx Version: 1.19.4</span></span><br><span class=\"line\">  <span class=\"comment\"># ./default-webroot-web-3-pvc-5c8f0e23-4718-4ce4-aa60-883c95bc7352/host.html:Hostname: web-3 ,Image Version: 3.0, Nginx Version: 1.19.4</span></span><br><span class=\"line\">  <span class=\"comment\"># ./default-webroot-web-2-pvc-d8685582-3122-4eb7-997f-b3d9c729918d/host.html:Hostname: web-2 ,Image Version: 3.0, Nginx Version: 1.19.4</span></span><br><span class=\"line\">  <span class=\"comment\"># ./default-webroot-web-7-pvc-a7d6783b-2d91-4839-9a5b-d84436018f84/host.html:Hostname: web-7 ,Image Version: 3.0, Nginx Version: 1.19.4</span></span><br><span class=\"line\">  <span class=\"comment\"># ./default-webroot-web-1-pvc-c7baf155-3514-4dce-83ed-6d33362864b4/host.html:Hostname: web-1 ,Image Version: 3.0, Nginx Version: 1.19.4</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (4) 同样访问日志也是独立的每一个Pod都有自己的日志存储的PVC</span></span><br><span class=\"line\">/nfs/data$ find . -name <span class=\"string\">\"*.log\"</span> -<span class=\"built_in\">exec</span> grep -H <span class=\"string\">\"200\"</span> &#123;&#125; \\;</span><br><span class=\"line\">  <span class=\"comment\"># ./default-weblog-web-6-pvc-cb930d15-558b-4ede-a087-4f0ee001826a/access.log:10.244.0.0 - - [09/Dec/2020:21:49:21 +0800] \"GET /host.html HTTP/1.1\" 200 59 \"-\" \"curl/7.68.0\" \"-\"</span></span><br><span class=\"line\">  <span class=\"comment\"># ./default-weblog-web-6-pvc-cb930d15-558b-4ede-a087-4f0ee001826a/access.log:10.244.0.0 - - [09/Dec/2020:21:49:21 +0800] \"GET /host.html HTTP/1.1\" 200 59 \"-\" \"curl/7.68.0\" \"-\"</span></span><br><span class=\"line\">  <span class=\"comment\"># ./default-weblog-web-5-pvc-fbd240f3-eaaa-46cc-af77-b8ea81f7be09/access.log:10.244.0.0 - - [09/Dec/2020:21:49:24 +0800] \"GET /host.html HTTP/1.1\" 200 59 \"-\" \"curl/7.68.0\" \"-\"</span></span><br><span class=\"line\">  <span class=\"comment\"># ./default-weblog-web-5-pvc-fbd240f3-eaaa-46cc-af77-b8ea81f7be09/access.log:10.244.0.0 - - [09/Dec/2020:21:49:24 +0800] \"GET /host.html HTTP/1.1\" 200 59 \"-\" \"curl/7.68.0\" \"-\"</span></span><br><span class=\"line\">  <span class=\"comment\"># ./default-weblog-web-4-pvc-2196b531-445f-48d5-bf2c-1c3ee4ee2a83/access.log:10.244.0.0 - - [09/Dec/2020:21:49:26 +0800] \"GET /host.html HTTP/1.1\" 200 59 \"-\" \"curl/7.68.0\" \"-\"</span></span><br><span class=\"line\">  <span class=\"comment\"># ./default-weblog-web-4-pvc-2196b531-445f-48d5-bf2c-1c3ee4ee2a83/access.log:10.244.0.0 - - [09/Dec/2020:21:49:26 +0800] \"GET /host.html HTTP/1.1\" 200 59 \"-\" \"curl/7.68.0\" \"-\"</span></span><br><span class=\"line\">  <span class=\"comment\"># ./default-weblog-web-7-pvc-94d2d4a2-fbc7-455a-a554-31e171dd19c9/access.log:10.244.0.0 - - [09/Dec/2020:21:49:17 +0800] \"GET /host.html HTTP/1.1\" 200 59 \"-\" \"curl/7.68.0\" \"-\"</span></span><br><span class=\"line\">  <span class=\"comment\"># ./default-weblog-web-7-pvc-94d2d4a2-fbc7-455a-a554-31e171dd19c9/access.log:10.244.0.0 - - [09/Dec/2020:21:49:17 +0800] \"GET /host.html HTTP/1.1\" 200 59 \"-\" \"curl/7.68.0\" \"-\"</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h5 id=\"动态存储类扩容缩与删除\"><a href=\"#动态存储类扩容缩与删除\" class=\"headerlink\" title=\"动态存储类扩容缩与删除\"></a>动态存储类扩容缩与删除</h5><ul>\n<li>Step 10.查看StatefulSet扩容缩对及删除资源时候对StorageClass的影响<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 验证: 扩容缩</span></span><br><span class=\"line\">/nfs/data$ kubectl scale statefulset --replicas=3 web  <span class=\"comment\"># Pod 收缩</span></span><br><span class=\"line\">  <span class=\"comment\"># statefulset.apps/web scaled</span></span><br><span class=\"line\"><span class=\"comment\"># 结论：Pod数量的减少并会影响PVC，它会一直存储在动态卷里除非手动的进行操作；</span></span><br><span class=\"line\">/nfs/data$ kubectl get pod,pv,pvc</span><br><span class=\"line\">  <span class=\"comment\"># NAME                                          READY   STATUS    RESTARTS   AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># pod/nfs-client-provisioner-58b5dc958d-5fwl9   1/1     Running   0          6h21m</span></span><br><span class=\"line\">  <span class=\"comment\"># pod/web-0                                     1/1     Running   0          40m</span></span><br><span class=\"line\">  <span class=\"comment\"># pod/web-1                                     1/1     Running   0          40m</span></span><br><span class=\"line\">  <span class=\"comment\"># pod/web-2                                     1/1     Running   0          40m</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># NAME                                                        CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM                   STORAGECLASS          REASON   AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># persistentvolume/pvc-102f5ada-5599-4152-bae4-968670a0d9a8   1Gi        RWX            Delete           Bound    default/weblog-web-1    managed-nfs-storage            40m</span></span><br><span class=\"line\">  <span class=\"comment\"># .....</span></span><br><span class=\"line\">  <span class=\"comment\"># persistentvolume/pvc-fbd240f3-eaaa-46cc-af77-b8ea81f7be09   1Gi        RWX            Delete           Bound    default/weblog-web-5    managed-nfs-storage            39m</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># NAME                                  STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS          AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># persistentvolumeclaim/log-01-pvc      Bound    pvc-f003301b-d22b-4a9f-beb3-b6fe81a6398b   1Gi        RWX            managed-nfs-storage   75m</span></span><br><span class=\"line\">  <span class=\"comment\"># persistentvolumeclaim/log-02-pvc      Bound    pvc-e76d332e-52bf-470a-a362-48742c03ab5f   1Gi        RWX            managed-nfs-storage   75m</span></span><br><span class=\"line\">  <span class=\"comment\"># persistentvolumeclaim/weblog-web-0    Bound    pvc-b24af2f5-e6ad-4487-9f7b-d87d38fd9190   1Gi        RWX            managed-nfs-storage   45m</span></span><br><span class=\"line\">  <span class=\"comment\"># ....</span></span><br><span class=\"line\">  <span class=\"comment\"># persistentvolumeclaim/weblog-web-7    Bound    pvc-94d2d4a2-fbc7-455a-a554-31e171dd19c9   1Gi        RWX            managed-nfs-storage   39m</span></span><br><span class=\"line\">  <span class=\"comment\"># persistentvolumeclaim/webroot-web-0   Bound    pvc-f709d766-1061-4703-9c18-c2a814d450bf   1Gi        RWO            managed-nfs-storage   45m</span></span><br><span class=\"line\">  <span class=\"comment\"># persistentvolumeclaim/webroot-web-1   Bound    pvc-c7baf155-3514-4dce-83ed-6d33362864b4   1Gi        RWO            managed-nfs-storage   40m</span></span><br><span class=\"line\">  <span class=\"comment\"># ....</span></span><br><span class=\"line\">  <span class=\"comment\"># persistentvolumeclaim/webroot-web-7   Bound    pvc-a7d6783b-2d91-4839-9a5b-d84436018f84   1Gi        RWO            managed-nfs-storage   39m</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 验证:删除StatefulSet控制器创建的资源</span></span><br><span class=\"line\">/nfs/data$ kubectl delete sts web</span><br><span class=\"line\">  <span class=\"comment\"># statefulset.apps \"web\" deleted</span></span><br><span class=\"line\">/nfs/data$ kubectl get pod</span><br><span class=\"line\">  <span class=\"comment\"># NAME                                      READY   STATUS        RESTARTS   AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># nfs-client-provisioner-58b5dc958d-5fwl9   1/1     Running       0          6h28m</span></span><br><span class=\"line\">  <span class=\"comment\"># web-0                                     1/1     Terminating   0          47m # 终止中</span></span><br><span class=\"line\">  <span class=\"comment\"># web-1                                     1/1     Terminating   0          47m # 终止中</span></span><br><span class=\"line\">  <span class=\"comment\"># web-2                                     1/1     Terminating   0          47m # 终止中</span></span><br><span class=\"line\"><span class=\"comment\"># 结论: StatefulSet 资源删除后动态持久卷任然存储在我们的nfs服务上并未被清空（你可以手动清空或者）</span></span><br><span class=\"line\">/nfs/data$ kubectl get pvc</span><br><span class=\"line\">  <span class=\"comment\"># NAME            STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS          AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># log-01-pvc      Bound    pvc-f003301b-d22b-4a9f-beb3-b6fe81a6398b   1Gi        RWX            managed-nfs-storage   84m</span></span><br><span class=\"line\">  <span class=\"comment\"># log-02-pvc      Bound    pvc-e76d332e-52bf-470a-a362-48742c03ab5f   1Gi        RWX            managed-nfs-storage   84m</span></span><br><span class=\"line\">  <span class=\"comment\"># weblog-web-0    Bound    pvc-b24af2f5-e6ad-4487-9f7b-d87d38fd9190   1Gi        RWX            managed-nfs-storage   54m</span></span><br><span class=\"line\">  <span class=\"comment\"># ...</span></span><br><span class=\"line\">  <span class=\"comment\"># weblog-web-7    Bound    pvc-94d2d4a2-fbc7-455a-a554-31e171dd19c9   1Gi        RWX            managed-nfs-storage   49m</span></span><br><span class=\"line\">  <span class=\"comment\"># webroot-web-0   Bound    pvc-f709d766-1061-4703-9c18-c2a814d450bf   1Gi        RWO            managed-nfs-storage   54m</span></span><br><span class=\"line\">  <span class=\"comment\"># ...</span></span><br><span class=\"line\">  <span class=\"comment\"># webroot-web-7   Bound    pvc-a7d6783b-2d91-4839-9a5b-d84436018f84   1Gi        RWO            managed-nfs-storage   49m</span></span><br><span class=\"line\"></span><br><span class=\"line\">~/K8s/Day7/demo3$ kubectl delete pv,pvc --all</span><br><span class=\"line\">persistentvolume <span class=\"string\">\"pvc-102f5ada-5599-4152-bae4-968670a0d9a8\"</span> deleted</span><br><span class=\"line\">persistentvolume <span class=\"string\">\"pvc-2196b531-445f-48d5-bf2c-1c3ee4ee2a83\"</span> deleted</span><br><span class=\"line\">persistentvolume <span class=\"string\">\"pvc-5c8f0e23-4718-4ce4-aa60-883c95bc7352\"</span> deleted</span><br><span class=\"line\">persistentvolume <span class=\"string\">\"pvc-94d2d4a2-fbc7-455a-a554-31e171dd19c9\"</span> deleted</span><br><span class=\"line\">persistentvolume <span class=\"string\">\"pvc-9b482936-5252-43b2-b3a0-22bfee032dfb\"</span> deleted</span><br><span class=\"line\">persistentvolume <span class=\"string\">\"pvc-a7d6783b-2d91-4839-9a5b-d84436018f84\"</span> deleted</span><br><span class=\"line\">persistentvolume <span class=\"string\">\"pvc-b24af2f5-e6ad-4487-9f7b-d87d38fd9190\"</span> deleted</span><br><span class=\"line\">persistentvolume <span class=\"string\">\"pvc-bf4734e3-a010-4336-a190-6a13527d9672\"</span> deleted</span><br><span class=\"line\">persistentvolume <span class=\"string\">\"pvc-c0c41528-85c0-4881-b05b-8e236bc77a47\"</span> deleted</span><br><span class=\"line\">persistentvolume <span class=\"string\">\"pvc-c7baf155-3514-4dce-83ed-6d33362864b4\"</span> deleted</span><br><span class=\"line\">persistentvolume <span class=\"string\">\"pvc-cb930d15-558b-4ede-a087-4f0ee001826a\"</span> deleted</span><br><span class=\"line\">persistentvolume <span class=\"string\">\"pvc-d02d6fcd-20e4-47a1-bdb9-3e42e8a6cf54\"</span> deleted</span><br><span class=\"line\">persistentvolume <span class=\"string\">\"pvc-d8685582-3122-4eb7-997f-b3d9c729918d\"</span> deleted</span><br><span class=\"line\">persistentvolume <span class=\"string\">\"pvc-e77bbe07-bf82-4be8-9bc2-c3721c2db4ae\"</span> deleted</span><br><span class=\"line\">persistentvolume <span class=\"string\">\"pvc-f709d766-1061-4703-9c18-c2a814d450bf\"</span> deleted</span><br><span class=\"line\">persistentvolume <span class=\"string\">\"pvc-fbd240f3-eaaa-46cc-af77-b8ea81f7be09\"</span> deleted</span><br><span class=\"line\">persistentvolumeclaim <span class=\"string\">\"weblog-web-0\"</span> deleted</span><br><span class=\"line\">persistentvolumeclaim <span class=\"string\">\"weblog-web-1\"</span> deleted</span><br><span class=\"line\">persistentvolumeclaim <span class=\"string\">\"weblog-web-2\"</span> deleted</span><br><span class=\"line\">persistentvolumeclaim <span class=\"string\">\"weblog-web-3\"</span> deleted</span><br><span class=\"line\">persistentvolumeclaim <span class=\"string\">\"weblog-web-4\"</span> deleted</span><br><span class=\"line\">persistentvolumeclaim <span class=\"string\">\"weblog-web-5\"</span> deleted</span><br><span class=\"line\">persistentvolumeclaim <span class=\"string\">\"weblog-web-6\"</span> deleted</span><br><span class=\"line\">persistentvolumeclaim <span class=\"string\">\"weblog-web-7\"</span> deleted</span><br><span class=\"line\">persistentvolumeclaim <span class=\"string\">\"webroot-web-0\"</span> deleted</span><br><span class=\"line\">persistentvolumeclaim <span class=\"string\">\"webroot-web-1\"</span> deleted</span><br><span class=\"line\">persistentvolumeclaim <span class=\"string\">\"webroot-web-2\"</span> deleted</span><br><span class=\"line\">persistentvolumeclaim <span class=\"string\">\"webroot-web-3\"</span> deleted</span><br><span class=\"line\">persistentvolumeclaim <span class=\"string\">\"webroot-web-4\"</span> deleted</span><br><span class=\"line\">persistentvolumeclaim <span class=\"string\">\"webroot-web-5\"</span> deleted</span><br><span class=\"line\">persistentvolumeclaim <span class=\"string\">\"webroot-web-6\"</span> deleted</span><br><span class=\"line\">persistentvolumeclaim <span class=\"string\">\"webroot-web-7\"</span> deleted</span><br><span class=\"line\">~/K8s/Day7/demo3$ ls /nfs/data</span><br><span class=\"line\">data/  data1/ data2/ data3/ data4/</span><br><span class=\"line\">~/K8s/Day7/demo3$ ls /nfs/data/</span><br><span class=\"line\">archived-default-elasticsearch-master-elasticsearch-master-0-pvc-337180d4-e12a-4933-bbe7-bc9eea8d068a  default-weblog-web-6-pvc-cb930d15-558b-4ede-a087-4f0ee001826a</span><br><span class=\"line\">archived-default-elasticsearch-master-elasticsearch-master-0-pvc-6c445381-1a64-40e4-a412-493e691d8a22  default-weblog-web-7-pvc-94d2d4a2-fbc7-455a-a554-31e171dd19c9</span><br><span class=\"line\">archived-default-elasticsearch-master-elasticsearch-master-0-pvc-ad986a1f-f36e-4223-af17-e4100ca2a587  default-webroot-web-0-pvc-f709d766-1061-4703-9c18-c2a814d450bf</span><br><span class=\"line\">archived-default-log-01-pvc-pvc-f003301b-d22b-4a9f-beb3-b6fe81a6398b                                   default-webroot-web-1-pvc-c7baf155-3514-4dce-83ed-6d33362864b4</span><br><span class=\"line\">archived-default-log-02-pvc-pvc-e76d332e-52bf-470a-a362-48742c03ab5f                                   default-webroot-web-2-pvc-d8685582-3122-4eb7-997f-b3d9c729918d</span><br><span class=\"line\">archived-default-weblog-web-0-pvc-b24af2f5-e6ad-4487-9f7b-d87d38fd9190                                 default-webroot-web-3-pvc-5c8f0e23-4718-4ce4-aa60-883c95bc7352</span><br><span class=\"line\">archived-default-weblog-web-1-pvc-102f5ada-5599-4152-bae4-968670a0d9a8                                 default-webroot-web-4-pvc-c0c41528-85c0-4881-b05b-8e236bc77a47</span><br><span class=\"line\">archived-default-weblog-web-2-pvc-bf4734e3-a010-4336-a190-6a13527d9672                                 default-webroot-web-5-pvc-e77bbe07-bf82-4be8-9bc2-c3721c2db4ae</span><br><span class=\"line\">archived-default-weblog-web-3-pvc-d02d6fcd-20e4-47a1-bdb9-3e42e8a6cf54                                 default-webroot-web-6-pvc-9b482936-5252-43b2-b3a0-22bfee032dfb</span><br><span class=\"line\">archived-default-weblog-web-4-pvc-2196b531-445f-48d5-bf2c-1c3ee4ee2a83                                 default-webroot-web-7-pvc-a7d6783b-2d91-4839-9a5b-d84436018f84</span><br><span class=\"line\">archived-default-weblog-web-5-pvc-fbd240f3-eaaa-46cc-af77-b8ea81f7be09</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/2/20201209223436.png\" alt=\"WeiyiGeek.Nginx网站与日志数据依然存储\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Nginx网站与日志数据依然存储</p>\n            </figure>\n<ul>\n<li>Step 11.以上即为k8s持久化存储之storageclass实践。<br>以上就是使用storageclass实现动态pv的具体步骤，内容较为全面而且我也相信有相当的一些工具可能是我们日常工作可能会见到或用到的。</li>\n</ul>\n<p><br></p>\n<h4 id=\"实际案例\"><a href=\"#实际案例\" class=\"headerlink\" title=\"实际案例\"></a>实际案例</h4><h5 id=\"MySQL数据库使用StorageClass对数据的持久存储\"><a href=\"#MySQL数据库使用StorageClass对数据的持久存储\" class=\"headerlink\" title=\"MySQL数据库使用StorageClass对数据的持久存储\"></a>MySQL数据库使用StorageClass对数据的持久存储</h5><p>描述: 接下来我们部署一个mysql应用，测试下 StorageClass 方式声明的 PVC 对象</p>\n<ul>\n<li>Step 1.MySQL在K8s集群中部署的资源清单<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">cat</span> <span class=\"string\">mysql-config.yaml</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">ConfigMap</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">mysql-config</span></span><br><span class=\"line\"><span class=\"attr\">data:</span></span><br><span class=\"line\">  <span class=\"string\">custom.cnf:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">    [mysqld]</span></span><br><span class=\"line\"><span class=\"string\">    default_storage_engine=innodb</span></span><br><span class=\"line\"><span class=\"string\">    skip_external_locking</span></span><br><span class=\"line\"><span class=\"string\">    skip_host_cache</span></span><br><span class=\"line\"><span class=\"string\">    skip_name_resolve</span></span><br><span class=\"line\"><span class=\"string\">    default_authentication_plugin=mysql_native_password</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">cat mysql-secret.yaml</span></span><br><span class=\"line\"><span class=\"string\"></span><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Secret</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">mysql-user-pwd</span></span><br><span class=\"line\"><span class=\"attr\">data:</span></span><br><span class=\"line\"><span class=\"attr\">  mysql-root-pwd:</span> <span class=\"string\">cGFzc3dvcmQ=</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">cat</span> <span class=\"string\">mysql-deploy.yaml</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Service</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">mysql</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">NodePort</span></span><br><span class=\"line\"><span class=\"attr\">  ports:</span></span><br><span class=\"line\"><span class=\"attr\">  - port:</span> <span class=\"number\">3306</span></span><br><span class=\"line\"><span class=\"attr\">    nodePort:</span> <span class=\"number\">30006</span></span><br><span class=\"line\"><span class=\"attr\">    protocol:</span> <span class=\"string\">TCP</span></span><br><span class=\"line\"><span class=\"attr\">    targetPort:</span> <span class=\"number\">3306</span> </span><br><span class=\"line\"><span class=\"attr\">  selector:</span></span><br><span class=\"line\"><span class=\"attr\">    app:</span> <span class=\"string\">mysql</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">cat</span> <span class=\"string\">mysql-pvc.yaml</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">PersistentVolumeClaim</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">mysql-pvc</span></span><br><span class=\"line\"><span class=\"attr\">  annotations:</span>                      </span><br><span class=\"line\">    <span class=\"string\">volume.beta.kubernetes.io/storage-class:</span> <span class=\"string\">\"managed-nfs-storage\"</span>    <span class=\"comment\"># 空间标注</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  accessModes:</span> <span class=\"string\">[\"ReadWriteMany\"]</span></span><br><span class=\"line\"><span class=\"attr\">  storageClassName:</span> <span class=\"string\">managed-nfs-storage</span></span><br><span class=\"line\"><span class=\"attr\">  resources:</span></span><br><span class=\"line\"><span class=\"attr\">    requests:</span></span><br><span class=\"line\"><span class=\"attr\">      storage:</span> <span class=\"number\">2</span><span class=\"string\">Gi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">apps/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Deployment</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">mysql</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  replicas:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">  selector:</span></span><br><span class=\"line\"><span class=\"attr\">    matchLabels:</span></span><br><span class=\"line\"><span class=\"attr\">      app:</span> <span class=\"string\">mysql</span></span><br><span class=\"line\"><span class=\"attr\">  strategy:</span></span><br><span class=\"line\"><span class=\"attr\">    type:</span> <span class=\"string\">Recreate</span></span><br><span class=\"line\"><span class=\"attr\">  template:</span></span><br><span class=\"line\"><span class=\"attr\">    metadata:</span></span><br><span class=\"line\"><span class=\"attr\">      labels:</span></span><br><span class=\"line\"><span class=\"attr\">        app:</span> <span class=\"string\">mysql</span></span><br><span class=\"line\"><span class=\"attr\">    spec:</span></span><br><span class=\"line\"><span class=\"attr\">      containers:</span></span><br><span class=\"line\"><span class=\"attr\">      - image:</span> <span class=\"string\">mysql</span></span><br><span class=\"line\"><span class=\"attr\">        name:</span> <span class=\"string\">mysql</span></span><br><span class=\"line\"><span class=\"attr\">        imagePullPolicy:</span> <span class=\"string\">IfNotPresent</span></span><br><span class=\"line\"><span class=\"attr\">        env:</span></span><br><span class=\"line\"><span class=\"attr\">        - name:</span> <span class=\"string\">MYSQL_ROOT_PASSWORD</span></span><br><span class=\"line\"><span class=\"attr\">          valueFrom:</span></span><br><span class=\"line\"><span class=\"attr\">            secretKeyRef:</span></span><br><span class=\"line\"><span class=\"attr\">              name:</span> <span class=\"string\">mysql-user-pwd</span></span><br><span class=\"line\"><span class=\"attr\">              key:</span> <span class=\"string\">mysql-root-pwd</span></span><br><span class=\"line\"><span class=\"attr\">        ports:</span></span><br><span class=\"line\"><span class=\"attr\">        - containerPort:</span> <span class=\"number\">3306</span></span><br><span class=\"line\"><span class=\"attr\">          name:</span> <span class=\"string\">mysql</span></span><br><span class=\"line\"><span class=\"attr\">        volumeMounts:</span></span><br><span class=\"line\"><span class=\"attr\">        - name:</span> <span class=\"string\">mysql-config</span></span><br><span class=\"line\"><span class=\"attr\">          mountPath:</span> <span class=\"string\">/etc/mysql/conf.d/</span></span><br><span class=\"line\"><span class=\"attr\">        - name:</span> <span class=\"string\">mysql-persistent-storage</span></span><br><span class=\"line\"><span class=\"attr\">          mountPath:</span> <span class=\"string\">/var/lib/mysql</span></span><br><span class=\"line\"><span class=\"attr\">        - name:</span> <span class=\"string\">timezone</span></span><br><span class=\"line\"><span class=\"attr\">          mountPath:</span> <span class=\"string\">/etc/localtime</span></span><br><span class=\"line\"><span class=\"attr\">      volumes:</span></span><br><span class=\"line\"><span class=\"attr\">      - name:</span> <span class=\"string\">mysql-config</span></span><br><span class=\"line\"><span class=\"attr\">        configMap:</span></span><br><span class=\"line\"><span class=\"attr\">          name:</span> <span class=\"string\">mysql-config</span></span><br><span class=\"line\"><span class=\"attr\">      - name:</span> <span class=\"string\">timezone</span></span><br><span class=\"line\"><span class=\"attr\">        hostPath:</span></span><br><span class=\"line\"><span class=\"attr\">          path:</span> <span class=\"string\">/usr/share/zoneinfo/Asia/Shanghai</span></span><br><span class=\"line\"><span class=\"attr\">      - name:</span> <span class=\"string\">mysql-persistent-storage</span></span><br><span class=\"line\"><span class=\"attr\">        persistentVolumeClaim:</span></span><br><span class=\"line\"><span class=\"attr\">          claimName:</span> <span class=\"string\">mysql-pvc</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br/></p>\n<ul>\n<li>Step 2.按照资源清单进行部署构建响应的Pod以及Services</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl apply -f .</span><br><span class=\"line\">  configmap/mysql-config created</span><br><span class=\"line\">  service/mysql created</span><br><span class=\"line\">  deployment.apps/mysql created</span><br><span class=\"line\">  secret/mysql-user-pwd created</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Step 3.查看创建的资源<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl get pod,svc</span><br><span class=\"line\">NAME                                        READY   STATUS    RESTARTS   AGE</span><br><span class=\"line\">pod/mysql-7c5b5df54c-vrnr8                  1/1     Running   0          83s</span><br><span class=\"line\">pod/nfs-client-provisioner-c676947d-pfpms   1/1     Running   0          30m</span><br><span class=\"line\"></span><br><span class=\"line\">NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)          AGE</span><br><span class=\"line\">service/kubernetes   ClusterIP   10.0.0.1     &lt;none&gt;        443/TCP          93d</span><br><span class=\"line\">service/mysql        NodePort    10.0.0.19    &lt;none&gt;        3306:30006/TCP   83s</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li>Step 4.可以看到mysql应用已经正常运行，我们通过任意一个node节点的ip和30006端口连接mysql数据库测试<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]<span class=\"comment\"># mysql -uroot -h292.168.248.134 -P30006 -p</span></span><br><span class=\"line\">Enter password: </span><br><span class=\"line\">Welcome to the MariaDB monitor.  Commands end with ; or \\g.</span><br><span class=\"line\">Your MySQL connection id is 10</span><br><span class=\"line\">Server version: 8.0.19 MySQL Community Server - GPL</span><br><span class=\"line\"></span><br><span class=\"line\">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class=\"line\"></span><br><span class=\"line\">Type <span class=\"string\">'help;'</span> or <span class=\"string\">'\\h'</span> <span class=\"keyword\">for</span> <span class=\"built_in\">help</span>. Type <span class=\"string\">'\\c'</span> to clear the current input statement.</span><br><span class=\"line\"></span><br><span class=\"line\">MySQL [(none)]&gt; show databases;</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| Database           |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| information_schema |</span><br><span class=\"line\">| mysql              |</span><br><span class=\"line\">| performance_schema |</span><br><span class=\"line\">| sys                |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">4 rows <span class=\"keyword\">in</span> <span class=\"built_in\">set</span> (0.01 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">MySQL [(none)]&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li>Step 5.可以看到mysql数据库连接正常，此时查看nfs存储mysql数据库数据已经持久化到nfs服务器 <code>/data/nfs/default-mysql-pvc-pvc-eef853e1-f8d8-4ab9-bfd3-05c2a58fd9dc</code>目录中<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ du -sh *</span><br><span class=\"line\">177M    default-mysql-pvc-pvc-eef853e1-f8d8-4ab9-bfd3-05c2a58fd9dc</span><br><span class=\"line\"></span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> default-mysql-pvc-pvc-eef853e1-f8d8-4ab9-bfd3-05c2a58fd9dc/</span><br><span class=\"line\"></span><br><span class=\"line\">$ ls</span><br><span class=\"line\">auto.cnf       binlog.index  client-cert.pem  ibdata1      ibtmp1        mysql.ibd           public_key.pem   sys</span><br><span class=\"line\">binlog.000001  ca-key.pem    client-key.pem   ib_logfile0  innodb_temp  performance_schema  server-cert.pem  undo_001</span><br><span class=\"line\">binlog.000002  ca.pem        ib_buffer_pool   ib_logfile1  mysql         private_key.pem     server-key.pem   undo_002</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br/></p>\n<p><strong>关于 StatefulSet 补充使用PV/PVC或者StorageClass的补充</strong></p>\n<ul>\n<li>1) StatefulSet 为每个Pod副本创建了一个DNS 域名，这个域名的格式为:<code>(podname).(headless servername)</code>，也就意味着服务间是通过Pod域名来通信而非PodIP，因为当Pod所在Node发生故障时，Pod会被飘移到其它 Node 上 PodIP 会发生变化但是 Pod域名不会有变化;<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 无论 Pod 删除后重建的容器任然可以通过以下方式访问;</span></span><br><span class=\"line\">ping web-pvc-demo-0.nginx-pvc-demo</span><br><span class=\"line\">ping web-pvc-demo-1.nginx-pvc-demo</span><br><span class=\"line\">ping web-pvc-demo-2.nginx-pvc-demo</span><br></pre></td></tr></table></figure></li>\n<li>2) StatefulSet 配 Pod name (网络标识) 的模式为:(<code>statefulset名称−序号</code>)，比如上面的示例:<code>web-pvc-demo-0, web-pvc-demo-1,web-pvc-demo-2</code></li>\n<li>3) StatefulSet 使用 Headless 服务来控制 Pod 的域名,这个域名的FQDN为:<code>(servicename).$(namespace).svc.cluster.local</code>,其中<code>&quot;cluster.local&quot;</code>指的是集群的域名<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dig -t A nginx-pvc-demo.default.svc.cluster.local. @10.244.0.8</span><br></pre></td></tr></table></figure></li>\n<li>4) 根据volumeClaimTemplates为每个Pod 创建一个PVC,其的命名规则匹配模式:<code>(volumeClaim Templates.name-pod_name)</code>, 比如上面的<code>volumeMounts.name=diskpv</code> 因此创建出来的PVC是<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diskpv-web-pvc-demo-1</span><br><span class=\"line\">diskpv-web-pvc-demo-2</span><br><span class=\"line\">diskpv-web-pvc-demo-3</span><br></pre></td></tr></table></figure></li>\n<li>5)　删除 Pod 不会删除其pvc，需要手动删除 pvc 将自动释放 pv，查看上面的<code>步骤6.PV 与 PVC 删除 &amp; 回收策略查看</code></li>\n</ul>\n<p><br/></p>\n","comments":true,"excerpt":null,"categories":[{"name":"Containers","path":"api/categories/Containers.json"},{"name":"OperationTools","path":"api/categories/OperationTools.json"}],"tags":[{"name":"k8s","path":"api/tags/k8s.json"}]}