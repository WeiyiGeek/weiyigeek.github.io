<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WeiyiGeek Blog</title>
  
  <subtitle>为者常成，行者常至。</subtitle>
  <link href="https://blog.weiyigeek.top/atom.xml" rel="self"/>
  
  <link href="https://blog.weiyigeek.top/"/>
  <updated>2023-03-20T02:20:09.063Z</updated>
  <id>https://blog.weiyigeek.top/</id>
  
  <author>
    <name>WeiyiGeek</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>8.HTML图形图像标签元素介绍</title>
    <link href="https://blog.weiyigeek.top/2023/3-17-723.html"/>
    <id>https://blog.weiyigeek.top/2023/3-17-723.html</id>
    <published>2023-03-17T05:38:30.000Z</published>
    <updated>2023-03-20T02:20:09.063Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a> <h2 id="0x00-前言简述"><a href="#0x00-前言简述" class="headerlink" title="0x00 前言简述"></a>0x00 前言简述</h2><p>本章主要介绍超链接、以及框架等相关元素的介绍实践。</p><p><strong>超链接相关元素:</strong><br><code>&lt;a&gt;</code> : 定义锚。<br><code>&lt;link&gt;</code> : 定义文档与外部资源的关系 HTML新标签，在【2.HTML根部头部主体标签元素介绍】中有介绍，此处不做多余介绍。<br><code>&lt;nav&gt;</code> : 定义导航链接。在【4.HTML样式布局区块标签元素介绍】中有介绍，此处不做多余介绍。</p><p><br/></p><p><strong>框架相关元素:</strong></p><p><iframe> ：定义内联框架。</p><p><frame> : 定义框架集的窗口或框架。HTML5 中不支持。</p><p><frameset> : 定义框架集。HTML5 中不支持。</p><p><noframes> : 定义针对不支持框架的用户的替代内容。HTML5 中不支持。</p><p><strong>其他相关元素</strong><br><code>&lt;marquee&gt;</code> : HTML5 中不支持。</p><p><br/></p><h2 id="0x01-超链接标签元素"><a href="#0x01-超链接标签元素" class="headerlink" title="0x01 超链接标签元素"></a>0x01 超链接标签元素</h2><h3 id="a-标签"><a href="#a-标签" class="headerlink" title="a 标签"></a>a 标签</h3><p><strong>描述:</strong> 该标签定义超链接，用于从一张页面链接到另一张页面，其最重要的属性是 href 属性，它指示链接的目标。</p><p><strong>属性:</strong></p><ul><li>href: 指向的页面的 URL。</li><li>target: 规定在何处打开链接文档(<code>_blank/_parent/_self/_top/framename</code>)。</li><li>type: 规定被链接文档的的 MIME 类型, 例如 <code>text/html</code>、<code>images/png</code></li><li>hreflang: 指定被链接文档的语言, 例如 zh。</li><li>media: 规定被链接文档是为何种媒介/设备优化的，与CSS中media 运算符、设备、值相同，例如 “screen and (min-width:500px)”。</li><li>download: 属性规定该超链接目标可被下载。</li><li>ping: 规定以空格分隔的 URL 列表，当点击链接时，浏览器将发送带有正文 ping 的 post 请求（在后台）</li><li>rel: 该属性改变锚内容的外观、或者自动构建文档浏览菜单，其他工具也可以使用这些属性来构建特殊的链接集合、目录和索引，但是只有极少数浏览器才会利用这些属性来改变链接的外观，其值可以为<code>（stylesheet、start、next、prev、contents、nofollow）</code>等。</li><li>referrerpolicy: 规定当用户单击超链接时要发送哪些引荐来源信息<blockquote><p>no-referrer: 不发送引荐来源信息<br>no-referrer-when-downgrade: 如果协议安全级别保持不变或更高（HTTP 到 HTTP、HTTPS 到 HTTPS、HTTP 到 HTTPS 可以），则发送源、路径和查询字符串,不发送任何安全级别较低的内容（HTTPS 到 HTTP 不行）。<br>origin: 发送文档的来源（协议、主机和端口）。<br>origin-when-cross-origin: 为跨域请求发送文档的来源。为同源请求发送来源、路径和查询字符串。<br>same-origin: 为同源请求发送引用者。不为跨域请求发送引用者。<br>strict-origin-when-cross-origin: 如果协议安全级别保持不变或更高（HTTP 到 HTTP、HTTPS 到 HTTPS 和 HTTP 到 HTTPS 都可以），则发送来源。<br>unsafe-url: 发送来源、路径和查询字符串（不考虑安全性）。</p></blockquote></li></ul><p><strong>温馨提示:</strong> 在所有浏览器中，链接的默认外观是<code>未被访问的链接带有下划线而且是蓝色的</code>,<code>已被访问的链接带有下划线而且是紫色的</code>,<code>活动链接带有下划线而且是红色的</code>。</p><p><strong>示例1</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 1.HTML 链接是通过 &lt;a&gt; 标签进行定义的 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://blog.weiyigeek.top"</span>&gt;</span>This is a link jump WeiyiGeek.top<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 2.演示如何使用图像作为链接href属性 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/example/weiyigeek.html"</span>&gt;</span> </span><br><span class="line">  <span class="comment">&lt;!--可以塞相对路径与绝对路径--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">src</span>=<span class="string">"/i/weiyigeek.gif"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 3.演示如何使用链接跳转至文档的另一个部分-name属性 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#show"</span>&gt;</span>查看 Chapter 4<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span> </span><br><span class="line"><span class="comment">&lt;!--跳转到指定的name名称中用#假name值(注意区分大小写)，进行跳转--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>锚（显示在页面上的文本）<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">"show"</span>&gt;</span>Chapter 4<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span>  <span class="comment">&lt;!--name属性--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>欢迎访问唯一极客个人学习博客<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">备注: 后续也可通过 https://blog.weiyigeek.top/index.html#show 进行调转访问。</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 4.定义如何打开中展示一个页面 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>target 属性设置为 "_blank"，该链接会在新窗口中打开<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>target 属性设置为 "_self"，默认。在相同的框架中打开被链接文档<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>target 属性设置为 "_parent"，在父框架集中打开被链接文档<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>target 属性设置为 "_top"，在整个窗口中打开被链接文档<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://blog.weiyigeek.top/index.html#show"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>Visit W3School!<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 5.使用a标签创建电子邮件链接: --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:master@weiyigeek.top?subject=Hello%20WeiyiGeek！"</span>&gt;</span>发送邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:master@weiyigeek.top?cc=one@weiyigeek.top&amp;bcc=two@weiyigeek.top&amp;subject=Summer%20Party&amp;body=You%20are%20invited%20to%20a%20big%20summer%20party!"</span>&gt;</span>发送邮件！有抄送，有标题，有内容<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>注意：应该使用 %20 来替换单词之间的空格，这样浏览器就可以正确地显示文本了, 首个邮箱后是?拼接<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 6.使用rel属性指定了noreferrer后，浏览器在请求该标签指定的地址时就不再发送Referer。 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">herf</span>=<span class="string">"https://blog.weiyigeek.top"</span> <span class="attr">rel</span>=<span class="string">"noreferrer nofollow"</span>&gt;</span> 因为通过Referer可能会泄露一些铭感信息，已搜索引擎不跟踪 <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 7.使用down属性设置一个值来规定下载文件的名称，浏览器将自动检测正确的文件扩展名并添加到文件(.img, .pdf, .txt, .html等等) --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/images/weiyigeek.jpg"</span> <span class="attr">download</span>=<span class="string">"logo"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 8.当用户点击 weiyigeek.top/html 链接时，通知 weiyigeek.top/trackpings --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://weiyigeek.top/html"</span> <span class="attr">ping</span>=<span class="string">"https://weiyigeek.top/trackpings"</span>&gt;</span>唯一极客个人主页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><br/></p><p><strong>示例2.</strong>打开新窗口，被指向的超链接使得创建高效的浏览工具变得很容易。<br>例如，<code>target=&quot;view_window&quot;</code>一个简单的内容文档的列表，可以将文档重定向到一个单独的窗口，通过单击窗口中的一个连接，可使另一个窗口的内容发生变化。–&gt;<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>View_window Demo<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"pref.html"</span> <span class="attr">target</span>=<span class="string">"view_window"</span>&gt;</span>Preface<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>   </span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"chap1.html"</span> <span class="attr">target</span>=<span class="string">"view_window"</span>&gt;</span>Chapter 1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"chap2.html"</span> <span class="attr">target</span>=<span class="string">"view_window"</span>&gt;</span>Chapter 2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"chap3.html"</span> <span class="attr">target</span>=<span class="string">"view_window"</span>&gt;</span>Chapter 3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230317164508.png" alt="WeiyiGeek.target属性为view_window效果图" title="" class="">                <p>WeiyiGeek.target属性为view_window效果图</p>            </figure><p>实现效果: 当用户第一次选择内容列表中的某个链接时，浏览器将打开一个新的窗口，将它标记为 “view_window”，然后在其中显示希望显示的文档内容。如果用户从这个内容列表中选择另一个链接，且这个 “view_window” 仍处于打开状态，<code>浏览器就会再次将选定的文档载入那个窗口</code>，取代刚才的那些文档。</p><p><br/></p><p><strong>示例3.</strong>在框架中打开窗口，此时不用打开一个完整的浏览器窗口，使用 target 更通常的方法是在一个 <code>&lt;frameset&gt;</code> 显示中将超链接内容定向到一个或者多个框架中。<br>可以将这个内容列表放入一个带有两个框架的文档的其中一个框架中，并用这个相邻的框架来显示选定的文档：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- demo.html --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">"100,*"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"toc.html"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 利用name属性进行框架页面显示 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"pref.html"</span> <span class="attr">name</span>=<span class="string">"view_iframe"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">frameset</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- toc.html --&gt;</span></span><br><span class="line">当浏览器最初显示这两个框架的时候，左边这个框架包含目录，右边这个框架包含前言，这是 "toc.html" 的源代码。</span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>View_frame Demo<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"pref.html"</span> <span class="attr">target</span>=<span class="string">"view_iframe"</span>&gt;</span>Preface<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"chap1.html"</span> <span class="attr">target</span>=<span class="string">"view_iframe"</span>&gt;</span>Chapter 1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"chap2.html"</span> <span class="attr">target</span>=<span class="string">"view_iframe"</span>&gt;</span>Chapter 2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"chap3.html"</span> <span class="attr">target</span>=<span class="string">"view_iframe"</span>&gt;</span>Chapter 3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="0x02-框架标签元素"><a href="#0x02-框架标签元素" class="headerlink" title="0x02 框架标签元素"></a>0x02 框架标签元素</h2><h3 id="iframe-标签"><a href="#iframe-标签" class="headerlink" title="iframe 标签"></a>iframe 标签</h3><p><strong>描述:</strong> HTML 内联框架元素 (<code>&lt;iframe&gt;</code>) 表示嵌套的browsing context。它能够将另一个 HTML 页面嵌入到当前页面中。每个嵌入的浏览上下文（embedded browsing context）都<code>有自己的会话历史记录 (session history)和DOM 树</code>。<br>包含嵌入内容的浏览上下文称为父级浏览上下文, 顶级浏览上下文（没有父级）通常是由 Window 对象表示的浏览器窗口。<br>简单的说: 通过使用框架，你可以在同一个浏览器窗口中显示不止一个页面。</p><p><strong>属性:</strong></p><ul><li>allow: 用于为<code>&lt;iframe&gt;</code>指定其特征策略.</li><li>allowfullscreen : 设置为true时，可以通过调用 <code>&lt;iframe&gt;</code> 的 requestFullscreen() 方法激活全屏模式。</li><li>allowpaymentrequest : 设置为true时，跨域的 <code>&lt;iframe&gt;</code> 就可以调用 Payment Request API。</li><li>name: 用于定位嵌入的浏览上下文的名称,在 <code>&lt;a&gt;</code> 标签与 <code>&lt;form&gt;</code> 标签的 target 属性值，以及 <code>&lt;input&gt;</code> 标签和 <code>&lt;button&gt;</code> 标签的 formtarget 属性值 。</li><li>height : 以 CSS 像素格式，或像素格式，或百分比格式指定 frame 的高度。默认值是150。</li><li>width: 以 CSS 像素格式，或以像素格式，或以百分比格式指定的 frame 的宽度。默认值是300。</li><li>src: 被嵌套的页面的 URL 地址。</li><li>srcdoc: 该属性是一段 HTML 代码，这些代码会被渲染到 iframe 中。</li><li>importance 实验性: 表示 <code>&lt;iframe&gt;</code> 的 src 属性指定的资源的加载优先级（auto、high、low）。</li><li><p>referrerpolicy : 表示在获取 iframe 资源时如何发送 referrer 首部：</p><blockquote><p><code>no-referrer</code>: 不发送 Referer 首部。<br><code>no-referrer-when-downgrade (default)</code>: 向不受 TLS (HTTPS) 保护的 origin 发送请求时，不发送 Referer 首部。<br><code>origin</code>: referrer 首部中仅包含来源页面的源。换言之，仅包含来源页面的 scheme, host, 以及 port (en-US)。<br><code>origin-when-cross-origin</code>: 发起跨域请求时，仅在 referrer 中包含来源页面的源。发起同源请求时，仍然会在 referrer 中包含来源页面在服务器上的路径信息。<br><code>same-origin</code>: 对于 same origin（同源）请求，发送 referrer 首部，否则不发送。<br><code>strict-origin</code>: 仅当被请求页面和来源页面具有相同的协议安全等级时才发送 referrer 首部（比如从采用 HTTPS 协议的页面请求另一个采用 HTTPS 协议的页面）。如果被请求页面的协议安全等级较低，则不会发送 referrer 首部（比如从采用 HTTPS 协议的页面请求采用 HTTP 协议的页面）。<br><code>strict-origin-when-cross-origin</code>: 当发起同源请求时，在 referrer 首部中包含完整的 URL。当被请求页面与来源页面不同源但是有相同协议安全等级时（比如 HTTPS→HTTPS），在 referrer 首部中仅包含来源页面的源。当被请求页面的协议安全等级较低时（比如 HTTPS→HTTP），不发送 referrer 首部。<br><code>unsafe-url</code>: 始终在 referrer 首部中包含源以及路径（但不包括 fragment，密码，或用户名）。这个值是不安全的, 因为这样做会暴露受 TLS 保护的资源的源和路径信息。</p></blockquote></li><li><p>sandbox : 该属性对呈现在 iframe 框架中的内容启用一些额外的限制条件。</p><blockquote><p><code>allow-downloads-without-user-activation</code> 实验性: 允许在没有征求用户同意的情况下下载文件。<br><code>allow-forms</code>: 允许嵌入的浏览上下文提交表单。如果没有使用该关键字，则无法提交表单。<br><code>allow-modals</code>: 允许嵌入的浏览上下文打开模态窗口。<br><code>allow-orientation-lock</code>: 允许嵌入的浏览上下文锁定屏幕方向（译者注：比如智能手机、平板电脑的水平朝向或垂直朝向）。<br><code>allow-pointer-lock</code>: 允许嵌入的浏览上下文使用 Pointer Lock API.<br><code>allow-popups</code>: 允许弹窗 (例如 window.open, target=”_blank”, showModalDialog)。如果没有使用该关键字，相应的功能将自动被禁用。<br><code>allow-popups-to-escape-sandbox</code>: 允许沙箱化的文档打开新窗口，并且新窗口不会继承沙箱标记。例如，安全地沙箱化一个广告页面，而不会在广告链接到的新页面中启用相同的限制条件。<br><code>allow-presentation</code>: 允许嵌入的浏览上下文开始一个 presentation session (en-US)。<br><code>allow-same-origin</code>: 如果没有使用该关键字，嵌入的浏览上下文将被视为来自一个独立的源，这将使 same-origin policy 同源检查失败。<br><code>allow-scripts</code>: 允许嵌入的浏览上下文运行脚本（但不能创建弹窗）。如果没有使用该关键字，就无法运行脚本。<br><code>allow-storage-access-by-user-activation</code> 实验性: 允许嵌入的浏览上下文通过 Storage Access API (en-US) 使用父级浏览上下文的存储功能。<br><code>allow-top-navigation</code>: 允许嵌入的浏览上下文导航（加载）内容到顶级的浏览上下文。<br><code>allow-top-navigation-by-user-activation</code>: 允许嵌入的浏览上下文在经过用户允许后导航（加载）内容到顶级的浏览上下文。</p></blockquote></li></ul><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 1.此示例将位于 https://weiyigeek.top 的页面嵌入到 iframe 中。 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span></span></span><br><span class="line"><span class="tag">  <span class="attr">src</span>=<span class="string">"https://weiyigeek.top"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">title</span>=<span class="string">"WeiyiGeek 个人主页"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">width</span>=<span class="string">"400"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">height</span>=<span class="string">"300"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 2.移除边框和关闭滚动条-frameboder属性 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"http://www.baidu.com/index.html"</span>  <span class="attr">width</span>=<span class="string">"500"</span> <span class="attr">height</span>=<span class="string">"300"</span> <span class="attr">frameborder</span>=<span class="string">"0"</span> &gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>您的浏览器不支持  iframe 标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 3.因为 a 标签的 target 属性是名为 iframe_a 的 iframe 框架的name属性指定，所以在点击链接时页面会显示在 iframe框架中。 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>使用iframe来显示目标链接页面<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">data-wiz-span</span>=<span class="string">"data-wiz-span"</span> <span class="attr">style</span>=<span class="string">"color: rgb(0, 0, 0);"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"demo_iframe.htm"</span> <span class="attr">name</span>=<span class="string">"iframe_a"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.weiyigeek.top"</span> <span class="attr">target</span>=<span class="string">"iframe_a"</span>&gt;</span>weiyigeek.top<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>扩展:</strong><br>描述: 如果指定了空字符串（sandbox=””），该属性对呈现在iframe框架中的内容<code>启用一些额外的限制条件</code>。<br>该属性的值既可以是一个空字符串（将会启用所有的限制），也可以是用空格分隔的一系列指定的字符串，通过sandbox属性提升iFrame的安全性，sandbox属性可以防止不信任的Web页面执行某些操作。</p><p>HTML 5规范的编辑Ian Hickson谈到了sandbox的好处，它可以防止如下操作：</p><ul><li style="list-style: none"><input type="checkbox"></input> 访问父页面的DOM（从技术角度来说，这是因为相对于父页面iframe已经成为不同的源了）</li><li style="list-style: none"><input type="checkbox"></input> 执行脚本</li><li style="list-style: none"><input type="checkbox"></input> 通过脚本嵌入自己的表单或是操纵表单</li><li style="list-style: none"><input type="checkbox"></input> 对cookie、本地存储或本地SQL数据库的读写</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 1.启用一系列额外限制，但允许表单提交。 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"demo_iframe_sandbox_form.html"</span> <span class="attr">sandbox</span>=<span class="string">"allow-forms"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>您的浏览器不支持 iframes.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 2.启用一系列额外限制，但允许javascript交互，表单提交 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 属性值可以以空格,来分隔启用一起的限制 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"demo_iframe_sandbox.html"</span> <span class="attr">sandbox</span>=<span class="string">"allow-scripts allow-forms"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>您的浏览器不支持 iframes.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 3.如果浏览器支持 srcdoc 属性，且指定了 srcdoc 属性，它将覆盖在 src 属性中规定的内容 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">srcdoc</span>=<span class="string">"&lt;b&gt;Hello world!&lt;/b&gt;"</span> <span class="attr">src</span>=<span class="string">"demo-iframe_srcdoc.htm"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>您的浏览器不支持  iframe 标签。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230320101955.png" alt="WeiyiGeek.iframe标签执行结果图" title="" class="">                <p>WeiyiGeek.iframe标签执行结果图</p>            </figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;</summary>
    
    
    
    <category term="前端学习" scheme="https://blog.weiyigeek.top/categories/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="学习笔记" scheme="https://blog.weiyigeek.top/categories/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="HTML" scheme="https://blog.weiyigeek.top/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>7.HTML图形图像标签元素介绍</title>
    <link href="https://blog.weiyigeek.top/2023/3-17-722.html"/>
    <id>https://blog.weiyigeek.top/2023/3-17-722.html</id>
    <published>2023-03-17T01:38:30.000Z</published>
    <updated>2023-03-17T09:17:05.921Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a> <h2 id="0x00-前言简述"><a href="#0x00-前言简述" class="headerlink" title="0x00 前言简述"></a>0x00 前言简述</h2><p>本章主要介绍HTML中图形、图像相关元素标签介绍。</p><p><strong>元素一览</strong></p><ul><li><code>&lt;img&gt;</code> : 定义图像。</li><li><code>&lt;map&gt;</code> : 定义图像映射。</li><li><code>&lt;area&gt;</code> : 定义图像地图内部的区域。</li><li><code>&lt;canvas&gt;</code> : 定义图形。</li><li><code>&lt;figcaption&gt;</code> : 定义 figure 元素的标题。</li><li><code>&lt;figure&gt;</code> : 定义媒介内容的分组，以及它们的标题。</li><li><code>&lt;svg&gt;</code> : 定义 SVG 图形的容器。</li></ul><hr><h2 id="0x01-图形图像标签元素"><a href="#0x01-图形图像标签元素" class="headerlink" title="0x01 图形图像标签元素"></a>0x01 图形图像标签元素</h2>]]></content>
    
    
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;</summary>
    
    
    
    <category term="前端学习" scheme="https://blog.weiyigeek.top/categories/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="学习笔记" scheme="https://blog.weiyigeek.top/categories/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="HTML" scheme="https://blog.weiyigeek.top/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>6.HTML输入表单标签元素介绍</title>
    <link href="https://blog.weiyigeek.top/2023/3-14-721.html"/>
    <id>https://blog.weiyigeek.top/2023/3-14-721.html</id>
    <published>2023-03-14T12:38:30.000Z</published>
    <updated>2023-03-17T08:02:00.853Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a> <h2 id="0x00-前言简述"><a href="#0x00-前言简述" class="headerlink" title="0x00 前言简述"></a>0x00 前言简述</h2><p>本章将主要给各位看友介绍表单form中常用的标签元素属性，本节标签一览如下所示:</p><ul><li><code>&lt;form&gt;</code> :    定义供用户输入的 HTML 表单。</li><li><code>&lt;label&gt;</code> :    定义 input 元素的标注。</li><li><code>&lt;input&gt;</code> :    定义输入控件。</li><li><code>&lt;textarea&gt;</code> :    定义多行的文本输入控件。</li><li><code>&lt;button&gt;</code> : 定义按钮。</li><li><code>&lt;select&gt;</code> : 定义选择列表（下拉列表）。</li><li><code>&lt;optgroup&gt;</code> : 定义选择列表中相关选项的组合。</li><li><code>&lt;option&gt;</code> : 定义选择列表中的选项。</li><li><code>&lt;legend&gt;</code> : 定义 fieldset 元素的标题。</li><li><code>&lt;fieldset&gt;</code> : 定义围绕表单中元素的边框。</li><li><code>&lt;datalist&gt;</code> HTML5 : 定义下拉列表。</li><li><code>&lt;output&gt;</code> HTML5 : 定义输出的一些类型。</li><li><code>&lt;keygen&gt;</code> HTML5 : 定义生成密钥。</li><li><code>&lt;isindex&gt;</code> :    定义与文档相关的可搜索索引。HTML5 中不支持</li></ul><p><br/></p><h2 id="0x00-表单标签元素"><a href="#0x00-表单标签元素" class="headerlink" title="0x00 表单标签元素"></a>0x00 表单标签元素</h2><h3 id="form-标签"><a href="#form-标签" class="headerlink" title="form 标签"></a>form 标签</h3><p><strong>描述</strong>: 表单是一个包含表单元素的区域，表单元素是允许用户在表单中输入内容,其包含 <code>文本框、文本域(textarea)、按钮、下拉列表、单选框(radio-buttons)、复选框(checkboxes)</code>等元素都要放在form标签里面或者进行form的id值的调用，否则提交的数据到不了后端。</p><p><strong>属性</strong>:</p><ul><li>name 属性: 规定表单的名称.</li><li>action 属性: 规定当提交表单时向后端URL发送表单数据。</li><li>method 属性: 规定提交发送表单时 HTTP 方法，通常为GET或者POST，当然也有可能为其他方法。</li><li>accept-charset 属性: 规定服务器可处理的表单数据字符集。</li><li>enctype 属性: 规定在向服务器发送表单数据之前如何对其进行编码, 在 POST 请求使用其值为(<code>text/plain、multipart/form-data、application/x-www-form-urlencoded</code>)。</li><li>target 属性: 规定在窗口何处打开 action URL。</li><li>autocomplete 属性（NEW）: 规定 form 或 input (<code>name: text, search, url, telephone, email, password, date pickers</code>)域应该拥有自动填充功能，在某些浏览中需要开启自动填充才能使其生效, 设置 on 或 off。</li><li>novalidate 属性（NEW）: 规定在提交表单时不应该验证 form 或 input 域(<code>name: text, search, url, telephone, email, password, date pickers</code>)域应该拥有自动填充功能，在某些浏览中需要开启自动填充才能使其生效。</li></ul><p><strong>示例</strong>:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 1.指定表单提交给后端的地址以及方法，实现自动填充。 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"https://api.weiygeeek.top/v2/version.jsp"</span> <span class="attr">method</span>=<span class="string">"get"</span> <span class="attr">autocomplete</span>=<span class="string">"on"</span>&gt;</span>     <span class="comment">&lt;!--启动自动显现上一次输入过的数据,当用户在自动完成域中开始输入时，浏览器应该在该域中显示填写的选项 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"username"</span>&gt;</span>First name: <span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"email"</span>&gt;</span>E-mail: <span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span>/&gt;</span>   <span class="comment">&lt;!--取消自动显现上一次输入过的数据 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>补充扩展</strong></p><ul><li>何时使用 Get ? 何时使用 Post ?<blockquote><p>Get 请求：用于没有敏感信息，且少量数据的提交，其表单数据在页面地址栏中是可见的，例如 <code>action page.php?firstname=Mickey&amp;lastname=Mouse</code><br>Post 请求：通常用于敏感信息以及大量数据的提交，它更加安全其在页面地址栏中被提交的数据是不可见的。</p></blockquote></li></ul><p><br/></p><h3 id="label-标签"><a href="#label-标签" class="headerlink" title="label 标签"></a>label 标签</h3><p><strong>描述:</strong> 该元素（标签）表示用户界面中某个元素的说明, 其通常与input连用，它可以标签文本不仅与其相应的文本输入元素在视觉上相关联，也可以点击关联的标签来聚焦或者激活这个输入元素，就像直接点击输入元素一样。</p><p><strong>属性:</strong></p><ul><li>for : 即和 label 元素在同一文档中的 可关联标签的元素 的 id。</li><li>form : 表示与 label 元素关联的 form 元素（即它的表单拥有者）。</li></ul><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- # 方式1.lable 与 input 属性绑定。 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"url"</span>&gt;</span>URL: <span class="tag">&lt;/<span class="name">label</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"https://blog.weiyigeek.top"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- # 方式2.将input直接放在label里，此时则不需要 for 和 id 属性，因为关联已隐含存在 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span> URL:</span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"https://blog.weiyigeek.top"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><br/></p><h3 id="input-标签"><a href="#input-标签" class="headerlink" title="input 标签"></a>input 标签</h3><p><strong>描述:</strong> 该元素用于为基于 Web 的表单创建交互式控件，以便接受来自用户的数据。取决于设备和用户代理不同，表单可以使用各种类型的输入数据和控件。<code>&lt;input&gt;</code> 元素是目前是 HTML 中最强大、最复杂的元素之一，因为它有大量的输入类型和属性组合。</p><p><strong>属性:</strong></p><table><thead><tr><th>属性</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><a href="accept"><code>accept</code></a></td><td><code>file</code></td><td>文件上传控件中预期文件类型的提示</td></tr><tr><td><a href="alt"><code>alt</code></a></td><td><code>image</code></td><td>图片类型的 alt 属性。对无障碍是必需的</td></tr><tr><td><a href="autocomplete"><code>autocomplete</code></a></td><td>除了 <code>checkbox</code>、<code>radio</code> 和按钮以外</td><td>表单自动填充特性提示</td></tr><tr><td><a href="capture"><code>capture</code></a></td><td><code>file</code></td><td>文件上传控件中媒体捕获方法的提示</td></tr><tr><td><a href="checked"><code>checked</code></a></td><td><code>checkbox</code>、<code>radio</code></td><td>控件是否选中</td></tr><tr><td><a href="dirname"><code>dirname</code></a></td><td><code>search</code>、<code>text</code></td><td>表单字段的名称，用于在提交表单时发送元素的方向性</td></tr><tr><td><a href="disabled"><code>disabled</code></a></td><td>所有类型</td><td>表单控件是否禁用</td></tr><tr><td><a href="form"><code>form</code></a></td><td>所有类型</td><td>将控件联系到表单元素中</td></tr><tr><td><a href="formaction"><code>formaction</code></a></td><td><code>image</code>、<code>submit</code></td><td>要提交表单的 URL 地址</td></tr><tr><td><a href="formenctype"><code>formenctype</code></a></td><td><code>image</code>、<code>submit</code></td><td>提交表单时使用的表单数据编码类型</td></tr><tr><td><a href="formmethod"><code>formmethod</code></a></td><td><code>image</code>、<code>submit</code></td><td>提交表单时所使用的 HTTP 方法</td></tr><tr><td><a href="formnovalidate"><code>formnovalidate</code></a></td><td><code>image</code>、<code>submit</code></td><td>绕过表单提交时的表单控件验证</td></tr><tr><td><a href="formtarget"><code>formtarget</code></a></td><td><code>image</code>、<code>submit</code></td><td>提交表单时的浏览上下文</td></tr><tr><td><a href="height"><code>height</code></a></td><td><code>image</code></td><td>与 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/img" target="_blank" rel="noopener"><code>![img]()</code></a> 元素的 height 属性有相同含义，垂直方向上的维度值</td></tr><tr><td><a href="list"><code>list</code></a></td><td>除了 <code>hidden</code>、<code>password</code>、<code>checkbox</code>、<code>radio</code> 和按钮以外</td><td>自动完成选项的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/datalist" target="_blank" rel="noopener"><code></code></a> 的 id 属性的值</td></tr><tr><td><a href="max"><code>max</code></a></td><td><code>date</code>、<code>month</code>、<code>week</code>、<code>time</code>、<code>datetime-local</code>、<code>number</code>、<code>range</code></td><td>最大值</td></tr><tr><td><a href="maxlength"><code>maxlength</code></a></td><td><code>text</code>、<code>search</code>、<code>url</code>、<code>tel</code>、<code>email</code>、<code>password</code></td><td><code>value</code> 的最大长度（字符数）</td></tr><tr><td><a href="min"><code>min</code></a></td><td><code>date</code>、<code>month</code>、<code>week</code>、<code>time</code>、<code>datetime-local</code>、<code>number</code>、<code>range</code></td><td>最小值</td></tr><tr><td><a href="minlength"><code>minlength</code></a></td><td><code>text</code>、<code>search</code>、<code>url</code>、<code>tel</code>、<code>email</code>、<code>password</code></td><td><code>value</code> 的最小长度（字符数）</td></tr><tr><td><a href="multiple"><code>multiple</code></a></td><td><code>email</code>、<code>file</code></td><td>布尔值。是否允许多个值</td></tr><tr><td><a href="name"><code>name</code></a></td><td>所有类型</td><td>表单的控件名称，作为键值对的一部分与表单一同提交</td></tr><tr><td><a href="pattern"><code>pattern</code></a></td><td><code>text</code>、<code>search</code>、<code>url</code>、<code>tel</code>、<code>email</code>、<code>password</code></td><td>为了使得 <code>value</code> 有效，必须符合的模式(正在)</td></tr><tr><td><a href="placeholder"><code>placeholder</code></a></td><td><code>text</code>、<code>search</code>、<code>url</code>、<code>tel</code>、<code>email</code>、<code>password</code>、<code>number</code></td><td>当没有值设定时，出现在表单控件上的文字</td></tr><tr><td><a href="readonly"><code>readonly</code></a></td><td>除了 <code>hidden</code>、<code>range</code>、<code>color</code>、<code>checkbox</code>、<code>radio</code> 和按钮以外</td><td>布尔值。如果存在，其中的值将不可编辑。</td></tr><tr><td><a href="required"><code>required</code></a></td><td>除了 <code>hidden</code>、<code>range</code>、<code>color</code> 和按钮以外</td><td>布尔值。如果存在，一个值是必需的，或者必须勾选该值才能提交表格。</td></tr><tr><td><a href="size"><code>size</code></a></td><td><code>text</code>、<code>search</code>、<code>url</code>、<code>tel</code>、<code>email</code>、<code>password</code></td><td>控件的尺寸</td></tr><tr><td><a href="src"><code>src</code></a></td><td><code>image</code></td><td>与 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/img" target="_blank" rel="noopener"><code>![img]()</code></a> 元素的 <code>src</code> 属性含义相同，图片资源的地址</td></tr><tr><td><a href="step"><code>step</code></a></td><td><code>date</code>、<code>month</code>、<code>week</code>、<code>time</code>、<code>datetime-local</code>、<code>number</code>、<code>range</code></td><td>有效的增量值</td></tr><tr><td><a href="type"><code>type</code></a></td><td>所有类型</td><td>表单控件的类型</td></tr><tr><td><a href="value"><code>value</code></a></td><td>所有类型</td><td>表单控件的初始值</td></tr><tr><td><a href="width"><code>width</code></a></td><td><code>image</code></td><td>与 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/img" target="_blank" rel="noopener"><code>![img]()</code></a> 元素的 <code>width</code> 属性含义相同</td></tr></tbody></table><ul><li><p>type 属性: 指定该标签值的类型，其类型如下所示:</p><p>  | type类型       | 说明                       |<br>  | ————– | ————————– |<br>  | text           | 文本框                     |<br>  | password       | 密码框                     |<br>  | radio          | 单选框                     |<br>  | checkbox       | 多选框                     |<br>  | email          | 邮箱格式                   |<br>  | tel            | 电话格式                   |<br>  | search         | 搜索格式                   |<br>  | url            | Url格式                    |<br>  | range          | 左右范围格式               |<br>  | number         | 数字加减格式               |<br>  | color          | 用于指定颜色的控件         |<br>  | file           | 上传文件                   |<br>  | hidden         | 隐藏Input输入框            |<br>  | time           | 时间选择器(mobile）        |<br>  | week、month    | 周数、日期选择器 (mobile） |<br>  | date           | 日期选择器 (mobile）       |<br>  | datetime       | 日期时间选择器 (mobile）   |<br>  | datetime-local | 输入日期和时间的控件，不包括时区。 |<br>  | image          | 设置按钮外观               |</p></li></ul><p><br/></p><p><strong>示例</strong></p><ul><li>1.文本框（Text Fields）、提交按钮(Submit Button)类型, 文本域通过<code>&lt;input type=&quot;text&quot;&gt;</code> 标签来设定，当用户要在表单中键入字母、数字等内容时，就会用到文本域, 并且当用户单击确认按钮时，表单的内容会被传送到服务端。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"get"</span> <span class="attr">action</span>=<span class="string">"service.php"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"first-name"</span>&gt;</span>First name:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"first-name"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span>   </span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span>Last name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"last-name"</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"确定"</span> <span class="attr">name</span>=<span class="string">"submit"</span> /&gt;</span>    <span class="comment">&lt;!-- 提交按钮 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"重置"</span> <span class="attr">name</span>=<span class="string">"reset"</span> /&gt;</span>      <span class="comment">&lt;!-- 重置按钮 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 注意：表单本身是不可见的，并且注意一个文本字段的默认宽度是20个字符。 --&gt;</span></span><br></pre></td></tr></table></figure><ul><li>2.密码类型，通过标签 <code>&lt;input type=&quot;password&quot;&gt;</code> 来定义, 通常在输入敏感信息时需要使用该标签。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"info.php"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>username:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">placeholder</span>=<span class="string">"请输入用户名"</span> /&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span>  <span class="comment">&lt;!--placeholder属性可以提示用户输入--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>password:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">placeholder</span>=<span class="string">"请输入用户密码"</span> /&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 注意: 密码字段字符不会明文显示，而是以星号或圆点替代。 --&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230314172426.png" alt="WeiyiGeek.上述示例1、2图" title="" class="">                <p>WeiyiGeek.上述示例1、2图</p>            </figure><ul><li>3.单选按钮（Radio Buttons）、多选按钮（Checkboxes）类型，通过 <code>&lt;input type=&quot;radio|checkbox&quot;&gt;</code> 标签定义了表单单选框选项以及多选按钮。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 单选框 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"info.php"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"male"</span>&gt;</span>Male|男<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"female"</span>&gt;</span>Female|女<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 多选框 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"service.php"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"vehicle"</span> <span class="attr">value</span>=<span class="string">"HTML"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>&gt;</span>HTML<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"vehicle"</span> <span class="attr">value</span>=<span class="string">"CSS"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>&gt;</span>CSS<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"vehicle"</span> <span class="attr">value</span>=<span class="string">"JS"</span>&gt;</span>Javascript<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span> <span class="attr">name</span>=<span class="string">"ok"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230314173233.png" alt="WeiyiGeek.单选框与多选框结果图" title="" class="">                <p>WeiyiGeek.单选框与多选框结果图</p>            </figure><ul><li>4.email邮箱地址类型，用于应该包含电子邮件地址的输入字段。根据浏览器支持，能够在被提交时自动对电子邮件地址进行验证。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>利用form 发送邮件到 master@weiyigeek.top<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"MAILTO:master@weiyigeek.top"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"text/plain"</span>&gt;</span></span><br><span class="line">  Name:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">placeholder</span>=<span class="string">"your name"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  E-mail:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"mail"</span> <span class="attr">placeholder</span>=<span class="string">"your email"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  Comment:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"comment"</span> <span class="attr">placeholder</span>=<span class="string">"your comment"</span> <span class="attr">size</span>=<span class="string">"50"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"发送"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"重置"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 注意: 某些智能手机会识别 email 类型，并在键盘增加 ".com" 以匹配电子邮件输入。 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/demo/demo_form.asp"</span>&gt;</span></span><br><span class="line">  E-mail:</span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"email"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230314173916.png" alt="WeiyiGeek.邮箱地址输入类型结果图" title="" class="">                <p>WeiyiGeek.邮箱地址输入类型结果图</p>            </figure><ul><li>5.search类型,用于搜索域，比如站点搜索或 Google 搜索，search 域显示为常规的文本域。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"search.asp"</span>&gt;</span></span><br><span class="line">  搜索谷歌：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"search"</span> <span class="attr">name</span>=<span class="string">"blog-search"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>6.tel类型,用于应该包含电话号码的输入字段,目前只有 Safari 8 支持 tel 类型。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span> Telephone:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"tel"</span> <span class="attr">name</span>=<span class="string">"usrtel"</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>7.number类型,用于应该包含数字值的输入字段,您能够对数字做出限制，根据浏览器支持，限制可应用到输入字段。</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">  Quantity (between 1 and 5):</span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">name</span>=<span class="string">"quantity"</span> <span class="attr">min</span>=<span class="string">"1"</span> <span class="attr">max</span>=<span class="string">"5"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 按照+10进行加减 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">name</span>=<span class="string">"points"</span> <span class="attr">min</span>=<span class="string">"0"</span> <span class="attr">max</span>=<span class="string">"100"</span> <span class="attr">step</span>=<span class="string">"10"</span> <span class="attr">value</span>=<span class="string">"30"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230314175232.png" alt="WeiyiGeek.URL与Number类型示意图" title="" class="">                <p>WeiyiGeek.URL与Number类型示意图</p>            </figure><ul><li>8.url 类型用于应该包含 URL 地址的输入字段。根据浏览器支持，在提交时能够自动验证 url 字段。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">  Blog:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"url"</span> <span class="attr">name</span>=<span class="string">"homepage"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>9.color 类型，用于应该包含颜色的输入字段，根据浏览器支持，颜色选择器会出现输入字段中。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Select your favorite color:</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"color"</span> <span class="attr">name</span>=<span class="string">"favcolor"</span> <span class="attr">value</span>=<span class="string">"#ff0000"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>10.range 类型, 用于应该包含一定范围内的值的输入字段，根据浏览器支持，输入字段能够显示为滑块控件。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Points: 0<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"range"</span> <span class="attr">name</span>=<span class="string">"points"</span> <span class="attr">min</span>=<span class="string">"0"</span> <span class="attr">max</span>=<span class="string">"10"</span>&gt;</span>10</span><br></pre></td></tr></table></figure><ul><li>11.image 类型, 用于自定义图片来表示，功能与Bottun差不多。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"user_name"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"image"</span> <span class="attr">src</span>=<span class="string">"http://weiyigeek.top/img/login.jpg"</span> <span class="attr">width</span>=<span class="string">"99"</span> <span class="attr">height</span>=<span class="string">"99"</span> /&gt;</span></span><br></pre></td></tr></table></figure><ul><li>12.日期时间类型，用于包含日期时间的的输入字段，根据浏览器（给手机端的）支持，日期（时间）选择器会出现输入字段中。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 语法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"date"</span>&gt;</span>  日期的输入字段</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"month"</span>&gt;</span> 选择月份和年份</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"week"</span>&gt;</span>  选择周和年</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"time"</span>&gt;</span>  选择时间（无时区）</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"datetime"</span>&gt;</span> 选择日期和时间（有时区）</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"datetime-local"</span>&gt;</span> 选择日期和时间（无时区）</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例 --&gt;</span></span><br><span class="line">生日：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"date"</span> <span class="attr">name</span>=<span class="string">"bday"</span>&gt;</span></span><br><span class="line">生日（月和年）：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"month"</span> <span class="attr">name</span>=<span class="string">"bday_month"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">Select a week：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"week"</span> <span class="attr">name</span>=<span class="string">"year_week"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">请选取一个时间：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"time"</span> <span class="attr">name</span>=<span class="string">"usr_time"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">Birthday (date and time): <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"datetime"</span> <span class="attr">name</span>=<span class="string">"bday_time"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">Birthday (date and time): <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"datetime-local"</span> <span class="attr">name</span>=<span class="string">"bday_time"</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230315085700.png" alt="WeiyiGeek.示例结果图" title="" class="">                <p>WeiyiGeek.示例结果图</p>            </figure><ul><li>13.file 类型，允许用户可以从他们的设备中选择一个或多个文件，选择后这些文件可以使用提交表单的方式上传到服务器上，或者通过 Javascript 代码和文件 API 对文件进行操作，注意该提交必须为POST请求。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"avatar"</span>&gt;</span>Choose a profile picture:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">id</span>=<span class="string">"avatar"</span> <span class="attr">name</span>=<span class="string">"avatar"</span> <span class="attr">accept</span>=<span class="string">"image/png, image/jpeg"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- accept 允许的格式 --&gt;</span></span><br><span class="line">accept=".png, .jpg, .jpeg"</span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">字符串 audio/*，表示“任何音频文件”。</span></span><br><span class="line"><span class="comment">字符串 video/*，表示“任何视频文件”。</span></span><br><span class="line"><span class="comment">字符串 image/*，表示“任何图片文件”。</span></span><br><span class="line"><span class="comment">字符串 .doc,.docx,.xml,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document ，表示接受类似于 MS Word 文档的任何文件。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- capture 说明 --&gt;</span></span><br><span class="line">capture (en-US) 属性是一个字符串（在移动设备上使用才能体现），如果 accept (en-US) 属性指出了 input 是图片或者视频类型，则它指定了使用哪个摄像头去获取这些数据。</span><br><span class="line">值 user 表示应该使用前置摄像头和（或）麦克风，值 environment 表示应该使用后置摄像头和（或）麦克风</span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"picture"</span>&gt;</span>拍张照片你的脸:<span class="tag">&lt;/<span class="name">label</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">name</span>=<span class="string">"picture"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">accept</span>=<span class="string">"image/*"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">capture</span>=<span class="string">"user"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"voice"</span>&gt;</span>记录你的声音:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">name</span>=<span class="string">"voice"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">accept</span>=<span class="string">"audio/*"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">capture</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- multiple 说明--&gt;</span></span><br><span class="line">multiple (en-US) 文件 input 允许用户选择多个文件。</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"file"</span>&gt;</span>选择要上传的文件<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">id</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span> <span class="attr">multiple</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>14.属性综合示例</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"weiyigeek.asp"</span> <span class="attr">method</span>=<span class="string">"get"</span> <span class="attr">autocomplete</span>=<span class="string">"on"</span> <span class="attr">novalidate</span>=<span class="string">"true"</span> <span class="attr">autofocus</span>=<span class="string">"autofocus"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- autocomplete 属性规定 form 或 input 域应该拥有自动完成功能 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- novalidate 属性规定在提交表单时不应该验证 form 或 input 域 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- autofocus 属性规定在页面加载时，域自动地获得焦点 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- form 属性规定输入域所属的一个或多个表单 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 表form override attributes 单重写属性允许您重写 form 元素的某些属性设定 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">formaction</span>=<span class="string">"demo_admin.asp"</span> <span class="attr">value</span>=<span class="string">"Submit as admin"</span> /&gt;</span>              <span class="comment">&lt;!-- 更换action提交的地址 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">formnovalidate</span>=<span class="string">"true"</span> <span class="attr">value</span>=<span class="string">"Submit without validation"</span> /&gt;</span> <span class="comment">&lt;!-- 当提交表单时不对表单数据（输入）进行验证 --&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">&lt;!-- image 类型的 height 和 width 属性规定 input 标签的图像高度和宽度 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"image"</span> <span class="attr">src</span>=<span class="string">"img_submit.gif"</span> <span class="attr">width</span>=<span class="string">"99"</span> <span class="attr">height</span>=<span class="string">"99"</span> /&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">&lt;!-- list 属性规定输入域的 datalist，datalist 是输入域的选项列表。 --&gt;</span></span><br><span class="line">  Webpage: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"url"</span> <span class="attr">list</span>=<span class="string">"url_list"</span> <span class="attr">name</span>=<span class="string">"link"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">datalist</span> <span class="attr">id</span>=<span class="string">"url_list"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">label</span>=<span class="string">"Index"</span> <span class="attr">value</span>=<span class="string">"https://www.weiygeek.top"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">label</span>=<span class="string">"Blog"</span> <span class="attr">value</span>=<span class="string">"https://blog.weiygeek.top"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">label</span>=<span class="string">"Tools"</span> <span class="attr">value</span>=<span class="string">"https://tools.weiygeek.top"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">datalist</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- min、max 和 step 属性用于为包含数字或日期的 input 类型规定限定（约束） --&gt;</span></span><br><span class="line">  Points: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">name</span>=<span class="string">"points"</span> <span class="attr">min</span>=<span class="string">"0"</span> <span class="attr">max</span>=<span class="string">"10"</span> <span class="attr">step</span>=<span class="string">"3"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- multiple 属性规定输入域中可选择多个值。 --&gt;</span></span><br><span class="line">  Select images: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"img"</span> <span class="attr">multiple</span>=<span class="string">"multiple"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- pattern 属性规定用于验证 input 域的模式（pattern）,模式（pattern） 是正 则表达式regEXP(直接注意，指定输入进行正则) --&gt;</span></span><br><span class="line">  Country code: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"country_code"</span> <span class="attr">pattern</span>=<span class="string">"[A-z]&#123;3&#125;"</span> <span class="attr">title</span>=<span class="string">"Three letter country code"</span> /&gt;</span>  <span class="comment">&lt;!--这里的titile有提示的功能--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- placeholder 属性提供一种提示（hint），描述输入域所期待的值。 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"search"</span> <span class="attr">name</span>=<span class="string">"user_search"</span>  <span class="attr">placeholder</span>=<span class="string">"Search W3School"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- required 属性规定必须在提交之前填写输入域（不能为空）。 --&gt;</span></span><br><span class="line">  Name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"usr_name"</span> <span class="attr">required</span>=<span class="string">"required"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br/></p><h3 id="textarea-标签"><a href="#textarea-标签" class="headerlink" title="textarea 标签"></a>textarea 标签</h3><p><strong>描述:</strong> 该元素表示一个多行纯文本编辑控件，当你希望用户输入一段相当长的(<code>可容纳无限数量</code>)、不限格式的文本，例如评论或反馈表单中的一段意见时，这很有用。其默认字体是等宽字体（通常是 Courier）</p><p><strong>属性:</strong></p><ul><li>autocomplete: 是否使用浏览器的记忆功能自动填充文本（off、on）。</li><li>autofocus: 页面加载完毕之后是否自动给本元素添加焦点。</li><li>rows: 元素的输入文本的行数（显示的高度）。</li><li>cols: 文本域的可视宽度, 必须为正数，默认为 20 (HTML5)。</li><li>disabled: 禁用文本域</li><li>form: 指定跟自身相关联的表单</li><li>maxlength: 允许用户输入的最大字符长度 (Unicode) </li><li>minlength: 允许用户输入的最小字符长度 (Unicode)</li><li>name: 元素的名称。</li><li>placeholder: 向用户提示可以在控件中输入的内容</li><li>readonly: 不允许用户修改元素内文本。</li><li>required: 提示用户这个元素的内容必填</li><li>spellcheck: 该属性设为 true 时，表明该元素会做拼写和语法检查。</li><li>wrap: 指定文本换行的方式<blockquote><p>默认为 soft 在到达元素最大宽度的时候，不会自动插入换行符.<br>设置为hard时，在文本到达元素最大宽度的时候，浏览器自动插入换行符 (CR+LF) 。</p></blockquote></li></ul><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 案例1 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"story"</span>&gt;</span>告诉我们你的故事:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">"story"</span> <span class="attr">name</span>=<span class="string">"story"</span> <span class="attr">rows</span>=<span class="string">"5"</span> <span class="attr">cols</span>=<span class="string">"33"</span>&gt;</span></span><br><span class="line">It was a dark and stormy night...</span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 案例2 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"service.php"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>个人介绍:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">placeholder</span>=<span class="string">"请输入你的个人简介,而且是必须填写得"</span> <span class="attr">cols</span>=<span class="string">"20"</span> <span class="attr">rows</span>=<span class="string">"2"</span> <span class="attr">required</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>禁用文本框:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">placeholder</span>=<span class="string">"请输入你的个人简介,而且是必须填写得"</span> <span class="attr">cols</span>=<span class="string">"20"</span> <span class="attr">rows</span>=<span class="string">"2"</span> <span class="attr">disabled</span>&gt;</span>我是一位爱好网络计算机的学生<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>单位介绍:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">placeholder</span>=<span class="string">"唯一极客公司 , 你不能修改"</span> <span class="attr">cols</span>=<span class="string">"20"</span> <span class="attr">rows</span>=<span class="string">"3"</span> <span class="attr">readonly</span> <span class="attr">autofocus</span> &gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span> <span class="attr">name</span>=<span class="string">"submit"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"重置"</span> <span class="attr">name</span>=<span class="string">"reset"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230315094527.png" alt="WeiyiGeek.文本域展示结果图" title="" class="">                <p>WeiyiGeek.文本域展示结果图</p>            </figure><p>温馨提示：在文本输入区内的文本行间，用 “%OD%OA” （回车/换行）进行分隔。<br>温馨提示：虽然你通过 cols 和 rows 属性来规定 textarea 的尺寸，不过更好的办法是使用 CSS 的 height 和 width 属性。</p><p><br/></p><h3 id="button-标签"><a href="#button-标签" class="headerlink" title="button 标签"></a>button 标签</h3><p><strong>描述:</strong> 该元素可以如其意定义一个按钮，在其元素内部您可以放置内容，比如文本或图像，这是该元素与使用 <code>&lt;input&gt;</code> 元素创建的按钮之间的不同之处。</p><p><strong>属性:</strong></p><ul><li>type 属性: 其值可为 button、reset、submit 。</li><li>name 属性: button 的名称，与表单数据一起提交。</li><li>value 属性: button 的初始值。</li><li>formaction 属性: 配合<code>submit</code>类型，将表单里面的数据分别提交到后端文件进行处理。</li><li>formenctype 属性: 覆盖 form 元素的 enctype 属性，其值为<code>application/x-www-form-urlencoded、multipart/form-data、text/plain</code>。</li><li>formnovalidate 属性: 带有两个提交按钮的表单（进行验证或不进行验证），第一个提交按钮提交数据时带有默认的表单验证，第二个提交按钮提交数据时不进行表单验证。</li><li>formmethod 属性: 覆盖原生表单的 HTTP 方法。</li><li>formtarget 属性: 表示接收提交的表单后在哪里显示响应（<code>_self,_top,_blank,_parent</code>）</li><li></li></ul><p>温馨提示: 请始终为 <code>&lt;button&gt;</code> 元素规定 type 属性 (三种类型)，不同的浏览器对 <code>&lt;button</code>&gt; 元素的 type 属性使用不同的默认值，提交的话建议使用input, 但是前者更容易使用css样式。</p><p><strong>示例</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例1.type 属性 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">onclick</span>=<span class="string">"alert('你好，世界，HTML!')"</span>&gt;</span>点我!点我!<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例2.formaction 、formenctype 、formnovalidate属性 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"info.php"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">  First name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"fname"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">formaction</span>=<span class="string">"demo-info.php"</span> <span class="attr">formenctype</span>=<span class="string">"text/plain"</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">formnovalidate</span>&gt;</span>不验证提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>综合实践：</strong><br>示例文件: <a href="https://github.com/WeiyiGeek/DevelopLearnig/blob/main/fore-end/HTML/example/study/03.DivisionSection.html" target="_blank" rel="noopener">https://github.com/WeiyiGeek/DevelopLearnig/blob/main/fore-end/HTML/example/study/03.DivisionSection.html</a></p><p><br/></p><h3 id="select-标签"><a href="#select-标签" class="headerlink" title="select 标签"></a>select 标签</h3><p><strong>描述:</strong> select 元素可创建单选或多选菜单, 其元素中的 <code>&lt;option&gt;</code> 标签用于定义列表中的可用选项。</p><p><strong>属性:</strong></p><ul><li>autofocus: 规定在页面加载后交本区域自动获得焦点</li><li>disabled: 规定禁用该下拉列表</li><li>form: 规定文本区域所属的一个或多个表单，指定表单的name名称。</li><li>multiple : 规定可选择多个选项</li><li>name : 规定下拉列表的名称</li><li>required : 规定文本区域是必填的</li><li>number : 规定下拉列表中可见选项的数目</li><li>size : 若控件显示为滚动列表框（如声明了 multiple），此属性表示为控件中同时可见的行数。</li></ul><p><br/></p><h3 id="option-标签"><a href="#option-标签" class="headerlink" title="option 标签"></a>option 标签</h3><p><strong>描述:</strong> option 元素定义下拉列表中的一个选项（一个条目），浏览器将该标签中的内容作为 <code>&lt;select&gt;</code> 标签的菜单或是滚动列表中的一个元素显示, 所以该元素位于 select 元素内部。</p><p><strong>属性:</strong> </p><ul><li>disabled : 规定此选项应在首次加载时被禁用。</li><li>selected : 规定选项( 在首次显示在列表中时)表现为选中状态</li><li>value : 定义送往服务器的选项值。</li><li>label ： 定义当使用 <code>&lt;optgroup&gt;</code> 时所使用的标注</li></ul><p><strong>注释</strong>: </p><ul><li><code>&lt;option&gt;</code> 标签可以在不带有任何属性的情况下使用，但是您通常需要使用 value 属性，此属性会指示出被送往服务器的内容。如果列表选项很多，可以使用 <code>&lt;optgroup&gt;</code> 标签对相关选项进行组合。</li><li>multiple 属性的 <code>&lt;select&gt;</code> 元素中选中多个选项，用户可以按住 Ctrl, Command, 或 Shift 键（取决于你的操作系统）然后鼠标点击不同选项以选择或取消选择。</li></ul><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例1.简单示例 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"https://weiyigeek.top/cars.php"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"cars"</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>--Please choose an option--<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"领克"</span>&gt;</span>领克<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"吉利"</span>&gt;</span>吉利<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"长安"</span>&gt;</span>长安<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例2.下面是设置显示多个选项和必须填写多选,并且用form来绑定提交的form表单 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"carlist"</span> <span class="attr">form</span>=<span class="string">"weiyigeek"</span> <span class="attr">size</span>=<span class="string">"4"</span> <span class="attr">required</span> <span class="attr">multiple</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"volvo"</span>&gt;</span>Volvo<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"saab"</span>&gt;</span>Saab<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"opel"</span>&gt;</span>Opel<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"audi"</span>&gt;</span>Audi<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例3.设置默认选择的而且第二项无法选择 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"cars"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"volvo"</span>&gt;</span>Volvo<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"saab"</span> <span class="attr">disabled</span>&gt;</span>Saab<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"fiat"</span> <span class="attr">selected</span>=<span class="string">"selected"</span>&gt;</span>Fiat<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"audi"</span>&gt;</span>Audi<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><br/></p><h3 id="optgroup-标签"><a href="#optgroup-标签" class="headerlink" title="optgroup 标签"></a>optgroup 标签</h3><p><strong>描述:</strong> 该元素经常用于把相关的选项组合在一起，如果你有很多的选项组合, 你可以使用<code>&lt;optgroup&gt;</code> 标签能够很简单的将相关选项组合在一起。</p><p><strong>属性:</strong></p><ul><li>disbaled: 规定禁用该选项组。</li><li>label: 为该选项组规定描述。</li></ul><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"cars"</span> <span class="attr">action</span>=<span class="string">"index.html"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">form</span>=<span class="string">"weiyigeek"</span> <span class="attr">name</span>=<span class="string">"cars"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optgroup</span> <span class="attr">label</span>=<span class="string">"国产"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"长安"</span>&gt;</span>长安<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"吉利"</span>&gt;</span>吉利<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">optgroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optgroup</span> <span class="attr">label</span>=<span class="string">"合资"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"大众"</span>&gt;</span>大众<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"丰田"</span>&gt;</span>丰田<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">optgroup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230316111137.png" alt="WeiyiGeek.select-optgroup-option实践图" title="" class="">                <p>WeiyiGeek.select-optgroup-option实践图</p>            </figure><p><br/></p><h3 id="fieldset-标签"><a href="#fieldset-标签" class="headerlink" title="fieldset 标签"></a>fieldset 标签</h3><p><strong>描述:</strong> 该元素用于对表单中的控制元素进行分组（也包括 label 元素）.</p><p><strong>属性:</strong></p><ul><li>disabled: 如果设置了这个 bool 值属性，<code>&lt;fieldset&gt;</code> 的所有子代表单控件也会继承这个属性。</li><li>form: 将该值设为一个 <code>&lt;form&gt;</code> 元素的 id 属性值以将 <code>&lt;fieldset&gt;</code> 设置成这个 <code>&lt;form&gt;</code> 的一部分。</li><li>name: 元素分组的名称。</li></ul><p><br/></p><h3 id="legend-标签"><a href="#legend-标签" class="headerlink" title="legend 标签"></a>legend 标签</h3><p>描述: 该元素用于表示其父元素 <code>&lt;fieldset&gt;</code> 的内容标题。</p><p><br/></p><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">legend &#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background-color</span>: <span class="selector-id">#000</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line"><span class="undefined">  padding: 3px 6px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">input &#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">margin</span>: 0<span class="selector-class">.4rem</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"info"</span> <span class="attr">action</span>=<span class="string">"index.html"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">fieldset</span> <span class="attr">disabled</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">legend</span>&gt;</span>Please Input Personal Info<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">  Name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  Email: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  Date of birth: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">id</span>=<span class="string">"mothman"</span> <span class="attr">name</span>=<span class="string">"monster"</span> <span class="attr">value</span>=<span class="string">"M"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"mothman"</span>&gt;</span>Mothman<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230316141818.png" alt="WeiyiGeek.fieldset与legend元素示例图" title="" class="">                <p>WeiyiGeek.fieldset与legend元素示例图</p>            </figure><p><br/></p><h3 id="datalist-标签"><a href="#datalist-标签" class="headerlink" title="datalist 标签"></a>datalist 标签</h3><p><strong>描述:</strong> 标签规定了 <code>&lt;input&gt;</code> 元素可能的选项列表，”自动完成”的特性, 用户能看到一个下拉列表，里边的选项是预先定义好的，将作为用户的输入数据。（PS: 输入的时候可以提示补全你输入的值，其元素并不会像select元素一样显示）</p><p><strong>属性:</strong></p><ul><li>id 属性: 请使用 <code>&lt;input&gt;</code> 元素的 list 属性来绑定 <code>&lt;datalist&gt;</code> 元素（id引用list属性值）。</li></ul><p><strong>示例:</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"server.php"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 温馨提示: 注意此处，id引用list的属性值. --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">list</span>=<span class="string">"browsers"</span> <span class="attr">name</span>=<span class="string">"weiyigeek"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">datalist</span> <span class="attr">id</span>=<span class="string">"browsers"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"Internet Explorer"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"Firefox"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"Chrome"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"Opera"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"Safari"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">datalist</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br/></p><h3 id="output-标签"><a href="#output-标签" class="headerlink" title="output 标签"></a>output 标签</h3><p><strong>描述:</strong> 该标签是html5新增标签，是使用来定义不同类型的输出（比如：脚本的输出），output标签通常和form表单一起使用，用来输出显示计算结果。</p><p><br/></p><p><strong>属性:</strong></p><ul><li>for: 定义输出域相关的一个或多个元素。</li><li>form: 定义输入字段所属的一个或多个表单。</li><li>name: 定义对象的唯一名称。（表单提交时使用）</li></ul><p><br/></p><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例1.在用户输入时触发. --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">oninput</span>=<span class="string">"x.value=parseInt(a.value)+parseInt(b.value)"</span>&gt;</span></span><br><span class="line">  0<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"range"</span> <span class="attr">id</span>=<span class="string">"a"</span> <span class="attr">value</span>=<span class="string">"50"</span>&gt;</span>100 + <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">id</span>=<span class="string">"b"</span> <span class="attr">value</span>=<span class="string">"50"</span>&gt;</span></span><br><span class="line">  =</span><br><span class="line">  <span class="tag">&lt;<span class="name">output</span> <span class="attr">name</span>=<span class="string">"x"</span> <span class="attr">for</span>=<span class="string">"a b"</span>&gt;</span><span class="tag">&lt;/<span class="name">output</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例2.加法计算器. --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">oninput</span>=<span class="string">"x.value=parseInt(a.value)+parseInt(b.value)"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">id</span>=<span class="string">"a"</span> <span class="attr">value</span>=<span class="string">"0"</span>&gt;</span> +</span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">id</span>=<span class="string">"b"</span> <span class="attr">value</span>=<span class="string">"0"</span>&gt;</span> =</span><br><span class="line">  <span class="tag">&lt;<span class="name">output</span> <span class="attr">name</span>=<span class="string">"x"</span> <span class="attr">for</span>=<span class="string">"a b"</span>&gt;</span>0<span class="tag">&lt;/<span class="name">output</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><br/></p><h3 id="keygen-标签-已弃用"><a href="#keygen-标签-已弃用" class="headerlink" title="keygen 标签 (已弃用)"></a>keygen 标签 (已弃用)</h3><p>描述: 该元素是为了方便生成密钥材料和提交作为 HTML form 的一部分的公钥。这种机制被用于设计基于 Web 的证书管理系统。按照预想，<code>&lt;keygen&gt;</code> 元素将用于 HTML 表单与其他的所需信息一起构造一个证书请求，该处理的结果将是一个带有签名的证书。</p><p>属性: </p><ul><li>autofocus: 获取焦点</li><li>disabled: 设置不可用</li><li>challenge: 挑战就是提交公共的keys</li><li>form: 关联表单</li><li>keytype: Key 类型支持RSA、DSA、EC(<code>椭圆曲线</code>)。</li><li>name: 名称的控制</li></ul><p>示例:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 简单示例 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">keygen</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">challenge</span>=<span class="string">"challenge string"</span> <span class="attr">keytype</span>=<span class="string">"type"</span> <span class="attr">keyparams</span>=<span class="string">"pqg-params"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 综合示例 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"demo_keygen.php"</span> <span class="attr">method</span>=<span class="string">"get"</span> <span class="attr">id</span>=<span class="string">"secureformid"</span>&gt;</span></span><br><span class="line">  Username: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"usr_name"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>下面的注册机领域在表单之外,但它仍属于该表单的一部分。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">Encryption: <span class="tag">&lt;<span class="name">keygen</span> <span class="attr">name</span>=<span class="string">"security"</span> <span class="attr">form</span>=<span class="string">"secureformid"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230317104103.png" alt="WeiyiGeek.keygen执行结果示例图" title="" class="">                <p>WeiyiGeek.keygen执行结果示例图</p>            </figure><p><br/></p><p><strong>综合示例:</strong><br>代码示例: <a href="https://github.com/WeiyiGeek/DevelopLearnig/blob/main/fore-end/HTML/example/study/08.Input.html" target="_blank" rel="noopener">https://github.com/WeiyiGeek/DevelopLearnig/blob/main/fore-end/HTML/example/study/08.Input.html</a><br>执行结果:<br><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230317103845.png" alt="WeiyiGeek.执行结果图" title="" class="">                <p>WeiyiGeek.执行结果图</p>            </figure></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;</summary>
    
    
    
    <category term="前端学习" scheme="https://blog.weiyigeek.top/categories/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="学习笔记" scheme="https://blog.weiyigeek.top/categories/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="HTML" scheme="https://blog.weiyigeek.top/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>如何使用Powershell操作FTP进行数据文件自动上传备份</title>
    <link href="https://blog.weiyigeek.top/2023/3-7-720.html"/>
    <id>https://blog.weiyigeek.top/2023/3-7-720.html</id>
    <published>2023-03-07T07:36:30.000Z</published>
    <updated>2023-03-13T01:40:23.287Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="0x00-前言简述"><a href="#0x00-前言简述" class="headerlink" title="0x00 前言简述"></a>0x00 前言简述</h2><p>描述: 在运维过程中会将服务器上数据文件备份在共享磁盘或者FTP服务器中，此处由于作者环境是在Windows系统上，且在业务上需要同步文件到FTP服务器中，遂有了此文，帮助各位看友了解，如何在Windows上使用Powershell脚本将数据备份文件自动上传的FTP服务器上?</p><p>在下述实践中，我们可以使用三种方式进行数据文件上传到FTP服务器中。</p><ul><li>方式1.使用Powershell与Windows原生ftp客户端工具(仅仅支持主动模式)进行文件备份.</li><li>方式2.使用Powershell中.NET的内置的FTP操作类 <code>System.Net.FtpWebRequest</code> 连接ftp服务器并进行备份文件上传.</li><li>方式3.使用Powershell的PSFTP模块包连接ftp服务器并进行备份文件上传。</li></ul><a id="more"></a><p>项目地址（欢迎大家 star ，蟹蟹٩(‘ω’)و支持 ）: <a href="https://github.com/WeiyiGeek/SecOpsDev/" target="_blank" rel="noopener">https://github.com/WeiyiGeek/SecOpsDev/</a></p><p>下述实验室需要部署FTP服务器，若不了解的童鞋，可参考博主的FTP入门扫盲篇<code>《FTP远程文件传输服务安装与配置》</code>，文章地址: <a href="https://blog.weiyigeek.top/2019/10-4-74.html">https://blog.weiyigeek.top/2019/10-4-74.html</a> </p><p>或者参考此《使用Kubernetes容器快速部署常用服务》( <a href="https://blog.weiyigeek.top/2022/2-25-668.html">https://blog.weiyigeek.top/2022/2-25-668.html</a> )文章快速使用 kubernetes 安装 vsftpd 服务，搭建ftp测试环境。</p><p>废话不多说，实践为王！</p><p>首发链接: <a href="https://mp.weixin.qq.com/s/YuaqncfbOsC3-wjCdikfBw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/YuaqncfbOsC3-wjCdikfBw</a></p><hr><h2 id="0x01-实践演示"><a href="#0x01-实践演示" class="headerlink" title="0x01 实践演示"></a>0x01 实践演示</h2><h3 id="实践1-使用Powershell与Windows原生ftp客户端工具-仅仅支持主动模式-进行文件备份"><a href="#实践1-使用Powershell与Windows原生ftp客户端工具-仅仅支持主动模式-进行文件备份" class="headerlink" title="实践1.使用Powershell与Windows原生ftp客户端工具(仅仅支持主动模式)进行文件备份."></a>实践1.使用Powershell与Windows原生ftp客户端工具(仅仅支持主动模式)进行文件备份.</h3><p><strong>代码示例:</strong><br><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230307163350.png" alt="WeiyiGeek.使用Powershell与Windows原生ftp客户端备份图" title="" class="">                <p>WeiyiGeek.使用Powershell与Windows原生ftp客户端备份图</p>            </figure></p><p><strong>温馨提示:</strong> 为了保障脚本中FTP密码的安全性，我将脚本中高敏感的账号密码进行编码存储（只能防君子，不能防小人😃）。<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编码</span></span><br><span class="line"><span class="variable">$bytes</span> = [System.Text.Encoding]::Unicode.GetBytes(<span class="string">"weiyigeek"</span>)</span><br><span class="line"><span class="variable">$str</span> = [System.Convert]::ToBase64String(<span class="variable">$bytes</span>)</span><br><span class="line">echo <span class="variable">$str</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解码</span></span><br><span class="line"><span class="variable">$str</span> = <span class="string">"VwBlAGkAeQBpAEcAZQBlAGsAZQByAA=="</span></span><br><span class="line">[System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String(<span class="variable">$str</span>))</span><br><span class="line">[System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String(<span class="variable">$str</span>)) | <span class="built_in">Out-File</span> -Encoding <span class="string">"ASCII"</span> plaintext.html</span><br></pre></td></tr></table></figure></p><p>温馨提示: 获取上述示例代码或者脚本地址失效，请在【<code>全栈工程师修炼指南</code>】公众号回复 <code>PowerShell-FTP 或者 10000</code> 获取最新PowerShell的FTP同步脚本地址。<br>全栈工程师修炼指南: <a href="https://weiyigeek.top/wechat.html?key=全栈工程师修炼指南" target="_blank" rel="noopener">https://weiyigeek.top/wechat.html?key=10000</a><br>注意提示: 在中文Windows下执行脚本默认为GBK，若是乱码请转为GBK或者其他编码模式。</p><p><br/></p><h3 id="实践2-使用Powershell中-NET的内置的FTP操作类-System-Net-FtpWebRequest-连接ftp服务器并进行备份文件上传"><a href="#实践2-使用Powershell中-NET的内置的FTP操作类-System-Net-FtpWebRequest-连接ftp服务器并进行备份文件上传" class="headerlink" title="实践2.使用Powershell中.NET的内置的FTP操作类 System.Net.FtpWebRequest 连接ftp服务器并进行备份文件上传."></a>实践2.使用Powershell中.NET的内置的FTP操作类 <code>System.Net.FtpWebRequest</code> 连接ftp服务器并进行备份文件上传.</h3><p>描述: 在实践1中的方式由于windows自带的ftp客户端只支持（主动模式），对于FTP被动模式是没有办法的，此时我们可以采用如下方式进行被动模式下上传文件到FTP空间之中。</p><p><strong>代码示例:</strong><br><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230307170840.png" alt="WeiyiGeek.在PS中使用.NET的内置的FTP操作类图" title="" class="">                <p>WeiyiGeek.在PS中使用.NET的内置的FTP操作类图</p>            </figure></p><p><strong>执行结果:</strong><br><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230307173350.png" alt="WeiyiGeek.上传到FTP服务器中的备份文件图" title="" class="">                <p>WeiyiGeek.上传到FTP服务器中的备份文件图</p>            </figure></p><p><br/></p><p>温馨提示: 获取上述示例代码或者脚本地址失效，请在【<code>全栈工程师修炼指南</code>】公众号回复 <code>PowerShell-FTP 或者 10000</code> 获取最新PowerShell的FTP同步脚本地址。<br>全栈工程师修炼指南: <a href="https://weiyigeek.top/wechat.html?key=全栈工程师修炼指南" target="_blank" rel="noopener">https://weiyigeek.top/wechat.html?key=10000</a><br>注意提示: 在中文Windows下执行脚本默认为GBK，若是乱码请转为GBK或者其他编码模式。</p><p><br/></p><p>为了实现脚本的自动执行，我们可以将其配置到计算机任务计划中，进行定时执行，操作流程如下：</p><p>步骤 01.在开始-&gt;运行 命令行执行 taskschd.msc 命令 或者 打开任务计划程序。</p><p>步骤 02.新建任务计划，创建基本任务，设置触发实践以及触发操作，如下图所示</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230307174513.png" alt="WeiyiGeek.Windows下的定时任务图" title="" class="">                <p>WeiyiGeek.Windows下的定时任务图</p>            </figure><p><br/></p><h3 id="实践3-使用Powershell的PSFTP模块包连接ftp服务器并进行备份文件上传。"><a href="#实践3-使用Powershell的PSFTP模块包连接ftp服务器并进行备份文件上传。" class="headerlink" title="实践3.使用Powershell的PSFTP模块包连接ftp服务器并进行备份文件上传。"></a>实践3.使用Powershell的PSFTP模块包连接ftp服务器并进行备份文件上传。</h3><p>描述: 通过上面实践我们了解到PowerShell本身并没了内置对FTP的支持，但是.net里面内置了FTP操作的类，但是确实自己来组合封装几个FTP操作类是不是比较费时。</p><p>此时我只想偷懒，我去PowerShell Gallery里面搜寻一番后（ <a href="https://www.powershellgallery.com" target="_blank" rel="noopener">https://www.powershellgallery.com</a> ），发现已经有人帮我造好轮子了即 <code>PSFTP 模块包</code>，既然这样那就不客气了，拿来开箱即用！</p><p>在使用前我们需要安装 <code>PSFTP 模块包</code>，模块当前版本为 <code>1.7.1.1</code>，其作用是管理FTP帐户的功能。<br>模块地址: <a href="https://www.powershellgallery.com/packages/PSFTP/1.7.1.1" target="_blank" rel="noopener">https://www.powershellgallery.com/packages/PSFTP/1.7.1.1</a> </p><p><br/></p><p><strong>安装：</strong><br>官网提供了三种安装方式，即在线命令安装、Azure云安装以及手动下载安装。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在线: 复制并粘贴以下命令以使用PowerShellGet更多信息安装此程序包。（可能受到环境影响，推荐）</span></span><br><span class="line">PS&gt; Install-Module -Name PSFTP</span><br><span class="line">  <span class="comment"># 需要使用 NuGet 提供程序来继续操作</span></span><br><span class="line">  <span class="comment"># PowerShellGet 需要使用 NuGet 提供程序“2.8.5.201”或更高版本来与基于 NuGet 的存储库交互。必须在“C:\Program</span></span><br><span class="line">  <span class="comment"># Files\PackageManagement\ProviderAssemblies”或“C:\Users\WeiyiGeek\AppData\Local\PackageManagement\ProviderAssemblies”</span></span><br><span class="line">  <span class="comment"># 中提供 NuGet 提供程序。也可以通过运行 'Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force' 安装 NuGet</span></span><br><span class="line">  <span class="comment">#  提供程序。是否要让 PowerShellGet 立即安装并导入 NuGet 提供程序?</span></span><br><span class="line">    [Y] 是(Y)  [N] 否(N)  [S] 暂停(S)  [?] 帮助 (默认值为“Y”): Y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动: 手动将.nupkg文件下载到系统的默认下载位置。（需要配置较多）</span></span><br><span class="line"><span class="comment"># https://psg-prod-eastus.azureedge.net/packages/psftp.1.7.1.1.nupkg</span></span><br><span class="line">PS&gt; Install-Package  psftp.1.7.1.1.nupkg</span><br></pre></td></tr></table></figure><br><br/></p><p><strong>验证</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装PSFTP包之后我们使用如下命令查看是否已经安装成功</span></span><br><span class="line">PS&gt; <span class="built_in">Get-Module</span> PSFTP -ListAvailable</span><br><span class="line">  <span class="comment"># 目录: C:\Program Files\WindowsPowerShell\Modules</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment"># ModuleType Version    Name                                ExportedCommands</span></span><br><span class="line">  <span class="comment"># ---------- -------    ----                                ----------------</span></span><br><span class="line">  <span class="comment"># Manifest   1.7.1.1    PSFTP                               &#123;Add-FTPItem, Get-FTPChildItem, Get-FTPConnection, Get-FTPItem...&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看PSFTP工具里面都支持那些操作</span></span><br><span class="line">PS&gt; <span class="built_in">Get-Command</span> -FullyQualifiedModule PSFTP</span><br><span class="line">  CommandType     Name                                               Version    Source</span><br><span class="line">  -----------     ----                                               -------    ------</span><br><span class="line">  Alias           Move-FTPItem                                       <span class="number">1.7</span>.<span class="number">1.1</span>    PSFTP</span><br><span class="line">  Alias           Receive-FTPItem                                    <span class="number">1.7</span>.<span class="number">1.1</span>    PSFTP</span><br><span class="line">  Alias           Send-FTPItem                                       <span class="number">1.7</span>.<span class="number">1.1</span>    PSFTP</span><br><span class="line">  <span class="keyword">Function</span>        Add-FTPItem                                        <span class="number">1.7</span>.<span class="number">1.1</span>    PSFTP</span><br><span class="line">  <span class="keyword">Function</span>        Get-FTPChildItem                                   <span class="number">1.7</span>.<span class="number">1.1</span>    PSFTP</span><br><span class="line">  <span class="keyword">Function</span>        Get-FTPConnection                                  <span class="number">1.7</span>.<span class="number">1.1</span>    PSFTP</span><br><span class="line">  <span class="keyword">Function</span>        Get-FTPItem                                        <span class="number">1.7</span>.<span class="number">1.1</span>    PSFTP</span><br><span class="line">  <span class="keyword">Function</span>        Get-FTPItemSize                                    <span class="number">1.7</span>.<span class="number">1.1</span>    PSFTP</span><br><span class="line">  <span class="keyword">Function</span>        New-FTPItem                                        <span class="number">1.7</span>.<span class="number">1.1</span>    PSFTP</span><br><span class="line">  <span class="keyword">Function</span>        Remove-FTPItem                                     <span class="number">1.7</span>.<span class="number">1.1</span>    PSFTP</span><br><span class="line">  <span class="keyword">Function</span>        Rename-FTPItem                                     <span class="number">1.7</span>.<span class="number">1.1</span>    PSFTP</span><br><span class="line">  <span class="keyword">Function</span>        Set-FTPConnection                                  <span class="number">1.7</span>.<span class="number">1.1</span>    PSFTP</span><br><span class="line">  <span class="keyword">Function</span>        Test-FTPItem                                       <span class="number">1.7</span>.<span class="number">1.1</span>    PSFTP</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看帮助命令</span></span><br><span class="line">PS&gt; <span class="built_in">Get-Help</span> Set-FTPConnection -Examples</span><br></pre></td></tr></table></figure><p><br/></p><p><strong>命令行实践</strong><br>描述: 此处我按照文章首部的地址，进行安装了ftp测试环境，其FTP链接环境信息如下：</p><blockquote><p>IP: 10.20.176.215<br>Port: 30021<br>User: weiyigeek<br>Pass: password</p></blockquote><p>首先，利用Windows中原生的ftp客户端工具链接测试（PS: 如果是使用Linux登录就不存在问题）：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">PS L:\WeiyiGeek&gt; ftp</span><br><span class="line">ftp&gt; open 10.20.176.215 30021</span><br><span class="line">连接到 10.20.176.215。</span><br><span class="line">220 (vsFTPd 3.0.2)</span><br><span class="line">200 Always <span class="keyword">in</span> UTF8 mode.</span><br><span class="line">用户(10.20.176.215:(none)): weiyigeek</span><br><span class="line">331 Please specify the password.</span><br><span class="line">密码:</span><br><span class="line">230 Login successful.</span><br><span class="line">ftp&gt; dir</span><br><span class="line">500 Illegal PORT <span class="built_in">command</span>.</span><br><span class="line">425 Use PORT or PASV first. <span class="comment"># 可看到不支持被动模式。</span></span><br></pre></td></tr></table></figure></p><p>然后，我们手动使用PSFTP模块进行被动链接测试：<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置 PowerShell 执行策略导入安装的PSFTP模块</span></span><br><span class="line"><span class="built_in">Set-executionpolicy</span> remotesigned</span><br><span class="line"><span class="built_in">Import-Module</span> PSFTP</span><br><span class="line"></span><br><span class="line"><span class="comment"># ftp 认证票据生成</span></span><br><span class="line"><span class="variable">$FTPConnect</span> = <span class="string">"ftp://10.20.176.215:30021"</span>  <span class="comment"># FTP 服务器链接字符串</span></span><br><span class="line"><span class="variable">$FTPUser</span> = <span class="string">"weiyigeek"</span> </span><br><span class="line"><span class="variable">$FTPPass</span> = <span class="built_in">ConvertTo-SecureString</span> -String <span class="string">"password"</span> -AsPlainText -Force</span><br><span class="line"><span class="variable">$FTPCre</span> = <span class="built_in">New-Object</span> -TypeName System.Management.Automation.PSCredential -ArgumentList <span class="variable">$FTPUser</span>, <span class="variable">$FTPPass</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接到 ftp 服务器链接 (被动链接)</span></span><br><span class="line">Set-FTPConnection -Credentials <span class="variable">$FTPCre</span> -Server <span class="variable">$FTPConnect</span> -UsePassive</span><br><span class="line">  <span class="comment"># 执行结果：</span></span><br><span class="line">    <span class="comment"># ContentLength           : -1</span></span><br><span class="line">    <span class="comment"># Headers                 : &#123;&#125;</span></span><br><span class="line">    <span class="comment"># SupportsHeaders         : True</span></span><br><span class="line">    <span class="comment"># ResponseUri             : ftp://10.20.176.215:30021/</span></span><br><span class="line">    <span class="comment"># StatusCode              : ClosingData</span></span><br><span class="line">    <span class="comment"># StatusDescription       : 226 Directory send OK.</span></span><br><span class="line">    <span class="comment"># LastModified            : 0001/1/1 0:00:00</span></span><br><span class="line">    <span class="comment"># BannerMessage           : 220 (vsFTPd 3.0.2)</span></span><br><span class="line">    <span class="comment"># WelcomeMessage          : 230 Login successful.</span></span><br><span class="line">    <span class="comment"># ExitMessage             : 221 Goodbye.</span></span><br><span class="line">    <span class="comment"># IsFromCache             : False</span></span><br><span class="line">    <span class="comment"># IsMutuallyAuthenticated : False</span></span><br><span class="line">    <span class="comment"># ContentType             :</span></span><br></pre></td></tr></table></figure></p><p>最后，我们使用PSFTP进行文件管理:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.添加/上传文件 - Add-FTPItem (Send-FTPItem)</span></span><br><span class="line">Send-FTPItem -LocalPath .\console.log</span><br><span class="line">Send-FTPItem -LocalPath .\weiyigeek.txt -Overwrite</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.新建目录 - New-FTPItem</span></span><br><span class="line">New-FTPItem -Name weiyigeek</span><br><span class="line"><span class="comment"># - 指定目录创建子目录</span></span><br><span class="line">New-FTPItem -Name subdir -Path <span class="variable">$FTPConnect</span>/weiyigeek </span><br><span class="line">  <span class="comment"># 257 "/weiyigeek/subdir" created</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.获取目录下面的文件、子目录 - Get-FTPChildItem</span></span><br><span class="line">Get-FTPChildItem</span><br><span class="line">  <span class="comment">#     Parent:ftp://10.20.176.215:30021</span></span><br><span class="line">  <span class="comment"># Dir Right     Ln  User   Group  Size   ModifiedDate        Name</span></span><br><span class="line">  <span class="comment"># --- -----     --  ----   -----  ----   ------------        ----</span></span><br><span class="line">  <span class="comment"># d   rwx------ 2   ftp    ftp           2023/3/7 11:17:00   weiygeek</span></span><br><span class="line">  <span class="comment"># -   rw------- 1   ftp    ftp    18KB   2023/3/7 11:11:00   console.log</span></span><br><span class="line">  <span class="comment"># -   rw------- 1   ftp    ftp    2KB    2023/3/7 11:12:00   ls.txt</span></span><br><span class="line">Get-FTPChildItem -Path subdir  <span class="comment"># 指定目录</span></span><br><span class="line">Get-FTPChildItem -Recurs -Depth 1     <span class="comment"># 递归返回所有信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.下载文件 - Get-FTPItem（Receive-FTPItem）</span></span><br><span class="line"><span class="comment"># - 下载image.png到当前目录</span></span><br><span class="line">Get-FTPItem weiyigeek.png</span><br><span class="line"><span class="comment"># - 下载image.png到指定目录</span></span><br><span class="line">Get-FTPItem weiyigeek.png -LocalPath D:\download</span><br><span class="line"><span class="comment"># - 下载image.png到指定目录，如果指定目录不存在自动创建</span></span><br><span class="line">Get-FTPItem weiyigeek.png -LocalPath D:\download\1\2\3\4\5 -RecreateFolders</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.获取文件大小 - Get-FTPItemSize</span></span><br><span class="line">(Get-FTPItemSize console.log)/1000</span><br><span class="line">18.781</span><br><span class="line"></span><br><span class="line"><span class="comment"># 6.删除文件 - Remove-FTPItem</span></span><br><span class="line">Remove-FTPItem .\ls.txt</span><br><span class="line">  <span class="comment"># -&gt;Remove File: ftp://10.20.176.215:30021/.\ls.txt</span></span><br><span class="line">  <span class="comment"># 250 Delete operation successful.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 7.重命名文件或者目录 - Rename-FTPItem（Move-FTPItem）</span></span><br><span class="line">Rename-FTPItem -Path .\console.log -NewName weiyigeek.top.log</span><br><span class="line">  <span class="comment"># 250 Rename successful.</span></span><br></pre></td></tr></table></figure><p>是不是，感觉比实践2中.net实现方便多了，所以用起来是真的舒服，实际上它是将.net中的方法进行了封装。</p><p><br/></p><p><strong>项目实践:</strong><br><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230308094016.png" alt="WeiyiGeek.PSFTP模块实践自动上传备份文件代码图" title="" class="">                <p>WeiyiGeek.PSFTP模块实践自动上传备份文件代码图</p>            </figure></p><p><strong>执行结果:</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">PS D:\Tools&gt; .\DB-Backup-To-FTP-Use-PSFTP-Package.ps1</span><br><span class="line">[03/08/2023 09:09:08] 当前数据库备份文件 qchatgpt.legacy.log ，写入 ./upload.txt 文件中!</span><br><span class="line">[03/08/2023 09:09:08] 当前数据库备份文件 qchatgpt.legacy.log , 上次数据库备份文件 logs 名称, 上传标识 1 .</span><br><span class="line">230 Login successful.</span><br><span class="line"></span><br><span class="line">   Parent:ftp://10.20.176.215:30021/weiyigeek/qchatgpt.legacy.log</span><br><span class="line"></span><br><span class="line">Dir Right     Ln  User   Group  Size   ModifiedDate        Name</span><br><span class="line">--- -----     --  ----   -----  ----   ------------        ----</span><br><span class="line">-   rw------- 1   ftp    ftp    34KB   2023/3/8 1:09:00    qchatgpt.legacy.log</span><br><span class="line">[03/08/2023 09:09:08] Upload Status:</span><br><span class="line">Upload File /weiyigeek/qchatgpt.legacy.log successful!</span><br></pre></td></tr></table></figure><br><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230308091429.png" alt="WeiyiGeek.使用PSFTP模块实践图" title="" class="">                <p>WeiyiGeek.使用PSFTP模块实践图</p>            </figure></p><p><br/></p><p>温馨提示: 获取上述示例代码或者脚本地址失效，请在【<code>全栈工程师修炼指南</code>】公众号回复 <code>PowerShell-FTP 或者 10000</code> 获取最新PowerShell的FTP同步脚本地址。<br>全栈工程师修炼指南: <a href="https://weiyigeek.top/wechat.html?key=全栈工程师修炼指南" target="_blank" rel="noopener">https://weiyigeek.top/wechat.html?key=10000</a><br>注意提示: 在中文Windows下执行脚本默认为GBK，若是乱码请转为GBK或者其他编码模式。</p><p><br/></p><p>本文介绍了PowerShell操作FTP的方法，以及使用.net 提供的类来访问FTP。</p><p>好了，本章到此介绍，感兴趣的朋友请继续研究吧!</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;0x00-前言简述&quot;&gt;&lt;a href=&quot;#0x00-前言简述&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言简述&quot;&gt;&lt;/a&gt;0x00 前言简述&lt;/h2&gt;&lt;p&gt;描述: 在运维过程中会将服务器上数据文件备份在共享磁盘或者FTP服务器中，此处由于作者环境是在Windows系统上，且在业务上需要同步文件到FTP服务器中，遂有了此文，帮助各位看友了解，如何在Windows上使用Powershell脚本将数据备份文件自动上传的FTP服务器上?&lt;/p&gt;
&lt;p&gt;在下述实践中，我们可以使用三种方式进行数据文件上传到FTP服务器中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方式1.使用Powershell与Windows原生ftp客户端工具(仅仅支持主动模式)进行文件备份.&lt;/li&gt;
&lt;li&gt;方式2.使用Powershell中.NET的内置的FTP操作类 &lt;code&gt;System.Net.FtpWebRequest&lt;/code&gt; 连接ftp服务器并进行备份文件上传.&lt;/li&gt;
&lt;li&gt;方式3.使用Powershell的PSFTP模块包连接ftp服务器并进行备份文件上传。&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Development" scheme="https://blog.weiyigeek.top/categories/Development/"/>
    
    
    <category term="Powershell" scheme="https://blog.weiyigeek.top/tags/Powershell/"/>
    
    <category term="Project" scheme="https://blog.weiyigeek.top/tags/Project/"/>
    
  </entry>
  
  <entry>
    <title>5.HTML表格列表标签元素介绍</title>
    <link href="https://blog.weiyigeek.top/2023/2-27-719.html"/>
    <id>https://blog.weiyigeek.top/2023/2-27-719.html</id>
    <published>2023-02-27T12:38:30.000Z</published>
    <updated>2023-03-14T08:23:21.847Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h2 id="0x00-前言简述"><a href="#0x00-前言简述" class="headerlink" title="0x00 前言简述"></a>0x00 前言简述</h2><p>本章将主要给各位看友介绍表格 <code>table</code> 与列表 <code>list</code> 中常用的标签元素属性，本节标签一览如下所示:</p><p><strong>表格</strong></p><ul><li><code>&lt;table&gt;</code>    定义表格，一般表格数据太多，就会下载一点显示一点.</li><li><code>&lt;caption&gt;</code>    定义表格标题</li><li><code>&lt;th&gt;</code>    定义表格的表头，与表格单元数量相同就行.</li><li><code>&lt;tr&gt;</code>    定义表格的行，有几个就有几行</li><li><code>&lt;td&gt;</code>    定义表格单元，有几对就有几列</li><li><code>&lt;col&gt;</code>    定义用于表格列的属性</li><li><code>&lt;colgroup&gt;</code>    定义表格列的组</li><li><code>&lt;thead&gt;</code>    定义表格的页眉</li><li><code>&lt;tbody&gt;</code>    定义表格的主体，全部下载才显示</li><li><code>&lt;tfoot&gt;</code>    定义表格的页脚</li></ul><p><br/></p><p><strong>列表</strong></p><ul><li><code>&lt;ol&gt;</code>: 定义有序列表。</li><li><code>&lt;ul&gt;</code>: 定义无序列表。</li><li><code>&lt;li&gt;</code>: 定义列表项。</li><li><code>&lt;dl&gt;</code>: 定义定义列表。</li><li><code>&lt;dt&gt;</code>: 定义定义项目。</li><li><code>&lt;dd&gt;</code>: 定义定义的描述。</li></ul><hr><h2 id="0x01-表格元素"><a href="#0x01-表格元素" class="headerlink" title="0x01 表格元素"></a>0x01 表格元素</h2><h3 id="table-标签"><a href="#table-标签" class="headerlink" title="table 标签"></a>table 标签</h3><p><strong>描述:</strong> 该标签定义 HTML 表格，一个简单的 HTML 表格由 table 元素以及一个或多个 tr、th 或 td 元素组成，其中 tr 元素定义<code>表格行</code>，th 元素<code>定义表头</code>，td 元素定义<code>表格单元</code>。(后续会介绍)</p><p><strong>温馨提示:</strong></p><ul><li>HTML 与 XHTML 之间的差异: 在 HTML 4.01 中，table 元素的 “align” 和 “bgcolor” 属性是不被赞成使用的，在 XHTML 1.0 Strict DTD，table 元素的 “align” 和 “bgcolor” 属性是不被支持的。</li></ul><p><br/></p><h3 id="caption-标签"><a href="#caption-标签" class="headerlink" title="caption 标签"></a>caption 标签</h3><p><strong>描述:</strong> 该元素定义表格标题，其标签必须紧随 table 标签之后。<br><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例1.本例演示一个带标题 (caption) 的表格&lt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">caption</span>&gt;</span>表格标题<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>这是表头<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>数据单元<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">td</span>&gt;</span>数据单元<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">td</span>&gt;</span>数据单元<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>温馨提示:</strong> 只能对每个表格定义一个标题,通常这个标题会被居中于表格之上。</p><p><br/></p><h3 id="tr-标签"><a href="#tr-标签" class="headerlink" title="tr 标签"></a>tr 标签</h3><p>描述: 该<code>&lt;tr&gt;</code>元素定义表格中的行 Row，同一行可同时出现 <code>&lt;td&gt;</code> 和<code>&lt;th&gt;</code> 元素。</p><p><br/></p><h3 id="th-标签"><a href="#th-标签" class="headerlink" title="th 标签"></a>th 标签</h3><p><strong>描述:</strong> 该<code>&lt;th&gt;</code>元素定义表格内的表头单元格，这部分特征是由 scope and headers 属性准确定义的。</p><p><strong>属性:</strong></p><ul><li>rowspan: 属性指示单元格扩展的行数，其默认值为1；如果其值设置为0，则它将一直延伸到单元格所属的表节（<code>&lt;thead&gt;、&lt;tbody&gt;、&lt;tfoot&gt;</code>，即使隐式定义）的末尾</li><li>colspan: 属性包含一个正整数表示了每单元格中扩展列的数量。</li><li>headers: 属性包含了一个空间分隔的字符串的列表，每个与其他<code>&lt;th&gt;</code>元素相关联的id 属性一一对应。</li><li>scope:枚举属性定义了表头元素 (在<code>&lt;th&gt;</code>中定义) 关联的单元格。<blockquote><p>row: 表头关联一行中所有的单元格。<br>col: 表头关联一列中所有的单元格。<br>rowgroup:表头属于一个行组并与其中所有单元格相关联。这些单元格可以被放在表头的左侧或右侧，取决于 <code>&lt;table&gt;</code> 元素中 dir 属性的值。<br>colgroup: 表头属于一个列组并与其中所有单元格相关联。<br>auto</p></blockquote></li></ul><p><br/></p><h3 id="td-标签"><a href="#td-标签" class="headerlink" title="td 标签"></a>td 标签</h3><p><strong>描述:</strong> 该 <code>&lt;td&gt;</code> 元素，定义了一个包含数据的表格单元格<br><strong>属性:</strong> 参考 th 标签属性<br><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例1.一行一列 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>100<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例2.一行三列 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>100<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>200<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>300<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例3.普通（横向）表头 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">th</span>&gt;</span>电话<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">th</span>&gt;</span>电话<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>Bill Gates<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>555 77 854<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>555 77 855<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例4.垂直的表头 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>Bill Gates<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>电话<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>555 77 854<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>电话<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>555 77 855<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例5.横跨两列的单元格 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span>电话<span class="tag">&lt;/<span class="name">th</span>&gt;</span>   <span class="comment">&lt;!-- colspan=2: 表示合并两列--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>Bill Gates<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>555 77 854<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>555 77 855<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例6.横跨两行的单元格--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>Bill Gates<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">th</span> <span class="attr">rowspan</span>=<span class="string">"2"</span>&gt;</span>电话<span class="tag">&lt;/<span class="name">th</span>&gt;</span> <span class="comment">&lt;!-- rowspan=2: 表示合并两行 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>555 77 854<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>555 77 855<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><br><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230303175016.png" alt="WeiyiGeek.演示如何定义跨行或跨列的表格单元格图" title="" class="">                <p>WeiyiGeek.演示如何定义跨行或跨列的表格单元格图</p>            </figure></p><p>温馨提示: 上述演示如何定义跨行或跨列的表格单元格。</p><hr><p><strong>表格综合示例</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">table &#123; </span></span><br><span class="line"><span class="undefined">  margin-left: auto; </span></span><br><span class="line"><span class="undefined">  margin-right: auto;</span></span><br><span class="line"><span class="undefined">  border: 1px solid black; </span></span><br><span class="line"><span class="css">  <span class="selector-tag">line-height</span>: 1<span class="selector-class">.25</span>;</span></span><br><span class="line"><span class="undefined">  width: 100%;</span></span><br><span class="line"><span class="undefined">  text-align: center; </span></span><br><span class="line"><span class="undefined">  border-spacing: 0px 1px; </span></span><br><span class="line"><span class="undefined">  border-collapse: collapse;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">table-layout</span><span class="selector-pseudo">:fixed</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">table th &#123; </span></span><br><span class="line"><span class="undefined">  border: 1px solid black;</span></span><br><span class="line"><span class="undefined">  line-height: 1;</span></span><br><span class="line"><span class="undefined">  padding: 7px;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background-color</span>: <span class="selector-id">#dddddd</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">text-align</span><span class="selector-pseudo">:center</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">table td &#123; </span></span><br><span class="line"><span class="undefined">  border: 1px solid black; </span></span><br><span class="line"><span class="undefined">  padding: 5px;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">text-align</span><span class="selector-pseudo">:left</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 示例1.常规表格示例 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">caption</span> <span class="attr">style</span>=<span class="string">"font-weight: bolder;"</span>&gt;</span>常规表格示例<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>班级<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>人数<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>优生率<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>一班<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>30<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>90%<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>二班<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>50<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>80%<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>每个表格由 table 标签开始。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>每个表格行由 tr 标签开始。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>每个表格头由 th 标签指定。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>每个表格数据由 td 标签开始。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例2.关联表头示例 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">caption</span>&gt;</span>Color names and values<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"col"</span>&gt;</span>Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"col"</span>&gt;</span>HEX<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"col"</span>&gt;</span>HSLa<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"col"</span>&gt;</span>RGBa<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>Teal<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>#51F6F6<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>hsla(180, 90%, 64%, 1)<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>rgba(81, 246, 246, 1)<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>Goldenrod<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>#F6BC57<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>hsla(38, 90%, 65%, 1)<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">code</span>&gt;</span>rgba(246, 188, 87, 1)<span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230303160445.png" alt="WeiyiGeek.table表格综合示例1结果图" title="" class="">                <p>WeiyiGeek.table表格综合示例1结果图</p>            </figure><hr><h3 id="colgroup-标签"><a href="#colgroup-标签" class="headerlink" title="colgroup 标签"></a>colgroup 标签</h3><p><strong>描述:</strong> 在 HTML 中的 表格列组（Column Group <code>&lt;colgroup&gt;</code>）标签用来定义表中的一组列表。<br><strong>属性:</strong> </p><ul><li>span: 此属性包含一个正整数, 指示<code>&lt;colgroup&gt;</code>元素跨越的连续列数, 如果不存在，则其默认值为1</li><li>withd: 此属性为当前列组中的每个列指定默认宽度, 可能采用特殊形式 0<em> 或者 0.5</em>表示组中每一列的宽度应为保持列内容所需的最小宽度。</li></ul><p><br/></p><h3 id="col-标签"><a href="#col-标签" class="headerlink" title="col 标签"></a>col 标签</h3><p><strong>描述:</strong> 在HTML <code>&lt;col&gt;</code> 元素 定义表格中的列，并用于定义所有公共单元格上的公共语义, 它通常位于 <code>&lt;colgroup&gt;</code> 元素内。<br><strong>属性:</strong> 与 colgroup 标签类似。</p><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-class">.build</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background-color</span>: <span class="selector-id">#d7d9f2</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-class">.explain</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background-color</span>: <span class="selector-id">#ffe8d4</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">td &#123;</span></span><br><span class="line"><span class="undefined">  text-align: center;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">caption</span>&gt;</span>编程开发语言<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">colgroup</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">col</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">col</span> <span class="attr">span</span>=<span class="string">"2"</span> <span class="attr">class</span>=<span class="string">"build"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">col</span> <span class="attr">span</span>=<span class="string">"2"</span> <span class="attr">class</span>=<span class="string">"explain"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">colgroup</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span> <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"col"</span>&gt;</span>C<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"col"</span>&gt;</span>C++<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"col"</span>&gt;</span>Python<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"col"</span>&gt;</span>JavaScript<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>Skill<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Smarts<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Dex, acrobat<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Super speed<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>Super speed<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><br>执行结果:<br><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230303173504.png" alt="WeiyiGeek.colgroup与col标签图" title="" class="">                <p>WeiyiGeek.colgroup与col标签图</p>            </figure></p><p>温馨提示: </p><ul><li>[] : 如果您希望在 colgroup 内部为每个列规定不同的属性值时，请使用此元素。如果没有 col 元素，列会从 colgroup 那里继承所有的属性值。</li><li>[] : col 元素是仅包含属性的空元素, 如需创建列，您就必须在 tr 元素内部规定 td 元素。</li></ul><p><br/></p><h3 id="thead-标签"><a href="#thead-标签" class="headerlink" title="thead 标签"></a>thead 标签</h3><p><strong>描述</strong>: 该元素定义了一组定义表格的列头的行, 通常该元素应该与 <code>&lt;tbody&gt;</code> 和 <code>&lt;tfoot&gt;</code> 元素结合起来使用，用来规定表格的各个部分（表头、主体、页脚）。</p><blockquote><p>通过使用这些元素，使浏览器有能力支持独立于表格表头和表格页脚的表格主体滚动，当包含多个页面的长的表格被打印时，表格的表头和页脚可被打印在包含表格数据的每张页面上。</p></blockquote><p><br/></p><h3 id="tbody-标签"><a href="#tbody-标签" class="headerlink" title="tbody 标签"></a>tbody 标签</h3><p><strong>描述</strong>: 该 HTML 元素封装了一系列表格的行（<code>&lt;tr&gt;</code> 元素），代表了它们是表格（<code>&lt;table&gt;</code>）主要内容的组成部分。</p><p><br/></p><h3 id="tfoot-标签"><a href="#tfoot-标签" class="headerlink" title="tfoot 标签"></a>tfoot 标签</h3><p><strong>描述</strong>: 该HTML 元素 <code>&lt;tfoot&gt;</code> 定义了一组表格中各列的汇总行, 其包含的元素永远在table底部。</p><p><strong>示例</strong>:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-tag">table</span> &#123;<span class="attribute">border</span>: <span class="number">1px</span> solid black; &#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">thead</span> &#123;<span class="attribute">color</span>:green;&#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">tbody</span> &#123;<span class="attribute">color</span>:blue;&#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">tfoot</span> &#123;<span class="attribute">color</span>:red;&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">caption</span>&gt;</span>表格标题<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 头 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"col"</span>&gt;</span>Items<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"col"</span>&gt;</span>Expenditure<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 尾部 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tfoot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>文具；信纸；信笺<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>支出；开支；<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>文具；信纸；信笺<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">td</span>&gt;</span>支出；开支；<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 主体 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>Donuts<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>3,000<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">scope</span>=<span class="string">"row"</span>&gt;</span>Stationery<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>18,000<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><br>执行结果:<br><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230303174758.png" alt="WeiyiGeek.thead-tbody-tfoot标签结果图" title="" class="">                <p>WeiyiGeek.thead-tbody-tfoot标签结果图</p>            </figure></p><p><br/></p><p><strong>温馨提示:</strong> thead, tbody, 和 tfoot 元素默认不会影响表格的布局。不过，您可以使用 CSS 来为这些元素定义样式，从而改变表格的外观。</p><p><strong>综合实践：</strong> <a href="https://github.com/WeiyiGeek/DevelopLearnig/blob/main/fore-end/HTML/example/study/04.Table.html" target="_blank" rel="noopener">https://github.com/WeiyiGeek/DevelopLearnig/blob/main/fore-end/HTML/example/study/04.Table.html</a></p><hr><h2 id="0x01-表格元素-1"><a href="#0x01-表格元素-1" class="headerlink" title="0x01 表格元素"></a>0x01 表格元素</h2><p>描述: HTML 支持有序、无序和定义列表, 其常用标签私有如下。</p><h3 id="li-标签"><a href="#li-标签" class="headerlink" title="li 标签"></a>li 标签</h3><p>描述: HTML <code>&lt;li&gt;</code> 元素 （或称 HTML 列表条目元素） 用于表示列表里的条目。它必须包含在一个父元素里：一个有序列表 (<code>&lt;ol&gt;</code>)，一个无序列表 (<code>&lt;ul&gt;</code>)，或者一个菜单 (<code>&lt;menu&gt;</code>)。</p><p><strong>属性</strong></p><ul><li>value: 整数型属性表明了本 <code>&lt;li&gt;</code> 元素在有序列表（由 <code>&lt;ol&gt;</code> 元素定义）中的序号</li></ul><p><br/></p><h3 id="ol-标签"><a href="#ol-标签" class="headerlink" title="ol 标签"></a>ol 标签</h3><p><strong>描述:</strong> 有序列表是一个项目的列表，列表项目使用数字进行标记<br>有序列表始于 <code>&lt;ol&gt;</code> 标签，每个列表项始于 <code>&lt;li&gt;</code> 标签.</p><p><br/></p><p><strong>属性:</strong></p><ul><li>type 属性: 设置符号列表，默认为1数字列表，其中a为小写字母，A为大写字母，I为大罗马字母列表，i为小罗马字母列表, 建议使用使用 CSS <code>list-style-type</code> 属性来代替</li><li>reversed 属性: 指定列表中的条目是否是倒序排列的，即编号是否应从高到低反向标注。</li><li>start 属性: 指定了列表编号的起始值。</li></ul><p><br/></p><p><strong>示例</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>数字列表：<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span>柠檬<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span>桔子<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span>  </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>字母列表：<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">"A"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span>柠檬<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span>桔子<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span>  </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>小写字母列表：<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">"a"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span>柠檬<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span>桔子<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span>  </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>罗马字母列表：<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">"I"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span>柠檬<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span>桔子<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span>  </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>小写罗马字母列表：<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">"i"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span>柠檬<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">li</span>&gt;</span>桔子<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230314154518.png" alt="WeiyiGeek.有序列表图" title="" class="">                <p>WeiyiGeek.有序列表图</p>            </figure><p><br/></p><h3 id="ul-标签"><a href="#ul-标签" class="headerlink" title="ul 标签"></a>ul 标签</h3><p><strong>描述:</strong> 无序列表是一个项目的列表，此列项目使用粗体圆点（典型的小黑圆圈）进行标记。<br>无序列表始于 <code>&lt;ul&gt;</code> 标签，每个列表项始于 <code>&lt;li&gt;</code>，列表项内部可以使用段落、换行符、图片、链接以及其他列表等等。</p><p><strong>属性:</strong></p><ul><li>type 属性: 设置符号列表，其中”disc”是黑色圆点（<code>默认</code>），”circle”是黑色空心圆点，”square”为方块。</li></ul><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 1.无序列表 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Milk<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 2.无序ul标签设置符号 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">"disc"</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>Apple<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>balana<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">"circle"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>piano<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>gname<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">"square"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>dog<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>pig<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 3.无序标签进行嵌套 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>咖啡<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>茶</span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>红茶<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>红茶<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>绿茶<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>绿茶<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span>牛奶<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230314155056.png" alt="WeiyiGeek.无序列表结果图" title="" class="">                <p>WeiyiGeek.无序列表结果图</p>            </figure><p><br/></p><h3 id="dl-标签"><a href="#dl-标签" class="headerlink" title="dl 标签"></a>dl 标签</h3><p>描述: HTML <code>&lt;dl&gt;</code>元素 （或 HTML 描述列表元素）是一个包含术语定义以及描述的列表，通常用于展示词汇表或者元数据 (键 - 值对列表)。</p><p><br/></p><h3 id="dt-标签"><a href="#dt-标签" class="headerlink" title="dt 标签"></a>dt 标签</h3><p>描述: HTML <code>&lt;dt&gt;</code> 元素 （或 HTML 术语定义元素）用于在一个定义列表中声明一个术语。该元素仅能作为 <code>&lt;dl&gt;</code> 的子元素出现。通常在该元素后面会跟着 <code>&lt;dd&gt;</code> 元素，然而，多个连续出现的 <code>&lt;dt&gt;</code> 元素都将由出现在它们后面的第一个 <code>&lt;dd&gt;</code> 元素定义。</p><p><br/></p><h3 id="dd-标签"><a href="#dd-标签" class="headerlink" title="dd 标签"></a>dd 标签</h3><p>描述: HTML <code>&lt;dd&gt;</code> 元素（HTML 描述元素）用来指明一个描述列表 (<code>&lt;dl&gt;</code>) 元素中一个术语的描述。这个元素只能作为描述列表元素的子元素出现，并且必须跟着一个 <code>&lt;dt&gt;</code> 元素后。</p><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 1.简单示例，多条术语、单条描述 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Firefox<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Mozilla Firefox<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span></span><br><span class="line">    A free, open source, cross-platform, graphical web browser developed by the</span><br><span class="line">    Mozilla Corporation and hundreds of volunteers.</span><br><span class="line">  <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 2.一个dl标签中可以包含多个dt或者dd标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">dt</span>&gt;</span>            <span class="comment">&lt;!--自定义列表项--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>Black hot drink<span class="tag">&lt;/<span class="name">dd</span>&gt;</span>   <span class="comment">&lt;!--自定义列表项的定义--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Milk<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>White cold drink<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>显示器<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>以视觉方式显示信息的装置 ... ...<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><br></p><div class="result" style="border: 1px solid black;padding: 0px 10px 6px 10px;line-height: 1.2;"><br>  <strong>实时结果输出：</strong><br>  <div class="output" style="min-height: 50px;">请点击执行,即可显示结果!</div><br>  <strong>可编辑代码:</strong><br>  <textarea class="htmlcode" class="input" style="min-height: 100px;width: 95%"><br><ul><br>  <li>Name</li><br>  <li>Age</li><br></ul><br><br><ol><br>  <li>WeiyiGeeker</li><br>  <li>88</li><br></ol><br><br><dl><br>  <dt>Coffee</dt>            <!--自定义列表项--><br>  <dd>Black hot drink</dd>   <!--自定义列表项的定义--><br>  <dt>显示器</dt><br>  <dd>以视觉方式显示信息的装置 … …</dd><br></dl><br>  </textarea><br>  <input class="reset" type="button" value="执行显示" onclick="output0.innerHTML= textarea0.value;"><br></div><p><br/></p><script>const textarea0 = document.getElementsByClassName('htmlcode')[0];const output0 = document.getElementsByClassName("output")[0];</script><p><strong>综合实践：</strong> <a href="https://github.com/WeiyiGeek/DevelopLearnig/blob/main/fore-end/HTML/example/study/05.List.html" target="_blank" rel="noopener">https://github.com/WeiyiGeek/DevelopLearnig/blob/main/fore-end/HTML/example/study/05.List.html</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;</summary>
    
    
    
    <category term="前端学习" scheme="https://blog.weiyigeek.top/categories/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="学习笔记" scheme="https://blog.weiyigeek.top/categories/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="HTML" scheme="https://blog.weiyigeek.top/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>4.HTML样式布局区块标签元素介绍</title>
    <link href="https://blog.weiyigeek.top/2023/2-24-718.html"/>
    <id>https://blog.weiyigeek.top/2023/2-24-718.html</id>
    <published>2023-02-24T12:38:30.000Z</published>
    <updated>2023-03-20T01:49:09.293Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h2 id="0x00-前言简述"><a href="#0x00-前言简述" class="headerlink" title="0x00 前言简述"></a>0x00 前言简述</h2><p>本章节，主要介绍HTML布局与区块的元素介绍, 比如头部，中部，尾部以及行内区块与行外区块等，具体讲解如下述所示。</p><p>网页布局, 对改善网站的外观非常重要,请慎重设计您的网页布局。在HTML中虽然我们可以使用table标签来设计出漂亮的布局，但是table标签是不建议作为布局工具使用的(表格不是布局工具)。</p><p>网站布局, 大多数网站会把内容安排到多个列中（就像杂志或报纸那样），可以使用 <code>&lt;div&gt;</code> 或者 <code>&lt;table&gt;</code> 元素来创建多列，CSS 用于对元素进行定位，或者为页面创建背景以及色彩丰富的外观。</p><h3 id="1-本节标签一览"><a href="#1-本节标签一览" class="headerlink" title="1.本节标签一览"></a>1.本节标签一览</h3><p><code>&lt;div&gt;</code> : 定义文档中的节<br><code>&lt;span&gt;</code> : 定义文档中的节<br><code>&lt;main&gt;</code>: 定义文档的主体部分。<br><code>&lt;header&gt;</code> New : 定义一个文档头部<br><code>&lt;footer&gt;</code> New : 定义一个文档底部<br><code>&lt;nav&gt;</code> New : 定义导航链接的部分<br><code>&lt;section&gt;</code> New : 定义了文档的某个区域<br><code>&lt;article&gt;</code> New : 定义一个文章内容<br><code>&lt;summary&gt;</code> New : 定义一个可见的标题,当用户点击标题时会显示出详细信息。<br><code>&lt;aside&gt;</code> New : 定义其所处内容之外的内容。<br><code>&lt;details&gt;</code> New : 定义了用户可见的或者隐藏的需求的补充细节。<br><code>&lt;dialog&gt;</code> New  : 定义一个对话框或者窗口</p><h3 id="2-块元素与内联元素"><a href="#2-块元素与内联元素" class="headerlink" title="2.块元素与内联元素"></a>2.块元素与内联元素</h3><p>描述: 大多数 HTML 元素被定义为块级元素译为 <code>block level element</code> 或内 联元素 <code>inline element</code>。</p><p><strong>区别:</strong></p><ul><li>块级元素在浏览器显示时，通常会以新行来开始（和结束）。</li><li>内联元素在显示时通常不会以新行开始。</li></ul><p><strong>属于块元素的标签</strong>: <code>&lt;h1&gt;, &lt;p&gt;, &lt;ul&gt;, &lt;table&gt;, &lt;div&gt;</code><br><strong>属于内联元素的标签</strong>: <code>&lt;b&gt;, &lt;td&gt;, &lt;a&gt;, &lt;img&gt;</code></p><p>温馨提示: HTML 可以通过 <code>&lt;div&gt;</code> 和 <code>&lt;span&gt;</code> 将元素组合起来。</p><p><br/></p><h2 id="0x01-样式布局区块"><a href="#0x01-样式布局区块" class="headerlink" title="0x01 样式布局区块"></a>0x01 样式布局区块</h2><h3 id="div-标签"><a href="#div-标签" class="headerlink" title="div 标签"></a>div 标签</h3><p><strong>描述:</strong> 该标签定义 HTML 文档中的一个分隔区块或者一个区域部分(<code>division/section</code>)，常用于组合块级元素，以便通过 CSS 来对这些元素进行格式化。<br>前面讲述到，div元素它属于块级元素，浏览器会在其前后显示折行（会换行）。</p><p><strong>样式:</strong> 如果与 CSS 一同使用，<code>&lt;div&gt;</code> 元素可用于对大的内容块设置样式属性，用 id 或 class 来标记 <code>&lt;div&gt;</code>，那么该标签的作用会变得更加有效，但不必为每一个 <code>&lt;div&gt;</code> 都加上类或 id，虽然这样做也有一定的好处, 可以对同一个 <code>&lt;div&gt;</code> 元素应用 class 或 id 属性，但是更常见的情况是只应用其中一种。</p><p>其两者的主要差异 class 用于元素组（类似的元素，或者可以理解为某一类元素），而 id 用于<code>标识单独</code>的唯一的元素。</p><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例1.区块元素包含额外元素--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"color:#00FF00;background-color:black"</span>&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">h3</span>&gt;</span>This is a header title<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>This is a paragraph.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例2.设置id并使用样式来引用，建议style元素设置type属性。 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"> </span></span><br><span class="line"><span class="css"><span class="selector-id">#testdiv</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">color</span>:<span class="selector-id">#00ff00</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">background-color</span><span class="selector-pseudo">:black</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span> Div 区块元素 <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>这里不包含在区块Element里面<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这里也不包含在区块Element里面<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"testdiv"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h6</span>&gt;</span>包含在Div区块Element里面<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>包含在Div区块Element里面<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例3.设置class名称，并使用名称对应绑定。 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"> </span></span><br><span class="line"><span class="css"><span class="selector-class">.news</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">color</span><span class="selector-pseudo">:green</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">border-color</span>:<span class="selector-id">#000</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">border-width</span><span class="selector-pseudo">:1px</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">border-style</span><span class="selector-pseudo">:solid</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"news"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>News headline 1<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>some text. some text. some text...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"news"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>News headline 2<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>some text. some text. some text...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例4.使用 CSS 将样式应用于&lt;div&gt;，从而创建一个阴影框 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-class">.shadowbox</span> &#123;</span></span><br><span class="line"><span class="undefined">  width: 15em;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#333</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">box-shadow</span>: 8<span class="selector-tag">px</span> 8<span class="selector-tag">px</span> 5<span class="selector-tag">px</span> <span class="selector-id">#444</span>;</span></span><br><span class="line"><span class="undefined">  padding: 8px 12px;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background-image</span>: <span class="selector-tag">linear-gradient</span>(180<span class="selector-tag">deg</span>, <span class="selector-id">#fff</span>, <span class="selector-id">#ddd</span> 40%, <span class="selector-id">#ccc</span>);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"shadowbox"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>这里可以是任何内容，比如 \<span class="tag">&lt;<span class="name">p\</span>&gt;</span>, \<span class="tag">&lt;<span class="name">table\</span>&gt;</span>，一切由你作主！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>扩展实践:</strong> 使用DIV布局网站，它常用作布局工具，因为能够轻松地通过 CSS 对其进行定位，下述例子使用了四个 <code>&lt;div&gt;</code>元素来创建多列布局。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-id">#header</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">background-color</span><span class="selector-pseudo">:black</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">color</span><span class="selector-pseudo">:white</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">text-align</span><span class="selector-pseudo">:center</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">padding</span><span class="selector-pseudo">:5px</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-id">#nav</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">line-height</span><span class="selector-pseudo">:30px</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">background-color</span>:<span class="selector-id">#eeeeee</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">height</span><span class="selector-pseudo">:300px</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">width</span><span class="selector-pseudo">:100px</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">float</span><span class="selector-pseudo">:left</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">padding</span><span class="selector-pseudo">:5px</span>;      </span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-id">#section</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">width</span><span class="selector-pseudo">:350px</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">float</span><span class="selector-pseudo">:left</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">padding</span><span class="selector-pseudo">:10px</span>;  </span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-id">#footer</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">background-color</span><span class="selector-pseudo">:black</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">color</span><span class="selector-pseudo">:white</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">clear</span><span class="selector-pseudo">:both</span>;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">text-align</span><span class="selector-pseudo">:center</span>;</span></span><br><span class="line"><span class="css">   <span class="selector-tag">padding</span><span class="selector-pseudo">:5px</span>;  </span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"header"</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>中国城市，City China<span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">  北京<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  上海<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  广东<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  深圳<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  重庆<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"section"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>重庆市<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  “重庆,简称“渝”,别称山城,是中华人民共和国省级行政区、直辖市、国家中心城市、超大城市,国务院批复确定的中国重要的中心城市之一、长江上游地区经济中心、国家重要的现代制造业基地、西南地区综合交通枢纽”</span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  至2021年末，辖38个区县， 总面积8.24万平方千米， 常住人口3212.43万。</span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"footer"</span>&gt;</span>Copyright ? weiyigeek.top<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230302165744.png" alt="WeiyiGeek.div布局示例图" title="" class="">                <p>WeiyiGeek.div布局示例图</p>            </figure><p><strong>温馨提示</strong>: 上面这段 HTML 模拟了新闻网站的结构，其中的每个 div 把每条新闻的标题和摘要组合在一起，也就是说 div 为文档添加了额外的结构。<br>同时，由于这些 div 属于同一类元素，所以可以使用 <code>class=&quot;news&quot;</code> 对这些 div 进行标识，这么做不仅为 div 添加了合适的语义，而且便于进一步使用样式对 div 进行格式化，可谓一举两得。</p><p><br/></p><h3 id="span-标签"><a href="#span-标签" class="headerlink" title="span 标签"></a>span 标签</h3><p><strong>描述</strong>：该元素是短语内容的通用行内容器，并没有任何特殊语义，与 CSS 一同使用时 <code>&lt;span&gt;</code> 元素可用于为部分文本设置样式属性。</p><p><strong>注释</strong>：span 标签没有固定的格式表现，当对它应用样式时，它才会产生视觉上的变化。</p><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例1.span标签使用外联样式 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.tip</span>,<span class="selector-tag">span</span>&#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">font-weight</span><span class="selector-pseudo">:bold</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">color</span>:<span class="selector-id">#ff9955</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"tip"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>温馨提示：<span class="tag">&lt;/<span class="name">span</span>&gt;</span>欢迎访问 WeiyiGeek 博主网站!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例2.span标签使用内联样式 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我的母亲有 <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color:blue;font-weight:bold"</span>&gt;</span>蓝色<span class="tag">&lt;/<span class="name">span</span>&gt;</span> 的眼睛，我得父亲有 <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color:darkolivegreen;font-weight:bold"</span>&gt;</span>碧绿色<span class="tag">&lt;/<span class="name">span</span>&gt;</span> 的眼睛。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><br/></p><h3 id="header-标签"><a href="#header-标签" class="headerlink" title="header 标签"></a>header 标签</h3><p><strong>描述：</strong>该元素定义文档或者文档的一部分区域的页眉，通常包含一组介绍性的或是辅助导航的实用元素(展示介绍性内容)，其包含一些标题元素，但也可能包含其他元素，比如 <code>Logo、搜索框、作者名称</code>，等等。</p><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例1.页面的 Header --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/media/WeiyiGeek.png"</span> <span class="attr">width</span>=<span class="string">"315"</span> <span class="attr">height</span>=<span class="string">"83"</span> <span class="attr">alt</span>=<span class="string">"WeiyiGeek"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">"hidden"</span>&gt;</span>Main Navigation<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/services/"</span>&gt;</span>Services<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"current"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/articles/"</span>&gt;</span>Articles<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/resources/"</span>&gt;</span>Resources<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/projects/"</span>&gt;</span>Projects<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/community/"</span>&gt;</span>Community<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"search"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"get"</span> <span class="attr">role</span>=<span class="string">"search"</span> <span class="attr">action</span>=<span class="string">"/search/"</span> <span class="attr">id</span>=<span class="string">"sitesearch"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"search"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"q"</span>&gt;</span>Search:<span class="tag">&lt;/<span class="name">label</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"q"</span> <span class="attr">id</span>=<span class="string">"q"</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"image"</span> <span class="attr">src</span>=<span class="string">"/media/template/search.svg"</span> <span class="attr">alt</span>=<span class="string">"Submit Search"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"intro"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/intro"</span>&gt;</span>Introduction to Web Accessibility<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"training"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/services/training"</span>&gt;</span>WebAIM Training<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例2.文章的 Header --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>The Planet Earth<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Posted on Wednesday, 4 October 2017 by Jane Smith<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>博主个人学习博客地址<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://blog.weiyigeek.top"</span>&gt;</span>测试完毕！<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><br/></p><h3 id="main-标签"><a href="#main-标签" class="headerlink" title="main 标签"></a>main 标签</h3><p><strong>描述:</strong> 元素呈现了文档的 <code>&lt;body&gt;</code> 或应用的主体部分, 主体部分由与文档直接相关，或者扩展于文档的中心主题、应用的主要功能部分的内容组成<br>温馨提示: 在文档中，<code>&lt;main&gt;</code> 元素的内容应当是独一无二的。任何同时存在于任意一系列文档中的相同、重复内容，比如侧边栏、导航栏链接、版权信息、网站 Logo，搜索框（除非搜索框为文档的主要功能），都不应当被包含在其内。</p><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 1.简单示例 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span>如何学习HTML呢?<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>请参考【weiyigeek】作者或者关注微信公众号【全栈工程师修炼指南】进行学习哟！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 2.直达内容（skipnav），是一种辅助功能技术，使其用户可以快速跳过大段的重复内容（如主导航栏、信息横幅等） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"skiptocontent"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#maincontent"</span>&gt;</span>skip to main content<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">main</span> <span class="attr">id</span>=<span class="string">"maincontainer"</span> <span class="attr">class</span>=<span class="string">"clearfix"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">role</span>=<span class="string">"navigation"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Article Contents<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#overview"</span>&gt;</span>Overview<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#creating"</span>&gt;</span>Creating "Skip Navigation" Links<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ol</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#visible"</span>&gt;</span>Visible skip links<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span> <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#other"</span>&gt;</span>Other In-page Navigation Options<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#wcag"</span>&gt;</span>WCAG Conformance<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span> <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><br/></p><h3 id="footer-标签"><a href="#footer-标签" class="headerlink" title="footer 标签"></a>footer 标签</h3><p><strong>描述</strong>: 该元素表示最近一个章节内容或者根节点（sectioning root）元素的页脚, 一个页脚通常包含该<code>章节作者、版权数据或者与文档相关的链接</code>等信息。</p><p><strong>示例</strong>:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Posted by: WeiyiGeeker<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">time</span> <span class="attr">pubdate</span> <span class="attr">datetime</span>=<span class="string">"2022-03-01"</span>&gt;</span><span class="tag">&lt;/<span class="name">time</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>copyright @ WeiyiGeeker<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><br/></p><h3 id="nav-标签"><a href="#nav-标签" class="headerlink" title="nav 标签"></a>nav 标签</h3><p><strong>描述:</strong> 该元素表示页面的一部分，其目的是在当前文档或其他文档中提供导航链接，其常见示例是菜单，目录和索引。</p><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例1 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"crumbs"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"crumb"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"crumb"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Article<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"crumb"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>About<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例2 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">nav &#123;</span></span><br><span class="line"><span class="undefined">    border-bottom: 1px solid black;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.crumbs</span> <span class="selector-tag">ol</span> &#123;</span></span><br><span class="line"><span class="undefined">    list-style-type: none;</span></span><br><span class="line"><span class="undefined">    padding-left: 0;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.crumb</span> &#123;</span></span><br><span class="line"><span class="undefined">    display: inline-block;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.crumb</span> <span class="selector-tag">a</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line"><span class="undefined">    display: inline-block;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">color</span>: <span class="selector-id">#000</span>;</span></span><br><span class="line"><span class="undefined">    content: '&gt;';</span></span><br><span class="line"><span class="undefined">    font-size: 80%;</span></span><br><span class="line"><span class="undefined">    font-weight: bold;</span></span><br><span class="line"><span class="undefined">    padding: 0 3px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"crumbs"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"crumb"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"crumb"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Page<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"crumb"</span>&gt;</span>HTML 学习指南<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>温馨提示: 在不同设备上（手机或者PC）可以制定导航链接是否显示，以适应不同屏幕的需求, 一个网页也可能含有多个<code>&lt;nav&gt;</code>元素，例如一个是网站内的导航列表，另一个是本页面内的导航列表。</p><p><br/></p><h3 id="section-标签"><a href="#section-标签" class="headerlink" title="section 标签"></a>section 标签</h3><p><strong>描述:</strong> 该元素表示 HTML 文档中一个通用独立章节，它没有更具体的语义元素来表示，一般来说会包含一个标题。所以说它是一个通用的分节元素，只有在没有更具体的元素来代表它的时候才可以使用, 其标签可以(被)嵌套 article 标签使用。</p><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例1.常规文档 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Heading<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Bunch of awesome content<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例2.导航使用 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"hidden"</span>&gt;</span>WeiyiGeek 个人博客<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Previous article<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Next article<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"fwd"</span>&gt;</span>Forward<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"del"</span>&gt;</span>Delete<span class="tag">&lt;/<span class="name">button</span>&gt;</span>&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><br></p><h3 id="article-标签"><a href="#article-标签" class="headerlink" title="article 标签"></a>article 标签</h3><p><strong>描述:</strong> 该元素表示文档、页面、应用或网站中的独立结构，其意在成为可独立分配的或可复用的结构，如在发布中，它可能是论坛帖子、杂志或新闻文章、博客、用户提交的评论、交互式组件，或者其他独立的内容项目。</p><p><strong>温馨提示:</strong> 标签定义的内容本身必须是有意义的且必须是独立于文档的其余部分。其标签，通常包含 <code>header 、section 、footer、article 、address、time</code>（发布日期/时间)</p><p><strong>示例</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">article</span> <span class="attr">class</span>=<span class="string">"film_review"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>header 标签包含<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">"main_review"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>section 章节<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">"user_reviews"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">article</span> <span class="attr">class</span>=<span class="string">"user_review"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>包含在section元素中的 article<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">          Posted on</span><br><span class="line">          <span class="tag">&lt;<span class="name">time</span> <span class="attr">datetime</span>=<span class="string">"2015-05-16 19:00"</span>&gt;</span>May 16<span class="tag">&lt;/<span class="name">time</span>&gt;</span></span><br><span class="line">          by Lisa.</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">article</span> <span class="attr">class</span>=<span class="string">"user_review"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>I agree, dinos are my favorite.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">        包含在 footer 中的标签。</span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">          Posted on <span class="tag">&lt;<span class="name">time</span> <span class="attr">datetime</span>=<span class="string">"2015-05-17 19:00"</span>&gt;</span>May 17<span class="tag">&lt;/<span class="name">time</span>&gt;</span>by Tom.</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">    包含在 article 中的标签。</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">      Posted on</span><br><span class="line">      <span class="tag">&lt;<span class="name">time</span> <span class="attr">datetime</span>=<span class="string">"2015-05-15 19:00"</span>&gt;</span>May 15<span class="tag">&lt;/<span class="name">time</span>&gt;</span></span><br><span class="line">      by Staff.</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><br/></p><h3 id="aside-标签"><a href="#aside-标签" class="headerlink" title="aside 标签"></a>aside 标签</h3><p>描述: <code>&lt;aside&gt;</code> 元素表示一个和其余页面内容几乎无关的部分，被认为是独立于该内容的一部分并且可以被单独的拆分出来而不会使整体受影响, 其通常表现为侧边栏或者标注框（call-out boxes），即包含网站的导航栏nav元素、</p><p>示例:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">aside &#123;</span></span><br><span class="line"><span class="undefined">  width: 40%;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">padding-left</span>: 0<span class="selector-class">.5rem</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">margin-left</span>: 0<span class="selector-class">.5rem</span>;</span></span><br><span class="line"><span class="undefined">  float: right;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">box-shadow</span>: <span class="selector-tag">inset</span> 5<span class="selector-tag">px</span> 0 5<span class="selector-tag">px</span> <span class="selector-tag">-5px</span> <span class="selector-id">#29627e</span>;</span></span><br><span class="line"><span class="undefined">  font-style: italic;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">color</span>: <span class="selector-id">#29627e</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">aside &gt; p &#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">margin</span>: 0<span class="selector-class">.5rem</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">p &#123;</span></span><br><span class="line"><span class="undefined">  font-family: 'Fira Sans', sans-serif;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>蝾螈是一类两栖动物，外形类似蜥蜴，包括短腿和幼体和成体的尾巴。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aside</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>皮肤粗糙的纽特用致命的神经毒素保护自己。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>温馨提示: 不要使用 <code>&lt;aside&gt;</code> 元素去尾随括号内的文本，因为这种文本被认为是主要流内容的一部分。</p><p><br/></p><h3 id="summary-标签"><a href="#summary-标签" class="headerlink" title="summary 标签"></a>summary 标签</h3><p><strong>描述:</strong> 该元素用作 一个<code>&lt;details&gt;</code>元素的一个内容的摘要，标题或图例，即定义一个可见的标题,当用户点击标题时会显示出详细信息 <code>&lt;details&gt;</code> 包含。</p><p>温馨提示: 如果 <code>&lt;summary&gt;</code> 元素在浏览器内不能被正确解析和渲染, 则会展示<code>&lt;details&gt;</code>标签内的其他内容。</p><p><br/></p><h3 id="details-标签"><a href="#details-标签" class="headerlink" title="details 标签"></a>details 标签</h3><p><strong>描述:</strong> 该元素可创建一个挂件, 仅在被切换成展开状态时, 它才会显示内含的信息, <code>&lt;summary&gt;</code>元素可为该部件提供概要或者标签。<br><strong>属性:</strong></p><ul><li>open : 此布尔属性指示详细信息（即<code>＜details＞</code>元素的内容）当前是否可见。</li></ul><p><strong>事件:</strong> 除了HTML元素支持的常见事件之外，＜details＞元素还支持toggle事件，<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">details.addEventListener(<span class="string">"toggle"</span>, event =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (details.open) &#123;</span><br><span class="line">    <span class="comment">/* the element was toggled open */</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">/* the element was toggled closed */</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例1.使用CSS进行设计 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">details &#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#aaa</span>;</span></span><br><span class="line"><span class="undefined">  border-radius: 4px;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">padding</span>: 0<span class="selector-class">.5em</span> 0<span class="selector-class">.5em</span> 0;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">summary &#123;</span></span><br><span class="line"><span class="undefined">  font-weight: bold;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">margin</span>: <span class="selector-tag">-0</span><span class="selector-class">.5em</span> <span class="selector-tag">-0</span><span class="selector-class">.5em</span> 0;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">padding</span>: 0<span class="selector-class">.5em</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-tag">details</span><span class="selector-attr">[open]</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">padding</span>: 0<span class="selector-class">.5em</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">details</span><span class="selector-attr">[open]</span> <span class="selector-tag">summary</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#aaa</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">margin-bottom</span>: 0<span class="selector-class">.5em</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">details</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">summary</span>&gt;</span>Details<span class="tag">&lt;/<span class="name">summary</span>&gt;</span></span><br><span class="line">  Something small enough to escape casual notice.</span><br><span class="line"><span class="tag">&lt;/<span class="name">details</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例2.详细打开状态 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">details</span> <span class="attr">open</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">summary</span>&gt;</span>System Requirements<span class="tag">&lt;/<span class="name">summary</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Requires a computer running an operating system. 16c 64GB.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">details</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><br/></p><h3 id="dialog-标签"><a href="#dialog-标签" class="headerlink" title="dialog 标签"></a>dialog 标签</h3><p><strong>描述:</strong> 该 <code>&lt;dialog&gt;</code> 元素表示一个对话框或其他交互式组件，例如一个可关闭警告、检查器或者窗口。<br><strong>属性:</strong> </p><ul><li>open: 指示这个对话框是激活的和能互动的, 当没有设置 open 属性时，对话框不应该显示给用户。推荐使用 <code>.show() 或 .showModal()</code>方法来渲染对话框，而不是使用 open 属性。</li></ul><p><strong>示例:</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例1.渲染一个非模态对话框 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dialog</span> <span class="attr">open</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Greetings, one and all!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"dialog"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">value</span>=<span class="string">"Yes"</span>&gt;</span>Yes<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">value</span>=<span class="string">"No"</span>&gt;</span>No<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dialog</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例2.Simple modal dialog containing a form  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dialog</span> <span class="attr">id</span>=<span class="string">"favDialog"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"dialog"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">label</span>&gt;</span>Favorite animal:</span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"default"</span>&gt;</span>Choose…<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span>&gt;</span>Brine shrimp<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span>&gt;</span>Red panda<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">option</span>&gt;</span>Spider monkey<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">value</span>=<span class="string">"cancel"</span>&gt;</span>Cancel<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"confirmBtn"</span> <span class="attr">value</span>=<span class="string">"default"</span>&gt;</span>Confirm<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dialog</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"updateDetails"</span>&gt;</span>Update details<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">output</span>&gt;</span><span class="tag">&lt;/<span class="name">output</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> updateButton = <span class="built_in">document</span>.getElementById(<span class="string">'updateDetails'</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> favDialog = <span class="built_in">document</span>.getElementById(<span class="string">'favDialog'</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> outputBox = <span class="built_in">document</span>.querySelector(<span class="string">'output'</span>);</span></span><br><span class="line"><span class="actionscript"><span class="keyword">const</span> selectEl = favDialog.querySelector(<span class="string">'select'</span>);</span></span><br><span class="line"><span class="actionscript"><span class="keyword">const</span> confirmBtn = favDialog.querySelector(<span class="string">'#confirmBtn'</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="comment">// If a browser doesn't support the dialog, then hide the</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">// dialog contents by default.</span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">if</span> (<span class="keyword">typeof</span> favDialog.showModal !== <span class="string">'function'</span>) &#123;</span></span><br><span class="line"><span class="actionscript">  favDialog.hidden = <span class="literal">true</span>;</span></span><br><span class="line"><span class="actionscript">  <span class="comment">/* a fallback script to allow this dialog/form to function</span></span></span><br><span class="line"><span class="actionscript">     <span class="keyword">for</span> legacy browsers that <span class="keyword">do</span> not support &lt;dialog&gt;</span></span><br><span class="line"><span class="undefined">     could be provided here.</span></span><br><span class="line"><span class="undefined">  */</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="actionscript"><span class="comment">// "Update details" button opens the &lt;dialog&gt; modally</span></span></span><br><span class="line"><span class="actionscript">updateButton.addEventListener(<span class="string">'click'</span>, () =&gt; &#123;</span></span><br><span class="line"><span class="actionscript">  <span class="keyword">if</span> (<span class="keyword">typeof</span> favDialog.showModal === <span class="string">"function"</span>) &#123;</span></span><br><span class="line"><span class="undefined">    favDialog.showModal();</span></span><br><span class="line"><span class="actionscript">  &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">    outputBox.value = <span class="string">"Sorry, the &lt;dialog&gt; API is not supported by this browser."</span>;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="actionscript"><span class="comment">// "Favorite animal" input sets the value of the submit button</span></span></span><br><span class="line"><span class="actionscript">selectEl.addEventListener(<span class="string">'change'</span>, (e) =&gt; &#123;</span></span><br><span class="line"><span class="undefined">  confirmBtn.value = selectEl.value;</span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="actionscript"><span class="comment">// "Confirm" button of form triggers "close" on dialog because of [method="dialog"]</span></span></span><br><span class="line"><span class="actionscript">favDialog.addEventListener(<span class="string">'close'</span>, () =&gt; &#123;</span></span><br><span class="line"><span class="javascript">  outputBox.value = <span class="string">`<span class="subst">$&#123;favDialog.returnValue&#125;</span> button clicked - <span class="subst">$&#123;(<span class="keyword">new</span> <span class="built_in">Date</span>()).toString()&#125;</span>`</span>;</span></span><br><span class="line"><span class="undefined">&#125;);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>执行结果:</strong><br><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230302190518.png" alt="WeiyiGeek.dialog标签效果图" title="" class="">                <p>WeiyiGeek.dialog标签效果图</p>            </figure></p><p><strong>特别注意:</strong> tabindex 属性不能被使用在 <code>&lt;dialog&gt;</code> 元素上。</p><ul><li><code>&lt;form&gt;</code> 元素可关闭含有属性 method=”dialog” 的对话框。当提交表单时，对话框的 returnValue (en-US) 属性将会等于表单中被使用的提交按钮的 value。</li><li><code>::backdrop CSS</code> 伪元素可用于给使用 HTMLDialogElement.showModal() (en-US) 显示的 <code>&lt;dialog&gt;</code> 元素背景添加样式，例如在对话框被打开激活时，调暗背景中不可访问的内容。</li></ul><ul><li>目前只有 Chrome 、Edge 、火狐和 Safari 6 支持 dialog 标签，在未来相信更多浏览器会兼容。</li></ul><p><br /></p><p>总结: 网站中布局常用的三种方式 DIV（Class 类, 常用） 、语义元素（建议）、Table (在HTML4以前常用，现在一般不会如此使用)</p><ul><li><p>使用语义元素的 HTML 布局(建议)</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">header&#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background-color</span><span class="selector-pseudo">:black</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">color</span><span class="selector-pseudo">:white</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">text-align</span><span class="selector-pseudo">:center</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">padding</span><span class="selector-pseudo">:5px</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">nav&#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">line-height</span><span class="selector-pseudo">:30px</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background-color</span>:<span class="selector-id">#eee</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">height</span><span class="selector-pseudo">:300px</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">width</span><span class="selector-pseudo">:100px</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">float</span><span class="selector-pseudo">:left</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">padding</span><span class="selector-pseudo">:5px</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">section&#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">width</span><span class="selector-pseudo">:350px</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">float</span><span class="selector-pseudo">:left</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">padding</span><span class="selector-pseudo">:10px</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">footer&#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background-color</span><span class="selector-pseudo">:black</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">color</span><span class="selector-pseudo">:white</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">clear</span><span class="selector-pseudo">:both</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">text-align</span><span class="selector-pseudo">:center</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">padding</span><span class="selector-pseudo">:5px</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>HTML 5 New Elmemnt布局<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span><span class="tag">&lt;<span class="name">h5</span>&gt;</span>This is Header<span class="tag">&lt;/<span class="name">h5</span>&gt;</span><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">  China<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">  Chongqing<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">  fuling<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h6</span>&gt;</span>China<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Chongqing City,is very Beatiful!!!!!!<span class="tag">&lt;/<span class="name">P</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Fuling is of the Chongqing!!!! <span class="tag">&lt;/<span class="name">P</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span> Copyright @ WeiyiGeek <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230303083303.png" alt="WeiyiGeek.语义元素布局图" title="" class="">                <p>WeiyiGeek.语义元素布局图</p>            </figure></li><li><p>使用表格的 HTML 布局<br>注释：<code>&lt;table&gt;</code> 元素不是作为布局工具而设计的，该元素的作用是显示表格化的数据。<br>使用 <code>&lt;table&gt;</code> 元素能够取得布局效果，因为能够通过 CSS 设置表格元素的样式：</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">"500"</span> <span class="attr">border</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span> <span class="attr">style</span>=<span class="string">"background-color:#FFA500;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>主要的网页标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"background-color:#FFD700;width:100px;vertical-align:top;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">b</span>&gt;</span>菜单<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    HTML<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    CSS<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    JavaScript</span><br><span class="line">    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"background-color:#eeeeee;height:200px;width:400px;vertical-align:top;"</span>&gt;</span></span><br><span class="line">    内容在这里<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span> <span class="attr">style</span>=<span class="string">"background-color:#FFA500;text-align:center;"</span>&gt;</span></span><br><span class="line">    版权 © weiyigeek.top<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230303083010.png" alt="WeiyiGeek.table布局效果示意图" title="" class="">                <p>WeiyiGeek.table布局效果示意图</p>            </figure><p>使用 <code>&lt;table&gt;</code> 元素能够取得布局效果，因为能够通过 CSS 设置表格元素的样式：</p><p>上面示例文件: <a href="https://github.com/WeiyiGeek/DevelopLearnig/blob/main/fore-end/HTML/example/study/布局示例" target="_blank" rel="noopener">https://github.com/WeiyiGeek/DevelopLearnig/blob/main/fore-end/HTML/example/study/布局示例</a></p><p><br/></p><p><strong>综合实践：</strong><br>示例文件: <a href="https://github.com/WeiyiGeek/DevelopLearnig/blob/main/fore-end/HTML/example/study/03.DivisionSection.html" target="_blank" rel="noopener">https://github.com/WeiyiGeek/DevelopLearnig/blob/main/fore-end/HTML/example/study/03.DivisionSection.html</a></p><p>网页效果：<br><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230303090745.png" alt="WeiyiGeek.样式布局区块标签元素介绍与实践图" title="" class="">                <p>WeiyiGeek.样式布局区块标签元素介绍与实践图</p>            </figure></p><p>好的，本小节到此完毕！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;</summary>
    
    
    
    <category term="前端学习" scheme="https://blog.weiyigeek.top/categories/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="学习笔记" scheme="https://blog.weiyigeek.top/categories/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="HTML" scheme="https://blog.weiyigeek.top/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>3.HTML格式化输出标签元素介绍</title>
    <link href="https://blog.weiyigeek.top/2023/2-22-717.html"/>
    <id>https://blog.weiyigeek.top/2023/2-22-717.html</id>
    <published>2023-02-22T11:30:30.000Z</published>
    <updated>2023-03-03T00:40:18.327Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h2 id="0x00-前言简述"><a href="#0x00-前言简述" class="headerlink" title="0x00 前言简述"></a>0x00 前言简述</h2><p>本章节，主要介绍HTML定义很多供格式化输出的元素, 比如粗体和斜体字以及删除线等，具体讲解如下述所示：</p><p><strong>常规格式输出标签</strong><br>通常，使用格式化标签定义文本展示与含义，在html5中不同语义部分是建议使用对应语义标签，所以下述按照使用出现频率进行讲解:</p><ul><li><code>&lt;small&gt;</code> ：定义小号文本。</li><li><code>&lt;b&gt;</code> : 定义粗体文本。</li><li><code>&lt;i&gt;</code> :    定义斜体文本。</li><li><code>&lt;em&gt;</code> ：定义强调文本。 </li><li><code>&lt;strong&gt;</code> ：定义语气更为强烈的强调文本。</li></ul><ul><li><code>&lt;sub&gt;</code>     定义下标文本。</li><li><code>&lt;sup&gt;</code>     定义上标文本。</li><li><code>&lt;u&gt;</code> ：定义下划线文本。</li><li><code>&lt;s&gt;</code> ：定义加删除线的文本。</li><li><code>&lt;del&gt;</code> ：定义被删除文本。</li><li><code>&lt;ins&gt;</code> : 定义被插入文本。</li></ul><p><br/></p><p><strong>计算机代码输出标签</strong><br>通常，HTML 使用可变的字母尺寸，以及可变的字母间距，在显示计算机代码示例时，并不需要如此，<code>&lt;kbd&gt;</code>, <code>&lt;samp&gt;</code>, 以及 <code>&lt;code&gt;</code> 元素全都支持固定的字母尺寸和间距。</p><ul><li><code>&lt;pre&gt;</code> : 表示预定义格式文本。</li><li><code>&lt;var&gt;</code> : 定义文本的变量部分, 表示变量的元素。</li><li><code>&lt;kbd&gt;</code> : 定义<code>键盘</code>文本。</li><li><code>&lt;code&gt;</code> : 定义计算机<code>代码</code>文本。</li><li><code>&lt;samp&gt;</code> : 定义计算机<code>代码</code>样本。</li></ul><p><br/></p><p><strong>引用、引用和术语定义标签</strong><br>通常，我们会在网页中看到文字的长短引用，字母的缩写，以及文字展示方向，其实现通常有如下标签展现。</p><ul><li><code>&lt;abbr&gt;</code> : 定义一个名称的简写或者缩写。</li><li><code>&lt;address&gt;</code> : 定义文档作者或拥有者的联系信息。</li><li><code>&lt;q&gt;</code> : 定义短的引用</li><li><code>&lt;blockquote&gt;</code> : 定义长(块)的引用。 </li><li><code>&lt;cite&gt;</code> : 定义引用、引证 (citation)。</li><li><code>&lt;dfn&gt;</code> : 定义一个定义项目。</li><li><code>&lt;bdo&gt;</code>: 定义文本的方向。</li></ul><p><br/></p><p><strong>HTML5 新增格式化标签</strong></p><ul><li><code>&lt;bdi&gt;</code> New     允许您设置一段文本，使其脱离其父元素的文本方向设置。</li><li><code>&lt;mark&gt;</code> New     定义带有记号的文本。</li><li><code>&lt;meter&gt;</code> New 定义度量衡。仅用于已知最大和最小值的度量。</li><li><code>&lt;progress&gt;</code> New 定义运行中的任务进度（进程）。</li><li><code>&lt;rp&gt;</code> New     定义不支持 ruby 元素的浏览器所显示的内容。</li><li><code>&lt;rt&gt;</code> New     定义字符（中文注音或字符）的解释或发音。</li><li><code>&lt;ruby&gt;</code> New     定义 ruby 注释（中文注音或字符）。</li><li><code>&lt;time&gt;</code> New     定义一个日期/时间</li><li><code>&lt;wbr&gt;</code> New     规定在文本中的何处适合添加换行符。</li></ul><p><br/></p><p><strong>HTML5 移除格式化标签</strong></p><ul><li><code>&lt;big&gt;</code>      : HTML5不再支持。定义大号文本。</li><li><code>&lt;tt&gt;</code>        : HTML5不再支持。定义打字机文本。</li><li><code>&lt;center&gt;</code> : HTML5不再支持。HTML 4.01 已废弃。定义居中文本。</li><li><code>&lt;font&gt;</code>      : HTML5不再支持。HTML 4.01 已废弃。定义文本的字体、尺寸和颜色</li><li><code>&lt;strike&gt;</code> : HTML5不再支持。HTML 4.01 已废弃。定义加删除线的文本。</li><li><code>&lt;acronym&gt;</code>: HTML5不再支持。标签在 HTML 4 中用于定义首字母缩写词。</li></ul><hr><h2 id="0x01-格式化输出元素"><a href="#0x01-格式化输出元素" class="headerlink" title="0x01 格式化输出元素"></a>0x01 格式化输出元素</h2><h3 id="small-标签"><a href="#small-标签" class="headerlink" title="small 标签"></a>small 标签</h3><p><strong>描述:</strong> 该标签和它所对应的 <code>&lt;big&gt;</code>(不建议使用) 标签一样，但它是缩小字体而不是放大。<br>如果被包围的字体已经是字体模型所支持的最小字号，那么 <code>&lt;small&gt;</code> 标签将不起任何作用。</p><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">small</span>&gt;</span>定义小号字<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">small</span>&gt;</span>呈现小号字体效果<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个普通的文本- <span class="tag">&lt;<span class="name">small</span>&gt;</span>呈现小号字体效果.<span class="tag">&lt;/<span class="name">small</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br/></p><h3 id="b-标签"><a href="#b-标签" class="headerlink" title="b 标签"></a>b 标签</h3><p><strong>描述:</strong> 呈现粗体文本效果.<br><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>呈现粗体文本效果<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个普通的文本-<span class="tag">&lt;<span class="name">b</span>&gt;</span>这是一个加粗文本.<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>温馨提示: HTML 5 规范声明：标题应该用 <code>&lt;h1&gt; - &lt;h6&gt;</code> 标签表示，被强调的文本应该用 <code>&lt;em&gt;</code> 标签表示，重要的文本应该用 <code>&lt;strong&gt;</code> 标签表示，被标记的或者高亮显示的文本应该用 <code>&lt;mark&gt;</code> 标签表示。</p><p><br/></p><h3 id="i-标签"><a href="#i-标签" class="headerlink" title="i 标签"></a>i 标签</h3><p><strong>描述:</strong> 显示斜体文本效果.<br><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>斜体<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>呈现斜体文本效果<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个普通的文本-<span class="tag">&lt;<span class="name">i</span>&gt;</span>这是一个斜体文本效果.<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><br/></p><h3 id="em-标签"><a href="#em-标签" class="headerlink" title="em 标签"></a>em 标签</h3><p><strong>描述：</strong><code>&lt;em&gt;</code> 标签告诉浏览器把其中的文本表示为强调的内容，对于所有浏览器来说，这意味着要把这段文字用斜体来显示。<br>除强调之外，当引入新的术语或在引用特定类型的术语或概念时作为固定样式的时候，也可以考虑使用 <code>&lt;em&gt;</code>标签。<br>例如，W3School 经常对重要的术语使用 <code>&lt;em&gt;</code> 标签，<code>&lt;em&gt;</code> 标签可以用来把这些名称和其他斜体字区别开来。</p><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>定义语气为强调的内容<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个普通的文本- <span class="tag">&lt;<span class="name">em</span> <span class="attr">style</span>=<span class="string">"color:black"</span>&gt;</span>定义语气为强调的内容<span class="tag">&lt;/<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><br/></p><h3 id="strong-标签"><a href="#strong-标签" class="headerlink" title="strong 标签"></a>strong 标签</h3><p><strong>描述:</strong> 把文本定义为语气更强的强调的内容（加重语气）。<br><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>加重语气<span class="tag">&lt;<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>定义语气更为强烈的强调文本<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个普通的文本- <span class="tag">&lt;<span class="name">strong</span>&gt;</span>定义语气更为强烈的强调文本.<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><br/></p><h3 id="sup-标签"><a href="#sup-标签" class="headerlink" title="sup 标签"></a>sup 标签</h3><p><strong>描述:</strong> <code>&lt;sup&gt;</code> 标签可定义上标文本与主要的文本相比，应该展示得更高并且更小。<br><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">sup</span>&gt;</span>定义上标字<span class="tag">&lt;/<span class="name">sup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This text is <span class="tag">&lt;<span class="name">sup</span>&gt;</span>superscripted<span class="tag">&lt;/<span class="name">sup</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个普通的文本- 这段文本包含上标:x<span class="tag">&lt;<span class="name">sup</span>&gt;</span>2<span class="tag">&lt;/<span class="name">sup</span>&gt;</span>+y<span class="tag">&lt;<span class="name">sup</span>&gt;</span>2<span class="tag">&lt;/<span class="name">sup</span>&gt;</span>=8<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><br/></p><h3 id="sub-标签"><a href="#sub-标签" class="headerlink" title="sub 标签"></a>sub 标签</h3><p><strong>描述:</strong> 定义下标文本, 与主要的文本相比，应该展示得更低并且更小。<br><strong>示例:</strong><br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">sub</span>&gt;</span>定义下标字<span class="tag">&lt;/<span class="name">sub</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>The chemical formula of water: H<span class="tag">&lt;<span class="name">sub</span>&gt;</span>2<span class="tag">&lt;/<span class="name">sub</span>&gt;</span>O<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&lt;p&gt;这是一个普通的文本- 这段文本包含下标:H&lt;sub&gt;2&lt;/sub&gt;O&lt;&lt;/p&gt;</span><br></pre></td></tr></table></figure></p><p><br/></p><h3 id="u-标签"><a href="#u-标签" class="headerlink" title="u 标签"></a>u 标签</h3><p><strong>描述:</strong>  定义下划线文件，表示一个需要标注为非文本化（non-textual）的内联文本域。<br><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">u</span>&gt;</span>下划线 ,不赞成使用，使用样式（style）代替<span class="tag">&lt;/<span class="name">u</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个普通的文本- 作者博客站点：<span class="tag">&lt;<span class="name">u</span> <span class="attr">style</span>=<span class="string">"text-decoration: #f00 wavy underline"</span>&gt;</span>https://weiyigeek.top<span class="tag">&lt;/<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>温馨提示:  此元素以前在旧版本的 HTML 中称为“下划线”元素，但有时仍会以这种方式被滥用, 要为文本加下划线，您应该应用包含 CSS <code>text-decoration</code> 属性设置为 <code>underline</code> 的样式。</p><p><br/></p><h3 id="s-标签"><a href="#s-标签" class="headerlink" title="s 标签"></a>s 标签</h3><p><strong>描述:</strong> 该元素使用删除线来渲染文本，使用 <code>&lt;s&gt;</code> 元素来表示不再相关，或者不再准确的事情。但是当表示文档编辑时，不提倡使用 <code>&lt;s&gt;</code> , 为此，提倡使用 <code>&lt;del&gt;</code> 和 <code>&lt;ins&gt;</code> 元素。</p><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个普通的文本- <span class="tag">&lt;<span class="name">s</span>&gt;</span>不赞成使用，使用 del 代替<span class="tag">&lt;/<span class="name">s</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"text-decoration:line-through;"</span>&gt;</span>Today's Special:<span class="tag">&lt;/<span class="name">span</span>&gt;</span> SOLD OUT</span><br></pre></td></tr></table></figure></p><p><br/></p><h3 id="del-标签"><a href="#del-标签" class="headerlink" title="del 标签"></a>del 标签</h3><p><strong>描述:</strong> 该标签表示一些被从文档中<code>删除</code>的文字内容，比如可以在需要显示修改记录或者源代码差异的情况使用这个标签。<br><strong>属性:</strong></p><ul><li>cite: 提供一个 URI，其中的资源解释作出修改的原因（比如：根据某次会议讨论）。</li><li>datetime:这个属性说明修改的时间和日期，这里的时间和日期格式要符合规范。<br><strong>示例:</strong><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">del</span> <span class="attr">cite</span>=<span class="string">"./weiyigeek.top.html"</span> <span class="attr">datetime</span>=<span class="string">"2022-05"</span>&gt;</span>定义从文档中被删除文本。<span class="tag">&lt;/<span class="name">del</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个普通的文本- 从文档中删除作者博客站点文字内容：<span class="tag">&lt;<span class="name">del</span> <span class="attr">style</span>=<span class="string">"color:#a4d"</span>&gt;</span>https://blog.weiyigeek.top<span class="tag">&lt;/<span class="name">del</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p><br/></p><h3 id="ins-标签"><a href="#ins-标签" class="headerlink" title="ins 标签"></a>ins 标签</h3><p><strong>描述:</strong> 该标签表示一些被从文档中<code>添加（插入）</code>的文字内容，比如可以在需要显示更新记录或者源代码差异的情况使用这个标签。<br><strong>属性:</strong> 同 del 标签属性。<br><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ins</span> <span class="attr">cite</span>=<span class="string">"./weiyigeek.top.html"</span> <span class="attr">datetime</span>=<span class="string">"2023-02"</span>&gt;</span>定义从文档中被添加(插入)的文本。<span class="tag">&lt;/<span class="name">ins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个普通的文本- 从文档中添加(插入)作者作者博客站点：<span class="tag">&lt;<span class="name">del</span> <span class="attr">style</span>=<span class="string">"color:#a4d"</span>&gt;</span>https://blog.weiyigeek.top<span class="tag">&lt;/<span class="name">del</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>温馨提示: ins其展现效果与<code>&lt;u&gt;</code>相似都是下划线，但通常与del一同使用，用来描述文档中的更新和修正。</p><p><br/></p><p><strong>上述文本格式化标签全部示例总结（一）</strong><br>html代码:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">"text-align:Center;color:red;"</span>&gt;</span>文本格式化标签<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span> <span class="attr">style</span>=<span class="string">"color:yellow"</span>&gt;</span>粗体文字<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">big</span> <span class="attr">style</span>=<span class="string">"color:blue"</span>&gt;</span>大号字<span class="tag">&lt;/<span class="name">big</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">em</span> <span class="attr">style</span>=<span class="string">"color:black"</span>&gt;</span>着中文字<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>斜体<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">small</span>&gt;</span>定义小号字<span class="tag">&lt;/<span class="name">small</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>加重语气<span class="tag">&lt;<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sub</span>&gt;</span>定义下标<span class="tag">&lt;/<span class="name">sub</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sup</span>&gt;</span>定义上标字<span class="tag">&lt;/<span class="name">sup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ins</span>&gt;</span>插入字,其实就是下划线<span class="tag">&lt;/<span class="name">ins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span>删除线字<span class="tag">&lt;/<span class="name">del</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">s</span>&gt;</span>不赞成使用，使用 del 代替<span class="tag">&lt;/<span class="name">s</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">strike</span>&gt;</span>不赞成使用，使用 del 代替<span class="tag">&lt;/<span class="name">strike</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">u</span>&gt;</span>下划线,不赞成使用，使用样式（style）代替<span class="tag">&lt;/<span class="name">u</span>&gt;</span></span><br></pre></td></tr></table></figure><br>展现结果:<br><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230224170339.png" alt="WeiyiGeek.文本格式化标签展现图" title="" class="">                <p>WeiyiGeek.文本格式化标签展现图</p>            </figure></p><hr><h3 id="var-标签"><a href="#var-标签" class="headerlink" title="var 标签"></a>var 标签</h3><p><strong>描述:</strong> 该标签表示变量的名称，或者由用户提供的值, 主要用于表示数学表达式或编程上下文中的变量名称，其标记的文本通常显示为斜体。<br>这个标签经常与 <code>&lt;code&gt;</code> 和 <code>&lt;pre&gt;</code> 标签一起使用，用来显示计算机编程代码范例及类似方面的特定元素。</p><p><strong>示例:</strong> 定义文本的变量部分。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例1.简单示例 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">var</span>&gt;</span>var test="123456"<span class="tag">&lt;/<span class="name">var</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例2.使用 &lt;var&gt; 来代表数学方程式的变量名称。 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>一个简单的方程式：<span class="tag">&lt;<span class="name">var</span>&gt;</span>x<span class="tag">&lt;/<span class="name">var</span>&gt;</span> = <span class="tag">&lt;<span class="name">var</span>&gt;</span>y<span class="tag">&lt;/<span class="name">var</span>&gt;</span> + 2<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例3.使用 CSS 可以为 &lt;var&gt; 元素覆盖样式。 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">var &#123;</span></span><br><span class="line"><span class="undefined">  font: bold 15px "Courier", "Courier New", monospace;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>变量 <span class="tag">&lt;<span class="name">var</span>&gt;</span>minSpeed<span class="tag">&lt;/<span class="name">var</span>&gt;</span> 和 <span class="tag">&lt;<span class="name">var</span>&gt;</span>maxSpeed<span class="tag">&lt;/<span class="name">var</span>&gt;</span> 控制设备的最低和最高速度，以每分钟转（RPM）计算。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><br/></p><h3 id="pre-标签"><a href="#pre-标签" class="headerlink" title="pre 标签"></a>pre 标签</h3><p><strong>描述:</strong> 表示预定义格式文本，在该元素中的文本通常按照原文件中的编排，以等宽字体的形式展现出来，文本中的空白符（比如空格和换行符）都会显示出来。(紧跟在 <code>&lt;pre&gt;</code> 开始标签后的换行符也会被省略)</p><p>pre 元素中允许的文本可以包括物理样式和基于内容的样式变化，还有链接、图像和水平分隔线，当把其他标签（比如 <code>&lt;a&gt;</code> 标签）放到 <code>&lt;pre&gt;</code> 块中时，就像放在 HTML/XHTML 文档的其他部分中一样即可</p><p><strong>示例:</strong> 定义预格式文本</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例1.标签中的特殊符号被转换为符号实体，比如 "&amp;lt;" 代表 "&lt;"，"&amp;gt;" 代表 "&gt;"--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span></span><br><span class="line">&amp;lt;html&amp;gt;</span><br><span class="line">&amp;lt;head&amp;gt;</span><br><span class="line">&amp;lt;/head&amp;gt;</span><br><span class="line">&amp;lt;body&amp;gt;</span><br><span class="line">&amp;lt;/body&amp;gt;</span><br><span class="line">&amp;lt;/html&amp;gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例2.简单尝试一下 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span></span><br><span class="line">  L          TE</span><br><span class="line">    A       A</span><br><span class="line">      C    V</span><br><span class="line">       R A</span><br><span class="line">       DOU</span><br><span class="line">       LOU</span><br><span class="line">      REUSE</span><br><span class="line">      QUE TU</span><br><span class="line">      PORTES</span><br><span class="line">    ET QUI T'</span><br><span class="line">    ORNE O CI</span><br><span class="line">     VILISÉ</span><br><span class="line">    OTE-  TU VEUX</span><br><span class="line">     LA    BIEN</span><br><span class="line">    SI      RESPI</span><br><span class="line">            RER       - Apollinaire</span><br><span class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></table></figure><p>温馨提示：建议在使用 pre 标签格式化文档中使用空格，而不是 tab 制表符（每个制表符占据8个字符的位置），以确保文本正常的水平位置。<br>温馨提示: 在使用 pre 标签定义计算机源码时，请使用实体符号表示特殊字符（例如，<code>&amp;lt;</code>），并且通常与<code>&lt;code&gt;</code>标签结合使用，以获得更加精确的语义。</p><p><br/></p><h3 id="kbd-标签"><a href="#kbd-标签" class="headerlink" title="kbd 标签"></a>kbd 标签</h3><p><strong>描述:</strong> 该标签是键盘输入元素，用于表示用户输入，它将产生一个<code>行内元素</code>，以浏览器的默认 monospace 字体显示。<br><strong>示例:</strong> 定义键盘文本。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例1.简单尝试 --&gt;</span></span><br><span class="line">键入 <span class="tag">&lt;<span class="name">kbd</span>&gt;</span>quit<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span> 来退出程序，或者键入 <span class="tag">&lt;<span class="name">kbd</span>&gt;</span>menu<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span> 来返回主菜单。</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例2.基本示例 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Type the following in the Run dialog: <span class="tag">&lt;<span class="name">kbd</span>&gt;</span>cmd<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span>Then click the OK button.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Save the document by pressing <span class="tag">&lt;<span class="name">kbd</span>&gt;</span>Ctrl<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span> + <span class="tag">&lt;<span class="name">kbd</span>&gt;</span>S<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>温馨提示: 当<code>&lt;kbd&gt;</code>元素处于<code>&lt;samp&gt;</code>元素之中时，它代表着被系统回显的输入, 而当其包含<code>&lt;samp&gt;</code>元素时，该输入是基于系统输出的，比如调用某个菜单项。<br>温馨提示: 当<code>&lt;kbd&gt;</code>元素处于另一个<code>&lt;kbd&gt;</code>元素之中时，它代表了一个实际的按键，或是该输入机制下的某个单位输入。</p><p><br/></p><h3 id="code-标签"><a href="#code-标签" class="headerlink" title="code 标签"></a>code 标签</h3><p><strong>描述:</strong> 该标签用于呈现计算机源代码或者其他机器可以阅读的文本内容，但<code>它不保留多余的空格和折行</code>，通常浏览器的默认等宽字体显示。<br>包含在该标签内的文本将用等宽、类似电传打字机样式的字体（Courier）显示出来，虽然 <code>&lt;code&gt;</code> 标签通常只是把文本变成等宽字体，但它暗示着这段文本是源程序代码。</p><p><strong>示例:</strong> 例如，程序员的浏览器可能会寻找 <code>&lt;code&gt;</code> 片段，并执行某些额外的文本格式化处理，如循环和条件判断语句的特殊缩进等。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例1.常规示例 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Regular text. <span class="tag">&lt;<span class="name">code</span>&gt;</span>This is code.<span class="tag">&lt;/<span class="name">code</span>&gt;</span> Regular text.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例2.一段Shell脚本for循环--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">code</span>&gt;</span></span><br><span class="line">for i in 1,2,3,4</span><br><span class="line">do</span><br><span class="line">   echo "$i"</span><br><span class="line">done</span><br><span class="line"><span class="tag">&lt;/<span class="name">code</span>&gt;</span></span><br></pre></td></tr></table></figure><p>温馨提示: 如果只是希望使用等宽字体的效果，请使用 <code>&lt;tt&gt;(不建议)</code> 标签，或者，如果想要在严格限制为等宽字体格式的文本中显示编程代码，请使用 <code>&lt;pre&gt;(建议)</code> 标签。</p><p><br/></p><h3 id="samp-标签"><a href="#samp-标签" class="headerlink" title="samp 标签"></a>samp 标签</h3><p><strong>描述:</strong> 该标签表示一段用户应该对其没有什么其他解释的文本字符，要从正常的上下文抽取这些字符时，通常使用浏览器缺省的 monotype 字体（例如 Lucida Console）。<br><strong>属性:</strong><br><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例1 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">samp</span>&gt;</span> 标签并不经常使用。只有在要从正常的上下文中将某些短字符序列提取出来，对它们加以强调的极少情况下，才使用这个标签。</span><br><span class="line">注释：在 HTML 中，用于 "ae" 连字的特殊实体是 "&amp;aelig;"，大多数浏览器都会将它转换成相应的 "æ" 连字字符。</span><br><span class="line"><span class="comment">&lt;!-- 示例2 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Regular text. <span class="tag">&lt;<span class="name">samp</span>&gt;</span>This is sample text.<span class="tag">&lt;/<span class="name">samp</span>&gt;</span> Regular text.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><br/></p><p><strong>上述计算机文本格式化标签输出全部示例总结（二）</strong><br>示例代码:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>注释:<span class="tag">&lt;/<span class="name">b</span>&gt;</span>这些标签常用于显示计算机/编程代码<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">code</span>&gt;</span></span><br><span class="line">#include <span class="tag">&lt;<span class="name">stdio.h</span>&gt;</span></span><br><span class="line">int main()&#123;</span><br><span class="line">  printf("Hello Code Tag!!!!");</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">code</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">kbd</span> <span class="attr">style</span>=<span class="string">"color:fuchsia;"</span>&gt;</span>Keyboard input F1,键盘键码<span class="tag">&lt;/<span class="name">kbd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">samp</span> <span class="attr">style</span>=<span class="string">"color:green;"</span>&gt;</span>Sample text,计算机代码样本<span class="tag">&lt;/<span class="name">samp</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tt</span> <span class="attr">style</span>=<span class="string">"color:lime;"</span>&gt;</span>Teletype text，打印机代码<span class="tag">&lt;/<span class="name">tt</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">var</span> <span class="attr">style</span>=<span class="string">"color:maroon"</span>&gt;</span>Computer variable，定义变量<span class="tag">&lt;/<span class="name">var</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span> <span class="attr">style</span>=<span class="string">"color:olive"</span>&gt;</span>标签很适合显示计算机代码：</span><br><span class="line">#include <span class="tag">&lt;<span class="name">stdio.h</span>&gt;</span></span><br><span class="line">int main()&#123;</span><br><span class="line">    printf("Hello Code Tag!!!!");</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listing</span>&gt;</span>不赞成使用,使用 pre代替</span><br><span class="line">  for i = 1 to 10</span><br><span class="line">       print i</span><br><span class="line">  next i</span><br><span class="line"><span class="tag">&lt;/<span class="name">listing</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">xmp</span>&gt;</span>不赞成使用,使用 pre代替</span><br><span class="line">  这是预格式文本。</span><br><span class="line">  它保留了      空格和换行。</span><br><span class="line"><span class="tag">&lt;/<span class="name">xmp</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>执行结果:</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230224172242.png" alt="WeiyiGeek.计算机文本格式化标签输出全部示例总结图" title="" class="">                <p>WeiyiGeek.计算机文本格式化标签输出全部示例总结图</p>            </figure><p><br/></p><h3 id="abbr-标签"><a href="#abbr-标签" class="headerlink" title="abbr 标签"></a>abbr 标签</h3><p><strong>描述</strong>:<code>&lt;abbr&gt;</code> 标签指示简称或缩写，比如 “WWW” 或 “NATO”,通过对缩写进行标记，您能够为浏览器、拼写检查和搜索引擎提供有用的信息。<br><strong>属性</strong>:</p><ul><li>title 属性: 可用于在鼠标指针移动到元素上时显示出缩写的完整版本。</li></ul><p><strong>示例</strong>:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例1.鼠标移动到上面的时候进行显示 abbreviation --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">"abbreviation"</span>&gt;</span>abbr.<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例2.PRC简称介绍 --&gt;</span></span><br><span class="line">The <span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">"People's Republic of China"</span>&gt;</span>PRC<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span> was founded in 1949.</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例3.使用style修改该属性样式 --&gt;</span></span><br><span class="line">abbr &#123;</span><br><span class="line">  font-style: italic;</span><br><span class="line">  color: chocolate;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>You can use <span class="tag">&lt;<span class="name">abbr</span>&gt;</span>CSS<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span> (Cascading Style Sheets) to style your <span class="tag">&lt;<span class="name">abbr</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span> (HyperText Markup Language).</span><br></pre></td></tr></table></figure></p><p><br/></p><h3 id="address-标签"><a href="#address-标签" class="headerlink" title="address 标签"></a>address 标签</h3><p><strong>描述:</strong> <code>&lt;address&gt;</code> 标签定义文档或文章的作者/拥有者的联系信息,该元素中的文本在浏览器中通常呈现为斜体，且会在 address 元素前后添加折行。</p><blockquote><p>如果 <code>&lt;address&gt;</code> 元素位于 <code>&lt;body&gt;</code> 元素内，则它表示文档联系信息。<br>如果 <code>&lt;address&gt;</code> 元素位于 <code>&lt;article&gt;</code> 元素内，则它表示文章的联系信息。</p></blockquote><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例1.此例演示如何在 HTML 网页中写地址 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span></span><br><span class="line">学府大道 <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">南岸区 <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">重庆市 <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">中国   <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">Email 邮件<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:test@qq.com?cc=test1@qq.com&amp;bbc=www@tss.com&amp;subject=Testmail&amp;body=Test%20SendMAIL"</span>&gt;</span>Check mail<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例2.使用CSS样式更改标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-tag">a</span><span class="selector-attr">[href^='mailto']</span><span class="selector-pseudo">::before</span> &#123;</span></span><br><span class="line"><span class="undefined">   content: '📧 ';</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">a</span><span class="selector-attr">[href^='tel']</span><span class="selector-pseudo">::before</span> &#123;</span></span><br><span class="line"><span class="undefined">   content: '📞 ';</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">address</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:master@weiyigeek.top"</span>&gt;</span>master@weiyigeek.top<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"tel:+18888888888"</span>&gt;</span>(86) 18888888888<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>温馨提示: 由<code>&lt;address&gt;</code>元素中任何形式的内容所提供的联系信息适用于上下文的背景信息，可以是必要的任何一种联系方式，比如真实地址、URL、电子邮箱、电话号码、社交媒体账号、地理坐标等等。此元素应该包含联系信息对应的个人、团体或组织的名称。</p><p><br/></p><h3 id="bdo-标签"><a href="#bdo-标签" class="headerlink" title="bdo 标签"></a>bdo 标签</h3><p>描述：该标签是双向文本替代元素 <code>(&lt;bdo&gt;)</code> 改写了文本的方向性，使文本以不同的方向渲染呈现出来 (override 可以翻译很多意思，编程语言中多用覆盖，重载；这里采用了 Google 的整体翻译，取替代替换改写之意)</p><p><strong>属性：</strong></p><ul><li>dir ：在此元素内容中呈现文本的方向，可能的值是 <code>ltr: 指示文本应从左到右的方向</code> 或者 <code>rtl: 指示文本应从右到左的方向</code></li></ul><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例1.正序显示文本 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bdo</span> <span class="attr">dir</span>=<span class="string">"ltr"</span>&gt;</span>Here is some Hebrew text<span class="tag">&lt;/<span class="name">bdo</span>&gt;</span>   </span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例2.倒序显示文本 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bdo</span> <span class="attr">dir</span>=<span class="string">"rtl"</span>&gt;</span>Here is some Hebrew text<span class="tag">&lt;/<span class="name">bdo</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><br/></p><h3 id="q-标签"><a href="#q-标签" class="headerlink" title="q 标签"></a>q 标签</h3><p><strong>描述</strong>: 标签（Quotation）定义短的引用，而 q 元素不会有任何特殊的呈现，浏览器经常在引用的内容周围添加引号。</p><p><strong>属性</strong>：</p><ul><li>cite ：属性的值是 URL，意在指出被引用的文本的源文档或者源信息。</li></ul><p><strong>示例</strong>:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例1.浏览器会对q标签打"" --&gt;</span></span><br><span class="line">这是一个短引用：<span class="tag">&lt;<span class="name">q</span>&gt;</span>短短的引用，short Reference！！<span class="tag">&lt;/<span class="name">q</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例2.使用属性值指定引用来源 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>WeiyiGeek 的</span><br><span class="line">   <span class="tag">&lt;<span class="name">q</span> <span class="attr">cite</span>=<span class="string">"https://weiyigeek.top"</span>&gt;</span>个人主页域名地址<span class="tag">&lt;/<span class="name">q</span>&gt;</span>.</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br/></p><h3 id="blockquote-标签"><a href="#blockquote-标签" class="headerlink" title="blockquote 标签"></a>blockquote 标签</h3><p><strong>描述:</strong> 该标签定义块引用（<code>HTML 块级引用元素</code>），其元素之间的所有文本都会从常规文本中分离出来，经常会在左、右两边进行缩进（增加外边距），而且有时会使用斜体，也就是说，块引用拥有它们自己的空间。<br><strong>属性：</strong></p><ul><li>cite : 是一个标注引用的信息的来源文档或者相关信息的 URL。</li></ul><p><strong>示例：</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例1.浏览器会缩进元素内容文本 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>  <span class="attr">cite</span>=<span class="string">"https://blog.weiyigeek.top"</span>&gt;</span>这是长的引用。这是长的引用。这是长的引用。这是长的引用。这是长的引用。这是长的引用。这是长的引用。这是长的引用。这是长的引用。这是长的引用。这是长的引用<span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>温馨提示: 若要修改被引用内容的缩进距离，可以使用 CSS margin-left 和/或 margin-right 属性，或使用 margin 缩写属性</p><p><br/></p><h3 id="cite-标签"><a href="#cite-标签" class="headerlink" title="cite 标签"></a>cite 标签</h3><p><strong>描述</strong>：引用（Citation）标签 (<code>&lt;cite&gt;</code>) 表示一个作品的引用，如书籍、杂志、期刊，等等.<br>如果引用的这些文档有联机版本，还应该把引用包括在一个 <code>&lt;a&gt;</code> 标签中，从而把一个超链接指向该联机版本。</p><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例1 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span>&gt;</span>定义引用、引证于<span class="tag">&lt;<span class="name">cite</span> <span class="attr">title</span>=<span class="string">"百度百科"</span>&gt;</span>百度百科 <span class="tag">&lt;/<span class="name">cite</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例2 --&gt;</span></span><br><span class="line">More information can be found in <span class="tag">&lt;<span class="name">cite</span>&gt;</span>[ISO-0000]<span class="tag">&lt;/<span class="name">cite</span>&gt;</span>.</span><br></pre></td></tr></table></figure></p><p>温馨提示: <code>&lt;cite&gt;</code> 标签的语义已经远远超过了改变它所包含的文本外观的作用；它使浏览器能够以各种实用的方式来向用户表达文档的内容。<br>温馨提示：W3C 标准允许在<code>&lt;cite&gt;</code> 元素中包含引用内容的作者信息。然而 WHATWG 规范不允许在 <cite> 元素中出现人名。</p><p><br/></p><h3 id="dfn-标签"><a href="#dfn-标签" class="headerlink" title="dfn 标签"></a>dfn 标签</h3><p>描述：<code>&lt;dfn&gt;</code> 表示术语的一个定义, 现在流行的浏览器通常用斜体来显示 <code>&lt;dfn&gt;</code> 中的文本，将来 <code>&lt;dfn&gt;</code> 还可能有助于创建文档的索引或术语表。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例1.常规使用 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span>&gt;</span><span class="tag">&lt;<span class="name">dfn</span> <span class="attr">title</span>=<span class="string">"百度百科"</span>&gt;</span>定义一个定义项目百度百科 <span class="tag">&lt;/<span class="name">dfn</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例2.如果 &lt;dfn&gt; 元素包含具有标题的 &lt;abbr&gt; 元素，则 title 定义项目： --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>The<span class="tag">&lt;<span class="name">dfn</span>&gt;</span><span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">"World Health Organization"</span>&gt;</span>WHO<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span><span class="tag">&lt;/<span class="name">dfn</span>&gt;</span>was founded in 1948.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>对缩写进行标记能够为浏览器、翻译系统以及搜索引擎提供有用的信息。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例3 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Define "The Internet" --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">dfn</span> <span class="attr">id</span>=<span class="string">"def-internet"</span>&gt;</span>The Internet<span class="tag">&lt;/<span class="name">dfn</span>&gt;</span> is a global system of interconnected networks that use the Internet Protocol Suite (TCP/IP) to serve billions of users worldwide.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例4 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- Define "World-Wide Web" and reference definition for "the Internet" --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dfn</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">"World-Wide Web"</span>&gt;</span>WWW<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dfn</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>The World-Wide Web (WWW) is a system of interlinked hypertext documents accessed on <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#def-internet"</span>&gt;</span>the Internet<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><p>温馨提示: 下面我们再来看看下述都是HTML5新增标签。</p><hr><h3 id="bdi-标签"><a href="#bdi-标签" class="headerlink" title="bdi 标签"></a>bdi 标签</h3><p><strong>描述:</strong> HTML 双向隔离元素（<code>&lt;bdi&gt;</code>）告诉浏览器的双向算法将其包含的文本与周围的文本隔离，当网站动态插入一些文本且不知道所插入文本的方向性时，此功能特别有用。</p><p><strong>属性:</strong> </p><ul><li>dir : 根据元素内容决定元素内容的方向, 注意该属性不继承父元素, 如果没有设置默认值即为 auto.</li></ul><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">dir</span>=<span class="string">"ltr"</span>&gt;</span>This arabic word <span class="tag">&lt;<span class="name">bdi</span>&gt;</span>ARABIC_PLACEHOLDER<span class="tag">&lt;/<span class="name">bdi</span>&gt;</span> is automatically displayed left-to-right.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">dir</span>=<span class="string">"rtl"</span>&gt;</span>This arabic word <span class="tag">&lt;<span class="name">bdi</span>&gt;</span>ARABIC_PLACEHOLDER<span class="tag">&lt;/<span class="name">bdi</span>&gt;</span> is automatically displayed right-to-left.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">bdi</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>  <span class="attr">dir</span>=<span class="string">"ltr"</span>&gt;</span>WeiyiGeek<span class="tag">&lt;/<span class="name">bdi</span>&gt;</span>: 1st place<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"color: blue;"</span> <span class="attr">dir</span>=<span class="string">"rtl"</span>&gt;</span>Geeker<span class="tag">&lt;/<span class="name">span</span>&gt;</span>: 2nd place<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><br/></p><h3 id="mark-标签"><a href="#mark-标签" class="headerlink" title="mark 标签"></a>mark 标签</h3><p><strong>描述:</strong> HTML 标记文本元素 (<code>&lt; Mark &gt;</code>) 表示为引用或符号目的而标记或突出显示的文本，这是由于标记的段落在封闭上下文中的相关性或重要性造成的。<br><strong>说明:</strong> 当用在引用（<code>&lt;q&gt;、&lt;blockquote&gt;</code>）中时，通常用来显示有特殊意义的文本，但不在原材料中标记出来；或者是用来显示特殊审查的材料，即使原作者不认为它特别重要。另外，<code>&lt;mark&gt;</code> 元素还用来显示与用户当前活动相关的一部分文档内容。</p><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我说一段文字，我是一个关键点<span class="tag">&lt;<span class="name">mark</span>&gt;</span>Key 高亮文本 <span class="tag">&lt;/<span class="name">mark</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>温馨提示: 不要为了语法高亮而用 <code>&lt;mark&gt;</code> 元素; 你应该用 <code>&lt;strong&gt;</code>元素结合适当的 CSS 来实现这个目的（语法高亮）。</p><p><br/></p><h3 id="meter-标签"><a href="#meter-标签" class="headerlink" title="meter 标签"></a>meter 标签</h3><p><strong>描述:</strong> 定义度量衡, 用来显示已知范围的标量值或者分数值。<br><strong>属性:</strong></p><ul><li>value : 如果设置了最小值和最大值（分别由 min 属性和 max 属性定义），它必须介于最小值和最大值之间。</li><li>min : 值域的最小边界值。如果没设置，默认为 0。</li><li>max : 值域的上限边界值。如果没设置，默认为 1。</li><li>low : 定义了低值区间的上限值（译者注：如果 value 介于 min 和 low 之间，该元素就会表现出低值的视觉效果，value 落在 <code>[min,low]</code>、<code>[high,max]</code> 等不同的区间会使浏览器渲染该元素时出不同的视觉效果）。</li><li>high : 定义了高值区间的下限值。</li><li>optimum : 这个属性用来指示最优/最佳取值。</li><li>form : 该属性将本元素与对应的 form 元素关联。</li></ul><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 1.简单示例 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span> Heat the oven to <span class="tag">&lt;<span class="name">meter</span> <span class="attr">min</span>=<span class="string">"200"</span> <span class="attr">max</span>=<span class="string">"500"</span> <span class="attr">value</span>=<span class="string">"350"</span>&gt;</span>350 degrees<span class="tag">&lt;/<span class="name">meter</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 2.高低值区间示例,本例中 min 属性被省略  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>当值为 90 ： He got a <span class="tag">&lt;<span class="name">meter</span> <span class="attr">low</span>=<span class="string">"60"</span> <span class="attr">high</span>=<span class="string">"80"</span> <span class="attr">max</span>=<span class="string">"100"</span> <span class="attr">value</span>=<span class="string">"90"</span>&gt;</span>A<span class="tag">&lt;/<span class="name">meter</span>&gt;</span> on the exam<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>当值为 80 ： He got a <span class="tag">&lt;<span class="name">meter</span> <span class="attr">low</span>=<span class="string">"60"</span> <span class="attr">high</span>=<span class="string">"80"</span> <span class="attr">max</span>=<span class="string">"100"</span> <span class="attr">value</span>=<span class="string">"80"</span>&gt;</span>B<span class="tag">&lt;/<span class="name">meter</span>&gt;</span> on the exam<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>当值为 59 ： He got a <span class="tag">&lt;<span class="name">meter</span> <span class="attr">low</span>=<span class="string">"60"</span> <span class="attr">high</span>=<span class="string">"80"</span> <span class="attr">max</span>=<span class="string">"100"</span> <span class="attr">value</span>=<span class="string">"59"</span>&gt;</span>B<span class="tag">&lt;/<span class="name">meter</span>&gt;</span> on the exam<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>当值为 91 : <span class="tag">&lt;<span class="name">meter</span> <span class="attr">low</span>=<span class="string">"60"</span> <span class="attr">optimum</span>=<span class="string">"90"</span> <span class="attr">high</span>=<span class="string">"80"</span> <span class="attr">max</span>=<span class="string">"100"</span> <span class="attr">value</span>=<span class="string">"91"</span>&gt;</span>A<span class="tag">&lt;/<span class="name">meter</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><br/></p><h3 id="progress-标签"><a href="#progress-标签" class="headerlink" title="progress 标签"></a>progress 标签</h3><p><strong>描述:</strong> HTML中的 <code>&lt;progress&gt;</code> 元素用来显示一项任务的完成进度, 浏览器中该元素都显示为一个进度条形式。</p><p><strong>属性:</strong></p><ul><li>max : 该属性描述了这个progress元素所表示的任务一共需要完成多少工作。</li><li>value : 该属性用来指定该进度条已完成的工作量。</li></ul><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 进度条示例 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">progress</span> <span class="attr">value</span>=<span class="string">"70"</span> <span class="attr">max</span>=<span class="string">"100"</span>&gt;</span>70 %<span class="tag">&lt;/<span class="name">progress</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><br/></p><h3 id="rp-标签"><a href="#rp-标签" class="headerlink" title="rp 标签"></a>rp 标签</h3><p><strong>描述:</strong> <code>&lt;rp&gt;</code> 元素用于为那些不能使用 <code>&lt;ruby&gt;</code>元素展示 ruby 注解的浏览器，提供随后的圆括号。<br><strong>说明:</strong> 用于展示东亚文字的发音，例如使用日语罗马音和汉语拼音的文字。</p><p><br/></p><h3 id="rt-标签"><a href="#rt-标签" class="headerlink" title="rt 标签"></a>rt 标签</h3><p><strong>描述：</strong> Ruby 文本 (<code>&lt;rt&gt;</code>) 元素包含字符的发音，字符在 ruby 注解中出现，它用于描述东亚字符的发音, 这个元素始终在 <code>&lt;ruby&gt;</code> 元素中使用<br><strong>说明：</strong> 简单的说就是注释文字拼音。</p><p><br/></p><h3 id="ruby-标签"><a href="#ruby-标签" class="headerlink" title="ruby 标签"></a>ruby 标签</h3><p><strong>描述:</strong> HTML<code>&lt;ruby&gt;</code> 元素 被用来展示东亚文字注音或字符注释。</p><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例 1: 字 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ruby</span>&gt;</span></span><br><span class="line">  汉 <span class="tag">&lt;<span class="name">rp</span>&gt;</span>(<span class="tag">&lt;/<span class="name">rp</span>&gt;</span><span class="tag">&lt;<span class="name">rt</span>&gt;</span>han<span class="tag">&lt;/<span class="name">rt</span>&gt;</span><span class="tag">&lt;<span class="name">rp</span>&gt;</span>)<span class="tag">&lt;/<span class="name">rp</span>&gt;</span></span><br><span class="line">  字 <span class="tag">&lt;<span class="name">rp</span>&gt;</span>(<span class="tag">&lt;/<span class="name">rp</span>&gt;</span><span class="tag">&lt;<span class="name">rt</span>&gt;</span>zi<span class="tag">&lt;/<span class="name">rt</span>&gt;</span><span class="tag">&lt;<span class="name">rp</span>&gt;</span>)<span class="tag">&lt;/<span class="name">rp</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ruby</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例 2: 词 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ruby</span>&gt;</span></span><br><span class="line">  明 日 <span class="tag">&lt;<span class="name">rp</span>&gt;</span>(<span class="tag">&lt;/<span class="name">rp</span>&gt;</span><span class="tag">&lt;<span class="name">rt</span>&gt;</span>ming ri<span class="tag">&lt;/<span class="name">rt</span>&gt;</span><span class="tag">&lt;<span class="name">rp</span>&gt;</span>)<span class="tag">&lt;/<span class="name">rp</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ruby</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><br/></p><h3 id="wbr-标签"><a href="#wbr-标签" class="headerlink" title="wbr 标签"></a>wbr 标签</h3><p><strong>描述:</strong> 规定一个文本中的位置，其中浏览器可以选择来换行，虽然它的换行规则可能不会在这里换行, 即以便避免将标点符号留在行尾。</p><p><strong>说明:</strong> 在 UTF-8 编码的页面中， <code>&lt;wbr&gt;</code> 表现为 U+200B ZERO-WIDTH SPACE （零宽空格）代码点。特别是，它表现为 Unicode bidi BN 代码点，也就是说，它对 bidi-ordering 没有影响：<code>&lt;div dir=rtl&gt;123,&lt;wbr&gt;456&lt;/div&gt;</code> 展示 123,456 而不是 456,123，当不拆成的两行时候。</p><p><strong>温馨提示：</strong> 出于相同原因 <code>&lt;wbr&gt;</code>元素不会在换行的地方引入连字符, 为了使连字符仅仅在行尾出现，使用连字符软实体 (&amp; shy;) 来代替。<br><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>此处正在测试wbr标签: <span class="tag">&lt;<span class="name">wbr</span>&gt;</span> 一段很长的文字，文章!<span class="tag">&lt;/<span class="name">wbr</span>&gt;</span> 以便避免将标点符号留在行尾.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>http://this<span class="tag">&lt;<span class="name">wbr</span>&gt;</span>.is<span class="tag">&lt;<span class="name">wbr</span>&gt;</span>.a<span class="tag">&lt;<span class="name">wbr</span>&gt;</span>.really<span class="tag">&lt;<span class="name">wbr</span>&gt;</span>.long<span class="tag">&lt;<span class="name">wbr</span>&gt;</span>.example<span class="tag">&lt;<span class="name">wbr</span>&gt;</span>.com/With<span class="tag">&lt;<span class="name">wbr</span>&gt;</span>/deeper<span class="tag">&lt;<span class="name">wbr</span>&gt;</span>/level<span class="tag">&lt;<span class="name">wbr</span>&gt;</span>/pages<span class="tag">&lt;<span class="name">wbr</span>&gt;</span>/deeper<span class="tag">&lt;<span class="name">wbr</span>&gt;</span>/level<span class="tag">&lt;<span class="name">wbr</span>&gt;</span>/pages<span class="tag">&lt;<span class="name">wbr</span>&gt;</span>/deeper<span class="tag">&lt;<span class="name">wbr</span>&gt;</span>/level<span class="tag">&lt;<span class="name">wbr</span>&gt;</span>/pages<span class="tag">&lt;<span class="name">wbr</span>&gt;</span>/deeper<span class="tag">&lt;<span class="name">wbr</span>&gt;</span>/level<span class="tag">&lt;<span class="name">wbr</span>&gt;</span>/pages<span class="tag">&lt;<span class="name">wbr</span>&gt;</span>/deeper<span class="tag">&lt;<span class="name">wbr</span>&gt;</span>/level<span class="tag">&lt;<span class="name">wbr</span>&gt;</span>/pages<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><br/></p><h3 id="time-标签"><a href="#time-标签" class="headerlink" title="time 标签"></a>time 标签</h3><p><strong>描述:</strong> 该 time 标签用来表示 24 小时制时间或者公历日期，若表示日期则也可包含时间和时区。<br><strong>注意:</strong> 此元素意在以机器可读的格式表示日期和时间。有安排日程表功能的应用可以利用这一点。<br><strong>属性:</strong> </p><ul><li>datetime: 该属性表示此元素的时间和日期，并且属性值必须是一个有效的日期格式，并可包含时间。</li><li>pubdate: 此布尔属性指定元素给定的日期和时间是文档的发布日期。</li></ul><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 常规 示例 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>音乐会<span class="tag">&lt;<span class="name">time</span>&gt;</span>20:00<span class="tag">&lt;<span class="name">time</span>&gt;</span>点开始。</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- pubdate 示例 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>This article was created on <span class="tag">&lt;<span class="name">time</span> <span class="attr">pubdate</span>&gt;</span>2011-01-28<span class="tag">&lt;/<span class="name">time</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- datetime 示例 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>The concert took place on <span class="tag">&lt;<span class="name">time</span> <span class="attr">datetime</span>=<span class="string">"2001-05-15 19:00"</span>&gt;</span>May 15<span class="tag">&lt;/<span class="name">time</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>本章实践完毕，</p><p><strong>综合实践：</strong><br>示例文件: <a href="https://github.com/WeiyiGeek/DevelopLearnig/blob/main/fore-end/HTML/example/study/02.Format.html" target="_blank" rel="noopener">https://github.com/WeiyiGeek/DevelopLearnig/blob/main/fore-end/HTML/example/study/02.Format.html</a></p><p>网页效果：</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230301172614.png" alt="WeiyiGeek.格式化HTML常规标签效果图" title="" class="">                <p>WeiyiGeek.格式化HTML常规标签效果图</p>            </figure><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230301172858.png" alt="WeiyiGeek.“引用、引用和术语定义”标签效果图" title="" class="">                <p>WeiyiGeek.“引用、引用和术语定义”标签效果图</p>            </figure><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230301173134.png" alt="WeiyiGeek.HTML5格式化“新增”标签效果图" title="" class="">                <p>WeiyiGeek.HTML5格式化“新增”标签效果图</p>            </figure><p>好的，本小节到此完毕！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;</summary>
    
    
    
    <category term="前端学习" scheme="https://blog.weiyigeek.top/categories/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="学习笔记" scheme="https://blog.weiyigeek.top/categories/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="HTML" scheme="https://blog.weiyigeek.top/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>编程世界/前端技术/ht</title>
    <link href="https://blog.weiyigeek.top/2023/2-22-index.html"/>
    <id>https://blog.weiyigeek.top/2023/2-22-index.html</id>
    <published>2023-02-22T08:25:06.805Z</published>
    <updated>2023-02-22T08:25:06.805Z</updated>
    
    <content type="html"><![CDATA[<!DOCTYPE html><html lang="">  <head>    <meta charset="utf-8">    <meta http-equiv="X-UA-Compatible" content="IE=edge">    <meta name="viewport" content="width=device-width, initial-scale=1">    <title>Title Page</title>    <!-- Bootstrap CSS -->    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet">    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->    <!--[if lt IE 9]>      <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.3/html5shiv.js"></script>      <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>    <![endif]-->  <meta name="generator" content="Hexo 4.2.1"><link rel="alternate" href="/atom.xml" title="WeiyiGeek Blog" type="application/atom+xml"></head>  <body>    <h1 class="text-center">Hello World</h1>    <!-- jQuery -->    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>    <!-- Bootstrap JavaScript -->    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>  </body></html>]]></content>
    
    
      
      
    <summary type="html">
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;&quot;&gt;
  &lt;head&gt;
    &lt;meta charset=&quot;utf-8&quot;&gt;
    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;
    &lt;meta name</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>编程世界/前端技术/常用前端代码收集与实践</title>
    <link href="https://blog.weiyigeek.top/2023/2-22-index.html"/>
    <id>https://blog.weiyigeek.top/2023/2-22-index.html</id>
    <published>2023-02-22T06:25:29.243Z</published>
    <updated>2023-02-22T06:25:29.243Z</updated>
    
    <content type="html"><![CDATA[<p>实现在网页中实时预览html标签元素<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">// Author: WeiyiGeek</span></span><br><span class="line"><span class="comment">// Description: 实现在网页中实时预览html标签元素</span></span><br><span class="line"><span class="comment">// Blog: weiyigeek.top</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 标签元素 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"result"</span> <span class="attr">style</span>=<span class="string">"border: 1px solid black;padding: 0px 10px 6px 10px;line-height: 1.2;"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">strong</span>&gt;</span>实时结果输出：<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"output"</span> <span class="attr">style</span>=<span class="string">"min-height: 50px;"</span>&gt;</span>请点击执行,即可显示结果!<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">strong</span>&gt;</span>可编辑代码:<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">class</span>=<span class="string">"htmlcode"</span> <span class="attr">class</span>=<span class="string">"input"</span> <span class="attr">style</span>=<span class="string">"min-height: 100px;width: 95%"</span>&gt;</span>&amp;lt;h1&amp;gt; WeiyiGeek Blog =&amp;gt; &amp;lt;p&amp;gt; 花开堪折直须折，莫待无花空折枝。 &amp;lt;/p&amp;gt; &amp;lt;/h1&amp;gt;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"reset"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"执行显示"</span> <span class="attr">onclick</span>=<span class="string">"output0.innerHTML= textarea0.value;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- JS脚本 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> textarea0 = <span class="built_in">document</span>.getElementsByClassName(<span class="string">'htmlcode'</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> output0 = <span class="built_in">document</span>.getElementsByClassName(<span class="string">"output"</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230222111738.png" alt="WeiyiGeek.实现在网页中实时html标签元素预览图" title="" class="">                <p>WeiyiGeek.实现在网页中实时html标签元素预览图</p>            </figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;实现在网页中实时预览html标签元素&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>2.HTML根部头部主体标签元素介绍</title>
    <link href="https://blog.weiyigeek.top/2023/2-22-716.html"/>
    <id>https://blog.weiyigeek.top/2023/2-22-716.html</id>
    <published>2023-02-22T01:30:30.000Z</published>
    <updated>2023-03-14T08:18:06.826Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h2 id="0x00-Html-标签元素"><a href="#0x00-Html-标签元素" class="headerlink" title="0x00 Html 标签元素"></a>0x00 Html 标签元素</h2><p>描述: HTML <code>html</code> 元素表示一个 HTML 文档的根（顶级元素），所以它也被称为<em>根元素</em>，所有其他元素必须是此元素的后代。</p><p><strong>属性:</strong></p><ul><li>lang : 设置<code>有效 IETF 标识语言标记</code>后有助于屏幕阅读技术确定要陈述的正确语言，若没有设置通常使用操作系统默认语言。 参考地址 (<a href="https://www.ietf.org/rfc/bcp/bcp47.txt" target="_blank" rel="noopener">https://www.ietf.org/rfc/bcp/bcp47.txt</a>)</li><li>xmlns : 指派文档的 XML 命名空间。默认的值是”<a href="http://www.w3.org/1999/xhtml&quot;" target="_blank" rel="noopener">http://www.w3.org/1999/xhtml&quot;</a></li><li>manifest 已弃用: 指定一个 资源清单的 URI，指示应在本地缓存的资源。</li><li>version 已弃用: 指定控制当前文档的 HTML 版本文档类型定义 (en-US) 。</li></ul><p><br/></p><p><strong>示例:</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span>...<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span>...<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br/></p><hr><h2 id="0x01-Head-标签元素"><a href="#0x01-Head-标签元素" class="headerlink" title="0x01 Head 标签元素"></a>0x01 Head 标签元素</h2><h3 id="head-标签"><a href="#head-标签" class="headerlink" title="head 标签"></a>head 标签</h3><p>描述： HTML <code>&lt;head&gt;</code> 元素包含了所有的头部标签元素,通常我们可以添加在头部区域的元素标签为: <code>&lt;title&gt;, &lt;style&gt;, &lt;meta&gt;, &lt;link&gt;, &lt;script&gt;, &lt;noscript&gt;, and &lt;base&gt;</code>等 HTML 元数据信息.</p><ul><li><code>&lt;head&gt;</code> : 定义了文档的信息</li><li><code>&lt;title&gt;</code> : 定义了文档的标题</li><li><code>&lt;base&gt;</code> : 定义了页面链接标签的默认链接地圳</li><li><code>&lt;link&gt;</code> : 定义了一个文档和外部资源之间的关系</li><li><code>&lt;meta&gt;</code> : 定义了HTML文档中的元数据</li><li><code>&lt;script&gt;</code> : 定义了客户端的js脚本文件</li><li><code>&lt;noscript&gt;</code> ：定义了客户端不支持或者禁用js时执行的替代内容</li><li><code>&lt;style&gt;</code> : 定义了HTML文档的样式文件</li></ul><p>温馨提示: HTML <code>&lt;head&gt;</code> 元素与 <code>&lt;body&gt;</code> 元素不同，它的内容不会在浏览器中显示，它的作用是保存页面的一些元数据。<br>温馨提示：如果在文档中忽略了 <code>&lt;head&gt;</code> 标签，则大部分浏览器会自动创建一个 <code>&lt;head&gt;</code> 元素。</p><p><strong>Q:head 头部元素里有什么?</strong></p><blockquote><p>答: 在页面加载完成的时候，head 标签里的内容，是不会在页面中显示出来的。<br>它包含了诸如页面的 <code>&lt;title&gt;</code>（标题）、指向 CSS 的链接（如果你选择用 CSS 来为 HTML 内容添加样式）、指向自定义图标的链接和其它的元数据（<code>描述 HTML 的数据，比如，作者和描述文档的重要关键词</code>）等信息。</p></blockquote><p><br/></p><h3 id="title-标签"><a href="#title-标签" class="headerlink" title="title 标签"></a>title 标签</h3><p>描述：HTML <code>&lt;title&gt;</code> 元素 定义文档的标题, 显示在浏览器的标题栏或标签页上。它只应该包含文本，若是包含有标签，则它包含的任何标签都将被忽略, 且一个 <code>&lt;head&gt;</code>元素只能包含一个 <code>&lt;title&gt;</code> 元素。</p><p><strong>作用:</strong></p><blockquote><p>1）定义了浏览器工具栏的标题<br>2）当网页添加到收藏夹时，显示在收藏夹中的标题<br>3）显示在搜索引擎结果页面的标题</p></blockquote><p><strong>示例：</strong> <code>&lt;title&gt;HTML头部标签元素介绍实践-唯一极客-博客文章专栏&lt;/title&gt;</code></p><p><strong>补充：</strong> 页面标题的内容可能对搜索引擎优化（SEO）具有重要意义，下面罗列了一些准则与技巧。</p><blockquote><p>1.避免使用一两个单词的标题, 请使用描述性短语或术语。<br>2.搜索引擎通常显示页面标题的前 55 至 60 个字符。<br>3.不要使用“关键字集合”。<br>4.尝试确保您的标题在您自己的网站中尽可能唯一。</p></blockquote><p>参考地址：<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/title" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/title</a></p><p><br/></p><h3 id="base-标签"><a href="#base-标签" class="headerlink" title="base 标签"></a>base 标签</h3><p>描述: 设置基本的链接地址(链接目标),该标签作为HTML文档中所有的链接标签的默认链接:（类似）相对地址的相对地址。</p><p><strong>属性:</strong></p><ul><li style="list-style: none"><input type="checkbox"></input> href : 用于文档中相对 URL 地址的基础 URL</li><li style="list-style: none"><input type="checkbox"></input> target : 默认浏览上下文的关键字或作者定义的名称，当没有明确目标的链接 <code>&lt;a&gt;</code> 或表单 <code>&lt;form&gt;</code> 导致导航被激活时显示其结果.<blockquote><p>_self: 载入结果到当前浏览上下文中。（该值是元素的默认值）。<br>_blank: 载入结果到一个新的未命名的浏览上下文。<br>_parent: 载入结果到父级浏览上下文（如果当前页是内联框）。如果没有父级结构，该选项的行为和_self一样。<br>_top: 载入结果到顶级浏览上下文（该浏览上下文是当前上下文的最顶级上下文）。如果没有父级，该选项的行为和_self 一样。</p></blockquote></li></ul><p><strong>示例</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例1.图片路径与窗口打开方式 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">"https://www.weiyigeek.top/img/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"logo.png"</span>&gt;</span> - 注意这里我们设置了图片的相对地址，它还是能正常显示是因为我们在 head 部分设置了 base 标签，该标签指定了页面上所有链接的默认 URL，所以该图片的访问地址为 "https://www.weiyigeek.top/img/images/logo.png"</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.weiyigeek.top"</span>&gt;</span>前端篇-HTML学习<span class="tag">&lt;/<span class="name">a</span>&gt;</span> - 注意这个链接会在新窗口打开，即便它没有 target="_blank" 属性。因为在 base 标签里我们已经设置了 target 属性的值为 "_blank"。</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例2.页内锚指向文档中某个片段的链接 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 例如 &lt;a href="#some-id"&gt; 用 &lt;base&gt; 解析，触发对带有附加片段的基本 URL 的 HTTP 请求。 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--点击 `#anchor` 链接指向 https://example.com/#anchor --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">"https://example.com"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#anchor"</span>&gt;</span>Anker<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>温馨提示: 如果指定了多个 <code>&lt;base&gt;</code> 元素，只会使用第一个 href 和 target 值，其余都会被忽略。</p><p><br/></p><h3 id="meta-元素"><a href="#meta-元素" class="headerlink" title="meta 元素"></a>meta 元素</h3><p>描述: HTML <code>&lt;meta&gt;</code> 元素表示那些不能由其它 HTML 元相关（meta-related）元素表示的元数据信息，通常用于指定网页的描述，关键词，文件的最后修改时间，作者，和其他元数据，元数据可以使用于浏览器（如何显示内容或重新加载页面），搜索引擎和更新频度的描述和关键词，或其他Web服务，其一般放置与head标签中。</p><p>该元素定义的元数据的类型一览：</p><ul><li>如果设置了 name 属性，<code>&lt;meta&gt;</code> 元素提供的是文档级别（document-level）的元数据，应用于整个页面。</li><li>如果设置了 charset 属性，<code>&lt;meta&gt;</code> 元素是一个字符集声明，告诉文档使用哪种字符编码。</li><li>如果设置了 itemprop 属性，<code>&lt;meta&gt;</code> 元素提供用户定义的元数据。</li><li>如果设置了 http-equiv 属性，<code>&lt;meta&gt;</code> 元素则是编译指令，提供的信息与类似命名的 HTTP 头部相同。</li></ul><p><br/></p><p><strong>属性</strong></p><ul><li style="list-style: none"><input type="checkbox" checked></input> charset : 该属性声明了文档的字符编码。</li><li style="list-style: none"><input type="checkbox" checked></input> content : 此属性包含http-equiv 或name 属性的值，具体取决于所使用的值。</li><li style="list-style: none"><input type="checkbox" checked></input> name : 该属性可以和content 属性一起使用，以名 - 值对的方式给文档提供元数据，其中 name 作为元数据的名称，content 作为元数据的值。 </li><li style="list-style: none"><input type="checkbox" checked></input> http-equiv : 此属性定义了一个编译指示指令，例如 <blockquote><p>content-security-policy : 它允许页面作者定义当前页的内容策略 (en-US), 防止跨站点脚本攻击。<br>content-type : 设置文档MIME type类型以及编码格式，例如 <code>&quot;text/html; charset=utf-8&quot;</code><br>refresh : 指定页面重新载入页面的时间间隔 (秒)以及当跟着字符串 ‘3;url=<a href="https://weiyigeek.top&#39;" target="_blank" rel="noopener">https://weiyigeek.top&#39;</a> 则进行跳转到指定网页站点<br>default-style : 设置默认 CSS 样式表组的名称。<br>x-ua-compatible : 如果指定则 content 属性必须具有值 “IE=edge”。</p></blockquote></li></ul><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例1.页面文档类型及文档字符编码 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"content-type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=utf-8"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例2.Redirect page after 3 seconds --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"refresh"</span> <span class="attr">content</span>=<span class="string">"3;url=https://weiyigeek.top"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>对不起。我们已经搬家了,您的 URL 是 <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://blog.weiyigeek.top"</span>&gt;</span>https://blog.weiyigeek.top<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>您将在 5 秒内被重定向到新的地址。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>如果超过 5 秒后您仍然看到本消息，请点击上面的链接。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例3.自定义元数据,如下定义网页作者，修订与编辑软件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"author"</span> <span class="attr">content</span>=<span class="string">"WeiyiGeek"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"revised"</span> <span class="attr">content</span>=<span class="string">"WeiyiGeeker,8/1/07"</span>&gt;</span>   <span class="comment">&lt;!--经过修订（或校正）的--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"generator"</span> <span class="attr">content</span>=<span class="string">"VScode"</span>&gt;</span>  <span class="comment">&lt;!--编辑的软件--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例4.用于指定用户是否可以缩放Web页面及针对移动设备进行了优化 </span></span><br><span class="line"><span class="comment">-- width和height指令分别指定视区的逻辑宽度和高度。</span></span><br><span class="line"><span class="comment">-- user-scalable指令指定用户是否可以缩放视区。</span></span><br><span class="line"><span class="comment">-- initial-scale指令用于设置Web页面的初始缩放比例，设为1.0则将显示未经缩放的Web文档。</span></span><br><span class="line"><span class="comment">-- maximum-scale和minimum-scale指令用于设置用户对Web页面缩放比例的限制。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1, maximum-scale=1"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例5.网站SEO常用的keywords与description元数据,非常注意关键字与描述长度 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"WeiyiGeek、唯一极客、IT知识、网络技术、网络安全、安全测试、安全运维、系统运维、Web程序开发、手机/移动开发、IOT物联网开发、数据库学习、系统管理和监控、插件和扩展、开源软件、企业实践、分享学习知识"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"WeiyiGeek-唯一极客博客站点,关注于网络安全运维,Web安全开发,IOT物联网安全开发,应用开发,分享技术学习知识与入坑解决,提升网络安全技术与自身技术能力,立志维护大众网络安全为己任,做一个对国家有用的人,为实现中华民族伟大复兴的中国梦不懈奋斗"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>扩展说明：</p><blockquote><p>revised：英 <code>[rɪ&#39;vaɪzd]</code>  美 <code>[rɪ&#39;vaɪzd]</code>：v. 修改；校订；复习（revise的过去分词形式），adj. 改进的<br>expires：英 <code>[ɪk&#39;spaɪəz]</code>  美 <code>[ek- ɪk&#39;spaɪɚz]</code>：n. 到期；有效期：v. 期满；断气（expire的三单形式）</p></blockquote><p><br/></p><h3 id="link-标签"><a href="#link-标签" class="headerlink" title="link 标签"></a>link 标签</h3><p>描述: 外部资源链接元素 (<code>&lt;link&gt;</code>) 规定了当前文档与外部资源的关系。该元素最常用于链接样式表，此外也可以被用来创建站点图标 (比如 PC 端的“favicon”图标和移动设备上用以显示在主屏幕的图标) ，在CSS我们也会讲到。</p><p><strong>属性</strong></p><ul><li>rel ：此属性命名链接文档与当前文档的关系，其中常用的是<code>stylesheet</code>与<code>icon</code>。</li><li>href : 此属性指定被链接资源的URL。</li><li>hreflang : 此属性指明了被链接资源的语言</li><li>disabled : 仅对于rel=”stylesheet” ，disabled 的 Boolean 属性指示是否应加载所描述的样式表并将其应用于文档。</li><li>media : 属性规定了外部资源适用的媒体类型, 例如：<code>all、print、screen、aural、braille</code></li><li>sizes : 属性定义了包含相应资源的可视化媒体中的 icons 的大小, 例如 <code>&quot;72x72&quot;</code></li><li>type : 属性被用于定义链接的内容的类型。这个属性的值应该是像 text/html，text/css 等 MIME 类型</li><li><p>as : 该属性仅在<code>&lt;link&gt;</code>元素设置了 rel=”preload” 或者 rel=”prefetch” 时才能使用。它规定了<code>&lt;link&gt;</code>元素加载的内容的类型，对于内容的优先级、请求匹配、正确的内容安全策略的选择以及正确的 Accept请求头的设置，这个属性是必需的。<br>| 值       | 应用于                                                       |<br>| ——– | ———————————————————— |<br>| audio    | <code>audio</code> 元素                                                      |<br>| document | <code>iframe</code> 和 <code>frame</code> 元素                                                |<br>| embed    | <code>embed</code> 元素                                                      |<br>| fetch    | fetch，XHRT该值还需要＜link＞来包含交叉起源属性。 |<br>| font     | CSS @font-face                                               |<br>| image    | 具有srcset或imageset属性的＜img＞和＜picture＞元素、SVG＜image＞元素、CSS*-image规则 |<br>| object   | <code>object</code> elements                                                  |<br>| script   | <code>script</code> elements, Worker <code>importScripts</code>                          |<br>| style    | <code>&lt;link rel=stylesheet&gt;</code> elements, CSS <code>@import</code>                                   |<br>| track    | <code>track</code> elements                                                  |<br>| video    | <code>video</code> elements                                                  |<br>| worker   | Worker, SharedWorker                                         |</p></li><li><p>crossorigin : 此枚举属性指定在加载相关资源时是否必须使用 CORS,启用 CORS 的图片 可以在 <code>&lt;canvas&gt;</code> 元素中重复使用，并避免其被污染. 可取的值如下：</p><blockquote><ul><li>“anonymous” : 会发起一个跨域请求 (即包含 Origin: HTTP 头). </li><li>“use-credentials” : 会发起一个带有认证信息 (发送 cookie, X.509 证书和 HTTP 基本认证信息) 的跨域请求 (即包含 Origin: HTTP 头).</li></ul></blockquote></li><li><p>importance 实验性: 指示资源的相对重要性，只有存在 rel=“preload”或 rel=“prefetch”时,可选属性 auto、high、low（<code>向浏览器指示资源的优先级较低</code>）。</p></li><li>integrity 实验性: 包含行内元数据，它是一个你用浏览器获取的资源文件的哈希值，以 base64 编码的方式加的密, 从而使用它验证一个获取到的资源，在传送时未被非法篡改。</li><li>referrerpolicy 实验性：一个字符串，指示在获取资源时使用哪个引荐来源网址：</li></ul><p><strong>示例</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 示例1.设置网站图标的链接以及表示不同移动平台上特殊的图标类型 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"icon"</span> <span class="attr">href</span>=<span class="string">"favicon.ico"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"shortcut icon"</span> <span class="attr">href</span>=<span class="string">"/img/favicon.ico"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"apple-touch-icon-precomposed"</span> <span class="attr">sizes</span>=<span class="string">"114x114"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">href</span>=<span class="string">"apple-icon-114.png"</span> <span class="attr">type</span>=<span class="string">"image/png"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 示例2.标签通常用于链接到一个样式表css文件 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"mobile.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">media</span>=<span class="string">"all"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span>  <span class="attr">href</span>=<span class="string">"mobile.css"</span>  <span class="attr">media</span>=<span class="string">"screen and (max-width: 600px)"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"highres.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">media</span>=<span class="string">"screen and (min-resolution: 300dpi)"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span>  <span class="attr">href</span>=<span class="string">"/staic/css/mystyle.css"</span> <span class="attr">media</span>=<span class="string">"print"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 示例3.加入了一些新的有意思的性能和安全特性 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"preload"</span> <span class="attr">href</span>=<span class="string">"myFont.woff2"</span> <span class="attr">as</span>=<span class="string">"font"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">type</span>=<span class="string">"font/woff2"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span></span><br><span class="line">   </span><br><span class="line">  <span class="comment">&lt;!-- 示例4.表示当前文档的可替换样式表，也是需要提前下载的。 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"out.css"</span>&gt;</span><span class="comment">&lt;!--作为默认样式表--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"alternate"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"out.css"</span>&gt;</span>      <span class="comment">&lt;!--作为可替换样式表--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"alternate"</span> <span class="attr">href</span>=<span class="string">"/atom.xml"</span> <span class="attr">title</span>=<span class="string">"WeiyiGeek Blog"</span> <span class="attr">type</span>=<span class="string">"application/atom+xml"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 示例5.利用样式表加载事件 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">  <span class="function"><span class="keyword">function</span> <span class="title">sheetLoaded</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// Do something interesting; the sheet has been loaded</span></span></span><br><span class="line"><span class="actionscript">    alert(<span class="string">"网页资源加载!"</span>);</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="actionscript">  <span class="function"><span class="keyword">function</span> <span class="title">sheetError</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">    alert(<span class="string">"An error occurred loading the stylesheet!"</span>);</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"mystylesheet.css"</span> <span class="attr">onload</span>=<span class="string">"sheetLoaded()"</span> <span class="attr">onerror</span>=<span class="string">"sheetError()"</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">&lt;!-- 示例6.权威站点便于收录 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"canonical"</span> <span class="attr">href</span>=<span class="string">"https://blog.weiyigeek.top/tags/%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/index.html"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>补充</strong></p><ul><li>WebTV 支持rel使用next值，用于在一个 document series 中预加载下一页。</li></ul><p><br/></p><h3 id="style-标签"><a href="#style-标签" class="headerlink" title="style 标签"></a>style 标签</h3><p>描述: <code>&lt;style&gt;</code> 标签元素包含文档的样式信息或者文档的部分内容，在后续的CSS学习中会讲到。</p><p><strong>属性:</strong></p><ul><li>type: 该属性以 MIME 类型（不应该指定字符集）定义样式语言。如果该属性未指定，则默认为 text/css。</li><li><p>media: 该属性规定该样式适用于哪个媒体, 可能的运算符 <code>and not ,</code>，以及设备和值如下。</p><blockquote><p>all     默认。适应所有设备。<br>aural     语音合成器。<br>braille     盲人用点字法反馈设备。<br>handheld     手持设备（小屏幕、有限的带宽）。<br>projection     放映机。<br>print     打印预览模式 / 打印页。<br>screen     计算机屏幕（默认值）。<br>tty     电传打字机以及使用等宽字符网格的类似媒介。<br>tv     电视类型设备（低分辨率、有限的屏幕翻滚能力）。</p></blockquote></li><li><p>nonce: 一种加密的随机数（一次使用的数字），用于在style-src Content-Security-Policy (en-US)中将内联样式列入白名单。</p></li><li>title: 指定可选的样式表</li></ul><p><strong>示例:</strong> 在<code>&lt;style&gt;</code>元素中你也可以直接添加样式来渲染 HTML 文档:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 简单的样式表 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-tag">body</span> &#123;<span class="attribute">background-color</span>:yellow&#125;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">p</span> &#123;<span class="attribute">color</span>:blue; <span class="attribute">background-color</span>: blue;<span class="attribute">padding</span>: <span class="number">5px</span>; <span class="attribute">border</span>: <span class="number">1px</span> solid black;&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 多种样式元素 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">  p &#123;</span></span><br><span class="line"><span class="undefined">    color: blue;</span></span><br><span class="line"><span class="undefined">    background-color: yellow;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 包含媒体 (media) 选择，视图宽度小于 500px 时生效 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">media</span>=<span class="string">"all and (max-width: 500px)"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">  p &#123;</span></span><br><span class="line"><span class="undefined">    color: blue;</span></span><br><span class="line"><span class="undefined">    background-color: yellow;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>This is my blog site.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 针对两种不同媒介类型（屏幕和打印）的两个不同的样式表 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">media</span>=<span class="string">"print"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-tag">h1</span> &#123;<span class="attribute">color</span>:<span class="number">#000000</span>;&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p>温馨提示:</p><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>width</td><td>规定目标显示区域的宽度。 可使用 “min-“ 和 “max-“ 前缀。 例子：media=”screen and (min-width:500px)”</td></tr><tr><td>height</td><td>规定目标显示区域的高度。 可使用 “min-“ 和 “max-“ 前缀。 例子：media=”screen and (max-height:700px)”</td></tr><tr><td>device-width</td><td>规定目标显示器/纸张的宽度。 可使用 “min-“ 和 “max-“ 前缀。 例子：media=”screen and (device-width:500px)”</td></tr><tr><td>device-height</td><td>规定目标显示器/纸张的高度。 可使用 “min-“ 和 “max-“ 前缀。 例子：media=”screen and (device-height:500px)”</td></tr><tr><td>orientation</td><td>规定目标显示器/纸张的方向。 可能的值：”portrait” or “landscape(<code>横向</code>)” 例子：media=”all and (orientation: landscape)”</td></tr><tr><td>aspect-ratio</td><td>规定目标显示区域的宽度/高度比 可使用 “min-“ 和 “max-“ 前缀。 例子：media=”screen and (aspect-ratio:16/9)”</td></tr><tr><td>device-aspect-ratio</td><td>规定目标显示器/纸张的 device-width/device-height 比率 可使用 “min-“ 和 “max-“ 前缀。 例子：media=”screen and (device-aspect-ratio:16/9)”</td></tr><tr><td>color</td><td>规定目标显示器的 bits/color 可使用 “min-“ 和 “max-“ 前缀。 例子：media=”screen and (color:3)”</td></tr><tr><td>color-index</td><td>规定目标显示器可以处理的颜色数。 可使用 “min-“ 和 “max-“ 前缀。 例子：media=”screen and (min-color-index:256)”</td></tr><tr><td>monochrome</td><td>规定单色帧缓冲中的 bits/pixel。 可使用 “min-“ 和 “max-“ 前缀。 例子：media=”screen and (monochrome:2)”</td></tr><tr><td>resolution</td><td>规定目标显示器/纸张的像素密度 (dpi 或 dpcm)。 可使用 “min-“ 和 “max-“ 前缀。 例子：media=”print and (resolution:300dpi)”</td></tr><tr><td>scan</td><td>规定 tv 显示器的扫描方式。 可能的值：”progressive” 和 “interlace”。 例子：media=”tv and (scan:interlace)”</td></tr><tr><td>grid</td><td>规定输出设备是否是网格或位图。 可能的值：”1” 为网格，否则为 “0”。 例子：media=”handheld and (grid:1)”</td></tr></tbody></table><p><br/></p><h3 id="script-标签"><a href="#script-标签" class="headerlink" title="script 标签"></a>script 标签</h3><p>描述: HTML <code>&lt;script&gt;</code> 元素用于嵌入或引用可执行脚本。这通常用作嵌入或者指向 JavaScript 代码。<code>&lt;script&gt;</code> 元素也能在其他语言中使用，比如 WebGL 的 GLSL 着色器语言。</p><p><strong>属性:</strong></p><ul><li>src : 属性定义引用外部脚本的 URI，这可以用来代替直接在文档中嵌入脚本。</li><li>type : 属性定义 script 元素包含或src引用的脚本语言。属性的值为 MIME 类型; 支持的 MIME 类型包括text/javascript, text/ecmascript, application/javascript, 和application/ecmascript。</li><li>text : 属性与textContent 属性类似，用于设置元素的文本内容。</li><li>async : 对于普通脚本，那么普通脚本会被并行请求，对于模块脚本，那么脚本及其所有依赖都会在延缓队列中执行，因此它们会被并行请求，并尽快解析和执行。</li><li>defer : 此属性被设定用来通知浏览器该脚本将在文档完成解析渲染后，触发 DOMContentLoaded 事件前执行。</li><li>crossorigin : 那些没有通过标准CORS (en-US)检查的正常script 元素传递最少的信息到 window.onerror, 可以使用本属性来使那些将静态资源放在另外一个域名的站点打印错误信息。<ul><li style="list-style: none"><input type="checkbox"></input> anonymous : 请求使用了 CORS 标头，且证书标志被设置为 ‘same-origin’。没有通过 cookies、客户端 SSL 证书或 HTTP 认证交换用户凭据，除非目的地是同一来源。</li><li style="list-style: none"><input type="checkbox"></input> use-credentials : 请求使用了 CORS 标头，且证书标志被设置为 ‘include’。总是包含用户凭据。</li></ul></li><li>integrity : 包含用户代理可用于验证已提取资源是否已无意外操作的内联元数据.</li><li>nomodule : 此布尔属性被设置来标明这个脚本在支持 ES2015 modules 的浏览器中不执行。</li><li>nonce : 脚本 <code>src Content Security Policy（en-US）</code>中白名单内联脚本的密码随机数（使用一次）。</li><li>referrerpolicy : 指示提取脚本或脚本提取的资源时要发送的引用者：<ul><li style="list-style: none"><input type="checkbox" checked></input> no-referrer: The Referer header will not be sent.</li><li style="list-style: none"><input type="checkbox" checked></input> no-referrer-when-downgrade (default): The Referer header will not be sent to origins without TLS (HTTPS).</li><li style="list-style: none"><input type="checkbox" checked></input> origin: The sent referrer will be limited to the origin of the referring page: its scheme, host, and port (en-US).</li><li style="list-style: none"><input type="checkbox" checked></input> origin-when-cross-origin: The referrer sent to other origins will be limited to the scheme, the host, and the port. Navigations on the same origin will still include the path.</li><li style="list-style: none"><input type="checkbox" checked></input> same-origin: A referrer will be sent for same origin, but cross-origin requests will contain no referrer information.</li><li style="list-style: none"><input type="checkbox" checked></input> strict-origin: Only send the origin of the document as the referrer when the protocol security level stays the same (e.g. HTTPS→HTTPS), but don’t send it to a less secure destination (e.g. HTTPS→HTTP).</li><li style="list-style: none"><input type="checkbox" checked></input> strict-origin-when-cross-origin: Send a full URL when performing a same-origin request, but only send the origin when the protocol security level stays the same (e.g.HTTPS→HTTPS), and send no header to a less secure destination (e.g. HTTPS→HTTP).</li><li style="list-style: none"><input type="checkbox"></input> unsafe-url: The referrer will include the origin and the path (but not the fragment, password, or username). This value is unsafe</li></ul></li></ul><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例1.HTML4 and (x)HTML  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/static/js/index.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例2.常规script标签，此处HTML5可省略type属性</span></span><br><span class="line"><span class="comment">由于 html 代码是同步按顺序执行的，意味着必须把所有的 script 加载解析执行完成后，再继续渲染页面。</span></span><br><span class="line"><span class="comment">在多文件时，页面可能出现长白屏时间的问题。</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"blog.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例3.使用 defer 属性的script标签（推迟执行脚本）</span></span><br><span class="line"><span class="comment">如果标签带有 defer 属性，浏览器会另外开辟一个进程来加载 js 资源，而不会阻塞 html 加载</span></span><br><span class="line"><span class="comment">注：带有 defer 属性的 script 资源加载完成后不会立即执行，而是等待 html 渲染完成后执行.</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://weiyigeek.top/test1.js"</span> <span class="attr">defer</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例4.使用 async 属性的script标签（异步执行脚本） </span></span><br><span class="line"><span class="comment">如果标签带有 async 属性，浏览器会另外开辟一个进程来加载 js 资源，资源加载完成后会暂停 html 渲染，并执行 script 脚本</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://weiyigeek.top/test1.js"</span> <span class="attr">async</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例5.外部资源 CORS 源设置，请求不包含用户凭据。 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">""</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span></span></span><br><span class="line"><span class="tag">  <span class="attr">src</span>=<span class="string">"https://example.com/example-framework.js"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>温馨提示:</strong></p><blockquote><p>1.defer 和 async 脚本只适用于外部脚本，都会立即并行加载 script 资源，不同的是，defer 将 script 脚本的运行放到了最后，而 async 则是加载完后立即暂停 html 渲染，等待 script 执行完成后再继续。</p></blockquote><blockquote><p>2.多个带有 defer 或 async 的 script 标签，由于每个 script 标签的加载都是单独另外开辟的进程，位置靠后的 script 资源可能先于完成，因此无法保证每个标签是按照代码位置顺序执行的，</p></blockquote><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230223211209.png" alt="WeiyiGeek.常规JS与defer 和 async 脚本执行顺序图" title="" class="">                <p>WeiyiGeek.常规JS与defer 和 async 脚本执行顺序图</p>            </figure><p><br /></p><h3 id="noscript-标签"><a href="#noscript-标签" class="headerlink" title="noscript 标签"></a>noscript 标签</h3><p>描述: 如果页面上的脚本类型不受支持或者当前在浏览器中关闭了脚本，则在 HTML <code>&lt;noscript&gt;</code> 元素中定义脚本未被执行时的替代内容。</p><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">noscript</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">noscript</span>&gt;</span>抱歉，你的浏览器不支持 JavaScript 或者被禁用!<span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.weiyigeek.top/"</span>&gt;</span>点击返回主页.<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>若没有被禁用则正常显示，此节!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p><hr><h2 id="0x02-Body-标签元素"><a href="#0x02-Body-标签元素" class="headerlink" title="0x02 Body 标签元素"></a>0x02 Body 标签元素</h2><h3 id="body-标签"><a href="#body-标签" class="headerlink" title="body 标签"></a>body 标签</h3><p>描述: HTML body 元素表示文档的内容, document.body 属性提供了可以轻松访问文档的 body 元素的脚本。</p><p><strong>属性:</strong></p><ul><li style="list-style: none"><input type="checkbox"></input> onafterprint : 用户完成文档打印之后调用的函数。</li><li style="list-style: none"><input type="checkbox"></input> onbeforeprint : 用户要求打印文档之前调用的函数。</li><li style="list-style: none"><input type="checkbox"></input> onbeforeunload : 文档即将被关闭之前调用的函数。</li><li style="list-style: none"><input type="checkbox"></input> onblur : 文档失去焦点时调用的函数。</li><li style="list-style: none"><input type="checkbox"></input> onerror : 文档加载失败时调用的函数。</li><li style="list-style: none"><input type="checkbox"></input> onfocus : 文档获得焦点时调用的函数。</li><li style="list-style: none"><input type="checkbox"></input> onhashchange : 文档当前地址的片段标识部分（以 (‘#’) 开始的部分）发生改变时调用的函数。</li><li style="list-style: none"><input type="checkbox"></input> onlanguagechange 实验性 : 用户选择的语言发生改变时调用的函数。</li><li style="list-style: none"><input type="checkbox"></input> onload : 文档完成加载时调用的函数。</li><li style="list-style: none"><input type="checkbox"></input> onmessage : 文档接收到消息时调用的函数。</li><li style="list-style: none"><input type="checkbox"></input> onoffline : 网络连接失败时调用的函数。</li><li style="list-style: none"><input type="checkbox"></input> ononline : 网络连接恢复时调用的函数。</li><li style="list-style: none"><input type="checkbox"></input> onpopstate : 用户回退历史记录时调用的函数。</li><li style="list-style: none"><input type="checkbox"></input> onredo : 用户重做操作时调用的函数。</li><li style="list-style: none"><input type="checkbox"></input> onresize : 文档尺寸发生改变时调用的函数。</li><li style="list-style: none"><input type="checkbox"></input> onstorage : 存储内容（localStorage / sessionStorage）发生改变时调用的函数。</li><li style="list-style: none"><input type="checkbox"></input> onundo : 用户撤销操作时调用的函数。</li><li><p>[ ] onunload : 文档关闭时调用的函数</p></li><li><p>[ ] background 已弃用 : 将 URI 所指向的图片作为背景。此方法不符合规范，请使用 CSS 的 background 属性替代。</p></li><li style="list-style: none"><input type="checkbox"></input> bgcolor 已弃用 : 文档的背景颜色。此方法不符合规范，请使用 CSS 的 background-color 属性替代。</li><li style="list-style: none"><input type="checkbox"></input> text 已弃用 : 文本颜色。此方法不符合规范，请使用 CSS 的 color 属性替代。</li><li style="list-style: none"><input type="checkbox"></input> alink 已弃用 : 超链接选中之后的文本颜色。此方法不符合规范，请使用 CSS 的 color 属性和 :active 伪类替代。</li><li style="list-style: none"><input type="checkbox"></input> vlink 已弃用 : 访问过的超链接的文本颜色。此方法不符合规范，请使用 CSS color 属性和 :visited 伪类替代。</li></ul><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例1.常规使用 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>This is a paragraph<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例2.背景（Backgrounds）将背景设置为图像，属性值为图像的URL。</span></span><br><span class="line"><span class="comment">如果图像尺寸小于浏览器窗口，那么图像将在整个浏览器窗口进行复制。 </span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">background</span>=<span class="string">"clouds.png"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">background</span>=<span class="string">"http://www.weiyigeek.top/img/clouds.gif"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例3.背景颜色（Bgcolor）-属性将背景设置为某种颜色。</span></span><br><span class="line"><span class="comment">属性值可以是十六进制数、RGB 值或颜色名</span></span><br><span class="line"><span class="comment">例如，页面背景色全为黑色。 </span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span>=<span class="string">"#000000"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span>=<span class="string">"rgb(0,0,0)"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span>=<span class="string">"black"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例4.文本（text）-也可以设置颜色： --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span>=<span class="string">"#ffffff"</span> <span class="attr">text</span>=<span class="string">"green"</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><strong>温馨提示:</strong> </p><ul><li><code>body</code> 标签中虽然支持背景颜色（bgcolor）、图片背景（background）和文本（text）属性，但在最新的 HTML 标准（HTML5、HTML4 和 XHTML）中不符合规范, 我们应该使用层叠样式表（CSS）来定义 HTML 元素的布局和显示属性。</li><li><code>body</code> 标签中可以包含许多其他标签，由他们相互嵌套使用，便组合成网页页面结构，我会在后续按照功能进行对应标签学习实践。</li></ul><p><br></p><h3 id="h1-to-h6-标签"><a href="#h1-to-h6-标签" class="headerlink" title="h1 to h6 标签"></a>h1 to h6 标签</h3><p>描述： <code>&lt;h1&gt; - &lt;h6&gt;</code>标签被用来定义 HTML 标题，其中 <code>&lt;h1&gt;</code> 定义重要等级最高的标题,<code>&lt;h6&gt;</code> 定义重要等级最低的标题。</p><p>温馨提示: 该标签建议只用在标题，如果其他文字需要加粗、加大建议使用CSS.</p><p><strong>示例:</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;This is heading 1&lt;/h1&gt;</span><br><span class="line">&lt;h2&gt;This is heading 2&lt;/h2&gt;</span><br><span class="line">&lt;h3&gt;This is heading 3&lt;/h3&gt;</span><br><span class="line">&lt;h4&gt;This is heading 4&lt;/h4&gt;</span><br><span class="line">&lt;h5&gt;This is heading 5&lt;/h5&gt;</span><br><span class="line">&lt;h6&gt;This is heading 6&lt;/h6&gt;</span><br><span class="line">请仅仅把标题标签用于标题文本, 不要仅仅为了产生粗体文本而使用它们, 请使用其它标签或 CSS 代替。</span><br></pre></td></tr></table></figure></p><p><strong>扩展:</strong><br>HTML 与 XHTML 之间的差异？</p><blockquote><p>在 HTML 4.01 中，h1 - h6 元素的 “align” 属性不被推荐使用(结盟，对齐排列)<br>在 XHTML 1.0 Strict DTD 中，h1 - h6 元素的 “align” 属性不被支持<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 注意：HTML5 不支持 align 属性。 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">align</span>=<span class="string">"justify"</span>&gt;</span>这是两端对齐<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">align</span>=<span class="string">"left"</span>&gt;</span>左端对齐<span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">align</span>=<span class="string">"right"</span>&gt;</span>右端对齐<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>居中对齐<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br></pre></td></tr></table></figure></p></blockquote><p><br></p><h3 id="p-标签"><a href="#p-标签" class="headerlink" title="p 标签"></a>p 标签</h3><p>描述: <code>&lt;p&gt;</code> 元素（或者说 HTML 段落元素）表示文本的一个段落。该元素通常表现为一整块与相邻文本分离的文本，或以垂直的空白隔离或以首行缩进, 另外p标签是块级元素。</p><p><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 示例1. --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是第一个段落。这是第一个段落。</span><br><span class="line">   这是第一个段落。这是第一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是第二个段落。这是第二个段落。</span><br><span class="line">  段落的行数依赖于浏览器窗口的大小。如果调节浏览器窗口的大小，将改变段落中的行数。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例2.html中的p标签里面的空格会被自动消除 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>     </span><br><span class="line">这个段落</span><br><span class="line">在源代码       中</span><br><span class="line">包含   许多行</span><br><span class="line">但是      浏览器</span><br><span class="line">忽略了  它们。</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>温馨提示: <code>p</code> 元素的 align 属性已被弃用，建议不要使用。</p><p><br></p><h3 id="br-标签"><a href="#br-标签" class="headerlink" title="br 标签"></a>br 标签</h3><p>描述: <code>&lt;br /&gt;</code> 元素在文本中生成一个换行（回车）符号, 由于对于 HTML 您无法通过在 HTML 代码中添加额外的空格或换行来改变输出的效果，所以此元素在写诗和地址时需要换行时很有用, </p><p><strong>示例：</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Author is WeiyiGeek <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">My Blog is https://blog.weiyigeek.top <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This is<span class="tag">&lt;<span class="name">br</span> /&gt;</span>a para<span class="tag">&lt;<span class="name">br</span> /&gt;</span>graph with line breaks<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span> 还是 <span class="tag">&lt;<span class="name">br</span> /&gt;</span>，您也许发现 <span class="tag">&lt;<span class="name">br</span>&gt;</span> 与 <span class="tag">&lt;<span class="name">br</span> /&gt;</span> 很相似</span><br></pre></td></tr></table></figure></p><p>温馨提示: 不要用 <code>&lt;br /&gt;</code> 来增加文本之间的行间隔, 应使用 CSS margin 属性或 <code>&lt;p&gt;</code> 元素。</p><p><br></p><h3 id="hr-标签"><a href="#hr-标签" class="headerlink" title="hr 标签"></a>hr 标签</h3><p>描述:  <code>&lt;hr&gt;</code> 元素建水平线，水平分隔线（horizontal rule）可以在视觉上将文档分隔成各个部分。<br>通常用于表示段落级元素之间的主题转换（例如，一个故事中的场景的改变，或一个章节的主题的改变）。</p><p><strong>示例：</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- style --&gt;</span></span><br><span class="line">hr &#123;</span><br><span class="line">  border: none;</span><br><span class="line">  border-top: 3px double #333;</span><br><span class="line">  color: #333;</span><br><span class="line">  overflow: visible;</span><br><span class="line">  text-align: center;</span><br><span class="line">  height: 5px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hr:after &#123;</span><br><span class="line">  background: #fff;</span><br><span class="line">  content: '§';</span><br><span class="line">  padding: 0 4px;</span><br><span class="line">  position: relative;</span><br><span class="line">  top: -13px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- body --&gt;</span></span><br><span class="line">Author is WeiyiGeek <span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">My Blog is https://blog.weiyigeek.top</span><br></pre></td></tr></table></figure></p><p><strong>综合实践：</strong><br>示例文件: <a href="https://github.com/WeiyiGeek/DevelopLearnig/blob/main/fore-end/HTML/example/study/01.index.html" target="_blank" rel="noopener">https://github.com/WeiyiGeek/DevelopLearnig/blob/main/fore-end/HTML/example/study/01.index.html</a><br>网页效果：<br><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230224141948.png" alt="WeiyiGeek.网页 Hello-World 图" title="" class="">                <p>WeiyiGeek.网页 Hello-World 图</p>            </figure></p><p>好的，本小节到此完毕！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;</summary>
    
    
    
    <category term="前端学习" scheme="https://blog.weiyigeek.top/categories/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="学习笔记" scheme="https://blog.weiyigeek.top/categories/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="HTML" scheme="https://blog.weiyigeek.top/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>1.HTML基础必备知识学习笔记</title>
    <link href="https://blog.weiyigeek.top/2023/2-21-715.html"/>
    <id>https://blog.weiyigeek.top/2023/2-21-715.html</id>
    <published>2023-02-21T00:30:30.000Z</published>
    <updated>2023-03-14T07:26:53.288Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h2 id="0X00-前言简述"><a href="#0X00-前言简述" class="headerlink" title="0X00 前言简述"></a>0X00 前言简述</h2><h3 id="快速回顾"><a href="#快速回顾" class="headerlink" title="快速回顾"></a>快速回顾</h3><p><strong>学习路径</strong><br>通过前面【全栈之前端前置知识】我们知道，前端开发一般学习路径都是 <code>HTML+CSS+Javascript</code>等</p><ul><li>HTML是网页内容的载体 - <code>结构</code></li><li>CSS 是样式的设置 - <code>表现</code></li><li>JS  是网页中实现特效和交互化的效果 - <code>行为</code></li></ul><p><br/></p><p><strong>什么是 HTML?</strong></p><blockquote><p>描述：HTML超文本标记语言 (Hyper Text Markup Language), 它不是一种编程语言，而是一种标记语言 (markup language)<br>标记语言是一套标记标签 (markup tag), 其使用标记标签来描述网页。</p></blockquote><p>在编写好的HTML文件，我们可以将其部署到web容器中(http 服务端)，此时我们客户端便可通过浏览器进行访问浏览了。</p><p><br/></p><p><strong>HTTP 请求连接流程</strong><br>HTTP协议遵循<code>请求(Request)</code>/<code>应答(Response)</code>模型，所有HTTP连接都被构造成一套请求和应答；</p><blockquote><p>答：HTTP是一种无状态的协议，无状态是指Web浏览器和Web服务器之间不需要建立持久的连接，这意味着当一个客户端向服务器端发出请求，然后Web服务器返回 响应(response) 连接就被关闭了，在服务器端不保留连接的有关信息。<br>温馨提示: 当前可以通过web容器或者中间件将HTML请求连接保持为长连接。</p></blockquote><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230221151419.png" alt="WeiyiGeek.http-请求与响应图" title="" class="">                <p>WeiyiGeek.http-请求与响应图</p>            </figure><p><br></p><p><strong>HTTP 请求响应报文</strong></p><ul><li><p>请求报文(头部字段名)</p><blockquote><p>Accept：请求报头域用于指定客户端接受哪些类型的信息；<br>Accept：image/gif，表明客户端希望接受GIF图象格式的资源；<br>Accept：text/html，表明客户端希望接受html文本;<br>Accept-Encoding：请求报头域类似于Accept，但是它是用于指定可接受的内容编码, 例如 Accept-Encoding:gzip.deflate ，示可以接受gzip算法编码过的数据;<br>Connection：当值为Close时，告诉服务器发送响应的文件后关闭连接，为Keep-Alive时，告诉服务器在完成本次请求的响应后，保持连接;</p></blockquote></li><li><p>响应报文(头部字段名)</p><blockquote><p>Location：响应报头域用于重定向接受者到一个新的位置,Location响应报头域常用在更换域名的时候<br>Content-Type：实体报头域用语指明发送给接收者的实体正文的媒体类型,eg：Content-Type:text/html;</p></blockquote></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 304 Not Modified   <span class="comment"># HTTP协议 响应码</span></span><br><span class="line">Server: nginx               <span class="comment"># 服务端标识</span></span><br><span class="line">Date: Mon, 27 Aug 2018 14:02:38 GMT <span class="comment"># 日期时间、时区</span></span><br><span class="line">Connection: keep-alive              <span class="comment"># 连接类型</span></span><br><span class="line">Last-Modified: Thu, 09 Aug 2018 13:51:45 GMT  <span class="comment"># 上次修改时间</span></span><br><span class="line">ETag: <span class="string">"5b6c46f1-24e"</span>                <span class="comment"># 标记</span></span><br><span class="line">X-Kong-Upstream-Latency: 1</span><br><span class="line">X-Kong-Proxy-Latency: 2</span><br><span class="line">Via: kong/0.11.2                    <span class="comment"># 自定义响应头</span></span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230221161516.png" alt="WeiyiGeek.HTTP请求与响应头图" title="" class="">                <p>WeiyiGeek.HTTP请求与响应头图</p>            </figure><p><br/></p><p><strong>HTTP 方法</strong><br>描述: 两种最常用的 HTTP 方法是 GET 和 POST, 他们是在客户机和服务器之间进行请求-响应时最常用的方法。</p><ul><li style="list-style: none"><input type="checkbox"></input> GET - 从指定的资源请求数据。</li><li style="list-style: none"><input type="checkbox"></input> POST - 向指定的资源提交要被处理的数据。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># GET 方法 : 请注意，查询字符串（名称/值对）是在 GET 请求的 URL 中发送的：</span></span><br><span class="line">/<span class="built_in">test</span>/demo_form.php?name1=value1&amp;name2=value2</span><br><span class="line"></span><br><span class="line"><span class="comment"># POST 方法: 请注意，查询字符串（名称/值对）是在 POST 请求的 HTTP 消息主体中发送的：</span></span><br><span class="line">POST /<span class="built_in">test</span>/demo_form.php HTTP/1.1</span><br><span class="line">Host: runoob.com</span><br><span class="line">name1=value1&amp;name2=value2</span><br></pre></td></tr></table></figure><p>扩展说明: 针对Form 中的 get 和 post 方法，在数据传输过程中分别对应了 HTTP 协议中的 GET 和 POST 方法, 二者主要区别如下：</p><ul><li style="list-style: none"><input type="checkbox"></input> 1、Get 是用来从服务器上获得数据，而 Post 是用来向服务器上传递数据。</li><li style="list-style: none"><input type="checkbox"></input> 2、Get 将表单中数据的按照 variable=value 的形式，添加到 action 所指向的 URL 后面，并且两者使用“?”连接，而各个变量之间使用“&amp;”连接；Post 是将表单中的数据放在 form 的数据体中，按照变量和值相对应的方式，传递到 action 所指向 URL。</li><li style="list-style: none"><input type="checkbox"></input> 3、Get 是不安全的，因为在传输过程，数据被放在请求的 URL 中，而如今现有的很多服务器、代理服务器或者用户代理都会将请求URL记录到日志文件中，然后放在某个地方，这样就可能会有一些隐私的信息被第三方看到。另外，用户也可以在浏览器上直接看到提交的数据，一些系统内部消息将会一同显示在用户面前。Post 的所有操作对用户来说都是不可见的。</li><li style="list-style: none"><input type="checkbox"></input> 4、Get 传输的数据量小，这主要是因为受 URL 长度限制；而 Post 可以传输大量的数据，所以在上传文件只能使用 Post（当然还有一个原因，将在后面的提到）。</li><li style="list-style: none"><input type="checkbox"></input> 5、Get 限制 Form 表单的数据集的值必须为 ASCII 字符；而 Post 支持整个 ISO10646 字符集。</li><li style="list-style: none"><input type="checkbox"></input> 6、Get 是 Form 的默认方法。</li><li style="list-style: none"><input type="checkbox"></input> 使用 Post 传输的数据，可以通过设置编码的方式正确转化中文；而 Get 传输的数据却没有变化。在以后的程序中，我们一定要注意这一点。</li></ul><p><img src="https://img.weiyigeek.top/2023/1/20230222162352.png" alt="WeiyiGeek. GET方法与POST方法区别图"><br><br/></p><h3 id="学习参考"><a href="#学习参考" class="headerlink" title="学习参考"></a>学习参考</h3><ul><li>HTML学习教程：<a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Learn/HTML</a></li><li>HTML元素标签快速查询:<ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/title" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/title</a> </li><li><a href="http://www.runoob.com/tags/html-reference.html" target="_blank" rel="noopener">http://www.runoob.com/tags/html-reference.html</a></li><li><a href="http://www.w3school.com.cn/html/html_quick.asp" target="_blank" rel="noopener">http://www.w3school.com.cn/html/html_quick.asp</a>   </li></ul></li><li>HTML 元素和有效的 DTD查询 : <a href="http://www.w3school.com.cn/tags/html_ref_dtd.asp" target="_blank" rel="noopener">http://www.w3school.com.cn/tags/html_ref_dtd.asp</a></li></ul><p>温馨提示：因为当前HTML5被广泛使用，所有后续文中HTML名词皆代表HTML5。</p><hr><h2 id="0x01-初识HTML"><a href="#0x01-初识HTML" class="headerlink" title="0x01 初识HTML"></a>0x01 初识HTML</h2><h3 id="1-HTML结构"><a href="#1-HTML结构" class="headerlink" title="1.HTML结构"></a>1.HTML结构</h3><p>描述: 网页文档由嵌套的 HTML 元素构成,大多数 HTML 元素可以嵌套（可以包含其他 HTML 元素）。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span>            <span class="comment">&lt;!--DOCTYPE 声明了文档类型 (HTML5)--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span>   <span class="comment">&lt;!--HTML文档--&gt;</span>     </span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span>   <span class="comment">&lt;!--头部--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span>  <span class="comment">&lt;!--编码及网页类型--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"content-language"</span> <span class="attr">content</span>=<span class="string">"zh-CN"</span>/&gt;</span> <span class="comment">&lt;!--网页语言--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"author"</span> <span class="attr">content</span>=<span class="string">"WeiyiGeek"</span> /&gt;</span>   <span class="comment">&lt;!--自定义元数据--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>我是网页标题<span class="tag">&lt;/<span class="name">title</span>&gt;</span>   <span class="comment">&lt;!--标题--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>    <span class="comment">&lt;!--主体--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我的第一主题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>  <span class="comment">&lt;!--元素标签--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>我的第一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>我的第二个段落<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  文本是可见的页面内容，欢迎访问 weiyigeek.top </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br/></p><h3 id="2-HTML标签"><a href="#2-HTML标签" class="headerlink" title="2.HTML标签"></a>2.HTML标签</h3><p>描述: HTML 标记标签通常被称为<code>HTML 标签(tag)</code>，完整标签被称为<code>HTML 元素 (element)</code>，例如，我们从上面的HTML结构中可以看到。</p><ul><li>HTML 标签是由尖括号包围的关键词，比如 <code>&lt;html&gt;</code></li><li>HTML 标签通常是成对出现的，比如<code>&lt;b&gt; 和 &lt;/b&gt;</code></li><li>HTML 标签对大小写不敏感，比如<code>&lt;P&gt; 等同于 &lt;p&gt;</code>, 但是建议使用小写标签。</li><li>HTML 标签内部是可以嵌套其他元素的，比如 <code>&lt;p&gt;My cat is &lt;strong&gt;very&lt;/strong&gt; grumpy.&lt;/p&gt;</code>.</li></ul><p>注释：开始标签常<code>（opening tag）</code>,内容（Content）即元素的内容，结束标签<code>（closing tag）</code>，例如 <code>&lt;h1&gt;我是标题&lt;/h1&gt;</code>，整个元素即由<code>开始标签、内容、结束标签</code>三部分组成的整体。</p><p>温馨提示：W3School 使用的是小写标签，因为万维网联盟（W3C）在 HTML 中推荐使用小写，而在未来 (X)HTML 版本中强制使用小写。</p><p>温馨提示: 但是并非所有的标签都是成对出现，例如 <code>换行标签 &lt;br /&gt;</code> 和 <code>分割线标签 &lt;hr /&gt;</code> 特殊标签，它是一种没有内容(空内容-empty content)、空的 HTML 元素（被称为空元素）, 空元素在开始标签中进行关闭（<code>以开始标签的结束而结束</code>）</p><p>温馨提示: 在 XHTML、XML 以及可能在未来版本的 HTML 中，所有元素都必须被关闭。在开始标签中添加斜杠，比如 <code>&lt;br /&gt;</code>，是关闭空元素的正确方法，HTML、XHTML 和 XML 都接受这种方式，即使 <code>&lt;br&gt;</code> 在所有浏览器中都是有效的，但使用 <code>&lt;br /&gt;</code> 其实是更长远的保障。</p><p><br></p><div class="result" style="border: 1px solid black;padding: 0px 10px 6px 10px;line-height: 1.2;"><br>  <strong>实时结果输出：</strong><br>  <div class="output" style="min-height: 50px;">请点击执行,即可显示结果!</div><br>  <strong>可编辑代码:</strong><br>  <textarea class="htmlcode" class="input" style="min-height: 100px;width: 95%">&lt;h1&gt; WeiyiGeek Blog =&gt;  &lt;br /&gt;  &lt;p&gt; 花开堪折直须折，莫待无花空折枝。 &lt;/p&gt; &lt;hr /&gt; &lt;/h1&gt;<br>  </textarea><br>  <input class="reset" type="button" value="执行显示" onclick="output0.innerHTML= textarea0.value;"><br></div><p><br/></p><h3 id="3-HTML注释"><a href="#3-HTML注释" class="headerlink" title="3.HTML注释"></a>3.HTML注释</h3><p>描述: 同许多编程语言一样，HTML标记语言也支持单行与多行注释，注释标签用于在源代码中插入注释，注释不会显示在浏览器中。<br>使用注释可以对您的代码进行解释，这样做有助于您在以后的时间对代码的编辑，当您编写了大量代码时尤其有用。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">示例1.</span><br><span class="line"><span class="comment">&lt;!-- 这是一个单行注释--&gt;</span></span><br><span class="line"></span><br><span class="line">示例2.</span><br><span class="line"><span class="comment">&lt;!-- 这是一个多行注释</span></span><br><span class="line"><span class="comment">&lt;script type="text/javascript"&gt;</span></span><br><span class="line"><span class="comment">  function displayMsg() &#123;</span></span><br><span class="line"><span class="comment">    alert("Hello World!")</span></span><br><span class="line"><span class="comment">  &#125;</span></span><br><span class="line"><span class="comment">displayMsg();</span></span><br><span class="line"><span class="comment">&lt;/script&gt;</span></span><br><span class="line"><span class="comment">//--&gt;</span></span><br><span class="line"></span><br><span class="line">示例3.条件注释定义只有 Internet Explorer 执行的 HTML 标签。</span><br><span class="line"><span class="comment">&lt;!--[if IE 8]&gt;</span></span><br><span class="line"><span class="comment">  .... some HTML here ....</span></span><br><span class="line"><span class="comment">&lt;![endif]--&gt;</span></span><br></pre></td></tr></table></figure><p>注释：示例2的注释行结尾处的两条斜杠 (//) 是 JavaScript 注释符号。这可以避免 JavaScript 执行 –&gt; 标签。</p><p><br/></p><h3 id="4-HTML文档类型"><a href="#4-HTML文档类型" class="headerlink" title="4.HTML文档类型"></a>4.HTML文档类型</h3><p>描述：HTML 文档描述网页，也被称为网页, 文档包含 HTML 标签和纯文本。</p><p>Web 浏览器的作用是读取 HTML 文档，并以网页的形式显示出它们，浏览器不会显示 HTML 标签，而是使用标签来解释页面的内容。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230221173558.png" alt="WeiyiGeek.HTML文档图" title="" class="">                <p>WeiyiGeek.HTML文档图</p>            </figure><p><br/></p><p><strong>定义文档类型</strong><br>描述: 所有浏览器都支持 <code>&lt;!DOCTYPE&gt;</code> 声明，帮助浏览器正确地显示网页。Web 世界中存在许多不同的文档，只有了解文档的类型，浏览器才能正确地显示文档。<br>HTML 也有多个不同的版本，只有完全明白页面中使用的确切 HTML 版本，浏览器才能完全正确地显示出 HTML 页面，这就是 <code>&lt;!DOCTYPE&gt;</code> 的用处, <code>&lt;!DOCTYPE&gt;</code> 声明对大小写不敏感，并且其声明没有结束标签.</p><p>温馨提示: <code>&lt;!DOCTYPE&gt; 不是 HTML 标签</code>，它为浏览器<code>提供一项信息（声明）</code>，即 HTML 是用什么版本编写的。</p><p><em>HTML 版本</em></p><blockquote><p>从 Web 诞生早期至今，已经发展出多个 HTML 版本 :<br>HTML(1991)<br>HTML+(1993)<br>HTML 2.0(1995)<br>HTML 3.2(1997)<br>HTML 4.01(1999)<br>XHTML 1.0(2000)<br>HTML5 (2012)<br>XHTML5 (2013)</p></blockquote><p><br/></p><p><strong>常用的 DOCTYPE 声明</strong></p><ul><li><code>HTML 5</code> : 声明当前文档类型，以及HTML版本，当前最新。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p><code>HTML 4.01 Strict</code> (adj. 严格的；绝对的)：该 DTD 包含所有 HTML 元素和属性，但不包括展示性的和弃用的元素（比如 font），不允许框架集（Framesets）。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd"&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>HTML 4.01 Transitional</code> (adj. 变迁的；过渡期的)：同上</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>HTML 4.01 Frameset</code>（n. 框架集；框架型）：该 DTD 等同于 HTML 4.01 Transitional，但允许框架集内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN" "http://www.w3.org/TR/html4/frameset.dtd"&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p><br/></p><p>下述，DOCTYPE 声明主要针对于XML语言，此处只是简单了解。</p><ul><li><code>XHTML 1.0 Strict</code>：该 DTD 包含所有 HTML 元素和属性，但不包括展示性的和弃用的元素（比如 font），不允许框架集（Framesets），必须以格式正确的 XML 来编写标记。</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>XHTML 1.0 Transitional</code>：该 DTD 包含所有 HTML 元素和属性，包括展示性的和弃用的元素（比如 font），不允许框架集（Framesets）。必须以格式正确的 XML 来编写标记。</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>XHTML 1.0 Frameset</code>：该 DTD 等同于 XHTML 1.0 Transitional，但允许框架集内容。</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd"&gt;</span></span><br></pre></td></tr></table></figure><ul><li>XHTML 1.1该 DTD 等同于 XHTML 1.0 Strict，但允许添加模型（例如提供对东亚语系的 ruby 支持）。</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"&gt;</span></span><br></pre></td></tr></table></figure><p><br/></p><h3 id="5-HTML编辑器"><a href="#5-HTML编辑器" class="headerlink" title="5.HTML编辑器"></a>5.HTML编辑器</h3><p>描述: 在前面【全栈之前端前置知识】我们介绍前端开发必备的几种IDE编辑器，此处我们来看看，在没有安装上述编辑器（VScode）可以使用其他那些编辑器进行修改和编写。</p><p>例如：如下html代码编辑器</p><ul><li>Atom、TextEdit、EditPuls</li><li>Notepad++：<a href="https://notepad-plus-plus.org/" target="_blank" rel="noopener">https://notepad-plus-plus.org/</a></li><li>Sublime Text：<a href="http://www.sublimetext.com/" target="_blank" rel="noopener">http://www.sublimetext.com/</a></li><li>HBuilder：<a href="http://www.dcloud.io/" target="_blank" rel="noopener">http://www.dcloud.io/</a></li><li>Adobe Dreamweaver(已过时)</li></ul><p><br/></p><p>通常每一种操作系统都带有简单的文本编辑器：</p><ul><li>Windows 用户可以使用记事本；</li><li>Linux 用户可以选择几种不同的文本编辑器，如 vi、vim 或者 emacs ；</li><li>Mac 用户可以使用 OS X 预装的 TextEdit。</li></ul><p>温馨提示: 在初学时，推荐使用文本编辑器来学习 HTML，比如 Notepad (PC) 或 TextEdit (Mac)，我们相信，使用一款简单的文本编辑器是学习 HTML 的好方法，便于手敲记忆。</p><hr><h2 id="0x02-HTML编码规范"><a href="#0x02-HTML编码规范" class="headerlink" title="0x02 HTML编码规范"></a>0x02 HTML编码规范</h2><h3 id="1-编码格式规范"><a href="#1-编码格式规范" class="headerlink" title="1.编码格式规范"></a>1.编码格式规范</h3><blockquote><p>1.用两个空格来代替制表符（tab），嵌套元素应当缩进一次（即两个空格）;<br>2.属性的定义确保全部<code>使用双引号</code>，绝不要使用单引号;<br>3.不要省略可选的结束标签（closing tag），除了单标签还是需要注意在其尾部加上斜线;<br>4.尽量遵循 HTML 标准和语义，但是不要以牺牲实用性为代价。任何时候都要尽量使用最少的标签并保持最小的复杂度。<br>5.HTML 属性应当按照以下给出的顺序依次排列，确保代码的易读性。</p></blockquote><p>例如，标签元素中属性位置 class 用于标识高度可复用组件，因此应该排在首位，而id 用于标识具体组件，应当谨慎使用（例如，页面内的书签）因此排在第二位。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">class</span><br><span class="line">id, name</span><br><span class="line">data-*</span><br><span class="line">src, <span class="keyword">for</span>, <span class="built_in">type</span>, href</span><br><span class="line">title, alt</span><br><span class="line">aria-*, role</span><br></pre></td></tr></table></figure></p><p><strong>基础实例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 为每个 HTML 页面的第一行添加标准模式（standard mode）的声明，这样能够确保在每个浏览器中拥有一致的展现。 --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--强烈建议为 html 根元素指定 lang 属性，从而为文档设置正确的语言,有助于语音合成工具确定其所应该采用的发音，有助于翻译工具确定其翻译时所应遵守的规则 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--明确声明字符编码，能够确保浏览器快速并容易的判断页面内容的渲染方式。可以避免在 HTML 中使用字符实体标记（character entity），从而全部与文档编码一致（一般采用 UTF-8 编码）--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- IE 支持通过特定的 &lt;meta&gt; 标签来确定绘制当前页面所应该采用的 IE 版本。除非有强烈的特殊需求，否则最好是设置为 edge mode，从而通知 IE 采用其所支持的最新的模式。 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span> Bootstrap 插件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- H5在引入 CSS 和 JavaScript 文件时一般不需要指定 type 属性--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdn.staticfile.org/twitter-bootstrap/3.3.7/css/bootstrap.min.css"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- External CSS --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"code-guide.css"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- In-document CSS --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"> <span class="comment">/* ... */</span> </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- JavaScript --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"code-guide.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/company-logo.png"</span> <span class="attr">alt</span>=<span class="string">"Company"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"hello-world"</span>&gt;</span>Hello, world!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--布尔（boolean）型属性--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">disabled</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">checked</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">selected</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><br/></p><h2 id="0x03-HTML元素属性"><a href="#0x03-HTML元素属性" class="headerlink" title="0x03 HTML元素属性"></a>0x03 HTML元素属性</h2><p>描述：使用属性为 HTML 元素提供附加信息，分为<code>标准（全局）属性</code>与<code>标签属性</code>。</p><h3 id="全局属性"><a href="#全局属性" class="headerlink" title="全局属性"></a>全局属性</h3><p>常见的标准属性有<code>id, class, title, style, dir, lang, xml:lang</code>，值得注意属性和属性值尽量小写，除此之外详细的HTML列表如下：</p><ul><li>id : 规定元素的唯一id</li><li>class : 规定元素的一个或多个类名( 引用样式表中的类]</li><li>style : 规定元素的<code>行内 CSS 样式</code></li><li><p>title : 规定有关元素的额外信息</p></li><li><p>accesskey ：规定激活元素的快捷键</p></li><li>contenteditable ： 规定元素内容是否可编辑。</li><li>contextmenu : 规定元素的上下文菜单，上下文菜单在用户点击元素时显示（已过时，将被丢弃）。</li><li>dir : 规定元素中内容的文本方向</li><li>data-* : 用于存储页面或应用程序的私有定制数据</li></ul><ul><li>lang : 规定元素内容的语言</li><li>tabindex ：规定元素的 tab 键次序</li><li>translate : 规定是否应该翻译元素内容</li><li><p>spellcheck ：规定是否对元素进行拼写和语法检查</p></li><li><p>hidden : 规定元素仍未或不再相关。</p></li><li>draggable : 规定元素是否可拖动</li><li>dropzone : 规定在拖动被拖动数据时是否进行复制、移动或链接 （暂不支持）</li></ul><p>参考地址: </p><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Global_attributes" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/HTML/Global_attributes</a></li><li><a href="https://www.runoob.com/tags/ref-standardattributes.html" target="_blank" rel="noopener">https://www.runoob.com/tags/ref-standardattributes.html</a></li></ul><p><br/></p><h4 id="id-属性"><a href="#id-属性" class="headerlink" title="id 属性"></a>id 属性</h4><p>描述: id 属性规定 HTML 元素的唯一的 id（HTML 文档中必须是唯一的），其属性可用作链接锚（link anchor），通过 JavaScript（HTML DOM）或通过 CSS 为带有指定 id 的元素改变或添加样式。</p><blockquote><p>即id 属性只能为元素单独设置 <code>id=&quot; &quot;</code>（只能填写一个，多个无效）</p></blockquote><p><strong>语法:</strong> <code>&lt;element id=&quot;idname&quot;&gt;</code></p><p><strong>属性:</strong> idname 规定元素的唯一id。</p><p><strong>规则：</strong></p><blockquote><p>1）必须以字母 A-Z 或 a-z 开头<br>2）其后的字符：字母(A-Za-z)、数字(0-9)、连字符(“-“)、下划线(“_”)、冒号(“:”) 以及点号(“.”)<br>3）值对大小写敏感</p></blockquote><p>HTML 4.01 与 HTML5之间的差异说明</p><ul><li>[X] 在 HTML5 中, id 属性可用于任何的 HTML 元素 (它会验证任何HTML元素，但不一定是有用)。</li><li style="list-style: none"><input type="checkbox"></input> 在 HTML 4.01 中, id 属性不能用于:<code>&lt;base&gt;, &lt;head&gt;, &lt;html&gt;, &lt;meta&gt;, &lt;param&gt;, &lt;script&gt;, &lt;style&gt;, 和&lt;title&gt;</code>。</li></ul><p>注意: HTML 4.01 对于 id 的值有严格的限制 (例如：在 HTML 4.01 id 值不能以数字开头)。</p><p><strong>示例：</strong> 利用Javascript的Dom来改变插入网页的文字：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-id">#myHeaderh1</span> &#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">color</span><span class="selector-pseudo">:white</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">background-color</span><span class="selector-pseudo">:red</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">font-size</span><span class="selector-pseudo">:20px</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例1.下面利用了点击事件和调用了一个js函数 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">"myHeader"</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"displayResult()"</span>&gt;</span>编辑文本<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 示例2.当然css中也能引用id属性的值来达到修改样式的功能 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>下面利用引用id属性名来达到修改文字的样式效果！！！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">"myHeaderh1"</span>&gt;</span>Hello World!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">  <span class="comment">// js来获取元素的id从而确定要修改标签 -</span></span></span><br><span class="line"><span class="actionscript">  <span class="function"><span class="keyword">function</span> <span class="title">displayResult</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">"myHeader"</span>).innerHTML=<span class="string">"Test Id call"</span>;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230222152246.png" alt="WeiyiGeek.使用id属性效果图" title="" class="">                <p>WeiyiGeek.使用id属性效果图</p>            </figure><p><br/></p><h4 id="class-属性"><a href="#class-属性" class="headerlink" title="class 属性"></a>class 属性</h4><p>描述: class 属性定义了元素的类名，通常用于指向样式表的类,来修改标签元素的样式。<br>但是，它也可以用于 JavaScript 中（通过 HTML DOM）, 来修改 HTML 元素的类名。</p><blockquote><p>即: class 属性可以为多个元素使用相关或者不同的 <code>class=&quot; &quot;</code> （引号里面可以填入多个class属性）</p></blockquote><p><strong>语法:</strong> <code>&lt;element class=&quot;classname&quot;&gt;</code></p><p><strong>属性:</strong> classname 规定元素的类的名称。</p><blockquote><p>如需为一个元素规定多个类，用空格分隔类名，例如 <code>&lt;span class=&quot;left important&quot;&gt;</code>. HTML 元素允许使用多个类。</p></blockquote><p><strong>规则：</strong></p><ul><li style="list-style: none"><input type="checkbox" checked></input> 1）必须以字母 A-Z 或 a-z 开头</li><li style="list-style: none"><input type="checkbox" checked></input> 2）可以是以下字符： (A-Za-z), 数字 (0-9), 横杆 (“-“), 和 下划线 (“_”)</li><li style="list-style: none"><input type="checkbox" checked></input> 3）在 HTML 中类名是<code>区分大小写</code>的，此处值得注意。</li></ul><p><strong>示例:</strong> 在CSS中使用class 类名的引用改变样式（此处只是简单了解后续会介绍CSS相关教程）。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css"><span class="selector-tag">h1</span><span class="selector-class">.intro</span> &#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">color</span><span class="selector-pseudo">:blue</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">p</span><span class="selector-class">.important</span> &#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">color</span><span class="selector-pseudo">:green</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">pre</span><span class="selector-class">.test</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">text-align</span><span class="selector-pseudo">:left</span>;</span></span><br><span class="line"><span class="css"><span class="selector-tag">color</span><span class="selector-pseudo">:white</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">pre</span><span class="selector-class">.c</span>&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">background-color</span><span class="selector-pseudo">:black</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"intro"</span>&gt;</span>标题1这里类的名称是intro<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>下面是单个类属性来改变样式：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"important"</span>&gt;</span>注意：P标签的important类名称，这是一个很重要的段落:)<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>下面是多个类属性来改变样式：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span> <span class="attr">class</span>=<span class="string">"test c"</span>&gt;</span></span><br><span class="line">#include \<span class="tag">&lt;<span class="name">\stdio.h\</span>&gt;</span>\</span><br><span class="line"></span><br><span class="line">int main()&#123;</span><br><span class="line">  int a,b;</span><br><span class="line">  char test="I Love Html!!!";</span><br><span class="line">  a=1;</span><br><span class="line">  b=1;</span><br><span class="line">  a=a+b;</span><br><span class="line">  printf("这是一个字符串：%s , a+b=%d\n",test,a);</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230222151504.png" alt="WeiyiGeek.Class属性示例执行结果图" title="" class="">                <p>WeiyiGeek.Class属性示例执行结果图</p>            </figure><p><br/></p><p>扩展说明: HTML 4.01 与 HTML5之间的差异? </p><ul><li style="list-style: none"><input type="checkbox" checked></input> 在 HTML5 中, class 属性可用于任何的 HTML 元素 (它会 验证任何HTML元素。但不一定是有用)。</li><li style="list-style: none"><input type="checkbox"></input> 在 HTML 4.01 中, class 属性不能用于: <code>&lt;base&gt;, &lt;head&gt;, &lt;html&gt;, &lt;meta&gt;, &lt;param&gt;, &lt;script&gt;, &lt;style&gt;, 和 &lt;title&gt;</code>。</li></ul><p><br/></p><h4 id="title-属性"><a href="#title-属性" class="headerlink" title="title 属性"></a>title 属性</h4><p>描述: title 属性规定关于元素的额外信息，这些信息通常会在鼠标移到元素上时显示一段工具提示文本（tooltip text）。</p><p><strong>语法</strong>：<code>&lt;element title=&quot;text&quot;&gt;</code><br><strong>属性值</strong>: <code>规定元素的工具提示文本(tooltip text)</code><br><strong>示例</strong>:</p><div class="result" style="border: 1px solid black;padding: 0px 10px 6px 10px;line-height: 1.2;"><br>  <strong>实时结果输出：</strong><br>  <div class="output" style="min-height: 50px;">请点击执行,即可显示结果!</div><br>  <strong>可编辑代码:</strong><br>  <textarea class="htmlcode" class="input" style="min-height: 100px;width: 95%"><br>  <p><abbr title="世界卫生组织">WHO</abbr> 成立于 1948 年</p><br /><br>  <p title="title属性设置效果">查询title属性效果，请把鼠标移动到此处</p><br>  </textarea><br>  <input class="reset" type="button" value="执行显示" onclick="output1.innerHTML= textarea1.value;"><br></div><p><br/></p><h4 id="hidden-属性"><a href="#hidden-属性" class="headerlink" title="hidden 属性"></a>hidden 属性</h4><p>描述: hidden 属性规定对元素进行隐藏，隐藏的元素不会被显示，可以对 hidden 属性进行设置，使用户在满足某些条件时才能看到某个元素（比如选中复选框，等等）, 然后可使用 JavaScript 来删除 hidden 属性，使该元素变得可见。</p><p><strong>语法:</strong> <code>&lt;element hidden&gt;</code><br><strong>示例:</strong> 隐藏标签元素显示。<br><strong>示例:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这不是一段隐藏的段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">hidden</span>&gt;</span>这是一段隐藏的p标签段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">hidden</span>=<span class="string">"hidden"</span>&gt;</span>这是一段隐藏的sapn标签段落<span class="tag">&lt;/<span class="name">span</span>&gt;</span>   <span class="comment">&lt;!--建议使用后面这一种--&gt;</span></span><br></pre></td></tr></table></figure></p><p>温馨提示: </p><ul><li style="list-style: none"><input type="checkbox" checked></input> HTML 4.01 与 HTML5之间的差异：hidden 属性是 HTML5 中的新属性, 当前几乎主流的浏览器都支持它。</li><li style="list-style: none"><input type="checkbox"></input> HTML 与 XHTML 之间的差异：在 XHTML 中, 属性禁止简写，hidden 属性必须定义为<code>&lt;element hidden=&quot;hidden&quot;&gt;</code>. </li></ul><p><br/></p><h4 id="accesskey-属性"><a href="#accesskey-属性" class="headerlink" title="accesskey 属性"></a>accesskey 属性</h4><p><strong>描述</strong>：规定激活（使元素获得焦点）元素的快捷键。<br><strong>注释</strong>：以下元素支持 accesskey 属性：<code>&lt;a&gt;, &lt;area&gt;, &lt;button&gt;, &lt;input&gt;, &lt;label&gt;, &lt;legend&gt; （fieldset连用）以及 &lt;textarea&gt;</code>。<br><strong>语法</strong>：<code>&lt;element accesskey=&quot;character|快捷键&quot;&gt;</code>。<br><strong>示例</strong>: 使用指定快捷键访问绑定的超链接<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 例如. 使用 Shift + Alt + i 可以快捷访问个人主页  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.weiyigeek.top"</span> <span class="attr">accesskey</span>=<span class="string">"i"</span>&gt;</span>WeiyiGeek 个人主页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://blog.weiyigeek.top"</span> <span class="attr">accesskey</span>=<span class="string">"b"</span>&gt;</span>WeiyiGeek 个人博客<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><br>温馨提示:  请使用<code>Alt + accessey 或者 Shift + Alt + accessKey</code>来访问带有指定快捷键的元素。</p><p><br/></p><h4 id="tabindex-属性"><a href="#tabindex-属性" class="headerlink" title="tabindex 属性"></a>tabindex 属性</h4><p><strong>描述</strong>：规定元素的 tab 键控制次序（当 tab 键用于导航时）。<br><strong>注释</strong>：以下元素支持 tabindex 属性：<code>&lt;a&gt;, &lt;area&gt;, &lt;button&gt;, &lt;input&gt;, &lt;object&gt;, &lt;select&gt; 以及 &lt;textarea&gt;</code>。<br><strong>语法</strong>：<code>&lt;element tabindex=&quot;number|按次序&quot;&gt;</code><br><strong>示例</strong>: 使用tab按键切换访问链接。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.weiygeek.top/"</span> <span class="attr">tabindex</span>=<span class="string">"2"</span>&gt;</span>WeiyiGeek 主页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.google.com/"</span> <span class="attr">tabindex</span>=<span class="string">"1"</span>&gt;</span>Google<span class="tag">&lt;/<span class="name">a</span>&gt;</span>  <span class="comment">&lt;!--Tab这个优先级最高--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.microsoft.com/"</span> <span class="attr">tabindex</span>=<span class="string">"3"</span>&gt;</span>Microsoft<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><br>温馨提示: 请尝试使用键盘上的“Tab”键在链接之间进行导航</p><p><br/></p><h4 id="translate-属性"><a href="#translate-属性" class="headerlink" title="translate 属性"></a>translate 属性</h4><p><strong>描述：</strong> 规定是否应该翻译元素内容，在国外的一些网站常常不能翻译。<br><strong>语法：</strong><code>&lt;element translate=&quot;yes|no&quot;&gt;</code><br><strong>参数：</strong> 当值为yes是规定该元素内容可被翻译，当值为no时则不翻译。<br><strong>示例：</strong> 规定不应翻译某些元素。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">translate</span>=<span class="string">"no"</span>&gt;</span>请勿翻译本段。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>本段可被译为任意语言。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><br/></p><h4 id="spellcheck-属性-试验"><a href="#spellcheck-属性-试验" class="headerlink" title="spellcheck 属性 (试验)"></a>spellcheck 属性 (试验)</h4><p><strong>描述：</strong> 规定是否对元素进行拼写和语法检查, 我们通常可以对以下内容进行拼写检查。</p><blockquote><p>1.input 元素中的文本值（非密码）<br>2.<code>&lt;textarea&gt;</code>元素中的文本<br>3.可编辑元素中的文本</p></blockquote><p><strong>语法：</strong> <code>&lt;element spellcheck=&quot;true|false&quot;&gt;</code><br><strong>参数：</strong> 当值为true是规定该元素内容进行拼写和语法检查，当值为false时则不进行检查。<br><strong>示例：</strong> <code>&lt;p spellcheck=&quot;true&quot;&gt;元素内容拼写检查&lt;/p&gt;</code></p><p><br/></p><h4 id="contenteditable-属性"><a href="#contenteditable-属性" class="headerlink" title="contenteditable 属性"></a>contenteditable 属性</h4><p><strong>描述：</strong> 规定元素内容是否可编辑，如果元素未设置 contenteditable 属性，那么元素会从其父元素继承该属性。</p><p><strong>语法：</strong> <code>&lt;element contenteditable=&quot;true|false&quot;&gt;</code><br><strong>参数：</strong> 进行拼写检查的可编辑段落且可以编辑内容。<br><strong>示例：</strong> <code>&lt;!--P标签也能被修改内容--&gt; &lt;p contenteditable=&quot;true&quot; spellcheck=&quot;true&quot;&gt;这是一段可编辑的段落,尝试编辑&lt;/p&gt;</code></p><p><br/></p><h4 id="data-属性"><a href="#data-属性" class="headerlink" title="data-* 属性"></a>data-* 属性</h4><p><strong>描述：</strong> 该全局属性是一类被称为自定义数据属性的属性，它赋予我们在所有 HTML 元素上嵌入自定义数据属性的能力，并可以通过脚本在 HTML 与 DOM 表现之间进行专有数据的交换。</p><p><strong>语法：</strong> <code>&lt;element data-*=&quot;somevalue&quot;&gt;</code><br><strong>参数：</strong> 属性包括两部分，属性名不应该包含任何大写字母，并且在前缀 “data-“ 之后必须有至少一个字符，属性值可以是任意字符串。<br><strong>示例：</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-tag">li</span><span class="selector-pseudo">:after</span> &#123;</span></span><br><span class="line"><span class="undefined">    content: 'Data ID :=&gt; ' attr(data-id);</span></span><br><span class="line"><span class="undefined">    position: absolute;</span></span><br><span class="line"><span class="undefined">    top: -22px;</span></span><br><span class="line"><span class="undefined">    left: 10px;</span></span><br><span class="line"><span class="undefined">    background: black;</span></span><br><span class="line"><span class="undefined">    color: white;</span></span><br><span class="line"><span class="undefined">    padding: 2px;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#eee</span>;</span></span><br><span class="line"><span class="undefined">    opacity: 0;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">transition</span>: 0<span class="selector-class">.5s</span> <span class="selector-tag">opacity</span>;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>animal agents<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-id</span>=<span class="string">"bird"</span>&gt;</span>Owl 猫头鹰<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-id</span>=<span class="string">"fish"</span>&gt;</span>Salmon 鲑鱼<span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-id</span>=<span class="string">"spider"</span>&gt;</span>Tarantula 毒蜘蛛<span class="tag">&lt;/<span class="name">li</span>&gt;</span>   <span class="comment">&lt;!--n. 狼蛛；塔兰图拉毒蛛--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><br><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230222160239.png" alt="WeiyiGeek. data-*属性使用图" title="" class="">                <p>WeiyiGeek. data-*属性使用图</p>            </figure></p><p>温馨提示: 用户代理会完全忽略前缀为 “data-“ 的自定义属性。</p><p><br/></p><h4 id="draggable-属性"><a href="#draggable-属性" class="headerlink" title="draggable 属性"></a>draggable 属性</h4><p>描述：规定元素是否可拖动，链接和图像默认是可拖动的，<code>draggable：可拖动的</code><br>提示：draggable 属性常用在拖放操作中，请在我们的拖放教程中学习更多内容。<br>语法：<code>&lt;element draggable=&quot;true|false|auto&quot;&gt;</code><br>参数: true 可拖动，false 不可拖动，auto 使用浏览器默认行为。<br>示例:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">  <span class="selector-id">#div</span> &#123;<span class="attribute">width</span>:<span class="number">350px</span>;<span class="attribute">height</span>:<span class="number">70px</span>;<span class="attribute">padding</span>:<span class="number">10px</span>;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#aaaaaa</span>;&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">  <span class="function"><span class="keyword">function</span> <span class="title">allowDrop</span><span class="params">(ev)</span></span>&#123;</span></span><br><span class="line"><span class="undefined">    ev.preventDefault();</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">  </span></span><br><span class="line"><span class="actionscript">  <span class="function"><span class="keyword">function</span> <span class="title">drag</span><span class="params">(ev)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">    ev.dataTransfer.setData(<span class="string">"Text"</span>,ev.target.id);</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">  </span></span><br><span class="line"><span class="actionscript">  <span class="function"><span class="keyword">function</span> <span class="title">drop</span><span class="params">(ev)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> data=ev.dataTransfer.getData(<span class="string">"Text"</span>);</span></span><br><span class="line"><span class="javascript">    ev.target.appendChild(<span class="built_in">document</span>.getElementById(data));</span></span><br><span class="line"><span class="undefined">    ev.preventDefault();</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"div1"</span> <span class="attr">ondrop</span>=<span class="string">"drop(event)"</span> <span class="attr">ondragover</span>=<span class="string">"allowDrop(event)"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"drag"</span> <span class="attr">draggable</span>=<span class="string">"true"</span> <span class="attr">ondragstart</span>=<span class="string">"drag(event)"</span>&gt;</span></span><br><span class="line">这是一段可移动的段落，可以把该段落拖入上面的矩形。</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br/></p><h4 id="dir-属性"><a href="#dir-属性" class="headerlink" title="dir 属性"></a>dir 属性</h4><p>描述: 是一个指示元素中文本方向的枚举属性。它的取值如下：<br>语法：<code>&lt;element dir=&quot;ltr|rtl|auto&quot;&gt;</code></p><blockquote><p>ltr，指从左到右，用于那种从左向右书写的语言（比如英语）；<br>rtl，指从右到左，用于那种从右向左书写的语言（比如阿拉伯语）；<br>auto，指由用户代理决定方向, 它在解析元素中字符时会运用一个基本算法，直到发现一个具有强方向性的字符，然后将这一方向应用于整个元素。<br>示例:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">dir</span>=<span class="string">"ltr"</span>&gt;</span>从左向右书写的语言<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">dir</span>=<span class="string">"rtl"</span>&gt;</span>从右向左书写的语言<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">dir</span>=<span class="string">"auto"</span>&gt;</span>指由用户代理决定方向<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><br><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230222161457.png" alt="WeiyiGeek.dir 属性执行结果图" title="" class="">                <p>WeiyiGeek.dir 属性执行结果图</p>            </figure></p></blockquote><p><br/></p><h4 id="dropzone-属性（未支持-NEW）"><a href="#dropzone-属性（未支持-NEW）" class="headerlink" title="dropzone 属性（未支持-NEW）"></a>dropzone 属性（未支持-NEW）</h4><p>描述: 规定在元素上拖动数据时，是否拷贝、移动或链接被拖动数据。<br>提示：draggable 属性常用在拖放操作中，请在我们的拖放教程中学习更多内容。<br>语法：<code>&lt;element dropzone=&quot;copy|move|link&quot;&gt;</code><br>参数: </p><blockquote><p>copy ：拖动数据会产生被拖动数据的副本<br>move : 拖动数据会导致被动数据被移动到新w位置<br>link ：拖动数据会产生指向原始数据的链接</p></blockquote><p>温馨提示: 当前没有主流浏览器支持 dropzone 属性。</p><hr><h3 id="标签属性"><a href="#标签属性" class="headerlink" title="标签属性"></a>标签属性</h3><p>描述：除了全局属性之外，HTML 标签也可以拥有自己属性（后续学习标签时会学到），从而提供了有关 HTML 元素的更多的信息。</p><p><strong>属性格式:</strong><br>描述: 属性总是以名称/值对的形式出现，比如：<code>name=&quot;value&quot;</code>（用等号给属性赋值），属性总是在 HTML 元素的开始标签中规定, 并且属性值应该始终被包括在引号内，双引号是最常用的，不过使用单引号也没有问题。</p><blockquote><p>在某些个别的情况下，比如属性值本身就含有双引号，那么您必须使用单引号，例如：<code>name=&#39;Student &quot;HelloWorld&quot; HTML&#39;</code></p></blockquote><p><strong>示例演示:</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 例1.HTML 链接由 &lt;a&gt; 标签定义，链接的地址在 href 属性中指定 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.weiyigeek.top"</span> &gt;</span>This is a link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 例2. 拥有关于背景颜色的附加信息 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span>=<span class="string">"yellow"</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 例3.拥有关于表格边框的附加信息。 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>age<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span>addr<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><br></p><script>const textarea0 = document.getElementsByClassName('htmlcode')[0];const output0 = document.getElementsByClassName("output")[0];const textarea1 = document.getElementsByClassName('htmlcode')[1];const output1 = document.getElementsByClassName("output")[1];</script>]]></content>
    
    
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;</summary>
    
    
    
    <category term="前端学习" scheme="https://blog.weiyigeek.top/categories/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="学习笔记" scheme="https://blog.weiyigeek.top/categories/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="HTML" scheme="https://blog.weiyigeek.top/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>2.全栈修炼之前端《快速学习HTML标签元素》学习笔记</title>
    <link href="https://blog.weiyigeek.top/2023/2-20-713.html"/>
    <id>https://blog.weiyigeek.top/2023/2-20-713.html</id>
    <published>2023-02-20T10:30:30.000Z</published>
    <updated>2023-02-24T07:56:53.806Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h2 id="0X00-前端开发语言"><a href="#0X00-前端开发语言" class="headerlink" title="0X00 前端开发语言"></a>0X00 前端开发语言</h2><h3 id="1-快速学习-HTML-元素"><a href="#1-快速学习-HTML-元素" class="headerlink" title="1.快速学习 HTML 元素"></a>1.快速学习 HTML 元素</h3><h4 id="根元素"><a href="#根元素" class="headerlink" title="根元素"></a>根元素</h4><ul><li>html 标签 (主根元素)</li><li>head 标签 (头部根元素)</li><li>body 标签 (主体根元素)</li></ul><ul><li><ul><li>元数据<ul><li>base、head</li></ul></li><li>内容分区<ul><li>header、footer</li></ul></li><li>内容<ul><li>块级内容 div、dir</li><li>文字内容 a、b、strong</li></ul></li><li>图片和多媒体<ul><li>audio、img</li></ul></li><li>内嵌内容<ul><li>iframe、object</li></ul></li><li>脚本<ul><li>canvas、script</li></ul></li><li>表格<ul><li>table、tbody</li></ul></li><li>表单<ul><li>button、input</li></ul></li><li>可交互元素<ul><li>menu、menuitem</li></ul></li></ul></li><li>属性<ul><li>常用属性<ul><li>class、id、style、title</li></ul></li><li>全局属性</li></ul></li><li>事件<ul><li>窗口事件</li><li>表单事件</li><li>键盘事件</li><li>鼠标事件</li><li>多媒体事件</li></ul></li><li>编码<ul><li>URL编码</li><li>语言代码</li><li>字符集</li></ul></li></ul><h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><ul><li>语法<ul><li>@规则</li><li>层叠</li><li>注释</li><li>解释器</li><li>继承</li><li>简写</li><li>优先级</li><li>值定义</li><li>单位与取值类型</li></ul></li><li>选择器<ul><li>元素选择器</li><li>选择器分组</li><li>类选择器</li><li>ID 选择器</li><li>属性选择器</li><li>后代选择器</li><li>子元素选择器</li><li>相邻选择器</li><li>伪类</li><li>伪元素</li></ul></li><li>定位<ul><li>position</li><li>top、left、bottom、right</li><li>z-index</li></ul></li><li>布局<ul><li>Box Model</li><li>FlexBox</li><li>Grid</li><li>Column</li></ul></li><li>样式<ul><li>背景</li><li>文本</li><li>轮廓</li><li>列表</li></ul></li><li>动画<ul><li>Animation</li><li>transition</li></ul></li><li>应用<ul><li>响应式<ul><li>em、vh/vw、%</li></ul></li><li>自适应<ul><li>@media、rem</li></ul></li></ul></li></ul><h3 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h3><p>开始使用 JavaScript 很容易，你只需要一个现代 Web 浏览器。这篇教程包含了一些只在最新版本的火狐浏览器上才有的功能，所以建议大家使用最新版本的火狐浏览器。</p><p>火狐浏览器内置的 Web 控制台非常适合学习 JavaScript,Web 控制台包含两个输入模式——单行模式、多行模式。</p><p>JavaScript 学习指南:<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide</a></p><ul><li>语法<ul><li>值、变量</li><li>数据类型<ul><li>基本类型</li><li>类型判断</li><li>类型转换</li></ul></li><li>流程控制</li><li>运算（表达式、运算符）<ul><li>数学</li><li>比较</li><li>逻辑</li></ul></li><li>函数<ul><li>函数声明</li><li>函数表达式</li><li>回调函数</li><li>箭头函数</li></ul></li></ul></li><li>数据类型深入<ul><li>原始类型的方法</li><li>数字类型</li><li>字符串</li><li>数组</li><li>数组方法</li><li>Iterable object（可迭代对象）</li><li>Map and Set（映射和集合）</li><li>WeakMap and WeakSet（弱映射和弱集合）</li><li>Object.keys、values、entries</li><li>解构赋值</li><li>日期和时间</li><li>JSON序列化、反序列化</li></ul></li><li>对象<ul><li>属性/字面量</li><li>in 、for…in</li><li>对象引用</li><li>深拷贝、浅拷贝</li><li>Symbol</li><li>垃圾收集机制</li><li>this</li><li>new</li><li>Optional chaining ‘?.’</li><li>类型转换Symbol.toPrimitive</li><li>Property flags、descriptors</li><li>getters、setters</li></ul></li><li>函数<ul><li>调用栈</li><li>递归、尾递归</li><li>arguments、params spread</li><li>作用域、闭包</li><li>var、变量提升</li><li>IIFE、匿名自执行函数</li><li>NFE、函数命名表达式</li><li>箭头函数</li><li>new Function</li><li>setTimeout、setInterval</li><li>call、apply、bind</li><li>部分施用、柯里化</li></ul></li><li>原型<ul><li>原型链、继承</li><li>F.prototype</li><li>Object.prototype</li></ul></li><li>类<ul><li>extend 继承</li><li>方法重载</li><li>构造函数</li><li>Super、[[HomeObject]]</li><li>静态属性、静态函数</li><li>私有属性、私有函数</li><li>混合、Mixins</li></ul></li><li>异步流程控制<ul><li>Callback</li><li>Promise<ul><li>Promises/A+、Promisification、Thenable</li></ul></li><li>async/await</li><li>generator</li><li>iterable</li></ul></li><li>模块化<ul><li>commonJS</li><li>amd、cmd、umd、es-module</li></ul></li><li>异常捕获<ul><li>try…catch…finally</li><li>throw</li><li>Error</li></ul></li></ul><h3 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h3><ul><li>DOM<ul><li>DOM Tree</li><li>DOM Node</li><li>DOM Query</li><li>DOM Properties</li><li>DOM Modify</li><li>Styles</li><li>Coordinates、Element Scrolling</li><li>DOM Events<ul><li>UI Event</li><li>Bubbling and Capturing</li><li>Event Delegate</li></ul></li></ul></li><li>浏览器API<ul><li>location</li><li>history</li><li>navigator</li><li>Default Actions<ul><li>event.preventDefault()</li></ul></li><li>Form<ul><li>change、focus、blur、submit</li></ul></li></ul></li><li>网络<ul><li>XHR</li><li>Fetch</li><li>JSONP</li><li>WebSocket</li></ul></li><li>权限<ul><li>Cookie</li><li>Session</li><li>OAuth</li><li>SSO</li><li>JWT</li></ul></li><li>安全与隐私<ul><li>Content Security Policy (CSP)</li><li>CORS</li><li>XSS</li><li>CSRF</li><li>MITM</li><li>Samesite</li></ul></li><li>兼容性<ul><li>Can I Use</li><li>polyfill</li><li>shim</li><li>browserslist</li><li>Autoprefixer</li></ul></li><li>开发者工具<ul><li>设备模式</li><li>元素面板</li><li>控制台面板</li><li>源代码面板</li><li>网络面板</li><li>性能面板</li><li>内存面板</li><li>应用面板</li><li>安全面板</li></ul></li></ul><p>[<a href="https://blog.weiyigeek.top/2019/10-21-10.html]">https://blog.weiyigeek.top/2019/10-21-10.html]</a>: </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://blog.weiyigeek.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="前端学习" scheme="https://blog.weiyigeek.top/tags/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="全栈学习" scheme="https://blog.weiyigeek.top/tags/%E5%85%A8%E6%A0%88%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>2.全栈修炼之前端《标准与研发工具》学习笔记</title>
    <link href="https://blog.weiyigeek.top/2023/2-15-712.html"/>
    <id>https://blog.weiyigeek.top/2023/2-15-712.html</id>
    <published>2023-02-15T10:30:30.000Z</published>
    <updated>2023-02-21T07:07:48.748Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h2 id="0X00-前端标准与研发工具"><a href="#0X00-前端标准与研发工具" class="headerlink" title="0X00 前端标准与研发工具"></a>0X00 前端标准与研发工具</h2><p><strong>原文地址:</strong>  [全栈之路-前端篇 | 第三讲.基础前置知识【前端标准与研发工具】学习笔记] <a href="https://mp.weixin.qq.com/s/JpM5PO2a3wZUeFcrzzN8bg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/JpM5PO2a3wZUeFcrzzN8bg</a></p><h3 id="8-行业标准"><a href="#8-行业标准" class="headerlink" title="8.行业标准"></a>8.行业标准</h3><p>前端技术中有众多的开发标准，在后续的学习之中免不了打交道，此处我们简单熟悉了解下常见标准。</p><h4 id="Web-1-0-2-0-3-0"><a href="#Web-1-0-2-0-3-0" class="headerlink" title="Web 1.0 / 2.0 / 3.0"></a>Web 1.0 / 2.0 / 3.0</h4><p>随着互联网的范式不断迭代升级，从只有静态网页的Web1.0到用户直接交互的Web2.0，再到用户自主控制数据的Web3.0。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2019/1/20190922225533.png" alt="WeiyiGeek.Web1.0/2.0/3.0" title="" class="">                <p>WeiyiGeek.Web1.0/2.0/3.0</p>            </figure><p><br/></p><p><strong>那Web 1.0、Web 2.0 和 Web 3.0之间有什么区别呢？</strong></p><ul><li>Web 1.0 ：“只读”的信息展示平台</li></ul><blockquote><p>在 Web 1.0 时代，即从 <code>1991 年到 2004 年</code>，是万维网革命的第一阶段，通常称为只读网络。网站是信息性的，仅包含超链接在一起的静态内容，或者简单地说，没有CSS、动态链接、交互性（如登录用户、对博客文章的评论等）。此时我们作为一个普通的互联网用户，只能去看也就是 <code>read-only</code> 不能写。</p><p>例如：新浪、网易、搜狐性门户站点，只能浏览查看后台管理员发布的文章。</p><p>而随着互联网发展，交互的方式也进步了，作为互联网普通用户，此时互联网不但可以读了而且还可读可写了，这就是web2.0。</p></blockquote><ul><li>Web 2.0 ：“互动”的内容生产网络</li></ul><blockquote><p>在 Web 2.0 时代，从 2004 年至今，是万维网革命的第二阶段，通常称为读写网络。目前大家都都生活在Web 2.0时代，也离不开Web 2.0带来的便捷，此时社交网络包含许多在线工具和平台，人们可以在其中分享他们的观点、意见、想法和经验，它突出了用户生成的内容、可用性和最终用户的互操作性。</p><p>Web 2.0 应用程序倾向于与最终用户进行更多交互。因此，最终用户不仅是应用程序的用户，而且是工具的参与者。例如：新浪微博，你可以发表自己的微博；Facebook 你可以发表自己的动态；微信你可以发表自己的朋友圈等；以及博客站点提供与浏览者评论交流。</p></blockquote><blockquote><p>Web 2.0 的缺点：“中心”的单一化环境，在查看缺点之前，让我们先看看传统的 web2.0 应用程序是如何工作的。</p><p>如下图所示，客户端（用户）将向服务器发出 HTTP 请求，如果一切正确，它将将该网页作为响应发回。可以看到它有一个主要缺陷是所有数据都存储在由公司控制的集中式服务器上，Facebook、谷歌和 Twitter 等开始将用户数据存储在他们的服务器中，以便他们可以通过网络为我们提供更好的内容。这反过来又会使我们在他们的网站上停留的时间更长，从而为这些公司提供更多的广告收入。</p><p>这些公司最终开始将我们的信息出售给广告商，侵犯个人隐私外还在我们身上盈利！无疑这个是中心化的时代。</p></blockquote><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/2/image-20230108161142616.png" alt="WeiyiGeek.Web2.0客户端用户请求流程" title="" class="">                <p>WeiyiGeek.Web2.0客户端用户请求流程</p>            </figure><ul><li>Web 3.0 ：“去中心”的个性化环境</li></ul><blockquote><p>Web3.0 概念旨在创建一个去中心化但安全的互联网，人们可以在其中安全地交换金钱和信息，而无需中间商或大型科技公司。与将数据存储在单个数据库或云提供商中的 Web2.0 不同，Web3.0 应用程序要么在区块链上运行，要么在点对点节点（服务器）上运行。</p><p>采用去中心化的模式，用户的所有数据都是通过钱包/私钥来控制的，而这个时候，数据的所有权属于用户自己，而不是平台方。在web3.0中平台方变成了一个个DAPP，他们通过区块链上现有的基础协议和功能，来搭建属于自己的应用平台。比如在以太坊上智能合约使用EVM虚拟机，数据存储和交互使用swarm协议，信息的传递使用whisper协议，DAPP通过构建自己的激励代币ERC20 token来实现整个应用的激励，从而避免了作恶的可能性，也通过这种方式使得生态能够稳健运行。</p><p>简而言之，Web3.0将是一个不会依赖任何中心组织、完全由用户掌控的时代。它的到来将彻底打破现在科技巨头的垄断，改写当前数字经济的运行方式，并引发大量自下而上的创新。</p></blockquote><p>关于从Web1.0-Web 3.0的变迁和概念特点，总结如下所示：</p><ul><li>Web1.0：Yahoo、新浪和搜狐等，内容为主，少交互；</li><li>Web2.0：Facebook、微信和抖音等，关系为主，多交互；</li><li>Web3.0： 区块链、物联网和人工智能等，数据为主，去信任去中介化的价值互联。</li></ul><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/2/image-20230108162002292.png" alt="WeiyiGeek.Web1.0-3.0区别" title="" class="">                <p>WeiyiGeek.Web1.0-3.0区别</p>            </figure><h4 id="W3C-WHATWG"><a href="#W3C-WHATWG" class="headerlink" title="W3C/WHATWG"></a>W3C/WHATWG</h4><p><strong>什么是W3C?</strong></p><p>万维网联盟（外语缩写：W3C）创建于1994年，是Web技术领域最具权威和影响力的国际中立性技术标准机构, W3C标准定义了一个用于应用程序开发的开放式Web平台，该平台具有前所未有的潜力，使开发人员能够构建丰富的交互体验，由任何设备上都可以使用的海量数据存储提供支持，W3C制定这些技术规范和指南的过程旨在最大限度地达成对技术报告内容的共识，确保高技术和编辑质量，并获得W3C和更广泛社区的认可。<br>官网地址: <a href="https://www.w3.org/standards/" target="_blank" rel="noopener">https://www.w3.org/standards/</a></p><p>其中标准不是某一个标准，而是一系列标准的集合，网页主要由三部分组成：<code>结构（Structure）、表现（Presentation）和行为（Behavior）</code>。</p><p>即对应的标准也分三方面：<br>1.结构化标准语言包括：HTML、XHTML(<code>可扩展超文本标记语言</code>)、XML(<code>可扩展标记语言</code>)、HTML5标准、SVG (<code>可缩放的矢量图形</code>) 标准<br>2.表现标准语言包括: CSS（<code>层叠样式表</code>）标准<br>3.行为标准包括: DOM（<code>文档对象模型</code>）标准 / ECMAScript 标准 (<code>ECMA-262</code>)</p><p>参考地址: <a href="https://www.webstandards.org/learn/faq/" target="_blank" rel="noopener">https://www.webstandards.org/learn/faq/</a></p><p><br></p><p><strong>什么是WHATWG?</strong></p><p>Web 超文本应用技术工作组 (WHATWG) 的组织于2004年成立,它是一个由四个主要的浏览器厂商（包括苹果、谷歌、微软、Mozilla）组成的行业组织。</p><p>该组的创建是由于 W3C 开发更现代的 HTML 标准的速度缓慢，并且计划将 HTML 转换成一个名为 XHTML 的变体（具有类似 XML 的结构），浏览器厂商不赞同这种做法，最终WHATWG 击败了W3C（万维网标准机构），赢得了 HTML 和 DOM 的控制权（标准）。</p><p><code>小小插曲</code>: WHATWG（当时由来自苹果、Mozilla 和 Opera 的成员组成）认为，W3C 的领导层（还包括许多与浏览器无关的实体）并没有把 Web 开发社区的最大利益放在心上。</p><p>他们表示反对并开发了后来成为 HTML 5 标准的东西，在浏览器厂商的支持下，W3C 和 WHATWG 宣布，他们终于把他们的分歧放在一边，并签署了一份新的谅解备忘录，并且 W3C 正式批准将其作为 HTML Web 标准的下一个主要迭代。</p><p>根据这份新协议，W3C 正式发布未来的 HTML 和 DOM 标准，并支持 WHATWG，将控制权完全交还给浏览器厂商。取而代之，W3C 及其数百名成员将起草未来的 Web 标准需要包含什么特性的“建议”, 然后，WHATWG 将决定把哪些加入到他们的产品中。</p><p>当前由 WHATWG 维护的 <code>HTML Living Standard</code> 将成为 HTML 标准的官方版本, <code>DOM Living Standard</code> 也是如此。</p><p><br/></p><p><strong>WHATWG 和 W3C 的合作</strong></p><p>由于认为有两个不同的 HTML 和 DOM 规范声称是规范性的信念通常对社区有害，并且将工作重新组合在一起的共同愿望，W3C 和 WHATWG 协商（部分）如下，如果感兴趣可参考下述链接：</p><ol><li><p>W3C 和 WHATWG 在 WHATWG 存储库中协同处理 HTML 和 DOM，以生成标准和建议/审核草稿快照。</p></li><li><p>WHATWG 维护 HTML 和 DOM 标准。</p></li><li><p>W3C 直接在 WHATWG 存储库中促进社区工作（桥接社区，开发用例，提交问题，编写测试，调解问题解决方案）。</p></li><li><p>W3C 停止独立发布与 HTML 和 DOM 相关的指定规范列表，而是将 WHWWG 审核草案纳入 W3C 建议书。</p></li></ol><p>参考来源: </p><ul><li>WHATWG 击败 W3C，赢得 HTML 和 DOM 的控制权: <a href="https://www.infoq.cn/article/bsvFxt96DOh-SBZphBwJ" target="_blank" rel="noopener">https://www.infoq.cn/article/bsvFxt96DOh-SBZphBwJ</a></li><li>W3C 和 WHATWG 之间的谅解备忘录: <a href="https://www.w3.org/2019/04/WHATWG-W3C-MOU.html" target="_blank" rel="noopener">https://www.w3.org/2019/04/WHATWG-W3C-MOU.html</a></li></ul><hr><h4 id="HTML、HTML5、XHTML、XML"><a href="#HTML、HTML5、XHTML、XML" class="headerlink" title="HTML、HTML5、XHTML、XML"></a>HTML、HTML5、XHTML、XML</h4><p><strong>什么是HTML?</strong></p><blockquote><p>HTML（超文本标记语言 —— HyperText Markup Language）是构成 Web 世界的一砖一瓦, 它定义了网页内容的含义和结构。<br>其通常与CSS（层叠样式表）连用，他们两个是构建 Web 的核心技术。前者HTML提供页面的结构，后者CSS提供（视觉和听觉）布局。</p></blockquote><p><br/></p><p><strong>什么是HTML5?</strong></p><blockquote><p>HTML5 是 (HyperText Markup Language 5) 的缩写，“HTML5”一词被广泛用作指代现代网络技术的流行语，HTML5 技术结合了 HTML4.01 的相关标准并革新，符合现代网络发展要求，它由不同的技术构成，其在互联网中得到了非常广泛的应用，HTML5中还结合了其他元素，对原有的功能进行调整和修改，针对视频、音频、图像、动画以及与设备的交互都进行了规范。</p></blockquote><p>标准参考: <a href="https://html.spec.whatwg.org/multipage/" target="_blank" rel="noopener">https://html.spec.whatwg.org/multipage/</a> &amp;&amp; <a href="https://www.w3.org/html/" target="_blank" rel="noopener">https://www.w3.org/html/</a></p><p><br/></p><p><strong>HTML 历史版本</strong></p><blockquote><p>HTML 1.0 产生于1990年，1997年HTML4.0成为互联网标准, 2008年发布了HTML5它是互联网的下一代标准，2014年10月W3C发布了HTML5的最终版。</p></blockquote><p>扩展：随着YouTube彻底抛弃了Flash，实现向HTML5的全面过渡，越来越多的网站平台都开始转向使用HTML5开发。</p><p><br/></p><p><strong>什么是XHTML?</strong></p><blockquote><p>XHTML是HTML的一个变体，它使用 XML的语法，可扩展标记语言。XHTML有所有相同的元素（对于段落等）作为 HTML 变体，但语法略有不同, <code>因为XHTML是一个XML应用程序</code>，可以使用其他XML带有它的工具（例如 XSLT、 用于转换XML内容的语言）。</p></blockquote><p><br/></p><p><strong>什么是XML?</strong></p><blockquote><p>XML（可扩展标记语言）是一种简单的基于文本的格式 用于表示结构化信息：文档、数据、 配置、账簿、交易、发票等等。 它派生自一种较旧的标准格式，称为 SGML（ISO 8879），以便更适合Web使用。<br>其用途是共享结构化信息，在程序之间，人与人之间，计算机与人之间，两者兼而有之本地和跨网络。</p></blockquote><p>标准参考: <a href="https://www.w3.org/standards/xml/" target="_blank" rel="noopener">https://www.w3.org/standards/xml/</a></p><p><br/></p><p><strong>扩展参考</strong></p><p>W3C HTML+CSS介绍: <a href="https://www.w3.org/standards/webdesign/htmlcss" target="_blank" rel="noopener">https://www.w3.org/standards/webdesign/htmlcss</a><br>WHATWG 发布的技术标准: <a href="https://spec.whatwg.org/" target="_blank" rel="noopener">https://spec.whatwg.org/</a></p><hr><h4 id="CSS-标准"><a href="#CSS-标准" class="headerlink" title="CSS 标准"></a>CSS 标准</h4><p><strong>什么是CSS?</strong></p><blockquote><p>CSS（ Cascading Style Sheets , ——级联样式表）是描述结构化文档呈现的语言 （如 HTML 和 XML），包括颜色、布局和字体，它允许人们调整演示文稿 到不同类型的设备，例如 大屏幕、小屏幕或打印机。<br>CSS 独立于 HTML 和 可与任何基于 XML 的标记一起使用语言, HTML 与 CSS 的分离使得维护网站、共享变得更加容易，以及跨页面样式表和定制页面到不同的环境，当前最新版本为 CSS 3.0。</p></blockquote><p>标准参考: <a href="https://www.w3.org/Style/CSS/" target="_blank" rel="noopener">https://www.w3.org/Style/CSS/</a></p><hr><h4 id="DOM-标准"><a href="#DOM-标准" class="headerlink" title="DOM 标准"></a>DOM 标准</h4><p><strong>什么是DOM?</strong></p><blockquote><p>DOM（Document Object Model——文档对象模型）是用来呈现以及与任意 HTML 或 XML 文档交互的 API。<br>DOM 是载入到浏览器中的文档模型，以节点树的形式来表现文档，每个节点代表文档的构成部分（例如：页面元素、字符串或注释等等）。</p></blockquote><p><strong>扩展知识</strong><br>DOM 是万维网上使用最为广泛的 API 之一，因为它允许运行在浏览器中的代码访问文件中的节点并与之交互。节点可以被创建，移动或修改。事件监听器可以被添加到节点上并在给定事件发生时触发。</p><p>DOM 并不是天生就被规范好了的，它是浏览器开始实现JavaScript时才出现的。这个传统的 DOM 有时会被称为 DOM 0。现在WHATWG 维护 DOM 现存标准。</p><p>标准参考：<a href="https://dom.spec.whatwg.org/" target="_blank" rel="noopener">https://dom.spec.whatwg.org/</a></p><hr><h4 id="SVG-标准"><a href="#SVG-标准" class="headerlink" title="SVG 标准"></a>SVG 标准</h4><p><strong>什么是SVG?</strong></p><blockquote><p>可缩放矢量图形（Scalable Vector Graphics，SVG）基于 XML 标记语言，用于描述二维的矢量图形。</p></blockquote><p><strong>能做什么?</strong></p><blockquote><p>SVG 作为一个基于文本的开放网络标准，SVG 能够优雅而简洁地渲染不同大小的图形，并和CSS、DOM、JavaScript 和 SMIL 等其他网络标准无缝衔接。本质上，SVG 相对于图像，就好比 HTML 相对于文本。<br>SVG和传统的点阵图像模式（如 JPEG 和 PNG）不同的是，SVG 格式提供的是矢量图，这意味着它的图像能够被无限放大而不失真或降低质量，并且可以方便地修改内容，无需图形编辑器。通过使用合适的库进行配合，SVG 文件甚至可以随时进行本地化。</p></blockquote><p>当前 SVG 是由万维网联盟（W3C）自 1999 年开始开发的开放标准。</p><hr><h4 id="WebFonts-标准"><a href="#WebFonts-标准" class="headerlink" title="WebFonts 标准"></a>WebFonts 标准</h4><p><strong>什么是WebFonts？</strong><br>WebFonts是一种技术，它使人们能够在Web上按需使用字体，而无需在操作系统中安装。W3C拥有通过HTML、CSS2和SVG下载字体的经验。直到最近，由于缺乏可互操作的字体格式，可下载字体在Web上并不常见。WebFonts计划通过创建一种行业支持的、开放的Web字体格式（称为“WOFF”）来解决这一问题。</p><hr><h4 id="JavaScript、EcmaScript-标准"><a href="#JavaScript、EcmaScript-标准" class="headerlink" title="JavaScript、EcmaScript 标准"></a>JavaScript、EcmaScript 标准</h4><p><strong>什么是Javascript?</strong></p><blockquote><p>JavaScript（缩写:JS）是一门完备的动态编程语言。当应用于 HTML 文档时，可为网站提供动态交互特性。由布兰登·艾克（Brendan Eich，Mozilla 项目、Mozilla 基金会和 Mozilla 公司的联合创始人）发明。<br>JavaScript 基于原型编程、多范式的动态脚本语言，并且支持面向对象、命令式、声明式、函数式编程范式,完整的JS实现包含三个部分：ECMAScript，文档对象模型和浏览器对象模型。</p></blockquote><p>除此之外，JavaScript 的流行程度，随着除浏览器外最流行的跨平台 JavaScript 运行环境——Node.js 平台的成功而大大提升。Node.js 使开发者可以在 PC 上使用 JavaScript 作为脚本语言以自动化处理和构建功能完备的 HTTP 和 Web Sockets (en-US) 服务器。</p><p>应用场景:</p><blockquote><p>JavaScript 的应用场合极其广泛，简单到幻灯片、照片库、浮动布局和响应按钮点击，复杂到游戏、2D/3D 动画、大型数据库驱动程序等等。<br>JavaScript 相当简洁，却非常灵活。开发者们基于 JavaScript 核心编写了大量实用工具，可以使 开发工作事半功倍。</p></blockquote><p><br/></p><p><strong>什么是EcmaScript?</strong></p><blockquote><p>JavaScript 和 JScript 与 ECMAScript 兼容，但包含超出 ECMAScript 的功能，简单的说ECMAScript有的JS都有。<br>由于发展初期，JavaScript的标准并未确定，同期有Netscape网景的JavaScript，微软的JScript和CEnvi的ScriptEase三足鼎立。直至1997年，在ECMA (<code>欧洲计算机制造商协会-European Computer Manufacturers Association</code>) 的协调下，由Netscape、Sun、微软、Borland组成的工作组确定统一标准ECMA-262，称之为ECMAScript，</p></blockquote><p>EcmaScript 版本：ES5于2009年发布；ES6于2015年发布，也称ES2015；ES7于2016年发布，当前最新版为ECMAScript 7。</p><p>标准参考: </p><ul><li><a href="https://www.ecma-international.org/publications-and-standards/standards/" target="_blank" rel="noopener">https://www.ecma-international.org/publications-and-standards/standards/</a></li><li><a href="https://www.ecma-international.org/publications/standards/Ecma-262.htm" target="_blank" rel="noopener">https://www.ecma-international.org/publications/standards/Ecma-262.htm</a></li></ul><p><br/></p><p>温馨提示：</p><ul><li>ECMA：读音类似“埃科妈”，是欧洲计算机制造商协会（European Computer Manufacturers Association）的简称，是一家国际性会员制度的信息和电信标准组织。</li><li>Ecma 国际：1994 年之后，由于 ECMA 组织的标准牵涉到很多其他国家，为了体现其国际性，更名为 Ecma 国际（Ecma International）。</li><li>ECMAScript： 由 Ecma 国际在标准 ECMA-262 中定义的脚本语言规范， JavaScript 是 ECMA-262 标准的实现和扩展。</li><li>ECMA-262：Ecma 国际的标准，都会以 Ecma-Number 命名，ECMA-262 就是 ECMA 262 号标准，具体就是指 ECMAScript 遵照的标准。1996 年 11 月，网景公司将 JavaScript 提交给 Ecma 国际进行标准化, ECMA-262 的第一个版本于 1997 年 6 月被 Ecma 国际采纳。</li></ul><p>温馨提示：虽然最常见的脚本语言ECMAscript（更广泛地称为JavaScript）是由Ecma开发的，但浏览器中提供的许多API都是由W3C定义的。例如，ECMAScript 规范并没有描述文档对象模型（DOM），该模型由 万维网联盟（W3C）制定。</p><hr><h4 id="小程序-MiniApp-标准"><a href="#小程序-MiniApp-标准" class="headerlink" title="小程序(MiniApp) 标准"></a>小程序(MiniApp) 标准</h4><p><strong>什么是小程序?</strong></p><blockquote><p>MiniApp是一种新的移动应用程序格式，一种依赖于Web技术（特别是CSS和JavaScript）并与本机应用程序功能集成的混合解决方案。<br>超级应用程序是一个托管和支持其他应用程序（即小应用程序）的软件平台，通过使用平台的资源来执行它们。</p></blockquote><p><strong>应用场景&amp;特点</strong><br>MiniApps因其在一些超级应用程序上的使用而流行起来，因为它诞生了一些字符，有助于填补Web和本机之间的空白。</p><ul><li>它无需安装。</li><li>多个 Web 视图以提高性能。</li><li>它提供了一些通过本机访问操作系统功能或数据的机制。</li><li>内容通常更值得信赖，因为应用程序需要由平台验证。</li><li>一个小应用可以分发到多个小应用平台（Web、本机应用程序，甚至操作系统），这些平台还提供小程序的入口，以确保用户可以轻松发现它。</li></ul><p><br/></p><p>扩展学习： 小应用并非旨在取代渐进式 Web 应用程序 （PWA）、本机应用程序或 Web。</p><p>其主要区别如下</p><ul><li>PWA可以在浏览器中的几乎任何支持Web的环境中运行，而MiniApp绑定到特定平台或超级应用程序</li><li>分发机制的不同，MiniApps打包和独立，PWA的资源分布在网络上。</li></ul><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230216173440.png" alt="WeiyiGeek.MiniApp应用和PWA的架构图" title="" class="">                <p>WeiyiGeek.MiniApp应用和PWA的架构图</p>            </figure><p>下表总结了其中一些差异:</p><table><thead><tr><th>特征</th><th>渐进式网络应用程序</th><th>小程序</th></tr></thead><tbody><tr><td>源代码</td><td>标准标记语言 （HTML）、样式表 （CSS） 和脚本 （JavaScript）。</td><td>HTML、CSS 和 JavaScript 的非标准方言</td></tr><tr><td>已部署格式</td><td>Web资源（主要：HTML，CSS，JavaScript代码和WebAssembly模块）</td><td>HTML，CSS，JavaScript和其他资源打包在ZIP容器中。</td></tr><tr><td>包装</td><td>否。Web 上链接的资源。</td><td>是的。每个供应商不同的封装格式。</td></tr><tr><td>需要在 Web 服务器上托管文件</td><td>是的</td><td>不</td></tr><tr><td>免安装使用</td><td>是的，在浏览器中运行。</td><td>在<a href="https://www.w3.org/TR/mini-app-white-paper/#dfn-super-app" target="_blank" rel="noopener">超级应用</a>或操作系统上运行。</td></tr><tr><td>使用独立图标安装</td><td>从浏览器或应用市场（可选）</td><td>不</td></tr><tr><td>服务业</td><td>访问网络应用程序接口</td><td>访问非标准 Web API，包括某些系统本机 API</td></tr></tbody></table><p>标准参考: <a href="https://www.w3.org/TR/mini-app-white-paper/" target="_blank" rel="noopener">https://www.w3.org/TR/mini-app-white-paper/</a></p><hr><h3 id="9-研发工具"><a href="#9-研发工具" class="headerlink" title="9.研发工具"></a>9.研发工具</h3><p>俗话说，工欲善其事必先利其器，作为一个前端开发者，必须要有适合自己的开发编辑器、浏览器调试器工具以及有一定的美工，图像处理功底，其次是了解学习在企业开发中协同开发最重要的代码版本管理相关工具。</p><h4 id="开发编辑器"><a href="#开发编辑器" class="headerlink" title="开发编辑器"></a>开发编辑器</h4><p>由于市场上开发工具很多，此处作者介绍最常用的几款前端开发工具（PS:当然也可以使用其做其他编程开发）。</p><h5 id="Visual-Studio-Code-首选"><a href="#Visual-Studio-Code-首选" class="headerlink" title="Visual Studio Code (首选)"></a>Visual Studio Code (首选)</h5><p>Visual Studio Code，简称VS code，是微软公司开发的一款轻量级的开发工具，它是基于开源构建即免费自由，支持市场上众多开发语言，包括但不限于（Java、Go、Javascript、Python、C++、C#）等。</p><p><strong>其特点如下:</strong></p><ul><li>开源，免费。</li><li>智能提示，借助 IntelliSense 超越语法突出显示和自动完成功能，它提供基于变量类型、函数定义和导入模块的智能补全功能。</li><li>调试功能强大，启动或附加到正在运行的应用，并使用断点、调用堆栈和交互式控制台进行调试。</li><li>内置 Git 命令，查看差异、暂存文件并直接从编辑器进行提交。</li><li>可扩展和可定制，市场应用上有众多强大的插件，实现编辑器功能增强。</li><li>自信而轻松地进行部署，借助 Microsoft Azure，您可以部署和托管React，Angular，Vue，Node，Python（以及更多！）站点，存储和查询关系和基于文档的数据，并使用无服务器计算进行扩展。（当然也能借助插件实现其他云服务器部署）</li><li>跨平台，其支持Windows、Linux、以及苹果 MacOS 系统上运行。</li></ul><p>VS 官网(下载递增)地址: <a href="https://code.visualstudio.com/" target="_blank" rel="noopener">https://code.visualstudio.com/</a><br>Github 项目地址: <a href="https://github.com/Microsoft/vscode" target="_blank" rel="noopener">https://github.com/Microsoft/vscode</a></p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230217092345.png" alt="WeiyiGeek.VS官网下载示例图" title="" class="">                <p>WeiyiGeek.VS官网下载示例图</p>            </figure><p>温馨提示：Visual Studio Code 编辑器常规配置以及常用插件可以参考此篇文章 【 <a href="https://blog.weiyigeek.top/2019/3-8-375.html#1-Visual-Studio-Code-编辑器">https://blog.weiyigeek.top/2019/3-8-375.html#1-Visual-Studio-Code-编辑器</a> 】</p><p><br/></p><h5 id="Sublime-Text"><a href="#Sublime-Text" class="headerlink" title="Sublime Text"></a>Sublime Text</h5><p>Sublime Text 是一个轻量、简洁、高效、跨平台的编辑器, 当前版本为  Sublime Text 4</p><p><strong>其特色功能如下:</strong></p><ul><li>良好的扩展功能，官方称之为安装包 (Package)。</li><li>右边没有滚动条，取而代之的是代码缩略图，这个功能非常赞</li><li>强大的快捷命令 “可以实时搜索到相应的命令、选项、snippet 和 syntex， 按下回车就可以直接执行，减少了查找的麻烦。”</li><li>即时的文件切换。</li><li>随心所欲的跳转到任意文件的任意位置。</li><li>多重选择 (Multi-Selection) 功能允许在页面中同时存在多个光标。</li><li>支持 VIM 模式</li><li>支持宏，简单地说就是把操作录制下来或者自己编写命令，然后播放刚才录制的操作或者命令。</li><li>支持GPU渲染, 它可以在Linux、Mac和Windows上使用GPU渲染界面</li></ul><p>官网地址: <a href="https://www.sublimetext.com/" target="_blank" rel="noopener">https://www.sublimetext.com/</a></p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230217093603.png" alt="WeiyiGeek.Sublime Text下载示例图" title="" class="">                <p>WeiyiGeek.Sublime Text下载示例图</p>            </figure><p><br/></p><h4 id="WebStorm"><a href="#WebStorm" class="headerlink" title="WebStorm"></a>WebStorm</h4><p>WebStorm 最聪明的JavaScript IDE，是由JetBrains公司推出，WebStorm 是一个适用于 JavaScript 和相关技术的集成开发环境。类似于其他 JetBrains IDE，它也会使您的开发体验更有趣，自动执行常规工作并帮助您轻松处理复杂任务，有30天试用期限，或者免费的教育版本。它可以轻松进行 JavaScript 开发：</p><ul><li>代码检测，更可靠和更易于维护的代码。</li><li>享受高效的编码，得益于 JavaScript 开发所需的全部功能开箱即用，您可以直接开始编码</li><li>减轻处理复杂任务的压力，WebStorm 将简化这些和其他具有挑战性的任务，以便您专注于大局。</li></ul><p><strong>其特色功能如下:</strong></p><ul><li>专门针对 JavaScript 打造: 无论您是使用 JS、TS、React、Vue、Angular、Node.js、HTML 还是各种样式表，WebStorm 都能满足您的需求。</li><li>最智能的编辑器: 自动补全代码、检测错误和冗余并提供修复建议，以及帮助您安全地重构代码。</li><li>内建开发者工具: 使用 WebStorm 调试和测试您的客户端和 Node.js 应用，并利用版本控制。充分使用 linter、构建工具、终端和 HTTP 客户端，这些均已经与 IDE 集成。</li><li>快速导航和搜索: 查找文件、类或符号，并在一个地方查看所有匹配条目。只需点击几次，即可跳到任何函数、方法、变量、组件或类的定义，并找到其用法。</li><li>高效的团队合作: 共享您的项目配置，包括代码样式设置，并高效使用 Git 和 GitHub。</li><li>可自定义环境: 体验各种主题和插件等，根据您的喜好定制 WebStorm 的外观。保存您的自定义设置并在 WebStorm 的不同实例之间共享。</li></ul><p>Webstorm 官网地址: <a href="https://www.jetbrains.com/webstorm/" target="_blank" rel="noopener">https://www.jetbrains.com/webstorm/</a><br>Webstorm 中文官网地址: <a href="https://www.jetbrains.com.cn/webstorm/" target="_blank" rel="noopener">https://www.jetbrains.com.cn/webstorm/</a></p><p><img src="https://img.weiyigeek.top/2023/1/20230217094629.png" alt="WeiyiGeek.WebStorm官网下载示例图"></p><p>温馨提示: JetBrains 系列IDE实在是太强大了，几乎涵盖到市场中常见热门的编程开发语言，包括Java、PHP、Ruby、Python、JavaScript、Kotlin、Objective-C 以及 .NET，都可以用 JetBrains 系列的IDE编辑器实现，例如 Python 开发的Pycharm IDE。</p><p>温馨提示: 当然上述这些 IDE 编辑器需要收费激活，但是 JetBrains 提供教育认证，如果你是高校的学生或者认证，都可以通过 <code>JetBrains 教育优惠认证来免费使用 JetBrains 全家桶</code>。 操作流程可以参考【 <a href="https://blog.weiyigeek.top/2019/3-8-527.html#1-教育邮箱免费激活-JetBrains-全家桶（学生-amp-教师认证）">https://blog.weiyigeek.top/2019/3-8-527.html#1-教育邮箱免费激活-JetBrains-全家桶（学生-amp-教师认证）</a> 】</p><p><br/></p><h4 id="程序调试预览"><a href="#程序调试预览" class="headerlink" title="程序调试预览"></a>程序调试预览</h4><p>前端开发中免不了进行调试预览，通过一些好的调试工具可以让您的开发找Bugs，事半功倍！</p><h5 id="浏览器调试工具"><a href="#浏览器调试工具" class="headerlink" title="浏览器调试工具"></a>浏览器调试工具</h5><p><strong>FireBug</strong></p><blockquote><p>介绍：Firebug是网页浏览器 Mozilla Firefox 下的一款开发类扩展，现属于Firefox的五星级强力推荐扩展之一。它集HTML查看和编辑、Javascript控制台、网络状况监视器于一体，是开发JavaScript、CSS、HTML和Ajax的得力助手。Firebug如同一把精巧的瑞士军刀，从各个不同的角度剖析Web页面内部的细节层面，给Web开发者带来很大的便利。</p></blockquote><p>如何打开 FireBug ?</p><blockquote><p>首先，你肯定需要安装最新版本的 Mozilla Firefox （火狐浏览器），<a href="http://www.firefox.com.cn/" target="_blank" rel="noopener">http://www.firefox.com.cn/</a> 。<br>其次，菜单栏【工具】-&gt; 【浏览器工具】 -&gt; 【Web开发者工具】 或者直接快捷键 【Ctrl+Shift+I】或者【F12】打开。<br>最后，打开后如下图所示。</p></blockquote><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230217103018.png" alt="WeiyiGeek.火狐浏览器Web开发者工具图" title="" class="">                <p>WeiyiGeek.火狐浏览器Web开发者工具图</p>            </figure><p><br/></p><p><strong>Chrome DevTools</strong></p><blockquote><p>想必接触过开发的看友，必然知道Google浏览器吧，此Chrome开发者工具，也是前端开发者必备之一。</p></blockquote><p>如何打开 Chrome DevTools ?</p><blockquote><p>首先，你肯定需要安装最新版本的 Google Chrome （google浏览器），<a href="https://www.google.cn/chrome/" target="_blank" rel="noopener">https://www.google.cn/chrome/</a> 。<br>其次，右边【自定义及控制Google chrome】-&gt; 【更多工具】 -&gt; 【Web开发者工具】 或者直接快捷键 【Ctrl+Shift+I】或者【F12】打开。<br>最后，打开后如下图所示。</p></blockquote><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230217104015.png" alt="WeiyiGeek.Google浏览器开发者工具图" title="" class="">                <p>WeiyiGeek.Google浏览器开发者工具图</p>            </figure><p><br/></p><p><strong>本地服务</strong></p><ul><li><p>file:// : 本地在没有Web容器服务时，可以直接通过浏览器访问本地静态文件进行调试，例如，<code>file:///E:/githubProject/WeiyiGeek/index.html</code></p></li><li><p>http:// : 本地如果有Web容器服务（SimpleHTTPServer、nginx、Tomcat、httpd）可以直接通过服务监听端口访问，此处我结合VS浏览器的<code>Live Serve</code>r插件实现前端页面自动更改。</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># - python 环境下快速启动http环境</span></span><br><span class="line"><span class="comment"># Python2</span></span><br><span class="line">python -m SimpleHTTPServer 8080</span><br><span class="line"><span class="comment"># python3</span></span><br><span class="line">python3 -m http.server -p 8080</span><br><span class="line"></span><br><span class="line"><span class="comment"># - PHP 环境下快速启动http环境</span></span><br><span class="line"><span class="built_in">exec</span> php -S 0:8081 index.html</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230217104843.png" alt="WeiyiGeek.vs编辑器Live Server插件调试图" title="" class="">                <p>WeiyiGeek.vs编辑器Live Server插件调试图</p>            </figure><p><br/></p><p><strong>在线服务</strong></p><ul><li>CodePen : CodePen 是构建、测试和发现前端代码的最佳场所，CodePen 是面向前端设计人员和开发人员的社交开发环境。构建和部署网站，展示您的工作，构建测试用例以学习和调试，并寻找灵感。<blockquote><p>简单的说就是在线实时预览，调试前端代码编写效果。<br>项目地址: <a href="https://codepen.io/features/" target="_blank" rel="noopener">https://codepen.io/features/</a><br>代码预览: <a href="https://codepen.io/pen/" target="_blank" rel="noopener">https://codepen.io/pen/</a></p></blockquote></li></ul><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230217110722.png" alt="WeiyiGeek.CodePen使用示例图" title="" class="">                <p>WeiyiGeek.CodePen使用示例图</p>            </figure><ul><li>JSFiddle : 它是一个Web开发人员的练习场,可在线即时编辑和测试 HTML、CSS、JavaScript代码片段（PS: 与 CodePen 差不多）。<blockquote><p>代码预览: jsfiddle.net</p></blockquote></li></ul><p><br/></p><p><strong>网络调试</strong><br>网络调试也是在前端开发中必不可少的，例如前后端项目，通常会请求后端提供的API接口，前端接收返回的响应数据（json、xml），然后返回给前台进行展示。<br>我们使用网络调试来查看http请求以及（cors）请求是否得到正常的响应，以便快速开发。</p><ul><li>hosts、Switchhosts : 通常用于解析测试环境的域名与开发服务器IP对应关系,例如本地将 demo.weiyigeek.top 域名解析到 192.168.16.222</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Windows</span></span><br><span class="line">notepad C:\Windows\System32\drivers\etc\hosts</span><br><span class="line">192.168.16.222 demo.weiyigeek.top</span><br><span class="line"></span><br><span class="line"><span class="comment"># Linux</span></span><br><span class="line">tee -a /etc/hosts &lt;&lt;<span class="string">'EOF'</span></span><br><span class="line">192.168.16.222 demo.weiyigeek.top</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>Debugging Proxy、Charles : Charles是一个HTTP代理/HTTP监视器/反向代理，使开发人员能够查看其机器和Internet之间的所有HTTP和SSL / HTTPS流量。这包括请求、响应和 HTTP 标头（包含 Cookie 和缓存信息）。</li></ul><figure class="image-box">                <img src="https://www.charlesproxy.com/assets/sm/upload/e8/jh/mj/ox/charles-windows.png?k=81ba37843a" alt="Debugging Proxy、Charles" title="" class="">                <p>Debugging Proxy、Charles</p>            </figure><ul><li>wireshark: Wireshark 是当前最重要和广泛使用的网络协议分析器，它可以让您看到您的微观层面的网络，即分析网络协议以及验证数据传输过程，在网络工程中它是必备的。<blockquote><p>Wireshark具有丰富的功能集，其中包括 以后：</p><ul><li>对数百个协议进行深入检查，并添加更多协议 时间</li><li>实时捕获和离线分析</li><li>标准三窗格数据包浏览器</li><li>多平台：运行在Windows，Linux，macOS，Solaris，FreeBSD， NetBSD和许多其他人</li><li>捕获的网络数据可以通过GUI或TTY模式浏览 夏克实用程序</li><li>业内最强大的显示过滤器</li><li>丰富的网络语音分析</li><li>读/写许多不同的捕获文件格式：tcpdump（libpcap）， Pcap NG， 弹射器 DCT2000， 思科安全 IDS iplog， 微软网络 监视器，网络通用嗅探器®（压缩和未压缩）， Sniffer® Pro和NetXray®，Network Instruments Observer，NetScreen Snoop， Novell LANalyzer， RADCOM WAN/LAN ANALYZER， Shomiti/Finisar 测量员， 泰克 K12xx， 视觉网络视觉正常运行时间， WildPackets EtherPeek/TokenPeek/AiroPeek等</li><li>使用gzip压缩的捕获文件可以即时解压缩</li><li>实时数据可以从以太网、IEEE 802.11、PPP/HDLC、ATM 读取。 蓝牙、USB、令牌环、帧中继、FDDI 等（取决于 在您的平台上）</li><li>解密支持许多协议，包括IPsec，ISAKMP， Kerberos、SNMPv3、SSL/TLS、WEP 和 WPA/WPA2<ul><li>着色规则可以应用于数据包列表，以便快速， 直观的分析</li><li>输出可以导出为 XML、PostScript®、CSV 或纯文本</li></ul></li></ul></blockquote></li></ul><p><br/></p><h4 id="图片编辑器"><a href="#图片编辑器" class="headerlink" title="图片编辑器"></a>图片编辑器</h4><p>前端除了代码的开发调试，对于全栈当然也涉及到图片美工，我们需要针对下述流行的图像处理软件进行学习了解，方便在后续前端开发时有图像处理时可以快速响应，以及在开发时提供排版、配色方面的基础知识储备。</p><h5 id="PhotoShop"><a href="#PhotoShop" class="headerlink" title="PhotoShop"></a>PhotoShop</h5><p>描述: PhotoShop 是由 Adobe 公司推出的一款图像处理专业软件，它可以进行图像修建、颜色（调色）、磨皮、背景消除、动画等方面的处理，实际上最新版本它也可以进行视频图像处理。</p><p>Photoshop 2022 软件在 Windows 操作系统上安装最低要求:</p><blockquote><p>操作系统:    Windows10 64位(版本20H2)或后；LTSC版本都不支持<br>多核英特尔®或AMD处理（64位）、<br>8G RAM<br>1.5GB GPU<br>分辨率 1280x800<br>硬盘 20GB的可用硬盘空间 </p></blockquote><p>官网地址: <a href="https://www.adobe.com/products/photoshop.html" target="_blank" rel="noopener">https://www.adobe.com/products/photoshop.html</a></p><p>学习指南: <a href="https://helpx.adobe.com/photoshop/user-guide.html" target="_blank" rel="noopener">https://helpx.adobe.com/photoshop/user-guide.html</a></p><p><br/></p><h5 id="Sketch"><a href="#Sketch" class="headerlink" title="Sketch"></a>Sketch</h5><p>描述: 它是一个Mac应用程序，供设计师创建，组队，原型等等，供其他人浏览、提供反馈、检查和切换— 在任何浏览器中。<br>借助周到的功能，使日常任务变得简单，以及不会中断流程的直观界面，他可以完成网站、成型、图标、应用程序、符号以及插图和设计系统方面的设计。</p><p><strong>主要功能：</strong></p><ul><li>强大的矢量编辑</li><li>简单、直观的原型设计</li><li>共享库，样式和组件</li><li>控制颜色配置文件</li><li>变量和OpenType字体支持</li><li>可重复使用的设计模板</li><li>单人或者实时协同设计</li><li>储存和同步你的工作</li></ul><p><img src="https://sketch-cdn.imgix.net/assets/pages/homepage/frames/mac-app-websites%402x.jpg?ixlib=rb-4.1.0&amp;dpr=0.5&amp;q=95&amp;fm=png&amp;auto=format&amp;s=2eff2b09592da97f72ff7346d1d84199" alt="Sketch原型设计"></p><p>官网地址: <a href="https://www.sketch.com/" target="_blank" rel="noopener">https://www.sketch.com/</a></p><p><br/></p><h4 id="版本管理"><a href="#版本管理" class="headerlink" title="版本管理"></a>版本管理</h4><p>此小节将讲解代码版本管理（分为集中式、分布式），它是在程序开发中非常重要的一环，方便代码更新迭代，协同开放，快速回滚，其目的是帮助开发者/团队/企业更好地管理代码，让软件研发更高效。</p><h5 id="代码托管平台"><a href="#代码托管平台" class="headerlink" title="代码托管平台"></a>代码托管平台</h5><p>描述：当前常用的Git代码托管平台有Github（已被微软收购）、Gitlab (社区版本企业私有化部署)、bitbucket、Gitee 码云、coding.net。</p><ul><li>Github : 全世界最大的代码托管平台，想必大家都有耳闻，此处我就不详细介绍了，官网地址: <a href="https://github.com" target="_blank" rel="noopener">https://github.com</a></li><li>Gitlab : 支持无限的公有项目和私有项目,社区版本支持在企业内部离线部署，官网地址：<a href="https://about.gitlab.com" target="_blank" rel="noopener">https://about.gitlab.com</a></li><li>Bitbucket : 类似于Github的免费代码托管空间,其免费支持5个开发成员的团队创建无限私有代码托管库，官网地址: <a href="https://bitbucket.org" target="_blank" rel="noopener">https://bitbucket.org</a></li><li>Gitee 码云: 国内企业级 DevOps 研发管理平台，官网地址: <a href="https://gitee.com" target="_blank" rel="noopener">https://gitee.com</a></li><li>coding.net: 国内腾讯云推出的代码托管平台，可以直接将代码部署到腾讯云服务器上非常方便，其次功能与开源中国相似，同样一个账号最多可以创建1000个项目，也支持任务的创建等，官网地址: coding.net</li></ul><p><br/></p><h5 id="代码项目版本控制工具"><a href="#代码项目版本控制工具" class="headerlink" title="代码项目版本控制工具"></a>代码项目版本控制工具</h5><p>描述：前面我们提高过版本管理控制工具主要分为两种，集中式管理与分布式管理，其分部对应了SVN（一些传统企业还在用）与GIT（主流）</p><p>那什么是版本控制系统？</p><blockquote><p>答：使用版本控制系统通常还意味着自动帮我记录每次文件的改动，还可以让同事协作编辑，就算你胡来搞砸了整个项目，把文件改的改，删的删，你也可以轻松恢复到原先的样子。这样你就结束了手动管理多个“版本”的史前时代，进入到版本控制的20世纪。</p></blockquote><p><br/></p><p><strong>Git (推荐)</strong></p><blockquote><p>Git是目前世界上最先进的分布式版本控制系统（没有之一），用于敏捷高效地处理任何或小或大的项目是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。<br>Git与常用的版本控制工具 CVS, Subversion 等不同，它采用了分布式版本库的方式，不必服务器端软件支持。</p></blockquote><p>官网地址: <a href="https://git-scm.com/" target="_blank" rel="noopener">https://git-scm.com/</a></p><p>温馨提示: 此处对于Git不熟悉的朋友，可以参考博主的 Git学习之路 【 <a href="https://blog.weiyigeek.top/2018/1-1-1.html#Git学习之路汇总">https://blog.weiyigeek.top/2018/1-1-1.html#Git学习之路汇总</a> 】</p><p><br/></p><p><strong>SVN</strong></p><blockquote><p>Apache Subversion 通常被缩写成 SVN,是一个开源的中心服务器版本控制系統，Subversion 在 2000 年由 CollabNet Inc 开发，现在发展成为 Apache 软件基金会的一个项目，同样是一个丰富的开发者和用户社区的一部分(现在基本已经被git取代);</p></blockquote><p>为什么要使用SVN？</p><blockquote><p>答：程序员在编写程序的过程中，每个程序员都会生成很多不同的版本，这就需要程序员有效的管理代码，在需要的时候可以迅速，准确取出相应的版本。而这些数据是放置在一个中央资料档案库(repository) 中，这个档案库很像一个普通的文件服务器, 不过它会记住每一次文件的变动；这样您才能把档案恢复到旧的版本, 或是浏览文件的变动历史。</p></blockquote><p>官网地址: <a href="https://git-scm.com/" target="_blank" rel="noopener">https://git-scm.com/</a></p><p>温馨提示: 此处需要快速上手体验的SVN的朋友，可以参考博主的 SVN入门安装配置与使用，【 <a href="https://blog.weiyigeek.top/2019/3-8-371.html">https://blog.weiyigeek.top/2019/3-8-371.html</a> 】</p><p><br/></p><p><strong>Q: 为什么不选择SVN而选择GIT</strong><br>答：说到这里不得不提到集中式vs分布式的分别对比;<br>Linus一直痛恨的CVS、SVN都是集中式的版本控制系统(Centralized Version Control Systems，简称 CVCS )，而Git、BitKeeper、Mercurial和Bazaar是分布式版本控制系统；</p><ul><li><p>集中式版本控制系统</p><blockquote><p>CVS（是一个C/S系统，是一个常用的代码版本控制软件，主要在开源软件管理中使用，与它相类似的代码版本控制软件有subversion）作为最早的开源而且免费的集中式版本控制系统。由于CVS自身设计的问题，会造成提交文件不完整，版本库莫名其妙损坏的情况。同样是开源而且免费的SVN修正了CVS的一些稳定性问题，是目前用得最多的集中式版本库控制系统。<br>除了免费的外，还有收费的集中式版本控制系统，比如IBM的ClearCase（以前是Rational公司的，被IBM收购了），特点是安装比Windows还大，运行比蜗牛还慢，能用ClearCase的一般是世界500强，他们有个共同的特点是财大气粗，或者人傻钱多。<br>微软自己也有一个集中式版本控制系统叫VSS，集成在Visual Studio中。由于其反人类的设计，连微软自己都不好意思用了。</p></blockquote></li><li><p>分布式版本控制系统</p><blockquote><p>除了Git以及促使Git诞生的BitKeeper外，还有类似Git的Mercurial和Bazaar等。这些分布式版本控制系统各有特点，但最快、最简单也最流行的依然是Git！</p></blockquote></li></ul><p><strong>Q: 集中式和分布式版本控制系统有什么区别呢？</strong></p><blockquote><p>Git 不仅仅是个版本控制系统，它也是个内容管理系统(CMS)，工作管理系统等, 如果你熟悉使用SVN也是可以的，但是在企业开发中大多是使用Git，此时你需要做一定的思想转换，来适应 Git 提供的一些概念和特征。</p></blockquote><blockquote><p>先说集中式版本控制系统，版本库是集中存放在中央服务器的，而干活的时候，用的都是自己的电脑，所以要先从中央服务器取得最新的版本，然后开始干活，干完活了，再把自己的活推送给中央服务器。</p></blockquote><blockquote><p>比如：中央服务器就好比是一个图书馆，你要改一本书，必须先从图书馆借出来，然后回到家自己改，改完了再放回图书馆。</p></blockquote><blockquote><p>所以说，集中式版本控制系统最大的毛病就是必须联网才能工作，如果在局域网内还好，带宽够大，速度够快，可如果在互联网上，遇到网速慢的话，可能提交一个10M的文件就需要5分钟，这还不得把人给憋死啊。</p></blockquote><figure class="image-box">                <img src="https://www.runoob.com/wp-content/uploads/2015/02/0D32F290-80B0-4EA4-9836-CA58E22569B3.jpg" alt="Git 与 SVN 区别" title="" class="">                <p>Git 与 SVN 区别</p>            </figure><p>本章节学习至此就要完毕了，请期待作者的下一章节HTML标签学习总结文章。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://blog.weiyigeek.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="前端学习" scheme="https://blog.weiyigeek.top/tags/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="全栈学习" scheme="https://blog.weiyigeek.top/tags/%E5%85%A8%E6%A0%88%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>1.全栈修炼之前端《基础前置知识体系》学习笔记</title>
    <link href="https://blog.weiyigeek.top/2023/2-14-711.html"/>
    <id>https://blog.weiyigeek.top/2023/2-14-711.html</id>
    <published>2023-02-14T10:34:30.000Z</published>
    <updated>2023-02-24T03:17:21.420Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h2 id="0X00-前言简述"><a href="#0X00-前言简述" class="headerlink" title="0X00 前言简述"></a>0X00 前言简述</h2><p>有可能有的小伙伴会问，你作为一名安全运维开发(SecOpsDev)工程师，为啥会整理学习前端相关技术笔记呢?</p><p>一是为了补齐自己的知识短板（形成知识体系结构），毕竟来说一般会运维的不会开发，会开发的不一了解安全，而成为一名网络安全工作者或者说白帽子，你就势必什么都是知道一点，但是等待你学到一定层度后，你会发现遇到的瓶颈越来越多，此时你可能会非常迷茫也很苦恼，要么有的就放弃这条路（转型），要不就重头再来恶补基础知识，比如像笔者我。</p><p>二是为了将自己所学的东西、学习路径分享出来，帮助某些计算机爱好者（同道中人）入门学习，其次是为了加固自身所学的知识，可谓是一举两得。</p><p>三是为了项目的需求不得不对前端知识进行饿补，毕竟还是要在完成工作的前提为指导，因为领导关心的就是<code>能不能做</code>以及<code>能不能做成</code>，谁不爱有产出的员工(tool man，嘻嘻)。</p><p>好的，废话不多说，从2023年2月16日开始，一起跟着【WeiyiGeek】来看一下我的前端学习之路吧，希望对你们学习有帮助!</p><p>送给各位读者的话，<code>成大事不在于力量的大小，而在于能坚持多久</code>。</p><p><strong>原文地址:</strong></p><ul><li>[全栈之路-前端篇 | 第一讲.基础前置知识【浏览器内核与网络知识】学习笔记] <a href="https://mp.weixin.qq.com/s/XYyRp1WeAwl3PcSSw5_rAQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/XYyRp1WeAwl3PcSSw5_rAQ</a></li><li>[全栈之路-前端篇 | 第二讲.基础前置知识【应用服务端与编程语言】学习笔记]  <a href="https://mp.weixin.qq.com/s/8uU0EFGkrWc0W6CnV68wXw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/8uU0EFGkrWc0W6CnV68wXw</a></li></ul><hr><h2 id="0X01-前端基础知识"><a href="#0X01-前端基础知识" class="headerlink" title="0X01 前端基础知识"></a>0X01 前端基础知识</h2><h3 id="1-客户端"><a href="#1-客户端" class="headerlink" title="1.客户端"></a>1.客户端</h3><h4 id="主流浏览器"><a href="#主流浏览器" class="headerlink" title="主流浏览器"></a>主流浏览器</h4><p>现在国内常见的浏览器有：IE、Firefox、QQ浏览器、Safari、Opera、Google Chrome、百度浏览器、搜狗浏览器、猎豹浏览器、360浏览器、UC浏览器、遨游浏览器、世界之窗浏览器等。</p><p>但目前最为主流浏览器有五大款，分别是IE（Edge）、Firefox、Google Chrome、Safari、Opera。</p><p><strong>五大浏览器</strong>分别是Google Chrome、Safari、Firefox、Edge(Internet Explorer) 、Opera浏览器，采用的都是单内核，而随着浏览器的发展现在也出现了双内核(例如QQ/360)。</p><ul><li>Google Chrome : <a href="https://www.google.cn/intl/zh-CN/chrome/" target="_blank" rel="noopener">Google Chrome</a> 是一款由Google公司开发的一款设计简单、高效的Web浏览工具，其基于开源引擎WebKit中的分支Blink而生的浏览器，<code>Blink 内核以及Chromium</code>是Google公司自主研发的内核模式，包含V8 Javascript虚拟机，这个多线程的虚拟机可以加速Javascript的执行。目标是提升稳定性、速度和安全性，并创造出简单且有效率的使用者界面。</li><li>Safari ：<a href="https://www.apple.com/safari/" target="_blank" rel="noopener">Safari</a> 是一款由苹果公司开发的网页浏览器，是各类苹果设备（如Mac、iPhone、iPad、iPod Touch）的默认浏览器，Safari使用自家开发 WebKit 浏览器引擎，<code>WebKit 内核</code>是苹果自主研发的内核模式，包含WebCore排版引擎及JavaScriptCore解析引擎，均是从KDE的KHTML及KJS引擎衍生而来。</li><li>Firefox : <a href="https://www.mozilla.org/zh-CN/firefox/new/" target="_blank" rel="noopener">Firefox</a>  浏览器使Mozilla公司旗下浏览器，也是刚才提到的网景公司后来的浏览器。网景被收购后，网景人员创办了Mozilla基金会，这是一个非盈利组织，他们在2004年推出自己的浏览器Firefox其采用作为内核，<code>Gecko 内核</code>是Mozilla公司自主研发的内核模式.</li><li>Edge : <a href="https://www.microsoft.com/zh-cn/edge/home" target="_blank" rel="noopener">Microsoft Edge</a>  是一款快速而安全的浏览器，其是基于谷歌开发的<code>Chromium 内核</code>，即微软的壳、Chromium 的心， 这次转变旨在解决 Edge 一直以来都难以解决的兼容性问题（在 EdgeHTML 下不少传统网页都无法正常显示）并融入现有的 Chromium 生态，所以 Google Chrome 中使用的浏览器插件通常也可以在Edge使用。<ul><li>Internet Explorer : 已经是过去式了，此处不再详细提及，曾经占用量最大的浏览器，现在已被 Microsoft 推出的 Edge 所替代，其采用的 Trident 内核。</li></ul></li><li>Opera ： 它是挪威Opera Software ASA公司旗下的浏览器。1995年，opera公司发布第一版Opera浏览器，使用自己研发的Presto内核。当时opera公司的开发团队不断完善Presto内核，使Opera浏览器一度成为顶级浏览器。直到2016年奇虎360和昆仑万维收购了Oprea浏览器，从此也丢弃了强大的Presto内核，改用当时Google开源的webkit内核，后来Opera浏览器跟随Google将浏览器内核改为Blink内核，自此Presto内核也淡出了互联网市场。</li></ul><p><br/></p><h4 id="浏览器内核"><a href="#浏览器内核" class="headerlink" title="浏览器内核"></a>浏览器内核</h4><p><strong>五大内核</strong>分别是：Trident（也称IE内核）、Presto、Gecko、Webkit、Blink/Chromium (基于Webkit)。</p><ul><li>Trident ([‘traɪd(ə)nt]) (IE内核)：该内核程序在 1997 年的 IE4 中首次被采用，是微软在 Mosaic（”马赛克”，这是人类历史上第一个浏览器，从此网页可以在图形界面的窗口浏览） 代码的基础之上修改而来的，并沿用到 IE11，也被普遍称作 “IE内核”。</li><li>Presto ([‘prestəʊ])：它是挪威产浏览器 opera 的 “前任” 内核，为何说是 “前任”，因为最新的 opera 浏览器早已将之抛弃从而投入到了谷歌大本营。pera 的一个里程碑作品是 Opera7.0，因为它使用了 Opera Software 自主开发的 Presto 渲染引擎，取代了旧版 Opera 4 至 6 版本使用的 Elektra 排版引擎。该款引擎的特点就是渲染速度的优化达到了极致，然而代价是牺牲了网页的兼容性。<br>Presto 加入了动态功能，例如网页或其部分可随着 DOM 及 Script 语法的事件而重新排版。Presto 在推出后不断有更新版本推出，使不少错误得以修正，以及阅读 Javascript 效能得以最佳化，并成为当时速度最快的引擎，然而为了减少研发成本，Opera 在 2013 年 2 月宣布放弃 Presto，转而跟随 Chrome 使用 WebKit 分支的 Chromium 引擎作为自家浏览器核心引擎，至此Presto 内核的 Opera 浏览器版本永远的停留在了 12.17</li></ul><ul><li>Gecko ([‘gekəʊ]) (Firefox 内核)：Netscape6 开始采用的内核，后来的 Mozilla FireFox(火狐浏览器) 也采用了该内核，Gecko 的特点是代码完全公开，因此，其可开发程度很高，全世界的程序员都可以为其编写代码，增加功能。因为这是个开源内核，因此受到许多人的青睐，Gecko 内核的浏览器也很多，这也是 Gecko 内核虽然年轻但市场占有率能够迅速提高的重要原因。</li></ul><ul><li>Webkit ：实际上是由苹果公司开发给 Safari 浏览器使用的内核。现在很多人错误地把 webkit 叫做 chrome内核（即使 chrome内核已经是 blink 、Chromeium了），WebKit 前身是 KDE 小组的 KHTML 引擎，可以说 WebKit 是 KHTML 的一个开源的分支。当年苹果在比较了 Gecko 和 KHTML 后，选择了后者来做引擎开发，是因为 KHTML 拥有清晰的源码结构和极快的渲染速度，所以Webkit内核可以说是以硬件盈利为主的苹果公司给软件行业的最大贡献之一。<ul><li>PS：Apple 在 Safari 里面使用了自己的 Nitro JavaScript 引擎（只用 WebKit 来渲染 HTML），所以一般说到 Webkit，通常指的就是渲染引擎（而不包括 Javascript 引擎）</li></ul></li><li>Chromium/Blink ：2008 年谷歌公司发布 chrome 浏览器，浏览器使用的内核被命名为 chromium，其 fork 自开源引擎 webkit，却把 WebKit 的代码梳理得可读性提高很多，提高了效率并且带动了浏览器行业的发展，谷歌公司还研发了自己的 Javascript 引擎，V8，极大地提高了 Javascript 的运算速度，然而 2013 年 4 月 3 日，谷歌在 Chromium Blog 上发表 博客，称将与苹果的开源浏览器核心 Webkit 分道扬镳，在 Chromium 项目中研发 Blink 渲染引擎（即浏览器核心），内置于 Chrome 浏览器之中。</li></ul><p><br/></p><p><strong>我们所说的浏览器内核是什么?其究竟能干什么?</strong></p><p>浏览器最重要或者说核心的部分是<code>“Rendering Engine”</code>可大概译为<code>“渲染引擎”</code>，俗称称为“浏览器内核”。负责对网页语法的解释（如[标准通用标记语言]下的一个应用[HTML]、[JavaScript]）并渲染（显示）网页。 所以，通常所谓的浏览器内核也就是浏览器所采用的[渲染引擎]，渲染引擎决定了浏览器如何显示网页的内容以及页面的格式信息，不同的浏览器内核对网页编写语法的解释也有不同，因此同一网页在不同的内核的浏览器里的渲染（显示）效果也可能不同，这也是网页编写者需要在不同内核的浏览器中测试网页显示效果的原因。</p><p>综上所述，浏览器的内核是指支持浏览器运行的最核心的程序，分为两个部分的，<code>一是渲染引擎，另一个是JS引擎</code>。用户在浏览器请求访问 URI（统一资源标示符）网络资源时，返回的数据由浏览器解释并显示 HTML 文件的方式是在 HTML 和 CSS 规范中指的，这些规范由网络标准化组织 W3C（万维网联盟）进行维护。</p><p>此处值得注意的是，并非所有的浏览器都完全遵从W3C规范（只是或多或少），通常还在开发自己独有的扩展程序。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/2/image-20221211133121844.png" alt="WeiyiGeek.浏览器渲染解析" title="" class="">                <p>WeiyiGeek.浏览器渲染解析</p>            </figure><p><br/></p><p><strong>Webkit 用的好好的，为何要投入到一个新的内核中去呢？</strong><br>Blink 其实是 WebKit 的分支，如同 WebKit 是 KHTML 的分支。Google 的 Chromium 项目此前一直使用 WebKit(WebCore) 作为渲染引擎，但出于某种原因，并没有将其多进程架构移植入Webkit。</p><p>后来，由于苹果推出的 WebKit2 与 Chromium 的沙箱设计存在冲突，所以 Chromium 一直停留在 WebKit，并使用移植的方式来实现和主线 WebKit2 的对接。这增加了 Chromium 的复杂性，且在一定程度上影响了 Chromium 的架构移植工作。<br>基于以上原因，Google 决定从 WebKit 衍生出自己的 Blink 引擎（后由 Google 和 Opera Software 共同研发），将在 WebKit 代码的基础上研发更加快速和简约的渲染引擎，并逐步脱离 WebKit 的影响，创造一个完全独立的 Blink 引擎。这样以来，唯一一条维系 Google 和苹果之间技术关系的纽带就这样被切断了。</p><p><br/></p><p><strong>总结说明</strong></p><ul><li>浏览器内核主要指的是浏览器的渲染引擎，2013 年以前，代表有 Trident（IE），Gecko（firefox），Webkit（Safari chrome 等）以及 Presto（opera)。2013 年，谷歌开始研发 blink 引擎，chrome 28 以后开始使用，而 opera 则放弃了自主研发的 Presto 引擎，投入谷歌怀抱，和谷歌一起研发 blink 引擎，国内各种 chrome系的浏览器（360、UC、QQ、2345 等等）也纷纷放弃 webkit，投入 blink 的怀抱。</li><li>目前移动端浏览器有哪些内核?<br>描述：移动端的浏览器内核主要说的是系统内置浏览器的内核。<br>目前移动设备浏览器上常用的内核有 Webkit，Blink(Chromium)，Trident，Gecko 等，其中 iPhone 和 iPad 等苹果 iOS 平台主要是 WebKit，Android 4.4 之前的 Android 系统浏览器内核是 WebKit，Android4.4 系统浏览器切换到了Chromium，内核是 Webkit 的分支 Blink，Windows Phone 8 系统浏览器内核是 Trident。</li><li>作为前端开发学习，熟悉浏览器内核是非常有必要的，不同内核的解析不同使网页渲染效果更具多样化，下面总结一下各常用浏览器所使用的内核。</li></ul><table><thead><tr><th>序号</th><th>浏览器</th><th>内核</th></tr></thead><tbody><tr><td>1</td><td>IE</td><td>Trident内核，也是俗称的IE内核；</td></tr><tr><td>2</td><td>Chrome</td><td>Chromium内核或Chrome内核，以前是Webkit内核，现在是Blink内核；</td></tr><tr><td>3</td><td>Firefox</td><td>Gecko内核，俗称Firefox内核；</td></tr><tr><td>4</td><td>Safari</td><td>Webkit内核；</td></tr><tr><td>5</td><td>Opera</td><td>最初是自己的Presto内核，后来是Webkit，现在是Blink内核；</td></tr><tr><td>6</td><td>360浏览器</td><td>IE+Chrome双内核；</td></tr><tr><td>7</td><td>猎豹浏览器</td><td>IE+Chrome双内核；</td></tr><tr><td>8</td><td>搜狗浏览器</td><td>Trident（兼容模式）+Webkit（高速模式）；</td></tr><tr><td>9</td><td>遨游浏览器</td><td>Trident（兼容模式）+Webkit（高速模式）；</td></tr><tr><td>10</td><td>QQ浏览器</td><td>Trident（兼容模式）+Webkit（高速模式）；</td></tr><tr><td>11</td><td>百度浏览器</td><td>IE内核；</td></tr><tr><td>12</td><td>世界之窗</td><td>IE内核；</td></tr><tr><td>13</td><td>2345浏览器</td><td>以前是IE内核，现在也是IE+Chrome双内核；</td></tr></tbody></table><p><strong>参考来源: </strong></p><ul><li>五大主流浏览器及四大内核 [<a href="https://zhuanlan.zhihu.com/p/102911463]" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/102911463]</a> </li></ul><hr><h3 id="2-APP"><a href="#2-APP" class="headerlink" title="2.APP"></a>2.APP</h3><h4 id="小程序"><a href="#小程序" class="headerlink" title="小程序"></a>小程序</h4><p>当前说得最多、最火的就是小程序，例如我们熟知的微信小程序、支付宝小程序、百度小程序等。</p><p><strong>发展背景与历程</strong></p><p>随着当前APP（安卓、IOS）市场的饱和，大部分用户已经养成了使用习惯（国人必不可少的两个软件-微信、支付宝），开发新的APP很难在市场生存。此外，APP开发和推广成本高也是不争的事实，根据某数据显示移动电商APP的下载成本高达120-200 元，而且这些后期未必能形成转化，而像互联网金融、二手车电商APP的新客户成本，更是动辄高达数千元。</p><p>因此，不少“码农”们决定开始向小程序市场“跳槽”，从而使得小程序雨后春笋般的增长。</p><table><thead><tr><th>时间</th><th>事件</th></tr></thead><tbody><tr><td>2016年11月3日</td><td>微信小程序正式开放公测</td></tr><tr><td>2017年9月20日</td><td>支付宝小程序向用户开放公测</td></tr><tr><td>2018年3月</td><td>小米、中兴、华为、金立、联想、魅族、努比亚、OPPO、vivo、一加共十家手机厂商一起推出了快应用，虽然名字不同，本质上也是小程序。</td></tr><tr><td>2018年7月</td><td>百度宣布百度智能小程序正式上线</td></tr><tr><td>2019年6月</td><td>腾讯QQ小程序上线</td></tr><tr><td>2020年6月23日</td><td>苹果推出了一项新的“App Clip”小程序</td></tr></tbody></table><p><strong>那究竟什么是小程序?</strong></p><p>按照百度百科介绍，小程序是一种不需要下载安装即可使用的[应用]，它实现了应用“触手可及”的梦想，用户扫一扫或者搜一下即可打开应用。也体现了“用完即走”的理念，用户不用关心是否安装太多应用的问题。应用将无处不在，随时可用，但又无需安装[卸载]。</p><p><strong>小程序开发文档</strong> </p><ul><li>微信小程序: <a href="https://mp.weixin.qq.com/cgi-bin/wx?token=&amp;lang=zh_CN" target="_blank" rel="noopener">https://mp.weixin.qq.com/cgi-bin/wx?token=&amp;lang=zh_CN</a></li><li>支付宝小程序: <a href="https://opendocs.alipay.com/mini/development" target="_blank" rel="noopener">https://opendocs.alipay.com/mini/development</a></li><li>百度小程序: <a href="https://smartprogram.baidu.com/developer/index.html" target="_blank" rel="noopener">https://smartprogram.baidu.com/developer/index.html</a></li></ul><hr><h4 id="WebView"><a href="#WebView" class="headerlink" title="WebView"></a>WebView</h4><p><strong>什么是WebView?</strong></p><p>Webview 是是指网页视图，它是一个基于webkit的引擎，可以解析DOM 元素，展示html页面的控件，它和浏览器展示页面的原理是相同的，所以可以把它当做浏览器看待，简单的说它就是APP内的一个容器的概念.</p><p>它可以内嵌在移动端，实现前端的混合式开发，大多数混合式开发框架都是基于WebView模式进行二次开发的，比如：APIcloud、uni-app等等的框架，以及微信小程序就是使用Webview进行渲染的。</p><p><br/></p><p><strong>WebView主要用于什么地方？或者说什么需求下会使用到webview?</strong></p><p>个人理解，在电脑上我们可以非常轻松的通过浏览器打开页面即可浏览，而手机系统层面，如果没有webview支持，是无法展示html页面，所以webview的作用即用于手机系统来展示html界面的，所以它主要在需要在手机系统上加载html文件时被需要。</p><p><br/></p><p><strong>使用webview的好处？</strong><br>原生APP是将页面的布局设计，以及业务代码打包然后用户下载安装使用，而webview是通过加载html文件来进行页面的展示，当需要更新页面布局的或者业务逻辑变更时，如果是原生的APP就需要修改前端内容，升级打包，重新发布才可以使用最新的。</p><p>而通过webview方式的页面则只需要修改html代码或者js文件（如果是从服务器端获取，只要新的文件部署完成），用户重新刷新就可以使用更新后的，无需通过下载安装的方式完成升级。</p><hr><h3 id="3-网络知识"><a href="#3-网络知识" class="headerlink" title="3.网络知识"></a>3.网络知识</h3><p>网络相关基础知识作为开发或者说从事计算机行业的必功课，所以说一个好的开发者一定是对网络是有一定的掌握，但是互连网络知识体系、分类之多，此处作为入门教程不做过多的展开，有兴趣的小伙伴可以自行学习，下面针对我们会遇到的一些网络名词进行简单介绍。</p><h4 id="Domain"><a href="#Domain" class="headerlink" title="Domain"></a>Domain</h4><p><strong>什么是域名(Domain Name)？</strong></p><blockquote><p>A：是一串用点分割的字符，是互联网某台或者某组计算机的名称，使用者更好方便访问网页，而不需去记住一长串的IP地址字符，例如 <code>http://www.weiyigeek.top/ --&gt; IP地址</code>；</p></blockquote><p><strong>使用域名有何好处?</strong></p><ul><li>1.方便人类记忆</li><li>2.更换机器IP地址后不需要改变硬编码在应用的域名，只需要更改解析即可。</li><li>2.便于实现负载均衡，例如一个域名可以对应多个IP。</li><li>3.便于实现虚拟主机名进行访问同一个地址的多个应用，例如Nginx的代理。</li></ul><p>Tips: 域名的购买与使用流程(温馨提示：国内服务器域名需要进行依法备案哟！)：</p><ul><li>1.你在某域名提供商处购买了一个域名 weiyigeek.top</li><li>2.域名提供商向 .top 对应的顶级域名服务器中插入一条以上的 NS 记录，指向它自己的次级 DNS 服务器，如 <a href="http://dns25.hichina.com/" target="_blank" rel="noopener">dns25.hichina.com</a>.</li><li>3.阿里云会向 TLD 中插入几条 NS 记录，指向阿里云的次级 DNS 服务器（如 <a href="http://alidns.com/" target="_blank" rel="noopener">alidns.com</a> - 223.6.6.6）。</li><li>4.你在该域名提供商的 DNS 管理界面中添加 A 记录，值为你的服务器 IP。</li><li>5.OK 现在 ping 一下 weiyigeek.top，就会发现它已经解析到你自己的服务器了。</li></ul><p>阿里云-域名购买：<a href="https://wanwang.aliyun.com/?source=5176.11533457&amp;userCode=uelj47qf" target="_blank" rel="noopener">https://wanwang.aliyun.com/?source=5176.11533457&amp;userCode=uelj47qf</a></p><p>腾讯云-域名购买: <a href="https://cloud.tencent.com/act/cps/redirect?redirect=10827&amp;cps_key=b33075ae5a2baf3b47e7456ee5821502" target="_blank" rel="noopener">https://cloud.tencent.com/act/cps/redirect?redirect=10827&amp;cps_key=b33075ae5a2baf3b47e7456ee5821502</a></p><p><br/></p><h4 id="TCP-IP"><a href="#TCP-IP" class="headerlink" title="TCP/IP"></a>TCP/IP</h4><p>当前在因特网中使用的协议集（一组通过不同分层进行组织的协议）被称为TCP/IP协议族，TCP/IP协议族是一个分层协议，它由提供特定功能的交互式模块组成。</p><p><strong>那TCP/IP是什么呢？又起了什么作用？</strong></p><p>定义：TCP/IP是一组通信协议的代名词（其中包含一百多个协议），这组协议使任何具有网络设备的用户能访问和共享Internet上的信息，其中最重要的协议是<code>传输控制协议（TCP）</code>和<code>因特网协议（IP）</code>。</p><p>作用：TCP和IP是两个独立且紧密结合的协议，负责管理和引导数据报文在Internet上的传输，两者使用专门的报文头定义每个报文的内容。 </p><ul><li>TCP负责和远程主机的连接。</li><li>IP负责寻址，使报文被送到其该去的地方。</li></ul><p><br/></p><p>说到此处不得不提到 TCP/IP四层模型。</p><p>TCP/IP四层模型的出现要早于OSI七层模型，它是由美国国防部创建的，所以有时又称<code>DoD（Department of Defense）</code>模型，是迄今为止发展最成功的通信协议，被用于构筑目前最大的、开放的互联网络系统Internet。</p><p>所以尽管OSI七层参考模型（后面介绍）得到了全世界的认同，但是互联网历史上和技术上的事实开发标准则是TCP/IP模型。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># TCP/IP 协议簇中的分层</span></span><br><span class="line">应用层 - 层5 </span><br><span class="line">传输层 - 层4</span><br><span class="line">网络层 - 层3</span><br><span class="line">数据链路层 - 层2</span><br><span class="line">物理层 - 层1</span><br></pre></td></tr></table></figure><p>温馨提示: 为了简化了层次设备，又常常将TCP/IP模型说成四层，即将<code>数据链路层</code>与<code>物理层</code>进行整合为<code>网络接口层</code>。</p><p>扩展文章：(大神之路-起始篇 | 第6章.计算机科学导论之【计算机网络】学习笔记)[<a href="https://mp.weixin.qq.com/s/usJbZHe2Cfaurz6snVQyuA]" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/usJbZHe2Cfaurz6snVQyuA]</a></p><p><br/></p><h4 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h4><p>DNS(Domain Name System) 即域名名称服务：TCP/IP协议族使用唯一定义了该主机和网络之间连接的IP地址，但是为了方便人们记忆通常使用字符串而不是数字化的地址，因此网络需要有一个可以将名称映射到地址的目录系统，DNS的出现正是为了解决此问题。</p><blockquote><p>例如，博主的 blog.weiyigeek.top 博客站点域名，通过如下步骤将主机名词映射到对应的IP地址上。<br>$ ping blog.weiyigeek.top<br>正在 Ping blog.weiyigeek.top [82.156.18.253] 具有 32 字节的数据:<br>来自 82.156.18.253 的回复: 字节=32 时间=51ms TTL=52</p></blockquote><figure class="image-box">                <img src="https://img.weiyigeek.top/2022/8/image-20220913135036968.png" alt="WeiyiGeek.域名解析流程" title="" class="">                <p>WeiyiGeek.域名解析流程</p>            </figure><p>扩展文章:  <a href="https://blog.weiyigeek.top/2019/1-22-511.html">🌐 https://blog.weiyigeek.top/2019/1-22-511.html</a></p><p><br/></p><h4 id="HTTP-HTTPS"><a href="#HTTP-HTTPS" class="headerlink" title="HTTP/HTTPS"></a>HTTP/HTTPS</h4><p><strong>什么是 HTTP/HTTPS 协议？</strong></p><ul><li><p>HTTP协议全称Hyper Text Transfer Protocol-超文本传输协议，位于TCP/IP四层模型当中的应用层。</p><ul><li>HTTP协议通过请求/响应的方式，在客户端和服务端之间进行通信。</li><li>缺点:传输不够安全容易被拦截和篡改(HTTP协议的信息传输完全以明文方式，不做任何加密，相当于是在网络上“裸奔”)容易导致中间人攻击;</li></ul></li><li><p>HTTPS协议全称Hypertext Transfer Protocol Secure，超文本传输安全协议,实际上是在HTTP协议的基础之上增加了SSL安全层（下面介绍的一系列认证流程就是在SSL层中完成）,这是一套使用公钥/私钥机制的加密系统</p><ul><li>保护了交换数据隐私和完整性，提供对网站服务器身份认证的功能，简单来说它就是安全版的 HTTP。</li><li>最新推出的TLS协议是SSL 3.0协议的升级版，和SSL协议的大体原理是相同的(简单的记就是TLS是SSL的升级版本)</li></ul></li></ul><bt><p><strong>HTTP/HTTPS处于TCP/IP层次</strong></p><table><thead><tr><th>TCP/IP层次</th><th>说明</th></tr></thead><tbody><tr><td>应用层(HTTP[HTTPS]/FTP)</td><td>HTTPS在HTTP基础上构建 SSL安全层,经过发展已经推出了TLS协议；</td></tr><tr><td>传输层(TCP/UDP)</td><td>-</td></tr><tr><td>网络层(IP/ARP)</td><td>-</td></tr><tr><td>数据链路层</td><td>-</td></tr></tbody></table><figure class="image-box">                <img src="https://img.weiyigeek.top/2019/1/20190926092153.png" alt="WeiyiGeek.HTTP/HTTPS处于层次" title="" class="">                <p>WeiyiGeek.HTTP/HTTPS处于层次</p>            </figure><p><br></p><p><strong>HTTPS 主要用途</strong></p><ul><li>一是通过证书等信息确认网站的真实性；</li><li>二是建立加密的信息通道；</li><li>三是保证数据内容的完整性。</li></ul><p><br></p><p><strong>HTTPS相比较于HTTP协议的一些关键点</strong></p><ul><li>成本问题:HTTPS要比HTTP更加消耗资源，SSL握手需要更多的数据包，加密解密也需要额外的运算。</li><li>HTTPS的证书需要专门的机构颁发，大机构颁发的证书不是免费的每年都得交几百几千块钱才能申请到证书，当然也可使用Let’sEncrypt进行申请免费证书，缺点是有效期只有90天，博主就是采用此方式给博客站点申请免费证书。</li><li>因为某些颁发证书的机构会滥发证书，甚至会制造假证书，假证书可以用来进行中间人攻击;</li></ul><p>扩展参考: </p><ul><li><p>(HTTPS原理介绍以及证书签名的申请配置)[<a href="https://blog.weiyigeek.top/2019/10-21-10.html]">https://blog.weiyigeek.top/2019/10-21-10.html]</a></p></li><li><p>(Let’sEncrypt快速颁发及自动续签泛域名证书实践指南)[<a href="https://blog.weiyigeek.top/2022/3-11-589.html]">https://blog.weiyigeek.top/2022/3-11-589.html]</a></p></li></ul><hr><h3 id="4-操作系统"><a href="#4-操作系统" class="headerlink" title="4.操作系统"></a>4.操作系统</h3><p>说到操作系统，想必你肯定知道Windows操作系统，但是除了微软的操作系统外，还有苹果电脑的MacOS系统（unix），以及Linux操作系统（包含众多发型版本，例如Debian、CentOS、Ubuntu），我作为一名开发者通常会选择Ubuntu进行开发，别问我为啥不选择苹果电脑（PS: 作者太穷了买不起 ☺），此外我们简单介绍一下Windows与Linux操作系统，我相信大部分的开发者还是常常使用这两大操作系统。</p><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><p>微软操作系统（Microsoft System）是美国微软公司以图形用户界面为基础研发的操作系统，于1983年开始研发，最初的研发目标是在MS-DOS的基础上提供一个多任务的图形用户界面，后续版本则逐渐发展成为主要为个人电脑和服务器用户设计的操作系统，并最终获得了世界个人电脑操作系统的垄断地位。</p><p>微软（Microsoft）自1985年推出Windows 1.0以来，Windows系统经历了十多年风风雨雨。从最初运行在DOS下的windows95操作系windows95操作系统Windows 3.x，到现在风靡全球的Windows 9x、Windows 2000、Windows XP、Windows 2003、Windows vista、Windows 2008 、Windows2012、Win 7、Win 8、Win8 or 8.1 、Win10、乃至当前流行 Windows 11。</p><p><strong>Windows 各版本发售时间</strong></p><table><thead><tr><th><strong>名称</strong></th><th><strong>最新版本</strong></th><th><strong>正式发售日期</strong></th><th><strong>开发代号</strong></th><th><strong>停止支持时间</strong></th><th></th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td><strong>主流</strong></td><td><strong>扩展</strong></td></tr><tr><td><a href="https://baike.baidu.com/item/Windows 1.0/761751" target="_blank" rel="noopener">Windows 1.0</a></td><td>1.01</td><td>1985年11月20日</td><td>Interface Manager</td><td>2001年12月31日</td><td></td></tr><tr><td><a href="https://baike.baidu.com/item/Windows 2.0/762078" target="_blank" rel="noopener">Windows 2.0</a></td><td>2.03</td><td>1987年12月9日</td><td>不适用</td><td>2001年12月31日</td><td></td></tr><tr><td><a href="https://baike.baidu.com/item/Windows 2.1/6577488" target="_blank" rel="noopener">Windows 2.1</a></td><td>2.11</td><td>1988年5月27日</td><td>不适用</td><td>2001年12月31日</td><td></td></tr><tr><td><a href="https://baike.baidu.com/item/Windows 3.0/8734619" target="_blank" rel="noopener">Windows 3.0</a></td><td>3.0</td><td>1990年5月22日</td><td>不适用</td><td>2001年12月31日</td><td></td></tr><tr><td><a href="https://baike.baidu.com/item/Windows 3.1/9033659" target="_blank" rel="noopener">Windows 3.1</a></td><td>3.1</td><td>1992年4月6日</td><td>Janus</td><td>2001年12月31日</td><td></td></tr><tr><td><a href="https://baike.baidu.com/item/Windows For Workgroups 3.1/8260011" target="_blank" rel="noopener">Windows For Workgroups 3.1</a></td><td>3.1</td><td>1992年10月</td><td>Winball、Sparta</td><td>2001年12月31日</td><td></td></tr><tr><td><a href="https://baike.baidu.com/item/Windows NT 3.1/1223887" target="_blank" rel="noopener">Windows NT 3.1</a></td><td>NT 3.1.528</td><td>1993年7月27日</td><td>Razzle</td><td>2000年12月31日</td><td></td></tr><tr><td><a href="https://baike.baidu.com/item/Windows For Workgroups 3.11/884644" target="_blank" rel="noopener">Windows For Workgroups 3.11</a></td><td>3.11.300</td><td>1993年8月11日</td><td>Snowball</td><td>2001年12月31日</td><td></td></tr><tr><td><a href="https://baike.baidu.com/item/Windows 3.2/9033676" target="_blank" rel="noopener">Windows 3.2</a></td><td>3.2.153</td><td>1993年11月22日</td><td>不适用</td><td>2001年12月31日</td><td></td></tr><tr><td><a href="https://baike.baidu.com/item/Windows NT 3.5/8241718" target="_blank" rel="noopener">Windows NT 3.5</a></td><td>NT 3.5.807</td><td>1994年9月21日</td><td>Daytona</td><td>2001年12月31日</td><td></td></tr><tr><td><a href="https://baike.baidu.com/item/Windows NT 3.51/4927553" target="_blank" rel="noopener">Windows NT 3.51</a></td><td>NT 3.51.1057</td><td>1995年5月30日</td><td>Tukwila</td><td>2001年12月31日</td><td></td></tr><tr><td><a href="https://baike.baidu.com/item/Windows 95/757614" target="_blank" rel="noopener">Windows 95</a></td><td>4.0.950</td><td>1995年8月24日</td><td>Chicago、4.0</td><td>2000年12月31日</td><td>2001年12月31日</td></tr><tr><td><a href="https://baike.baidu.com/item/Windows NT 4.0/9033692" target="_blank" rel="noopener">Windows NT 4.0</a></td><td>NT 4.0.1381</td><td>1996年7月31日</td><td>Cairo</td><td>2002年6月30日</td><td>2004年6月30日</td></tr><tr><td><a href="https://baike.baidu.com/item/Windows 98/758579" target="_blank" rel="noopener">Windows 98</a></td><td>4.10.1998</td><td>1998年6月25日</td><td>Memphis、97、4.1</td><td>2002年6月30日</td><td>2006年6月30日</td></tr><tr><td><a href="https://baike.baidu.com/item/Windows 98 SE/311956" target="_blank" rel="noopener">Windows 98 SE</a></td><td>4.10.2222</td><td>1999年5月5日</td><td>不适用</td><td>2002年6月30日</td><td>2006年6月30日</td></tr><tr><td><a href="https://baike.baidu.com/item/Windows 2000/2769068" target="_blank" rel="noopener">Windows 2000</a></td><td>NT 5.0.2195</td><td>2000年2月17日</td><td>NT 5.0</td><td>2005年6月30日</td><td>2010年7月13日</td></tr><tr><td><a href="https://baike.baidu.com/item/Windows Me/759311" target="_blank" rel="noopener">Windows Me</a></td><td>4.90.3000</td><td>2000年9月14日</td><td>Millennium、4.9</td><td>2003年12月31日</td><td>2006年7月11日</td></tr><tr><td><a href="https://baike.baidu.com/item/Windows XP/191927" target="_blank" rel="noopener">Windows XP</a></td><td>NT 5.1.2600</td><td>2001年10月25日</td><td>Whistler</td><td>2009年4月14日</td><td>2014年4月8日</td></tr><tr><td><a href="https://baike.baidu.com/item/Windows XP 64-bit Edition/3062713" target="_blank" rel="noopener">Windows XP 64-bit Edition</a></td><td>NT 5.2.3790</td><td>2003年3月28日</td><td>不适用</td><td>2009年4月14日</td><td>2014年4月8日</td></tr><tr><td><a href="https://baike.baidu.com/item/Windows Server 2003/761146" target="_blank" rel="noopener">Windows Server 2003</a></td><td>NT 5.2.3790</td><td>2003年4月24日</td><td>Whistler Server、Windows .NET Server</td><td>2010年7月13日</td><td>2015年7月14日</td></tr><tr><td><a href="https://baike.baidu.com/item/Windows XP Professional x64 Edition/2922503" target="_blank" rel="noopener">Windows XP Professional x64 Edition</a></td><td>NT 5.2.3790</td><td>2005年4月25日</td><td>不适用</td><td>2009年4月14日</td><td>2014年4月8日</td></tr><tr><td><a href="https://baike.baidu.com/item/Windows Fundamentals for Legacy PCs/9499165" target="_blank" rel="noopener">Windows Fundamentals for Legacy PCs</a></td><td>NT 5.1.2600</td><td>2006年7月8日</td><td>Eiger、Mönch</td><td>2009年4月14日</td><td>2014年4月8日</td></tr><tr><td><a href="https://baike.baidu.com/item/Windows Vista/214535" target="_blank" rel="noopener">Windows Vista</a></td><td>NT 6.0.6003</td><td>2007年1月30日</td><td>Longhorn</td><td>2012年4月10日</td><td>2017年4月11日</td></tr><tr><td><a href="https://baike.baidu.com/item/Windows Home Server/6901233" target="_blank" rel="noopener">Windows Home Server</a></td><td>NT 5.2.4500</td><td>2007年11月4日</td><td>Quattro</td><td>2013年1月8日</td><td></td></tr><tr><td><a href="https://baike.baidu.com/item/Windows Server 2008/4291457" target="_blank" rel="noopener">Windows Server 2008</a></td><td>NT 6.0.6003</td><td>2008年2月27日</td><td>Longhorn Server</td><td>2015年1月13日</td><td>2020年1月14日</td></tr><tr><td><a href="https://baike.baidu.com/item/Windows 7/1083761" target="_blank" rel="noopener">Windows 7</a></td><td>NT 6.1.7601</td><td>2009年10月22日</td><td>Windows 7</td><td>2015年1月13日</td><td>2020年1月14日</td></tr><tr><td><a href="https://baike.baidu.com/item/Windows Server 2008 R2/2212624" target="_blank" rel="noopener">Windows Server 2008 R2</a></td><td>NT 6.1.7601</td><td>2009年10月22日</td><td>不适用</td><td>2015年1月13日</td><td>2020年1月14日</td></tr><tr><td>Windows Home Server 2011</td><td>NT 6.1.8400</td><td>2011年4月6日</td><td>Vail</td><td>2016年4月12日</td><td></td></tr><tr><td><a href="https://baike.baidu.com/item/Windows Server 2012/1484395" target="_blank" rel="noopener">Windows Server 2012</a></td><td>NT 6.2.9200</td><td>2012年9月4日</td><td>Server 8</td><td>2018年10月9日</td><td>2023年1月9日</td></tr><tr><td><a href="https://baike.baidu.com/item/Windows 8/6851933" target="_blank" rel="noopener">Windows 8</a></td><td>NT 6.2.9200</td><td>2012年10月26日</td><td>不适用</td><td>2016年1月12日</td><td></td></tr><tr><td><a href="https://baike.baidu.com/item/Windows 8.1/768457" target="_blank" rel="noopener">Windows 8.1</a></td><td>NT 6.3.9600</td><td>2013年10月17日</td><td>Blue</td><td>2018年1月9日</td><td>2023年1月10日</td></tr><tr><td><a href="https://baike.baidu.com/item/Windows Server 2012 R2/9822854" target="_blank" rel="noopener">Windows Server 2012 R2</a></td><td>NT 6.3.9600</td><td>2013年10月18日</td><td>Server Blue</td><td>2018年10月9日</td><td>2023年1月10日</td></tr><tr><td><a href="https://baike.baidu.com/item/Windows 10/6877791" target="_blank" rel="noopener">Windows 10</a></td><td>NT 10.0.19045</td><td>2015年7月29日</td><td>Threshold、Redstone、Vibranium</td><td>2025年10月14日（不含LTSB/LTSC）</td><td></td></tr><tr><td><a href="https://baike.baidu.com/item/Windows Server 2016/18708757" target="_blank" rel="noopener">Windows Server 2016</a></td><td>NT 10.0.14393</td><td>2016年10月12日</td><td>Redstone</td><td>2022年1月11日</td><td>2027年1月12日</td></tr><tr><td><a href="https://baike.baidu.com/item/Windows Server 2019/24272934" target="_blank" rel="noopener">Windows Server 2019</a></td><td>NT 10.0.17763</td><td>2018年10月2日</td><td>Redstone</td><td>2024年1月9日</td><td>2029年1月9日</td></tr><tr><td><a href="https://baike.baidu.com/item/Windows Server 2022/59326783" target="_blank" rel="noopener">Windows Server 2022</a></td><td>NT 10.0.20348</td><td>2021年8月18日</td><td>Iron</td><td>2026年10月13日</td><td>2031年10月14日</td></tr><tr><td><a href="https://baike.baidu.com/item/Windows 11/57321047" target="_blank" rel="noopener">Windows 11</a></td><td>NT 10.0.22621</td><td>2021年10月4日</td><td>Sun Valley</td><td>2023年10月10日</td><td>2024年10月8日</td></tr></tbody></table><p><br/></p><p><strong>Q: Windows 10版本 <code>business_editions</code>和<code>consumer_editions</code>的区别？</strong></p><blockquote><p>答: 二者都内置专业版不同之处在于：<br>consumer_editions 版本包含：Home(家庭版); Education(教育版) ; Professional(专业版)；<br>business_editions 版本包含：Education(教育版); Enterprise (企业版); Professional(专业版)；</p></blockquote><p>Windows 10 (business editions) VL版 ISO镜像包含以下版本（根据需要选择安装）： </p><ul><li>专业版、企业版、教育版、专业工作站版、专业教育版</li></ul><p>Windows 10 (consumer editions) 零售版 ISO镜像包含以下版本（根据需要选择安装）：</p><ul><li>家庭版、专业版、教育版、家庭单语言版、专业工作站版、专业教育版</li></ul><p><strong>Q: Windows 10 各发行版本区别?</strong></p><ul><li>家庭版(Home)：供家庭用户使用，无法加入Active Directory和Azure AD，不允许远程桌面连接。</li><li>专业版(Professional)：供小型企业使用 在家庭版基础上增加了域账号加入、bitlocker、企业商店等功能。</li><li>企业版(Enterprise)：供中大型企业使用 在专业版基础上增加了DirectAccess，AppLocker等高级企业功能。</li><li>教育版(Education)：供学校使用 (学校职员, 管理人员, 老师和学生) 其功能基本和企业版的一样。</li><li>LTSB版：无Edge浏览器、小娜，无磁贴，可选是否下载和安装补丁，其它版都不能自选补丁。</li><li>N版：带“N”的版本相当于阉割版，移除了Windows Media Player，几乎用不到N版。</li></ul><p>当前购买的计算机默认安装的 Windows 11是Windows 11家庭版版本，但除此之外还有 Windows 11专业版、Windows 11企业版、Windows 11专业工作站版、Windows 11教育版、Windows 11混合现实版  ，延伸版本为Windows 11 22H2（代号为Sun Valley 2，即“太阳谷2”），将于2022年9月发布。</p><p><strong>扩展阅读</strong>:</p><ul><li>Windows10 家庭版(Home) 开启远程桌面支持 ：<a href="https://blog.weiyigeek.top/2019/5-28-566.html">https://blog.weiyigeek.top/2019/5-28-566.html</a></li><li>Windows服务器核心(Server-Core)安装与基础配置使用 : <a href="https://blog.weiyigeek.top/2021/5-26-559.html">https://blog.weiyigeek.top/2021/5-26-559.html</a></li></ul><p><br/></p><h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h4><p>Linux 操作系统诞生于1991 年10 月5 日（这是第一次正式向外公布时间，以MINIX为模版）芬兰大学生 <code>auther：Linus Torvalds</code>，在BBS上发布了一则消息，他以bash/GCC等工具写了一个核心程序，它可以在inter的386机器上面运作，自1994年完成了Linux核心正式版 v1.0 ,并加入了对X Window System的支持，然后1996年发布Linux核心正式版v2.0版本 , 托瓦兹指定企鹅为吉祥物。</p><p>Linux是一个开源的软件，我们可以任意的研究使用、散布、改良的自由。</p><p>Liunx是一个终端（Terminal）也称终端字符设备，是计算机网络中处于网络最外围的设备，主要用于用户信息的输入以及处理结果的输出等。 </p><ul><li>在早期计算机系统中，由于计算机主机昂贵，因此一个主机（IBM大型计算机）一般会配置多个终端，这些终端本身不具备计算能力，仅仅承担信息输入输出的工作，运算和处理均由主机来完成。 </li><li>在个人计算机时代，个人计算机可以运行称为终端仿真器的程序来模仿一个终端的工作。</li></ul><p><strong>主要特点:</strong></p><ul><li>基本思想</li><li>完全免费</li><li>完全兼容POSIX1.0标准</li><li>多用户、多任务</li><li>良好的界面</li><li>支持多种平台</li></ul><p>Linux存在着许多不同的Linux版本，但它们都使用了Linux内核，Linux这个词本身只表示Linux内核，但实际上人们已经习惯了用Linux来形容整个基于Linux内核，并且使用GNU 工程各种工具和数据库的操作系统</p><p>The Linux Kernel Archives（官网）: <a href="https://www.kernel.org/" target="_blank" rel="noopener">https://www.kernel.org/</a></p><p><strong>Linux主要特性：(重要的核心思想 <code>一切皆文件</code> )</strong></p><p>1.严格区分大小写</p><p>2.系统一切内容皆是文件包括硬件设备也是</p><p>3.不靠扩展名来区分文件类型</p><p>4.Windows下的程序不能直接在LInux上面运行,需要移植重新编译;</p><p>5.字符界面的优势：</p><ul><li>优点1：占用系统资源更少</li><li>优点2：减少了出错，被攻击的可能性.</li></ul><ol start="6"><li><p>开源免费</p></li><li><p>完全兼容POSIX1.0标准</p></li></ol><p>8.支撑多用户、多任务</p><p>9.支持界面化与命令行 (terminal终端) 操作</p><p>10.支持多种平台</p><p><br/></p><p><strong>常见的UNIX&amp;LINUX系统分类：</strong></p><ul><li><p>UNIX System V启动方式，启动服务的脚本放在/etc/rc.d/init.d下面。<br>1.1 AIX | 这是一个由IBM公司主持研究的UNIX操作系统版本，它与SVR4兼容。主要是针对IBM的计算机硬件环境对UNIX系统进行了优化和增强。<br>1.2 HP-UX | HP公司的UNIX系统版本，该系统是基于UNIXSystem V第2版开发的。它主要运行在HP的计算机和工作站上。<br>1.3 Solaris | 是Sun公司基于UNIX System V的第2版并结合BSD 4.3开发的。它主要应用在Sun的计算机和工作站上。<br>1.4 OS/2是由微软和IBM公司共同创造，后来由IBM单独开发的一套操作系统 是因为该系统作为IBM第二代个人电脑PS/2系统产品线的理想操作系统引入的。</p></li><li><p>BSD UNIX启动方式，在/etc/rc.d和/usr/local/etc/rc.d中存放启动服务的脚本。<br>2.1 FreeBSD<br>2.1.1 MacOS 是苹果公司为Mac系列产品开发的专属操作系统；macOS是全世界第一个基于FreeBSD系统采用“面向对象操作系统”的全面的操作系统。<br>2.1.2 iOS   是由苹果公司开发的移动操作系统。<br>2.2 NetBSD  是一个免费的，具有高度移植性的 UNIX-like 操作系统，是现行可移植平台最多的操作系统。<br>2.3 OpenBSD  是一个多平台的，基于4.4BSD的类UNIX操作系统，是BSD衍生出的三种免费操作系统（另外两种是NetBSD和FreeBSD）之一，被称为世界上最安全的操作系统l 最初的OpenBSD基于NetBSD源码。</p></li><li><p>UNIX-Like<br>3.1 GNU GNU is Not Unix。<br>3.1.1 Debian GNU/Linux 采用了 Linux Kernel （操作系统的核心），但是大部分基础的操作系统工具都来自于 GNU 工程，因此又称为 Debian GNU/Linux。<br>3.1.2 Ubuntu 是一个以桌面应用为主的开源GNU/Linux操作系统| Ubuntu 是基于Debian GNU/Linux。 </p><ul><li>Ubuntu基于Debian发行版和GNOME桌面环境，而从11.04版起，Ubuntu发行版放弃了Gnome桌面环境，改为Unity。</li></ul><ul><li>ubuntu主要版本有基于Gnome的ubuntu，基于KDE的Kubuntu，基于Xfce的Xubuntu。</li></ul></li><li><p>Linux系统:Linux是一套免费使用和自由传播的类Unix操作系统，是一个基于POSIX和UNIX的多用户、多任务、支持多线程和多CPU的操作系统。<br>4.1 Android 是一种基于Linux的自由及开放源代码的操作系统，主要使用于移动设备，如智能手机和平板电脑，由Google公司和开放手机联盟领导及开发。<br>4.2 Red Hat Enterprise Linux<br>2004年4月30日，Red Hat公司正式停止对Red Hat 9.0版本的支持，标志着Red Hat Linux的免费时代正式结束。从此Red Hat公司不再开发桌面版的Linux发行包，而将全部力量集中在服务器版的开发上，也就是Red HatEnterprise Linux版，2005年10月RHEL4发布。<br>4.2.1 CentOS |  是一个基于Red Hat Linux 提供的可自由使用源代码的企业级Linux发行版本。</p></li></ul><p><br/></p><p><strong>Linux与Windows有什么不同?</strong></p><ul><li>操作系统内核不同：Windows 操作系统内核是NT, 而linux 是 shell</li><li>硬盘文件格式不同: Windows 硬盘文件格式是fat32或NTSF, 而linux 需要的文件格式是xfs/ext4/ext3/ext2或ext。</li><li>用户界面不同：Windows是图形化界面为主。而Linux是字符化界面为主（当然现在也支持桌面）</li><li>硬件配置要求不同：你的硬件如果太新或太旧建议你还是装Windows吧，因为Linux的软件/硬件兼容性还有待提高，但是基本满足常见的硬件，有的大佬还是自己写驱动呢（像我们这样低段位的只有膜拜），</li><li>安全性不同: 众所周知 Windows 恶意软件数量是最多是，Linux由于是字符界面在前几年还是相对安全，但是随着时间推移物联网、嵌入式的发展，越来越多的攻击者盯上了Linux，所以Linux系统的恶意脚本软件数量也在逐年增多，但是还是要比Windows更安全一些（一想到永恒之蓝，我都想将公司仅剩的五台windows服务器给重装为Linux）。</li></ul><p><br/></p><p><strong>补充扩展:</strong></p><ul><li>Linux系统入门学习基础知识：<a href="https://blog.weiyigeek.top/2019/5-1-214.html">https://blog.weiyigeek.top/2019/5-1-214.html</a></li><li>鸟哥的Linux私房菜基础学习篇-3版笔记：<a href="https://blog.weiyigeek.top/2020/8-8-9.html">https://blog.weiyigeek.top/2020/8-8-9.html</a></li></ul><hr><h3 id="5-应用服务端"><a href="#5-应用服务端" class="headerlink" title="5.应用服务端"></a>5.应用服务端</h3><h4 id="服务端-WebServer"><a href="#服务端-WebServer" class="headerlink" title="服务端 WebServer"></a>服务端 WebServer</h4><p>当前常见的 WebServer 有 Nginx、Apache HTTP Server(httpd)、Apache Tomcat等服务软件，但是学习开发之前你可以在你本地机器（Win/Linux）上进行安装，或者直接在腾讯云、阿里云、百度云中购买轻量级云主机进行如下Web Server安装，推荐安装Linux的操作系统（Ubuntu 或者 Debian 或者 CentOS）。</p><p><strong>云服务器价格了解与购买</strong></p><ul><li><a href="https://url.cn/WH4YQNZN" target="_blank" rel="noopener">【腾讯云】云服务器等爆品抢先购，低至4.2元/月</a></li><li><a href="https://www.aliyun.com/daily-act/ecs/activity_selection?userCode=uelj47qf" target="_blank" rel="noopener">【阿里云】云服务器0元试用，首购低至0.9元/月起</a></li></ul><p><br/></p><h5 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h5><p>Nginx (读音”engine x”) 是一个高性能的HTTP负载均衡和反向代理服务器，在2019.3.12被F5硬件负载均衡厂家以6.7亿美金收购了，主要是用于发布网站代码，提供网页信息服务的，用户通过浏览器可以实现页面的访问，也可以是一个IMAP/POP3/SMTP代理服务器；在高连接并发的情况下Nginx是Apache服务器不错的替代品,其特点是占有内存少，并发能力强（在同类型的网页服务器中表现较好），Nginx采用C进行编写，不论是系统资源开销还是CPU使用效率都比Perlbal要好很多；</p><p><br/></p><p><strong>主要功能</strong></p><ul><li>负载均衡服务器:用户每次访问都会保证服务器集群中的每个服务器压力趋于平衡，分担了服务器压力，避免了服务器崩溃的情况（nginx会给你分配服务器压力小的去访问）;</li><li>HTTP代理服务器对外进行服务:通过第三方服务器访问内部服务器集群的内容，但是我们并不知道是哪一台服务器提供的内容;</li><li>动态网页与静态网页资源相互分离以提高网站的整体性能;</li></ul><p><br/></p><p><strong>工具特点</strong></p><ul><li>安装启用简单以及跨平台,配置文件非常简洁（还能够支持perl语法）, 并且Bugs非常少的服务器性能优秀稳定，能够在升级情况下不间断服务</li><li>提供反向代理(代理转发功能)、负载均衡、WEB服务器(处理静态文件)和支持7层负载均衡和故障隔离等功能</li><li>Nginx 采用C进行编写内存占有少,使用更少的资源，稳定性高等优势，并且依靠并发能力强，丰富的模块库以及友好灵活的配置而闻名(具有高性能、轻量级、内存消耗少，强大的负载均衡能力等优势。)</li><li>由于它的内存占用少（一个worker进程只占用10-12M内存），启动极快，高并发能力强(5w/s)-相当于Apache WEB整体性能的5-10倍，在互联网项目中广泛应用。</li></ul><p>总结：就是Nginx支持 IO多路复用（多线程）， 轻量级 ， 功能模块少，代码模块化，并发处理能力强。</p><p>扩展参考文章: (Nginx学习之路汇总)[<a href="https://blog.weiyigeek.top/2018/1-1-1.html#Nginx%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%E6%B1%87%E6%80%BB]">https://blog.weiyigeek.top/2018/1-1-1.html#Nginx%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%E6%B1%87%E6%80%BB]</a></p><p><br/></p><h5 id="Apache-HTTP-Server"><a href="#Apache-HTTP-Server" class="headerlink" title="Apache HTTP Server"></a>Apache HTTP Server</h5><p>Apache HTTP服务器是一个功能强大、高效且可扩展的web服务器。</p><p>Apache起初由伊利诺伊大学香槟分校的国家超级电脑应用中心（NCSA）开发，此后Apache Httpd被开放源代码团体的成员不断的发展和加强，从上个世纪90年代开始它的市场占有率就超过了50%。</p><p>如今虽然它的使用率有些下降但是仍是世界使用排名第一的 Web 服务器软件，它可以运行在几乎所有广泛使用的计算机平台上，由于其跨平台和安全性被广泛使用，是最流行的 Web服务器端软件之一。</p><p><strong>扩展知识：</strong>四种服务器概念与区别。</p><p>从概念上讲：HTTP服务器=WEB服务器、应用程序服务器、应用容器、有何区别？</p><ul><li>Web服务器是提供WWW服务的程序;</li><li>Web容器是提供给开发者的框架;</li><li>Web应用程序服务器内容丰富得多，既可用各厂商通常遵循一定的工业标准并自定义扩展功能而成，也可以利用开源组件轻量级拼装打造;</li><li>反向代理服务器在企业级应用中表现突出，具有解决集中式安全，负载均衡等等优点。</li><li>中间件是为应用程序提供容器和服务;</li></ul><p>如今这四个概念的边界越来模糊，看看这个表就知道了：</p><table><thead><tr><th>软件名词</th><th>是否Web服务器</th><th>是否Web容器</th><th>是否Web应用服务器</th><th>是否能反向代理</th><th>公司</th></tr></thead><tbody><tr><td>II</td><td>是</td><td>是</td><td>0</td><td>是</td><td>微软公司</td></tr></tbody></table><p>Nginx     |是 | 0 | |是 | 0|<br>Apache |是 | 0 | |是 | Sun公司 0<br>Http.sys|是 | 0 | |是 | 0 |<br>Tomcat |是 |是| 0 | 0 | Apache开源软件组织|<br>Jetty     |是 |是| 0 |  0|  0 |<br>WebSphere|是|是|是| 0 | IBM公司|<br>WebLogic |是|是|是| 0 | BEA公司|<br>JBossAS |是|是|是| 0 | 红帽公司|<br>Kerstrel |是|是？| 0 | 0 |</p><p>扩展文章参考：</p><ul><li>(Apache安装与安全配置详细)[ <a href="https://blog.weiyigeek.top/2019/8-19-118.html">https://blog.weiyigeek.top/2019/8-19-118.html</a> ]</li><li>(运维之LNMP环境安装与配置)[ <a href="https://blog.weiyigeek.top/2019/6-1-120.html">https://blog.weiyigeek.top/2019/6-1-120.html</a> ]</li></ul><p><br/></p><h4 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h4><p><strong>Q:什么是CDN?</strong></p><blockquote><p>A: CDN的全称是 <code>Content Delivery Network</code> 即内容分发网络(互联网世界的物流服务)。是建立并覆盖在承载网之上，由分布在不同区域的边缘节点服务器群组成的分布式网络, 它可以帮助分担源站压力，避免网络拥塞，确保在不同区域、不同场景下加速网站内容的分发，提高资源访问速度。<br>简单的说：其通过广泛的网络节点分布，提供快速、稳定、安全、可编程的全球内容分发加速服务，支持将网站(动态、静态)、音视频、下载等内容分发至接近用户的节点。 系统将源站内容分发至最接近用户的边缘节点之上, 使用户可就近取得所需内容，提高用户访问的响应速度和成功率。</p></blockquote><p><strong>Q: 为啥要使用CDN?</strong></p><blockquote><p>答: 例如阿里云为直播行业提供了边缘节点服务<code>（ENS-最主要的技术就是CDN）</code>,基于阿里云ENS可以轻松地将业务模块放到边缘运行，在主播的推流时，实现就近节点进行转码和分发，同时支持了高并发实时弹幕的边缘分发。在获得网络低时延的同时，减少了对中心的压力，节省了30%以上的中心带宽成本，并且实现了边缘节点网络连接小于5毫秒延时，提升了主播上行质量，以及用户成功连接占比等数指标，有效提升了用户观看体验;</p></blockquote><p><br/></p><p><strong>CDN 原理</strong><br>描述: 我们可以将CDN比作天猫超市与菜鸟在全国各地建了本地仓库,当用户购买直营的东西的时候(<code>不在是跨区配送而是同城配送</code>),所以下单购买后，由最近的仓发货就近配送，用户购买的体验明显好太多了;</p><p>其实我们在浏览网络的时候其实就和以上这个过程十分相似，我们访问一个网站页面的时候，会向服务器请求很多网络资源，包括<code>各种图片、声音、影片、文字</code>（通常为前端信息）等信息。所以就像天猫超市把货物提前存储在菜鸟建设在全国各地的本地仓库来减少物流时间一样，网站也可以<code>预先把内容分发至全国各地的加速节点</code>。这样用户就可以<code>就近获取所需内容，避免网络拥堵、地域、运营商等因素带来的访问延迟问题</code>，有效提升下载速度、降低响应时间，提供流畅的用户体验。</p><figure class="image-box">                <img src="https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190823142255.png" alt="WeiyiGeek.CDN原理图" title="" class="">                <p>WeiyiGeek.CDN原理图</p>            </figure><p><br/></p><p><strong>CDN优缺点</strong><br>答:您总是希望网页可以尽可能地快，您希望页面的容量尽可能地小，同时您希望浏览器尽可能多地进行缓存这就需要使用到CDN的内容分发网络。就像前面提到的”全国仓配网络”一样，解决了因分布、带宽、服务器性能带来的访问延迟问题，适用于站点加速、点播、直播等场景。<br>优点: </p><ul><li>1.使用户可就近取得所需内容，<code>解决 Internet网络拥挤的状况，提高用户访问网站的响应速度和成功率</code>。</li><li>2.电信运营商: CDN技术消除了不同运营商之间互联的瓶颈造成的影响，实现了跨运营商的网络加速，保证不同网络中的用户都能得到良好的访问质量;</li><li>3.冗余机制: 广泛分布的CDN节点加上节点之间的智能冗余机制，可以有效地预防黑客入侵以及降低各种DDoS攻击对网站的影响，同时保证较好的服务质量</li><li>4.分担源站压力，避免网络拥塞</li></ul><hr><h3 id="6-服务端语言"><a href="#6-服务端语言" class="headerlink" title="6.服务端语言"></a>6.服务端语言</h3><p>作为一名前端开发者，应该对后端语言有个简单了解，并且现在前端工程师使用node也能写后端程序，所以说针对前端开发者来说可是好事（优势），因为懂后端的不一定懂（会）前端，但由于项目的需求以及贴近团队的开发项目，你只能配合后端同事完成某一项业务功能，此时你便需要针对后端语言有个简单了解。 </p><p>如果说你想成为全栈那么，如下后端语言是你必学或者必须了解的。</p><h4 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h4><p>最好学的后端语言没有之一，所以也被戏称【最好的编程语言】。</p><p><strong>Q:什么是PHP?</strong></p><p>PHP (<code>Hypertext Preprocessor</code> 缩写) 超级文本预处理器，PHP 是一种创建动态交互性站点的服务器端脚本语言。</p><p><br/></p><p><strong>PHP发展历史简述</strong><br>PHP于1994年由<code>Rasmus Lerdorf</code>创建，刚刚开始是Rasmus Lerdorf 为了要维护个人网页而制作的一个简单的用Perl语言编写的程序，后来又用C语言重新编写，包括可以访问数据库，他将这些程序和一些表单直译器整合起来，称为 PHP/FI，PHP/FI 可以和数据库连接，产生简单的动态网页程序。</p><p><br/></p><p><strong>PHP编程语言特点</strong></p><ul><li>1.是开放源代码的，服务器端的脚本语言.</li><li>2.独立于操作系统，可以运行在几乎所有系统(Win/Linux)中（兼容所有操作系统和web服务器）</li><li>3.支持大部分的服务器</li><li>4.支持大量的数据库，例如 MySql、SQL Server、Oracle等</li><li>5.可以创建图像</li><li>6.其他功能在后面的高级技术详细介绍。</li></ul><p><br/></p><p><strong>PHP编程语言能干什么?</strong></p><p>1、生成动态页面内容；<br>2、能够创建、打开、读取、写入、删除以及关闭服务器上的内容文件；<br>3、能够接收表单数据；<br>4、能够发送并取回 cookies；<br>5、能够对(各类)数据库中的数据进行增删改查等操作；<br>6、能够限制用户访问网站中的某些页面；<br>7、语法混合了 C、Java、Perl 以及 PHP 自创新的语法；<br>8、处理 XML 文件；<br>9、会话控制Session Cookies；<br>10、开发客户端图形界面（GUI）程序</p><p><br/></p><p>在实践使用中,可根据自己的需要在HTML文件中像这样开启或关闭PHP模式，通常也是将PHP语言嵌入HTML中进行一起使用，例如CSS、JavaScript、PHP、ASP以及JSP等。</p><p><strong>简单示例:</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt; <span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="string">"PHP 语言标记的使用"</span> <span class="meta">?&gt;</span> &lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body <span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="string">'bgcolor="#cccccc"'</span> <span class="meta">?&gt;</span> &gt;</span><br><span class="line">    <span class="meta">&lt;?php</span>  <span class="keyword">if</span>($expression)&#123;<span class="meta">?&gt;</span></span><br><span class="line">      &lt;p align=<span class="string">" &lt;?php echo 'center' ?&gt; "</span>&gt;This is <span class="keyword">true</span>&lt;/p&gt;</span><br><span class="line">    <span class="meta">&lt;?php</span>  &#125;<span class="keyword">else</span>&#123; <span class="meta">?&gt;</span></span><br><span class="line">      &lt;p&gt;This is <span class="keyword">false</span>&lt;/p&gt;</span><br><span class="line">    <span class="meta">&lt;?php</span>  &#125; <span class="meta">?&gt;</span></span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p><br/></p><h4 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h4><p>Java作为当前后端开发最火(hot)的语言，被广泛应用在各大企业项目开发中，所以在前几年就业还是比较广阔的，但是随着像Go、Node.js编程语言的不断发展，越来越多的岗位招聘偏向于Go(毕竟有Google背书不担心市场)，后面一章节会有简单介绍，此处还是回归正题。</p><p>Java 是由Sun Microsystems公司于1995年5月推出的高级程序设计语言(Java面向对象程序设计语言和Java平台的总称)，其作者是詹姆斯.高斯林(James Gosling)，他也被誉为是JAVA之父,  他是与SUN公司的<code>Patrick/Naughton/Mike Sheridan</code>等人合作开发的一套语言，最开始叫”Oak”后改名为JAVA;</p><p><strong>Java语言特性：</strong></p><ul><li><p>开源、免费、纯面向对象。</p><ul><li>开源：开发源代码,SUN公司编写的java类库的源代码普通程序员能看到。</li><li>免费</li><li>面向对象：提供类/接口和继承等面向对象的特性(只支持类之间的单继承,但支持接口之间的多继承(extends),并支持类与接口之间的实现机制(关键字为implements),全面支持动态绑定;</li></ul></li><li><p>简单性：</p><ul><li>与C语言和C++语言很接近很容易学习和使用</li><li>丢弃了C++中(操作符重载、多继承、自动的强制类型转换)</li><li>特别地Java语言不使用指针,而是引用)并提供了自动的废料收集,使得程序员不必为内存管理而担忧。</li></ul></li><li><p>健壮性：</p><ul><li>Java的强类型机制、异常处理、垃圾的自动收集等是Java程序健壮性的重要保证(丢弃指针pointer),Java的安全检查机制使得Java更具健壮性。</li></ul></li><li><p>动态的</p><ul><li>设计目标之一是适应于动态变化的环境。Java程序需要的类能够动态地被载入到运行环境,也可以通过网络来载入所需要的类。这也有利于软件的升级,另外Java中的类有一个运行时刻的表示,能进行运行时刻的类型检查。</li></ul></li><li><p>分布式的</p><ul><li>支持Internet应用的开发,在基本的Java应用编程接口中有一个网络应用编程接口(java net),它提供了用于网络应用编程的类库,包括URL、URLConnection、Socket、ServerSocket等,JAVARMI(远程方法激活)机制也是开发分布式应用的重要手段</li></ul></li><li><p>安全的</p><ul><li>提供了一个安全机制以防恶意代码的攻击,Java对通过网络下载的类具有一个安全防范机制(类ClassLoader),如分配不同的名字空间以防替代本地的同名类、字节代码检查,并提供安全管理机制(类SecurityManager)让Java应用设置安全哨兵。</li></ul></li><li><p>高性能的</p><ul><li>与解释型的高级脚本语言相比,Java的确是高性能的。事实上Java的运行速度随着JIT(Just-In-Time)编译器技术的发展越来越接近于C++。</li></ul></li><li><p>体系结构中立</p><ul><li>Java程序(后缀为java的文件)在Java平台上被编译为体系结构中立的字节码格式(后缀为class的文件),然后可以在实现这个Java平台的任何系统中运行。这种途径适合于异构的网络环境和软件的分发。</li></ul></li><li><p>java支持多线程</p><ul><li>Java语言支持多个线程的同时执行,并提供多线程之间的同步机制(关键字为synchronized)</li><li>线程是一种特殊的对象,它必须由Thread类或其子(孙)类来创建；</li><li>通常有两种方法来创建线程：其一,使用型构为Thread(Runnable)的构造子将一个实现了Runnable接口的对象包装成一个线程。</li><li>其二,从Thread类派生出子类并重写run方法,使用该子类创建的对象即为线程。</li><li>值得注意的是Thread类已经实现了Runnable接口,因此任何一个线程均有它的run方法,而run方法中包含了线程所要运行的代码。线程的活动由一组方法来控制。</li></ul></li><li><p>java自动垃圾回收机制即GC机制:【java运行过程当中有一个“垃圾回收器”一直在守护者。】</p></li></ul><ul><li>跨平台/可移植 <ul><li>跨平台：依靠JVM机制【java程序不和操作系统交互,java程序运行在JVM中,JVM和操作系统交互】</li><li>Java程序并没有和底层的操作系统直接交互,java程序实际上运行在jvm当中,JVM屏蔽了操作系统之间的差异。不同的操作系统中必须安装不同版本的JVM。</li><li>可移植：来源于体系结构中立性,Java严格规定了各个基本数据类型的长度；Java程序在Java平台上被编译为字节码格式,使得可以在java平台上的任何系统种运行;</li><li>Java系统本身也具有很强的可移植性,Java编译器是用Java实现的,Java的运行环境是用ANSI C实现的。</li><li>但是为了达到可移植,必须提前在操作系统中安装JRE,JRE有了之后才会有JVM。</li></ul></li></ul><figure class="image-box">                <img src="https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190419143704.png" alt="WeiyiGeek.JAVA跨平台" title="" class="">                <p>WeiyiGeek.JAVA跨平台</p>            </figure><p>总结：因为有了JVM所以同一个JAVA程序在三个不同的操作系统中都可以执行;这才使JAVA程序具有跨平台性与良好的移植性;</p><p><br/></p><p><strong>我的第一个JAVA程序</strong><br>创建文件 HelloWorld.java (文件名与类名尽量是一致), 代码如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 注：String args[] 与 String[] args 都可以执行，但推荐使用 String[] args，这样可以避免歧义和误读。</span></span><br><span class="line"><span class="comment">// 修饰符  类   类名   （注意要一致）</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line">    <span class="comment">//主方法相当于C中的main函数,入口;</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       System.out.println(<span class="string">"Hello World"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//采用jdk目录中javac/java进行编译然后执行（下面为了防止乱码在编译成为字节码文件的时候采用utf8编码）   </span></span><br><span class="line"><span class="comment">// 1.该命令用于将 java 源文件编译为 class 字节码文件，会出现一个 HelloWorld.class 的文件</span></span><br><span class="line">&gt; javac -encoding UTF-<span class="number">8</span> HelloWorld.java  </span><br><span class="line"><span class="comment">// 2.java 后面跟着的是java文件中的类名(注意：java命令后面不要加.class)</span></span><br><span class="line">&gt; java HelloWorld   </span><br><span class="line">Hello World</span><br><span class="line">Hello World</span><br></pre></td></tr></table></figure><br><figure class="image-box">                <img src="https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190419155103.png" alt="WeiyiGeek.HelloWorld" title="" class="">                <p>WeiyiGeek.HelloWorld</p>            </figure></p><p><strong>Q:什么是类名？</strong><br>答：假设硬盘上有一个文件叫做Hello.class，那么类名就叫做 Hello，此时在命令行终端中我们可以利用java进行直接执行;</p><p><br/></p><h4 id="Golang"><a href="#Golang" class="headerlink" title="Golang"></a>Golang</h4><p><strong>为什么你应该学习Go语言？</strong></p><blockquote><p>世界上已经有太多太多的编程语言了，为什么又出来一个Go语言？<br>官方介绍: Go是一种开源编程语言，它使构建简单、可靠和高效的软件变得容易。<br>因为其编程语言的良好特性和Google公司强势推广以及以Go语言相关开源项目火爆, 比如 <code>etcd、kubernetes、Prometheus</code> 等项目, 其次是硬件性能提高则我们需要高性能的软件.</p></blockquote><p>参考 Golang 编程语言排行榜 : <a href="https://www.tiobe.com/tiobe-index" target="_blank" rel="noopener">https://www.tiobe.com/tiobe-index</a></p><figure class="image-box">                <img src="https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2021/5/20210728174737.png" alt="WeiyiGeek.2010-2021年Go编程趋势" title="" class="">                <p>WeiyiGeek.2010-2021年Go编程趋势</p>            </figure><p><strong>What,什么是Go语言?</strong></p><p>描述:<code>Go（又称Golang[4]-Google-go-language）</code>是Google开发的一种<code>静态强类型</code>、<code>编译型</code>、<code>并发型</code>，并具有<code>垃圾回收功能、优良的并行设计</code>的编程语言, 其被誉为21世纪的C语言, 因为其Go的语法接近C语言，但对于变量的声明有所不同。</p><p>Go的并行计算模型是<code>以东尼·霍尔</code>的通信顺序进程（CSP）为基础，采取类似模型的其他语言包括<code>Occam</code>和<code>Limbo</code>，Go也具有这个模型的特征，比如通道传输，通过<code>goroutine</code>和通道等并行构造可以建造线程池和管道等。</p><ul><li><p>(1) 与 <code>C++</code> 相比 Go 并不包括如<code>枚举、异常处理、继承、泛型、断言、虚函数</code>等功能，但增加了<code>切片(Slice) 型、并发、管道、垃圾回收功能、接口等</code>特性的语言级支持以及支持垃圾回收功能。</p></li><li><p>(2) 不同于 Java，Go原生提供了关联数组（也称为<code>哈希表（Hashes）</code>或<code>字典（Dictionaries）</code>）。 </p></li></ul><p><strong>Go 语言有何特点:</strong></p><ul><li>0.Go语言语法简单易学、代码风格统一<code>(自动格式化)</code>、支持垃圾回收功能、执行性能好、是企业级编程语言。<blockquote><p>Go 语言简单易学，学习曲线平缓，不需要像 C/C++ 语言动辄需要两到三年的学习期。<br>Go 语言的风格类似于C语言。其语法在C语言的基础上进行了大幅的简化，去掉了不需要的表达式括号，循环也只有 for 一种表示方法，就可以实现数值、键值等各种遍历。<br>Go 语言提供了一套格式化工具<code>go fmt</code>, 在开发环境或者编辑器在保存时，都会使用格式化工具进行修改代码的格式化，这样就保证了不同开发者提交的代码都是统一的格式。</p></blockquote></li></ul><p><br/></p><ul><li><p>1.Go语言让你用写Python代码的开发效率编写C语言代码 (<code>编程范型: 编译型，可平行化，结构化，指令式</code>)。</p></li><li><p>2.Go语言从底层原生支持并发，无须第三方库、开发者的编程技巧和开发经验。</p><blockquote><p>Go语言的并发是基于 goroutine（<code>类似于线程，但并非线程</code>） 的。可以将 goroutine 理解为一种虚拟线程。Go 语言运行时会参与调度 goroutine，并将 goroutine 合理地分配到每个 CPU 中，最大限度地使用CPU性能。开启一个goroutine的消耗非常小（<code>大约2KB的内存</code>），你可以轻松创建数百万个goroutine。<br>goroutine的特点:</p></blockquote></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* 具有可增长的分段堆栈。这意味着它们只在需要时才会使用更多内存。</span><br><span class="line">* 启动时间比线程快。</span><br><span class="line">* 原生支持利用channel安全地进行通信。</span><br><span class="line">* 共享数据结构时无需使用互斥锁。</span><br></pre></td></tr></table></figure><ul><li>3.Go语言性能强悍，同<code>C,C++</code>一样Go语言也是编译型的语言，它直接将人类可读的代码编译成了处理器可以直接运行的二进制文件，执行效率更高，性能更好。 </li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">解释型语言：Shell 语言、Python 语言、PHP 语言</span><br><span class="line">编译型语言：C 语言、C++ 语言、Go 语言</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2021/5/20210728220116.png" alt="WeiyiGeek.编译型的语言" title="" class="">                <p>WeiyiGeek.编译型的语言</p>            </figure><p>由下图可以看出，Go 语言在性能上更接近于 Java 语言，虽然在某些测试用例上不如经过多年优化的 Java 语言，但毕竟 Java 语言已经经历了多年的积累和优化。</p><p>我坚信Go 语言在未来的版本中会通过不断的版本优化提高单核运行性能。</p><figure class="image-box">                <img src="https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2021/5/20210728220435.png" alt="WeiyiGeek.常见编程语言运行性能比较" title="" class="">                <p>WeiyiGeek.常见编程语言运行性能比较</p>            </figure><p>数据来源：<a href="https://benchmarksgame-team.pages.debian.net/benchmarksgame/" target="_blank" rel="noopener">https://benchmarksgame-team.pages.debian.net/benchmarksgame/</a></p><p><strong>Linux下环境安装与牛刀小试</strong></p><p>如果不是要在Linux平台敲go代码就不需要在Linux平台安装Go，我们开发机上写好的go代码只需要跨平台编译（详见文章末尾的跨平台编译）好之后就可以拷贝到Linux服务器上运行了，这也是go程序跨平台易部署的优势。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.下载二进制源码包并将将下载的源码包解压至 /usr/local目录</span></span><br><span class="line">wget https://dl.google.com/go/go1.16.6.linux-amd64.tar.gz</span><br><span class="line">tar -C /usr/<span class="built_in">local</span> -xzf go1.16.6.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.将 /usr/local/go/bin 目录添加至PATH环境变量</span></span><br><span class="line"><span class="comment">#在/root/.profile进行添加</span></span><br><span class="line"><span class="built_in">export</span> GOROOT=/usr/<span class="built_in">local</span>/go  <span class="comment"># 安装目录</span></span><br><span class="line"><span class="comment">#GOROOT 第三方包的安装包路径</span></span><br><span class="line"><span class="built_in">export</span> GOPATH=/home/go/      <span class="comment"># 项目路径一般指向src</span></span><br><span class="line"><span class="comment">#需要BIN目录和GOPATH</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$GOROOT</span>/bin</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.验证是否安装成功, 可以打开终端窗口输入go version命令，查看安装的Go版本。</span></span><br><span class="line">go env</span><br><span class="line">go version go version go1.16.6 linux/amd64</span><br><span class="line"></span><br><span class="line"><span class="comment">#4.go语言程序编译运行</span></span><br><span class="line">package main</span><br><span class="line">import <span class="string">"fmt"</span></span><br><span class="line">func <span class="function"><span class="title">main</span></span>() &#123;</span><br><span class="line">   fmt.Println(<span class="string">"Hello, World!"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#5.编译运行hello.go</span></span><br><span class="line">go build hello.go</span><br><span class="line">go run hello.go &amp;&amp; ./hello</span><br></pre></td></tr></table></figure><br><figure class="image-box">                <img src="https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/1/20200423130326.png" alt="WeiyiGeek.Go-Binary" title="" class="">                <p>WeiyiGeek.Go-Binary</p>            </figure></p><hr><h3 id="7-数据库"><a href="#7-数据库" class="headerlink" title="7.数据库"></a>7.数据库</h3><p>前面了解常用的后端开发语言，本节也来简单了解一下常用的数据库存储软件，作为运维打交道最多的必不可少的就是数据库，当前企业中最常用的数据库（包含关系型与非关系型）有<a href="https://www.oracle.com" target="_blank" rel="noopener">Oracle</a>、<a href="https://www.mysql.com/" target="_blank" rel="noopener">MySQL</a>、<a href="https://www.microsoft.com/zh-cn/sql-server/sql-server-2022" target="_blank" rel="noopener">MsSQL</a>、<a href="https://www.redis.io/" target="_blank" rel="noopener">Redis</a>、<a href="https://www.postgresql.org/" target="_blank" rel="noopener">PostgreSQL</a>等，此时简单介绍前三种数据库。</p><h4 id="Oracle-关系型数据库"><a href="#Oracle-关系型数据库" class="headerlink" title="Oracle  关系型数据库"></a>Oracle  关系型数据库</h4><p>Oracle 数据库(<code>Oracle database,简称 Oracle</code>) 又名<code>Oracle RDBMS</code>是甲骨文公司的一款关系数据.</p><p>Oracle 数据库产品为客户提供成本优化的高性能版 Oracle 数据库、全球领先的融合多模型数据库管理系统以及 In-memory、NoSQL 和 MySQL 数据库。客户可以在本地部署环境中通过 Oracle 公有云本地化解决方案使用 Oracle 自治数据库，也可以在 Oracle 云基础设施中使用 Oracle 自治数据库，从而简化关系数据库环境并减少管理工作量。</p><p>数据库库管理系统(RDBMS), 并且由于 Oracle 实现面向对象特性（例如用户定义类型、继承和多态）的 RDBMS 称为<code>对象关系数据库管理系统 (ORDBMS)</code>, Oracle 数据库已<code>将关系模型扩展为对象关系模型</code>，从而可以在关系数据库中存储复杂的业务模型。</p><p>Oracle 数据库它是在关系型数据库领域中一直处于领先地位的产品，它可在本地环境和云端提供市场领先的性能、可扩展性、可靠性和安全性,可以说Oracle数据库系统是目前世界上流行的关系数据库管理系统。</p><p>Oracle 数据库系统可移植性好、使用方便、功能强,适用于各类大、中、小、微机环境 ,它是一种高效率、可靠性好的适应高吞吐量的数据库解决方案。</p><p>Tips ： 当下(<code>2021年9月23日 17:16:05</code>)最新的长期支持版 <code>Oracle Database 19c</code> 拥有超高水平的版本稳定性以及超长的支持和错误修复支持周期，可为您的应用提供一个超级稳定的平台。</p><p>Tips : Oracle 数据库技术官网站点 (<a href="https://www.oracle.com/cn/database/technologies/" target="_blank" rel="noopener">https://www.oracle.com/cn/database/technologies/</a>)</p><p><br></p><p><strong>Oracle 数据库多操作平台支持:</strong><br>甲骨文公司的<code>Oracle10g/11g/12c/18c/19c</code>支持常见的操作系统例如:</p><ul><li>Microsoft Windows x86,x86-64</li><li>Linux x86,x86-64</li><li>Apple Mac OS X Server</li><li>Sun Salaris SPARC x86,x86-64</li></ul><p><br></p><p><strong>Oracle 数据库特性:</strong></p><ul><li>高可用性 : 丰富的内置功能和选件，包括 <code>Oracle Active Data Guard</code> 和 <code>Oracle Real Application Clusters</code>，可支持高效扩展和整合客户数据库, 来保护重要客户数据库，大幅提高数据可用性。</li><li>数据库安全性 : <code>借助加密、数据屏蔽、特权用户访问控制、活动监视和审计</code>功能; 降低数据泄露风险，并让客户能够更加轻松地满足合规性要求。</li><li>数据库可管理性 : 通过单一管理仪表盘和一致的管理流程提高企业级数据库的性能和可用性，减少 DBA 的工作量。</li><li>性能与可伸缩性 : 通过一系列强大功能优化延迟，提高吞吐量，满足实时环境和数据中心环境下严格的性能要求。</li></ul><p>博主的Oracle学习之路汇总学习笔记参考: <a href="https://blog.weiyigeek.top/2018/1-1-1.html#Oracle学习之路汇总">https://blog.weiyigeek.top/2018/1-1-1.html#Oracle学习之路汇总</a></p><p><br/></p><h4 id="MySQL-关系型数据库"><a href="#MySQL-关系型数据库" class="headerlink" title="MySQL 关系型数据库"></a>MySQL 关系型数据库</h4><p>MySQL数据库是一款非常受欢迎的开源领域的重要的关系型数据库，由瑞典的MySQL AB公司开发，Mysql数据库现属于ORACLE公司，使的自身的商业数据库与开源数据库在市场上占有的份额都是跃居第一的位置，这时MySQL的主要开发者Michael widenius ，跳出来建立了一个MySQL分支数据库这就是MariaDB的诞生与发展，来防止MySQL闭源的潜在危险；</p><p>MySQL属于传统关系数据库，<em>开放式的架构使得用户选择性很强，社区开发维护人数众多，功能稳定，性能卓越，且在准寻GPL协议的前体下，可以免费的修改使用</em>，因此也为MySQL的推广带来了更多的便利；</p><p>MySQL是一种关系型数据库管理系统(RDBMS)，关系型数据库的特点是将数据保存在不同的表中，在将这些表放入不同的数据库中，而不是将所有数据统一放在一个大仓库里．这样的设计增加了 <em>MySQL 的读取速度，灵活性可管理性也得到了很大提高</em> ，访问以及管理 MysQL 数据库的最常用标准化语言为 SQL 结构化杳询语言。</p><p><em>Q:为什么选择MySQL数据库？</em></p><ul><li>1) 性能卓越，服务稳定，很少出现异常宕机（dang）</li><li>2) 开发源代码且无版权制约，自主性及使用成本低；</li><li>3) 历史悠久，社区活跃，遇到问题能很快解决；</li><li>4) 软件体积小，安装简单，并且易于维护，安装及维护成本低</li><li>5) 知名度高，企业非常喜欢直接用之，LAMP/LEMP流行架构；</li><li>6) 跨平台运行，提供各种API接口，支持多种开发语法PHP/JSP/ASP，主要是PHP语言；</li></ul><p>博主的MySQL学习之路汇总学习笔记参考: <a href="https://blog.weiyigeek.top/2018/1-1-1.html#MySQL学习之路汇总">https://blog.weiyigeek.top/2018/1-1-1.html#MySQL学习之路汇总</a></p><p><br/></p><h4 id="MsSQL-关系型数据库"><a href="#MsSQL-关系型数据库" class="headerlink" title="MsSQL 关系型数据库"></a>MsSQL 关系型数据库</h4><p>MsSQL全称为<code>Microsoft SQL Server</code>，一般简称 MsSQL 或SQL Server；它是指微软的SQLServer数据库服务器。它是一个数据库平台，提供数据库的从服务器到终端的完整的解决方案，其中数据库服务器部分，是一个关系型数据库管理系统，用于建立、使用和维护数据库。</p><p>SQL-Server是一个可扩展的、高性能的、为分布式客户机/服务器计算所设计的数据库管理系统，实现了与WindowsNT的有机结合，提供了基于事务的企业级信息管理系统方案。</p><p>当前最新的MsSQL版本为 SQL Server 2022, 以及上一个版本为 SQL Server 2019、SQL Server BI，早期版本有 SQL Server 2017、SQL Server 2016、SQL Server 2008、SQL Server 2005，其中大家熟知常用的SQL Server 2008在当前企业老的业务系统中占比还是挺大了。</p><p><strong>主要特性:</strong></p><p>1) 高性能设计，可充分利用WindowsNT的优势。</p><p>2) 系统管理先进，支持Windows图形化管理工具，支持本地和远程的系统管理和配置。</p><p>3) 强壮的事务处理功能，采用各种方法保证数据的完整性。</p><p>4) 支持对称多处理器结构、存储过程、ODBC，并具有自主的SQL语言。SQLServer以其内置的数据复制功能、强大的管理工具、与Internet的紧密集成和开放的系统结构为广大的用户、开发人员和系统集成商提供了一个出众的数据库平台。</p><p>博主的MsSQL学习之路汇总学习笔记参考: <a href="https://blog.weiyigeek.top/2018/1-1-1.html#MsSQL学习之路汇总">https://blog.weiyigeek.top/2018/1-1-1.html#MsSQL学习之路汇总</a></p><p><br/></p><h4 id="Redis-非关系型数据库"><a href="#Redis-非关系型数据库" class="headerlink" title="Redis 非关系型数据库"></a>Redis 非关系型数据库</h4><p>Redis是一种开源（BSD 许可）内存数据库，使用ANSI C语言编写、内存中数据结构存储，用作数据库、缓存和消息代理。Redis 提供了诸如字符串、散列、列表、集合、带范围查询的排序集合、位图、超级日志、地理空间索引和流等数据结构。</p><p>Redis 内置复制、Lua 脚本、LRU 驱逐、事务和不同级别的磁盘持久化，并通过 <code>Redis Sentinel</code> 和 <code>Redis Cluster</code> 自动分区提供高可用性。</p><p>它通常被称为数据结构服务器它有五种类型值（value）: <code>字符串(String), 哈希(Hash), 列表(list), 集合(sets) 和 有序集合(sorted sets)</code>等类型。</p><p><br/></p><p><strong>Redis 特点</strong></p><ul><li>非关系型数据库， 即Not-OnlySQL（泛指非关系型的数据库），作为关系型数据库的补充。</li><li>支持数据的持久化，可以将内存中的数据保存在磁盘中,重启的时候可以再次加载进行使用。</li><li>不仅仅支持简单的<code>key-value</code>类型的数据,同时还提供list，set，zset，hash等数据结构的存储。</li><li>支持数据的备份即<code>master-slave</code>主从模式的数据备份。 </li></ul><p><br/></p><p><strong>Redis 优势</strong></p><ul><li>是一个开源的 <code>key-value</code> 存储系统,并且性能高体现在IO读写(R&gt;W)</li><li>R是非常轻量级,一个空Redis实例占用的内在只有1M左右,所以不用担心多个Redis实例会额外占用很多内存。</li><li>丰富得数据类型<code>(String/Hash/List/sets/Sorted sets)</code></li><li>所有得操作都是原子性得(要么成功要么失败完全不执行),且多个操作支持事务即原子性(通过MULTI和EXEC指令包起来)</li></ul><p><br/></p><p><strong>Redis 与其他K-V存储异同</strong></p><ul><li>R不是一个普通的键值存储，它实际上是一个数据结构服务器，支持不同类型的值。</li><li>R有更为复杂得数据结构并提供事务处理机制(原子性操作)</li><li>R运行在内存中但是可以持久化到磁盘之中,在对数据集进行高速读写时需要权衡内存(数据量不能大于硬件内存)</li><li>在磁盘格式方面他们是紧凑的以追加的方式产生的,因为他们并不需要进行随机访问</li></ul><p><br></p><p><strong>Redis 应用</strong></p><ul><li>为热点数据加速查询（主要场景）、如热点商品、热点新闻、热点资讯、推广类等提高访问量信息等。</li><li>任务队列、如秒杀、抢购、购票等</li><li>即时信息查询，如各位排行榜、各类网站访问统计、公交到站信息、在线人数信息（聊天室、网站）、设备信号等</li><li>时效性信息控制，如验证码控制，投票控制等</li><li>分布式数据共享，如分布式集群构架中的session分离</li><li>消息队列(通过发布和订阅实现)</li><li>分布式锁</li></ul><p>博主的Redis学习之路汇总学习笔记参考: <a href="https://blog.weiyigeek.top/2018/1-1-1.html#Redis学习之路汇总">https://blog.weiyigeek.top/2018/1-1-1.html#Redis学习之路汇总</a></p><hr>]]></content>
    
    
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;</summary>
    
    
    
    <category term="学习笔记" scheme="https://blog.weiyigeek.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="前端学习" scheme="https://blog.weiyigeek.top/tags/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="全栈学习" scheme="https://blog.weiyigeek.top/tags/%E5%85%A8%E6%A0%88%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>设计制图/AutoCAD/学习中</title>
    <link href="https://blog.weiyigeek.top/2023/2-14-index.html"/>
    <id>https://blog.weiyigeek.top/2023/2-14-index.html</id>
    <published>2023-02-14T04:42:54.962Z</published>
    <updated>2023-02-14T04:42:54.962Z</updated>
    
    <content type="html"><![CDATA[<p>op =&gt; 打开选项卡</p><p>平面设置不需要三维，三维建模-&gt; 去选掉 Viewcub 与 UCS 图标</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;op =&amp;gt; 打开选项卡&lt;/p&gt;
&lt;p&gt;平面设置不需要三维，三维建模-&amp;gt; 去选掉 Viewcub 与 UCS 图标&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>虚拟云容/云容器/Containerd/5</title>
    <link href="https://blog.weiyigeek.top/2023/2-1-index.html"/>
    <id>https://blog.weiyigeek.top/2023/2-1-index.html</id>
    <published>2023-02-01T09:39:33.607Z</published>
    <updated>2023-02-01T09:39:33.607Z</updated>
    
    <content type="html"><![CDATA[<p>前面利用 serviceaccount 与 imagePullSecrets 相绑定，此处为了验证镜像拉取 Secret 已经被添加到 Pod 规约, 现在在当前命名空间中创建使用默认服务账号的新 Pod 时，新 Pod 会自动设置其<code>.spec.imagePullSecrets</code>字段：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl run nginx --image=nginx --restart=Never</span><br><span class="line">kubectl get pod nginx -o=jsonpath=<span class="string">'&#123;.spec.imagePullSecrets[0].name&#125;&#123;"\n"&#125;'</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;前面利用 serviceaccount 与 imagePullSecrets 相绑定，此处为了验证镜像拉取 Secret 已经被添加到 Pod 规约, 现在在当前命名空间中创建使用默认服务账号的新 Pod 时，新 Pod 会自动设置其&lt;code&gt;.spec.imagePul</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>9.Jenkins实践之连接外部Docker部署的分布式Agent工作节点</title>
    <link href="https://blog.weiyigeek.top/2023/1-31-710.html"/>
    <id>https://blog.weiyigeek.top/2023/1-31-710.html</id>
    <published>2023-01-31T05:34:30.000Z</published>
    <updated>2023-03-13T01:57:03.014Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h2 id="0x00-前言简述"><a href="#0x00-前言简述" class="headerlink" title="0x00 前言简述"></a>0x00 前言简述</h2><p>看过我前面Jenkins学习之路的朋友肯定知道，在Kubenetes中使用Jenkins可以进行动态生成分布式jnlp-slave的agent节点，相比于传统的agent节点来说极大的节约资源。</p><p>但是某一天开发反馈某个项目CICD无法正常进行，作为运维人员（搬砖）立马进入K8S集群，排除安装在集群中的Jenkins的异常问题，排查可知由于K8S集群证书到期导致动态jenkins agent节点无法正常被创建，此时项目又比较紧急。</p><p>遂利用装有Docker的机器，立即使用自行构建的jenkins-jnlp-agent镜像，并在 jenkins 中创建一个固定节点，通过docker运行该镜像并连接到Jenkins，在流水线项目绑定到该节点执行，通过几分钟的时间就快速解决了jenkins agent问题，在项目完成持续集成和交互后，趁着间隙更新Jenkins上配置连接kubernetes apiserver的证书，恢复了动态生成agent节点。</p><p>所以，为了便于自己总结知识，以及有相同需求的看友，遂将jenkins外部agent节点接入以及自行构建jnlp-agent镜像流程进行实践，希望能帮助到大家。</p><p>如果此篇文章对你有用，请您也转发、点赞、在看、给周边的朋友吧!</p><p>温馨提示: 若需要企业 Jenkins Pipeline 流水线脚本的朋友，可以关注【WeiyiGeek】后回复【Jenkins流水线代码】即可下载 <code>Jenkins-Pipeline.groovy</code> 示例文件。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230207170309.png" alt="WeiyiGeek.Jenkins流水线代码图" title="" class="">                <p>WeiyiGeek.Jenkins流水线代码图</p>            </figure><hr><h2 id="0x01-基础环境准备"><a href="#0x01-基础环境准备" class="headerlink" title="0x01 基础环境准备"></a>0x01 基础环境准备</h2><h3 id="1-环境说明"><a href="#1-环境说明" class="headerlink" title="1.环境说明"></a>1.环境说明</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.K8s 集群中安装的 Jenkins </span></span><br><span class="line">~$ kubectl get pod,svc -n devops -l app=jenkins</span><br><span class="line">NAME                           READY   STATUS    RESTARTS   AGE</span><br><span class="line">pod/jenkins-7fc6f4fcf6-glqxj   1/1     Running   0          28h</span><br><span class="line"></span><br><span class="line">NAME              TYPE       CLUSTER-IP       EXTERNAL-IP   PORT(S)                          AGE</span><br><span class="line">service/jenkins   NodePort   10.109.163.223   &lt;none&gt;        8080:30001/TCP,50000:30634/TCP   382d</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.Jenkins 安装版本</span></span><br><span class="line">Jenkins 2.330</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.地址说明</span></span><br><span class="line">Jenkins 面板: http://192.168.12.107:30001/</span><br><span class="line">TCP port <span class="keyword">for</span> inbound agents(Agent 端口): http://192.168.12.107:30634/  ( 内部为 50000，若是在集群中使用则需要将nodePort端口改成，可通过转发的形式 因为K8S默认nodePort范围在 30000-32767 之中)</span><br></pre></td></tr></table></figure><p>温馨提示: 我们需要修改 Jenkins Agent 端口 可以访问 Dashboard 全局安全配置 -&gt; 代理 (TCP port for inbound agents) 指定端口设置为 30634，注意相对应Pod暴露的端口也要一同修改。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl edit deployments.apps -n devops jenkins</span><br><span class="line">  ports:</span><br><span class="line">  - containerPort: 8080</span><br><span class="line">    name: web</span><br><span class="line">    protocol: TCP</span><br><span class="line">  - containerPort: 30634  <span class="comment"># 修改点</span></span><br><span class="line">    name: agent</span><br><span class="line">    protocol: TCP</span><br><span class="line"></span><br><span class="line">$ kubectl edit svc -n devops jenkins</span><br><span class="line">  - name: agent</span><br><span class="line">    nodePort: 30634    </span><br><span class="line">    port: 30634        <span class="comment"># 修改点与 containerPort 要一致。</span></span><br><span class="line">    protocol: TCP:q</span><br><span class="line">    targetPort: agent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证查看 Pod 与 服务是否正常</span></span><br><span class="line">$ kubectl get svc,pod -n devops -l app=jenkins</span><br><span class="line">  NAME              TYPE       CLUSTER-IP       EXTERNAL-IP   PORT(S)                          AGE</span><br><span class="line">  service/jenkins   NodePort   10.109.163.223   &lt;none&gt;        8080:30001/TCP,30634:30634/TCP   382d</span><br><span class="line">  </span><br><span class="line">  NAME                           READY   STATUS    RESTARTS   AGE</span><br><span class="line">  pod/jenkins-856bc9b47f-4t7k5   1/1     Running   0          2m9s</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230202172521.png" alt="WeiyiGeek.Jenkins-inbound agents端口修改图" title="" class="">                <p>WeiyiGeek.Jenkins-inbound agents端口修改图</p>            </figure><p>或者采用如下临时解决办法（下面实践1中采用的是此种方法，正式环境下还是建议使用上面的方法稳定，但是需要更改和注意的事项更多了）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl -n devops port-forward --address 127.0.0.1,192.168.12.107 jenkins-7fc6f4fcf6-glqxj 50000:50000</span><br><span class="line">  <span class="comment"># Forwarding from 127.0.0.1:50000 -&gt; 50000</span></span><br><span class="line">  <span class="comment"># Forwarding from 192.168.12.107:50000 -&gt; 50000</span></span><br><span class="line">  <span class="comment"># Handling connection for 50000</span></span><br><span class="line">  <span class="comment"># Handling connection for 50000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 或者在 jenkins 控制器资源清单中设置 hostNetwork: true</span></span><br></pre></td></tr></table></figure></p><p>温馨提示: 若看友不了解Jenkins持续集成的，或者需要安装实践的，可以参考博主学习【Jenkins学习之路汇总】汇总，关注 <code>WeiyiGeek</code> 公众号回复【<code>jenkins学习之路</code>】即可获得学习资料：</p><p><br/></p><h3 id="2-添加新的Jenkins-agent节点"><a href="#2-添加新的Jenkins-agent节点" class="headerlink" title="2.添加新的Jenkins agent节点"></a>2.添加新的Jenkins agent节点</h3><p>操作步骤如下: Dashboard 系统管理 -&gt; 节点管理 -&gt; 新建节点 -&gt; 按照提示输入如下信息 -&gt; 最后点击保存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基础配置</span></span><br><span class="line">节点名字: docker-jenkins-jnlp</span><br><span class="line">Number of executors (最大执行数): 1~5 </span><br><span class="line">远程工作目录: /home/jenkins/agent</span><br><span class="line">标签: docker-jnlp-1</span><br><span class="line">启动方式: 通过 Java Web 启动代理</span><br><span class="line">可用性: 尽量保持代理在线</span><br><span class="line"></span><br><span class="line"><span class="comment"># 节点属性</span></span><br><span class="line">- 工具位置: 请按照实际情况填写。 </span><br><span class="line">  <span class="comment"># 例如, Docker 配置，名称 Docker ，目录 /var/run/docker.sock</span></span><br><span class="line">- 环境变量:</span><br><span class="line">  <span class="comment"># 例如，键值对列表，键 name 值 weiyigeek</span></span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230202154237.png" alt="WeiyiGeek.新建Docker-agent节点图" title="" class="">                <p>WeiyiGeek.新建Docker-agent节点图</p>            </figure><p>温馨提示: 在点击保存后，我们可以点击此节点，看到其提示节点连接Jenkins的方式如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方式1</span></span><br><span class="line">java -jar agent.jar -jnlpUrl http://192.168.12.107:30001/computer/docker%2Djenkins%2Djnlp/jenkins-agent.jnlp -secret b97b9d1e0cf083f9da5721caa6ebc63f6fe648375bd90cb2c2f484681d887bb7 -workDir <span class="string">"/home/jenkins/agent"</span></span><br><span class="line"></span><br><span class="line">java -Xms512m -Xmx1g -Xss1m  -jar /usr/<span class="built_in">local</span>/bin/agent.jar -jnlpUrl http://192.168.12.107:30001/computer/jenkinsAgentWork1/jenkins-agent.jnlp  -secret 2a789bbbd0193ef576e7b62eb2d205d1d024d0ea7b14f6f79f1cccdd6fb1ed20 -workDir <span class="string">"/home/jenkins/agent"</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方式2</span></span><br><span class="line"><span class="comment"># Run from agent command line, with the secret stored in a file:</span></span><br><span class="line"><span class="built_in">echo</span> b97b9d1e0cf083f9da5721caa6ebc63f6fe648375bd90cb2c2f484681d887bb7 &gt; secret-file</span><br><span class="line">java -jar agent.jar -jnlpUrl http://192.168.12.107:30001/computer/docker%2Djenkins%2Djnlp/jenkins-agent.jnlp -secret @secret-file -workDir <span class="string">"/home/jenkins/agent"</span></span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230206171800.png" alt="WeiyiGeek.节点连接Jenkins的方式图" title="" class="">                <p>WeiyiGeek.节点连接Jenkins的方式图</p>            </figure><p><br/></p><h3 id="3-自行构建Jenkins-Agent镜像-干货"><a href="#3-自行构建Jenkins-Agent镜像-干货" class="headerlink" title="3.自行构建Jenkins Agent镜像(干货)"></a>3.自行构建Jenkins Agent镜像(干货)</h3><p>描述: 在<code>WeiyiGeek</code>微信公众号回复<code>20230206</code>关键字，即可获取最新Jenkins-jnlp镜像构建的Dockerfile及下述相关脚本文件，此处我们自定义的jnlp容器镜像主要实现功能如下: </p><ul><li>用户权限控制(sudo)</li><li>ssh 远程连接</li><li>git 代码版本控制</li><li>docker 容器管理</li><li>kubectl 集群管理</li><li>Java 运行环境</li><li>Maven 运行环境</li><li>NodeJS 环境</li><li>SonarQube 扫描环境</li><li>Gitlab-Release 上传环境</li><li>中文环境支持</li><li>时区更改配置</li><li>自定义工作目录（/home/jenkins/agent）</li></ul><p>温馨提示: 如下操作构建依赖于Docker环境,若你没有安装Docker环境或者不了解的Docker容器的朋友，可以参考博主学习【Docker的系列笔记】汇总，关注 <code>WeiyiGeek</code> 公众号回复【<code>Docker容器学习之路汇总</code>】即可获得学习资料：</p><p><br/></p><p><strong>构建目录</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">~/k8s/jenkins/jnlp-slave$ tree .</span><br><span class="line">.</span><br><span class="line">├── agent.jar  <span class="comment"># Jenkins -&gt; 2.330</span></span><br><span class="line">├── agent.jar.bak</span><br><span class="line">├── apache-maven-3.8.4-bin.tar.gz</span><br><span class="line">├── build</span><br><span class="line">│   └── Dockerfile</span><br><span class="line">├── docker</span><br><span class="line">├── glibc-2.32-r0.apk</span><br><span class="line">├── glibc-bin-2.32-r0.apk</span><br><span class="line">├── glibc-i18n-2.32-r0.apk</span><br><span class="line">├── jdk-8u281-linux-x64.tar.gz</span><br><span class="line">├── jenkins-agent.sh</span><br><span class="line">├── kubectl</span><br><span class="line">├── locale.md</span><br><span class="line">├── release-cli-0.10.0-linux-amd64</span><br><span class="line">├── remoting-4.11.2.jar</span><br><span class="line">├── sgerrand.rsa.pub</span><br><span class="line">└── sonar-scanner-cli-4.5.0.2216-linux.zip</span><br><span class="line"></span><br><span class="line">1 directory, 16 files</span><br></pre></td></tr></table></figure></p><p>温馨提示:  在Jenkins 2.330版本中添加一个新的节点, 即可获取匹配当前版本的 agent.jar (<a href="http://youjenkins-domainname-or-ip/jnlpJars/agent.jar)" target="_blank" rel="noopener">http://youjenkins-domainname-or-ip/jnlpJars/agent.jar)</a>, 或者是在 jenkins 官网 <a href="https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting" target="_blank" rel="noopener">https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting</a> 进行下载;</p><p><br/></p><p><strong>自定义jnlp镜像的 Dockerfile</strong><br>博主自定义jnlp镜像hub地址: <a href="https://hub.docker.com/r/weiyigeek/alpine-jenkins-jnlp" target="_blank" rel="noopener">https://hub.docker.com/r/weiyigeek/alpine-jenkins-jnlp</a> 。</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line">$ cat build/Dockerfile</span><br><span class="line"><span class="comment">#----------------------------------------------------------------------#</span></span><br><span class="line"><span class="comment"># Title: Base in Alpine Images Create Custom Jenkins Kubernetes jnlp Images</span></span><br><span class="line"><span class="comment"># Author: WeiyiGeek</span></span><br><span class="line"><span class="comment"># WebSite: https://weiyigeek.top</span></span><br><span class="line"><span class="comment"># Email: mastr@weiyigeek.top</span></span><br><span class="line"><span class="comment"># Version: v1.12</span></span><br><span class="line"><span class="comment"># Image Version: alpine-3.13.1</span></span><br><span class="line"><span class="comment"># MainFunction:</span></span><br><span class="line"><span class="comment">#   Install ssh-server docker git openssh tzdata curl tar sudo git ca-certificates wget unzip docker zlib nodejs npm jq</span></span><br><span class="line"><span class="comment">#   Install JDK8 Version: 1.8.0_281</span></span><br><span class="line"><span class="comment">#   - https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html</span></span><br><span class="line"><span class="comment">#   - https://github.com/sgerrand/alpine-pkg-glibc/releases/</span></span><br><span class="line"><span class="comment">#   - https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub</span></span><br><span class="line"><span class="comment">#   Install jnlp Version: 4.11.2 (两种方式都可以下载agent)</span></span><br><span class="line"><span class="comment">#   - https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/</span></span><br><span class="line"><span class="comment">#   - http://youjenkins-domainname/jnlpJars/agent.jar</span></span><br><span class="line"><span class="comment">#   Install Maven Version: 3.8.4</span></span><br><span class="line"><span class="comment">#   - https://apache.osuosl.org/maven/maven-3/$&#123;MAVEN_VERSION&#125;/binaries</span></span><br><span class="line"><span class="comment">#   Install SonarqubeScan Version: 4.5.0</span></span><br><span class="line"><span class="comment">#   - https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.5.0.2216-linux.zip</span></span><br><span class="line"><span class="comment">#   Install Gitlab Release Version: 0.10.0</span></span><br><span class="line"><span class="comment">#   - https://gitlab.com/gitlab-org/release-cli/-/releases</span></span><br><span class="line"><span class="comment">#   Install kubernetes cli</span></span><br><span class="line"><span class="comment">#   - kubectl Version: 1.23.1</span></span><br><span class="line"><span class="comment">#   Install docker cli</span></span><br><span class="line"><span class="comment">#   - kubectl Version: 20.10.3</span></span><br><span class="line"><span class="comment"># ChangeLog:</span></span><br><span class="line"><span class="comment"># v1.8  - 增加 docker</span></span><br><span class="line"><span class="comment"># v1.9  - 增加 中文环境</span></span><br><span class="line"><span class="comment"># v1.10 - 增加 node.js 环境支持</span></span><br><span class="line"><span class="comment"># v1.11 - 更新依赖软件版本及其agent.jar版本</span></span><br><span class="line"><span class="comment">#-------------------------------------------------#</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> alpine:<span class="number">3.13</span>.<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">MAINTAINER</span>  Jenkins Custom Work Node Jnlp Container - &lt;master@weiyigeek.top&gt; - WeiyiGeek</span><br><span class="line"></span><br><span class="line"><span class="keyword">ARG</span> USERNAME=jenkins \</span><br><span class="line">    AGENT_WORKDIR=/home/jenkins \</span><br><span class="line">    BASE_DIR=/usr/local  \</span><br><span class="line">    BASE_BIN=/usr/local/bin  \</span><br><span class="line">    BASE_URL=http://<span class="number">192.168</span>.<span class="number">12.107</span>:<span class="number">8080</span>  \</span><br><span class="line">    LOCALE=locale.md \</span><br><span class="line">    JDK_NAME=jdk-<span class="number">8</span>u281-linux-x64   \</span><br><span class="line">    JDK_DIR=/usr/local/jdk1.<span class="number">8.0</span>_281  \</span><br><span class="line">    GLIBC_NAME=glibc-<span class="number">2.32</span>-r0.apk \</span><br><span class="line">    GLIBC_BIN_NAME=glibc-bin-<span class="number">2.32</span>-r0.apk \</span><br><span class="line">    GLIBC_I18N_NAME=glibc-i18n-<span class="number">2.32</span>-r0.apk \</span><br><span class="line">    MAVEN_NAME=apache-maven-<span class="number">3.8</span>.<span class="number">4</span>-bin \</span><br><span class="line">    MAVEN_DIR=/usr/local/apache-maven-<span class="number">3.8</span>.<span class="number">4</span> \</span><br><span class="line">    SONAR_SCANNER_NAME=sonar-scanner-cli-<span class="number">4.5</span>.<span class="number">0.2216</span>-linux \</span><br><span class="line">    SONAR_SCANNER_DIR=/usr/local/sonar-scanner-<span class="number">4.5</span>.<span class="number">0.2216</span>-linux \</span><br><span class="line">    GITLAB_CLI=release-cli-<span class="number">0.10</span>.<span class="number">0</span>-linux-amd64</span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> LANG=en_US.UTF-<span class="number">8</span> \</span><br><span class="line">    LC_ALL=en_US.UTF-<span class="number">8</span> \</span><br><span class="line">    JAVA_HOME=/usr/local/jdk8  \</span><br><span class="line">    JRE_HOME=/usr/local/jdk8/jre \</span><br><span class="line">    MAVEN_HOME=/usr/local/maven \</span><br><span class="line">    MAVEN_RPEO=/home/jenkins/.m2 \</span><br><span class="line">    SONAR_SCANNER_HOME=/usr/local/sonar-scanner \</span><br><span class="line">    NODEJS_MODULES=/usr/lib/node_modules</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用户ROOT切换</span></span><br><span class="line"><span class="keyword">USER</span> root</span><br><span class="line"></span><br><span class="line"><span class="comment"># Shell 命令 - 此种方式极大减少了构建的镜像大小;</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> sed -i <span class="string">'s/dl-cdn.alpinelinux.org/mirror.tuna.tsinghua.edu.cn/g'</span> /etc/apk/repositories \</span></span><br><span class="line"><span class="bash">    &amp;&amp; apk update \</span></span><br><span class="line"><span class="bash">    &amp;&amp; apk add --no-cache openssh tzdata curl tar sudo git ca-certificates wget unzip docker zlib nodejs npm jq \</span></span><br><span class="line"><span class="bash">    &amp;&amp; cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \</span></span><br><span class="line"><span class="bash">    &amp;&amp; chmod 4755 /bin/busybox \</span></span><br><span class="line"><span class="bash">    &amp;&amp; addgroup -g 1000 -S <span class="variable">$&#123;USERNAME&#125;</span> \</span></span><br><span class="line"><span class="bash">    &amp;&amp; adduser <span class="variable">$&#123;USERNAME&#125;</span> -D -g <span class="variable">$&#123;USERNAME&#125;</span> -G root -u 1000 -s /bin/sh \</span></span><br><span class="line"><span class="bash">    &amp;&amp; <span class="built_in">echo</span> <span class="string">"jenkins   ALL=(root) NOPASSWD:ALL"</span> &gt;&gt; /etc/sudoers \</span></span><br><span class="line"><span class="bash">    &amp;&amp; mkdir -p <span class="variable">$&#123;AGENT_WORKDIR&#125;</span>/.ssh <span class="variable">$&#123;AGENT_WORKDIR&#125;</span>/.m2 <span class="variable">$&#123;AGENT_WORKDIR&#125;</span>/agent\</span></span><br><span class="line"><span class="bash">    &amp;&amp; wget -q -O /tmp/<span class="variable">$&#123;GLIBC_NAME&#125;</span> <span class="variable">$&#123;BASE_URL&#125;</span>/<span class="variable">$&#123;GLIBC_NAME&#125;</span> \</span></span><br><span class="line"><span class="bash">    &amp;&amp; wget -q -O /tmp/<span class="variable">$&#123;GLIBC_BIN_NAME&#125;</span> <span class="variable">$&#123;BASE_URL&#125;</span>/<span class="variable">$&#123;GLIBC_BIN_NAME&#125;</span> \</span></span><br><span class="line"><span class="bash">    &amp;&amp; wget -q -O /tmp/<span class="variable">$&#123;GLIBC_I18N_NAME&#125;</span> <span class="variable">$&#123;BASE_URL&#125;</span>/<span class="variable">$&#123;GLIBC_I18N_NAME&#125;</span> \</span></span><br><span class="line"><span class="bash">    &amp;&amp; wget -q -O /etc/apk/keys/sgerrand.rsa.pub <span class="variable">$&#123;BASE_URL&#125;</span>/sgerrand.rsa.pub \</span></span><br><span class="line"><span class="bash">    &amp;&amp; wget -q -O /tmp/<span class="variable">$&#123;LOCALE&#125;</span> <span class="variable">$&#123;BASE_URL&#125;</span>/<span class="variable">$&#123;LOCALE&#125;</span> \</span></span><br><span class="line"><span class="bash">    &amp;&amp; wget -q -O /tmp/<span class="variable">$&#123;JDK_NAME&#125;</span>.tar.gz <span class="variable">$&#123;BASE_URL&#125;</span>/<span class="variable">$&#123;JDK_NAME&#125;</span>.tar.gz \</span></span><br><span class="line"><span class="bash">    &amp;&amp; wget -q -O <span class="variable">$&#123;BASE_BIN&#125;</span>/agent.jar <span class="variable">$&#123;BASE_URL&#125;</span>/agent.jar \</span></span><br><span class="line"><span class="bash">    &amp;&amp; curl -fsSL -o <span class="variable">$&#123;BASE_BIN&#125;</span>/jenkins-agent.sh <span class="variable">$&#123;BASE_URL&#125;</span>/jenkins-agent.sh \</span></span><br><span class="line"><span class="bash">    &amp;&amp; curl -fsSL -o /tmp/<span class="variable">$&#123;MAVEN_NAME&#125;</span>.tar.gz <span class="variable">$&#123;BASE_URL&#125;</span>/<span class="variable">$&#123;MAVEN_NAME&#125;</span>.tar.gz \</span></span><br><span class="line"><span class="bash">    &amp;&amp; curl -fsSL -o /tmp/<span class="variable">$&#123;SONAR_SCANNER_NAME&#125;</span>.zip <span class="variable">$&#123;BASE_URL&#125;</span>/<span class="variable">$&#123;SONAR_SCANNER_NAME&#125;</span>.zip \</span></span><br><span class="line"><span class="bash">    &amp;&amp; curl -fsSL -o /usr/<span class="built_in">local</span>/bin/release-cli <span class="variable">$&#123;BASE_URL&#125;</span>/<span class="variable">$&#123;GITLAB_CLI&#125;</span> \</span></span><br><span class="line"><span class="bash">    &amp;&amp; curl -fsSL -o /usr/<span class="built_in">local</span>/bin/kubectl <span class="variable">$&#123;BASE_URL&#125;</span>/kubectl \</span></span><br><span class="line"><span class="bash">    &amp;&amp; curl -fsSL -o /usr/<span class="built_in">local</span>/bin/docker <span class="variable">$&#123;BASE_URL&#125;</span>/docker \</span></span><br><span class="line"><span class="bash">    &amp;&amp; sed -i <span class="string">"s/#PermitRootLogin.*/PermitRootLogin yes/g"</span> /etc/ssh/sshd_config \</span></span><br><span class="line"><span class="bash">    &amp;&amp; sed -i <span class="string">"s/^#\s*StrictHostKeyChecking ask/StrictHostKeyChecking no/g"</span> /etc/ssh/ssh_config \</span></span><br><span class="line"><span class="bash">    &amp;&amp; ssh-keygen -t dsa -P <span class="string">""</span> -f /etc/ssh/ssh_host_dsa_key \</span></span><br><span class="line"><span class="bash">    &amp;&amp; ssh-keygen -t rsa -P <span class="string">""</span> -f /etc/ssh/ssh_host_rsa_key \</span></span><br><span class="line"><span class="bash">    &amp;&amp; ssh-keygen -t ecdsa -P <span class="string">""</span> -f /etc/ssh/ssh_host_ecdsa_key \</span></span><br><span class="line"><span class="bash">    &amp;&amp; ssh-keygen -t ed25519 -P <span class="string">""</span> -f /etc/ssh/ssh_host_ed25519_key \</span></span><br><span class="line"><span class="bash">    &amp;&amp; ssh-keygen -t ed25519 -P <span class="string">""</span> -C <span class="string">"master@weiyigeek.top"</span> -f /home/jenkins/.ssh/id_ed25519 \</span></span><br><span class="line"><span class="bash">    &amp;&amp; apk add /tmp/<span class="variable">$&#123;GLIBC_NAME&#125;</span> /tmp/<span class="variable">$&#123;GLIBC_BIN_NAME&#125;</span> /tmp/<span class="variable">$&#123;GLIBC_I18N_NAME&#125;</span> \</span></span><br><span class="line"><span class="bash">    &amp;&amp; tar -zxf /tmp/<span class="variable">$&#123;JDK_NAME&#125;</span>.tar.gz -C <span class="variable">$&#123;BASE_DIR&#125;</span> \</span></span><br><span class="line"><span class="bash">    &amp;&amp; mv <span class="variable">$&#123;JDK_DIR&#125;</span> <span class="variable">$&#123;JAVA_HOME&#125;</span> \</span></span><br><span class="line"><span class="bash">    &amp;&amp; tar -zxf /tmp/<span class="variable">$&#123;MAVEN_NAME&#125;</span>.tar.gz -C <span class="variable">$&#123;BASE_DIR&#125;</span> \</span></span><br><span class="line"><span class="bash">    &amp;&amp; mv <span class="variable">$&#123;MAVEN_DIR&#125;</span> <span class="variable">$&#123;MAVEN_HOME&#125;</span> \</span></span><br><span class="line"><span class="bash">    &amp;&amp; unzip /tmp/<span class="variable">$&#123;SONAR_SCANNER_NAME&#125;</span>.zip -d <span class="variable">$&#123;BASE_DIR&#125;</span> \</span></span><br><span class="line"><span class="bash">    &amp;&amp; mv <span class="variable">$&#123;SONAR_SCANNER_DIR&#125;</span> <span class="variable">$&#123;SONAR_SCANNER_HOME&#125;</span> \</span></span><br><span class="line"><span class="bash">    &amp;&amp; npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org \</span></span><br><span class="line"><span class="bash">    &amp;&amp; chmod a+x <span class="variable">$&#123;BASE_BIN&#125;</span>/* \</span></span><br><span class="line"><span class="bash">    &amp;&amp; chown -R jenkins:jenkins <span class="variable">$&#123;BASE_DIR&#125;</span>/ <span class="variable">$&#123;AGENT_WORKDIR&#125;</span>/ <span class="variable">$&#123;NODEJS_MODULES&#125;</span>/ \</span></span><br><span class="line"><span class="bash">    &amp;&amp; <span class="built_in">echo</span> <span class="string">"root:WeiyiGeek"</span> | chpasswd \</span></span><br><span class="line"><span class="bash">    &amp;&amp; <span class="built_in">echo</span> <span class="string">"jenkins:WeiyiGeek"</span> | chpasswd \</span></span><br><span class="line"><span class="bash">    &amp;&amp; cat /tmp/<span class="variable">$&#123;LOCALE&#125;</span> | xargs -i /usr/glibc-compat/bin/localedef -i &#123;&#125; -f UTF-8 &#123;&#125;.UTF-8 \</span></span><br><span class="line"><span class="bash">    &amp;&amp; sed -i <span class="string">"s#use_embedded_jre=true#use_embedded_jre=false#g"</span> <span class="variable">$&#123;SONAR_SCANNER_HOME&#125;</span>/bin/sonar-scanner \</span></span><br><span class="line"><span class="bash">    &amp;&amp; rm -rf /var/cache/apk/* /tmp/* <span class="variable">$&#123;SONAR_SCANNER_HOME&#125;</span>/jre/* \</span></span><br><span class="line"><span class="bash">    &amp;&amp; <span class="built_in">cd</span> <span class="variable">$&#123;JAVA_HOME&#125;</span> \</span></span><br><span class="line"><span class="bash">    &amp;&amp; rm -rf COPYRIGHT LICENSE README release THIRDPARTYLICENSEREADME-JAVAFX.txt THIRDPARTYLICENSEREADME.txt Welcome.html  javafx-src.zip src.zip \</span></span><br><span class="line"><span class="bash">    lib/plugin.jar \</span></span><br><span class="line"><span class="bash">    lib/ext/jfxrt.jar \</span></span><br><span class="line"><span class="bash">    bin/javaws \</span></span><br><span class="line"><span class="bash">    lib/javaws.jar \</span></span><br><span class="line"><span class="bash">    lib/desktop \</span></span><br><span class="line"><span class="bash">    plugin \</span></span><br><span class="line"><span class="bash">    lib/deploy* \</span></span><br><span class="line"><span class="bash">    lib/*javafx* \</span></span><br><span class="line"><span class="bash">    lib/*jfx* \</span></span><br><span class="line"><span class="bash">    lib/amd64/libdecora_sse.so \</span></span><br><span class="line"><span class="bash">    lib/amd64/libprism_*.so \</span></span><br><span class="line"><span class="bash">    lib/amd64/libfxplugins.so \</span></span><br><span class="line"><span class="bash">    lib/amd64/libglass.so \</span></span><br><span class="line"><span class="bash">    lib/amd64/libgstreamer-lite.so \</span></span><br><span class="line"><span class="bash">    lib/amd64/libjavafx*.so \</span></span><br><span class="line"><span class="bash">    lib/amd64/libjfx*.so \</span></span><br><span class="line"><span class="bash">    &amp;&amp; <span class="built_in">echo</span> <span class="string">"export LANG=zh_CN.UTF-8"</span> &gt; /etc/profile.d/locale.sh</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">USER</span> jenkins</span><br><span class="line"></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> <span class="variable">$&#123;AGENT_WORKDIR&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib/dt.jar:$&#123;JAVA_HOME&#125;/lib/tools.jar \</span><br><span class="line">    PATH=$&#123;JAVA_HOME&#125;/bin:$&#123;MAVEN_HOME&#125;/bin:$&#123;SONAR_SCANNER_HOME&#125;/bin:$PATH</span><br><span class="line"></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash"> [<span class="string">"/usr/local/bin/jenkins-agent.sh"</span>]</span></span><br></pre></td></tr></table></figure><p><br/></p><p><strong>镜像构建操作</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># (0) 启动一个临时的web服务器（`存放上面的镜像构建所需软件`-非常重要-否则将会导致构建失败）</span></span><br><span class="line">~/k8s/jenkins/jnlp-slave$ python3 -m http.server 8080</span><br><span class="line">Serving HTTP on 0.0.0.0 port 8080 (http://0.0.0.0:8080/) ...</span><br><span class="line"><span class="comment"># 172.17.0.4 - - [30/Mar/2021 17:32:00] "GET /glibc-2.32-r0.apk HTTP/1.1" 200 -</span></span><br><span class="line">...</span><br><span class="line"><span class="comment"># 172.17.0.4 - - [30/Mar/2021 17:32:00] "GET /kubectl HTTP/1.1" 200 -</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># (1) 镜像构建 (建议一定要带上构建平台)</span></span><br><span class="line">docker build -t weiyigeek/alpine-jenkins-jnlp --platform linux/amd64 .</span><br><span class="line">  <span class="comment"># Sending build context to Docker daemon  25.09kB</span></span><br><span class="line">  <span class="comment"># Step 1/10 : FROM alpine:3.13.1</span></span><br><span class="line">  <span class="comment">#   ---&gt; e50c909a8df2</span></span><br><span class="line">  <span class="comment"># Step 2/10 : MAINTAINER  Jenkins Custom Work Node Jnlp Container - &lt;master@weiyigeek.top&gt; - WeiyiGeek</span></span><br><span class="line">  <span class="comment"># ....................................................................................................</span></span><br><span class="line">  <span class="comment"># Step 10/10 : ENTRYPOINT ["/usr/local/bin/jenkins-agent.sh"]</span></span><br><span class="line">  <span class="comment">#   ---&gt; Running in 1869aaba6a4e</span></span><br><span class="line">  <span class="comment"># Removing intermediate container 1869aaba6a4e</span></span><br><span class="line">  <span class="comment">#   ---&gt; 0dfabb8ae0ee</span></span><br><span class="line">  <span class="comment"># Successfully built 0dfabb8ae0ee</span></span><br><span class="line">  <span class="comment"># Successfully tagged weiyigeek/alpine-jenkins-jnlp:latest</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># (2) 查看构建信息</span></span><br><span class="line">docker images weiyigeek/alpine-jenkins-jnlp --all</span><br><span class="line">  <span class="comment"># REPOSITORY                                 TAG             IMAGE ID       CREATED             SIZE</span></span><br><span class="line">  <span class="comment"># harbor.weiyigeek.top/devops/jenkins-jnlp   3.13.1-alpine   b47b6581b712   About an hour ago   715MB</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># (3) 推送镜像到Docker HUB中</span></span><br><span class="line">docker push weiyigeek/alpine-jenkins-jnlp</span><br><span class="line">  <span class="comment"># The push refers to repository [harbor.weiyigeek.top/devops/jenkins-jnlp]</span></span><br><span class="line">  <span class="comment"># 059ea3fbd3b3: Pushed</span></span><br><span class="line">  <span class="comment"># 1119ff37d4a9: Layer already exists</span></span><br><span class="line">  <span class="comment"># 3.13.1-alpine: digest: sha256:1f869c553340c9399c7db9072169600a17ddb0ec41d41d3a4365b8c1571fc201 size: 741</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># (4) 完毕后便可采用Ansible各节点拉取镜像（若没有安装ansible的朋友请自行ssh登录）</span></span><br><span class="line">ansible node -m shell -a <span class="string">"docker pull weiyigeek/alpine-jenkins-jnlp"</span></span><br></pre></td></tr></table></figure></p><p>至此，Jenkins Agent 镜像构建完毕!</p><hr><h2 id="0x02-项目实践"><a href="#0x02-项目实践" class="headerlink" title="0x02 项目实践"></a>0x02 项目实践</h2><h3 id="1-使用在K8S部署的Jenkins连接Docker容器中运行的Agent分布式节点-缺省端口-50000"><a href="#1-使用在K8S部署的Jenkins连接Docker容器中运行的Agent分布式节点-缺省端口-50000" class="headerlink" title="1.使用在K8S部署的Jenkins连接Docker容器中运行的Agent分布式节点 (缺省端口:50000)"></a>1.使用在K8S部署的Jenkins连接Docker容器中运行的Agent分布式节点 (缺省端口:50000)</h3><p>描述: 从前面环境可知，我将Jenkins安装在Kubernetes集群之中了，并且将Pod中的8080端口映射到30001端口，而agent缺省端口为50000，在没有更改的SVC情况下，我们可以使用两种方式一种就是使用<code>kubectl port-forward</code>转发，另外一种是在Jenkins资源清单中配置 <code>hostNetwork: true</code>, 此时运行jenkins Pod的节点IP+50000端口便可直接访问。</p><p>步骤 01.针对 Jenkins 进行 inbound agents pod 50000 端口转发到192.168.12.107节点的50000端口<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl -n devops port-forward --address 127.0.0.1,192.168.12.107 jenkins-7fc6f4fcf6-glqxj 50000:50000</span><br></pre></td></tr></table></figure></p><p><br></p><p>步骤 02.然后在其他有安装Docker的机器节点上运行如下命令进行jenkins jnlp容器的创建，注意此处为了多个agent构建时maven包的数据共享，使用nfs共享磁盘.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker run --user jenkins -d --name jnlp \</span><br><span class="line">-e <span class="string">"JAVA_OPTS=-Xms512m -Xmx1g -Xss1m"</span> \</span><br><span class="line">-e <span class="string">"JENKINS_NAME=docker-jenkins-jnlp"</span> \</span><br><span class="line">-e <span class="string">"JENKINS_AGENT_NAME=docker-jenkins-jnlp"</span> \</span><br><span class="line">-e <span class="string">"JENKINS_SECRET=b97b9d1e0cf083f9da5721caa6ebc63f6fe648375bd90cb2c2f484681d887bb7"</span> \</span><br><span class="line">-e <span class="string">"JENKINS_AGENT_WORKDIR=/home/jenkins"</span> \</span><br><span class="line">-e <span class="string">"JENKINS_PURL=http://192.168.12.107:30001"</span>  \</span><br><span class="line">-w /home/jenkins \</span><br><span class="line">-v /nfsdisk-31/appstorage/mavenRepo:/home/jenkins/.m2 \</span><br><span class="line">-v /var/run/docker.sock:/var/run/docker.sock weiyigeek/alpine-jenkins-jnlp:latest</span><br></pre></td></tr></table></figure><br>命令执行若出现<code>INFO: Connected</code>结果，则表示连接成功。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Java version: 1.8.0_281, vendor: Oracle Corporation, runtime: /usr/<span class="built_in">local</span>/jdk8/jre</span><br><span class="line">Default locale: en_US, platform encoding: UTF-8</span><br><span class="line">OS name: <span class="string">"linux"</span>, version: <span class="string">"5.4.0-137-generic"</span>, arch: <span class="string">"amd64"</span>, family: <span class="string">"unix"</span></span><br><span class="line">INFO: Scanner configuration file: /usr/<span class="built_in">local</span>/sonar-scanner/conf/sonar-scanner.properties</span><br><span class="line">INFO: Project root configuration file: NONE</span><br><span class="line">INFO: SonarScanner 4.5.0.2216</span><br><span class="line">INFO: Java 1.8.0_281 Oracle Corporation (64-bit)</span><br><span class="line">INFO: Linux 5.4.0-137-generic amd64</span><br><span class="line">Feb 04, 2023 10:51:19 PM hudson.remoting.jnlp.Main createEngine</span><br><span class="line">INFO: Setting up agent: docker-jenkins-jnlp</span><br><span class="line">Feb 04, 2023 10:51:19 PM hudson.remoting.jnlp.Main<span class="variable">$CuiListener</span> &lt;init&gt;</span><br><span class="line">INFO: Jenkins agent is running <span class="keyword">in</span> headless mode.</span><br><span class="line">Feb 04, 2023 10:51:19 PM hudson.remoting.Engine startEngine</span><br><span class="line">INFO: Using Remoting version: 4.11.2</span><br><span class="line">Feb 04, 2023 10:51:19 PM org.jenkinsci.remoting.engine.WorkDirManager initializeWorkDir</span><br><span class="line">INFO: Using /home/jenkins/remoting as a remoting work directory</span><br><span class="line">Feb 04, 2023 10:51:19 PM org.jenkinsci.remoting.engine.WorkDirManager setupLogging</span><br><span class="line">INFO: Both error and output logs will be printed to /home/jenkins/remoting</span><br><span class="line">Feb 04, 2023 10:51:19 PM hudson.remoting.jnlp.Main<span class="variable">$CuiListener</span> status</span><br><span class="line">INFO: Locating server among []</span><br><span class="line">Feb 04, 2023 10:51:19 PM hudson.remoting.jnlp.Main<span class="variable">$CuiListener</span> status</span><br><span class="line">INFO: Agent discovery successful</span><br><span class="line">  Agent address: 192.168.12.107</span><br><span class="line">  Agent port:    50000</span><br><span class="line">  Identity:      8e:c7:1e:e1:39:ee:f4:2a:43:f6:aa:d9:0e:b7:b6:62</span><br><span class="line">.....</span><br><span class="line">INFO: Connected</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230202145941.png" alt="WeiyiGeek.在Docker中运行jenkins-jnlp结果图" title="" class="">                <p>WeiyiGeek.在Docker中运行jenkins-jnlp结果图</p>            </figure><p><br/></p><p>步骤 03.当然你也可以通过点击 Jenkins Dashboard -&gt; 节点列表 -&gt; docker-jenkins-jnlp 查看创建的节点已经是运行状态了。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230202150507.png" alt="WeiyiGeek.jenkins中jnlp节点agent状态图" title="" class="">                <p>WeiyiGeek.jenkins中jnlp节点agent状态图</p>            </figure><p>温馨提示：此处只是涉及jenkins agent节点的配置连接，若需要进行调用执行某一个项目的CICD，请继续往下看。</p><p><br/></p><h3 id="2-使用在K8S部署的Jenkins连接Docker容器中运行的自定义Agent端口节点-直连方式"><a href="#2-使用在K8S部署的Jenkins连接Docker容器中运行的自定义Agent端口节点-直连方式" class="headerlink" title="2.使用在K8S部署的Jenkins连接Docker容器中运行的自定义Agent端口节点 (直连方式)"></a>2.使用在K8S部署的Jenkins连接Docker容器中运行的自定义Agent端口节点 (直连方式)</h3><p>描述: 由于我们更改Jenkins中的agent TCP 端口以及在K8S集群中也作出了相应更改，但是连接时需要指定更多的参数，例如（JENKINS_DIRECT_CONNECTION与JENKINS_INSTANCE_IDENTITY），这里面的坑还是很大的，为啥说坑大请看友继续看。</p><blockquote><p>JENKINS_DIRECT_CONNECTION : Connect directly to this TCP agent port, skipping the HTTP(S) connection parameter download. Value: “<HOST>:<PORT>“<br>JENKINS_INSTANCE_IDENTITY : The base64 encoded InstanceIdentity byte array of the Jenkins master. When this is set,the agent skips connecting to an HTTP(S) port for connection info.</p></blockquote><p>步骤 00.前置准备，通过前面所需参数可知，我们需要指定要直连的jenkins agent服务的IP以及端口 （例如: 192.168.12.107:30634），和  jenkins Instance Identity值（此处值得注意）。</p><p>最开始，JENKINS_INSTANCE_IDENTITY 其值我认为是 Jenkins 家目录中 secrets 下的 master.key 的 base64 编码，但是怎么连接都是不正确的，随后没得办法只能查询官方文档，功夫不负有心人，在 jenkinsci 的 remoting 项目下找到了一个issue，然后顺腾摸瓜找到了该值。</p><blockquote><p>Issue: <a href="https://github.com/jenkinsci/remoting/pull/338/files/07d7fd668b17123afd9ef7ac7a859bdda151f5cf#diff-8f973eec7a7bc04d532ba6b42015c903d7100b09f8ed655367d0fe893a9b6d0a" target="_blank" rel="noopener">https://github.com/jenkinsci/remoting/pull/338/files/07d7fd668b17123afd9ef7ac7a859bdda151f5cf#diff-8f973eec7a7bc04d532ba6b42015c903d7100b09f8ed655367d0fe893a9b6d0a</a><br>Document: <a href="https://wiki.jenkins.io/display/JENKINS/Instance+Identity" target="_blank" rel="noopener">https://wiki.jenkins.io/display/JENKINS/Instance+Identity</a></p></blockquote><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230206171322.png" alt="WeiyiGeek.JENKINS-53461 Direct inbound TCP agent connection 图" title="" class="">                <p>WeiyiGeek.JENKINS-53461 Direct inbound TCP agent connection 图</p>            </figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Jenkins : Instance Identity</span><br><span class="line">Created by Unknown User (kohsuke), last modified by Unknown User (songy) on Mar 26, 2015</span><br><span class="line">Each Jenkins instance maintains an RSA private/public key pair that can be used to uniquely identify Jenkins. This information is called <span class="string">"instance identity"</span>.</span><br><span class="line"></span><br><span class="line">From outside, the public key can be obtained by sending the GET request to the top page of Jenkins, and look <span class="keyword">for</span> the <span class="string">"X-Instance-Identity"</span> header <span class="keyword">in</span> the response. This header is always available, even <span class="keyword">if</span> the response is 401 access denied (<span class="built_in">which</span> can happen <span class="keyword">if</span> Jenkins is protected via security.) The value represents a base64-encoded ASN.1 DER serialization of X.509 SubjectPublicKeyInfo record.</span><br><span class="line"></span><br><span class="line">Plugins that run inside Jenkins can access this key pair programmatically through the org.jenkinsci.main.modules.instance_identity.InstanceIdentity class (add a provided scope dependency to this module into your plugin)</span><br></pre></td></tr></table></figure><p>上述大致意思是，每个Jenkins实例都维护一个RSA私钥/公钥对，可用于唯一标识Jenkins，这就是实例标识（instance identity），该值(公钥)可以通过将GET请求发送到Jenkins的首页来获得，并在响应中查找“X-Instance-Identity”标头。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X-Instance-Identity: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB******************1KQ5CLlISSjBaYrGqwsDThdDRbM6CjmP3UJ0NVhsMRJuQyAA2x4XktjEAYO3X0PWQIDAQAB</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230206171109.png" alt="WeiyiGeek.获取X-Instance-Identity图" title="" class="">                <p>WeiyiGeek.获取X-Instance-Identity图</p>            </figure><p><br/></p><p>步骤 01.获取到了X-Instance-Identity值后，一条Docker命令创建运行 jenkins agent 容器连接到Jenkins之中<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker run --user jenkins -d --name jnlp \</span><br><span class="line">-e <span class="string">"JAVA_OPTS=-Xms512m -Xmx1g -Xss1m"</span> \</span><br><span class="line">-e <span class="string">"JENKINS_NAME=docker-jenkins-jnlp"</span> \</span><br><span class="line">-e <span class="string">"JENKINS_AGENT_NAME=docker-jenkins-jnlp"</span> \</span><br><span class="line">-e <span class="string">"JENKINS_SECRET=b97b9d1e0cf083f9da5721caa6ebc63f6fe648375bd90cb2c2f484681d887bb7"</span> \</span><br><span class="line">-e <span class="string">"JENKINS_AGENT_WORKDIR=/home/jenkins"</span> \</span><br><span class="line">-e <span class="string">"JENKINS_DIRECT_CONNECTION=192.168.12.107:30634"</span> \</span><br><span class="line">-e <span class="string">"JENKINS_INSTANCE_IDENTITY=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsFqtbTp5/xRS85YdURKk6Zc+qfl+RxrtnJ0zUXXLqXIa8S0MVk5U+xhu0Xo6Kz9MN/i7znfKpljk4/6+GphGFJbgGVw/1M2xbZjg7XN8QiXU64rlHC1NaGbKsa6R0PbWZEjbExR+sgTreiKwh08FcQemEDEajN5WihvvC0LmopYoSfHXW0fYMYIvVPO0Kow80MKoXighfhpK9msLWV4ay4ttP9zjBWml2gEeCXNjPQAt+r1l/kDT3c7vaIybzrxgRg2K9IVYmao/wemwDdpEP1KQ5CLlISSjBaYrGqwsDThdDRbM6CjmP3UJ0NVhsMRJuQyAA2x4XktjEAYO3X0PWQIDAQAB"</span> \</span><br><span class="line">-w /home/jenkins \</span><br><span class="line">-v /nfsdisk-31/appstorage/mavenRepo:/home/jenkins/.m2 \</span><br><span class="line">-v /var/run/docker.sock:/var/run/docker.sock weiyigeek/alpine-jenkins-jnlp:latest</span><br></pre></td></tr></table></figure></p><p><br/></p><p>步骤 02.查看运行的容器及其结果，我们也可以在jenkins 面板上看到连接的节点，如需删除节点直接选择左边，菜单栏中删除节点。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">~/k8s/jenkins/jnlp-slave$ docker ps</span><br><span class="line">  <span class="comment"># CONTAINER ID   IMAGE                                  COMMAND                  CREATED         STATUS        PORTS     NAMES</span></span><br><span class="line">  <span class="comment"># efb27bd9cb8e   weiyigeek/alpine-jenkins-jnlp:latest   "/usr/local/bin/jenk…"   3 seconds ago   Up 1 second             jnlp</span></span><br><span class="line"></span><br><span class="line">~/k8s/jenkins/jnlp-slave$ docker logs -f efb27bd9cb8e</span><br><span class="line">  <span class="comment"># INFO: Agent discovery successful</span></span><br><span class="line">  <span class="comment">#   Agent address: 192.168.12.107</span></span><br><span class="line">  <span class="comment">#   Agent port:    30634</span></span><br><span class="line">  <span class="comment">#   Identity:      8e:c7:1e:e1:39:ee:f4:2a:43:f6:aa:d9:0e:b7:b6:62</span></span><br><span class="line">  <span class="comment"># Feb 04, 2023 10:51:19 PM hudson.remoting.jnlp.Main$CuiListener status</span></span><br><span class="line">  <span class="comment"># INFO: Handshaking</span></span><br><span class="line">  <span class="comment"># Feb 04, 2023 10:51:19 PM hudson.remoting.jnlp.Main$CuiListener status</span></span><br><span class="line">  <span class="comment"># INFO: Connecting to 192.168.12.107:30634</span></span><br><span class="line">  <span class="comment"># Feb 04, 2023 10:51:19 PM hudson.remoting.jnlp.Main$CuiListener status</span></span><br><span class="line">  <span class="comment"># INFO: Trying protocol: JNLP4-connect</span></span><br><span class="line">  <span class="comment"># Feb 04, 2023 10:51:19 PM org.jenkinsci.remoting.protocol.impl.BIONetworkLayer$Reader run</span></span><br><span class="line">  <span class="comment"># INFO: Waiting for ProtocolStack to start.</span></span><br><span class="line">  <span class="comment"># Feb 04, 2023 10:51:19 PM hudson.remoting.jnlp.Main$CuiListener status</span></span><br><span class="line">  <span class="comment"># INFO: Remote identity confirmed: 8e:c7:1e:e1:39:ee:f4:2a:43:f6:aa:d9:0e:b7:b6:62</span></span><br><span class="line">  <span class="comment"># Feb 04, 2023 10:51:21 PM hudson.remoting.jnlp.Main$CuiListener status</span></span><br><span class="line">  <span class="comment"># INFO: Connected</span></span><br></pre></td></tr></table></figure><p><br/></p><p>步骤 03.验证连接上Jenkins的agent节点，可以通过左侧的<code>脚本命令行</code>进行测, 你可以访问 http://你jenkinsIP地址/computer/agent节点名称/script 即可到 脚本命令行页面。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Groovy script</span></span><br><span class="line">println <span class="string">"uname -a"</span>.execute().text</span><br><span class="line">println System.getenv(<span class="string">"PATH"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果:</span></span><br><span class="line">Linux 2736a6240d91 5.4.0-137-generic <span class="comment">#154-Ubuntu SMP Thu Jan 5 17:03:22 UTC 2023 x86_64 Linux</span></span><br><span class="line">/usr/<span class="built_in">local</span>/jdk8/bin:/usr/<span class="built_in">local</span>/maven/bin:/usr/<span class="built_in">local</span>/sonar-scanner/bin:/usr/<span class="built_in">local</span>/sbin:/usr/<span class="built_in">local</span>/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br></pre></td></tr></table></figure><hr><h2 id="0x03-实践调用Jenkins-agent节点"><a href="#0x03-实践调用Jenkins-agent节点" class="headerlink" title="0x03 实践调用Jenkins agent节点"></a>0x03 实践调用Jenkins agent节点</h2><h3 id="1-牛刀小试"><a href="#1-牛刀小试" class="headerlink" title="1.牛刀小试"></a>1.牛刀小试</h3><p>描述: 此处不再累述 Jenkins 项目的创建说明，不会的朋友请参照我的【Jenkins学习之路汇总】( <a href="https://blog.weiyigeek.top/2018/1-1-1.html#Jenkins学习之路汇总">https://blog.weiyigeek.top/2018/1-1-1.html#Jenkins学习之路汇总</a> )，帮助大家快速入门。</p><p><strong>agent 代理语法及使用介绍</strong><br>我们可以通过下面流水线中可知，其中最主要的就是 agent 代码块包含的，我们设定的 jenkins agent 标签值的机器。<br>描述: 指定整个Pipeline或特定阶段将在Jenkins环境中执行的位置，具体取决于该<code>agent</code> 部分的放置位置;</p><p><strong>语法参数:</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">必须: YES</span><br><span class="line">参数：any / none / label /　node / docker / dockerfile / kubernetes</span><br><span class="line">  - 1.在任何可用的 agent 上执行Pipeline或stage</span><br><span class="line">  - 2.在pipeline块的顶层应用时，不会为整个 Pipeline运行分配全局代理，并且每个stage部分都需要包含自己的agent部分。</span><br><span class="line">  - 3.使用提供的标签在Jenkins环境中可用的代理上执行 Pipeline或阶段, 注意标签条件也可以使用。</span><br><span class="line">  - 4.node使用与lable类似</span><br><span class="line">  - 5.执行Pipeline或stage时会动态供应一个docker节点去接受Docker-based的Pipelines。</span><br><span class="line">  - 6.使用从Dockerfile源存储库中包含的容器构建的容器执行 Pipeline或阶段，Jenkinsfile 必须从多分支 Pipeline或 SCM Pipeline加载。</span><br><span class="line">  - 7.在Kubernetes集群上部署的Pod内执行 Pipeline或阶段，同样Jenkinsfile 必须从多分支 Pipeline或 SCM Pipeline加载，Pod模板在kubernetes &#123;&#125; 块内定义。</span><br><span class="line">允许：在顶层pipeline块和每个stage块中。</span><br></pre></td></tr></table></figure></p><p><strong>语法示例:</strong><br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">  agent any</span><br><span class="line"></span><br><span class="line">  agent none</span><br><span class="line"></span><br><span class="line">  agent &#123; </span><br><span class="line">    label <span class="string">'my-label1 &amp;&amp; my-label2'</span> </span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  agent &#123; node &#123; label <span class="string">'labelName'</span> &#125; &#125;  <span class="comment">// 等同于 agent &#123; label 'labelName' &#125;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// docker 还可以接受一个args直接传递给`docker run`调用以及一个 alwaysPull 选项</span></span><br><span class="line">  <span class="comment">// registryUrl和registryCredentialsId参数 有助于指定要使用的Docker注册表及其凭据</span></span><br><span class="line">  agent &#123;</span><br><span class="line">    docker &#123;</span><br><span class="line">      image <span class="string">'maven:3-alpine'</span></span><br><span class="line">      label <span class="string">'my-defined-label'</span></span><br><span class="line">      args  <span class="string">'-v /tmp:/tmp'</span></span><br><span class="line">      registryUrl <span class="string">'https://myregistry.com/'</span></span><br><span class="line">      registryCredentialsId <span class="string">'myPredefinedCredentialsInJenkins'</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// dockerfile</span></span><br><span class="line">  agent &#123;</span><br><span class="line">    <span class="comment">// 等同于 to "docker build -f Dockerfile.build --build-arg version=1.0.2 ./build/</span></span><br><span class="line">    dockerfile &#123;</span><br><span class="line">        filename <span class="string">'Dockerfile.build'</span></span><br><span class="line">        <span class="comment">// 如果要Dockerfile在另一个目录中构建，请使用以下dir选项</span></span><br><span class="line">        dir <span class="string">'build'</span></span><br><span class="line">        label <span class="string">'my-defined-label'</span></span><br><span class="line">        additionalBuildArgs  <span class="string">'--build-arg version=1.0.2'</span></span><br><span class="line">        args <span class="string">'-v /tmp:/tmp'</span></span><br><span class="line">        <span class="comment">// 同样也接受registryUrl和registryCredentialsId参数</span></span><br><span class="line">        registryUrl <span class="string">'https://myregistry.com/'</span></span><br><span class="line">        registryCredentialsId <span class="string">'myPredefinedCredentialsInJenkins'</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// kubernetes: 例如如果要在其中装有Kaniko容器的容器</span></span><br><span class="line">  agent &#123;</span><br><span class="line">    kubernetes &#123;</span><br><span class="line">      label podlabel</span><br><span class="line">      yaml <span class="string">"""</span></span><br><span class="line"><span class="string">  kind: Pod</span></span><br><span class="line"><span class="string">  metadata:</span></span><br><span class="line"><span class="string">    name: jenkins-agent</span></span><br><span class="line"><span class="string">  spec:</span></span><br><span class="line"><span class="string">    containers:</span></span><br><span class="line"><span class="string">    - name: kaniko</span></span><br><span class="line"><span class="string">      image: gcr.io/kaniko-project/executor:debug</span></span><br><span class="line"><span class="string">      imagePullPolicy: Always</span></span><br><span class="line"><span class="string">      command:</span></span><br><span class="line"><span class="string">      - /busybox/cat</span></span><br><span class="line"><span class="string">      tty: true</span></span><br><span class="line"><span class="string">      volumeMounts:</span></span><br><span class="line"><span class="string">        - name: aws-secret</span></span><br><span class="line"><span class="string">          mountPath: /root/.aws/</span></span><br><span class="line"><span class="string">        - name: docker-registry-config</span></span><br><span class="line"><span class="string">          mountPath: /kaniko/.docker</span></span><br><span class="line"><span class="string">    restartPolicy: Never</span></span><br><span class="line"><span class="string">    volumes:</span></span><br><span class="line"><span class="string">      - name: aws-secret</span></span><br><span class="line"><span class="string">        secret:</span></span><br><span class="line"><span class="string">          secretName: aws-secret</span></span><br><span class="line"><span class="string">      - name: docker-registry-config</span></span><br><span class="line"><span class="string">        configMap:</span></span><br><span class="line"><span class="string">          name: docker-registry-config</span></span><br><span class="line"><span class="string">  """</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>常用选项:</strong><br>描述: 下面可以应用于两个或者多个agent实现的选项即label、customWorkspace、reuseNode;</p><ul><li>1.label (参数:字符串): 运行 Pipeline或单个 Pipeline的标签或标签条件stage。 【此选项对node，docker和有效对dockerfile必需 node。】</li><li>2.customWorkspace (参数: 字符串) : 运行 Pipeline或个人 stage 这 agent 是这个自定义的工作空间内的应用，而不是默认的, 它可以是相对路径（<code>在这种情况下自定义工作空间将位于节点上的工作空间根目录下</code>），也可以是绝对路径。【此选项是有效的node，docker和dockerfile。】</li><li>3.reuseNode（参数: 布尔值-false）: 如果为true在同一工作空间中在 Pipeline顶级指定的节点上运行容器，而不是在整个新节点上运行</li><li>4.args (参数: 字符串): 要传递给的运行时参数docker run,此选项对docker和有效dockerfile。</li></ul><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 示例1. Docker代理，声明性 Pipeline</span></span><br><span class="line">pipeline &#123;</span><br><span class="line">  <span class="comment">// V.在具有给定名称和标签（maven:3-alpine）的新创建容器中执行此 Pipeline中定义的所有步骤。</span></span><br><span class="line">  agent &#123; docker <span class="string">'maven:3-alpine'</span> &#125; </span><br><span class="line">  stages &#123;</span><br><span class="line">      stage(<span class="string">'Example Build'</span>) &#123;</span><br><span class="line">          steps &#123;</span><br><span class="line">              sh <span class="string">'mvn -B clean verify'</span></span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 例子2.阶段级代理部分</span></span><br><span class="line">pipeline &#123;</span><br><span class="line">  <span class="comment">/* agent none在 Pipeline的顶层进行定义可确保 不会不必要地分配执行程序。使用agent none还会强制每个stage部分包含其自己的agent部分。 */</span></span><br><span class="line">  agent none </span><br><span class="line">  stages &#123;</span><br><span class="line">    stage(<span class="string">'Example Build'</span>) &#123;</span><br><span class="line">      <span class="comment">/* 使用此映像在新创建的容器中执行此阶段中的步骤。*/</span></span><br><span class="line">      agent &#123; docker <span class="string">'maven:3-alpine'</span> &#125; </span><br><span class="line">      steps &#123;</span><br><span class="line">          echo <span class="string">'Hello, Maven'</span></span><br><span class="line">          sh <span class="string">'mvn --version'</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    stage(<span class="string">'Example Test'</span>) &#123;</span><br><span class="line">      <span class="comment">/* 使用与上一阶段不同的图像在新创建的容器中执行此阶段中的步骤。 */</span></span><br><span class="line">      agent &#123; docker <span class="string">'openjdk:8-jre'</span> &#125; </span><br><span class="line">      steps &#123;</span><br><span class="line">          echo <span class="string">'Hello, JDK'</span></span><br><span class="line">          sh <span class="string">'java -version'</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好了，agent 介绍完毕，我们该回归正题了。</p><p><br/></p><p><strong>实践流程</strong></p><p>步骤 01.此处我创建了一个 Test 项目用于测试调用我们在Docker中运行的jenkins Agent节点。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230206173815.png" alt="WeiyiGeek.图" title="" class="">                <p>WeiyiGeek.图</p>            </figure><p><br/></p><p>步骤 02.此处是我准备的 jenkins 流水线代码, 在应用保存后即可。<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> JOB_WORKSPACE = <span class="string">"$&#123;env.WORKSPACE&#125;"</span></span><br><span class="line"><span class="keyword">def</span> JOB_NAME = <span class="string">"$&#123;env.JOB_NAME&#125;-$&#123;env.BUILD_NUMBER&#125;"</span></span><br><span class="line"></span><br><span class="line">pipeline &#123;</span><br><span class="line">  agent &#123;</span><br><span class="line">    label <span class="string">'docker-jnlp-1'</span></span><br><span class="line">  &#125;</span><br><span class="line">  environment &#123;</span><br><span class="line">    SONARQUBE_TIMEOUT = <span class="string">'10'</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  stages &#123;</span><br><span class="line">    stage (<span class="string">'Start Test'</span>) &#123;</span><br><span class="line">      steps &#123;</span><br><span class="line">        echo <span class="string">"[Test Jenkins JNLP Agent with docker]!"</span></span><br><span class="line">        echo <span class="string">"流水线环境变量输出: $&#123;env.JOB_NAME&#125;-$&#123;env.JOB_WORKSPACE&#125;-$&#123;env.SONARQUBE_TIMEOUT&#125;"</span></span><br><span class="line">        script &#123;</span><br><span class="line">          <span class="comment">// 命令执行</span></span><br><span class="line">          sh <span class="string">" echo -e '&lt;name&gt;weiyigeek&lt;/name&gt;\n&lt;addr&gt;https://weiyigeek.top&lt;/addr&gt;' &gt; demo.xml  &amp;&amp; cat demo.xml"</span></span><br><span class="line">          <span class="comment">// 返回命令执行结果</span></span><br><span class="line">          USERNAME=sh <span class="string">label:</span> <span class="string">'name'</span>,<span class="string">returnStdout:</span> <span class="literal">true</span>, <span class="string">script:</span> <span class="string">"""</span></span><br><span class="line"><span class="string">            awk '/&lt;\\/*name\\/*&gt;/&#123;gsub(/[[:space:]]*&lt;\\/*name\\/*&gt;/,"");print \$0&#125;' demo.xml | head -n 1</span></span><br><span class="line"><span class="string">          """</span></span><br><span class="line">          ADDRESS=sh <span class="string">label:</span> <span class="string">'name'</span>,<span class="string">returnStdout:</span> <span class="literal">true</span>, <span class="string">script:</span> <span class="string">"""</span></span><br><span class="line"><span class="string">            awk '/&lt;\\/*addr\\/*&gt;/&#123;gsub(/[[:space:]]*&lt;\\/*addr\\/*&gt;/,"");print \$0&#125;' demo.xml | head -n 1</span></span><br><span class="line"><span class="string">          """</span></span><br><span class="line">          sh <span class="string">"mkdir -vp test/demo &amp;&amp; ls &amp;&amp; pwd"</span></span><br><span class="line">        &#125;</span><br><span class="line">       echo <span class="string">"脚本执行返回结果输出 =&gt; $&#123;USERNAME&#125; =&gt; $&#123;ADDRESS&#125;"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">     stage (<span class="string">'END Test'</span>) &#123;</span><br><span class="line">      steps &#123;</span><br><span class="line">        echo <span class="string">"跨阶段变量传递 =&gt; $&#123;USERNAME&#125;"</span></span><br><span class="line">        sh <span class="string">"ls &amp;&amp; pwd"</span></span><br><span class="line">        sh <span class="string">"java -version;mvn -version;release-cli -v;sonar-scanner --version"</span> </span><br><span class="line">        echo <span class="string">"[Test End Stage]!"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><br/></p><p>步骤 03.返回到Test项目首页之中，点击立即构建，然后可以在阶段视图中查看到执行结果,我们可以通过Blue Ocean进行更加直观的展示。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230206174336.png" alt="WeiyiGeek.Jenkins agent连接运行测试图" title="" class="">                <p>WeiyiGeek.Jenkins agent连接运行测试图</p>            </figure><p><br/></p><h3 id="2-完整的pipeline流水线企业项目"><a href="#2-完整的pipeline流水线企业项目" class="headerlink" title="2.完整的pipeline流水线企业项目"></a>2.完整的pipeline流水线企业项目</h3><p>描述: 上一章节只是简单使用该镜像创建的容器，是否能被Jenkins正常调度，此章节为作者内部实践项目抽取的pipeline流水线，实现了’代码拉取’, ‘代码检测’, ‘项目构建’,’镜像构建’,’部署测试’,’成品归档’等阶段，供大家参考使用。</p><p>步骤 01.在登录Jenkins后，创建一个测试任务weiyigeek-oa，此处根据一个已经存在的任务内部OA系统进行复制创建，修改对应的流水线agent代码块为标签选择。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230207093031.png" alt="WeiyiGeek.创建weiyigeek-oa任务流水线图" title="" class="">                <p>WeiyiGeek.创建weiyigeek-oa任务流水线图</p>            </figure><p>温馨提示：由于 Jenkins Pipeline 流水线代码太长，需要的朋友可以关注【WeiyiGeek】公众号后回复【Jenkins流水线代码】即可下载 <code>Jenkins-Pipeline.groovy</code> 示例文件。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230207170309.png" alt="WeiyiGeek.Jenkins流水线代码图" title="" class="">                <p>WeiyiGeek.Jenkins流水线代码图</p>            </figure><p><br/></p><p>步骤 03.回到项目首页，点击 【build with Parameters】选择构建项目指定参数，点击【开始构建】便可进行构建任务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 从控制台输出看到当前 weiyigeek-oa 运行在我们使用docker部署的agent节点之上(docker-jenkins-jnlp)</span></span><br><span class="line">Started by user Jenkins 管理员</span><br><span class="line">[Pipeline] Start of Pipeline</span><br><span class="line">[Pipeline] node</span><br><span class="line">Running on docker-jenkins-jnlp <span class="keyword">in</span> /home/jenkins/agent/workspace/weiyigeek-oa</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230207093625.png" alt="WeiyiGeek.流水线任务构建参数设定与运行图" title="" class="">                <p>WeiyiGeek.流水线任务构建参数设定与运行图</p>            </figure><p><br/></p><p>步骤 04.任务运行完毕后可以通过 Blue Ocean 进行查看各阶段的执行情况，以及查看Jenkins发送在企业微信中构建信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Jenkins-消息通知【weiyigeek-oa-1】任务开始 </span><br><span class="line">项目信息: overtime-leave-1.5.5.jar</span><br><span class="line">提交信息: 6f335ad 统计查询添加筛选条件</span><br><span class="line">构建版本: master - origin/master</span><br><span class="line">构建操作: None</span><br><span class="line">镜像构建: True</span><br><span class="line">部署环境: Prod</span><br><span class="line">成品归档: False</span><br><span class="line">质量测试: False</span><br><span class="line">镜像仓库1: harbor.weiyigeek.top/weiyigeek/oa:master</span><br><span class="line">镜像仓库2: harbor.weiyigeek.top/weiyigeek/oa:latest</span><br><span class="line">查看当前任务流水线</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230207094227.png" alt="WeiyiGeek.流水线任务阶段执行情况查看说明图" title="" class="">                <p>WeiyiGeek.流水线任务阶段执行情况查看说明图</p>            </figure><p>至此，在 Docker 中运行 Jenkins Agent 实践完毕！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;</summary>
    
    
    
    <category term="DevSecOps" scheme="https://blog.weiyigeek.top/categories/DevSecOps/"/>
    
    <category term="CICD" scheme="https://blog.weiyigeek.top/categories/DevSecOps/CICD/"/>
    
    
    <category term="Jenkins" scheme="https://blog.weiyigeek.top/tags/Jenkins/"/>
    
  </entry>
  
  <entry>
    <title>18.计算机科学导论之人工智能初识学习笔记</title>
    <link href="https://blog.weiyigeek.top/2023/1-19-709.html"/>
    <id>https://blog.weiyigeek.top/2023/1-19-709.html</id>
    <published>2023-01-19T10:35:30.000Z</published>
    <updated>2023-02-13T08:02:27.234Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="计算机科学导论学习笔记"><a href="#计算机科学导论学习笔记" class="headerlink" title="计算机科学导论学习笔记"></a>计算机科学导论学习笔记</h1><h1 id="第-5-部分-数据安全与人工智能"><a href="#第-5-部分-数据安全与人工智能" class="headerlink" title="第 5 部分 数据安全与人工智能"></a>第 5 部分 数据安全与人工智能</h1><p>此部分包含第15、16、17和18章，包含了计算机中传输的数据压缩(有损与无损)、网络数据在传输过程中如何保证其数据安全, 讨论计算理论，即哪些是可计算的，哪些是不可计算的，最后介绍当前热门的人工智能(AI)的观点，加深我们对计算机数据处理的的认识，为后续学习扩展基础认识。</p><p>原文地址: <a href="https://mp.weixin.qq.com/s/Sa9dVU7JOS5zEddldf22mw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/Sa9dVU7JOS5zEddldf22mw</a><br><a id="more"></a></p><h2 id="18-人工智能"><a href="#18-人工智能" class="headerlink" title="18.人工智能"></a>18.人工智能</h2><p>作为最后一章，我们将对人工智能（AI）作简单的介绍，当前人工智能不是即将实现，而是已经实现了，将主要介绍人工智能的简史和定义，以及AI需要了解的基础知识学习，最后介绍两种在人工智能中常用的编程语言。</p><h3 id="18-1-简单介绍"><a href="#18-1-简单介绍" class="headerlink" title="18.1 简单介绍"></a>18.1 简单介绍</h3><h4 id="0-人工智能简史"><a href="#0-人工智能简史" class="headerlink" title="(0) 人工智能简史"></a>(0) 人工智能简史</h4><p>虽然人工智能作为一门独立的学科是相对年轻的，但它还是经历了一段发展的时间，当2400年前希腊哲学家亚里多斯德发明了逻辑推理这个概念时，人工智能就开始了，接着莱布尼茨和牛顿完成了逻辑语言的定稿。</p><p>乔治•布尔在19世纪逐步提出的布尔代数（附录E）奠定计算机电子电路的基础。但是思维计算机的主要思想却来自于<code>阿兰•图灵</code>，他提出了图灵测试, “人工智能”这个术语是<code>John McCarthy</code> （约翰•麦卡思）在1956年首次提出的。</p><p><br/></p><h4 id="1-什么是人工智能AI"><a href="#1-什么是人工智能AI" class="headerlink" title="(1) 什么是人工智能AI?"></a>(1) 什么是人工智能AI?</h4><blockquote><p>答: 人工智能（AI,Artificial Intelligence）是对程序系统的研究，该程序系统在一定程度上能模仿人类的活动，如感知、思考、学习和反应。<br>简而言之，AI 即模仿人类行为和能力创建软件，</p></blockquote><p><br/></p><p><strong>人脑与人工智能对比</strong></p><ul><li>功耗：20W/几十万倍</li><li>鲁棒性：极强 / 弱</li><li>推广性：强 / 弱</li><li>犯大错误概率(原理): 没有 / 有</li><li>学习样本:少量 / 大量</li><li>可理解性(可解释性)：好 / 差</li></ul><p><br/></p><p>当前人工智能技术的五大局限性条件:</p><ul><li>拥有丰富的数据或(和)知识</li><li>完全信息</li><li>确定性</li><li>静态(按确定的规则演化)</li><li>有限领域于单任务</li></ul><p><br/></p><h4 id="2-人工智能AI应用场景有那些"><a href="#2-人工智能AI应用场景有那些" class="headerlink" title="(2) 人工智能AI应用场景有那些?"></a>(2) 人工智能AI应用场景有那些?</h4><p>当下AI应用场景多如以下情况:</p><ul><li>机器学习 - 它通常是 AI 系统的基础，也是我们“教”计算机模型进行预测并根据数据得出结论的方式。</li><li>异常情况检测 - 自动检测系统中的错误或异常活动的能力。</li><li>计算机视觉 - 软件通过相机、视频和图像直观地解释世界的能力。</li><li>自然语言处理 - 计算机理解书面或口头语言并作出相应反应的能力。</li><li>对话式 AI - 软件“代理”参与对话的能力。</li><li>知识挖掘 - 从大量通常非结构化数据中提取信息以创建可搜索的知识存储的功能。</li></ul><p><br/></p><p><strong>异常情况检测应用场景</strong><br>假设你要创建一个软件系统来监视信用卡交易，并检测可能表示欺诈的异常使用模式。</p><p>或者要创建一个应用程序来跟踪自动化生产线中的活动并识别故障。</p><p>或者要创建一个赛车遥测系统，使用传感器在潜在机械故障发生之前主动向工程师发出相关警告。</p><p>可以通过异常情况检测应对这些类型的场景。异常情况检测是一种基于机器学习的技术，可用于分析一段时间内的数据并标识异常更改。</p><p>让我们探讨一下异常情况检测如何在赛车场景中发挥作用, 我们可利用汽车内的传感器收集遥测数据，如发动机转速、刹车温度等。<br>异常情况检测模型经过训练，了解一段时间内遥测度量值的预期波动情况。</p><p>如果度量值在正常预期范围之外，则该模型将报告异常，用于提醒赛车工程师通知车手先进站修理，以免因该问题而被迫退赛。</p><figure class="image-box">                <img src="https://docs.microsoft.com/zh-cn/learn/wwl-data-ai/get-started-ai-fundamentals/media/anomaly-detection.gif" alt="异常情况检测应用场景" title="" class="">                <p>异常情况检测应用场景</p>            </figure><p><br/></p><p><strong>计算机视觉应用场景</strong></p><p>计算机视觉是 AI 的一个领域，它负责处理视觉对象，让我们了解一下计算机视觉带来的一些可能性。</p><p>例如，Seeing AI 应用是一个很好的计算机视觉示例，Seeing AI 应用专门面向盲人和弱视群体，它利用 AI 的力量来打开视觉世界，描述附近的人、文字和物体。</p><p>大多数计算机视觉解决方案都基于机器学习模型，这些模型可应用于来自相机、视频或图像的视觉输入，如下表描述了常见的计算机视觉任务。</p><table><thead><tr><th>任务</th><th>说明</th></tr></thead><tbody><tr><td></td></tr></tbody></table><p>图像分类 | 带有“出租车”标签的出租车图像，图像分类涉及训练机器学习模型，使其根据图像内容对图像进行分类。 <br/> 例如，你可以在交通监控解决方案中使用图像分类模型，根据图像所包含的车辆类型（例如出租车、公共汽车、骑自行车的人等）对图像进行分类。|<br>物体检测 | 用边界框突出显示公交车、汽车和自行车骑行者的街道图像，对象检测机器学习模型经过训练，可以对图像中的单个对象进行分类，并使用边界框确定其位置。 <br/> 例如，交通监控解决方案可使用对象检测来识别不同类别车辆的位置。|<br>语义分割 | 街道图像，其中已识别出属于公交车、汽车和骑行者的像素，语义分割是一种高级机器学习技术，其中图像中的各个|像素根据其所属的对象进行分类。 <br/> 例如，交通监控解决方案可能会在交通图像上覆盖“蒙版”图层，以使用特定颜色突出显示不同的车辆。<br>图像分析 | 显示遛狗人的街道图像，标题为“街道上的遛狗人”，可以创建结合使用机器学习模型和高级图像分析技术从图像中提取信息的解决方案，包括可以帮助对图像进行归类的“标签”，甚至可以归纳总结图像中所示场景的描述性标题。|<br>人脸检测、分析和识别 | 多个人站在城市街道上的图像，其中突出显示了这些人的人脸人脸检测是对象检测的一种特殊形式，可以在图像中找出人脸。 这可以与分类和面部几何分析技术相结合，用来推断出年龄和情绪状态等细节；甚至根据他们的面部特征来识别个人。|<br>光学字符识别 (OCR) | 突出显示“多伦多道明银行”标志的建筑物图像，光学字符识别是一种用于检测和读取图像中文本的技术。你可以使用 OCR 读取照片中的文字（例如：路标或店面），或从扫描的文档中提取信息，例如字母、发票或表格。 |</p><p><br/></p><p><strong>自然语言处理应用场景</strong></p><p>自然语言处理 (NLP) 是 AI 的一个领域，它负责创建能够理解书面和口头语言的软件。</p><p>NLP 使你能够创建可以执行以下操作的软件：</p><ul><li>分析和解释文档、电子邮件和其他来源中的文本。</li><li>解释口头语言，并合成语音响应。</li><li>将口头或书面短语在各种语言之间进行翻译（不用语言之间的同步翻译）。</li><li>解释命令并确定合适的操作。</li></ul><p>例如，星舰指挥官是一款由 Human Interact 开发的虚拟现实 (VR) 游戏，故事发生在科幻世界中, 该游戏使用自然语言处理让玩家能够控制对白，并与游戏中的人物和星舰系统交互。</p><p>例如，当前流行元宇宙（Metaverse），是人类运用数字技术构建的，由现实世界映射或超越现实世界，可与现实世界交互的虚拟世界 ，具备新型社会体系的数字生活空间。</p><p>如下表描述了自然语言处理常见的任务<br>| 任务 | 功能 |<br>|——|——|<br>文本分析 | 使用此服务可以分析文本文档并提取关键短语，检测实体（例如地点、日期和人物）并评估情绪（文档内容的正面或负面程度如何）。|<br>文本翻译 | 使用此服务可在 60 多种语言之间进行文本翻译。 |<br>语音 | 使用此服务可识别和合成语音，并翻译口语。 |<br>语言理解智能服务 (LUIS)     | 使用此服务可以训练能够理解口头或文本命令的语言模型。 |</p><p><br/></p><p><strong>对话式AI应用场景</strong><br>对话式 AI 这一术语用于描述 AI 代理参与人类对话的解决方案。 </p><p>通常，对话式 AI 解决方案使用机器人来管理与用户的对话, 对话可以通过网站界面、电子邮件、社交媒体平台、消息系统、电话和其他渠道进行。</p><p>机器人可以作为以下 AI 解决方案的基础：</p><ul><li>产品或服务的客户支持。</li><li>餐厅、航空公司、电影院和其他以预约为基础的业务的预订系统。</li><li>卫生保健咨询和自我诊断。</li><li>智能家居和个人数字助理。</li></ul><p>例如，当前最流行强大的ChatGPT(OpenAI)可模拟人类间的相互对话（问答），以及按照使用者的描述生成或者操作某一对象, 如生成图像。</p><p><br/></p><h4 id="3-那么人工智能AI如何学习？"><a href="#3-那么人工智能AI如何学习？" class="headerlink" title="(3) 那么人工智能AI如何学习？"></a>(3) 那么人工智能AI如何学习？</h4><p>当前是从数据中学习, 在当今世界，我们在日常生活中会创建大量数据。 </p><p>从我们发送的短信、电子邮件和社交媒体帖子，到我们用手机拍摄的照片和视频，我们产生了大量信息。 我们的房屋、汽车、城市、公共交通基础设施和工厂中的数百万个传感器也在创建更多数据。</p><p>数据科学家可使用所有这些数据来训练机器学习模型，这些模型可以根据它们在数据中找到的关系进行预测和推断。</p><p>例如，假设一个环境保护组织需要志愿者使用手机应用来对不同种类的野花进行识别和分类，以下动画展示了如何使用机器学习来实现此方案。</p><figure class="image-box">                <img src="https://docs.microsoft.com/zh-cn/learn/wwl-data-ai/get-started-ai-fundamentals/media/machine-learn.gif" alt="识别分类图" title="" class="">                <p>识别分类图</p>            </figure><p><strong>动画流程:</strong></p><ul><li>(1) 一个由植物学家和科学家组成的团队<code>收集</code>有关野花样本的数据。</li><li>(2) 并对样本的物种进行正确<code>标记</code>。</li><li>(3) 使用算法对标记的数据进行处理，该算法可以<code>提取样本特征与标记的物种之间的关系</code>。</li><li>(4) 该算法的结果内嵌在<code>模型</code>中。</li><li>(5) 志愿者发现新样本后，该模型可以正确<code>识别</code>物种标记。</li></ul><p><br/></p><h4 id="4-人工智能挑战和风险有那些"><a href="#4-人工智能挑战和风险有那些" class="headerlink" title="(4) 人工智能挑战和风险有那些?"></a>(4) 人工智能挑战和风险有那些?</h4><p>描述: 人工智能是一种强大的工具，可以极大地造福世界, 但是像任何工具一样, 其有好有坏,必须负责任地使用它。</p><p>AI 应用程序开发人员面临的一些潜在挑战，例如包括但不限于如下表所示：</p><table><thead><tr><th>挑战或风险</th><th>示例</th></tr></thead><tbody><tr><td>偏差可能会影响结果</td><td>贷款审批模型因训练数据中的偏差而产生性别歧视</td></tr><tr><td>错误可能会造成伤害</td><td>自动驾驶车辆遇到系统故障并引发碰撞</td></tr><tr><td>可以公开数据</td><td>医疗诊断机器人使用敏感患者数据进行训练，这些数据存储不安全</td></tr><tr><td>解决方案可能并不适用于所有人</td><td>家庭自动化助手不为视觉障碍用户提供音频输出</td></tr><tr><td>用户必须信任复杂系统</td><td>基于 AI 的金融服务工具提供投资建议 - 它们基于什么？</td></tr><tr><td>谁对 AI 驱动的决策负责？</td><td>一个无辜的人因为面部识别证据而被判有罪 - 谁该为此负责？</td></tr></tbody></table><p><br></p><p><strong>规避风险</strong></p><p>为了解决上述问题在我们进行 AI 软件的开发时，需要遵循六项原则，旨在确保 AI 应用程序能为棘手的问题提供出色的解决方案，而不产生任何意外的负面影响。</p><ul><li><p>(1) 公平性: AI 系统应该公平对待所有人。 例如，假设你创建了一个机器学习模型来为银行的贷款审批应用程序提供支持。 该模型应在不考虑任何基于性别、种族或其他因素的偏见的情况下，对是否应批准贷款做出预测，这些偏见可能导致特定的申请人群遭受不公平的差别待遇。<br>意味着公平性在 AI 提供的上下文中是一个基本的社会与技术双重挑战，也就是说我们必须有足够多样化的人来开发和部署 AI 系统。</p></li><li><p>(2) 可靠性和安全性 AI 系统应可靠且安全地运行。 例如，大家思考一下基于 AI 的自动驾驶软件系统；或诊断患者症状并推荐处方的机器学习模型这些案例。 这些系统一旦出现不可靠性，就可能会给生命安全带来重大风险。</p><p>基于 AI 的软件应用程序开发必须经过严格的测试和部署管理，以在发布前确保它们能达到预期。</p><p>确保自己开发的系统与我们的设计理念一致，并且符合我们的价值观和原则。系统和模型不会为世界带来损害。<br>考虑安全性时，我们首先想到的例子时自动驾驶汽车，但绝不限于这些物理系统、物理代理。</p></li><li><p>(3) 隐私和安全<br>AI 系统应该保护并尊重隐私。 AI 系统所基于的机器学习模型依赖于大量数据，这些数据可能包含必须保密的个人详细信息。 即使对模型进行了训练且系统已投入生产，它仍可能在使用新数据进行预测或采取行动时侵犯隐私或安全。</p><p>与日俱增的依赖性和数据对保持系统安全提出了新要求。</p><p>当考虑这些人工智能系统的安全性时，你需要考虑数据从何而来、是如何到来的，如果是用户提交的数据，或是预测中使用的公共数据源，你如何防止数据被破坏，并配备异常检测或其他用于检测数据变化的系统，这些变化可能表明有对手试图影响系统结果。</p></li><li><p>(4) 包容性<br>AI 系统应该成为人们的有力助手，并与人互动。 AI 应不分身体能力、性别、性取向、种族或其他因素，造福社会各个阶层。</p></li></ul><ul><li><p>(5) 透明度<br>AI 系统应该是可理解的。 应让用户能充分了解系统的用途、工作方式以及局限性。</p><p>透明度具有两面性；一方面，透明度意味着创建人工智能系统的人应该对他们使用人工智能的方式和原因持开放态度，同时也要对他们系统的局限性持开放态度。<br>另一方面，透明度意味着人们应能够理解人工智能系统的行为，这就是人们常说的可解释性或可理解性。</p></li><li><p>(6) 问责<br>应有相关人员对 AI 系统负责。 设计和开发基于 AI 的解决方案的人员应在管理和组织原则的框架内工作，以确保解决方案符合定义明确的道德和法律标准。</p></li></ul><p>总结: 所以，在将我们的面部识别原则用于整个公司都可以遵循的实践和过程时，我们必须要做的是设定大概的原则（例如对于公平性的承诺），并思考如何让开发团队秉持这些原则来审视开发生命周期的每个阶段。</p><p><strong>参考文章</strong></p><ul><li>Microsoft Azure AI 基础知识(人工智能入门) : <a href="https://learn.microsoft.com/zh-cn/training/paths/get-started-with-artificial-intelligence-on-azure/" target="_blank" rel="noopener">https://learn.microsoft.com/zh-cn/training/paths/get-started-with-artificial-intelligence-on-azure/</a></li></ul><p><br/></p><h3 id="18-2-基础知识"><a href="#18-2-基础知识" class="headerlink" title="18.2 基础知识"></a>18.2 基础知识</h3><h4 id="1-图灵测试"><a href="#1-图灵测试" class="headerlink" title="(1) 图灵测试"></a>(1) 图灵测试</h4><p>在1950年，阿兰•图灵提出了图灵测试, 该测试提出了机器具有智能的一个定义，测试的方式是简单地比较人类的智能行为和计算机的智能行为。</p><p>即一个询问者对计算机和人类都提出一组问题，然后询问者得到两组答案，但他不知道哪一组是来自人类，哪一组来自计算机。</p><p>在仔细检查两组答案后，如果询问者不能肯定地说出哪一组来自人类，哪一组来自计算机（计算机模拟人类回答），那么，计算机就通过了具有智能行为的图灵测试。</p><p><br/></p><h4 id="2-智能体"><a href="#2-智能体" class="headerlink" title="(2) 智能体"></a>(2) 智能体</h4><p><strong>什么是智能体?</strong></p><blockquote><p>智能体是一个能智能地感知环境、从环境中学习并与环境进行交互的系统。</p></blockquote><p>智能体可以分成两大类：软件智能体和物理智能体。</p><p><strong>1) 软件智能体</strong></p><blockquote><p>软件智能体是一组用来完成特殊任务的程序。<br>例如，有些智能系统能用来整理电子邮件（e-mail）,能检査收到的邮件的内容，然后把它们归到不同的类别中（垃圾、不重要、重要、非常重要等）, 另外一个软件智能体的例子是搜索引擎，它搜索万维网，发现能提供与查询主题相关信息的网址。</p></blockquote><p><strong>2) 物理智能体</strong></p><blockquote><p>物理智能体（机器人）是一个用来完成各项任务的可编程系统。简单的机器人可以用在制造行业，从事一些日常的工作，如装配、焊接或油漆。有些组织使用移动机器人去做一些日常的分发工作，如分发邮件或明信片到不同的房间, 移动机器人可以在水下探测石油。<br>人型机器人是一种自治的移动机器人，它模仿人类的行为。虽然人型机器人只在科幻小说中流行，但是要使这种机器人能合理地与周围环境交互并从环境里发生的事件中学习，这里面还有很多工作要做，在当前正在如火如荼的进行着，坚信通过不断的发展一定会成功的。</p></blockquote><p><br/></p><h4 id="3-编程语言"><a href="#3-编程语言" class="headerlink" title="(3) 编程语言"></a>(3) 编程语言</h4><p>描述: 虽然有些通用语言（如C、C++和Java、Python）能用来编写智能软件，但有两种语言是特别为人工智能设计的，它们是 LISP 和 PROLOG 语言</p><p><br/></p><p><strong>1) LISP</strong><br>LISP （LISt Programming）是约翰•麦卡思在1958年发明的，顾名思义，LISP是一种操纵表的编程语言。LISP把数据和程序都当成表，这就意味着LISP程序能改变它自身。这个特性与智能体的理念相吻合，智能体能从环境中学习并改善自身行为。<br>但是，LISP的一个缺点是它的行动迟缓。如果要处理的表比较长，LISP就变得很慢。另一个缺点是它的语法复杂。</p><p><strong>2) PROLOG</strong><br>PROLOG （PROgraming in LOGic）是一种能建立事实数据库和规则知识库的编程语言。使用PROLOG编程能使用逻辑推理来回答那些可或从知识库中推导出来的问题。但是，PROLOG不是一种效率很高的编程语言，有些复杂问题使用其他语言（如C、C++或Java） 来解决时，效率更高。</p><p><br/></p><p><strong>3) Python</strong></p><p>此处不得不提到Python编程语言，Python是人工智能中使用最广泛的编程语言之一，因为它简单易用，而且可以与数据结构和其他常用的AI算法无缝地使用。</p><p>Python是适用AI项目的原因是许多基于Python的有用库可以在AI中使用，比如Numpy提供科学计算能力，Scypy提供高级计算，Pybrain提供机器学习。</p><p><strong>4) Java</strong><br>Java也是AI项目的好选择。它是一种面向对象的编程语言，专注于提供AI项目所需的所有高级特性，是可移植的，并提供内置的垃圾收集。</p><p>Java社区也是一个优势，丰富的社区生态系统可以帮助开发人员随时随地查询和解决问题。</p><p>对于AI项目来说，算法是灵魂，无论是搜索算法、自然语言处理算法还是神经网络，Java都可以提供简单的编码算法。此外，Java可扩展性也是AI项目的一个基本特征。</p><p><strong>5) C++</strong><br>C++是世界上速度比较快的编程语言，其在硬件层面上的交流能力使开发人员能够改进程序执行时间。对于时间很敏感，这对于AI项目是非常有用的，例如，搜索引擎可以广泛使用C++。</p><p>在AI项目中，C++可以用于统计，比如神经网络。此外，该算法可以在C++被广泛地快速执行，游戏AI主要使用C++代码，以便更快地执行和响应时间。</p><p><br></p><h3 id="18-3-知识表示"><a href="#18-3-知识表示" class="headerlink" title="18.3 知识表示"></a>18.3 知识表示</h3><p>当下阶段常常使用人工智能体来解决现实世界中的一些问题，此时就需要他能够进行知识的表达，当知识<code>被表示成数据结构后就能被存储在计算机中的程序操纵</code>, 此小节中我们描述4种常见的知识表示方法<code>语义网、框架、谓词逻辑和基于规则的系统</code>。</p><h4 id="1-语义网"><a href="#1-语义网" class="headerlink" title="(1) 语义网"></a>(1) 语义网</h4><p>语义网是Richard H.Richens在20世纪60年代提出的, 其使用<code>有向图</code>表示知识。</p><p>正如在第12章讨论的，有向图由顶点（nodes）和边（arcs）构成, 语义网用顶点代表概念, 用边（用箭头表示）表示两个概念间的关系。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230131112201.png" alt="WeiyiGeek.简单的语义网图" title="" class="">                <p>WeiyiGeek.简单的语义网图</p>            </figure><p><strong>1) 概念</strong><br>描述: 为了给概念一个准确的定义，专家们把概念的定义与集合理论联系起来。因此，概念被看成一个集合或一个子集。</p><p>例如，“动物”是所有动物的集合，“马”是所有马的集合，也是“动物”的子集。对象是集合中的成员（实例），概念用顶点表示, 是不是与我们在学习对象编程语言中的类class相似。</p><p><strong>2) 关系</strong></p><p>描述: 我们使用关系（用边）, 表示一条边可以定义一个“子类”关系一条边从子类指向超类，一条边可以定义一个“实例”关系一条边从实例指向它所属的集合，一条边也可以定 义一个对象的属性（颜色、大小……）。</p><p>最后，一条边可以定义一个对象的所有权，例如拥有另外一个对象，语义网能很好定义的最重要的关系是“继承”，继承关系定义明了这样一个事实: 一个类的所有属性将出现在继承的类中。</p><p>这可以用来从用图表示的知识中推导出新的知识。</p><p><br/></p><h4 id="2-框架"><a href="#2-框架" class="headerlink" title="(2) 框架"></a>(2) 框架</h4><p>框架与语义网是紧密相关的，在语义网中，<code>图用来表示知识</code>；在框架中，<code>数据结构（记录）用来表示相同的知识</code>。</p><p>与语义网相比，框架的一个优点是程序更容易处理框架，而不是语义网。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230131112653.png" alt="WeiyiGeek.框架表示语义图" title="" class="">                <p>WeiyiGeek.框架表示语义图</p>            </figure><p><strong>1) 对象</strong><br>语义网中的一个节点变成了一组框架中的一个对象，所以一个对象可以定义一个类、一个子类或类的一个实例。例如上图中，爬行动物、哺乳动物、狗、Roxy 和 Ringo 都是对象。</p><p><strong>2) 槽</strong><br>语义网中的边被翻译成“槽”（数据结构中的域）, 槽的名字定义了关系的类型和构成关系的槽的值。例如上图中，动物是爬行动物对象的一个槽。</p><p><br/></p><h4 id="3-谓词逻辑"><a href="#3-谓词逻辑" class="headerlink" title="(3) 谓词逻辑"></a>(3) 谓词逻辑</h4><p>通常的知识表示是谓词逻辑, 谓词逻辑可以用来表示复杂的事实。</p><p>由于有了悠久历史的理论逻辑的支持，谓词逻辑成为一门良好定义的语言，此节我们先介绍简单一些的语言——命题逻辑，然后再介绍谓词逻辑。</p><p><strong>1) 命题逻辑</strong></p><p>命题逻辑是由对世界进行逻辑推理的一组句子组成的一种语言。</p><ul><li><strong>运算符</strong>: 命题逻辑使用5种运算符，如下所示：<blockquote><p>第一个运算符是一元运算符（运算符带一个句子），其他4个都是二元运算符（运算符带两个句子）, 每个句子的逻辑值（真或假）取决于原子句子的逻辑值，原子句子是不带运算符的构成复杂句子的特殊句子。图18-3显示了命题逻辑中每个运算符的真值表。</p></blockquote></li></ul><p><img src="https://img.weiyigeek.top/2023/1/20230131113004.png" alt="WeiyiGeek.命题逻辑运算符图"></p><ul><li><strong>句子</strong>: 在此种语言中的句子递归定义，如下所示:<blockquote><p>1) 大写字母（如A、B、S或T）表示在自然语言中的一个语句，它们是一个句子。<br>2) 两个常数值（真和假）中的任意一个都是句子。<br>3) 如果P是句子，则<code>非P</code>也是句子。<br>4）如果P和Q是句子，则 P V Q， P ^ Q, P -&gt; Q 和 P <-> Q 都是句子。</p></blockquote></li></ul><p>例如, 以下的是命题语言中的句子：<br>a. 今天是星期天（S）<br>b. 天在下雨（R）<br>c. 今天是星期天或者是星期一（S V M）<br>d. 天没下雨 （<code>非R</code>）<br>e. 如果狗是哺乳动物，那么猫也是哺乳动物（D→C）</p><ul><li><strong>推演</strong>: 在命题逻辑中需要从已知的事实中推导出新的事实此过程称为<code>推演</code>，给定两个假定为真的句子，我们能推演出新的为真的句子，前面两个句子称为前提，推演出的句子称为结论，而整个称为论断。</li></ul><blockquote><p>前提1：    他或者在家或者在办公室<br>前提2：    他不在家<br>结论    所以，他在办公室<br>如果我们用H代表 “他在家”，O代表 “他在办公室”，符号I-代表“所以”，那上面的论断可以表示成 <code>{H V O , 非 H}| - O</code>。</p></blockquote><p>我们是如何证明推演的论断是合法的，一个合法的论断是指它的结论是前提的必然延续。换言之，在一个合法的推演论断中，如果所有的前提都为真，而结论为假，这是不可能的。</p><p>验证论断合法性的一种方法是为前提和结论建立真值表，如果我们在其中发现了反例，那么结论就是非法的，反例就像所有的前提都为真，而结论却是假。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230131115140.png" alt="WeiyiGeek.推演图" title="" class="">                <p>WeiyiGeek.推演图</p>            </figure><p>所以当找不到反例时，论断就是合法的。</p><p><br/></p><p><strong>2) 谓词逻辑</strong></p><p>在命题逻辑中，表示句子的符号是原子的，我们不能分割开它而发现各个组成部分中所含的信息。</p><p>例如，如下这样的句子：<code>P1：&quot;琳达是玛丽的母亲”    P2： “玛丽是安妮的母亲”</code> , 我们可以用很多方法来组合这两个句子从而产生其他的句子, 但却不能抽取出琳达和安妮间的任何关系。</p><p>例如，我们不能从上面两个句子中推导出琳达是安妮的祖母, 若要进行这样的推导，我们就需要使用带谓词逻辑，这种逻辑定义了命题各部分间的关系。</p><p>在谓词逻辑中，句子被分成谓词和参数。例如，如下的句子被写成了谓词带两个参数的形式：</p><blockquote><p>P1： “琳达 是 玛丽 的母亲” 变成 母亲（琳达，玛丽）<br>P2： “玛丽 是 安妮 的母亲” 变成 母亲（玛丽，安妮）</p></blockquote><p>上面句子中的母亲关系是由谓词“母亲”来定义的，如果在两个句子中的玛丽是指同一 个人，我们可以推导出琳达和安妮间的新的关系：祖母（琳达，安妮）, 这就是谓词逻辑要实现的目的。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230131142855.png" alt="WeiyiGeek.谓词逻辑之句子、量词、推演图" title="" class="">                <p>WeiyiGeek.谓词逻辑之句子、量词、推演图</p>            </figure><p><br/></p><p><strong>3) 超谓词逻辑</strong></p><p>由于逻辑推理的需要，逻辑得到了进一步的发展，这些包括高阶逻辑、默认逻辑、模态逻辑和时态逻辑，此处只是简单地罗列一下这些名词。</p><p>1) 高阶逻辑: 扩展了谓词逻辑中量词 ∀（所有的）和 彐 (存在) 的范围, 这些谓词逻辑中的量词把变量x和y绑定到实例(在初始化时), 在高阶逻辑中我们能使用量词捆绑那些代表属性和关系的变量，这样在初始化的过程中，这些变量被换成了谓词。</p><blockquote><p>例如，我们可以有 ∀ P(Pj v Ps), 下标 j 和 a 表示 John 和 Anne, 意味着 John 和 Anne 具有完全相同的属性。</p></blockquote><p>2) 模态逻辑: 逻辑的一个快速发展的趋势是模态逻辑, 逻辑中包含了“could”“should”、“may”might”“ought”等这样的表达式，来表达句子中语法上的语气。在这样的逻辑中，我们有符号表示“it is possible that”这样的运算符。</p><p>3) 时态逻辑：像模态逻辑一样，用一套时态运算符扩展了谓词逻辑，如“from now on”或者“at some point in time”，它们包含了论断合法性中的时间因素。</p><p>4) 默认逻辑: 我们假定论断的默认结论可以被接收，只要论断与知识库中的内容相一致即可。例如，我们假定所有的鸟都会飞，除非知识库中有内容废除了这条通用的事实。</p><p><br/></p><h4 id="4-基于规则的系统"><a href="#4-基于规则的系统" class="headerlink" title="(4) 基于规则的系统"></a>(4) 基于规则的系统</h4><p>描述: 基于规则的系统使用一组规则来表示知识，这些规则能用来从已知的事实中推导出新的事实。</p><p>规则表示当指定条件满足时什么为真，基于规则的数据库是一组<code>if……then……</code>语句，它们的形式为：<code>if A then B 或 A → B</code>, 其中A称为前提,B为结论。</p><p>注意在基于规则的系统中，每条规则都是独立处理的，与其他规则没有关联。</p><p><strong>1) 组成</strong><br>描述: 一个基于规则的系统由三部分构成<code>解释器（或推理机）、知识库和事实库</code>, 其关系如下所示:</p><ul><li>知识库: 基于规则系统中的知识库部分就是规则的数据库（仓库）。它包含一组预先建立的规则，这些规则能从给定事实中得出结论。</li><li>事实库: 包含了知识库中的规则要使用的一组条件。</li><li>解释器:（推理机）是一个处理器或控制器（如一段程序），它把规则和事实组合在一起,解释器有两种类型<code>正向推理</code>和<code>反向推理</code>。</li></ul><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230131145551.png" alt="WeiyiGeek.基于规则的系统三部分组成图" title="" class="">                <p>WeiyiGeek.基于规则的系统三部分组成图</p>            </figure><p><br/></p><p><strong>2) 正向推理</strong></p><p>正向推理是这样一个过程，解释器使用一组规则和一组事实来执行一个行动，此行动可能是向事实库中增加一条新的事实，或处理其他一些命令，如开启另一个程序或机器，解释器解释和执行规则，直到不再有要解释的规则。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230131145742.png" alt="WeiyiGeek.正向推理的流程图" title="" class="">                <p>WeiyiGeek.正向推理的流程图</p>            </figure><p>如果系统中有任何冲突发生，冲突是指有两条不同的规则可以应用到一个事实上，或一条规则可以应用到两个事实上，这时系统就要调用冲突处理过程来解决这个问题，这就保证了只有一个输出能被加到事实库中或一个行动被采取</p><p><br/></p><p><strong>3) 反向推理</strong></p><p>如果系统是证明一个结论，那么正向推理效率不高，面对给出的结论，所有的规则检査所有的事实。这种情况下如果使用反向推理，效率会高些。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230131150017.png" alt="WeiyiGeek.反向推理的流程图" title="" class="">                <p>WeiyiGeek.反向推理的流程图</p>            </figure><p>过程从一个结论（目标）开始，如果目标已在事实库中，则过程停止，结论得到验证，如果结论不在事实库中，那么系统査找目标在规则结论中的规则。</p><p>但是，反向推理不是触发这条规则，而是去验证这条规则中的每个事实（递归）。如果这条规则中的所有事实都在事实库中，那么原来的目标就得到验证。</p><p><br/></p><h3 id="18-4-专家系统"><a href="#18-4-专家系统" class="headerlink" title="18.4 专家系统"></a>18.4 专家系统</h3><p>专家系统使用前面所讨论的知识表示语言，来执行通常需要人类专家才能完成的任务。它们被用在需要人类专家，而人类专家却缺少、昂贵或不可用等场合。</p><p>例如，在医疗领域，可建立专家系统从一组症状中得到可能病因的子集，而这项任务通常是由医生来进行的。</p><h4 id="1-知识抽取"><a href="#1-知识抽取" class="headerlink" title="(1) 知识抽取"></a>(1) 知识抽取</h4><p>描述: 一个专家系统是建立在预先定义的关于领域专家经验的知识的基础上的, 因此建立专家系统的第一步就是从人类专家身上抽取知识, 抽取的知识就变成了我们前面讲到的知识库。</p><p>从专家身上抽取知识通常是困难的，这有几个原因：</p><ul><li>1）专家拥有的知识通常是启发式的，它们是基于概率的，而不是确定的。</li><li>2）专家常常发现用可以存放在知识库中的规则形式来描述知识是艰难的。<blockquote><p>例如，要一步一步地显示故障电动机是如何被诊断的，这对电气工程师来说是非常艰难的, 知识常常是直觉的。</p></blockquote></li><li>3）知识获取只能通过与专家个人会面才能进行, 如果会面者对这种会面并不擅长，那么会面将是累人的和枯燥的。</li></ul><p>所以说，知识抽取过程通常是由知识工程师来完成, 他可能并不是此领域的专家，但他有经验，知道如何去会面，如何去解释答案，所有这些工程师能用来建立知识库。</p><p><br/></p><h4 id="2-事实抽取"><a href="#2-事实抽取" class="headerlink" title="(2) 事实抽取"></a>(2) 事实抽取</h4><p>为了能推导新的事实或采取动作，除了需要用知识表示语言表示的知识库外，还需要事实库, 专家系统中的事实库是基于事例的，在事例中事实被收集或度量，然后进入系统，被推理机使用。</p><p><br/></p><h4 id="3-体系结构"><a href="#3-体系结构" class="headerlink" title="(3) 体系结构"></a>(3) 体系结构</h4><p>下图显示了一个专家系统体系结构背后的通常理念，该专家系统有7个部分构成：<code>用户、用户界面、推理机、知识库、事实库、解释系统和知识库编辑器</code>, 图中阴影的方框中通常它们被称为专家系统外壳。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230209151631.png" alt="WeiyiGeek.专家系统体系结构图" title="" class="">                <p>WeiyiGeek.专家系统体系结构图</p>            </figure><p>其中<code>推理机</code>是专家系统的心脏，它与<code>知识库、事实库和用户界面</code>进行通信, 专家系统中7个部分中的4个<code>（用户界面、推理机、解释系统和知识库编辑器）</code>是能一次建造，为多个应用使用的，因为它们并不依赖于特殊的知识库或事实库。</p><ul><li>用户: 使用系统，从所提供的专家经验中获益的实体。</li><li>用户界面: 允许用户与系统交互，用户界面能接收用户的自然语言，然后把它们翻译给系统。大多数用户界面提供用户友好的菜单系统。</li><li>推理机: 专家系统的心脏，它使用知识库和事实库推导出要釆取的动作。 </li><li>知识库: 是基于与相关领域专家的会面而得到的知识的集合。</li><li>事实库: 在专家系统中是基于事例的。对于每个事例，用户输入可用的或度量的数据进入事实库，推理机为这特殊的事例使用这些数据。</li><li>解释系统: 并不是所有的专家系统都有解释系统，它用来解释推理机得出的结论的合理性。</li><li>知识编辑器: 并不是所有的专家系统都有知识编辑器，当从领域专家那里获得新的经验时，用知识库编辑器来更新知识库。</li></ul><p><br/></p><h3 id="18-5-感知系统"><a href="#18-5-感知系统" class="headerlink" title="18.5 感知系统"></a>18.5 感知系统</h3><p>人工智能的一个目标是创建一台行为像专家的机器(<code>专家系统</code>), 另外一个目标是创建一台行为像普通人的机器。</p><p>通过模拟人类感知（视觉、听觉、触觉、 嗅觉、味觉）进行执行对应操作，例如人类通过眼睛看风景，头脑把它解释成在风景中抽取出来的对象类型。人类通过耳朵听到一组声音信号，头脑把它解释成有意思的句子等等。</p><p>如果一个智能体要表现得像人类，那它就应该有感知能力，当前人工智能已经初步完成两种感知<code>视觉和听觉</code>，并广泛应用在社会的各个层面，所以此处将主要讨论两种感知。</p><h4 id="1-图像处理"><a href="#1-图像处理" class="headerlink" title="(1) 图像处理"></a>(1) 图像处理</h4><p>图像处理或计算机视觉是人工智能的一个研究领域，它处理通过像摄像机这样的智能体的人工眼睛而获得的对对象的感知，一个图像传感器从外部世界获得二维图像，然后创建在场景中的这个对象的三维描述。</p><p>虽然，这对人类来说是容易的事情，但对智能体来说却是困难的事情，图像处理器的输入是一幅或多幅场景图像，而得到的输岀是场景中对象的描述（<code>抽取出对象的特征</code>）。</p><p><strong>1.边缘探测</strong></p><p>图像处理的第一步是边缘探测，去査找图像中的边缘在哪里，边缘定义了图像中的对象和背景间的边界。</p><p>例如，下图显示了一个非常简单的图像和用0〜9表示的像素点的亮度值，此处0表示黑，9表示白，<code>使用亮度较大的差异值去査找邻接像素点，就能找到边缘</code>(重点)。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230209173827.png" alt="WeiyiGeek.图像处理器与边缘探测处理图" title="" class="">                <p>WeiyiGeek.图像处理器与边缘探测处理图</p>            </figure><p><strong>2.分段</strong><br>分段把图像分成同构的段或区域，同构的定义随着方法的不同而不同，但是，通常同构的区域是其中像素点亮度值变化平滑的区域。</p><p>分段与边缘探测非常类似（区别）</p><ul><li>在边缘探测中，对象的边缘和背景被找到。</li><li>在分段中，对象中两个不同区域的边界被找到，经过分段后，对象被分成不同的区域。</li></ul><p>有几种方法进行分段，例如<code>阈值化</code>和<code>分割</code>与<code>合并</code>。</p><ul><li>阈值化: 它把指定亮度值的像素点选择出来，试图去发现所有具有相同或非常相近亮度值的像素点，通过这种方法找到的像素点形成了一个段。</li><li>分割: 选取一个非同构的区域，把它分成同构的区域。</li><li>合并: 它用来进行具有相同亮度值区域的合并。</li></ul><p><br/></p><p><strong>3.査找深度</strong></p><p>图像分析接下来的一步是查找对象的深度或是图像中的对象, 深度的查找可以<code>帮助智能体去测量对象距它多远</code>， 有两种常用的方法<code>立体视觉</code>和<code>运动</code>。</p><ul><li>立体视觉，(有时称为立体影像)使用人类眼睛的技术来发现对象的深度，识别对象距离的一种工具就是两只眼睛或两台摄像机，两台摄像机创建的图像能帮助智能体去判定对象是近还是远。</li><li>运动，当图中一个或多个对象移动时建立多幅图像，在场景中移动对象与其他对象间的相对位置能给出对象距离的提示。</li></ul><p><br/></p><p><strong>4.查找方向</strong></p><p>场景中的对象的方向可以使用两种技术来发现<code>光照和纹理</code>。</p><ul><li><p>光照: 光从物体表面反射的总量由多个因素来决定</p><blockquote><p>如何一个对象的不同表面的光学特性是相同的，那么反射光线的总量将取决于反射光源的物体表面(它的相对位置)的方向。(如下图所示)</p></blockquote></li><li><p>纹理: (有规律重复的图案)也能对査找方向或表面的曲率有所帮助, 如果智能体能识别图案，这将帮助它査找对象的方向或曲率。</p></li></ul><p><br/></p><p><strong>5.对象识别</strong><br>图像处理的最后一步是对象识别，智能体需要在它的记忆里有可进行比较的对象模型，但是，把所见的每个对象模型都进行创建和存储是一个不可能的任务。</p><p>一个解决方案是假定要识别的对象是一个复合的对象，它由一组简单的几何形状体组成，此时原始的形状能在智能体的记忆中创建并存储，我们需要智能体识别的对象类型能用这些对象的组合创建出来并保存起来。</p><p>当智能体“看”到对象，它就进行对象的分解，把对象分解成原始形状的组合，如果组合的对象对智能体来说是已知的，那对象就被识别了。（如下图所示）</p><p><img src="https://img.weiyigeek.top/2023/1/20230209174908.png" alt="WeiyiGeek.查找方向与对象识别图"></p><p><br/></p><p><strong>6.应用场景</strong></p><p>图像处理的一个应用领域是制造业，特别是在组装生产线上（工业控制），一个具有图像处理能力的机器人能用来测定组装生产线上的对象的位置。</p><p>在这样的环境下，需要感知的对象数目是有限的，所以图像处理就变得非常有帮助。</p><p><br/></p><h4 id="2-语言理解"><a href="#2-语言理解" class="headerlink" title="(2) 语言理解"></a>(2) 语言理解</h4><p>描述: 人类一个固有的能力是能理解（即解释）所感知的声音信号，一台能理解自然语言的机器在日常生活中是非常有用的。</p><p>例如，当前流行的智能AI语音接听单行，它能替代电话操作员（在大部分时间里），它还可以用在系统需要预先定义格式査询的场合，即送到数据库的查询必须遵循指定系统所用的格式。</p><p>机器理解自然语言的任务分成4个连续的步骤：<code>语音识别</code>、<code>语法分析</code>、<code>语义分析</code>和<code>语用分析</code>。</p><h5 id="1-语音识别"><a href="#1-语音识别" class="headerlink" title="1.语音识别"></a>1.语音识别</h5><p>在这一步中语音信号被分析，其中所含的单词序列被抽取出来。</p><p>语音识别子系统的输入是连续（模拟）的信号，输出是单词的序列，信号需要被分割成不同的声音，有时称为<code>“音素”</code>，而声音还需要组合到单词中。</p><h5 id="2-语法分析"><a href="#2-语法分析" class="headerlink" title="2.语法分析"></a>2.语法分析</h5><p>语法分析这一步用来定义单词在句子中是如何组织的, 这对于像英语这样的语言是非常困难的任务, 因为单词在句子的作用并不是由它在句中的位置决定的。</p><p>例如，下面两个句子 <code>Mary rewarded John.</code> 与 <code>John was rewarded by Mary.</code> 此两个句子中John都是受到奖励的，但在第一个句子中，John 在最后的位置，而 Mary 在第一个位置，此处机器需要进行语法分析解释，得到相同的结论。</p><p><strong>文法:</strong> 正确分析句子的第一工具是良好定义的文法。</p><blockquote><p>一种像英语这样的完全成熟的语言具有非常大的文法规则集合, 语言的文法定义可以使用多种方法, 我们可使用BNF （Backus-Naur范式）的一个简单的版本，Backus-Naur范式被用在计算机科学中，定义编程语言的语法。</p><ul><li>第一条规则定义了一个句子是一个名词短语跟着一个动词短语</li><li>第二条规则定义了名词短语有三个选择：单个名词、一个冠词跟一个名词，或者一个冠词跟一个形容词再跟一个名词。</li><li>第四条规则明确地定义了什么是一个名词, 在我们这个简单的语言里只定义了7个名词，而在像英语这样的语言里名词表是在词典中定义的。</li><li>第六条规则定义了形容词一个非常小的集合。</li><li>第七条规则定义了动词一个非常小的集合。</li></ul></blockquote><p>虽然我们的语言的语法非常原始，但我们能从中产生许多句子，例如，我们有:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">John comes home.  约翰回家了。</span><br><span class="line">Mary drinks water. </span><br><span class="line">John has a white dog. 约翰有一只白色的狗。</span><br><span class="line">John loves Mary. </span><br><span class="line">Mary loves John.</span><br></pre></td></tr></table></figure></p><p><strong>词法</strong>: 下图中定义了简单文法，即使使用不同的选项，它也将是非常清楚的，判定一个句子是否符合文法（语法）的机器在判定一个句子是否合法之前，并不需要检查所有可能的选项，此操作由<code>词法分析器</code>完成。</p><blockquote><p>词法分析器基于文法规则建立一棵词法分析树来判断一个句子的合法性。<br>例如，下图中显示了句子”John has a white dog”对应的词法分析树。</p></blockquote><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230210111822.png" alt="WeiyiGeek.分析一个句子图" title="" class="">                <p>WeiyiGeek.分析一个句子图</p>            </figure><h5 id="3-语义分析"><a href="#3-语义分析" class="headerlink" title="3.语义分析"></a>3.语义分析</h5><p>义分析就是在句子被语法分析之后抽取出句子的意思。这种分析建立了句子中所涉及的对象的表示方法、它们的关系以及它们的属性。分析能用我们前面所讨论的任一种知识表示模式。</p><blockquote><p>例如，句子<code>John has a dog</code>可以用谓词逻辑表示成：<code>∃(存在)x dog(x) has(John,x)</code></p></blockquote><h5 id="4-语用分析"><a href="#4-语用分析" class="headerlink" title="4.语用分析"></a>4.语用分析</h5><p>前面的三个步骤<code>(语音识别、语法分析和语义分析)</code>能创建口语句子的知识表示, 此<code>语用分析</code>是用来进一步明确句子的意图和消除歧义。</p><p><strong>意图</strong>: 英语句子有许多种不同的意图，如告诉、请求、答应、询问等, 语用分析就是用来发现句子的这些意图的。</p><blockquote><p>例如，句子“Can you swim a mile?”问 的是听者的能力，而句子“Can you pass the salt?”(你能把盐递给我吗？)却只是一句礼貌的请求。</p></blockquote><p><strong>消除歧义</strong>: 有时句子在语义分析之后是有歧义的, 歧义的出现有不同的情况, 一个单词有多于一种的功能，如单词“hard”既能作形容词又能作副词,一个单词有多于一种的意思。</p><blockquote><p>例如，如单词“ball”在“football”和“ballroom”中是不同的含义，两个单词有着相同的发音，却有着不同的拼写和含义，一个句子在语法上可能是正确的，但在含义上却是没有道理的。<br>如，句子 <code>John ate the mountain</code> （<code>约翰吃了这座山</code>）语法分析时是合法的，语义分析时也是正确的，但含义却是毫无道理的</p></blockquote><p><br/></p><h3 id="18-6-搜索技术"><a href="#18-6-搜索技术" class="headerlink" title="18.6 搜索技术"></a>18.6 搜索技术</h3><p>AI人工智能解决问题的一种技术是搜索，搜索可以描述成用状态(情形)集合求解问题。<br>搜索过程开始于一个<code>起始状态，经过中间状态，最后到达目标状态</code>, 搜索过程所使用的全部状态的集合称为<code>搜索空间</code>。</p><blockquote><p>例如，在难题求解中，初始状态就是未解决的难题，中间状态就是对难题釆取的每一个步骤，目标状态就是难题被解决时的情形。</p></blockquote><p>例1.显不了一个具有5个状态的状态空间的例子。</p><blockquote><p>其中任一个状态都可能是初始状态或目标状态, 带箭头的线显示了采取合适的动作后，一个状态是如何从一个状态走到另一个状态的。<br>注意：如果没有动作或动作系列可被采取，那么从一个状态到另一个状态的转化也许就是不可能的。</p></blockquote><p>例2.显示搜索空间的难题的示例是著名的8数字游戏，难题是一个具有9个方块格子的盘子。</p><blockquote><p>方块有一个初始随机的安排（初始状态）.目标就是重新安排这些方块，直至实现方块的有序排列（目标状态）。</p></blockquote><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230210115957.png" alt="WeiyiGeek.搜索空间示例图" title="" class="">                <p>WeiyiGeek.搜索空间示例图</p>            </figure><p>当前搜索，有两种常用的搜索方法，<code>蛮力搜索</code>和<code>启发式搜索</code>, 其中搜索本身又有<code>广度优先</code>和<code>深度优先</code>。</p><p><br/></p><h4 id="1-蛮力搜索"><a href="#1-蛮力搜索" class="headerlink" title="(1) 蛮力搜索"></a>(1) 蛮力搜索</h4><p>当对搜索没有任何先验的知识时，我们就使用蛮力搜索。例如，在图中，A和T 分别代表起点和终点，我们要在迷宫中找到从A到T的路，我们将其转为树形图。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230210130203.png" alt="WeiyiGeek.迷宫的树形图" title="" class="">                <p>WeiyiGeek.迷宫的树形图</p>            </figure><p>转换为树形结构后，我们就可以使用前面数据结构中学过的树搜索的两种方法，<code>广度优先搜索</code>与<code>深度优先搜索</code>。</p><h5 id="1-广度优先搜索（遍历）"><a href="#1-广度优先搜索（遍历）" class="headerlink" title="1.广度优先搜索（遍历）"></a>1.广度优先搜索（遍历）</h5><p>在这种方法中，我们从树的根开始，在我们走向下一层前，检查当前层中的所有节点，下图中显示了迷宫的从左到右的广度优先搜索。</p><p>温馨提示：在到达目标状态前，我们不得不搜索所有的节点，所以这种方法是低效的，如果我们的搜索是从右到左的，那么我们要搜索的节点数可能就不同了。</p><h5 id="2-深度优先搜索（纵深）"><a href="#2-深度优先搜索（纵深）" class="headerlink" title="2.深度优先搜索（纵深）"></a>2.深度优先搜索（纵深）</h5><p>在这种方法中，我们从树的根开始，做一个向前搜索，直至发现目标或到达一个死端。如果到达了死端，我们回溯到最近的分支，然后再次向前搜索，我们继续这样的过程直至达到目标。</p><p>温馨提示：针对迷宫问题这种搜索方法的效率比广度优先搜索要高。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230210130753.png" alt="WeiyiGeek.广度优先搜索深度优先搜索与图" title="" class="">                <p>WeiyiGeek.广度优先搜索深度优先搜索与图</p>            </figure><p><br/></p><h4 id="2-启发式搜索"><a href="#2-启发式搜索" class="headerlink" title="(2) 启发式搜索"></a>(2) 启发式搜索</h4><p>使用启发式搜索，我们给每个节点赋一个称为启发值（h值）的定量值。这个定量值显示了该节点与目标节点间的相对远近。</p><p>例如，考虑上图18-19中的要解决的8数字游戏，假定难题的初始和目标状态如图所示，每一个方块的启发值是它到目标状态要移动的最小步数，每个状态的启发值是这个状态中所有方块的启发值之和。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230210141105.png" alt="WeiyiGeek.启发式搜索示例图" title="" class="">                <p>WeiyiGeek.启发式搜索示例图</p>            </figure><p><br/></p><h3 id="18-7-神经网络"><a href="#18-7-神经网络" class="headerlink" title="18.7 神经网络"></a>18.7 神经网络</h3><p>神经网络试图使用神经元网络去模仿人脑的学习过程，我们知道学习是一种复杂的生物现象，即使是人类自己也没有完全理解, 要使人工智能体自我学习肯定不是件容易的事情。但是, 在过去已经有好几种方法为未来建立了希望，大多数方法使用了归纳学习或从例子中学习，这意味着把很大集合的问题和解法都给计算机，让计算机从中学习</p><p>本节我们只讨论其中一种方法，它可以不必使用复杂的数学概念来描述，它就是神经网络。</p><h4 id="1-生物神经元"><a href="#1-生物神经元" class="headerlink" title="(1) 生物神经元"></a>(1) 生物神经元</h4><p>人脑中有数以亿计的处理单元, 称为神经元, 每个神经元平均与数以千计的其他神经元相连, 神经元有三部分构成：<code>胞体、轴突和树突</code>。</p><ul><li><code>胞体（身体）</code>中含有细胞核：它是处理器</li><li><code>树突起到输入设备</code>的作用：它接收其他神经元的输入</li><li><code>轴突起到输出设备</code>的作用：它把输出送到其他神经元</li><li><code>神经键</code>是神经元的轴突和其他神经元的树突的连接点, 树突从相邻的神经元中收集电信号把它传给胞体。<blockquote><p>实际上神经键的工作就是给传到相邻神经元的信号上加上权重，它根据产生的化学物质的数量来判断是强连接还是弱连接。</p></blockquote></li></ul><p>一个神经元有两种状态：<code>兴奋和抑制</code>。<br>如果接收的信号总量达到一个阈值，身体就兴奋，并触发一个输出信号，该信号传给轴突，最终传给其他的神经元。<br>如果接收的信号总量没有达到阈值，神经元仍然处于抑制状态：它不触发或产生输出。</p><p><br/></p><h4 id="2-感知器"><a href="#2-感知器" class="headerlink" title="(2) 感知器"></a>(2) 感知器</h4><p>感知器是一个类似于单个生物的人工神经元的人工神经元，它是带有一组具有权重的输入，对输入求和，把结果与阈值进行比较，若结果大于阈值感知器触发（输出1），否则不触发（输出0）。</p><p>例如，下图中一个带有5个输入(x1~x5)和5个权重(w1~w5)的感知器，在此感知器中，如果T是阈值，输出值确定如下。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230210142701.png" alt="WeiyiGeek.感知器技术与权重图" title="" class="">                <p>WeiyiGeek.感知器技术与权重图</p>            </figure><p><br/></p><h4 id="3-多层网络"><a href="#3-多层网络" class="headerlink" title="(3) 多层网络"></a>(3) 多层网络</h4><p>几个层次的感知器可以组合起来，形成多层神经网络，每一层的输出变成下一层的输入，<code>第一层称为输入层，中间层称为隐藏层，最后一层称为输出层</code>。</p><blockquote><p>输入层中的节点不是神经元，它们是分配器，隐藏的节点通常用来给上一层的输出加上权重的，如下图所示显示了一个三层的神经网络。</p></blockquote><p><img src="https://img.weiyigeek.top/2023/1/20230210143858.png" alt="WeiyiGeek.一个多层神经网络图"></p><p><br/></p><h4 id="4-应用"><a href="#4-应用" class="headerlink" title="(4) 应用"></a>(4) 应用</h4><p>当有足够的预先定义的输入和输岀时，就可以使用神经网络。两个证明神经网络有用的领域是光学字符识别（OCR）（智能体读任何的手写体）和信用赋值（不同的因素赋予不同的权重去建立信用等级，例如用于贷款申请）。</p><p>本文作为【计算机科学导论学习】的最后一章，至此完毕，相信随着前面的学习，读者已经对计算机有了一个初步的了解，包括其发展、硬件组成、使用以及编程算法、数据结构、计算机安全、和计算机应用，针对于读者进行后续全栈相关技术的学习，提供了基础知识储备，当遇到相关概念或者问题时，可以快速了解并进行学习，希望能的帮助到各位看。</p><p>后续【WeiyiGeek】作者将持续推出，计算机全栈入门学习系列教程（学习笔记），希望大家多多支持!.</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;计算机科学导论学习笔记&quot;&gt;&lt;a href=&quot;#计算机科学导论学习笔记&quot; class=&quot;headerlink&quot; title=&quot;计算机科学导论学习笔记&quot;&gt;&lt;/a&gt;计算机科学导论学习笔记&lt;/h1&gt;&lt;h1 id=&quot;第-5-部分-数据安全与人工智能&quot;&gt;&lt;a href=&quot;#第-5-部分-数据安全与人工智能&quot; class=&quot;headerlink&quot; title=&quot;第 5 部分 数据安全与人工智能&quot;&gt;&lt;/a&gt;第 5 部分 数据安全与人工智能&lt;/h1&gt;&lt;p&gt;此部分包含第15、16、17和18章，包含了计算机中传输的数据压缩(有损与无损)、网络数据在传输过程中如何保证其数据安全, 讨论计算理论，即哪些是可计算的，哪些是不可计算的，最后介绍当前热门的人工智能(AI)的观点，加深我们对计算机数据处理的的认识，为后续学习扩展基础认识。&lt;/p&gt;
&lt;p&gt;原文地址: &lt;a href=&quot;https://mp.weixin.qq.com/s/Sa9dVU7JOS5zEddldf22mw&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://mp.weixin.qq.com/s/Sa9dVU7JOS5zEddldf22mw&lt;/a&gt;&lt;br&gt;</summary>
    
    
    
    <category term="计算机基础知识" scheme="https://blog.weiyigeek.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="计算机科学导论" scheme="https://blog.weiyigeek.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%AF%BC%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>17.计算机科学导论之计算理论学习笔记</title>
    <link href="https://blog.weiyigeek.top/2023/1-18-708.html"/>
    <id>https://blog.weiyigeek.top/2023/1-18-708.html</id>
    <published>2023-01-18T09:35:30.000Z</published>
    <updated>2023-02-13T08:02:38.885Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="计算机科学导论学习笔记"><a href="#计算机科学导论学习笔记" class="headerlink" title="计算机科学导论学习笔记"></a>计算机科学导论学习笔记</h1><h1 id="第-5-部分-数据安全与人工智能"><a href="#第-5-部分-数据安全与人工智能" class="headerlink" title="第 5 部分 数据安全与人工智能"></a>第 5 部分 数据安全与人工智能</h1><p>此部分包含第15、16、17和18章，包含了计算机中传输的数据压缩(有损与无损)、网络数据在传输过程中如何保证其数据安全, 讨论计算理论，即哪些是可计算的，哪些是不可计算的，最后介绍当前热门的人工智能(AI)的观点，加深我们对计算机数据处理的的认识，为后续学习扩展基础认识。</p><p>原文地址: <a href="https://mp.weixin.qq.com/s/rGfSNRqywE7cmKDFB3wEkQ" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/rGfSNRqywE7cmKDFB3wEkQ</a></p><a id="more"></a><h2 id="17-计算理论"><a href="#17-计算理论" class="headerlink" title="17.计算理论"></a>17.计算理论</h2><p>在前面几章中,我们把计算机看成是一台问题求解机器，在此章节我们冋答一些诸如此类的问题：</p><p>哪些问题可以通过计算机解决？语言之间是否存在优劣？运行一个程序前，是否可以确定该程序将要停止(终止)还是一直运行？用一种特定的语言解决一个问题需要多长时间？</p><p>为了回答这些问题，我们求助于一门学科：计算理论。</p><p>在学习计算理论前对其做一个简要的介绍。</p><ul><li>首先，介绍一种语言，称为简单语言，通过它可以看到计算机解决任何问题所需要的最少语句是三条。</li><li>其次，介绍一种工具，一种称为图灵机的计算机模型，我们在第1章中提到过它。我们将看到，简单语言可以解决的问题也可以用图灵机解决。</li><li>第三，我们将证明没有任何程序可以知道另一个程序终止与否。证明本身表明有些问题计算机是无法解决的，最后简要地讨论算法的复杂性。本章中描绘的思想来自于计算机科学界的先驱们，如阿兰•图灵(Alan Turing),库尔特•哥德尔(Kurt Godel). 马文•明斯基(Marvin Minsky)、阿隆佐•邱奇(Alonzo Church)和斯蒂芬•科尔•克莱尼(Stephen Cole Kleene)。</li></ul><p><br/></p><h3 id="17-1-简单语言"><a href="#17-1-简单语言" class="headerlink" title="17.1 简单语言"></a>17.1 简单语言</h3><p>我们可以仅用三条语句来定义一种语言，它们是：<code>递増语句、递减语句和循环语句</code>, 在该语言中，只能使用非负整数数据类型。</p><p>这里不需要其他类型数据，因为本章的目标仅仅是说明计算理论中的一些思想。</p><h4 id="1-三条基本语句"><a href="#1-三条基本语句" class="headerlink" title="(1) 三条基本语句"></a>(1) 三条基本语句</h4><ul><li><p>递增语句对变量加1: <code>incr(x)</code></p></li><li><p>递减语句从变量中减1: <code>decr(x)</code></p></li><li><p>循环语句是在变量的值不为0时，重复进行一个动作(或一系列动作)。</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(x)&#123;</span><br><span class="line">  decr(x)</span><br><span class="line">  Body of the loop</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br></p><h4 id="2-简单语言的威力"><a href="#2-简单语言的威力" class="headerlink" title="(2) 简单语言的威力"></a>(2) 简单语言的威力</h4><p>使用上述三种语句的简单程序设计语言和我们现在使用的任何一种复杂语言(比如C) 一样强大(虽然从效率来说不一定)，为了证明这一点，可以演示一下如 何模拟当今流行语言中的某些语句。</p><p><strong>简单语言中的宏</strong><br>此处，我们将每次模拟称为一个宏，并且在其他模拟中使用时不需要再重复其代码。</p><p>什么是宏?</p><blockquote><p>宏(macro, macroinstruction 的简称)是高级语言中的一条指令，它等价于相同语言中的一条或多条指令的特定集合。</p></blockquote><p>示例1.使用简单语言的语来给一变量X赋值为0(有时叫做清空变量), 第一个宏 <code>X-0</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(x)&#123;</span><br><span class="line">  decr(x)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>示例2.使用简单语言的语句将一正整数赋值给变量X, 首先清空变量X，然后对X递增n次, 第二个宏: <code>X-n</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">X &lt;- 0</span><br><span class="line">incr(X)</span><br><span class="line">incr(X)</span><br><span class="line">...</span><br><span class="line">incr(X)  // 重复n次</span><br></pre></td></tr></table></figure><p>示例3.使用简单语言的语句将额外代码行来恢复X的值，第三个宏: <code>Y &lt;- X</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Y &lt;- 0</span><br><span class="line"><span class="keyword">while</span>(X) &#123;</span><br><span class="line">  decr(X)</span><br><span class="line">  incr(Y)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>示例4.使用简单语言的语句将额外代码行来恢复X的值, 使其恢复原来的原始值，第四个宏: <code>Y &lt;- Y + X</code>。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(X) &#123;</span><br><span class="line">  decr(X)</span><br><span class="line">  incr(Y)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>示例5.模拟简单语言中的宏,我们可使用加法宏因为整数的乘法可以用重复的加法来模拟，注意我们需要把X的值保存在一个临时变量中，因为在每次的加法中我们需要把的原始值加到Y上, 第五个宏: <code>Y &lt;- Y * X</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">TEMP &lt;- Y</span><br><span class="line">Y &lt;- 0</span><br><span class="line"><span class="keyword">while</span>(X) &#123;</span><br><span class="line">  decr(X)</span><br><span class="line">  Y &lt;- Y + TEMP</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>示例6.我使用宏来完成它因为整的指数可以用重复的乘法来模拟，第六个宏: <code>Y &lt;- Y^X</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">TEMP &lt;- Y</span><br><span class="line">Y &lt;- 1</span><br><span class="line"><span class="keyword">while</span>(X) &#123;</span><br><span class="line">  decr(X)</span><br><span class="line">  Y &lt;- Y * TEMP</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>示例7.宏模了现代语言中的判断语 (if)在这个宏中，变量X的值只能是0或1这两个值之间的一个。如果的值不是0，在循环中A(一个动作或一系列动作)被执行。是该循只执行一次，因为第一轮行完后X的值变成0，从而跳出循环。如果的值是0循环被跳过，第七个宏: <code>if X then A</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(x) &#123;</span><br><span class="line">  decr(x)</span><br><span class="line">  A</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然除此之外，还有需要其他宏，但是很显然，我们需要更多的宏来使简单语言与现代语言相匹配，建立其他宏是可能的，但却并不简单（较复杂）。</p><p><br/></p><p><strong>输入和输出</strong><br>描述: 在简单语言中 <code>Read X 语句</code> 可以使用（X←n）来模拟，我们也可模拟输出，即假定程序中使用的最后一个变量保存着将要打印的数据, 记住这不是实际的语言，而是仅仅用来证明计算机科学中的一些定理。</p><p><br/></p><h3 id="17-2-图灵机"><a href="#17-2-图灵机" class="headerlink" title="17.2 图灵机"></a>17.2 图灵机</h3><p>图灵机是在1936年由Alan M.Turning提出用来解决可计算问题的, 它是现代计算机的基础。</p><h4 id="1-组成部分介绍"><a href="#1-组成部分介绍" class="headerlink" title="(1) 组成部分介绍"></a>(1) 组成部分介绍</h4><p>图灵机由三部分组成：磁带、控制器和读/写头（如下图所示）。</p><p><strong>磁带</strong><br>尽管现代计算机中使用的随机存储设备容量是有限的，但我们假定图灵机中的内存是无限的，磁带任何时候只能保存一系列顺序字符，该字符来自计算机所能接收的字符集中。</p><p>为了我们的目的，假设图灵机只能接收两个符号：空白（b）和数字1，下述给出了这种机器磁带记录数据的一个例子。</p><p>磁带左手的空白定义了存储在磁带上的非负整数的开始，一个整数用1构成的串表示。磁带右手的空白定义了整数的结束。磁带的其他部分包含了空白字符。如磁带上存有多个整数，它们用至少一个空白字符隔开。</p><p>此外，还假设磁带处理一元算术中的正整数, 在一元算术中，正整数仅由1组成，例如整数4表示为<code>1111 （4个1）</code>, 7表示为<code>1111111 （7个1）</code>,没有1的地方表示0。</p><p><img src="https://img.weiyigeek.top/2023/1/20230130110655.png" alt="WeiyiGeek.图灵机由三部分组成与磁带图"></p><p><br/></p><p><strong>读/写头</strong><br>描述: 在任何时刻总是指向磁带上的一个符号，我们称这个符号为当前符号，读/写头每次在磁带上读写一个符号。每读写完一次后，它向左移、向右移, 读、写和移动都是在控制器指令下进行的。</p><p><br/></p><p><strong>控制器</strong></p><p>控制器是理论上功能作用类似于现代计算机中央处理单元（CPU）的一个部件，它是一个有限状态自动机，即该机器有预定的有限个状态并能根据输入从一个状态转移到另一个状态，但任何时候它只能处于这些状态中的一种。</p><p>下图给出了简单控制器作为有限状态自动机控制器的状态转移图。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230130111125.png" alt="WeiyiGeek.有限状态自动机控制器的状态转移图" title="" class="">                <p>WeiyiGeek.有限状态自动机控制器的状态转移图</p>            </figure><p>在此图中, 自动机有三个状态（A、B和C）,虽然控制器通常有很多状态。图中给出了读入字符后所引起状态的改变, 每一行上的表达式（<code>x/y/L, x/y/R 和 x/y/N</code> ）显示了：控制器读入x后，它写符号y（改写x）,并将读/写头移到左边（L）、右边（R）或不动（N）。注意既然磁带上的符号只有空白或数字1,那么从每个状态出去的路径只有两条：要么读到的是空白符号，要么读到的是数字1。线（称为转移线）的起点显示的是当前状态，线的末端（箭头）显示的是一下状态。</p><p>我们可以建立一个每一行代表一个状态的状态转移表（表17-1）。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230130111554.png" alt="WeiyiGeek.状态转移表图" title="" class="">                <p>WeiyiGeek.状态转移表图</p>            </figure><p>表有5栏表示当前状态、读入符号、所写符号、读/写头的移动方向和下一个符号，既然机器只能经历有限个状态, 那么我们能创建一个像我们在第5章中为简单计算机建立的指令集。</p><p>指令是把一行中的5列值放在一起，对于这台初级的机器，我们只有6条指令:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.（A, b, b, R, A）3.（B, b, 1, R, B） 5.（C, b, b, L, A）</span><br><span class="line">2.（A, 1, 1, R, B）4.（B, 1, b, N, C） 6.（C, 1, 1, L, B）</span><br></pre></td></tr></table></figure></p><p>例如，第一条指令是说：如果机器处于状态A, 读到了符号b, 它就用一个新的b改写符号，读/写头向右移到下一个符号上，机器的状态转移到状态A也就是保留在相同的状态中。</p><p>例如，一个图灵机只有两个状态和如下的4条指令：<code>1.(A, b, b, L, A)    2.(A, 1, 1, R, B)    3.(B, b, b, L, A) 4.(B, 1, b, R, A)</code>.</p><ul><li>开始时, 机器是处于状态A,当前符号是1,这就意味着只有第二条指令(A, 1, 1, R, B) 能被执行。</li><li>最后时, 注意控制器的状态已经变成了B,读/写头已经向右移动了一个符号。</li></ul><p><img src="https://img.weiyigeek.top/2023/1/20230130111815.png" alt="WeiyiGeek.示例代码4条指令图"></p><p><br/></p><h4 id="2-简单语言的模拟"><a href="#2-简单语言的模拟" class="headerlink" title="(2) 简单语言的模拟"></a>(2) 简单语言的模拟</h4><p>在图灵机中，我们能编写程序来实现简单的语句了，值得注意的是这些语句可以用多种方法来写，为了学习的目的，我们选择了最简单或最方便的，但它们不一定是最好的。</p><p><strong>1.incr(X)语句的图灵机</strong><br>控制器有4个状态，从S1到状态S4,状态S1是开始状态，状态S2是右移的状态，状态S3是左移的状态，状态S4是停机状态。如果到达停止状态，机器就停止：没有指令从这个状态开始。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230130112818.png" alt="WeiyiGeek.incr(X)语句的图灵机图" title="" class="">                <p>WeiyiGeek.incr(X)语句的图灵机图</p>            </figure><p><strong>2.decr(X)语句的图灵机</strong><br>此处，我们使用最小的指令数目来实现<code>decr(X)</code>语句, 其原因是我们在下一条语句<code>(while循环)</code>中要用到这个语句，它也被用来实现所有的宏。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230130113043.png" alt="WeiyiGeek.decr(X)语句的图灵机图" title="" class="">                <p>WeiyiGeek.decr(X)语句的图灵机图</p>            </figure><p><strong>3.while语句的图灵机</strong><br>为了模拟循环，我们假定X和循环体处理的数据存储在磁带上，中间以单个空白字符相隔，三个状态 Si、S和 S;控制了循环，它通过判断的值，如果X=0，就退出循环。把这三个状态与图 17-8 中减语句中使用的三个状态进行比较。状态 M把读/写头移过在每次重复中在处理数据开始时定义了数据开始位置的空白符号:状态M把读/写头移过在每次重复中在处理数据结束时定义了X的开始位置的空白符号;状态Bs定义了循环体的开始状态，而状态 B定义了循环体的停机状态。循环体在这两个状态间可能有几个状态。</p><p>下图中，还显示了语句的重复性质，状态图本身是一个只要X的值不为0就重复的循环，当X的值变成0,循环停止，状态S3 (停机状态)到达了。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230130113148.png" alt="WeiyiGeek.while语句的图灵机图" title="" class="">                <p>WeiyiGeek.while语句的图灵机图</p>            </figure><p><br/></p><h4 id="3-邱奇-图灵论题"><a href="#3-邱奇-图灵论题" class="headerlink" title="(3) 邱奇-图灵论题"></a>(3) 邱奇-图灵论题</h4><p>上面我们演示了图灵机能模拟简单语言中的三个基本语句，也就意味着图灵机能模拟我们为简单语言定义的所有的宏。</p><p><strong>那么图灵机是否能解决一台计算机能解决的任何问题？</strong></p><blockquote><p>这个问题的答案可以在<code>邱奇-图灵论题(Church-Turing thesis)</code>中找到。</p></blockquote><p>基于这样的观点，能用写一个算法来完成的任何符号操纵任务也可以用图灵机完成。注意这只是论题，不是定理, 定理可以在数学上得到证明，但论题却不能, 虽然这个论题可能永远得不到证明，但有些强有力的论断在支持它。</p><ul><li>首先，尚未发现有图灵机不能模拟的算法；</li><li>其次，所有在数学上已经得到证明的计算机模型都与图灵机模型等价，这个论断是得到证明的。</li></ul><p><br/></p><h3 id="17-3-歌德尔数"><a href="#17-3-歌德尔数" class="headerlink" title="17.3 歌德尔数"></a>17.3 歌德尔数</h3><p>在计算机科学理论中，一个无符号数能被分配给任何用特定语言编写的程序，通常称为歌德尔数（用澳大利亚数学家Kurt G6del命名）, 这种分配有很多优点。</p><p>首先，程序可以作为单一数据项输入给其他程序。第二，程序可以通过它的整数表示来引用。第三，该编号方式可以用来证明有一些问题计算机并不能解决，从而说明世界上问题的数量远远比曾经编写的程序数量要多得多。</p><p>各种各样的方法被设计用来给程序编号, 我们用一个简单的变换给用简单语言编写的程序编号。假定简单语言仅使用15个标志符（表17-2 ）</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230130114344.png" alt="WeiyiGeek.简单语言中的符号编码图" title="" class="">                <p>WeiyiGeek.简单语言中的符号编码图</p>            </figure><p>注意，在这种语言当中仅使用X, X1. X2,…，X9。作为变量。为了将变量编码，将Xn看成是由X和n两个符号组成来处理（X3是由X和3组成）。如果在宏中有其他类型变量，应将它们转换为Xn的形式。</p><h4 id="1-表示一个程序"><a href="#1-表示一个程序" class="headerlink" title="(1) 表示一个程序"></a>(1) 表示一个程序</h4><p>运用这个表，我们可以通过唯一的正整数表示用简单语言编写的任何程序, 按照以下步骤进行：<br>1）将每一个符号用表中所给的对应十六进制代码替代。<br>2）将最后的结果（十六进制）转化为无符号整数。</p><p>例如，对于incr(X)来说，用对应的十六进制代码替代每个符号, 此程序可以用数字175表述。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">incr X -&gt; (AF)16 -&gt; 175</span><br></pre></td></tr></table></figure></p><p><br/></p><h4 id="2-翻译一个数字"><a href="#2-翻译一个数字" class="headerlink" title="(2) 翻译一个数字"></a>(2) 翻译一个数字</h4><p>为了证明编号方式是唯一的，用以下步骤来解释歌德尔数：<br>1）将数字转换成十六进制数。<br>2）用表17-2将每个十六进制数翻译成对应的符号(忽略0 )。</p><p>注意，虽然用简单语言编写的一切程序都能用数字表述，但是，并不是所有的数字都能解释为合法程序。转换之后，如果符号不符合语法规则，这个数字就不是有效的程序。</p><p>例如，将 3058 翻译成程序，即将数字变成十六进制数并使用相应的符号代替。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3058 -&gt; (BF2)16 -&gt; decr X 2 -&gt; decr (X2)</span><br></pre></td></tr></table></figure><p><br/></p><h3 id="17-4-程序停止问题"><a href="#17-4-程序停止问题" class="headerlink" title="17.4 程序停止问题"></a>17.4 程序停止问题</h3><p>几乎所有的简单语言编写的程序都包含某种形式的重复(循环或递归函数)。</p><p>一个重复结构可能永远都不会结束(停机)，这就是说一个含有无限循环的程序可以永远运行，但是程序开发者通常需按照需求进行设置跳出循环条件，否则可能导致死循环(严重时会导致系统崩溃😫)。</p><p>例如，下面的用简单语言编写的程序可以永不结束。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x = 1</span><br><span class="line"><span class="keyword">while</span> (x) &#123;&#125;</span><br></pre></td></tr></table></figure></p><p>我们能编写一个程序来测试任何可以用哥德尔数表示的程序是否会终止吗?</p><blockquote><p>答: 经过计算机科学家证实，停机问题是不可能解决的。</p></blockquote><p><br/></p><h3 id="17-5-问题复杂度"><a href="#17-5-问题复杂度" class="headerlink" title="17.5 问题复杂度"></a>17.5 问题复杂度</h3><p>既然我们已经证明, 至少有一个问题计算机无法解决，那么让我们在这个问题上再进一步深入。</p><p>在计算机科学领域，我们可以这么说，一般来说问题可以分为两类：<code>可解问题和不可解问题</code>,而可解问题又可以分为两种：<code>多项式问题</code>和<code>非多项式问题</code>。</p><h4 id="1-不可解问题"><a href="#1-不可解问题" class="headerlink" title="(1) 不可解问题"></a>(1) 不可解问题</h4><p>描述: 无法用计算机解决的问题有无穷无尽，停机问题是其中一个。</p><p>要证明一个问题是无法解决的，方法是证明如果它可以解决，那么停机问题也同样可以解决，换句话说，证明一个问题能否解决等同于证明停机问题能否解决。</p><p><br/></p><h4 id="2-可解问题"><a href="#2-可解问题" class="headerlink" title="(2) 可解问题"></a>(2) 可解问题</h4><p>描述: 能够被计算机解决的问题也是无穷无尽，平常我们关心的是：计算机需要花多长时间去解决一个问题。换言之，这个问题有多复杂？</p><p>问题的复杂度可以用不同的方法衡量，例如，运行时间、需要的内存等，其中一种衡量方法是运行时间，即运行一个程序需要花多长时间？</p><p>衡量可解问题复杂度的一个方法是找出计算机运行该程序时要执行的运算数量。</p><p>这样，复杂度问题不是依赖于运行程序的计算机速度，而是依赖于输入的数目。</p><p>例如，如果程序在处理一个列表(例如对列表中元素进行排序)，则复杂度依赖于该列表中元素的数目，通是使用大 O 表示法。</p><p><br/></p><p><strong>大 O 表示法</strong><br>通常我们会使用大O表示法来表示，算法代码片段的执行效率，在该表示法中，运行数量(或者一系列相关运算)，表示为输入量的函数。</p><p>例如, 符号 O(n) 表示有n个输入, 执行 n 次运算，符号 O(n^2) 表示有n个输入，执行n^2次运算。 </p><p><img src="https://img.weiyigeek.top/2023/1/20230130142504.png" alt="WeiyiGeek.大O表示法示例图"></p><p><br/></p><p><strong>多项式问题</strong><br>如果程序的复杂度为 0(logn)、O(n)、O(n^2) 或 O(n^k)(k为常数)，则被称为多项式问题。</p><p>以当今计算机的处理速度，对于一个有合理输入数量 的(如从1000到1000 000) 的多项式问题我们都能解决。</p><p><br/></p><p><strong>非多项式问题</strong><br>如果一个程序的复杂度远比多项式问题复杂, 例如 0(10^n) 或 O(n!)，当输入数很小(小于 100)时，这种问题可以解决。</p><p>如果输入数很大，则需要坐在计算机面前等上几个月的时间才能看到非多项式问题的解决结果。</p><p>但是，随着计算机处理速度的不断提高，我们也许能在更短的时间内解决非多项式问题。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;计算机科学导论学习笔记&quot;&gt;&lt;a href=&quot;#计算机科学导论学习笔记&quot; class=&quot;headerlink&quot; title=&quot;计算机科学导论学习笔记&quot;&gt;&lt;/a&gt;计算机科学导论学习笔记&lt;/h1&gt;&lt;h1 id=&quot;第-5-部分-数据安全与人工智能&quot;&gt;&lt;a href=&quot;#第-5-部分-数据安全与人工智能&quot; class=&quot;headerlink&quot; title=&quot;第 5 部分 数据安全与人工智能&quot;&gt;&lt;/a&gt;第 5 部分 数据安全与人工智能&lt;/h1&gt;&lt;p&gt;此部分包含第15、16、17和18章，包含了计算机中传输的数据压缩(有损与无损)、网络数据在传输过程中如何保证其数据安全, 讨论计算理论，即哪些是可计算的，哪些是不可计算的，最后介绍当前热门的人工智能(AI)的观点，加深我们对计算机数据处理的的认识，为后续学习扩展基础认识。&lt;/p&gt;
&lt;p&gt;原文地址: &lt;a href=&quot;https://mp.weixin.qq.com/s/rGfSNRqywE7cmKDFB3wEkQ&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://mp.weixin.qq.com/s/rGfSNRqywE7cmKDFB3wEkQ&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="计算机基础知识" scheme="https://blog.weiyigeek.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="计算机科学导论" scheme="https://blog.weiyigeek.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%AF%BC%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>16.计算机科学导论之网络信息安全学习笔记</title>
    <link href="https://blog.weiyigeek.top/2023/1-1-707.html"/>
    <id>https://blog.weiyigeek.top/2023/1-1-707.html</id>
    <published>2023-01-01T08:35:39.000Z</published>
    <updated>2023-02-13T08:02:43.873Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="计算机科学导论学习笔记"><a href="#计算机科学导论学习笔记" class="headerlink" title="计算机科学导论学习笔记"></a>计算机科学导论学习笔记</h1><h1 id="第-5-部分-数据安全与人工智能"><a href="#第-5-部分-数据安全与人工智能" class="headerlink" title="第 5 部分 数据安全与人工智能"></a>第 5 部分 数据安全与人工智能</h1><p>此部分包含第15、16、17和18章，包含了计算机中传输的数据压缩(有损与无损)、网络数据在传输过程中如何保证其数据安全, 讨论计算理论，即哪些是可计算的，哪些是不可计算的，最后介绍当前热门的人工智能(AI)的观点，加深我们对计算机数据处理的的认识，为后续学习扩展基础认识。</p><p>原文地址: <a href="https://mp.weixin.qq.com/s/CemNXNFZK_e0GzVuosfTDg" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/CemNXNFZK_e0GzVuosfTDg</a></p><a id="more"></a><h2 id="第16章-网络安全"><a href="#第16章-网络安全" class="headerlink" title="第16章 网络安全"></a>第16章 网络安全</h2><p>笔者作为一名资深的白帽子，来到了我熟悉喜欢的章节，对于网络安全我从高中开始接触，并自学到漏洞挖掘，记得挖的第一个漏洞是腾讯的存储型XSS，提交给了当时Wooyun平台，算是投名状吧，随后又浪迹在各众测平台、SRC，其中有学习的快乐，又有挖漏洞的煎熬，当然漏洞审核通过的那一瞬间，又感觉什么都值得了（money），支持者我不断的学习、不断的探索，直到遇到自身瓶颈时，对于我们非科班出生的网络安全人员，有必要进行基础知识的学习，为了走得更远遂，有了【大大神之路-起始篇 计算机科学导论】系列文章! </p><p>好，回归到本章正题《安全》，安全这个话题很宽泛并且包括数学中的某些特定领域，例如数论安全、网络信息(数据)安全、人身安全、材料安全，此处主要讲解的时是网络信息(数据)安全!</p><h3 id="16-1-安全三要素"><a href="#16-1-安全三要素" class="headerlink" title="16.1 安全三要素"></a>16.1 安全三要素</h3><p>你可能常常在新闻或者网警的公众号文章看到，某某黑客又攻击某某平台，并将个人信息数据进行售卖的违法行为，我们生活在信息时代需要保存生活中各方面的信息，其中我们的信息是一种有价值的资产，就像其他资产一样(存款)，我们要尽可能授权给可信机构，不要随意连接公共WIFI、不扫码来路不明的链接或者二维码，也不要贪小便宜将个人信息直接或者间接给他人使用。</p><p>个人信息作为一种资产，信息需要保护免受攻击。为了安全信息需要避开未授权的使用<code>（机密性）</code>，保护信息不受到未授权的篡改<code>（完整性）</code>，并且对于得到授权 的实体来说是需要时可用的<code>（可用性）</code>。</p><p>此节中，我们先讨论信息安全的三个主要目标（也称<code>安全三要素</code>），其次将探索攻击是如何威胁这三个目标的，然后我们将讨论和这些安全目标有关的安全服务，最后我们将定义两个实现安全目标并且防止攻击的技术。</p><p>作为网络安全中最基本的三个目标<code>机密性、完整性和可用性</code>，下面我们一一进行介绍。</p><h4 id="0-安全性"><a href="#0-安全性" class="headerlink" title="(0) 安全性"></a>(0) 安全性</h4><blockquote><p>通过加密、认证和访问控制等措施，确保个人信息安全，保护用户隐私数据保护。<br>例如, 银行卡设置的取款密码，APP关键操作中的人脸识别。</p></blockquote><h4 id="1-机密性"><a href="#1-机密性" class="headerlink" title="(1) 机密性"></a>(1) 机密性</h4><blockquote><p>信息安全的第一个部分是机密性(最通常的方面) , 使用数据加密技术，对个人信息进行保密，防止恶意用户拒绝、披露或窃取用户信息。<br>例如，当我们将一小段信息发送并存储至远程计算机或从远程计算机上检索一段信息时，需要在传输时对该信息进行隐藏。</p></blockquote><h4 id="2-完整性"><a href="#2-完整性" class="headerlink" title="(2) 完整性"></a>(2) 完整性</h4><blockquote><p>信息安全的第二个部分是完整性,使用完整性检查机制，确保个人信息的有效性和准确性，确保用户的安全性。<br>例如，当一个客户在银行存钱或取钱时, 他的账户余额需要根据存入或者取出操作进行变化, 原子性操作（要么成功，要么失败）。</p></blockquote><h4 id="3-可用性"><a href="#3-可用性" class="headerlink" title="(3) 可用性"></a>(3) 可用性</h4><p>信息安全的第三个部分是可用性，保证个人信息的可用性，以便随时及时访问并使用个人信息，以便更好地提升个人信息的安全性。<br>例如，当客户交易时不能访问他们的账户，这时银行会发生什么。</p><p><br/></p><h3 id="16-2-攻击目标"><a href="#16-2-攻击目标" class="headerlink" title="16.2 攻击目标"></a>16.2 攻击目标</h3><p>安全三要素（<code>机密性、完整性和可用性</code>）会受到安全攻击的威胁, 虽然文献中可能采用不同的方法来对攻击进行分类，但我们在这里将它们按照安全目标分为三类。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2022/10/20230113093321.png" alt="WeiyiGeek.与安全模板有关的攻击分类图" title="" class="">                <p>WeiyiGeek.与安全模板有关的攻击分类图</p>            </figure><h4 id="1-威胁机密性的攻击"><a href="#1-威胁机密性的攻击" class="headerlink" title="(1) 威胁机密性的攻击"></a>(1) 威胁机密性的攻击</h4><p>通常有两种攻击威胁到信息的机密性<code>嗅探和流量分析</code>。</p><ol><li><p>嗅探 : 嗅探是指对数据的非授权访问或侦听, 一个通过因特网传输的文件可能含有机密的信息，一个非授权的实体可能侦听到传输, 为了防止嗅探，可以使用我们下面要讨论的加密技术，以使得数据对侦听者来说难以理解。</p><blockquote><p>例如，在后渗透测试中通常会在内网嗅探<code>其他服务器主机或者个人电脑</code>间传输的非加密信息，如嗅探ftp服务的账号密码，当前解决办法是使用sftp进行加密传输。</p></blockquote></li><li><p>流量分析：虽然通过加密技术我们可以使得数据对侦听者来说难以理解，但他们仍然可以通过在线流量监控收集其他类型的信息。</p><blockquote><p>例如，他们能找到发送者或接收者的电子地址（如电子邮件地址)，收集多对请求和响应，帮助猜测交易的本质。</p></blockquote></li></ol><p><br/></p><h4 id="2-威胁完整性的攻击"><a href="#2-威胁完整性的攻击" class="headerlink" title="(2) 威胁完整性的攻击"></a>(2) 威胁完整性的攻击</h4><p>数据的完整性会受到多种攻击的威胁：篡改、假冒、重放和抵赖。</p><ol><li><p>篡改: 侦听或访问信息后，攻击者篡改信息，使得信息有利于他们，通常在中间人攻击中常常用到。</p><blockquote><p>例如，一个客户可能向银行发送一消息去完成一些交易。攻击者侦听到信息，并为了自己的利益篡改了交易的类型。注意，有时攻击者可能仅仅是删除或延迟了这个消息来危害这个系统或者使他们自己受益。</p></blockquote></li><li><p>假冒: 当攻击者冒充其他人时，假冒或“哄骗”就发生了, 通常在社会工程学中常常用到。</p><blockquote><p>例如，一个攻击者可能盗窃银行卡和银行客户的PIN而假装是这个客户,有时攻击者则假冒接收实体。比如，一个用户尝试联系一家银行，但是另一个站点伪装成银行网站并从用户那里得到了一些信息。</p></blockquote></li><li><p>重放：重放是另一种类型的攻击, 攻击者得到用户发送的消息的副本，过后设法重放它, 通常在burpsuite中重放关键性的提交。</p><blockquote><p>例如，一个客户向他的银行发送了一条给攻击者付款的请求，攻击者侦听到这个消息，再次发送这条消息，想从银行得到另一次付款。</p></blockquote></li><li><p>抵赖: 抵赖是一种不同于其他类型的攻击，因为它是由通信双方中的一个来进行的发送者或接收者, 消息的发送者后来可能抵赖他发送了消息；消息的接收者后来也可能抵赖他接收到消息。</p><blockquote><p>例如，发送者抵赖，一个银行客户要求银行给第三方送钱，但后来他否认自己做过这样的请求; 接收者抵赖，某人向一制造商购买产品，并电子付款，但制造商后来否认已经收到付款而要求再付。</p></blockquote></li></ol><p><br/></p><h4 id="3-威胁可用性的攻击"><a href="#3-威胁可用性的攻击" class="headerlink" title="(3) 威胁可用性的攻击"></a>(3) 威胁可用性的攻击</h4><p>此只讨论一种威胁可用性的攻击<code>拒绝服务</code>。</p><p>拒绝服务(DoS)攻击是很常见的网络攻击手段，其目的是瘫痪网络服务或使其变得不可用，其原理是通过发送大量伪造的请求或数据包来淹没网络带宽或计算机资源，使其失去可用性。拒绝服务攻击通常可以通过利用系统漏洞来实施，或者利用病毒和僵尸计算机来发送大量的伪造请求或数据包。</p><p>当前拒绝服务攻击多为(分布式拒绝服务)DDOS攻击，攻击可能来自一台计算机或由许多计算机代理发起，通常是使用僵尸网络(物联网IOT大量被恶意者控制)，同时发送垃圾信息并阻断特定的网络服务，庞大的网络洪水，以使服务器变得不可用。</p><p><strong>如何避免或防御网络攻击?</strong><br>我们知道企业的网络安全都是木桶效应，内部安全情况取决于木桶中最短的木板，你在其他系统安全做得好，也免不了被攻击，所以在企业中需要从制定安全操作流程，以及按照不同的员工分配不同的权限。</p><ul><li>系统管理员 ：应定期检查他们的网络设备以确保它们具有最新的安全补丁; 此外，应确保安装并配置可以检测恶意活动的垃圾邮件过滤器，防火墙和入侵检测系统，以及软件来屏蔽易受攻击的端口号，同时还应加强账户管理，避免使用默认设置，以及定期检查日志来检测可疑活动。</li><li>开发工程师 ：应在系统安全测试以及内部安全测试反馈有安全问题需及时更改代码，此处在编写引用代码时最好做检查，建立内部漏洞Bug文档，防止其他系统开发时其他同事也遇到此漏洞Bug问题，此外在重点传输信息的系统，采用非对称密钥进行验证。</li><li>普通员工 : 定期进行安全培训，查看网络安全宣传短片，提高大家的安全意思，因为人才是企业中保证网络安全的基础，一旦人员被社会工程学中招后，往往可以直插企业内部某些系统，例如，邮件钓鱼、木马投放等。</li></ul><hr><h3 id="16-3-信息加密技术"><a href="#16-3-信息加密技术" class="headerlink" title="16.3 信息加密技术"></a>16.3 信息加密技术</h3><p>为了达到安全目标和防止安全攻击，ITU-T定义了一些安全服务的标准。这些服务中的每一个都是为了在维护安全目标时防止一个或多个攻击而设计的。</p><p>实际完成安全目标需要一些技术手段，现今流行两种技术：一种是非常普通的<code>密码术</code>,另外一种是特殊的<code>隐写术</code>。</p><p><br/></p><ol><li><p>密码术<br>有些安全服务可以使用密码术来(希腊起源的单词)意思是“秘密书写”实现。 但是，我们使用这个词是指为使消息安全并对攻击免疫而进行转换的科学和艺术。虽然在过去密码术只是指使用密钥进行消息的加密和解密，但如今它被定义成三种不同的机制：<code>对称密钥密码、非对称密钥密码和散列</code>。</p></li><li><p>隐写术<br>虽然本章和接下来的部分以密码术作为实现安全机制的一种技术，但另一种过去用于秘密通信的技术现在正在复苏，它就是隐写术。单词隐写术(起源于希腊语)意思是“掩饰书写”，而对应的密码术的意思是“秘密书写”。</p></li></ol><p>密码术就是通过加密把消息中的内容隐藏起来，而隐写术是通过在消息上覆盖其他内容而隐藏消息，例如，我们安全圈中常见的图片写隐术。</p><p><br/></p><p>现在我们来看第一个安全目标机密性，他可以通过使用密码达到，密码术可以分成两大类：<code>对称密钥密码术和非对称密钥密码术</code>。</p><h4 id="1-对称密钥密码术"><a href="#1-对称密钥密码术" class="headerlink" title="(1) 对称密钥密码术"></a>(1) 对称密钥密码术</h4><p>描述: 对称密钥密码术使用了同一个密钥（<code>这就是为什么它被称为对称的</code>）进行加密和解密，并且这个密钥可以用来进行双向通信，对称密钥密码术(<code>也称为保密密钥密码术</code>)。</p><p>下图，显示了对称密钥密码术的基本思想:</p><blockquote><p>例如 Alice通过一个不安全的通道向Bob发送一则消息，假设一个敌手Eve在通道上简单地偷听，通过加密算法她不能理解消息的内容。<br>从 Alice 到 Bob 的原始消息称为明文，而通过通道发送的消息称为密文，为了从明文创建密文，Alice使用了一个加密算法和一个共享的密钥。<br>然后为了从密文创建明文，Bob使用了一个解密算法和一个相同的密钥，从而将加密数据解密成明文。</p></blockquote><p><img src="https://img.weiyigeek.top/2022/10/20230113161115.png" alt="WeiyiGeek.对称密钥密码基本思想图"></p><p>注意，对称密钥加密对加密和解密使用一个密钥(密钥本身可以是一串数值)。此外， 加密算法和解密算法是互逆的。如果P为明文，C是密文，K是密钥，<code>加密算法Ek(x)从明文建立了密文，而解密算法Dk(x)从密文建立了明文</code>。</p><p>我们推断Ek(x)和Dk(x)是互逆的, 如果对一个输入依次施加<code>Ek(x)和Dk(x)</code>, 它们的作用会相互抵消, 在此处 <code>Dk(Ek(x)) = Ek(Dk(x)) = x</code>。</p><blockquote><p>加密：C=Ek(P)<br>解密：P=Dk(C)</p></blockquote><p>值得注意的是，最好可以将加密和解密算法公开但是把共享密钥保密，此时Alice和Bob需要另外一个(安全的)通道来交换密钥，后面我们会讲解到非对称加密。</p><p>简单的说明，我们可以把加密看作把消息锁进箱子，而解密可以看成打开箱子，在对称密钥加密中，用相同的密钥来锁和打开“箱子”，在下一节中我们会看到非对称密钥加密需要两个密钥，一个用于上锁而另一个则用于开锁。</p><p>当前，我们可以把对称密钥密码分成两大类，即<code>传统对称密钥密码和现代对称密钥密码</code>。</p><ul><li>传统密码, 实现很简单，面向字符的密码对现在的标准而言是不安全的。</li><li>现代密码, 是更为安全的复杂的面向位的密码。</li></ul><hr><p><br/></p><p><strong>1.传统对称密钥密码</strong><br>它是过去时了，但由于它是现代密码的构成要素，所以我们在这里对其进行简要讨论，通常我们把传统密码分为替换密码和移位密码。</p><p><strong>1) 替换密码</strong>：用一个符号替换另一个符号, 如果在明文中的符号是字母表的字符，我们用另一个字符来代替，而替换密码主要可以分成<code>单字母密码</code>和<code>多字母密码</code>。</p><blockquote><p>例如，我们能用字母D代替字母A, 用字母Z代替字母T, 如果符号是数字（0〜9 ）, 我们能用7代替3, 用6代替2。</p></blockquote><ul><li>1.1 单字面密码：此密码模式中，明文中相同的字符（或符号）在密文中用相同的字符（或符号）替换，与该字符在明文中的位置无关，明文和密文中的字符关系是一一对应的（你可以理解为电报机，两边都有密码本）, 最简单的单字母密码就是加法密码（或者移位密码）。<blockquote><p>例如，在密码学中恺撒密码, 尤利乌斯 • 凯撒（Julius Caesar）与他的军官是使用密钥为3的加法密码进行通信的，加密算法可以解释成“向下移位key个字符”，而解密算法可以解释成“向上移位key个字符”，<code>即当偏移量是 3 的时候，所有的字母 A 将被替换成D, B 变成 E。</code>, 因此加法密码有时也称为凯撤密码。</p></blockquote></li></ul><p>下面，我将使用C语言进行凯撤密码代码演示（编程语言学得太多，做的笔记也是各种语言的编程示例）。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> ch;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"请输入明文："</span>);</span><br><span class="line">  <span class="keyword">while</span> ((ch = getchar()) != <span class="string">'\n'</span>)</span><br><span class="line">  &#123;</span><br><span class="line">      <span class="keyword">if</span> (ch &gt;= <span class="string">'a'</span> &amp;&amp; ch &lt;= <span class="string">'z'</span>)&#123;</span><br><span class="line">          <span class="built_in">putchar</span>(<span class="string">'a'</span> + (ch - <span class="string">'a'</span> + <span class="number">3</span>) % <span class="number">26</span>);   <span class="comment">//这个是灵魂,利用取余来达到字母偏移，97 = a</span></span><br><span class="line">          <span class="keyword">continue</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (ch &gt;= <span class="string">'A'</span> &amp;&amp; ch &lt;= <span class="string">'Z'</span>) &#123;</span><br><span class="line">          <span class="built_in">putchar</span>(<span class="string">'A'</span> + (ch - <span class="string">'A'</span> + <span class="number">3</span>) % <span class="number">26</span>);  <span class="comment">// 65 = A</span></span><br><span class="line">          <span class="keyword">continue</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">putchar</span>(ch);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><figure class="image-box">                <img src="https://img.weiyigeek.top/2019/1/20191011211531.png" alt="WeiyiGeek.C语言实现的恺撒密码" title="" class="">                <p>WeiyiGeek.C语言实现的恺撒密码</p>            </figure></p><p><br/></p><ul><li>1.2 多字母密码: 在多字母密码中，字符的每一次出现都使用不同的替换码, 明文中字符和密文中字符的关系是一对多。<blockquote><p>例如 <code>“a”</code> 既可以在文本开头加密成 <code>“D”</code> ，也可以在中间加密成 <code>“N”</code>多字母密码具有可以隐藏原有语言的字母频率的作用，即使通过单字母频率统计都无法破解密文。<br>为了更好地解释密钥的位置依赖性，我们先讨论一个叫做自动密钥密码的简单多字母密码, 在此密码中，密钥是一个子密流，在这个子密钥流中的每一个子密钥都用来对明文文本中的对应字符进行加密。<br>第一个子密是 Alice 和 Bob 事先同意并密设定的值，<br>第二个子密钥是明文中第一个字符的值(在0~25之间),<br>第三个是第二个明文字符的值以此类推。</p></blockquote></li></ul><p><img src="https://img.weiyigeek.top/2022/10/20230113164948.png" alt="WeiyiGeek.多字母密码图"></p><p><br/></p><p><strong>2) 移位密码</strong><br>移位密码不是用一个符号代替另一个符号，而是改变符号的位置, 明文第一个位置上的符号可能出现在密文的第十个位置上，而明文第八个位置上的符号可能出现在密文的第一个位置上, 简单的说，移位密码就是符号的重新排序。</p><p>假设，Alice 需要向Bob发送消息<code>&quot;Enemy attacks tonight&quot;</code>，其加密解密过程如下图所示，注意我们在消息的末尾加上一个额外的字符(z)这样字符个数就是5的倍数。</p><ul><li>首先，第一张表是Alice通过一行一行写明文创造的，每一列都利用同一个密钥进行变更。</li><li>然后，密文通过一列一列读第二张表得到。</li><li>最后, Bob将这三步操作反向进行来进行解密, 他将密文一列一列写入第一张表格中对每列进行变更，然后一行一行读第二张表</li></ul><figure class="image-box">                <img src="https://img.weiyigeek.top/2022/10/20230113165757.png" alt="WeiyiGeek.移位密码图" title="" class="">                <p>WeiyiGeek.移位密码图</p>            </figure><p>注意，这里用来进行加密和解密的密钥是相同的，但是算法使用密钥的顺序是互逆的。</p><p><br></p><p><strong>3) 流密码&amp;分组密码</strong></p><p>文献中将对称密码分为两大组：流密码和分组密码。</p><ul><li><p>流密码: 加密和解密都是一次只对一个符号（例如一个字符或位）进行，假如，我们有一个明文流 P ，一个密文流 C 和一个密钥流 K。</p><blockquote><p>C1 = Ek1(P1) / C2 = Ek2(P2)</p></blockquote></li><li><p>分组密码: 在分组密码中，一组大小为m (m&gt;1 )的明文符号被加密在一起，创造一组同样大小的密文。</p><blockquote><p>基于定义，在一个分组密码中，整个分组是由一个单独的密钥进行加密，即使这个密钥由多个值构成。<br>在分组密码中，密文的分组取决于整个明文分组。</p></blockquote></li><li><p>组合密码: 在实际操作中，每个明文分组是分别加密的，但是同时密钥流被用来对整个消息按照分组依次加密。</p><blockquote><p>即: 当我们看每一个单独分组时，该密码是分组密码，但是从整个消息来看，这是一个以分组为单位进行加密的流密码。<br>每个分组都使用一个不同的密钥进行加密，这些密钥是在加密进行之前或进行过程中产生的。</p></blockquote></li></ul><p><br/></p><p><strong>2.现代对称密钥密码</strong><br>由于计算机技术发展进步，需要加密的信息已经不限于文本字符串、而有可能是数字、图表、音频或者视频数据。<br>在此种情况下，更方便的方法是把这些类型的数据转换成为比特流后再对其流进行加密，然后发送加密后的流，并且在进行处理时，每个字符会替换为8(或者16)位，这意味着字符数也变成原来的8(或者16)倍大, 将更多的字符混合可以提高安全性。</p><ul><li><p>2.1) 现代分组密码: 对称密钥现代分组密码对大小为 n 位的明文分组进行加密或对同样大小的密文分组进行解密。加密或解密算法使用《位的密钥,解密算法必须是加密算法的逆运算，并且两个操作必须使用相同的密钥，此样 Bob 可以检索到 Alice 发送的消息。</p><blockquote><p>当消息的长度小于n位时，消息后会加上补丁以使消息长度达到一个n位的分组; 如果消息长度超过n位，消息就会被分成几个长度为n 位的分组，如果必要，那么相应的补丁会添加到最后一个分组上, n 的常用数值是 64、128、256 和 512 位。</p></blockquote></li><li><p>2.2) 现代流密码: 除了现代分组密码以外，我们也可以使用现代流密码，其区别类似于我们在之前部分提到的传统的流密码和分组密码之间的差别。</p><blockquote><p>在现代流密码中，加密和解密都是每次对r位进行，我们有一个表示为 P=pn…p2p1的明文流，一个表为C=cn…c2c1的密文流和一个表示为 K=kk 的密钥流在这里p都是长度为r位的词，加密算法是 C=E(k，p) 解密则表现为Pi=(k，c)。<br>所以说流密码比分组密码更快，它的硬件实现也更简单一些，当我们需要对二进制流加密并将加密后的流匀速传输时，流密码是一个更好的选择，其对于传输中发生的损坏也有更好的免疫能力。</p></blockquote></li></ul><p>扩展说明: 最简单也最安全的同步流密码是<code>吉尔伯特·弗纳姆</code>发明并取得专利的一次一密乱码， 一次一密乱码每次加密时使用随机选择的密钥流，加密和解密都使用单一的异或操作，基于异或操作的性质，加密和解密的算法互为逆运算。</p><p><img src="https://img.weiyigeek.top/2022/10/20230116104049.png" alt="WeiyiGeek.现代分组、流密码示例图"></p><p><br></p><h4 id="2-非对称密钥密码术"><a href="#2-非对称密钥密码术" class="headerlink" title="(2) 非对称密钥密码术"></a>(2) 非对称密钥密码术</h4><p>描述: 对称与非对称加密实际上是相互相成，即可以取长补短，又可以相互补充，两者之间的差异:</p><ul><li>对称密钥在双方之间是共享的，而非对称密钥是个人独有(非共享的)。</li><li>对称密钥对字符进行排列或替换，非对称密钥密码对数字进行操作。</li><li>对称密钥对较长的信息加密，而非对称密钥针对少量信息加密（身份验证、数字签名）。</li></ul><p><strong>简单介绍</strong><br>描述: 非对称加密是一种加密方式，它使用一对被称为“公钥”和“私钥”的不同密钥。 公钥用于加密消息，而私钥用于解密消息。<br>此外，一个密钥可以用于加密消息，但却不能用于解密它。 因此只有拥有正确的秘钥（公钥或私钥）才能够解密它。</p><p>简单的说，非对称密钥加密使用两个独立的密钥，即<code>公钥</code>与<code>私钥</code>, 你可将其理解为公钥是进行加密信息的并且是公开的(加锁🔒)，而私钥是解密信息并且是需要保密的(解锁)。</p><p><strong>主要思想</strong><br>描述: 下图中展示了非对称密钥进行加密时的思想，<br>其关键点如下所示:</p><ul><li><p>明文/密文: 与对称密钥密码术不同，在非对称密钥密码术中，明文和密文被当作整数来对待, 在加密之前，消息必须被编码成一个整数（或一组整数），在解密之后整数（或一组整数）必须译码成消息, 非对称密钥密码术通常被用来加密或解密小段信息，例如对称密钥密码术中的密码密钥。</p><blockquote><p>换句话说，非对称性密钥密码术通常起到辅助目标而不是加密消息的作用，即非对称密钥密码术通常用来加密或解密小段信息。</p></blockquote></li><li><p>加密/解密: 在非对称密钥中的加密/解密是作用在表示明文和密文的数字上的数学函数，例如，密文可以被看做C=f(Kpublic*p)，而明文可以看成P=g(Kprivate*c), 其中解密函数f只能用来加密，而解密函数g只能用来解密。</p></li></ul><p><img src="https://img.weiyigeek.top/2022/10/20230116144030.png" alt="WeiyiGeek.非对称加密原理思想图"></p><p><br/></p><p><strong>RSA 非对称密码算法</strong><br>描述：虽然有几种非对称密钥系统，但是最常见的公钥算法之一是 RSA 密钥系统（以发明者 Ron Rivest、Shamir 和 Adleman 命名）。</p><p>RSA 使用两个指数 e 和 d，其中 e 是公钥，d 是私钥。</p><blockquote><p>假设P表示明文、C表示密文，那么Alice使用<code>C = P^e mod n</code>的算法从明文P中得到密文 C ，Bob 通过 <code>P = C^d mod n</code> 来检索 Alice 发送的明文，在密钥生成的过程中创造了一个很大的数作为模数n。</p></blockquote><figure class="image-box">                <img src="https://img.weiyigeek.top/2022/10/20230116153045.png" alt="WeiyiGeek.RSA生成密钥图" title="" class="">                <p>WeiyiGeek.RSA生成密钥图</p>            </figure><ul><li>范例1.</li></ul><figure class="image-box">                <img src="https://img.weiyigeek.top/2022/10/20230116162450.png" alt="WeiyiGeek.RSA范例1图" title="" class="">                <p>WeiyiGeek.RSA范例1图</p>            </figure><ul><li>范例2.</li><li><figure class="image-box">                <img src="https://img.weiyigeek.top/2022/10/20230116162729.png" alt="WeiyiGeek.RSA范例2图" title="" class="">                <p>WeiyiGeek.RSA范例2图</p>            </figure></li></ul><p><br/></p><p><strong>RSA 的应用场景</strong><br>描述: 虽然RSA可以用于对实际消息进行加密和解密，但如果消息很长加密的速度会很慢。因此，RSA加密适用于短消息，以及特定用于数字签名以及其他不需要使用对称密钥来对较短信息进行加密的密码，同时RSA也适用于身份验证。</p><p>实践示例.在Linux中生成一个rsa格式的公密钥文件并在主机间进行ssh登录认证。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.生成ras格式的公密钥</span></span><br><span class="line">$ /usr/bin/ssh-keygen -t rsa -P </span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/root/.ssh/id_rsa):    <span class="comment"># 生成路径</span></span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase):  <span class="comment"># 密钥加密密码</span></span><br><span class="line">Enter same passphrase again:                 <span class="comment"># 密钥加密密码</span></span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.    <span class="comment"># 私钥</span></span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.pub.    <span class="comment"># 公钥</span></span><br><span class="line">The key fingerprint is:</span><br><span class="line">30:f6:d7:2a:ac:56:eb:3f:fa:40:25:8d:90:96:68:cb root@localhost.localdomain</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.查看生成的共密钥文件</span></span><br><span class="line">$ ls ~/.ssh/</span><br><span class="line">id_rsa  id_rsa.pub known_hosts</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.配置A机器使用密钥登录到B机器，此时需要将公钥传到B机器的 authorized_keys 中。</span></span><br><span class="line">$ sftp weiyigeek@10.10.10.250 -P 22</span><br><span class="line">&gt; put /root/.ssh/id_rsa.pub</span><br><span class="line">&gt; <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">$ touch /root/.ssh/authorized_keys</span><br><span class="line">$ cat /root/.ssh/id_rsa.pub &gt;&gt; /root/.ssh/authorized_keys</span><br><span class="line"><span class="comment"># 或者执行如下命令</span></span><br><span class="line">$ ssh-copy-id -i ~/.ssh/id_rsa.pub weiyigeek@10.10.10.250 -p 22</span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.然后就可以在A机器上使用密钥进行登录到B机器中</span></span><br><span class="line">$ ssh -i /root/.ssh/id_rsa weiyigeek@10.10.10.250 -p 22</span><br></pre></td></tr></table></figure></p><p><br/></p><h3 id="16-4-其他安全技术"><a href="#16-4-其他安全技术" class="headerlink" title="16.4 其他安全技术"></a>16.4 其他安全技术</h3><p>到目前为止我们研究的密码系统提供了机密性，但在现代通信中还需要考虑安全的其他方面，比如完整性、消息和实体验证、不可抵赖性和密钥管理。</p><h4 id="1-消息完整性"><a href="#1-消息完整性" class="headerlink" title="(1) 消息完整性"></a>(1) 消息完整性</h4><p>为了防止消息被篡改，我们在发送端/接收端进行验证信息完整性，通常使用如下方法一是消息和消息摘要，二是散列函数。</p><p><strong>消息和消息摘要</strong></p><blockquote><p>保证文档完整性的一种方法是通过使用指纹，来确保文档没被篡改过。例如，为了保证消息完整性，消息要通过一个称为密码散列函数的算法，生成文件的消息和摘要，接收方验证比对该文件的信息消息和摘要，如果相同则确保信息未被串改过。</p></blockquote><p><br/></p><p><strong>散列函数</strong></p><blockquote><p>将任意长度的消息加密成为固定长度的消息摘要, 所有的散列函数加密都需要从长度不一的消息中创造出长度固定的消息摘要, 建造这样一个功能最好由迭代完成，创造一个有着固定输入值并且可以使用必需的次数的函数，而不是使用输入值大小可变的散列函数。<br>这里的固定输人值函数指的是压缩函数，它将 n 位的一串字符缩并创造成 m 位的字符串，这里的 n 通常大于 m, 该方案被称为选代加密散列函数。</p></blockquote><p>罗恩·李维斯设计的几个列算法被称为<code>MD2、MD4和MD5</code>消息摘要, 当前最新的版本 MD5 是 MD4 的个加强版，它可以将消息分成长度为 512 位的分组并创造大小为 128 位的摘要, 然而事实证明大小为 128 位的消息要太小了以至于不能阻挡攻击（容易被碰撞检测）。</p><p>因此，为了解决 MD 散列算法的不安全性，安全散列算法诞生了，安全散列算法(SHA)是由国家标准与技术研究所(NIST)研制的一个标准。SHA 经过了几个版本, 从 sha1、sha224、sha256、sha384、sha512（当前最新）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># md5 摘要信息</span></span><br><span class="line">$ md5sum weiyigeek.png</span><br><span class="line">51644c3d7174702529c5706ddf8db020 weiyigeek.png</span><br><span class="line"></span><br><span class="line"><span class="comment"># sha1sum 摘要信息</span></span><br><span class="line">$ sha1sum weiyigeek.png</span><br><span class="line">92ade000aed6c07b501a4c03374c0412bd33c716  weiyigeek.png</span><br><span class="line"></span><br><span class="line"><span class="comment"># sha256sum 摘要信息</span></span><br><span class="line">$ sha256sum weiyigeek.png</span><br><span class="line">07a041820e1dff2c48901828b2629275a301480adf804f55e63849849227ffb0  weiyigeek.png</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="https://img.weiyigeek.top/2022/10/20230116172552.png" alt="WeiyiGeek.摘要信息与散列算法图" title="" class="">                <p>WeiyiGeek.摘要信息与散列算法图</p>            </figure><p><br/></p><h4 id="2-消息验证"><a href="#2-消息验证" class="headerlink" title="(2) 消息验证"></a>(2) 消息验证</h4><p>通过前面学习我们知道，消息摘要可以检验消息的完整性，保证消息没被篡改, 然而为了确保消息的完整性以及数据源的身份验证——这消息是真的来自于Alice而不是任何其他的人，我们需要在过程中包括一个Alice和Bob共享的秘密<code>（没有经过Eve）</code>, 我们需要创造一个消息验证码<code>（message authentication code, MAC）</code>。</p><p>即MAC通过散列函数和密钥的组合来保证消息的完整性和消息验证。</p><p><strong>消息验证流程:</strong></p><ul><li>1.Alice使用散列函数从密钥和消息连接中创建了一个MAC,即h(K+M）。</li><li>2.它在不安全的通道上把消息和MAC发送给Bob。</li><li>3.Bob把消息与MAC分开,然后从消息和密钥的连接中建立新的MAC。</li><li>4.Bob比较新建的MAC和收到的MAC, 如果两个MAC匹配，那么消息就得到验证，并没有被敌手篡改过。</li></ul><p>温馨提示: HMAC国家标准与技术研究所(NIST)发布了新一代MAC标准, 通常称为<code>HMAC (散列消息 验证码)</code>, HMAC的实施比简化的MAC更复杂,因此此处不再多做累述。</p><p><img src="https://img.weiyigeek.top/2022/10/20230116175204.png" alt="WeiyiGeek.消息验证码图"></p><p><br></p><h4 id="3-数字签名"><a href="#3-数字签名" class="headerlink" title="(3) 数字签名"></a>(3) 数字签名</h4><p>为了保证消息完整性和消息验证我们还可以使用的另一种方法是<code>数字签名</code>，数字签名使用一组公私钥。</p><p>为了方便大家理解，此处在讲解数字签名前，对签名概念进行描述，当一个人在文档上签名就表示该文档是起源于他或他已同意的，签名对接收者来说是文档来自正确实体的证据。</p><blockquote><p>例如，当客户签了一张支票，银行就需要确信支票是客户签署的，而不是其他人。换言之，文档上的签名是身份验证的标记，它验证通过，文档就可信, 此处签名概念也可以看做是艺术家在画上的签名，艺术上的签名如果得到验证通过，那么这幅画通常也是可验证通过的。</p></blockquote><p><br/></p><p><strong>究竟什么是数字签名?</strong></p><blockquote><p>数字签名是一种在数字环境中实现签名的方法（数字编码），其包含有用户的身份信息以及消息的原始数据，它可以确保发送方的身份，确认消息的完整性和原始性，以及消息的传输的安全性。 </p></blockquote><p><strong>数字签名的功能?</strong></p><blockquote><p>数字签名的功能主要有，保证发送者的身份、确认消息的完整性、确认消息抵达的可靠性、确认消息的原始性和保证消息的传输安全性。<br>简单的说就是, 验证所发送消息的真实性、完整性和可靠性。</p></blockquote><p><strong>那消息验证与数字签名的区别是什么?</strong></p><blockquote><p>MAC通过密钥来保护消息摘要，数字签名则使用一组公私钥.</p></blockquote><p><br/></p><p>当Alice向Bob发送消息时，Bob需要检査发送者的身份，他需要确信消息来自Alice 而不是Eve(其他人), Bob可以要求Alice对信息进行电子签名。 </p><p>换言之，一个电子签名能证明 Alice 作为消息发送者的身份, 我们把这种签名称为数字签名。</p><p><strong>1.对比</strong></p><ul><li><p>(1)包括<br>普通签名是包含在文档里的，是文档的一部分。当我们写支票时，签名就在支票上，而不是一个分开的文档。但是当对文档进行数字签名时，我们把签名作为一个单独的文档来发送。</p></li><li><p>(2) 验证手段<br>两种签名的第二点不同在于签名验证的方法不同。对于普通签名，当接收者接收到一个文档时，他们比较文档上的签名与文件中的签名，如果相同，文档就是可信的。接收者需要有一个文件上签名的副本来作比较。对于数字签名，接收者接收到消息和签名，签名的副本不再保存，接收者需要应用验证技术来组合消息和签名，从而验证发送者的身份。</p></li><li><p>(3) 关系<br>对于普通签名来说，签名和文档之间通常是一对多的关系，一个人使用相同的签名签署许多文档。但是对于数字签名来说，签名和消息之间是一对一的关系。每条消息有它自己的签名。一条消息的数字签名不能用在另一条消息上。如果Bob从Alice处接收到两条消息，一条接着一条，他不能用第一条消息的签名去验证第二条。每条消息都有新的签名。</p></li><li><p>(4) 复制性<br>两种签名的另一点不同是称为复制性的特质。普通签名允许签署文档的副本与文件中的原始件有点不同。对于数字签名，就没有这样的不同，除非在文档上有时间因子(如时间 戳)。例如，假设Alice发送文档，指示Bob给Eve付款，如果Eve截获到文档和签名，她可以随后重复这些文档和签名，再次从Bob处得到钱。</p></li></ul><p><br/></p><p><strong>2.过程</strong><br>下图中显示了签名过程，发送者使用签名算法去签署消息，消息和签名被发送给接收者。接收者收到消息和签名，对收到的内容应用验证算法，如果结果是真，消息被接受，否则消息被拒绝。</p><p>数字签名需要公钥系统，密码系统使用接收者的私钥和公钥，数字签名使用发送者的私钥和公钥，签署者用私钥签署，验证者用签署者的公钥验证。</p><p><img src="https://img.weiyigeek.top/2023/1/20230117160220.png" alt="WeiyiGeek.数字签名图"></p><p>我们能否用一个密钥（对称的）来签署和验证签名？</p><blockquote><p>答案是否定的，有以下几个原因。首先，密钥是只有双方知道的（这个例子中是Alice和Bob）因此如果 Alice 需要签署另一份文档，并发送给Ted, 那她就需要使用另外的密钥。<br>其次，我们将看到，为一个对话创建密钥涉及验证，而验证要使用数字签名, 因此，我们就遇到一个错误的循环。再次，Bob可以使用他和Alice间的密钥签署一个文档，把它发送给Tde,假装这是来自于Alice的。</p></blockquote><p><br/></p><p><strong>3.签署摘要</strong><br>在处理较长消息时，非对称密钥密码系统的效率低下，而在数字签名系统中，消息通常较长，但我们不得不使用非对称密钥模式, 解决方法是签署消息的摘要，该摘要比消息本身要短得多。</p><p>消息摘要与消息具有一对一的关系, 发送者可以签署消息摘要，接收者可以验证消息摘要，两者的效果是相同的。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230117161422.png" alt="WeiyiGeek.签署摘要图" title="" class="">                <p>WeiyiGeek.签署摘要图</p>            </figure><p><br></p><p><strong>4.服务</strong><br>此小节讨论几个安全服务，包括消息机密性、消息验证、消息完整性和不可抵赖性。</p><p>(1) 消息验证 ：一个安全的数字签名模式就像一个安全的普通签名(也就是说一个人不容易复制)一样 能提供消息验证，也称为数据源验证。Bob能验证Alice发送过来的信息是因为在验证过程中使用了Alice的公钥。Alice的公钥不能验证用Eve私钥签署的签名。</p><p>(2) 消息完整性 ：如果我们签署消息或消息的摘要，消息的完整性就能被保护，因为如果消息改变了，我们就不能得到相同的摘要。当今的数字签名模式在签署和验证算法中使用了散列函数，这样更好地保护了消息的完整性。</p><p>(3) 不可抵赖性 ：如果Alice签署了一个消息，然后否认它，Bob能否证明Alice实际上是签署了它呢？例如，如果Alice向银行(Bob)发送消息，要求从她的账户转10 000美元到Ted的账户，Alice能否事后否认她发送过这样的消息？使用我们目前为止介绍的模式，Bob可能会有一个问题。Bob必须先保存签名，然后用Alice的公钥去建立原始消息，去证明文件中的信息和新创建的消息是相同的。但这样并不可行，因为Alice这时可能已经更换了私钥或公钥。她也可以声称含有签名的文件是不可信的。</p><p><strong>如何解决不可抵赖性问题?</strong></p><blockquote><p>解决方案是: 可信的第三方, 人们可以在他们之间建立可信中心, 在本章的后面，我们将看到受到信任的第三方可以解决有关安全服务和密钥交换的很多问题。<br>例如: 展示了一个可靠的第三方如何防止Alice抵赖她发过的消息，此时是不是感觉下述流程与网站CA以及服务端、客户端证书的颁发使用原理是一致的</p></blockquote><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230118105104.png" alt="WeiyiGeek.使用可信的第三方来达到不可抵赖性图" title="" class="">                <p>WeiyiGeek.使用可信的第三方来达到不可抵赖性图</p>            </figure><p>(4) 机密性<br>数字签名不提供机密通信，如果机密性是需要的，那么消息和签名就要使用对称密钥密码或非对称密钥密码进行加密。</p><p><br></p><h4 id="4-实体验证"><a href="#4-实体验证" class="headerlink" title="(4) 实体验证"></a>(4) 实体验证</h4><p>主要用来使得一方证明另一方标识的一种技术，一个实体可以是<code>一个人、一个过程、一个客户端或一个服务器</code>。</p><p>身份需要证明的实体称为<code>要求者</code>, 试图证明要求者身份的一方称为<code>证明者</code>。</p><p>(1) 实体与消息验证<br>在消息验证（数据源验证）和实体验证间有两点区别：</p><ul><li>1).消息验证（或数据源验证）可能不会发生在实时系统中，而实体验证是会的。在前面的例子中，Alice发送一条消息给Bob。在Bob验证消息的时候，Alice可能在或可能不在通信的过程中。在另一方面，当Alice要求实体验证时，没有实际消息通信被涉及，直到Alice的身份被Bob验证。Alice需要在线参加这个过程。只有她的身份被验证后，消息才能在Alice和Bob间传输。当一则电子邮件从Alice到Bob,这时需要的是数据源验证；当Alice从自动取款机上取现金时，这时需要实体验证。</li><li>2).消息验证简单地验证一则消息，这个过程需对每则新的消息重复。实体验证可在整个会话期间内验证要求者。</li></ul><p>(2) 验证分类<br>在实体验证中要求者必须向证明者标识自己,可以使用下面三种证据中的一种：</p><ul><li>1).所知道的: 只有要求者知道的秘密，证明者可以通过它来检査要求者, 例如：<code>密码、PIN码、密钥和私钥</code>。</li><li>2).所拥有的: 证明要求者的身份, 例如：<code>护照、驾驶证、身份证、信用卡和智能卡</code>。</li><li>3).所固有的: 要求者内在固有的生物特性, 例如：<code>普通签名、指纹、声音、面部特征、视网膜模型和手迹</code>。<br>在这部分我们只讨论第一种验证，所知道的, cu种验证通常用作远程（在线）实体验证。另外两个分类则通常在要求者个人出现时使用。</li></ul><p>(3) 密码认证<br>最简单且最古老的实体身份验证的方法是基于密码的身份验证，密码是要求者知道的一些东西。当用户需要访问系统资源时（登录），他就需要一个密码。每个用户都有一个用户标识，这是公开的；还有一个密码，这是私有的，然而密码在攻击面前很脆弱，密码可能被窃取、截获或猜出（<code>暴力破解</code>）等。</p><p>(4) 挑战回应<br>在密码验证中，要求者通过展示他们知道秘密（密码）来证明他们的身份。但是要求者暴露了这个秘密，就容易受到敌手的截获。在挑战-回应身份验证中，要求者能证明他知道 秘密而不需要暴露它。换言之，要求者没有把秘密发送给证明者，但证明者或者有它，或者 能找到它。<br>在挑战-回应身份验证中，要求者证明他们知道秘密，而不需要把秘密暴露给证 明者。<br>挑战是一个随时间变化的值，如随机数或一个时间戳，它由证明者发送给要求者。要求者对挑战运用一个函数，把结果（称为响应）发送给证明者。响应表明要求者知道秘密。</p><ul><li>1) 使用对称密钥密码<br>有几种方法可以利用对称密钥加密来挑战-回应。这里共享的秘密是要求者和证明者都 知道的共享密钥。使用对称密钥密码的作用是对挑战应用加密算法。虽然达到这个手段有几种方法，我们只给出最简单的一种来给出思想，下图展示了第一种方法。</li></ul><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230118115237.png" alt="WeiyiGeek.单向对称密钥认证图" title="" class="">                <p>WeiyiGeek.单向对称密钥认证图</p>            </figure><p>第一个消息不是挑战-回应的一部分，他只告知证明者要求者想要进行挑战。第二个 消息是挑战。Rb是证明者（Bob）为了挑战要求者随便挑选的随机数（一定数量的缩写）。要求者将随机数通过只有要求者和证明者知道的秘密共享密钥进行加密并将结果发送给证明者。证明者对消息进行解密，如果得到的随机数和证明者发送的相同，Alice就得到许可进入。<br>注意在这个过程中，要求者和证明者需要在过程中对他们使用的对称密钥保密。证明者也必须保存给要求者进行鉴别的随机数值直到返回回应。</p><ul><li>2) 使用非对称密钥密码<br>下图展示了这个方法。我们可以使用非对称密钥密码代替对称密钥密码进行实体验证。在这里秘密必须是要求者的密钥。要求者必须显示她拥有的私钥和所有人都有的公钥相关。也就是说，证明者必须使用要求者的公钥对挑战进行加密；然后要求者使用她的私钥对消息解密，对该挑战的回应就是解密后的消息。</li></ul><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230118115300.png" alt="WeiyiGeek.单向非对称密钥图" title="" class="">                <p>WeiyiGeek.单向非对称密钥图</p>            </figure><ul><li>3) 使用数字签名<br>实体验证也可以通过使用数字签名来达到。当数字签名用在实体验证时，要求者使用她的私钥进行签名。在第一种方法中，如图16-18所示，Bob使用明文挑战，然后Alice签署回应。</li></ul><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230118115339.png" alt="WeiyiGeek.单向数字签名验证图" title="" class="">                <p>WeiyiGeek.单向数字签名验证图</p>            </figure><p><br/></p><h4 id="5-密钥管理"><a href="#5-密钥管理" class="headerlink" title="(5) 密钥管理"></a>(5) 密钥管理</h4><p>此小节将讨论对称密钥密码术中的密钥和非对称密钥密码术中公钥是如何分配和维持的?</p><p><strong>(1) 对称密钥分发</strong><br>在对大量消息进行加密时，对称密钥密码术的效率要比非对称密钥密码高，但是对称密钥密码需要在双方间共享(这是一个风险点)。</p><p>至此，我们需要一种有效的方法来维护和分发密钥。</p><ul><li><p>方法1.密钥分发中心(KDC): 减少密钥的数量，每个人与KDC建立一个共享密钥，一个密钥建立在KDC和每个成员间。</p></li><li><p>方法2.多密钥分发中心: 当使用同一个密钥分发中心的人数增多时，系统就会变得难以管理并导致瓶颈，此时我们可以创建多个密钥分发中心，将其划分区域，并且每个区域有一个或者多个KDC(主备防止故障)</p></li><li><p>方法3.会话密钥: KDC为每个成员创建一个密钥，这个密钥只能在成员和KDC间使用，而不两个成员间，一个双方间的会话对称密钥只能被使用一次。</p></li></ul><p><img src="https://img.weiyigeek.top/2023/1/20230118152016.png" alt="WeiyiGeek.KDC创建会话密钥图"></p><p><br/></p><p><strong>(2) 公钥分发</strong></p><p>在非对称加密中公钥往往是共享的，每个人有权访问每个人的公钥，公钥对公众可用，当然公钥也像密钥一样需要进行分发。</p><ul><li><p>方法1.公开声明：即将公钥放在网站上供需要进行消息通信的客户使用，但是此种方式并不安全容易被伪造。</p></li><li><p>方法2.认证机构: 建立公钥认证，为了解决将公钥给需要的人并且不能假冒其公钥，此时就可以去认证机构(CA), 它是一个把公钥和实体捆绑在一起并处理认证的政府机构。</p><blockquote><p>其流程如下: 首先 CA 中心检查 Bob 的身份，之后 CA 向 Bob 要公钥, 并把它写在证书上, 为了防止证书本身被伪造, CA 用它的私钥签署证书, 然后 Bob 可以上载签署的证书, 任何需要 Bob 公钥的人就可以下载签署的证书, 并使用中心的公钥来抽取出 Bob 的公钥。</p></blockquote></li><li><p>方法3.X509: CA可以解决公钥伪造的问题，但是它每个证书的格式可能都不一样，如果Alice想利用程序来自动下载不同的证书和不同人的消息摘要, 所以为了解决这个问题ITU设计了X.509，它是一个结构化描述证书的方法，它使用叫ASN.1的协议，此协议定义了计算机编程者一些熟悉的领域。</p></li></ul><p><img src="https://img.weiyigeek.top/2023/1/20230118161049.png" alt="WeiyiGeek.认证机构图"></p><p><br/></p><h3 id="16-5-硬件防火墙"><a href="#16-5-硬件防火墙" class="headerlink" title="16.5 硬件防火墙"></a>16.5 硬件防火墙</h3><p>我们知道，在企业互联网边界上一定会有一台防护墙，来防止公网上的常规的一些黑客攻击，过滤有害信息或者说是指令，其是为了推进一些数据包而过滤其他数据包而设计的。</p><p>例如，图中展示了企业中防火墙在网络拓扑中的位置。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230130094001.png" alt="WeiyiGeek.防火墙图" title="" class="">                <p>WeiyiGeek.防火墙图</p>            </figure><p>防火墙实现功能很多，可以做NAT转发，也可以过滤所有到来的目标为特定主机或服务器（例如HTTP）的数据包，也可以用来阻拦对组织内特定主机或服务的访问（ACL访问限制），防火墙通常分为<code>包过滤防火墙</code>和<code>代理防火墙</code>。</p><h4 id="1-包过滤防火墙"><a href="#1-包过滤防火墙" class="headerlink" title="(1) 包过滤防火墙"></a>(1) 包过滤防火墙</h4><p>原理: 它可以基于网络层的信息和传输层的头部：源和目标IP地址，源和目标端口地址以及协议的种类（TCP或UDP）来推进或阻拦数据包。</p><p>包过滤防火墙是一个使用过滤表单决定哪些数据包应该丢弃（不推进）的路由器, 如下图所示根据过滤表，以下数据包被过滤：<br>1）来自网络131.34.0.0的数据包被阻拦了（安全预防措施）。注意*号代表“任何”。<br>2）终点为任何国际TELNET服务器（端口23）的外发数据包被阻拦了。<br>3）到来的目标为内部主机194.78.20.8的数据包被阻拦了，该组织希望这个主机只用于内部使用。<br>4）终点为HTTP服务器（端口80）的外发数据包被阻拦了，该组织不希望雇员浏览因特网。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230130094521.png" alt="WeiyiGeek.包过滤防火墙图" title="" class="">                <p>WeiyiGeek.包过滤防火墙图</p>            </figure><p>总结:包过滤防火墙是基于网络层的有效信息和传输层头部（IP和TCP/UDP）建立的</p><p><br/></p><h4 id="2-代理防火墙"><a href="#2-代理防火墙" class="headerlink" title="(2) 代理防火墙"></a>(2) 代理防火墙</h4><p>目的：有时我们也需要基于消息自身携带的信息（应用层上）进行过滤，例如通过 VPN 代理访问。</p><p>比如，假设一个组织想对其网页试试以下几条政策, 只有那些之前与本公司建立商业联系的因特网用户可以访问；其他用户必须阻拦。</p><p>在此情况下，数据包过滤防火墙就不可行，因为它无法区分到达TCP端口80 （HTTP）的不同数据包，必须在应用层（通过URL）进行测试。</p><p>一个解决措施是安装代理计算机（有时也称为应用网关），代理计算机位于客户计算机和公司计算机之间。当用户客户进程发送消息时，应用网关运行服务器进程来接收请求。服务器在应用层打开数据包并且查找这个请求是否合法。如果是，那么服务器运行客户端进程并将消息发给公司中真正的服务器，否则这个消息会被丢弃并且错误消息会发给外部用户。通过这个方法，外部用户的请求基于内容在应用层进行筛选。</p><figure class="image-box">                <img src="https://img.weiyigeek.top/2023/1/20230130094855.png" alt="WeiyiGeek.代理防火墙图" title="" class="">                <p>WeiyiGeek.代理防火墙图</p>            </figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;计算机科学导论学习笔记&quot;&gt;&lt;a href=&quot;#计算机科学导论学习笔记&quot; class=&quot;headerlink&quot; title=&quot;计算机科学导论学习笔记&quot;&gt;&lt;/a&gt;计算机科学导论学习笔记&lt;/h1&gt;&lt;h1 id=&quot;第-5-部分-数据安全与人工智能&quot;&gt;&lt;a href=&quot;#第-5-部分-数据安全与人工智能&quot; class=&quot;headerlink&quot; title=&quot;第 5 部分 数据安全与人工智能&quot;&gt;&lt;/a&gt;第 5 部分 数据安全与人工智能&lt;/h1&gt;&lt;p&gt;此部分包含第15、16、17和18章，包含了计算机中传输的数据压缩(有损与无损)、网络数据在传输过程中如何保证其数据安全, 讨论计算理论，即哪些是可计算的，哪些是不可计算的，最后介绍当前热门的人工智能(AI)的观点，加深我们对计算机数据处理的的认识，为后续学习扩展基础认识。&lt;/p&gt;
&lt;p&gt;原文地址: &lt;a href=&quot;https://mp.weixin.qq.com/s/CemNXNFZK_e0GzVuosfTDg&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://mp.weixin.qq.com/s/CemNXNFZK_e0GzVuosfTDg&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="计算机基础知识" scheme="https://blog.weiyigeek.top/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="计算机科学导论" scheme="https://blog.weiyigeek.top/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6%E5%AF%BC%E8%AE%BA/"/>
    
  </entry>
  
</feed>
