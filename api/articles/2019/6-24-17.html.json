{"title":"图片之EXIF信息提取与处理利用","slug":"基础知识/图像信息/图片之EXIF信息提取与处理","date":"2019-06-24T05:34:30.000Z","updated":"2023-01-31T02:29:10.676Z","url":"2019/6-24-17.html","path":"api/articles/2019/6-24-17.html.json","covers":["https://img.weiyigeek.top/2019/20190624105659.png","https://img.weiyigeek.top/2019/20190624142937.png","https://img.weiyigeek.top/2019/20190624111608.png","https://img.weiyigeek.top/2019/20190624114412.png","https://img.weiyigeek.top/2019/20190624113550.png","https://img.weiyigeek.top/2019/20190624114018.png","https://img.weiyigeek.top/2019/20190624112833.png","https://img.weiyigeek.top/2019/20190624130048.png","https://img.weiyigeek.top/2019/20190624091637.png","https://img.weiyigeek.top/2019/20190624130900.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h4 id=\"0x00-EXIF基础信息\"><a href=\"#0x00-EXIF基础信息\" class=\"headerlink\" title=\"0x00 EXIF基础信息\"></a>0x00 EXIF基础信息</h4><p>Exif(Exchangeable image file format 可交换图像文件格式)，是一种图像文件格式，其数据存储与JPEG格式是完全相同的,EXIF可以附加于JPEG、TIFF、RIFF、RAW等文件之中，为其增加有关数码相机拍摄信息的内容和索引图或图像处理软件的版本信息。</p>\n<p><em>EXIF元数据藏在照片里的小秘密，那Exif是什么？</em><br>答：Exif的意思是“可交换图像文件“，实际上Exif格式就是在JPEG格式头部插入了数码照片的信息（它的数据存储与JPEG格式是完全相同的），包括拍摄时的光圈、快门、白平衡、ISO、焦距、日期时间等各种和拍摄条件以及相机品牌、型号、色彩编码、拍摄时录制的声音以及GPS全球定位系统数据、缩略图和其他信息。</p>\n<p>比如：在JPEG数据中有一系列0xFF??格式的字符串，这些被称为“标志”，用来标记JPEG文件的信息段。<br>其中0xFFD8 表示SOI(Start of image 图像开始),0xFFD9表示EOI(End of image 图像结束),两个特殊的标志没有附加的数据，而其他的标志在标志后都会带有附加的数据。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0xFFE0 — 0xFFEF之间的标识符称为“应用标志”，在解码JPEG 图像的时候不是必需使用的;</span><br><span class=\"line\">其中Exif信息即存在应用标志中,以0xFFE1作为开头标记,后两个字节表示Exif信息的长度,内部采用TIFF格式存储。</span><br><span class=\"line\">FF E1 2F FE : 是APP1标志以及其长度(后面两个字节表示EXIF数据长度，这里的长度是包含自身的)</span><br><span class=\"line\">45 78 69 66 00 00 : 转换后就是ASCII字符串”Exif”加上两个字节的0x00</span><br><span class=\"line\">4D 4D :(Exif数据内容(用TIFF格式存储数据)表示采用大端字节顺序(定义TIFF数据采用什么字节顺序,如果是0x4949 = <span class=\"string\">\"II\"</span>就表示采用”Intel”的小端字节顺序，如果为0x4d4d = <span class=\"string\">\"MM\"</span>，表示采用”Motorola”的大端字节顺序,这个字节只要知道下即可。)</span><br><span class=\"line\">00 2A : (标识)</span><br><span class=\"line\">00 00 00 08 : (APP1偏移地址) </span><br><span class=\"line\">00 0B (IFD 的个数)</span><br><span class=\"line\"><span class=\"comment\">#接下来的的字节就是各种IFD信息，IFD就相当于文件夹，然后在文件夹下面存放着各种资料，比如资料可以是GPS，设备信息，厂家等，</span></span><br><span class=\"line\"><span class=\"comment\">#EXIF元数据:同理IFD也有多个文件夹(IFD编号),比如IFD0(主图的元数据),IFD1(缩略图的元数据),这里说的元数据乍一听很抽象，不过仔细一听还是很抽象QAQ。</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190624105659.png\" alt=\"WeiyiGeek.jpg格式\" title=\"\" class=\"\">\n                <p>WeiyiGeek.jpg格式</p>\n            </figure>\n<p><em>Exif有什么作用？</em><br>答：起初记录这些信息是为了帮助摄影爱好者分析自己在不同器材，不同环境和不同设备设置下拍摄的效果，帮助他们不断改进并提高自己的水平。<br>一方面：通过此数据还可以协助处理图片防止失真。一些地方也会使用它做原图检测，因为在编辑软件中修改后一些技术信息会丢失，同时Exif也会保存历史记录。<br>另一方面：Exif记录的元数据信息非常丰富，会暴露一些你不想让别人知道的个人的信息，比如:</p>\n<ul>\n<li>你拍照使用的设备型号是佳能？佳能的某个型号？还是某款手机？</li>\n<li>你拍摄照片的地理位置（GPS定位）高度等待</li>\n<li>你拍摄照片的时间</li>\n<li>你是否在软件中修过图</li>\n</ul>\n<p><em>EXIF怎么看?</em></p>\n<ul>\n<li>比如JPEGsnoop、MagicEXIF、Photoshop的文件简介功能查看~</li>\n<li><a href=\"http://works.enjoyfe.com/blogDemo/exifdemo/exif.html\" target=\"_blank\" rel=\"noopener\">http://works.enjoyfe.com/blogDemo/exifdemo/exif.html</a>  #使用exifjs在浏览器中打印出来</li>\n<li><a href=\"https://exif.tuchong.com/\" target=\"_blank\" rel=\"noopener\">https://exif.tuchong.com/</a></li>\n<li>自己编写Python脚本查看,比如看下面的案例</li>\n<li>利用火狐插件查看其exif信息</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190624142937.png\" alt=\"WeiyiGeek.MagicEXIF\" title=\"\" class=\"\">\n                <p>WeiyiGeek.MagicEXIF</p>\n            </figure>\n<p><em>如何除去exif信息</em>?<br>答：利用canvas去除Exif信息函数canvas.toDataURL(type, encoderOptions)或者使用Photoshop的存储为web所用格式;<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;input id=<span class=\"string\">\"file-input\"</span>  accept=<span class=\"string\">\"image/png,image/gif,image/jpeg\"</span> type=<span class=\"string\">\"file\"</span> /&gt;</span><br><span class=\"line\"><span class=\"keyword\">var</span> icanvas=<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"canvas\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> cxt=icanvas.getContext(<span class=\"string\">'2d'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">drawimg</span>(<span class=\"params\">file</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();   <span class=\"comment\">// 创建一个&lt;img&gt;元素</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> filename=file.name;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> oFReader = <span class=\"keyword\">new</span> FileReader();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> rFilter = <span class=\"regexp\">/^(?:image\\/bmp|image\\/cis\\-cod|image\\/gif|image\\/ief|image\\/jpeg|image\\/jpeg|image\\/jpeg|image\\/pipeg|image\\/png|image\\/svg\\+xml|image\\/tiff|image\\/x\\-cmu\\-raster|image\\/x\\-cmx|image\\/x\\-icon|image\\/x\\-portable\\-anymap|image\\/x\\-portable\\-bitmap|image\\/x\\-portable\\-graymap|image\\/x\\-portable\\-pixmap|image\\/x\\-rgb|image\\/x\\-xbitmap|image\\/x\\-xpixmap|image\\/x\\-xwindowdump)$/i</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!rFilter.test(file.type)) &#123; alert(<span class=\"string\">\"You must select a valid image file!\"</span>); <span class=\"keyword\">return</span>; &#125;</span><br><span class=\"line\">    oFReader.readAsDataURL(file);</span><br><span class=\"line\">    oFReader.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">oFREvent</span>) </span>&#123;</span><br><span class=\"line\">        img.src = oFREvent.target.result;</span><br><span class=\"line\">    &#125;; </span><br><span class=\"line\">    </span><br><span class=\"line\">    img.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        icanvas.width=img.naturalWidth;</span><br><span class=\"line\">        icanvas.height=img.naturalHeight;</span><br><span class=\"line\">        cxt.drawImage(<span class=\"keyword\">this</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,icanvas.width,icanvas.height);</span><br><span class=\"line\">        downimgbtn(filename);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 用来返回代表画布图像数据的字符串，也就是图片的base64，可以使用 type 参数其类型，默认为 PNG 格式。</span></span><br><span class=\"line\"><span class=\"comment\">//如果type传入的是 image/jpeg或者 image/webp,那么就可以设置encoderOptions了，这个参数是图片质量，取值范围为 0 到 1 。</span></span><br><span class=\"line\"><span class=\"comment\">//当图片过大的时候，下载会出现失败的情况，我们可以在canvas上右键保存，同样可以去掉图片的Exif信息。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">downimgbtn</span>(<span class=\"params\">filename</span>)</span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> imageurl= icanvas.toDataURL(<span class=\"string\">\"image/jpeg\"</span>,<span class=\"number\">1</span>).replace(<span class=\"string\">\"image/jpeg\"</span>, <span class=\"string\">\"image/octet-stream\"</span>); </span><br><span class=\"line\">    $(<span class=\"string\">'#downloadimg'</span>).html(<span class=\"string\">\"&lt;a href=\"</span>+imageurl+<span class=\"string\">\"  download=\"</span>+filename+<span class=\"string\">\"&gt;下载无exif信息的图片&lt;/a&gt;\"</span>)  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>在定位之前需要了解下IFD格式这样对于后面分析有很大帮助,IFD格式是一个 IFD 由四部分组成，每一个 IFD都是固定的12个字节，分别是<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Bytes 0-1 Tag(用于标记这个IFD类别)</span><br><span class=\"line\">Bytes 2-3 Type(用于指定数据类型)</span><br><span class=\"line\">Bytes 4-7 Count(用于指数据的数量，比如纬度就用度、分、秒三个数来描述)</span><br><span class=\"line\">Bytes 8-11 Value Offset(真实数据所在的偏移地址（相对于 File header）而且需要注意的是，这里记录的值小于 4 个字节，则数据左</span><br><span class=\"line\"><span class=\"comment\">#Exif规范在定义时并没有规定必须包含哪些 IFD 及其顺序。但是，第一个 IFD 的位置是可以确定的，从第一个每隔十二字节又可以确定一个 IFD，再从 tag 确定 IFD 类别，然后依次类推找到对应IFD。</span></span><br><span class=\"line\"><span class=\"comment\">#还有一种比较简便的,十六进制0x8825 是GPS IFD入口，直接搜这个然后根据tag定位也可以。</span></span><br><span class=\"line\">88 25 00 04 <span class=\"comment\">#数据类型为Long</span></span><br><span class=\"line\">00 00 00 01 00 00 06 48 <span class=\"comment\"># 可以看出GPS信息位于地址68 48处。但是这个值是相对于 File Header (也就是地址 000C)产生的，因此真实的地址为16进制的6848 + 000C = 6854</span></span><br></pre></td></tr></table></figure><br>比如寻找GPS IFD Pointer(这个东西可以理解成我们电脑的磁盘,比如C盘下存在11个文件夹，其中有个文件夹就是用来存放GPS，在GPS IFD下面又存在子文件夹也就是子tag，比如说经纬度，高度，视觉方向等等)</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190624111608.png\" alt=\"WeiyiGeek.8825\" title=\"\" class=\"\">\n                <p>WeiyiGeek.8825</p>\n            </figure>\n<p>修改GPS的话主要关心的是经纬度与之相关的Tag如下（12字节为1组）:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 4E00   </span></span><br><span class=\"line\"><span class=\"comment\">#GPSLatitudeRef</span></span><br><span class=\"line\">Tag = 1</span><br><span class=\"line\">Type = ASCII </span><br><span class=\"line\">Count = 2</span><br><span class=\"line\">Default = None </span><br><span class=\"line\"><span class=\"string\">'N'</span> = North latitude</span><br><span class=\"line\"><span class=\"string\">'S'</span> = South latitude </span><br><span class=\"line\">Other = reserved</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#GPSLatitude</span></span><br><span class=\"line\">Tag = 2</span><br><span class=\"line\">Type = RATIONAL</span><br><span class=\"line\">Count = 3 </span><br><span class=\"line\">Default = None</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#GPSLongtitudeRef</span></span><br><span class=\"line\">Tag = 3</span><br><span class=\"line\">Type = ASCII </span><br><span class=\"line\">Count = 2</span><br><span class=\"line\">Default = None </span><br><span class=\"line\"><span class=\"string\">'E'</span> = East longtitude</span><br><span class=\"line\"><span class=\"string\">'W'</span> = West longtitude</span><br><span class=\"line\">Other = reserved</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#GPSLongtitude</span></span><br><span class=\"line\">Tag = 4</span><br><span class=\"line\">Type = RATIONAL</span><br><span class=\"line\">Count = 3 </span><br><span class=\"line\">Default = None</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190624114412.png\" alt=\"WeiyiGeek.4E00(案例1)\" title=\"\" class=\"\">\n                <p>WeiyiGeek.4E00(案例1)</p>\n            </figure></p>\n<p>第一个横线处4E00是ASCII中的N，这个不需要修改,第二个横线处指出真实纬度的偏移位置 0702 + 000C = 070E<br>第三个横线处4500是ASCII中的E，这个也不需要修改,第四个横线处指出真实经度的偏移位置 071A + 000C = 0726<br>然后根据真实地址070E再进行跟进,这里采用WinHex分析，方便修改保存数据。</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190624113550.png\" alt=\"WeiyiGeek.案例\" title=\"\" class=\"\">\n                <p>WeiyiGeek.案例</p>\n            </figure>\n<p>其中前4字节为分子/后4字节为分母，十六进制先转为十进制，之所以这样是因为之前说到的FID数据类型决定的,从而得到纬度数据为: (度)20.H/01.H = 32;(分) 01.H/0.H = 0; (秒) 0FE2.H/64.H = 40.66，对比得完全一致<br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190624114018.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p>实际案例：<br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190624112833.png\" alt=\"WeiyiGeek.4E00(案例2)-12一组经纬度漂移地址\" title=\"\" class=\"\">\n                <p>WeiyiGeek.4E00(案例2)-12一组经纬度漂移地址</p>\n            </figure></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">比如：0706+000C = 0712 (Offset)  <span class=\"comment\">#纬度：28度59分54秒 </span></span><br><span class=\"line\">0000001C 00000001  <span class=\"comment\">#1C.H / 01.H = 28  </span></span><br><span class=\"line\">0000003B 00000001  <span class=\"comment\">#3B.H / 01.H = 59 </span></span><br><span class=\"line\">00001518 00000064  <span class=\"comment\">#1518.H / 64.H = 5400 / 100 =~ 54 </span></span><br><span class=\"line\"></span><br><span class=\"line\">071E+000C = 072A  (Offset) </span><br><span class=\"line\">0000006A 00000001 <span class=\"comment\">#64.H / 01.H  =106</span></span><br><span class=\"line\">0000003B 00000001 <span class=\"comment\">#3B.H / 01.H = 59</span></span><br><span class=\"line\">0000027C 00000064 <span class=\"comment\">#27C.H / 64.H = 36</span></span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190624130048.png\" alt=\"WeiyiGeek.漂移地址数据\" title=\"\" class=\"\">\n                <p>WeiyiGeek.漂移地址数据</p>\n            </figure>\n<p><br></p>\n<p><em>示例exif数据示例：</em><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#图片信息常规的exif提取(返回字典个数)</span></span><br><span class=\"line\"><span class=\"comment\">#说明：经纬度前面的英文字母代表：西经W 东经E 北纬N 南纬S</span></span><br><span class=\"line\">Image Make  :  Apple</span><br><span class=\"line\">Image Model  :  iPhone 5s</span><br><span class=\"line\">Image Orientation  :  Rotated 90 CW</span><br><span class=\"line\">Image XResolution  :  72</span><br><span class=\"line\">Image YResolution  :  72</span><br><span class=\"line\">Image ResolutionUnit  :  Pixels/Inch</span><br><span class=\"line\">Image Software  :  11.2.5</span><br><span class=\"line\">Image DateTime  :  2018:09:07 14:59:13  <span class=\"comment\">#图片照相时间</span></span><br><span class=\"line\">Image YCbCrPositioning  :  Centered</span><br><span class=\"line\">Image ExifOffset  :  206</span><br><span class=\"line\">GPS GPSLatitudeRef  :  N  <span class=\"comment\">#纬度</span></span><br><span class=\"line\">GPS GPSLatitude  :  [28, 53, 201/10] <span class=\"comment\">#需要进行转码</span></span><br><span class=\"line\">GPS GPSLongitudeRef  :  E <span class=\"comment\">#经度</span></span><br><span class=\"line\">GPS GPSLongitude  :  [107, 0, 2347/50]</span><br><span class=\"line\">GPS GPSAltitudeRef  :  0   <span class=\"comment\">#高度</span></span><br><span class=\"line\">GPS GPSAltitude  :  103926/127 </span><br><span class=\"line\">GPS GPSTimeStamp  :  [6, 59, 12] <span class=\"comment\">#时间戳</span></span><br><span class=\"line\">GPS GPSSpeedRef  :  K  <span class=\"comment\">#速度</span></span><br><span class=\"line\">GPS GPSSpeed  :  5/4  </span><br><span class=\"line\">GPS GPSDate  :  2018:09:07</span><br><span class=\"line\">GPS Tag 0x001F  :  100</span><br><span class=\"line\">Image GPSInfo  :  1636</span><br><span class=\"line\">Thumbnail Compression  :  JPEG (old-style)</span><br><span class=\"line\">Thumbnail XResolution  :  72</span><br><span class=\"line\">Thumbnail YResolution  :  72</span><br><span class=\"line\">Thumbnail ResolutionUnit  :  Pixels/Inch</span><br><span class=\"line\">Thumbnail JPEGInterchangeFormat  :  1976</span><br><span class=\"line\">Thumbnail JPEGInterchangeFormatLength  :  11244</span><br><span class=\"line\">EXIF ExposureTime  :  1/129</span><br><span class=\"line\">EXIF FNumber  :  11/5</span><br><span class=\"line\">EXIF ExposureProgram  :  Program Normal</span><br><span class=\"line\">EXIF ISOSpeedRatings  :  32</span><br><span class=\"line\">EXIF ExifVersion  :  0221</span><br><span class=\"line\">EXIF DateTimeOriginal  :  2018:09:07 14:59:13</span><br><span class=\"line\">EXIF DateTimeDigitized  :  2018:09:07 14:59:13</span><br><span class=\"line\">EXIF ComponentsConfiguration  :  YCbCr</span><br><span class=\"line\">EXIF ShutterSpeedValue  :  8496/1211</span><br><span class=\"line\">EXIF ApertureValue  :  7983/3509</span><br><span class=\"line\">EXIF BrightnessValue  :  9472/1679</span><br><span class=\"line\">EXIF ExposureBiasValue  :  0</span><br><span class=\"line\">EXIF MeteringMode  :  Pattern</span><br><span class=\"line\">EXIF Flash  :  Flash did not fire, auto mode</span><br><span class=\"line\">EXIF FocalLength  :  83/20</span><br><span class=\"line\">EXIF SubjectArea  :  [1631, 1223, 1795, 1077]</span><br><span class=\"line\">EXIF MakerNote  :  [65, 112, 112, 108, 101, 32, 105, 79, 83, 0, 0, 1, 77, 77, 0, 13, 0, 1, 0, 9, ... ]</span><br><span class=\"line\">EXIF SubSecTimeOriginal  :  250</span><br><span class=\"line\">EXIF SubSecTimeDigitized  :  250</span><br><span class=\"line\">EXIF FlashPixVersion  :  0100</span><br><span class=\"line\">EXIF ColorSpace  :  sRGB</span><br><span class=\"line\">EXIF ExifImageWidth  :  3264</span><br><span class=\"line\">EXIF ExifImageLength  :  2448</span><br><span class=\"line\">EXIF SensingMethod  :  One-chip color area</span><br><span class=\"line\">EXIF SceneType  :  Directly Photographed</span><br><span class=\"line\">EXIF ExposureMode  :  Auto Exposure</span><br><span class=\"line\">EXIF WhiteBalance  :  Auto</span><br><span class=\"line\">EXIF FocalLengthIn35mmFilm  :  29</span><br><span class=\"line\">EXIF SceneCaptureType  :  Standard</span><br><span class=\"line\">EXIF LensSpecification  :  [83/20, 83/20, 11/5, 11/5]</span><br><span class=\"line\">EXIF LensMake  :  Apple</span><br><span class=\"line\">EXIF LensModel  :  iPhone 5s back camera 4.15mm f/2.2</span><br><span class=\"line\">MakerNote Tag 0x0001  :  9</span><br><span class=\"line\">MakerNote Tag 0x0002  :  [138, 0, 105, 0, 106, 0, 112, 0, 63, 0, 39, 0, 46, 0, 74, 0, 66, 0, 77, 0, ... ]</span><br><span class=\"line\">MakerNote Tag 0x0003  :  [6, 7, 8, 85, 102, 108, 97, 103, 115, 85, 118, 97, 108, 117, 101, 89, 116, 105, 109, 101, ... ]</span><br><span class=\"line\">MakerNote Tag 0x0004  :  1</span><br><span class=\"line\">MakerNote Tag 0x0005  :  128</span><br><span class=\"line\">MakerNote Tag 0x0006  :  115</span><br><span class=\"line\">MakerNote Tag 0x0007  :  1</span><br><span class=\"line\">MakerNote Tag 0x0008  :  [159186943/-89915392, 11401/83, 20/83]</span><br><span class=\"line\">MakerNote Tag 0x000E  :  1</span><br><span class=\"line\">MakerNote Tag 0x0014  :  1</span><br><span class=\"line\">MakerNote Tag 0x0017  :  0</span><br><span class=\"line\">MakerNote Tag 0x0019  :  0</span><br><span class=\"line\">MakerNote Tag 0x001F  :  0</span><br></pre></td></tr></table></figure></p>\n<p>经纬度(度分秒)转换与计算：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GPS GPSLatitudeRef  :  N  <span class=\"comment\">#纬度</span></span><br><span class=\"line\">GPS GPSLatitude  :  [28, 53, 201/10] <span class=\"comment\">#[度，分，秒] 需要进行转码成GPS</span></span><br><span class=\"line\">GPS GPSLongitudeRef  :  E <span class=\"comment\">#经度</span></span><br><span class=\"line\">GPS GPSLongitude  :  [107, 0, 2347/50]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#计算公式</span></span><br><span class=\"line\">度 + 分/60 + 秒/3600</span><br><span class=\"line\">28 + 53/60 + 201/10/3600 = </span><br><span class=\"line\">28 + 0.8833333333333333 + 0.0055833333333333 =  28.88891666666667</span><br></pre></td></tr></table></figure></p>\n<p>经纬度之间距离计算：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#计算两个经纬度的距离，计算两点位置的距离，返回两点的距离，单位米，该公式为GOOGLE提供，误差小于0.2米</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#地球半径单位米 : private const double EARTH_RADIUS = 6378137;</span></span><br><span class=\"line\"></span><br><span class=\"line\">public static double GetDistance(double lat1, double lng1, double lat2, double lng2)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    double radLat1 = Rad(lat1); <span class=\"comment\">#第一个GPS地址纬度</span></span><br><span class=\"line\">    double radLng1 = Rad(lng1); <span class=\"comment\">#第二个GPS地址经度</span></span><br><span class=\"line\">    double radLat2 = Rad(lat2);</span><br><span class=\"line\">    double radLng2 = Rad(lng2);</span><br><span class=\"line\">    double a = radLat1 - radLat2;</span><br><span class=\"line\">    double b = radLng1 - radLng2;</span><br><span class=\"line\">    double result = <span class=\"number\">2</span> * Math.Asin(Math.Sqrt(Math.Pow(Math.Sin(a / <span class=\"number\">2</span>), <span class=\"number\">2</span>) + Math.Cos(radLat1) * Math.Cos(radLat2) * Math.Pow(Math.Sin(b / <span class=\"number\">2</span>), <span class=\"number\">2</span>))) * EARTH_RADIUS;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 经纬度转化成弧度</span></span><br><span class=\"line\"><span class=\"comment\"># @d:根据经度来取值</span></span><br><span class=\"line\"><span class=\"comment\"># 1、弧度的定义：弧长等于半径的弧,其所对的圆心角为1弧度  360°=2π弧度</span></span><br><span class=\"line\"><span class=\"comment\">#    1弧度约为57.3°,即57°17'44.806''</span></span><br><span class=\"line\"><span class=\"comment\">#    1°为π/180弧度,近似值为0.01745弧度.</span></span><br><span class=\"line\"><span class=\"comment\"># 2、经纬度的定义：纬度是以赤道为0度,经度是以英国伦敦附近的格林尼治天文台为0度.</span></span><br><span class=\"line\"><span class=\"comment\"># 3、换算：经纬度的度数/360=弧度/2π（3.14）</span></span><br><span class=\"line\"><span class=\"comment\"># 说明：经纬度前面的英文字母代表：西经W 东经E 北纬N 南纬S</span></span><br><span class=\"line\"><span class=\"comment\"># 北纬39度91分72秒=40度32分12秒（经纬度分秒是60进制,1°=60′,1′=60〃）=40.537°</span></span><br><span class=\"line\"><span class=\"comment\"># 方式1： 40.537° / 57.3°=0.708弧度.</span></span><br><span class=\"line\"><span class=\"comment\"># 方式2：(度 + 分/60 + 秒/3600) / 180 / 3.1415926</span></span><br><span class=\"line\"></span><br><span class=\"line\">private static double Rad(double d)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (double)d * Math.PI / <span class=\"number\">180</span>d;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p>示例代码演示（Python）：<br><a href=\"https://github.com/WeiyiGeek/Study-Promgram/blob/master/Python3/Python安全平台建设/Image/exifinfo.py\" target=\"_blank\" rel=\"noopener\">+ Github代码查看</a></p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190624091637.png\" alt=\"WeiyiGeek.代码案例\" title=\"\" class=\"\">\n                <p>WeiyiGeek.代码案例</p>\n            </figure>\n<p>示例代码演示（C++）：<br><a href=\"https://github.com/exiv2/exiv2\" target=\"_blank\" rel=\"noopener\">https://github.com/exiv2/exiv2</a><br>C++参考：<a href=\"https://blog.csdn.net/u010431493/article/details/78964075\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/u010431493/article/details/78964075</a></p>\n<hr>\n\n<h4 id=\"0x01-EXIF利用\"><a href=\"#0x01-EXIF利用\" class=\"headerlink\" title=\"0x01 EXIF利用\"></a>0x01 EXIF利用</h4><p><strong>利用1：使用WinHex来修改图片定位地址：</strong><br>修改GPS数据，比如这里修改成114.146288,22.440669(114°8’46.6368”，22°26’26.4084”)转换成16进制纬度为72.H 8.H 2e.H，经度(16.H 1a.H 1a.H)接下来写入,测试GPS经纬已经变化，原图检验也过了。<br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190624130900.png\" alt=\"WeiyiGeek.测试\" title=\"\" class=\"\">\n                <p>WeiyiGeek.测试</p>\n            </figure></p>\n<p><em>那我们如何鉴别图片是否被修改</em>?<br>答：由于Exif信息是可以被任意编辑的，因此可以利用JPEGsnoop或者MagicEXIF工具判断Exif是原始的还是被修改过的(工具修改大多会留下痕迹),不过这种辨别方式也只能作为参考</p>\n<p><br></p>\n<p><strong>利用2：exif之反社工利用</strong><br>既然EXIF信息能修改,比如可以在别人社工之前提前修改好图片定位可以迷惑下对方,也可以在图片中注入xss,如果对方通过浏览器一些插件查看则会被触发，因此存在一定限制条件可以做为一个手法结合其他姿势搞搞。</p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"基础知识","path":"api/categories/基础知识.json"}],"tags":[{"name":"EXIF","path":"api/tags/EXIF.json"}]}