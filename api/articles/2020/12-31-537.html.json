{"title":"7.Jenkins插件安装使用帮助说明","slug":"系统运维/自动化运维/CI-CD/Jenkins/7.Jenkins插件安装使用帮助说明","date":"2020-12-31T05:34:30.000Z","updated":"2022-10-30T03:04:35.328Z","url":"2020/12-31-537.html","path":"api/articles/2020/12-31-537.html.json","covers":["https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2021/1/20210223154712.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h2 id=\"0x01-Jenkins-常用插件\"><a href=\"#0x01-Jenkins-常用插件\" class=\"headerlink\" title=\"0x01 Jenkins 常用插件\"></a>0x01 Jenkins 常用插件</h2><p>Jenkins 持续集成常用插件一览表:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 权限管理</span></span><br><span class=\"line\">Role-based Authorization Strategy  - 3.1 ： http://wiki.jenkins-ci.org/display/JENKINS/Role+Strategy+Plugin</span><br><span class=\"line\">Authorize Project Plugin - 项目权限管控</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建参数 - Parameters</span></span><br><span class=\"line\">Extended Choice Parameter</span><br><span class=\"line\">git Parameter - 获取代码分支</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ssh</span></span><br><span class=\"line\">SSH Credentials</span><br><span class=\"line\">SSH Slaves</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Gitlab</span></span><br><span class=\"line\">Git (4.5.2) - This plugin integrates Git with Jenkins. </span><br><span class=\"line\">Git client (3.6.0) - Utility plugin <span class=\"keyword\">for</span> Git support <span class=\"keyword\">in</span> Jenkins</span><br><span class=\"line\">Gitlab Authentication  (1.10) - This is the an authentication plugin using gitlab OAuth.</span><br><span class=\"line\">GitLab  (1.5.13) - This plugin allows GitLab to trigger Jenkins builds and display their results <span class=\"keyword\">in</span> the GitLab UI.</span><br><span class=\"line\">Credentials (2.3.14) - This plugin allows you to store credentials <span class=\"keyword\">in</span> Jenkins.</span><br><span class=\"line\">GitLab Branch Source - 提供分支源代码和文件夹组织功能的GitLab仓库在詹金斯</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Svn</span></span><br><span class=\"line\">Subversion Plug-in  - svn 仓库专用</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># pipeline 编写</span></span><br><span class=\"line\">Pipeline </span><br><span class=\"line\">Pipeline: Groovy - 2.87</span><br><span class=\"line\">Groovy  - 2.3 </span><br><span class=\"line\">Groovy Postbuild  - 2.5</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 质量检测</span></span><br><span class=\"line\">SonarQube Scanner - 2.13 </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 上下游构建</span></span><br><span class=\"line\">Parameterized Trigger </span><br><span class=\"line\">build-pipeline-plugin  - 可视化 build pipeline 插件</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建工具</span></span><br><span class=\"line\">Maven Integration - 3.8 </span><br><span class=\"line\">Config File Provider </span><br><span class=\"line\">Node and Label parameter </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 消息通知</span></span><br><span class=\"line\">Qy Wechat Notification Plugin - 1.0.2</span><br><span class=\"line\">Email Extension Plugin  <span class=\"comment\"># 自带通知功能相对单一</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 容器管理</span></span><br><span class=\"line\">Kubernetes plugin - Jenkins插件可在Kubernetes集群中运行动态代理。</span><br><span class=\"line\">Kubectl  - Kubectl Cli 插件帮助我们在容器中执行相关命令</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 节点添加</span></span><br><span class=\"line\">SSH Agent - This plugin allows you to provide SSH credentials to builds via a ssh-agent <span class=\"keyword\">in</span> Jenkins </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 文件目录管理</span></span><br><span class=\"line\">File Operations - 1.11</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 健康检查</span></span><br><span class=\"line\">HttpRequest </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 数据备份</span></span><br><span class=\"line\">thinBackup Version - 1.11</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<hr>\n<h2 id=\"0x02-Jenkins-插件使用说明\"><a href=\"#0x02-Jenkins-插件使用说明\" class=\"headerlink\" title=\"0x02 Jenkins 插件使用说明\"></a>0x02 Jenkins 插件使用说明</h2><h3 id=\"1-SSH-steps-Plugin\"><a href=\"#1-SSH-steps-Plugin\" class=\"headerlink\" title=\"(1) SSH-steps-Plugin\"></a>(1) SSH-steps-Plugin</h3><p>项目描述: Jenkins流水线步骤，提供SSH工具，如命令执行或文件传输，以实现持续交付。<br>项目地址: <a href=\"https://github.com/jenkinsci/ssh-steps-plugin\" target=\"_blank\" rel=\"noopener\">https://github.com/jenkinsci/ssh-steps-plugin</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Version: 2.0.0</span><br><span class=\"line\">Released: 2 years ago</span><br><span class=\"line\">Requires Jenkins 2.121.1</span><br></pre></td></tr></table></figure>\n<p><strong>1) 在Jenkins中设置一个安全文本(Secret text)票据, 不建议使用明文票据;</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Secret text\ta2bc53c0-0b68-4fce-9f1f-d04815ae52c1\tk8s-192.168.12.215\tSecret text\tk8s-192.168.12.215</span></span><br></pre></td></tr></table></figure>\n<p>Delactive Pipeline Script:<br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pipeline &#123;</span><br><span class=\"line\">  stages &#123;</span><br><span class=\"line\">    stage (<span class=\"string\">'ssh-steps-plugin'</span>) &#123;</span><br><span class=\"line\">      steps &#123;</span><br><span class=\"line\">        script &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">              <span class=\"keyword\">def</span> remote = [:]</span><br><span class=\"line\">              remote.name = <span class=\"string\">'K8s-Master'</span></span><br><span class=\"line\">              remote.user = <span class=\"string\">'root'</span></span><br><span class=\"line\">              remote.host = <span class=\"string\">'192.168.12.215'</span></span><br><span class=\"line\">              <span class=\"comment\">//remote.password = 'password'  // 明文不安全</span></span><br><span class=\"line\">              remote.allowAnyHosts = <span class=\"literal\">true</span>     <span class=\"comment\">// 必须要运行所有主机</span></span><br><span class=\"line\">              withCredentials([string(<span class=\"string\">credentialsId:</span> <span class=\"string\">'a2bc53c0-0b68-4fce-9f1f-d04815ae52c1'</span>, <span class=\"string\">variable:</span> <span class=\"string\">'sshpassword'</span>)]) &#123;</span><br><span class=\"line\">                remote.password = sshpassword</span><br><span class=\"line\">                writeFile <span class=\"string\">file:</span> <span class=\"string\">'abc.sh'</span>, <span class=\"string\">text:</span> <span class=\"string\">'ls'</span>, <span class=\"string\">encoding:</span> <span class=\"string\">'utf-8'</span></span><br><span class=\"line\">                sshPut <span class=\"string\">remote:</span> remote, <span class=\"string\">from:</span> <span class=\"string\">'abc.sh'</span>, <span class=\"string\">into:</span> <span class=\"string\">'.'</span>  <span class=\"comment\">// 非常注意 不能为其它目录只能在当前路径之中</span></span><br><span class=\"line\">                sshGet <span class=\"string\">remote:</span> remote, <span class=\"string\">from:</span> <span class=\"string\">'abc.sh'</span>, <span class=\"string\">into:</span> <span class=\"string\">'bac.sh'</span>, <span class=\"string\">override:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">                sshScript <span class=\"string\">remote:</span> remote, <span class=\"string\">script:</span> <span class=\"string\">'abc.sh'</span></span><br><span class=\"line\">                sshRemove <span class=\"string\">remote:</span> remote, <span class=\"string\">path:</span> <span class=\"string\">'abc.sh'</span></span><br><span class=\"line\">                sshCommand <span class=\"string\">remote:</span> remote, <span class=\"string\">command:</span> <span class=\"string\">' whoami &amp;&amp; for i in &#123;1..5&#125;; do echo -n \\\"Loop \\$i \\\"; date ; sleep 1; done'</span></span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span>(Exception err) &#123;</span><br><span class=\"line\">                echo err.toString() </span><br><span class=\"line\">                error <span class=\"string\">\"[-Error] : ssh-steps-plugin测试失败\\n [-Msg] : $&#123;err.getMessage()&#125; \"</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>输出结果<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># SSH Steps: sshCommand - Execute command on remote node.7s</span></span><br><span class=\"line\"><span class=\"comment\"># Host key checking is off. It may be vulnerable to man-in-the-middle attacks.</span></span><br><span class=\"line\">[jsch] Permanently added <span class=\"string\">'192.168.12.215'</span> (RSA) to the list of known hosts.</span><br><span class=\"line\">Connected to 192.168.12.215[192.168.12.215:22] (SSH-2.0-OpenSSH_7.4)</span><br><span class=\"line\">Started <span class=\"built_in\">command</span> 192.168.12.215<span class=\"comment\">#0: whoami</span></span><br><span class=\"line\">root</span><br><span class=\"line\">Success <span class=\"built_in\">command</span> 192.168.12.215<span class=\"comment\">#0: whoami</span></span><br><span class=\"line\">Disconnected from 192.168.12.215[192.168.12.215:22]</span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2021/1/20210223154712.png\" alt=\"WeiyiGeek.SSH-STEPS\" title=\"\" class=\"\">\n                <p>WeiyiGeek.SSH-STEPS</p>\n            </figure>\n<p><br></p>\n<p><strong>2) 官网示例中采用密钥进行验证操作</strong><br>描述: 利用Jenkins凭据存储区读取私钥之后再进行ssh主机验证操作，但是需要注意高版本的Openssh的影响。<br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> remote = [:]</span><br><span class=\"line\">remote.name = <span class=\"string\">\"node-1\"</span></span><br><span class=\"line\">remote.host = <span class=\"string\">\"10.000.000.153\"</span></span><br><span class=\"line\">remote.allowAnyHosts = <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\">withCredentials([sshUserPrivateKey(<span class=\"string\">credentialsId:</span> <span class=\"string\">'sshUser'</span>, <span class=\"string\">keyFileVariable:</span> <span class=\"string\">'identity'</span>, <span class=\"string\">passphraseVariable:</span> <span class=\"string\">''</span>, <span class=\"string\">usernameVariable:</span> <span class=\"string\">'userName'</span>)]) &#123;</span><br><span class=\"line\">  remote.user = userName</span><br><span class=\"line\">  remote.identityFile = identity</span><br><span class=\"line\">  stage(<span class=\"string\">\"SSH Steps Rocks!\"</span>) &#123;</span><br><span class=\"line\">    writeFile <span class=\"string\">file:</span> <span class=\"string\">'abc.sh'</span>, <span class=\"string\">text:</span> <span class=\"string\">'ls'</span></span><br><span class=\"line\">    sshCommand <span class=\"string\">remote:</span> remote, <span class=\"string\">command:</span> <span class=\"string\">'for i in &#123;1..5&#125;; do echo -n \\\"Loop \\$i \\\"; date ; sleep 1; done'</span></span><br><span class=\"line\">    sshPut <span class=\"string\">remote:</span> remote, <span class=\"string\">from:</span> <span class=\"string\">'abc.sh'</span>, <span class=\"string\">into:</span> <span class=\"string\">'.'</span></span><br><span class=\"line\">    sshGet <span class=\"string\">remote:</span> remote, <span class=\"string\">from:</span> <span class=\"string\">'abc.sh'</span>, <span class=\"string\">into:</span> <span class=\"string\">'bac.sh'</span>, <span class=\"string\">override:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    sshScript <span class=\"string\">remote:</span> remote, <span class=\"string\">script:</span> <span class=\"string\">'abc.sh'</span></span><br><span class=\"line\">    sshRemove <span class=\"string\">remote:</span> remote, <span class=\"string\">path:</span> <span class=\"string\">'abc.sh'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>3) 远程主机文件上传与删除</strong><br>执行脚本:<br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">def</span> projectProduct = sh <span class=\"string\">returnStdout:</span> <span class=\"literal\">true</span>, <span class=\"string\">script:</span> <span class=\"string\">\"find $&#123;APP_FILE&#125;\"</span>  <span class=\"comment\">// returnStatus: true</span></span><br><span class=\"line\">  <span class=\"keyword\">def</span> productName = sh <span class=\"string\">returnStdout:</span> <span class=\"literal\">true</span>, <span class=\"string\">script:</span> <span class=\"string\">\"echo $&#123;JOB_NAME&#125;-$&#123;RELEASE_VERSION&#125;$&#123;APP_SUFFIX&#125;\"</span></span><br><span class=\"line\">  <span class=\"keyword\">def</span> remote = [:]</span><br><span class=\"line\">  remote.name = <span class=\"string\">\"K8s-Master#$&#123;DEPLOY_HOST&#125;\"</span></span><br><span class=\"line\">  remote.user = <span class=\"string\">\"weiyigeek\"</span> <span class=\"comment\">// \"$&#123;DEPLOY_USER&#125;\"</span></span><br><span class=\"line\">  remote.host = <span class=\"string\">\"192.168.12.107\"</span> <span class=\"comment\">//\"$&#123;DEPLOY_HOST&#125;\"</span></span><br><span class=\"line\">  remote.port = <span class=\"number\">20211</span></span><br><span class=\"line\">  remote.allowAnyHosts = <span class=\"literal\">true</span>     <span class=\"comment\">// 必须要运行所有主机</span></span><br><span class=\"line\">  withCredentials([string(<span class=\"string\">credentialsId:</span> <span class=\"string\">\"$&#123;DEPLOY_CREDENTIALSID&#125;\"</span>, <span class=\"string\">variable:</span> <span class=\"string\">'sshpassword'</span>)]) &#123;</span><br><span class=\"line\">    remote.password = sshpassword</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (productName != <span class=\"string\">''</span> &amp;&amp; projectProduct != <span class=\"string\">''</span>)&#123;</span><br><span class=\"line\">    println(projectProduct + <span class=\"string\">\"-\"</span> +  productName)</span><br><span class=\"line\">    writeFile <span class=\"string\">file:</span> <span class=\"string\">'projectProduct.sh'</span>, <span class=\"string\">text:</span> <span class=\"string\">\"$&#123;productName&#125;\"</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    error <span class=\"string\">\"[-Error] : projectProduct 不能为空!\"</span></span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">      </span><br><span class=\"line\">  sshPut <span class=\"string\">remote:</span> remote, <span class=\"string\">from:</span> <span class=\"string\">\"/home/jenkins/agent/workspace/HelloWorld/target/hello-world.war\"</span> , <span class=\"string\">into:</span> <span class=\"string\">\"$&#123;APP_DIR&#125;\"</span>         </span><br><span class=\"line\">  sshCommand <span class=\"string\">remote:</span> remote, <span class=\"string\">command:</span> <span class=\"string\">\"ls -alh $&#123;APP_DIR&#125;\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>输出结果:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">target/hello-world.war - hello-world-v1.31.war</span><br><span class=\"line\"></span><br><span class=\"line\">projectProduct.sh — Write file to workspace &lt; 1s</span><br><span class=\"line\">+ <span class=\"built_in\">pwd</span></span><br><span class=\"line\">/home/jenkins/agent/workspace/HelloWorld</span><br><span class=\"line\"></span><br><span class=\"line\">SSH Steps: sshPut - Put a file/directory on remote node.6s</span><br><span class=\"line\">Sending a file/directory to `K8s-Master<span class=\"comment\">#192.168.12.215[192.168.12.107]`: from: `/home/jenkins/agent/workspace/HelloWorld/target/hello-world.war` into: /tmp/</span></span><br><span class=\"line\"></span><br><span class=\"line\">SSH Steps: sshCommand - Execute <span class=\"built_in\">command</span> on remote node.1s</span><br><span class=\"line\"></span><br><span class=\"line\">Executing <span class=\"built_in\">command</span> on K8s-Master<span class=\"comment\">#192.168.12.215[192.168.12.107]: ls -alh /tmp/ sudo: false</span></span><br><span class=\"line\">total 5.9M</span><br><span class=\"line\">-rw-rw-r--  1 weiyigeek weiyigeek 2.0M Feb 23 09:02 hello-world-v1.31.war</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>4) 采用函数调用的方式</strong><br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!groovy</span><br><span class=\"line\"><span class=\"keyword\">def</span> getHost()&#123;</span><br><span class=\"line\">    <span class=\"keyword\">def</span> remote = [:]</span><br><span class=\"line\">    remote.name = <span class=\"string\">'mysql'</span></span><br><span class=\"line\">    remote.host = <span class=\"string\">'192.168.8.108'</span></span><br><span class=\"line\">    remote.user = <span class=\"string\">'root'</span></span><br><span class=\"line\">    remote.port = <span class=\"number\">22</span></span><br><span class=\"line\">    remote.password = <span class=\"string\">'qweasd'</span></span><br><span class=\"line\">    remote.allowAnyHosts = <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> remote</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">pipeline &#123;</span><br><span class=\"line\">    agent &#123;label <span class=\"string\">'master'</span>&#125;</span><br><span class=\"line\">    environment&#123;</span><br><span class=\"line\">        <span class=\"keyword\">def</span> server = <span class=\"string\">''</span></span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\">    stages &#123;</span><br><span class=\"line\">        stage(<span class=\"string\">'init-server'</span>)&#123;</span><br><span class=\"line\">            steps &#123;</span><br><span class=\"line\">                script &#123;                 </span><br><span class=\"line\">                   server = getHost()                                   </span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        stage(<span class=\"string\">'use'</span>)&#123;</span><br><span class=\"line\">            steps &#123;</span><br><span class=\"line\">                script &#123;</span><br><span class=\"line\">                  sshCommand <span class=\"string\">remote:</span> server, <span class=\"string\">command:</span> <span class=\"string\">\"\"\"                 </span></span><br><span class=\"line\"><span class=\"string\">                  if test ! -d aaa/ccc ;then mkdir -p aaa/ccc;fi;cd aaa/ccc;rm -rf ./*;echo 'aa' &gt; aa.log</span></span><br><span class=\"line\"><span class=\"string\">                  \"\"\"</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>入坑出坑</strong><br>问题1.使用ssh-steps-plugin插件并且使用Jenkins shh Private 凭据时jsch密钥连接远程Linux报错 com.jcraft.jsch.JSchException: invalid privatekey: [B@277050dc<br>报错信息:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exception <span class=\"keyword\">in</span> thread <span class=\"string\">\"main\"</span> com.jcraft.jsch.JSchException: invalid privatekey: [B@277050dc</span><br><span class=\"line\">  at com.jcraft.jsch.KeyPair.load(KeyPair.java:664)</span><br><span class=\"line\">  at com.jcraft.jsch.KeyPair.load(KeyPair.java:561)</span><br><span class=\"line\">  at com.jcraft.jsch.IdentityFile.newInstance(IdentityFile.java:40)</span><br><span class=\"line\">  at com.jcraft.jsch.JSch.addIdentity(JSch.java:407)</span><br><span class=\"line\">  at com.jcraft.jsch.JSch.addIdentity(JSch.java:388)</span><br><span class=\"line\">  at com.scc.nanny.ssh.SSH.&lt;init&gt;(SSH.java:59)</span><br><span class=\"line\">  at com.scc.nanny.ssh.SSH.main(SSH.java:124)</span><br></pre></td></tr></table></figure><br>问题原因: 主要原因是生成密钥的时候使用的openssh版本过高导致<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 高版本生成的密钥</span></span><br><span class=\"line\">-----BEGIN OPENSSH PRIVATE KEY-----</span><br><span class=\"line\">b3BlbnNzaC1rZXktdjEAAAAACmFlczI1Ni1jdHIAAAAGYmNyeXB0AAAAGAAAABDRomEs9d</span><br><span class=\"line\">........</span><br><span class=\"line\">Av8l4J6WvCkc3NAAAAEAAAAAEAAAEXAAAAB3NzaC1yc2EAAAADAQABAAABAQDD1C48/OJ3</span><br><span class=\"line\">-----END OPENSSH PRIVATE KEY-----</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ssh-steps-plugin 插件支持的密钥样式</span></span><br><span class=\"line\">-----BEGIN RSA PRIVATE KEY-----</span><br><span class=\"line\">Proc-Type: 4,ENCRYPTED</span><br><span class=\"line\">DEK-Info: AES-128-CBC,749E5AFD6F06C22EF6FD3AECCB6E540B</span><br><span class=\"line\">  </span><br><span class=\"line\">FwOlFOtCM+JH3EG7gzDOffkwLysiDCucdUeDZaK08rFSWzKpMwfPD/AZKNi0dqZR</span><br><span class=\"line\">....</span><br><span class=\"line\">-----END RSA PRIVATE KEY-----</span><br></pre></td></tr></table></figure><br>解决办法: 不能在ssh-steps-plugin插件的版本使用Private验证只能使用密码验证,参考上述1步骤;</p>\n<hr>\n<h3 id=\"2-Gitlab-Plugin\"><a href=\"#2-Gitlab-Plugin\" class=\"headerlink\" title=\"(2) Gitlab-Plugin\"></a>(2) Gitlab-Plugin</h3><p>官方地址:<br>帮助文档: <a href=\"https://github.com/jenkinsci/gitlab-plugin#pipeline-jobs\" target=\"_blank\" rel=\"noopener\">https://github.com/jenkinsci/gitlab-plugin#pipeline-jobs</a></p>\n<p><strong>Gitlab Triggers Setting</strong><br>如果您想在声明式构建中配置插件支持的任何可选作业触发器请使用触发器块，完整的可配置触发选项列表如下:<br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 触发器</span></span><br><span class=\"line\">triggers &#123;</span><br><span class=\"line\">  <span class=\"comment\">// gitlab 相关触发</span></span><br><span class=\"line\">  gitlab(</span><br><span class=\"line\"><span class=\"symbol\">    triggerOnPush:</span> <span class=\"literal\">false</span>,</span><br><span class=\"line\"><span class=\"symbol\">    triggerOnMergeRequest:</span> <span class=\"literal\">true</span>, <span class=\"string\">triggerOpenMergeRequestOnPush:</span> <span class=\"string\">\"never\"</span>,</span><br><span class=\"line\"><span class=\"symbol\">    triggerOnNoteRequest:</span> <span class=\"literal\">true</span>,</span><br><span class=\"line\"><span class=\"symbol\">    noteRegex:</span> <span class=\"string\">\"Jenkins please retry a build\"</span>,</span><br><span class=\"line\"><span class=\"symbol\">    skipWorkInProgressMergeRequest:</span> <span class=\"literal\">true</span>,</span><br><span class=\"line\"><span class=\"symbol\">    ciSkip:</span> <span class=\"literal\">false</span>,</span><br><span class=\"line\"><span class=\"symbol\">    setBuildDescription:</span> <span class=\"literal\">true</span>,</span><br><span class=\"line\"><span class=\"symbol\">    addNoteOnMergeRequest:</span> <span class=\"literal\">true</span>,</span><br><span class=\"line\"><span class=\"symbol\">    addCiMessage:</span> <span class=\"literal\">true</span>,</span><br><span class=\"line\"><span class=\"symbol\">    addVoteOnMergeRequest:</span> <span class=\"literal\">true</span>,</span><br><span class=\"line\"><span class=\"symbol\">    acceptMergeRequestOnSuccess:</span> <span class=\"literal\">false</span>,</span><br><span class=\"line\"><span class=\"symbol\">    branchFilterType:</span> <span class=\"string\">\"NameBasedFilter\"</span>,</span><br><span class=\"line\"><span class=\"symbol\">    includeBranchesSpec:</span> <span class=\"string\">\"release/qat\"</span>,</span><br><span class=\"line\"><span class=\"symbol\">    excludeBranchesSpec:</span> <span class=\"string\">\"\"</span>,</span><br><span class=\"line\"><span class=\"symbol\">    pendingBuildName:</span> <span class=\"string\">\"Jenkins\"</span>,</span><br><span class=\"line\"><span class=\"symbol\">    cancelPendingBuildsOnUpdate:</span> <span class=\"literal\">false</span>,</span><br><span class=\"line\"><span class=\"symbol\">    secretToken:</span> <span class=\"string\">\"abcdefghijklmnopqrstuvwxyz0123456789ABCDEF\"</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>Tips : 注意:您将需要手动运行此作业一次，以便Jenkins读取和设置触发器配置。否则 webhook 将无法触发作业。</p>\n<p><br></p>\n<p><strong>Gitlab PipeLine Status Sync</strong><br>描述: Jenkins 创建的 Pipeline 同步到 Gitlab-CI 流水线之中;</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pipeline &#123;</span><br><span class=\"line\">  agent any</span><br><span class=\"line\"></span><br><span class=\"line\">  options &#123;</span><br><span class=\"line\">    gitLabConnection(<span class=\"string\">'your-gitlab-connection-name'</span>)</span><br><span class=\"line\">    gitlabBuilds(<span class=\"string\">builds:</span> [<span class=\"string\">'build'</span>, <span class=\"string\">'test'</span>, <span class=\"string\">'deploy'</span>])</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  stage &#123;</span><br><span class=\"line\">    stage(<span class=\"string\">\"build\"</span>) &#123;</span><br><span class=\"line\">        gitlabCommitStatus(<span class=\"string\">\"build\"</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// your build steps</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      stage(<span class=\"string\">\"test\"</span>) &#123;</span><br><span class=\"line\">        gitlabCommitStatus(<span class=\"string\">\"test\"</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// your test steps</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  post &#123;</span><br><span class=\"line\">    failure &#123;</span><br><span class=\"line\">      updateGitlabCommitStatus <span class=\"string\">name:</span> <span class=\"string\">'build'</span>, <span class=\"string\">state:</span> <span class=\"string\">'failed'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    success &#123;</span><br><span class=\"line\">      updateGitlabCommitStatus <span class=\"string\">name:</span> <span class=\"string\">'build'</span>, <span class=\"string\">state:</span> <span class=\"string\">'success'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"3-Kubernetes-plugin\"><a href=\"#3-Kubernetes-plugin\" class=\"headerlink\" title=\"(3) Kubernetes-plugin\"></a>(3) Kubernetes-plugin</h3><p>描述: 通过该插件我们可以实现 Jenkins 管理 Kubernetes 集群以及实现自动化部署;</p>\n<p>Jenkins 服务有关 Kubernetes 的插件介绍:</p>\n<ul>\n<li>1.Kubernetes Credentials 认证插件: 设置连接过程中使用到的信息，包括 Kubernetes Master 的链接地址、证书、用户名和命名空间等</li>\n<li>2.Kubernetes CLI 管理插件: 结合上面的认证插件使用，通过 kubectl 客户端来管理 Kubernetes 服务，但是这个插件并不会在 Jenkins 服务所在主机上安装 Kubectl 工具，所以你需要自行安装。</li>\n<li>3.Kubernetes 插件: 用于将 Jenkins 服务和 Kubernetes 服务结合起来, 使用其插件的前提条件是设置好 Kubernetes 服务的链接配置，并在 Pipeline 中使用相应的指令。该插件提供的指令有 <code>PodTemplate 、slaveTemplates、kubernetes</code> 等指令；而不是通过 Kubectl 客户端进行管理</li>\n</ul>\n<p>Tips : 如果不想使用Kubernetes插件进行管理K8s集群, 我们可以设置一台服务器为 Kubernetes 服务的客户端，配置好 Kubectl 客户端；让 Jenkins 服务通过 SSH 方式连接到客户端执行管理命令。</p>\n<p><strong>Kubernetes 插件支持关键字</strong><br>参考地址: <a href=\"https://github.com/jenkinsci/kubernetes-plugin#pod-template\" target=\"_blank\" rel=\"noopener\">https://github.com/jenkinsci/kubernetes-plugin#pod-template</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">activeDeadlineSeconds,</span><br><span class=\"line\">cloud, </span><br><span class=\"line\">containerTemplate, </span><br><span class=\"line\">containerTemplates, </span><br><span class=\"line\">customWorkspace, </span><br><span class=\"line\">defaultContainer, </span><br><span class=\"line\">idleMinutes, </span><br><span class=\"line\">inheritFrom, </span><br><span class=\"line\">instanceCap, </span><br><span class=\"line\">label, </span><br><span class=\"line\">namespace, </span><br><span class=\"line\">nodeSelector, </span><br><span class=\"line\">podRetention, </span><br><span class=\"line\">schedulerName, </span><br><span class=\"line\">serviceAccount, </span><br><span class=\"line\">showRawYaml, </span><br><span class=\"line\">slaveConnectTimeout, </span><br><span class=\"line\">supplementalGroups, </span><br><span class=\"line\">workingDir, </span><br><span class=\"line\">workspaceVolume, </span><br><span class=\"line\">yaml, </span><br><span class=\"line\">yamlFile, </span><br><span class=\"line\">yamlMergeStrategy</span><br></pre></td></tr></table></figure></p>\n<p><strong>Help - 帮助声明:</strong></p>\n<ul>\n<li>Kubernetes 插件Github : <a href=\"https://github.com/jenkinsci/kubernetes-plugin\" target=\"_blank\" rel=\"noopener\">https://github.com/jenkinsci/kubernetes-plugin</a></li>\n<li>Kubernetes 插件使用示例: <a href=\"https://github.com/jenkinsci/kubernetes-plugin/tree/master/src/main/resources/org/csanchez/jenkins/plugins/kubernetes/pipeline/samples\" target=\"_blank\" rel=\"noopener\">https://github.com/jenkinsci/kubernetes-plugin/tree/master/src/main/resources/org/csanchez/jenkins/plugins/kubernetes/pipeline/samples</a></li>\n</ul>\n<hr>\n<h3 id=\"4-qy-wechat-notification-plugin\"><a href=\"#4-qy-wechat-notification-plugin\" class=\"headerlink\" title=\"(4) qy-wechat-notification-plugin\"></a>(4) qy-wechat-notification-plugin</h3><p><strong>基础示例:</strong><br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pipeline &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 确认使用主机/节点机</span></span><br><span class=\"line\">  agent any <span class=\"comment\">/*&#123; node &#123; label 'master'&#125; &#125;*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 声明使用的工具(便于不同环境构建)</span></span><br><span class=\"line\">  tools &#123;</span><br><span class=\"line\">    maven <span class=\"string\">'maven_env'</span></span><br><span class=\"line\">    jdk   <span class=\"string\">'jdk_k1.8.0_211'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 流水线步骤声明</span></span><br><span class=\"line\">  stages &#123;</span><br><span class=\"line\">    stage (<span class=\"string\">\"代码拉取\"</span>) &#123;</span><br><span class=\"line\">     steps &#123;</span><br><span class=\"line\">      <span class=\"comment\">// (1) 代码拉取  </span></span><br><span class=\"line\">      git <span class=\"string\">credentialsId:</span> <span class=\"string\">'b4c8b4e9-2777-44a1-a1ed-e9dc21d37f4f'</span>, <span class=\"string\">url:</span> <span class=\"string\">'git@gitlab.weiyigeek.top:ci-cd/java-maven.git'</span></span><br><span class=\"line\">      <span class=\"comment\">// (2) 超时时间两分钟</span></span><br><span class=\"line\">      timeout(<span class=\"string\">time:</span> <span class=\"number\">2</span>, <span class=\"string\">unit:</span> <span class=\"string\">'MINUTES'</span>) &#123;</span><br><span class=\"line\">          script &#123;</span><br><span class=\"line\">            env.git_version=input <span class=\"string\">message:</span> <span class=\"string\">'选择版本'</span>, <span class=\"string\">ok:</span> <span class=\"string\">'通过'</span>,<span class=\"string\">parameters:</span> [string (<span class=\"string\">description:</span> <span class=\"string\">'应用版本'</span>, <span class=\"string\">name:</span> <span class=\"string\">'git_version'</span>, <span class=\"string\">trim:</span> <span class=\"literal\">true</span>)];</span><br><span class=\"line\">            env.deploy_option = input <span class=\"string\">message:</span> <span class=\"string\">'选择操作'</span>, <span class=\"string\">ok:</span> <span class=\"string\">'deploy'</span>, <span class=\"string\">parameters:</span> [<span class=\"string\">description:</span> <span class=\"string\">'选择部署环境'</span>,choice(<span class=\"string\">name:</span> <span class=\"string\">'deploy_option'</span>, <span class=\"string\">choices:</span> [<span class=\"string\">'deploy'</span>, <span class=\"string\">'rollback'</span>, <span class=\"string\">'redeploy'</span>])];</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">// (3) 切换版本</span></span><br><span class=\"line\">      sh <span class=\"string\">label:</span> <span class=\"string\">'build'</span>, <span class=\"string\">script:</span> <span class=\"string\">'[ -n \"$&#123;git_version&#125;\" ] &amp;&amp; git checkout $&#123;git_version&#125; || &#123; echo -e \"切换的tag的版本$&#123;git_version&#125; 不存在或为空请检查输入的tag!\" &amp;&amp; exit 1; &#125;'</span></span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    stage (<span class=\"string\">\"代码质检\"</span>) &#123;</span><br><span class=\"line\">     steps &#123;</span><br><span class=\"line\">       sh <span class=\"string\">label:</span> <span class=\"string\">'sonar'</span>, <span class=\"string\">returnStatus:</span> <span class=\"literal\">true</span>, <span class=\"string\">script:</span> <span class=\"string\">'''/usr/local/bin/sonar-scanner -Dsonar.projectName=$&#123;JOB_NAME&#125; -Dsonar.projectKey=Hello-World -Dsonar.sources=.'''</span></span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    stage (<span class=\"string\">\"项目构建\"</span>) &#123;</span><br><span class=\"line\">     steps &#123;</span><br><span class=\"line\">      sh <span class=\"string\">label:</span> <span class=\"string\">'build'</span>, <span class=\"string\">script:</span> <span class=\"string\">'cd /var/lib/jenkins/workspace/maven-pipeline-helloword/ &amp;&amp; /usr/local/maven/bin/mvn clean package -Dmaven.test.skip=true '</span></span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    stage (<span class=\"string\">\"项目部署\"</span>) &#123;</span><br><span class=\"line\">     steps &#123;</span><br><span class=\"line\">         sh <span class=\"string\">label:</span> <span class=\"string\">'deploy'</span>, <span class=\"string\">script:</span> <span class=\"string\">'/tmp/script/maven-jenkins-ci-script-pipeline-webhook.sh'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//消息通知: POST阶段当所有任务执行后触发</span></span><br><span class=\"line\">  post &#123;</span><br><span class=\"line\">    always &#123;</span><br><span class=\"line\">      echo <span class=\"string\">\"clear workspace......\"</span></span><br><span class=\"line\">      deleteDir()</span><br><span class=\"line\">      echo <span class=\"string\">\"Wechat notification......\"</span></span><br><span class=\"line\">      <span class=\"comment\">// 企业微信</span></span><br><span class=\"line\">      qyWechatNotification <span class=\"string\">aboutSend:</span> <span class=\"literal\">true</span>, <span class=\"string\">failNotify:</span> <span class=\"literal\">true</span>, <span class=\"string\">failSend:</span> <span class=\"literal\">true</span>, <span class=\"string\">mentionedId:</span> <span class=\"string\">'ALL'</span>, <span class=\"string\">mentionedMobile:</span> <span class=\"string\">''</span>, <span class=\"string\">startBuild:</span> <span class=\"literal\">true</span>, <span class=\"string\">successSend:</span> <span class=\"literal\">true</span>, <span class=\"string\">unstableSend:</span> <span class=\"literal\">true</span>, <span class=\"string\">webhookUrl:</span> <span class=\"string\">'https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=c222f3fc-f645-440a-ad24-0ce8d9626fa0'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><br></p>\n<p>PS : 钉钉机器人在Pipeline使用示例 <a href=\"https://jenkinsci.github.io/dingtalk-plugin/examples/link.html\" target=\"_blank\" rel=\"noopener\">https://jenkinsci.github.io/dingtalk-plugin/examples/link.html</a><br>PS : 企业微信插件开源代码(在Pipeline无法获取Job_Name) <a href=\"https://github.com/jenkinsci/qy-wechat-notification-plugin\" target=\"_blank\" rel=\"noopener\">https://github.com/jenkinsci/qy-wechat-notification-plugin</a></p>\n<p><br></p>\n<h3 id=\"5-File-Operations-Plugin\"><a href=\"#5-File-Operations-Plugin\" class=\"headerlink\" title=\"(5) File Operations - Plugin\"></a>(5) File Operations - Plugin</h3><p>描述: 在 Jenkins Pipeline 中，我们经常需要对文件、目录或者tar、zip等压缩包进行操作，比如移动、复制、重命名等等, 而采用sh复制正对于一些安全票据的操作时，会报出以下警告对于强迫症的我是接受不了的并且确实有安全隐患。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 提示1.</span></span><br><span class=\"line\">The following steps that have been detected may have insecure interpolation of sensitive variables (click here <span class=\"keyword\">for</span> an explanation):</span><br><span class=\"line\">sh: [keyfile, user]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 提示2.</span></span><br><span class=\"line\">Warning: A secret was passed to <span class=\"string\">\"sh\"</span> using Groovy String interpolation, <span class=\"built_in\">which</span> is insecure.</span><br><span class=\"line\">     Affected argument(s) used the following variable(s): [keyfile, user]</span><br><span class=\"line\">     See https://****.io/redirect/groovy-string-interpolation <span class=\"keyword\">for</span> details.</span><br><span class=\"line\">+ cp **** ./id.private</span><br></pre></td></tr></table></figure></p>\n<p>解决办法: 我们可以通过安装 <code>File Operations Plugin</code> 插件来解决上述问题。<br>插件地址: <a href=\"https://plugins.jenkins.io/file-operations\" target=\"_blank\" rel=\"noopener\">https://plugins.jenkins.io/file-operations</a><br>支持操作:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Array / List of Nested Choice of Objects</span></span><br><span class=\"line\">fileCopyOperation</span><br><span class=\"line\">fileCreateOperation</span><br><span class=\"line\">fileDeleteOperation</span><br><span class=\"line\">fileDownloadOperation</span><br><span class=\"line\">fileJoinOperation</span><br><span class=\"line\">filePropertiesToJsonOperation</span><br><span class=\"line\">fileRenameOperation</span><br><span class=\"line\">fileTransformOperation</span><br><span class=\"line\">fileUnTarOperation</span><br><span class=\"line\">fileUnZipOperation</span><br><span class=\"line\">fileZipOperation</span><br><span class=\"line\">folderCopyOperation</span><br><span class=\"line\">folderCreateOperation</span><br><span class=\"line\">folderDeleteOperation</span><br><span class=\"line\">folderRenameOperation</span><br></pre></td></tr></table></figure></p>\n<p>基础示例:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.创建目录</span></span><br><span class=\"line\">script &#123;</span><br><span class=\"line\">  fileOperations([folderCreateOperation(<span class=\"string\">'directoryname'</span>)])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.文件创建</span></span><br><span class=\"line\">script &#123;</span><br><span class=\"line\">  fileOperations([fileCreateOperation(fileContent: <span class=\"string\">'devops'</span>, fileName: <span class=\"string\">'test.json'</span>)])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.文件复制</span></span><br><span class=\"line\"><span class=\"comment\"># flattenFiles: 如果选中，文件将直接复制到目标位置，而不保留源文件子目录结构。</span></span><br><span class=\"line\">fileOperations ([</span><br><span class=\"line\">  folderCopyOperation(includes: <span class=\"string\">\"*\"</span>, targetLocation: <span class=\"string\">\".\"</span>, flattenFiles: <span class=\"literal\">true</span>)</span><br><span class=\"line\">])</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4.目录复制</span></span><br><span class=\"line\">fileOperations ([</span><br><span class=\"line\">  folderCopyOperation(sourceFolderPath: <span class=\"string\">\"/path/to/src\"</span>, destinationFolderPath: <span class=\"string\">\"/path/to/dest\"</span>),</span><br><span class=\"line\">  folderCopyOperation(sourceFolderPath: <span class=\"string\">\"/path/to/foo\"</span>, destinationFolderPath: <span class=\"string\">\"/path/to/bar\"</span>)</span><br><span class=\"line\">])</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"6-ThinBackup\"><a href=\"#6-ThinBackup\" class=\"headerlink\" title=\"(6) ThinBackup\"></a>(6) ThinBackup</h3><p>thinBackup Version 1.11<br>杂项<br>Backups the most important global and job specific configuration files. </p>\n<p>此插件仅备份全局和特定于作业的配置（而不是存档或工作区）。</p>\n<p>为什么是另一个备份插件<br>备份插件仅执行手动备份并存储JENKINS_HOME中找到的所有数据。由于时间和磁盘空间要求以及只能手动触发的事实，这有时是不切实际的。可以安排 ThinBackup，并且只备份最重要的配置信息。</p>\n<p>在一次更换密码的过程中，意外的丢失了大多数Jenkins项目，导致一个个配置很麻烦，虽然已经使用的SCM Pipeline的方式简化了配置模式， 但手动的配置还是让我花费1个小时才完成所有项目的恢复，所以备份真的很重要</p>\n<p>这里的的备份内容主要有</p>\n<p>Jenkins自身 - 包括Manager Jenkins里面的内容<br>项目 - 项目的配置，输出的结果等<br>这里推荐使用插件 ThinBackup</p>\n<p>安装后在 Manage Jenkins -&gt; ThinBackup找到它</p>\n<p>首先配置ThinBackup， 最重要的是配置以下选项</p>\n<p>Backup directory - 备份的路径， 注意一定是主节点机器上本地的路径，不能是Network路径，否则恢复会失败<br>Backup schedule for full backups - 自动备份时间<br>Max number of backup sets - 备份文件最大个数<br>其他的选项看个人情况备份， 比如我想保留我自己的主题和插件，所以选择保留Backup ‘userContent’ folder和<br>Backup plugins archives<br>————————————————<br>版权声明：本文为CSDN博主「gis2all」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。</p>\n<p>管理Jenkins</p>\n<p>chown -R 1000:1000 jenkins/<br>/storage/dev/backup/jenkins</p>\n<hr>\n<p><a href=\"https://plugins.jenkins.io/cloudbees-disk-usage-simple/\" target=\"_blank\" rel=\"noopener\">https://plugins.jenkins.io/cloudbees-disk-usage-simple/</a></p>\n<p>简单的磁盘使用情况插件，用于计算磁盘使用情况，同时限制对 Jenkins 控制器的性能影响。</p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"DevSecOps","path":"api/categories/DevSecOps.json"},{"name":"CI-CD","path":"api/categories/CI-CD.json"}],"tags":[{"name":"Jenkins","path":"api/tags/Jenkins.json"}]}