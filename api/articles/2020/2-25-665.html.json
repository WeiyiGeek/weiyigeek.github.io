{"title":"使用Docker容器快速部署常用服务","slug":"系统运维/快速部署/Docker快速部署常用服务","date":"2020-02-25T10:39:30.000Z","updated":"2022-07-17T06:46:17.516Z","url":"2020/2-25-665.html","path":"api/articles/2020/2-25-665.html.json","covers":null,"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h2 id=\"Docker-快速部署-nfs-server-服务\"><a href=\"#Docker-快速部署-nfs-server-服务\" class=\"headerlink\" title=\"Docker 快速部署 nfs-server 服务\"></a>Docker 快速部署 nfs-server 服务</h2><p>步骤 01.载入模块 nfs 依赖模块<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tee -a /etc/modules-load.d/modules.conf &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">modprobe nfs</span><br><span class=\"line\">modprobe nfsd</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure></p>\n<p>温馨提示: Linux modprobe命令用于自动处理可载入模块，modprobe可载入指定的个别模块，或是载入一组相依的模块。</p>\n<p>步骤 02.创建NFS共享目录以及运行nfs-server容器，并且验证服务<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mkdir -vp /app/storage/nfs</span><br><span class=\"line\">$ docker run --privileged -d --name nfs \\</span><br><span class=\"line\">-v /app/storage/nfs:/nfsshare \\</span><br><span class=\"line\">-e NFS_EXPORT_0=<span class=\"string\">'/nfsshare  *(rw,sync,no_root_squash,no_all_squash,no_subtree_check,nohide,crossmnt)'</span> \\</span><br><span class=\"line\">-p 2049:2049   -p 2049:2049/udp   \\</span><br><span class=\"line\">-p 111:111     -p 111:111/udp      \\</span><br><span class=\"line\">-p 32765:32765 -p 32765:32765/udp  \\</span><br><span class=\"line\">-p 32767:32767 -p 32767:32767/udp  \\</span><br><span class=\"line\">erichough/nfs-server</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在Ubuntu宿主机上安装nfs客户端工具</span></span><br><span class=\"line\">$ sudo apt install nfs-client</span><br><span class=\"line\">$ showmount -e 10.20.176.101</span><br><span class=\"line\">Export list <span class=\"keyword\">for</span> 10.20.176.101:</span><br><span class=\"line\">/nfsshare *</span><br></pre></td></tr></table></figure></p>\n<p>步骤 03.手动挂载nfs到指定磁盘目录中。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mount -v -t nfs -o ro,nfsvers=3,nolock,proto=udp,port=2049 10.20.176.101:/nfsshare /mnt/nfs</span><br></pre></td></tr></table></figure></p>\n<p>参考地址: <a href=\"https://github.com/ehough/docker-nfs-server\" target=\"_blank\" rel=\"noopener\">https://github.com/ehough/docker-nfs-server</a></p>\n<p><br/></p>\n<h2 id=\"Docker-快速部署-samba-server-服务\"><a href=\"#Docker-快速部署-samba-server-服务\" class=\"headerlink\" title=\"Docker 快速部署 samba-server 服务\"></a>Docker 快速部署 samba-server 服务</h2><p>描述: Samba 是适用于 Linux 和 Unix 的标准 Windows 互操作性程序套件。自 1992 年以来，Samba 为所有使用 SMB/CIFS 协议的客户端提供了安全、稳定和快速的文件和打印服务，例如所有版本的 DOS 和 Windows、OS/2、Linux 等等。</p>\n<p>步骤 01.部署 samba-server 服务<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo mkdir -vp /app/storage/nfs</span><br><span class=\"line\">$ sudo docker run -it --name samba -p 139:139 -p 445:445 \\</span><br><span class=\"line\">  -e TZ=Etc/UTC \\</span><br><span class=\"line\">  -v /app/storage/nfs:/share \\</span><br><span class=\"line\">  -d dperson/samba -p \\</span><br><span class=\"line\">  -u <span class=\"string\">\"iuser;123456\"</span> \\</span><br><span class=\"line\">  -s <span class=\"string\">\"iuser;/share;yes;no;yes\"</span></span><br></pre></td></tr></table></figure></p>\n<p>步骤 02.Windows 中挂载 samba-server<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 方式1.</span></span><br><span class=\"line\">\\\\10.20.176.101\\iuser</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方式2.</span></span><br><span class=\"line\">C:\\Users\\WeiyiGeek&gt;net use J: \\\\10.20.176.101\\iuser <span class=\"string\">\"123456\"</span> /USER:iuser /PERSISTEN:yes</span><br><span class=\"line\">  <span class=\"comment\"># 命令成功完成。</span></span><br><span class=\"line\"></span><br><span class=\"line\">C:\\Users\\WeiyiGeek&gt;net use | findstr iuser</span><br><span class=\"line\">  <span class=\"comment\"># OK           J:        \\\\10.20.176.101\\iuser     Microsoft Windows Network</span></span><br></pre></td></tr></table></figure></p>\n<p>可用 ENVIRONMENT VARIABLES:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* CHARMAP - As above, configure character mapping</span><br><span class=\"line\">* GENERIC - As above, configure a generic section option (See NOTE3 below)</span><br><span class=\"line\">* GLOBAL - As above, configure a global option (See NOTE3 below)</span><br><span class=\"line\">* IMPORT - As above, import a smbpassword file</span><br><span class=\"line\">* NMBD - As above, <span class=\"built_in\">enable</span> nmbd</span><br><span class=\"line\">* PERMISSIONS - As above, <span class=\"built_in\">set</span> file permissions on all shares</span><br><span class=\"line\">* RECYCLE - As above, <span class=\"built_in\">disable</span> recycle bin</span><br><span class=\"line\">* SHARE - As above, setup a share (See NOTE3 below)</span><br><span class=\"line\">* SMB - As above, <span class=\"built_in\">disable</span> SMB2 minimum version</span><br><span class=\"line\">* TZ - Set a timezone, IE EST5EDT</span><br><span class=\"line\">* USER - As above, setup a user (See NOTE3 below)</span><br><span class=\"line\">* WIDELINKS - As above, allow access wide symbolic links</span><br><span class=\"line\">* WORKGROUP - As above, <span class=\"built_in\">set</span> workgroup</span><br><span class=\"line\">* USERID - Set the UID <span class=\"keyword\">for</span> the samba server<span class=\"string\">'s default user (smbuser)</span></span><br><span class=\"line\"><span class=\"string\">* GROUPID - Set the GID for the samba server'</span>s default user (smbuser)</span><br><span class=\"line\">* INCLUDE - As above, add a smb.conf include</span><br></pre></td></tr></table></figure></p>\n<p>官方地址: <a href=\"https://www.samba.org/\" target=\"_blank\" rel=\"noopener\">https://www.samba.org/</a><br>参考地址: <a href=\"https://hub.docker.com/r/dperson/samba\" target=\"_blank\" rel=\"noopener\">https://hub.docker.com/r/dperson/samba</a><br>Github地址: <a href=\"https://github.com/dperson/samba/issues\" target=\"_blank\" rel=\"noopener\">https://github.com/dperson/samba/issues</a></p>\n<p><br></p>\n<h2 id=\"Docker-快速部署-Squid-代理服务\"><a href=\"#Docker-快速部署-Squid-代理服务\" class=\"headerlink\" title=\"Docker 快速部署 Squid 代理服务\"></a>Docker 快速部署 Squid 代理服务</h2><p>描述: Dockerfile 为 Squid 代理服务器创建 Docker 容器镜像, 当前最新版本 <code>sameersbn/squid:3.5.27-2</code>。</p>\n<p><strong>Q: 什么是 Squid ?</strong><br>Squid 是一个支持 HTTP、HTTPS、FTP 等的 Web 缓存代理。它通过缓存和重用频繁请求的网页来减少带宽并提高响应时间, Squid 具有广泛的访问控制功能，是出色的服务器加速器。</p>\n<p>项目地址: <a href=\"https://github.com/sameersbn/docker-squid\" target=\"_blank\" rel=\"noopener\">https://github.com/sameersbn/docker-squid</a><br>hub地址: <a href=\"https://hub.docker.com/r/sameersbn/squid\" target=\"_blank\" rel=\"noopener\">https://hub.docker.com/r/sameersbn/squid</a></p>\n<p>温馨提示: 如果你是 CentOS 系统 SELinux 用户应尝试使用命令 setenforce 0 禁用 SELinux，看看它是否能解决问题。</p>\n<p><strong>快速部署</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.无代理验证启动(临时用)</span></span><br><span class=\"line\">docker run --name squid -d --restart=always \\</span><br><span class=\"line\">  --publish 3128:3128 \\</span><br><span class=\"line\">  --volume /srv/docker/squid/cache:/var/spool/squid \\</span><br><span class=\"line\">  sameersbn/squid:3.5.27-2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.docker-compose.yml 方式</span></span><br><span class=\"line\">Squid:</span><br><span class=\"line\">  image: sameersbn/squid:3.5.27-2</span><br><span class=\"line\">  ports:</span><br><span class=\"line\">    - <span class=\"string\">\"3128:3128\"</span></span><br><span class=\"line\">  volumes:</span><br><span class=\"line\">    - /srv/docker/squid/cache:/var/spool/squid</span><br><span class=\"line\">  restart: always</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.有代理验证启动(推荐更安全)</span></span><br><span class=\"line\">htpasswd -c /etc/squid/passwd weiyigeek</span><br><span class=\"line\">  <span class=\"comment\"># weiyigeek:$apr1$WJnE/R0y$oFBKE6Ir.V5ZAEeH0JK8c.</span></span><br><span class=\"line\"></span><br><span class=\"line\">tee /etc/squid/squid.conf &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\"><span class=\"comment\"># 常规设置</span></span><br><span class=\"line\">http_port 3128</span><br><span class=\"line\">debug_options ALL,1</span><br><span class=\"line\">hosts_file /etc/hosts</span><br><span class=\"line\">coredump_dir /var/spool/squid</span><br><span class=\"line\">access_log /var/<span class=\"built_in\">log</span>/squid/access.log squid</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 内部网络</span></span><br><span class=\"line\">acl localnet src 10.0.0.0/8 <span class=\"comment\"># RFC1918 possible internal network</span></span><br><span class=\"line\">acl localnet src 172.16.0.0/12 <span class=\"comment\"># RFC1918 possible internal network</span></span><br><span class=\"line\">acl localnet src 192.168.0.0/16 <span class=\"comment\"># RFC1918 possible internal network</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 允许所有</span></span><br><span class=\"line\">acl all src all</span><br><span class=\"line\">acl manager proto cache_object</span><br><span class=\"line\">acl localhost src 127.0.0.1/32</span><br><span class=\"line\">acl to_localhost dst 127.0.0.0/8 0.0.0.0/32</span><br><span class=\"line\">http_access allow localnet</span><br><span class=\"line\">http_access allow localhost</span><br><span class=\"line\">http_access deny all</span><br><span class=\"line\">http_access allow all</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启用PROXY用户验证 (可选)</span></span><br><span class=\"line\">auth_param basic program /usr/lib/squid/basic_ncsa_auth /etc/squid/passwd</span><br><span class=\"line\">acl auth_user proxy_auth REQUIRED</span><br><span class=\"line\">http_access allow auth_user</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 允许客户端IP范围 (可选)</span></span><br><span class=\"line\"><span class=\"comment\"># acl client src 10.0.0.0/8</span></span><br><span class=\"line\"><span class=\"comment\"># http_access allow client</span></span><br><span class=\"line\"><span class=\"comment\"># http_access deny all</span></span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">docker run --name squid -d --restart=always \\</span><br><span class=\"line\">  --publish 3128:3128 \\</span><br><span class=\"line\">  --volume /etc/squid/squid.conf:/etc/squid/squid.conf \\</span><br><span class=\"line\">  --volume /etc/squid/passwd:/etc/squid/passwd \\</span><br><span class=\"line\">  --volume /srv/docker/squid/cache:/var/spool/squid \\</span><br><span class=\"line\">  sameersbn/squid:3.5.27-2</span><br></pre></td></tr></table></figure></p>\n<p>温馨提示: 要在正在运行的实例上重新加载 Squid 配置，您可以将 HUP 信号发送到容器。<br>温馨提示: 扩展补充 squid 服务企业内部实践配置 <code>squid.conf</code>。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ egrep -v <span class=\"string\">\"^#|^$\"</span> tar/squid.conf  | more</span><br><span class=\"line\">acl all src all</span><br><span class=\"line\">acl SSL_ports port 443</span><br><span class=\"line\">acl Safe_ports port 80\t\t<span class=\"comment\"># http</span></span><br><span class=\"line\">acl Safe_ports port 21\t\t<span class=\"comment\"># ftp</span></span><br><span class=\"line\">acl Safe_ports port 443\t\t<span class=\"comment\"># https</span></span><br><span class=\"line\">acl Safe_ports port 70\t\t<span class=\"comment\"># gopher</span></span><br><span class=\"line\">acl Safe_ports port 210\t\t<span class=\"comment\"># wais</span></span><br><span class=\"line\">acl Safe_ports port 1025-65535\t<span class=\"comment\"># unregistered ports</span></span><br><span class=\"line\">acl Safe_ports port 280\t\t<span class=\"comment\"># http-mgmt</span></span><br><span class=\"line\">acl Safe_ports port 488\t\t<span class=\"comment\"># gss-http</span></span><br><span class=\"line\">acl Safe_ports port 591\t\t<span class=\"comment\"># filemaker</span></span><br><span class=\"line\">acl Safe_ports port 777\t\t<span class=\"comment\"># multiling http</span></span><br><span class=\"line\">acl CONNECT method CONNECT</span><br><span class=\"line\">http_access deny !Safe_ports</span><br><span class=\"line\">http_access deny CONNECT !SSL_ports</span><br><span class=\"line\">http_access allow localhost manager</span><br><span class=\"line\">http_access deny manager</span><br><span class=\"line\">http_access allow localhost</span><br><span class=\"line\">http_access allow all</span><br><span class=\"line\">http_port 3128</span><br><span class=\"line\">coredump_dir /var/spool/squid</span><br><span class=\"line\">refresh_pattern ^ftp:\t\t1440\t20%\t10080</span><br><span class=\"line\">refresh_pattern ^gopher:\t1440\t0%\t1440</span><br><span class=\"line\">refresh_pattern -i (/cgi-bin/|\\?) 0\t0%\t0</span><br><span class=\"line\">refresh_pattern (Release|Packages(.gz)*)$      0       20%     2880</span><br><span class=\"line\">refresh_pattern .\t\t0\t20%\t4320</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p><strong>快速使用</strong><br>描述: 配置您的 Web 浏览器网络/连接设置以使用 172.17.0.1:3128 上的代理服务器, 或者在你linux命令行或Dockerfile可进行如下配置。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># .bashrc</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> ftp_proxy=http://172.17.0.1:3128</span><br><span class=\"line\"><span class=\"built_in\">export</span> http_proxy=http://172.17.0.1:3128</span><br><span class=\"line\"><span class=\"built_in\">export</span> https_proxy=http://172.17.0.1:3128</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Dockerfile</span></span><br><span class=\"line\">ENV http_proxy=http://172.17.0.1:3128 \\</span><br><span class=\"line\">    https_proxy=http://172.17.0.1:3128 \\</span><br><span class=\"line\">    ftp_proxy=http://172.17.0.1:3128</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 有认证的 代理地址</span></span><br><span class=\"line\">http://&#123;your-username&#125;:&#123;your-password&#125;@&#123;your-ip OR domain-name&#125;:3128</span><br><span class=\"line\">http://weiyigeek:password@proxy.weiyigeek.top:3128</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h2 id=\"Docker-快速部署-Jenkins-自动集成与交互平台\"><a href=\"#Docker-快速部署-Jenkins-自动集成与交互平台\" class=\"headerlink\" title=\"Docker 快速部署 Jenkins 自动集成与交互平台\"></a>Docker 快速部署 Jenkins 自动集成与交互平台</h2><p>描述: 此处采用<code>docker-compose</code>方式进行部署Jenkins，其部署的资源清单如下，当前2022年7月13日 11:59:38节点最新版本为2.60.3。</p>\n<p>步骤 01.安装部署与初始化操作，带ssl证书访问。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 资源清单</span></span><br><span class=\"line\">tee docker-compose.yml &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\"><span class=\"comment\"># Docker deploy Jenkins Server</span></span><br><span class=\"line\">version: <span class=\"string\">'3.2'</span></span><br><span class=\"line\">services:</span><br><span class=\"line\">  jenkins:</span><br><span class=\"line\">    image: jenkins/jenkins:2.60.3-alpine</span><br><span class=\"line\">    container_name: jenkins_server</span><br><span class=\"line\">    user: jenkins</span><br><span class=\"line\">    labels:</span><br><span class=\"line\">      - <span class=\"string\">\"app=jenkins\"</span></span><br><span class=\"line\">      - <span class=\"string\">\"author=WeiyiGeek\"</span></span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      TZ: <span class=\"string\">\"Asia/Shanghai\"</span></span><br><span class=\"line\">      JAVA_OPTS: <span class=\"string\">\"-XshowSettings:vm -Dhudson.slaves.NodeProvisioner.initialDelay=0 -Dhudson.slaves.NodeProvisioner.MARGIN=50 -Dhudson.slaves.NodeProvisioner.MARGIN0=0.85 -Duser.timezone=Asia/Shanghai -Dhudson.footerURL=https://www.weiyigeek.top -Dfile.encoding=UTF-8\"</span></span><br><span class=\"line\">      JENKINS_OPTS: <span class=\"string\">\"--httpPort=8080 --httpsPort=8443 --httpsCertificate=/var/lib/jenkins/pki/weiyigeek.top.pem --httpsPrivateKey=/var/lib/jenkins/pki/weiyigeek.top.key\"</span></span><br><span class=\"line\">      JENKINS_SLAVE_AGENT_PORT: 50000</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - /storage/nfs/docker/jenkins/data:/var/jenkins_home</span><br><span class=\"line\">      - /opt/jenkins/cert:/var/lib/jenkins/pki</span><br><span class=\"line\">      - /etc/localtime:/etc/localtime</span><br><span class=\"line\">    extra_hosts:</span><br><span class=\"line\">      - <span class=\"string\">\"slb-vip.k8s:192.168.12.110\"</span></span><br><span class=\"line\">      - <span class=\"string\">\"slbvip.k8s.devtest:10.20.176.211\"</span></span><br><span class=\"line\">      - <span class=\"string\">\"jenkins.weiyigeek.top:127.0.0.1\"</span></span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - <span class=\"string\">'8080:8080'</span></span><br><span class=\"line\">      - <span class=\"string\">'8443:8443'</span></span><br><span class=\"line\">      - <span class=\"string\">'50000:50000'</span></span><br><span class=\"line\">    healthcheck:</span><br><span class=\"line\">      <span class=\"built_in\">test</span>: [<span class=\"string\">\"CMD\"</span>, <span class=\"string\">\"curl\"</span>, <span class=\"string\">\"-f\"</span>, <span class=\"string\">\"http://localhost:8080/login\"</span>]</span><br><span class=\"line\">      interval: 2m30s</span><br><span class=\"line\">      timeout: 10s</span><br><span class=\"line\">      retries: 3</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    dns:</span><br><span class=\"line\">      - 223.6.6.6</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 目录权限</span></span><br><span class=\"line\">chown -R 1000:1000 /storage/nfs/docker/jenkins/data /opt/jenkins/cert</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 运行</span></span><br><span class=\"line\">docker-compose up -d</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取初始化密码</span></span><br><span class=\"line\">docker logs -f --tail 50 jenkins_server</span><br><span class=\"line\"><span class=\"comment\"># Jenkins initial setup is required. An admin user has been created and a password generated.</span></span><br><span class=\"line\"><span class=\"comment\"># Please use the following password to proceed to installation:</span></span><br><span class=\"line\"><span class=\"comment\"># 48bd96655888485fb8bece064a6657bf</span></span><br></pre></td></tr></table></figure></p>\n<p>温馨提示：最后设置 hosts 硬解析后访问类似 <code>https://jenkins.weiyigeek.top:8443/login?from=%2F</code> 地址进行 jenkins 初始化。</p>\n<p>温馨提示: 此处笔者采用的通配符证书（weiyigeek.top.pem 、 weiyigeek.top.key）分别使用 <code>--httpsCertificate</code> 和 <code>--httpsPrivateKey</code> 进行指定。</p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"部署运维","path":"api/categories/部署运维.json"},{"name":"环境快速搭建","path":"api/categories/环境快速搭建.json"}],"tags":[{"name":"docker","path":"api/tags/docker.json"}]}