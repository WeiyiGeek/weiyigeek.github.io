{"title":"Podman容器管理命令一览","slug":"虚拟云容/云容器/Podman/n.Podman容器管理命令一览","date":"2020-05-08T06:36:30.000Z","updated":"2022-03-18T14:46:35.780Z","url":"2020/5-8-479.html","path":"api/articles/2020/5-8-479.html.json","covers":null,"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h2 id=\"0x02-podman-命令-容器管理常用命令\"><a href=\"#0x02-podman-命令-容器管理常用命令\" class=\"headerlink\" title=\"0x02 podman 命令 - 容器管理常用命令\"></a>0x02 podman 命令 - 容器管理常用命令</h2><h3 id=\"镜像容器信息流程\"><a href=\"#镜像容器信息流程\" class=\"headerlink\" title=\"镜像容器信息流程\"></a>镜像容器信息流程</h3><h4 id=\"ps-子命令-列表容器\"><a href=\"#ps-子命令-列表容器\" class=\"headerlink\" title=\"ps 子命令 - 列表容器\"></a>ps 子命令 - 列表容器</h4><p>描述:打印出关于容器的信息</p>\n<p>语法参数<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Usage:</span><br><span class=\"line\">  podman ps [flags]</span><br><span class=\"line\"></span><br><span class=\"line\">Flags:</span><br><span class=\"line\">  -a, --all              Show all the containers, default is only running containers</span><br><span class=\"line\">  -f, --filter strings   Filter output based on conditions given</span><br><span class=\"line\">      --format string    Pretty-print containers to JSON or using a Go template</span><br><span class=\"line\">  -n, --last int         Print the n last created containers (all states) (default -1)</span><br><span class=\"line\">  -l, --latest           Act on the latest container podman is aware of</span><br><span class=\"line\">                         Not supported with the <span class=\"string\">\"--remote\"</span> flag</span><br><span class=\"line\">      --no-trunc         Display the extended information</span><br><span class=\"line\">      --ns               Display namespace information</span><br><span class=\"line\">  -p, --pod              Print the ID and name of the pod the containers are associated with</span><br><span class=\"line\">  -q, --quiet            Print the numeric IDs of the containers only</span><br><span class=\"line\">  -s, --size             Display the total file sizes</span><br><span class=\"line\">      --sort choice      Sort output by: <span class=\"built_in\">command</span>, created, id, image, names, runningfor, size, status</span><br><span class=\"line\">      --sync             Sync container state with OCI runtime</span><br><span class=\"line\">  -w, --watch uint       Watch the ps output on an interval <span class=\"keyword\">in</span> seconds</span><br></pre></td></tr></table></figure></p>\n<p>Examples:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.显示所有容器信息并显示容器所属的pod id</span></span><br><span class=\"line\">podman ps -ap</span><br><span class=\"line\"><span class=\"comment\"># CONTAINER ID  IMAGE                                 COMMAND  CREATED       STATUS                   PORTS   NAMES               POD ID        PODNAME</span></span><br><span class=\"line\"><span class=\"comment\"># 15e7d3797552  docker.io/mirrorgcrio/pause:3.2                25 hours ago  Up 25 hours ago                  73c5a062cb17-infra  73c5a062cb17  HelloWorld</span></span><br><span class=\"line\"><span class=\"comment\"># 2fd059b66fb6  docker.io/library/hello-world:latest  /hello   25 hours ago  Exited (0) 25 hours ago          friendly_neumann    73c5a062cb17  HelloWorld</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.显示容器信息中指定的列</span></span><br><span class=\"line\">podman ps -ap --format <span class=\"string\">\"&#123;&#123;.ID&#125;&#125;  &#123;&#123;.Image&#125;&#125;  &#123;&#123;.Labels&#125;&#125;  &#123;&#123;.Mounts&#125;&#125; &#123;&#123;.PodName&#125;&#125;\"</span></span><br><span class=\"line\"><span class=\"comment\"># 15e7d3797552  docker.io/mirrorgcrio/pause:3.2  map[]  [] HelloWorld</span></span><br><span class=\"line\"><span class=\"comment\"># 2fd059b66fb6  docker.io/library/hello-world:latest  map[]  [] HelloWorld</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.显示文件的总大小并根据名称进行排序</span></span><br><span class=\"line\">podman ps --size --sort names</span><br><span class=\"line\"><span class=\"comment\"># CONTAINER ID  IMAGE                            COMMAND  CREATED       STATUS           PORTS   NAMES               SIZE</span></span><br><span class=\"line\"><span class=\"comment\"># 15e7d3797552  docker.io/mirrorgcrio/pause:3.2           25 hours ago  Up 25 hours ago          73c5a062cb17-infra  0B (virtual 683kB)</span></span><br></pre></td></tr></table></figure></p>\n<hr>\n<h4 id=\"top-子命令-显示容器正在运行的进程\"><a href=\"#top-子命令-显示容器正在运行的进程\" class=\"headerlink\" title=\"top 子命令 - 显示容器正在运行的进程\"></a>top 子命令 - 显示容器正在运行的进程</h4><p>描述:</p>\n<p>基础语法:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">podman top [options] container [format-descriptors]</span><br><span class=\"line\">podman container top [options] container [format-descriptors]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 参数</span></span><br><span class=\"line\">--latest, -l   <span class=\"comment\"># 显示通过Podman或以外的方式CRI-O运行容器 (The latest option is not supported on the remote client).</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># FORMAT DESCRIPTORS</span></span><br><span class=\"line\">args, capbnd, capeff, capinh, capprm, comm, etime, group, hgroup, hpid, huser, label, nice, pcpu, pgid,pid, ppid, rgroup, ruser, seccomp, state, time, tty, user, vsz</span><br><span class=\"line\"></span><br><span class=\"line\">capbn:<span class=\"comment\">#Set of bounding capabilities. See capabilities (7) for more information.</span></span><br><span class=\"line\">capeff:<span class=\"comment\">#Set of effective capabilities. See capabilities (7) for more information.</span></span><br><span class=\"line\">capinh:<span class=\"comment\">#Set of inheritable capabilities. See capabilities (7) for more information.</span></span><br><span class=\"line\">capprm:<span class=\"comment\">#Set of permitted capabilities. See capabilities (7) for more information.</span></span><br><span class=\"line\">hgroup:<span class=\"comment\">#The corresponding effective group of a container process on the host.</span></span><br><span class=\"line\">hpid:<span class=\"comment\">#The corresponding host PID of a container process.</span></span><br><span class=\"line\">huser:<span class=\"comment\">#The corresponding effective user of a container process on the host.</span></span><br><span class=\"line\">label:<span class=\"comment\">#Current security attributes of the process.</span></span><br><span class=\"line\">seccomp:<span class=\"comment\">#Seccomp mode of the process (i.e., disabled, strict or filter). See seccomp (2) for more information.</span></span><br><span class=\"line\">state:<span class=\"comment\">#Process state codes (e.g, R for running, S for sleeping). See proc(5) for more information.</span></span><br><span class=\"line\">stime:<span class=\"comment\">#Process start time (e.g, \"2019-12-09 10:50:36 +0100 CET).</span></span><br></pre></td></tr></table></figure></p>\n<p>基础实例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.默认情况下，podman-top打印的数据类似ps -ef:</span></span><br><span class=\"line\">$ sudo podman top 15e7d3797552</span><br><span class=\"line\">  <span class=\"comment\"># USER   PID   PPID   %CPU    ELAPSED               TTY   TIME   COMMAND</span></span><br><span class=\"line\">  <span class=\"comment\"># 0      1     0      0.000   46h15m55.488413816s   ?     0s     /pause</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.可以通过在容器后面指定格式描述符作为参数来控制输出:</span></span><br><span class=\"line\">$ podman top -l pid seccomp args %C</span><br><span class=\"line\">  <span class=\"comment\"># PID   SECCOMP   COMMAND     %CPU</span></span><br><span class=\"line\">  <span class=\"comment\"># 1     filter    sh          0.000</span></span><br><span class=\"line\">  <span class=\"comment\"># 8     filter    vi /etc/    0.000</span></span><br><span class=\"line\">$ podman top -l pid seccomp state args %C</span><br><span class=\"line\">  <span class=\"comment\"># PID   SECCOMP   STATE   COMMAND                                       %CPU</span></span><br><span class=\"line\">  <span class=\"comment\"># 1     filter    S       nginx: master process nginx -g daemon off;    0.000</span></span><br><span class=\"line\">  <span class=\"comment\"># 30    filter    S       nginx: worker process                         0.000</span></span><br><span class=\"line\">  <span class=\"comment\"># 31    filter    S       nginx: worker process                         0.000</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.如果指定了未知的描述符，Podman将退回到在容器中执行ps(1)。</span></span><br><span class=\"line\">$ podman top -l -- aux</span><br><span class=\"line\">  USER   PID   PPID   %CPU    ELAPSED             TTY   TIME   COMMAND</span><br><span class=\"line\">  root   1     0      0.000   1h2m12.497061672s   ?     0s     sleep 100000</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h4 id=\"status-子命令-查看运行中容器资源使用情况\"><a href=\"#status-子命令-查看运行中容器资源使用情况\" class=\"headerlink\" title=\"status 子命令 - 查看运行中容器资源使用情况\"></a>status 子命令 - 查看运行中容器资源使用情况</h4><p>基础演示:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$podman</span>  stats nginx</span><br><span class=\"line\">ID             NAME    CPU %   MEM USAGE / LIMIT   MEM %   NET IO           BLOCK IO   PIDS</span><br><span class=\"line\">19f105d5dc1e   nginx   --      2.036MB / 1.893GB   0.11%   978B / 10.55kB   -- / --    2</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h4 id=\"log-子命令-查看容器运行的日志\"><a href=\"#log-子命令-查看容器运行的日志\" class=\"headerlink\" title=\"log 子命令 - 查看容器运行的日志\"></a>log 子命令 - 查看容器运行的日志</h4><p>基础演示:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">podman logs nginx</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h4 id=\"inspect-子命令-镜像Image-Layer信息\"><a href=\"#inspect-子命令-镜像Image-Layer信息\" class=\"headerlink\" title=\"inspect 子命令 - 镜像Image Layer信息\"></a>inspect 子命令 - 镜像Image Layer信息</h4><p>基础案例演示:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ podman inspect nginx  | grep -i <span class=\"string\">\"ipaddress\"</span></span><br><span class=\"line\">  <span class=\"string\">\"SecondaryIPAddresses\"</span>: null,</span><br><span class=\"line\">  <span class=\"string\">\"IPAddress\"</span>: <span class=\"string\">\"10.88.0.110\"</span>,</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h3 id=\"2-容器操作管理\"><a href=\"#2-容器操作管理\" class=\"headerlink\" title=\"2.容器操作管理\"></a>2.容器操作管理</h3><h4 id=\"pod-子命令-管理容器组的工具称为pods\"><a href=\"#pod-子命令-管理容器组的工具称为pods\" class=\"headerlink\" title=\"pod 子命令 - 管理容器组的工具称为pods\"></a>pod 子命令 - 管理容器组的工具称为pods</h4><p>描述:podman pod是一组管理pod或容器组的子命令。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># SYNOPSIS(n. 概要，大纲)</span></span><br><span class=\"line\">podman pod subcommand</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># SUBCOMMANDS</span></span><br><span class=\"line\">┌────────┬───────────────────────┬─────────────────────────────┐</span><br><span class=\"line\">│Command │ Man Page              │ Description                 │</span><br><span class=\"line\">├────────┼───────────────────────┼─────────────────────────────┤</span><br><span class=\"line\">│create  │ podman-pod-create(1)  │ Create a new pod.           │</span><br><span class=\"line\">├────────┼───────────────────────┼─────────────────────────────┤</span><br><span class=\"line\">│exists  │ podman-pod-exists(1)  │ Check <span class=\"keyword\">if</span> a pod exists <span class=\"keyword\">in</span> <span class=\"built_in\">local</span> storage.  │</span><br><span class=\"line\">├────────┼───────────────────────┼─────────────────────────────┤</span><br><span class=\"line\">│inspect │ podman-pod-inspect(1) │ Displays information   describing a pod. │</span><br><span class=\"line\">├────────┼───────────────────────┼─────────────────────────────┤</span><br><span class=\"line\">│<span class=\"built_in\">kill</span>    │ podman-pod-kill(1)    │ Kill the main process of each container <span class=\"keyword\">in</span> one or more pods.  │</span><br><span class=\"line\">├────────┼───────────────────────┼─────────────────────────────┤</span><br><span class=\"line\">│pause   │ podman-pod-pause(1)   │ Pause one or more pods.     │</span><br><span class=\"line\">├────────┼───────────────────────┼─────────────────────────────┤</span><br><span class=\"line\">│prune   │ podman-pod-prune(1)   │ Remove all stopped pods and their containers.  │</span><br><span class=\"line\">├────────┼───────────────────────┼─────────────────────────────┤</span><br><span class=\"line\">│ps      │ podman-pod-ps(1)      │ Prints out information about pods.  │</span><br><span class=\"line\">├────────┼───────────────────────┼─────────────────────────────┤</span><br><span class=\"line\">│restart │ podman-pod-restart(1) │ Restart one or more pods.   │</span><br><span class=\"line\">├────────┼───────────────────────┼─────────────────────────────┤</span><br><span class=\"line\">│rm      │ podman-pod-rm(1)      │ Remove one or more stopped  pods and containers.        │</span><br><span class=\"line\">├────────┼───────────────────────┼─────────────────────────────┤</span><br><span class=\"line\">│start   │ podman-pod-start(1)   │ Start one or more pods.     │</span><br><span class=\"line\">├────────┼───────────────────────┼─────────────────────────────┤</span><br><span class=\"line\">│stats   │ podman-pod-stats(1)   │ Display a live stream of resource usage stats <span class=\"keyword\">for</span> containers <span class=\"keyword\">in</span> one or more pods. │</span><br><span class=\"line\">├────────┼───────────────────────┼─────────────────────────────┤</span><br><span class=\"line\">│stop    │ podman-pod-stop(1)    │ Stop one or more pods.      │</span><br><span class=\"line\">├────────┼───────────────────────┼─────────────────────────────┤</span><br><span class=\"line\">│top     │ podman-pod-top(1)     │ Display the running processes of containers <span class=\"keyword\">in</span> a pod.  │</span><br><span class=\"line\">├────────┼───────────────────────┼─────────────────────────────┤</span><br><span class=\"line\">│unpause │ podman-pod-unpause(1) │ Unpause one or more pods.   │</span><br><span class=\"line\">└────────┴───────────────────────┴─────────────────────────────</span><br></pre></td></tr></table></figure>\n<p>基础实例:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建名称为 HugoBlog 的 pod</span></span><br><span class=\"line\">podman pod create --name HugoBlog</span><br><span class=\"line\">  <span class=\"comment\"># 63cb481fd2fd6a02d97355d8f950e765e06654c3b3a25111bc4431320fae897e</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 列出当前pod信息</span></span><br><span class=\"line\">podman pod ps </span><br><span class=\"line\">podman pod list</span><br><span class=\"line\">  <span class=\"comment\"># POD ID        NAME        STATUS   CREATED         # OF CONTAINERS  INFRA ID</span></span><br><span class=\"line\">  <span class=\"comment\"># 63cb481fd2fd  HugoBlog    Running  40 minutes ago  2                6b317ba47f5b</span></span><br><span class=\"line\">  <span class=\"comment\"># 73c5a062cb17  HelloWorld  Running  47 hours ago    2                15e7d3797552</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 列出指定pod中容器信息</span></span><br><span class=\"line\">podman pod top 73c5a062cb17</span><br><span class=\"line\">  <span class=\"comment\"># USER   PID   PPID   %CPU    ELAPSED               TTY   TIME   COMMAND</span></span><br><span class=\"line\">  <span class=\"comment\"># 0      1     0      0.000   47h27m58.166822731s   ?     0s     /pause</span></span><br><span class=\"line\">podman pod top HugoBlog</span><br><span class=\"line\">  <span class=\"comment\"># USER    PID   PPID   %CPU    ELAPSED            TTY   TIME   COMMAND</span></span><br><span class=\"line\">  <span class=\"comment\"># 0       1     0      0.000   41m43.871974181s   ?     0s     /pause</span></span><br><span class=\"line\">  <span class=\"comment\"># root    1     0      0.000   41m43.872432777s   ?     0s     nginx: master process nginx -g daemon off;</span></span><br><span class=\"line\">  <span class=\"comment\"># nginx   30    1      0.000   41m43.872491657s   ?     0s     nginx: worker process</span></span><br><span class=\"line\">  <span class=\"comment\"># nginx   31    1      0.000   41m43.87252457s    ?     0s     nginx: worker process</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 停止指定pod或者所有pod(其中的容器也随之停止)</span></span><br><span class=\"line\">podman pod stop HelloWorld</span><br><span class=\"line\">  <span class=\"comment\"># 73c5a062cb17b5088072ec13c496c101b0b239f9aba1dcad93ba5d746cdfb12d</span></span><br><span class=\"line\">podman pod stop $(podman pod ps -q)</span><br><span class=\"line\">  <span class=\"comment\"># 63cb481fd2fd6a02d97355d8f950e765e06654c3b3a25111bc4431320fae897e</span></span><br><span class=\"line\">  <span class=\"comment\"># 73c5a062cb17b5088072ec13c496c101b0b239f9aba1dcad93ba5d746cdfb12d</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除指定Pod或者删除所有已经停止的pod</span></span><br><span class=\"line\">podman pod rm -f HugoBlog</span><br><span class=\"line\">podman pod rm $(podman pod ps -q)</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h4 id=\"run-子命令-容器运行与构建\"><a href=\"#run-子命令-容器运行与构建\" class=\"headerlink\" title=\"run 子命令 - 容器运行与构建\"></a>run 子命令 - 容器运行与构建</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在指定pod中运行容器</span></span><br><span class=\"line\">podman run -d --pod HugoBlog nginx:alpine</span><br><span class=\"line\">Trying to pull docker.io/library/nginx:alpine...</span><br><span class=\"line\">Getting image <span class=\"built_in\">source</span> signatures</span><br><span class=\"line\">Copying blob f682f0660e7a <span class=\"keyword\">done</span></span><br><span class=\"line\">...</span><br><span class=\"line\">Copying config 6f715d38cf <span class=\"keyword\">done</span></span><br><span class=\"line\">Writing manifest to image destination</span><br><span class=\"line\">Storing signatures</span><br><span class=\"line\">e2a645aa73da2bf98c8e7598a4a1368f92959d18f60b8500c1af70132fb778ed</span><br></pre></td></tr></table></figure>\n<p>将 pod 导出为声明式部署清单：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">podman generate kube HugoBlog &gt; HugoBlog.yaml</span><br></pre></td></tr></table></figure></p>\n<p>通过部署清单创建 pod：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">podman play kube hugo.yaml</span><br></pre></td></tr></table></figure></p>\n<p>cat HugoBlog.yaml<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Generation of Kubernetes YAML is still under development!</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Save the output of this file and use kubectl create -f to import</span></span><br><span class=\"line\"><span class=\"comment\"># it into Kubernetes.</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\"># Created with podman-2.0.6</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Pod</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  creationTimestamp:</span> <span class=\"string\">\"2020-09-23T04:31:52Z\"</span></span><br><span class=\"line\"><span class=\"attr\">  labels:</span></span><br><span class=\"line\"><span class=\"attr\">    app:</span> <span class=\"string\">HugoBlog</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">HugoBlog</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  containers:</span></span><br><span class=\"line\"><span class=\"attr\">  - command:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">nginx</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"bullet\">-g</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">daemon</span> <span class=\"string\">off;</span></span><br><span class=\"line\"><span class=\"attr\">    env:</span></span><br><span class=\"line\"><span class=\"attr\">    - name:</span> <span class=\"string\">PATH</span></span><br><span class=\"line\"><span class=\"attr\">      value:</span> <span class=\"string\">/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span></span><br><span class=\"line\"><span class=\"attr\">    - name:</span> <span class=\"string\">TERM</span></span><br><span class=\"line\"><span class=\"attr\">      value:</span> <span class=\"string\">xterm</span></span><br><span class=\"line\"><span class=\"attr\">    - name:</span> <span class=\"string\">NGINX_VERSION</span></span><br><span class=\"line\"><span class=\"attr\">      value:</span> <span class=\"number\">1.19</span><span class=\"number\">.2</span></span><br><span class=\"line\"><span class=\"attr\">    - name:</span> <span class=\"string\">NJS_VERSION</span></span><br><span class=\"line\"><span class=\"attr\">      value:</span> <span class=\"number\">0.4</span><span class=\"number\">.3</span></span><br><span class=\"line\"><span class=\"attr\">    - name:</span> <span class=\"string\">PKG_RELEASE</span></span><br><span class=\"line\"><span class=\"attr\">      value:</span> <span class=\"string\">\"1\"</span></span><br><span class=\"line\"><span class=\"attr\">    - name:</span> <span class=\"string\">container</span></span><br><span class=\"line\"><span class=\"attr\">      value:</span> <span class=\"string\">podman</span></span><br><span class=\"line\"><span class=\"attr\">    - name:</span> <span class=\"string\">HOSTNAME</span></span><br><span class=\"line\"><span class=\"attr\">      value:</span> <span class=\"string\">HugoBlog</span></span><br><span class=\"line\"><span class=\"attr\">    image:</span> <span class=\"string\">docker.io/library/nginx:alpine</span></span><br><span class=\"line\"><span class=\"attr\">    name:</span> <span class=\"string\">inspiringkare</span></span><br><span class=\"line\"><span class=\"attr\">    resources:</span> <span class=\"string\">&#123;&#125;</span></span><br><span class=\"line\"><span class=\"attr\">    securityContext:</span></span><br><span class=\"line\"><span class=\"attr\">      allowPrivilegeEscalation:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">      capabilities:</span> <span class=\"string\">&#123;&#125;</span></span><br><span class=\"line\"><span class=\"attr\">      privileged:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">      readOnlyRootFilesystem:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">      seLinuxOptions:</span> <span class=\"string\">&#123;&#125;</span></span><br><span class=\"line\"><span class=\"attr\">    workingDir:</span> <span class=\"string\">/</span></span><br><span class=\"line\"><span class=\"attr\">status:</span> <span class=\"string\">&#123;&#125;</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  creationTimestamp:</span> <span class=\"literal\">null</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span> <span class=\"string\">&#123;&#125;</span></span><br><span class=\"line\"><span class=\"attr\">status:</span></span><br><span class=\"line\"><span class=\"attr\">  loadBalancer:</span> <span class=\"string\">&#123;&#125;</span></span><br></pre></td></tr></table></figure></p>\n<p>这是一个兼容 kubernetes 的 pod 定义，你可以直接通过 kubectl apply -f hugo.yaml 将其部署在 Kubernetes 集群中，也可以直接通过 podman 部署</p>\n<p>如果通过声明式定义来创建 pod，还是无法解决服务发现的问题，除非换个支持静态 IP 的 CNI 插件，而支持静态 IP 的这些 CNI 插件又需要 etcd 作为数据库，我就这么点资源，可不想再加个 etcd，还是手撸命令行吧。</p>\n<p><br></p>\n<h4 id=\"container-子命令-容器相关操作以及备份导出\"><a href=\"#container-子命令-容器相关操作以及备份导出\" class=\"headerlink\" title=\"container 子命令 - 容器相关操作以及备份导出\"></a>container 子命令 - 容器相关操作以及备份导出</h4><p>基础演示:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Podman 支持将容器从一台机器迁移到另一台机器。</span><br><span class=\"line\"><span class=\"comment\"># 在源机器上对容器设置检查点并将容器打包到指定位置。</span></span><br><span class=\"line\">$ sudo podman container checkpoint &lt;container_id&gt; -e /tmp/checkpoint.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在目标机器上使用源机器上传输过来的打包文件对容器进行恢复。</span></span><br><span class=\"line\">$ sudo podman container restore -i /tmp/checkpoint.tar.gz</span><br></pre></td></tr></table></figure></p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Containers","path":"api/categories/Containers.json"},{"name":"OperationTools","path":"api/categories/OperationTools.json"}],"tags":[{"name":"Podman","path":"api/tags/Podman.json"}]}