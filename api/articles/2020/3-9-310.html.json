{"title":"Listener与Filter监听器基础使用","slug":"编程世界/JavaWeb/4.DevlopmentModel/Listener与Filter监听器基础使用","date":"2020-03-09T00:34:30.000Z","updated":"2023-01-31T02:29:10.672Z","url":"2020/3-9-310.html","path":"api/articles/2020/3-9-310.html.json","covers":["https://img.weiyigeek.top/2020/1/20200417124512.png","https://img.weiyigeek.top/2020/1/20200417172135.png","https://img.weiyigeek.top/2020/1/20200417205216.png","https://img.weiyigeek.top/2020/1/20200417211239.png","https://img.weiyigeek.top/2020/1/20200421125241.png","https://img.weiyigeek.top/2020/1/20200421165204.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h4 id=\"1-Listener\"><a href=\"#1-Listener\" class=\"headerlink\" title=\"1.Listener\"></a>1.Listener</h4><h5 id=\"1-基础介绍\"><a href=\"#1-基础介绍\" class=\"headerlink\" title=\"1) 基础介绍\"></a>1) 基础介绍</h5><p><em>Q:Listener是什么?有什么用？</em><br>答:Listener监听器，用于监听某一个事件的发生。</p>\n<p><em>Q:监听器的内部机制是什么?</em><br>答:实就是接口回调，<code>事件源-&gt;监听器</code>;</p>\n<p>需求:&gt; A在执行循环当循环到5的时候通知B进行执行</p>\n<blockquote>\n<p>事先先把一个对象传递给 A ，当A 执行到5的时候通过这个对象来调用B中的方法；但是注意不是直接传递B的实例，而是传递一个接口的实例过去。</p>\n</blockquote>\n<p>基础实例(<code>监听器内部机制</code>):</p>\n<blockquote>\n<p>A 和 B 两者中间接住去联系上，所以一开始在执行A的Print方法，先把一个接口的实现类传递给A，然后A在根据这个对象调用B的方法;<br>这样处理的好处在定义该方法的时候，不用考虑以后开发B类或者C类还是D类，只要预定义一种接口，并且方未来缩写的那些类实现这个借口，然后这个方法参数写接口类型即可;</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**A.java</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@desc</span> A类入口Test传入接口方法，假设也是2018缩写</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> WeiyiGeek</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Test</span><span class=\"params\">(MessageListener msg)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">           System.out.println(<span class=\"string\">\"2018年A方法，当前Index:\"</span>+i);</span><br><span class=\"line\">           <span class=\"keyword\">if</span>( i == <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">               System.out.println(<span class=\"string\">\"2018年A方法，已经到\"</span>+i+<span class=\"string\">\"正在通知B进行方法执行!\"</span>);</span><br><span class=\"line\">               msg.print();</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* MessageListener.java</span></span><br><span class=\"line\"><span class=\"comment\"> * @Desc 监听器接口假设在2018所缩写</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">MessageListener</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* B.java</span></span><br><span class=\"line\"><span class=\"comment\"> * @Desc B类实现MessageListener监听器接口,2020年所写</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">B</span> <span class=\"keyword\">implements</span> <span class=\"title\">MessageListener</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"我是2020年B类方法我正在执行......\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//程序入口:/Web/src/top/weiyigeek/listener/Test.java</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">        A demo = <span class=\"keyword\">new</span> A();</span><br><span class=\"line\">        demo.Test(<span class=\"keyword\">new</span> B());  <span class=\"comment\">//多态的体现,此处将B实例类传递给Test方法中MessageListener接口参数，实际上是父类引用指向子类方法;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2018年A方法，当前Index:0</span><br><span class=\"line\">2018年A方法，当前Index:1</span><br><span class=\"line\">2018年A方法，当前Index:2</span><br><span class=\"line\">2018年A方法，当前Index:3</span><br><span class=\"line\">2018年A方法，当前Index:4</span><br><span class=\"line\">2018年A方法，当前Index:5</span><br><span class=\"line\">2018年A方法，已经到5正在通知B进行方法执行!</span><br><span class=\"line\">我是2020年B类方法我正在执行......</span><br><span class=\"line\">2018年A方法，当前Index:6</span><br><span class=\"line\">2018年A方法，当前Index:7</span><br><span class=\"line\">2018年A方法，当前Index:8</span><br><span class=\"line\">2018年A方法，当前Index:9</span><br><span class=\"line\">``` </span><br><span class=\"line\"></span><br><span class=\"line\">---</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##### 1) Listener分类</span></span><br><span class=\"line\">描述: Web 监听器之Listener监听器的分类，总共有8个划分成三种类型；</span><br><span class=\"line\">- (1) application(作用域) -&gt; ServletContext(类) -&gt; `监听器: ServletContextListener`</span><br><span class=\"line\">  - 该监听器作用:初始化项目加载基础资源，任务调度(`比如执行某一个定时任务Timer`)，以及开发者想完成自己初始化工作的方法</span><br><span class=\"line\">- (2) request -&gt; HttpServletRequest -&gt; `监听器: ServletRequestListener`</span><br><span class=\"line\">- (3) session -&gt; HttpSession -&gt; `监听器: HttpSessionListener`</span><br><span class=\"line\">   - 该监听器作用: 根据创建的session来统计在线人数;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;br&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">##### 2) 生命周期</span></span><br><span class=\"line\">_类型1.监听三个作用域创建和销毁说明_</span><br><span class=\"line\">```bash</span><br><span class=\"line\"><span class=\"comment\">#ServletContextListener 监听器生命周期</span></span><br><span class=\"line\"><span class=\"comment\">#context创建：启动服务器的时候；  </span></span><br><span class=\"line\">public void contextInitialized(ServletContextEvent sce) &#123;...&#125; </span><br><span class=\"line\"><span class=\"comment\">#context销毁：关闭服务器，从服务器移除项目；</span></span><br><span class=\"line\">public void contextDestroyed(ServletContextEvent sce) &#123;...&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#ServletRequestListener 监听器生命周期</span></span><br><span class=\"line\"><span class=\"comment\">#request创建:访问服务器上的任意资源都会有请求出现，触发情况访问 html、 jsp、 servlet进行触发;</span></span><br><span class=\"line\">public void requestInitialized(ServletRequestEvent sre) &#123;&#125; </span><br><span class=\"line\"><span class=\"comment\">#request销毁:服务器已经对这次请求作出了响应。 </span></span><br><span class=\"line\">public void requestDestroyed(ServletRequestEvent sre) &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#HttpSessionListener 监听器生命周期</span></span><br><span class=\"line\"><span class=\"comment\">#session创建:首次访问页面就就会调用getSession，但是需要注意可以触发的jsp / Servlet 而 html不会进行触发</span></span><br><span class=\"line\">public void sessionCreated(HttpSessionEvent se) &#123;&#125; </span><br><span class=\"line\">- html:不会 </span><br><span class=\"line\">- jsp:会 getSession();</span><br><span class=\"line\">- servlet:会</span><br><span class=\"line\"><span class=\"comment\">#session销毁，条件超时30分钟以及非正常关闭销毁</span></span><br><span class=\"line\">public void sessionDestroyed(HttpSessionEvent se) &#123;&#125;</span><br></pre></td></tr></table></figure></p>\n<p>补充:监听器的创建于注册流程<code>定义一个类实现*Listener接口，其次在/Web/WebContent/WEB-INF/web.xml注册配置监听器</code><br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span> <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://java.sun.com/xml/ns/javaee\"</span> <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"WebApp_ID\"</span> <span class=\"attr\">version</span>=<span class=\"string\">\"2.5\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">display-name</span>&gt;</span>Web<span class=\"tag\">&lt;/<span class=\"name\">display-name</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">listener</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;<span class=\"name\">listener-class</span>&gt;</span>监听器类路径<span class=\"tag\">&lt;/<span class=\"name\">listener-class</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">listener</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>参考地址:<a href=\"http://tomcat.jaxmao.org/servletapi/\" target=\"_blank\" rel=\"noopener\">http://tomcat.jaxmao.org/servletapi/</a></li>\n</ul>\n<p>基础实例1:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//ServletContextListener 监听器</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> top.weiyigeek.listener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletContextEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.ServletContextListener;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyServletContentListener</span> <span class=\"keyword\">implements</span> <span class=\"title\">ServletContextListener</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">contextInitialized</span><span class=\"params\">(ServletContextEvent sce)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"ServletContext: 初始化 .....\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">contextDestroyed</span><span class=\"params\">(ServletContextEvent sce)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"ServletContext: 销毁了 .....\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//ServletRequestListener 监听器</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyRequestListener</span> <span class=\"keyword\">implements</span> <span class=\"title\">ServletRequestListener</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">requestInitialized</span><span class=\"params\">(ServletRequestEvent sre)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"servletRequest : 初始化.....\"</span> + sre);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">requestDestroyed</span><span class=\"params\">(ServletRequestEvent sre)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"servletRequest : 销毁了.....\"</span> + sre);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//HttpsessionListener 监听器</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MySessionListener</span> <span class=\"keyword\">implements</span> <span class=\"title\">HttpSessionListener</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">sessionCreated</span><span class=\"params\">(HttpSessionEvent se)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"HttpSession: 创建session了.....\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">sessionDestroyed</span><span class=\"params\">(HttpSessionEvent se)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"HttpSession: 销毁session了.....\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/1/20200417124512.png\" alt=\"WeiyiGeek.三种作用域监听器初始化和销毁\" title=\"\" class=\"\">\n                <p>WeiyiGeek.三种作用域监听器初始化和销毁</p>\n            </figure></p>\n<p><br></p>\n<p><em>类型2.监听三个作用域属性状态变更</em><br>描述:三种作用域属性监听器的方法名称大致差不多只是方法参数Event事件不同，他们可以监听在作用域中值 <code>添加  | 替换  | 移除</code> 的动作,在实际开发中作用没上一类作用大。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#ServletContext -&gt; ServletContextAttributeListener 属性监听器</span></span><br><span class=\"line\"><span class=\"comment\">#向servlet上下文添加/删除/替换新属性的通知</span></span><br><span class=\"line\">void attributeAdded(ServletContextAttributeEvent scab)  </span><br><span class=\"line\">void attributeRemoved(ServletContextAttributeEvent scab)</span><br><span class=\"line\">void attributeReplaced(ServletContextAttributeEvent scab)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#HttpServletRequest -&gt; ServletRequestAttributeListener 属性监听器</span></span><br><span class=\"line\">void attributeAdded(ServletRequestAttributeEvent srae)</span><br><span class=\"line\">void attributeRemoved(ServletRequestAttributeEvent srae)</span><br><span class=\"line\">void attributeReplaced(ServletRequestAttributeEvent srae)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#HttpSession -&gt; HttpSessionAttributeListener 属性监听器</span></span><br><span class=\"line\">void attributeAdded(HttpSessionBindingEvent se)</span><br><span class=\"line\">void attributeRemoved(HttpSessionBindingEvent se)</span><br><span class=\"line\">void attributeReplaced(HttpSessionBindingEvent se)</span><br></pre></td></tr></table></figure></p>\n<p>基础示例(<code>此处采用HttpSessionAttributeListener为例</code>):<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">/Web/src/top/weiyigeek/listener/MyHttpSessionAttributeListener.java</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Desc</span> 属性更改|替换|添加事件触发</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> WeiyiGeek</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyHttpSessionAttributeListener</span> <span class=\"keyword\">implements</span> <span class=\"title\">HttpSessionAttributeListener</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">attributeAdded</span><span class=\"params\">(HttpSessionBindingEvent hsbe)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"1.属性添加......\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">attributeRemoved</span><span class=\"params\">(HttpSessionBindingEvent hsbe)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"2.属性移除......\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">attributeReplaced</span><span class=\"params\">(HttpSessionBindingEvent hsbe)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"3.属性替换......\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">///Web/WebContent/Demo1/TestAttribute.jsp</span></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;h1&gt; TestAttribute.jsp 测试 监听器属性&lt;/h1&gt;</span><br><span class=\"line\">&lt;%</span><br><span class=\"line\">  <span class=\"comment\">//（1）session 作用域属性设置</span></span><br><span class=\"line\">  session.setAttribute(<span class=\"string\">\"name\"</span>, <span class=\"string\">\"WeiyiGeek\"</span>);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">//（2）属性替换</span></span><br><span class=\"line\">  session.setAttribute(<span class=\"string\">\"name\"</span>, <span class=\"string\">\"TestWeiyi\"</span>);</span><br><span class=\"line\">  <span class=\"comment\">//（3）移除属性</span></span><br><span class=\"line\">  session.removeAttribute(<span class=\"string\">\"name\"</span>);</span><br><span class=\"line\">%&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure><br>执行结果:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#以此可以大概了解各个监听器的生命周期</span></span><br><span class=\"line\">ServletContext: 初始化 .....</span><br><span class=\"line\">servletRequest : 初始化.....javax.servlet.ServletRequestEvent[<span class=\"built_in\">source</span>=org.apache.catalina.core.ApplicationContextFacade@2f1d633b]</span><br><span class=\"line\">HttpSession： 创建session了.....</span><br><span class=\"line\">1.属性添加......</span><br><span class=\"line\">3.属性替换......</span><br><span class=\"line\">2.属性移除......</span><br><span class=\"line\">servletRequest : 销毁了.....javax.servlet.ServletRequestEvent[<span class=\"built_in\">source</span>=org.apache.catalina.core.ApplicationContextFacade@2f1d633b]</span><br><span class=\"line\">ServletContext: 销毁了 .....</span><br></pre></td></tr></table></figure></p>\n<p><em>注意事项:</em></p>\n<ul>\n<li>第一类与第二类监听器在Web.xml中监听器才能在应用中正常使用;</li>\n</ul>\n<p><br></p>\n<p><em>类型3.监听httpSession里面存值的状态变更</em><br>描述:该类监听器不用在web.xml进行注册了，但是必须在您的Bean类中进行实现该类监听器的接口便可正常使用;</p>\n<ul>\n<li>(1) HttpSessionBindingListener:监听对象与session 绑定和解除绑定 的动作<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#基础方法</span></span><br><span class=\"line\">public void valueBound(HttpSessionBindingEvent event) &#123;...&#125;</span><br><span class=\"line\">public void valueUnbound(HttpSessionBindingEvent event) &#123;...&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>基础实例:<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">///Web/src/top/weiyigeek/main/BeanListener.java</span></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@Desc</span> 第三类HttpSessionBindingListener监听器的实现，监听Session传值的状态改变;</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> WeiyiGeek</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BeanListener</span> <span class=\"keyword\">implements</span> <span class=\"title\">HttpSessionBindingListener</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//由于 HttpSessionBindingListener 不用在Web.xml中进行注册，所以在使用中必须在Bean类中进行实现该接口</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">valueBound</span><span class=\"params\">(HttpSessionBindingEvent event)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"HttpSessionBinding:对象值 被 绑定....\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">valueUnbound</span><span class=\"params\">(HttpSessionBindingEvent event)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"HttpSessionBinding:对象值被 解除 绑定....\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">///Web/WebContent/Demo1/TestAttribute.jsp</span></span><br><span class=\"line\">&lt;h1&gt; TestAttribute.jsp 测试 监听器属性&lt;/h1&gt;</span><br><span class=\"line\">&lt;%</span><br><span class=\"line\">  <span class=\"comment\">//（1）session 作用域属性设置</span></span><br><span class=\"line\">  session.setAttribute(<span class=\"string\">\"name\"</span>, <span class=\"string\">\"WeiyiGeek\"</span>);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">//（2）属性替换</span></span><br><span class=\"line\">  session.setAttribute(<span class=\"string\">\"name\"</span>, <span class=\"string\">\"TestWeiyi\"</span>);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">//（3）移除属性</span></span><br><span class=\"line\">  session.removeAttribute(<span class=\"string\">\"name\"</span>);</span><br><span class=\"line\">%&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p>\n<p>执行结果:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bashservletRequest : 初始化.....javax.servlet.ServletRequestEvent[<span class=\"built_in\">source</span>=org.apache.catalina.core.ApplicationContextFacade@11728c6]</span><br><span class=\"line\">HttpSession： 创建session了.....</span><br><span class=\"line\">HttpSessionBinding:对象值 被 绑定....</span><br><span class=\"line\">1.属性添加......</span><br><span class=\"line\">3.属性替换......</span><br><span class=\"line\">HttpSessionBinding:对象值被 解除 绑定....</span><br><span class=\"line\">2.属性移除......</span><br><span class=\"line\">servletRequest : 销毁了.....javax.servlet.ServletRequestEvent[<span class=\"built_in\">source</span>=org.apache.catalina.core.ApplicationContextFacade@11728c6]</span><br><span class=\"line\"><span class=\"comment\">#30分钟后</span></span><br><span class=\"line\">HttpSession：销毁session了.....</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<ul>\n<li>(2) HttpSessionActivationListener: 用于监听现在session的值 是 钝化 （序列化）还是活化 （反序列化）的动作<br><em>什么是钝化（序列化） ?</em><br>答:把内存中的数据存储到硬盘上。</li>\n</ul>\n<p><em>什么是活化 （反序列化）?</em><br>答:把硬盘中的数据读取到内存中。</p>\n<p><em>session的钝化活化的用意何在?</em><br>答:session中的值可能会很多， 并且我们有很长一段时间不使用这个内存中的值， 那么可以考虑把session的值可以存储到硬盘上【钝化】，等下一次在使用的时候，在从硬盘上提取出来。 【活化】</p>\n<p>补充上述钝化后存储在<code>E:\\Development\\apache-tomcat-9.0.31\\work\\Catalina\\localhost\\您的项目名称\\SESSIONS.ser</code>之中</p>\n<p>基础示例:<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">///Web/src/top/weiyigeek/main/BeanActivation.java   #这里少不了Seariable他是用于序列化域反序列化;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BeanActivation</span> <span class=\"keyword\">implements</span> <span class=\"title\">HttpSessionActivationListener</span>,<span class=\"title\">Serializable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//钝化</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">sessionWillPassivate</span><span class=\"params\">(HttpSessionEvent hse)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"- HttpSessionActivation(被钝化) ， Session 值 =  \"</span> + hse.getSession().getId());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//活化</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">sessionDidActivate</span><span class=\"params\">(HttpSessionEvent hse)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"- HttpSessionActivation(被活化) ， Session 值 =  \"</span> + hse.getSession().getId());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">///Web/WebContent/Demo1/TestActivation.jsp</span></span><br><span class=\"line\">&lt;H1&gt;TestActivation.jsp | 该页面设置session作用域的值 （钝化）&lt;/H1&gt;</span><br><span class=\"line\">&lt;%</span><br><span class=\"line\">  <span class=\"comment\">//Session 钝化与活化</span></span><br><span class=\"line\">  BeanActivation bl = <span class=\"keyword\">new</span> BeanActivation();</span><br><span class=\"line\">  bl.setName(<span class=\"string\">\"WeiyiGeek\"</span>);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">//session.值获取</span></span><br><span class=\"line\">  session.setAttribute(<span class=\"string\">\"bean\"</span>, bl);</span><br><span class=\"line\">%&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">///Web/WebContent/Demo1/TestActivation1.jsp</span></span><br><span class=\"line\">&lt;H1&gt;TestActivation1.jsp | 该页面获取session作用域的值(活化) &lt;/H1&gt;</span><br><span class=\"line\">&lt;%</span><br><span class=\"line\">  session.getAttribute(<span class=\"string\">\"bean\"</span>);</span><br><span class=\"line\">%&gt;</span><br><span class=\"line\">session 作用域活化后的值:   $&#123;bean.name&#125;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p>\n<p>执行结果(以首次访问的结果为例):<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ServletContext: 初始化 .....</span><br><span class=\"line\"><span class=\"comment\">#TestActivation.jsp请求时候</span></span><br><span class=\"line\">servletRequest : 初始化.....javax.servlet.ServletRequestEvent[<span class=\"built_in\">source</span>=org.apache.catalina.core.ApplicationContextFacade@7d8b8dd1]</span><br><span class=\"line\">HttpSession： 创建session了.....</span><br><span class=\"line\">1.属性添加......</span><br><span class=\"line\">servletRequest : 销毁了.....javax.servlet.ServletRequestEvent[<span class=\"built_in\">source</span>=org.apache.catalina.core.ApplicationContextFacade@7d8b8dd1]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Server Stop</span></span><br><span class=\"line\">- HttpSessionActivation(被钝化) ， Session 值 =  7BA6BBF40A180E2BF0CBFC8B51F1F422</span><br><span class=\"line\">ServletContext: 销毁了 .....</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Server Start</span></span><br><span class=\"line\">ServletContext: 初始化 .....</span><br><span class=\"line\">- HttpSessionActivation(被活化) ， Session 值 =  7BA6BBF40A180E2BF0CBFC8B51F1F422</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#TestActivation1.jsp请求时候</span></span><br><span class=\"line\">servletRequest : 初始化.....javax.servlet.ServletRequestEvent[<span class=\"built_in\">source</span>=org.apache.catalina.core.ApplicationContextFacade@4072236]</span><br><span class=\"line\">servletRequest : 销毁了.....javax.servlet.ServletRequestEvent[<span class=\"built_in\">source</span>=org.apache.catalina.core.ApplicationContextFacade@4072236]</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/1/20200417172135.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p><br></p>\n<p><em>Q:如何让session的在一定时间内钝化?</em><br>答:在Tomcat容器配置文件中进行配置,可以从下面三处进行相应的配置;</p>\n<ol>\n<li>在tomcat里面 conf/context.xml 里面配置,该配置<code>对所有的运行在这个服务器的项目生效</code>；  </li>\n<li>在conf/Catalina/localhost/context.xml 配置，该配置只对 localhost 生效即<code>localhost:8080</code></li>\n<li>在自己的web工程项目中的 META-INF/context.xml, <code>只对当前的工程生效</code>下面实践采用这样的方式。</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Context</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Manager</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.session.PersistentManager\"</span> <span class=\"attr\">maxIdleSwap</span>=<span class=\"string\">\"1\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Store</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.session.FileStore\"</span> <span class=\"attr\">directory</span>=<span class=\"string\">\"WeiyiGeek\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Manager</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Context</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- </span></span><br><span class=\"line\"><span class=\"comment\">maxIdleSwap ：1分钟不用就钝化</span></span><br><span class=\"line\"><span class=\"comment\">directory ：钝化后的那个文件存放的目录位置。 </span></span><br><span class=\"line\"><span class=\"comment\">E:\\Development\\apache-tomcat-9.0.31\\work\\Catalina\\localhost\\项目名称\\WeiyiGeek</span></span><br><span class=\"line\"><span class=\"comment\">产生文件:961977FE4FB87B89AD384C9DBC83A7EA.session</span></span><br><span class=\"line\"><span class=\"comment\">--&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/1/20200417205216.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n<hr>\n<h4 id=\"2-Filter\"><a href=\"#2-Filter\" class=\"headerlink\" title=\"2.Filter\"></a>2.Filter</h4><p>Q:什么是Filter?他有什么作用?<br>A:翻译过来是过滤器的意思, <code>主要是起到的是拦截作用 , 用于在客户端请求服务器资源的时候，执行过滤（拦截）</code> 。 </p>\n<ul>\n<li>如果过滤器放行，那么这个请求才能到达服务器</li>\n<li>如果过滤器拒绝放行，那么服务器就不会收到这个请求</li>\n</ul>\n<p>应用场景比如:<br>1.对一些敏感词进行过滤替换;<br>2.设置统一的编码格式;<br>3.实现自动登录;</p>\n<p><br/></p>\n<h5 id=\"1-基础使用\"><a href=\"#1-基础使用\" class=\"headerlink\" title=\"1) 基础使用\"></a>1) 基础使用</h5><p><em>如何使用过滤器?其使用流程是什么?</em><br>1.定义一个类实现Filter接口，在doFilter方法之中进行过滤然后转发请求;<br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/1/20200417211239.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure><br>2.过滤器要想生效还必须在web.xml中进行配置,创建Filter实现类成功时你会在web.xml看到它注册了与Servlet进行比较发现只有两处名字不同:<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">display-name</span>&gt;</span>FilterDemo1<span class=\"tag\">&lt;/<span class=\"name\">display-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>FilterDemo1<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filter-class</span>&gt;</span>top.weiyigeek.filter.FilterDemo1<span class=\"tag\">&lt;/<span class=\"name\">filter-class</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter-mapping</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>FilterDemo1<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/*<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span> <span class=\"comment\">&lt;!-- 过滤所有的Request请求 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>基础示例:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * /Web/src/top/weiyigeek/filter/FilterDemo1.java</span></span><br><span class=\"line\"><span class=\"comment\"> * Servlet Filter implementation class FilterDemo1</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FilterDemo1</span> <span class=\"keyword\">implements</span> <span class=\"title\">Filter</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">//自动生成:构造方法</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">FilterDemo1</span><span class=\"params\">()</span> </span>&#123;&#125;</span><br><span class=\"line\">  <span class=\"comment\">/*** <span class=\"doctag\">@see</span> Filter#destroy()*/</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">destroy</span><span class=\"params\">()</span> </span>&#123;&#125;</span><br><span class=\"line\">  <span class=\"comment\">//Filter过滤的入口方法</span></span><br><span class=\"line\">  <span class=\"comment\">/*** <span class=\"doctag\">@see</span> Filter#doFilter(ServletRequest, ServletResponse, FilterChain) */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doFilter</span><span class=\"params\">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class=\"keyword\">throws</span> IOException, ServletException </span>&#123;</span><br><span class=\"line\">      <span class=\"comment\">//此处统一对用户请求的数据进行编码</span></span><br><span class=\"line\">      request.setCharacterEncoding(<span class=\"string\">\"UTF-8\"</span>);</span><br><span class=\"line\">      System.out.println((++count) + <span class=\"string\">\".Filter(过滤器) - doFilter : 已获取用户请求正在做一些列的处理.....\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// pass the request along the filter chain 链请求转发;</span></span><br><span class=\"line\">    chain.doFilter(request, response);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">/*** <span class=\"doctag\">@see</span> Filter#init(FilterConfig) */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">(FilterConfig fConfig)</span> <span class=\"keyword\">throws</span> ServletException </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">///Web/src/top/weiyigeek/servlet/ServletFilter.java</span></span><br><span class=\"line\"><span class=\"comment\">//HttpServlet</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"ServletFilter - doGet() : 服务端已经接受到用户的请求 \"</span>);</span><br><span class=\"line\">    response.getWriter().append(<span class=\"string\">\"Served at: \"</span>).append(request.getContextPath());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<h5 id=\"2-生命周期\"><a href=\"#2-生命周期\" class=\"headerlink\" title=\"2) 生命周期\"></a>2) 生命周期</h5><p>描述:Filter生命周期按照下述顺序进行；</p>\n<ol>\n<li>创建:<code>public void init(FilterConfig fConfig)</code>，服务器启动即创建过滤器实例，</li>\n<li>过滤:<code>public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)</code>,在过滤器创建完成之后在接受到用户请求的时候经过URL-Pattern匹配成功则进行响应的处理</li>\n<li>销毁:<code>public void destroy()</code>,服务器关闭即销毁过滤器实例,前提在服务器端被正常Stop时候触发执行;</li>\n</ol>\n<p><br/></p>\n<h5 id=\"3-过滤器执行顺序\"><a href=\"#3-过滤器执行顺序\" class=\"headerlink\" title=\"3) 过滤器执行顺序\"></a>3) 过滤器执行顺序</h5><p>描述:如果项目中有多个过滤且多个Filter匹配路径都为全路径，那此时过滤器执行顺序如何?<br>答:过滤器拦截执行顺序与多个Filter过滤器在Web.xml注册的映射顺序有关(<code>即按照此顺序来进行过滤执行</code>);客户端向Servlet发起请求的时候必须先经过Filter如果Filter放行才能正在的访问Servlet;</p>\n<p>基础示例:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">///Web/src/top/weiyigeek/filter/FilterDemo2.java</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Servlet Filter implementation class FilterDemo2</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FilterDemo2</span> <span class=\"keyword\">implements</span> <span class=\"title\">Filter</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">FilterDemo2</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// TODO Auto-generated constructor stub</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@see</span> Filter#destroy()</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">destroy</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"FilterDemo2 : 过滤器被销毁......\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@see</span> Filter#doFilter(ServletRequest, ServletResponse, FilterChain)</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doFilter</span><span class=\"params\">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class=\"keyword\">throws</span> IOException, ServletException </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"-请求进入 FilterDemo2 过滤器 .... Before Chain.doFilter\"</span>);</span><br><span class=\"line\">    chain.doFilter(request, response);</span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"-响应进入 FilterDemo2 过滤器 .... Recevice\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@see</span> Filter#init(FilterConfig)</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">(FilterConfig fConfig)</span> <span class=\"keyword\">throws</span> ServletException </span>&#123;</span><br><span class=\"line\">     System.out.println(<span class=\"string\">\"FilterDemo2 : 初始化创建过滤器......\"</span>+ fConfig.getFilterName());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>Web.xml 注册顺序:<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">display-name</span>&gt;</span>FilterDemo1<span class=\"tag\">&lt;/<span class=\"name\">display-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>FilterDemo1<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filter-class</span>&gt;</span>top.weiyigeek.filter.FilterDemo1<span class=\"tag\">&lt;/<span class=\"name\">filter-class</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">display-name</span>&gt;</span>FilterDemo2<span class=\"tag\">&lt;/<span class=\"name\">display-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>FilterDemo2<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filter-class</span>&gt;</span>top.weiyigeek.filter.FilterDemo2<span class=\"tag\">&lt;/<span class=\"name\">filter-class</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 注意点1.映射顺序 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter-mapping</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>FilterDemo2<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 注意点2.URL匹配 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/ServletFilter<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 注意点3.请求类型过滤--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dispatcher</span>&gt;</span>REQUEST<span class=\"tag\">&lt;/<span class=\"name\">dispatcher</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">filter-mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">filter-mapping</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>FilterDemo1<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/*<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>执行结果:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url:http://localhost:8080/Web/ServletFilter</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#信息: 正在启动 Servlet 引擎：[Apache Tomcat/9.0.31]</span></span><br><span class=\"line\">FilterDemo2 : 初始化创建过滤器 ..... FilterDemo2</span><br><span class=\"line\"></span><br><span class=\"line\">-请求进入 FilterDemo2 过滤器 .... Before Chain.doFilter</span><br><span class=\"line\">-请求进入 FilterDemo1过滤器 .... Before Chain.doFilter</span><br><span class=\"line\">ServletFilter - doGet() : 服务端已经接受到用户的请求 </span><br><span class=\"line\">-响应进入 FilterDemo1 过滤器 .... Recevice</span><br><span class=\"line\">-响应进入 FilterDemo2 过滤器 .... Recevice</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#信息: 正在停止服务[Catalina]</span></span><br><span class=\"line\">FilterDemo2 : 过滤器被销毁......</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p><em>补充说明:</em></p>\n<ul>\n<li>0.init方法的参数<code>FilterConfig</code>可以用于获取filter在注册的名字以及初始化参数。其实这里的设计的初衷与ServletConfig是一样的,所以非必须的情况下我们不对齐进行操作;</li>\n<li>1.如果想放行请求那么必须在doFilter方法里面操作，使用<code>chain.doFilter(request, response); 放行， 让请求到达下一个目标</code>;</li>\n<li>2.Web.xml注册映射的Filter <code>&lt;url-pattern&gt;/*&lt;/url-pattern&gt;</code> 写法格式有三种(此处算是复习)<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#全路径匹配  以 /  开始 : /LoginServlet</span></span><br><span class=\"line\"><span class=\"comment\">#以目录匹配 以 / 开始  以 * 结束: /demo01/*  </span></span><br><span class=\"line\"><span class=\"comment\">#以后缀名匹配  以 * 开始 以后缀名结束 : *.jsp  *.html *.do ****</span></span><br></pre></td></tr></table></figure></li>\n<li>3.除了以上的配置，还可以在web.xml使用<code>&lt;dispatcher&gt;</code>元素来对当前的请求类型进行过滤：<ul>\n<li>REQUEST:默认过滤器只会拦截请求<code>缺省</code></li>\n<li>FORWARD:过滤器拦截转发</li>\n<li>INCLUDE:过滤器拦截包含</li>\n<li>ERROR:过滤器拦截全局错误页面的跳转。</li>\n</ul>\n</li>\n</ul>\n<p><br/></p>\n<h5 id=\"4-基础实例\"><a href=\"#4-基础实例\" class=\"headerlink\" title=\"4.基础实例\"></a>4.基础实例</h5><p>需求分析:实现自动登陆以及注册功能;<br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/1/20200421125241.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p>依赖的jar包:</p>\n<ul>\n<li>/Web/WebContent/WEB-INF/lib/commons-beanutils-1.8.3.jar</li>\n<li>/Web/WebContent/WEB-INF/lib/commons-logging-1.2.jar</li>\n</ul>\n<p>beanutils 包常用方法:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#注册自己的日期转换器然后在BeanUtils中使用</span></span><br><span class=\"line\">ConvertUtils.register(new MyDateConverter(), Date.class);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#请求转化数据</span></span><br><span class=\"line\">Map map = request.getParameterMap();</span><br><span class=\"line\">UserBean bean = new UserBean();</span><br><span class=\"line\"><span class=\"comment\">#转化map中的数据放置到bean对象身上</span></span><br><span class=\"line\">BeanUtils.populate(bean, map);</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p><strong>基础实例:</strong><br>首页:/Web/WebContent/default.jsp<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page language=<span class=\"string\">\"java\"</span> contentType=<span class=\"string\">\"text/html; charset=UTF-8\"</span></span><br><span class=\"line\">    pageEncoding=<span class=\"string\">\"UTF-8\"</span>%&gt;</span><br><span class=\"line\">&lt;%<span class=\"meta\">@taglib</span> prefix=<span class=\"string\">\"c\"</span> uri=<span class=\"string\">\"http://java.sun.com/jsp/jstl/core\"</span> %&gt;</span><br><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">&lt;meta charset=<span class=\"string\">\"UTF-8\"</span>&gt;</span><br><span class=\"line\">&lt;title&gt;首页&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;h3&gt; WeiyiGeek blog  &lt;/h3&gt;</span><br><span class=\"line\">&lt;c:<span class=\"keyword\">if</span> test=<span class=\"string\">\"$&#123;not empty user&#125;\"</span>&gt;</span><br><span class=\"line\">&lt;p&gt; 欢迎您， $&#123;user.sname&#125; 用户&lt;/p&gt;</span><br><span class=\"line\">&lt;/c:if&gt;</span><br><span class=\"line\">&lt;c:<span class=\"keyword\">if</span> test=<span class=\"string\">\"$&#123;empty user&#125;\"</span>&gt;</span><br><span class=\"line\">&lt;p&gt; 您好， &lt;a href=\"./Login.jsp\"&gt;请登陆&lt;/a&gt;&lt;/p&gt;</span><br><span class=\"line\">&lt;/c:if&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>\n<p>登陆和注册页:</p>\n<ul>\n<li>/Web/WebContent/Login.jsp<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"login\"</span> style=<span class=\"string\">\"border: 1px black solid\"</span>&gt;</span><br><span class=\"line\">   &lt;form action=<span class=\"string\">\"LoginServlet\"</span> method=<span class=\"string\">\"POST\"</span>&gt;</span><br><span class=\"line\">  用户: &lt;input type=<span class=\"string\">\"text\"</span> name=<span class=\"string\">\"username\"</span>&gt; &lt;br/&gt;</span><br><span class=\"line\">  密码: &lt;input type=<span class=\"string\">\"text\"</span> name=<span class=\"string\">\"password\"</span>&gt; &lt;br/&gt;</span><br><span class=\"line\">  &lt;input type=<span class=\"string\">\"checkbox\"</span> name=<span class=\"string\">\"autoLogin\"</span>&gt; 自动登陆   &lt;br/&gt;</span><br><span class=\"line\">   \t&lt;input type=<span class=\"string\">\"submit\"</span> value=<span class=\"string\">\"登陆\"</span>&gt;</span><br><span class=\"line\">   \t&lt;input type=<span class=\"string\">\"button\"</span> value=<span class=\"string\">\"注册\"</span> onclick=<span class=\"string\">\"location.href='./Register.jsp'\"</span>&gt; </span><br><span class=\"line\">   &lt;/form&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure></li>\n<li>/Web/WebContent/Register.jsp<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"actionscript\">\t<span class=\"comment\">//## (2)JQuery实现Ajax异步请求(文档加载完毕时候进行)</span></span></span><br><span class=\"line\"><span class=\"javascript\">\t$(<span class=\"string\">\"document\"</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t   $(<span class=\"string\">\"#username\"</span>).blur(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t      <span class=\"keyword\">var</span> user = $(<span class=\"keyword\">this</span>).val();</span></span><br><span class=\"line\"><span class=\"javascript\">\t      <span class=\"built_in\">console</span>.log(user);</span></span><br><span class=\"line\"><span class=\"javascript\">\t      $.post(<span class=\"string\">\"CheckUserServlet\"</span>,&#123;<span class=\"attr\">checkuser</span>:user&#125;,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">data,status</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">\t          <span class=\"keyword\">if</span> (status == <span class=\"string\">\"success\"</span>)&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">\t              <span class=\"comment\">//Jquery 直接解析 json </span></span></span><br><span class=\"line\"><span class=\"actionscript\">\t\t      \t\t<span class=\"keyword\">if</span>(data.status)&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t\t\t\t  $(<span class=\"string\">\"#msg\"</span>).html(<span class=\"string\">\"&lt;font color='green'&gt;姓名可用!&lt;/font&gt;\"</span>);</span></span><br><span class=\"line\"><span class=\"actionscript\">\t\t      \t\t&#125;<span class=\"keyword\">else</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">\t\t      \t\t  $(<span class=\"string\">\"#msg\"</span>).html(<span class=\"string\">\"&lt;font color='red'&gt;姓名已存在!&lt;/font&gt;\"</span>);</span></span><br><span class=\"line\"><span class=\"undefined\">\t\t      \t\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t          &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">\t      &#125;);</span></span><br><span class=\"line\"><span class=\"undefined\">\t   &#125;);</span></span><br><span class=\"line\"><span class=\"undefined\">\t&#125;);</span></span><br><span class=\"line\"><span class=\"undefined\">\t</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"actionscript\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">submit_check</span><span class=\"params\">()</span></span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> pass1 = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'password1'</span>).value;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">var</span> pass2 = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'password2'</span>).value;</span></span><br><span class=\"line\"><span class=\"actionscript\">    <span class=\"keyword\">if</span> ( pass1 != pass2 )&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">        alert(<span class=\"string\">\"两次输入的密码不一致!\"</span>);</span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;</span></span><br><span class=\"line\"><span class=\"actionscript\">\t<span class=\"keyword\">if</span> (confirm(<span class=\"string\">\"您是否进行添加提交?\"</span>) ) &#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span></span><br><span class=\"line\"><span class=\"actionscript\">\t&#125;<span class=\"keyword\">else</span>&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">\t&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"register\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"border: 1px black solid\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"RegisterServlet\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"POST\"</span> <span class=\"attr\">onsubmit</span>=<span class=\"string\">\"return submit_check()\"</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"username\"</span>&gt;</span>姓名:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">onblur</span>=<span class=\"string\">\"checkUser()\"</span>/&gt;</span> &amp;nbsp; <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">id</span>=<span class=\"string\">\"msg\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"password\"</span>&gt;</span>密码:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"password1\"</span>/&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"password2\"</span>&gt;</span>密码确认:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"password2\"</span>/&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"gender\"</span>&gt;</span>性别:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"gender\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"男\"</span>&gt;</span>男</span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"radio\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"gender\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"女\"</span>&gt;</span>女</span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"telephone\"</span>&gt;</span>电话号码:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"tel\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"telephone\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"telephone\"</span>/&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"job\"</span>&gt;</span>工作职位:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"job\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"安全\"</span>&gt;</span>安全</span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"job\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"运维\"</span>&gt;</span>运维</span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"job\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"开发\"</span>&gt;</span>开发</span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"job\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"测试\"</span>&gt;</span>测试</span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"job\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"主管\"</span>&gt;</span>主管</span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">   </span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"jointime\"</span>&gt;</span>加入时间:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"date\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"jointime\"</span>/&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">   </span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"info\"</span>&gt;</span>备注:<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">rows</span>=<span class=\"string\">\"5\"</span> <span class=\"attr\">cols</span>=<span class=\"string\">\"30\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"info\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"info\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"注册\"</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"reset\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"重置\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>登陆注册Servlet:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// /Web/src/top/weiyigeek/servlet/LoginServlet.java</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        request.setCharacterEncoding(<span class=\"string\">\"UTF-8\"</span>);</span><br><span class=\"line\">        <span class=\"comment\">//1.接收经过过滤器转发的数据</span></span><br><span class=\"line\">        Map map = request.getParameterMap();</span><br><span class=\"line\">        LoginBean lb = <span class=\"keyword\">new</span> LoginBean();</span><br><span class=\"line\">        BeanUtils.populate(lb, map);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">//2.调用dao进行数据库查询</span></span><br><span class=\"line\">        User user = <span class=\"keyword\">new</span> UserLoginImpl();</span><br><span class=\"line\">        Person result = user.userlogin(lb);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">//3.判断用户是否登录成功以及后面是进行自动登陆</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(result != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"string\">\"on\"</span>.equals(lb.getAutoLogin())) &#123;</span><br><span class=\"line\">                <span class=\"comment\">//发送Cookies给客户端(实际开发中一定不要这么做不安全的-可以将session值传入redis+钝化)</span></span><br><span class=\"line\">                Cookie cookie = <span class=\"keyword\">new</span> Cookie(<span class=\"string\">\"autoLogin\"</span>,lb.getUsername()+<span class=\"string\">\"-\"</span>+lb.getPassword());</span><br><span class=\"line\">                cookie.setMaxAge(<span class=\"number\">60</span>*<span class=\"number\">60</span>*<span class=\"number\">24</span>*<span class=\"number\">7</span>);</span><br><span class=\"line\">                cookie.setPath(<span class=\"string\">\"/\"</span>);</span><br><span class=\"line\">                response.addCookie(cookie);</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"ok\"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">//4.通过session作用域进行传值</span></span><br><span class=\"line\">            request.getSession().setAttribute(<span class=\"string\">\"login\"</span>, <span class=\"string\">\"true\"</span>);</span><br><span class=\"line\">            request.getSession().setAttribute(<span class=\"string\">\"user\"</span>, result);</span><br><span class=\"line\">            response.sendRedirect(<span class=\"string\">\"default.jsp\"</span>);</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">//5.失败则跳转到登陆界面</span></span><br><span class=\"line\">            response.setCharacterEncoding(<span class=\"string\">\"utf-8\"</span>);</span><br><span class=\"line\">            response.setContentType(<span class=\"string\">\"text/html; charset=UTF-8\"</span>);</span><br><span class=\"line\">            response.getWriter().write(<span class=\"string\">\"&lt;script&gt; alert('账号或者密码错误!,请验证后登陆！');location.href='Login.jsp';&lt;/script&gt;\"</span>);</span><br><span class=\"line\">            <span class=\"comment\">//request.getRequestDispatcher(\"Login.jsp\").forward(request, response);</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IllegalAccessException e) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (InvocationTargetException e) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// /Web/src/top/weiyigeek/servlet/RegisterServlet.java</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">doGet</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response)</span> <span class=\"keyword\">throws</span> ServletException, IOException </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//1.注册自己的日期转化器</span></span><br><span class=\"line\">        request.setCharacterEncoding(<span class=\"string\">\"UTF-8\"</span>);</span><br><span class=\"line\">        ConvertUtils.register(<span class=\"keyword\">new</span> MyDateConverter(), Date.class);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">//2.请求的数据转化</span></span><br><span class=\"line\">        Map map = request.getParameterMap();</span><br><span class=\"line\">        registerBean bean = <span class=\"keyword\">new</span> registerBean();</span><br><span class=\"line\">        BeanUtils.populate(bean, map);</span><br><span class=\"line\">        System.out.println(bean.toString());</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3.调用Dao插入数据</span></span><br><span class=\"line\">        User uu = <span class=\"keyword\">new</span> UserLoginImpl();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> flag = uu.userregister(bean);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">//4.根据注册情况进行跳转;</span></span><br><span class=\"line\">        response.setCharacterEncoding(<span class=\"string\">\"UTF-8\"</span>);</span><br><span class=\"line\">        response.setContentType(<span class=\"string\">\"text/html;charset=utf-8\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (flag &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            response.getWriter().write(<span class=\"string\">\"&lt;script&gt;alert('注册成功');window.location.href='./Login.jsp'&lt;/script&gt;\"</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            response.getWriter().write(<span class=\"string\">\"&lt;script&gt;alert('注册失败');window.location.href='./Register.jsp'&lt;/script&gt;\"</span>);</span><br><span class=\"line\">        &#125;             </span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (IllegalAccessException | InvocationTargetException | SQLException e) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>过滤器Filter:/Web/src/top/weiyigeek/filter/AutoLogin.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">doFilter</span><span class=\"params\">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class=\"keyword\">throws</span> IOException, ServletException </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//1.过滤器创建ServletRequest作用域;</span></span><br><span class=\"line\">      HttpServletRequest req = (HttpServletRequest) request;</span><br><span class=\"line\">      Object login = req.getSession().getAttribute(<span class=\"string\">\"login\"</span>);</span><br><span class=\"line\">      Person ps = (Person)req.getSession().getAttribute(<span class=\"string\">\"user\"</span>);</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"comment\">//2.判断用户session是否有效</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (login != <span class=\"keyword\">null</span> &amp;&amp; ps != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">          System.out.println(<span class=\"string\">\"#用户一已登录并且有效!\"</span>);</span><br><span class=\"line\">           <span class=\"comment\">//有效则直接放行</span></span><br><span class=\"line\">          chain.doFilter(request, response);</span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"comment\">//3.如果session失效则看Cookies中是否有自动登陆字段;</span></span><br><span class=\"line\">          Cookie[] cookies = req.getCookies();</span><br><span class=\"line\">          Cookie c = CookieUtil.findCookie(cookies, <span class=\"string\">\"autoLogin\"</span>);</span><br><span class=\"line\">          <span class=\"keyword\">if</span>( c == <span class=\"keyword\">null</span> ) &#123;</span><br><span class=\"line\">              <span class=\"comment\">//4.如果没有设置自动登陆则放行</span></span><br><span class=\"line\">              System.out.println(<span class=\"string\">\"#用户未登陆或者未设置身份自动登陆....\"</span>);</span><br><span class=\"line\">                chain.doFilter(request, response);</span><br><span class=\"line\">          &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              System.out.println(<span class=\"string\">\"#Session失效，用户设置自动登陆-正在进行自动登陆!\"</span>);</span><br><span class=\"line\">              <span class=\"comment\">//5.登陆字符串分隔</span></span><br><span class=\"line\">              String loginStr = c.getValue();</span><br><span class=\"line\">              String username = loginStr.split(<span class=\"string\">\"-\"</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">              String password = loginStr.split(<span class=\"string\">\"-\"</span>)[<span class=\"number\">1</span>];</span><br><span class=\"line\">              LoginBean lb = <span class=\"keyword\">new</span> LoginBean(username,password,<span class=\"string\">\"on\"</span>);</span><br><span class=\"line\">              System.out.println(lb.toString());</span><br><span class=\"line\">              </span><br><span class=\"line\">              <span class=\"comment\">//6.完成登陆对象的封装后直接调用Dao接口进行验证</span></span><br><span class=\"line\">              User uu = <span class=\"keyword\">new</span> UserLoginImpl();</span><br><span class=\"line\">              <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    ps = uu.userlogin(lb);</span><br><span class=\"line\">                    <span class=\"comment\">//7.使用session存这个值到域中，方便下一次未过期前还可以用。</span></span><br><span class=\"line\">                    req.getSession().setAttribute(<span class=\"string\">\"user\"</span>, ps);</span><br><span class=\"line\">                    chain.doFilter(request, response);</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// TODO Auto-generated catch block</span></span><br><span class=\"line\">                    e.printStackTrace();</span><br><span class=\"line\">                    request.getRequestDispatcher(<span class=\"string\">\"Login.jsp\"</span>).forward(request, response);;</span><br><span class=\"line\">                &#125; </span><br><span class=\"line\">          &#125; </span><br><span class=\"line\">      &#125; </span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure></p>\n<p>Dao 数据库接口实现：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserLoginImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">User</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Person <span class=\"title\">userlogin</span><span class=\"params\">(LoginBean user)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</span><br><span class=\"line\">        QueryRunner qr = <span class=\"keyword\">new</span> QueryRunner(DB.getConn());</span><br><span class=\"line\">        Person res = qr.query(<span class=\"string\">\"SELECT sid,sname,gender,telephone,job,info,jointime FROM person WHERE sname = ? and spass = ?\"</span>, <span class=\"keyword\">new</span> BeanHandler&lt;Person&gt;(Person.class) , user.getUsername() , user.getPassword());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">userregister</span><span class=\"params\">(registerBean user)</span> <span class=\"keyword\">throws</span> SQLException </span>&#123;</span><br><span class=\"line\">        QueryRunner runner = <span class=\"keyword\">new</span> QueryRunner(DB.getConn());</span><br><span class=\"line\">        <span class=\"keyword\">int</span> flag = runner.update(<span class=\"string\">\"INSERT INTO person VALUES (NULL,?,?,?,?,?,?,?)\"</span>,user.getUsername(),user.getPassword(),user.getGender(),user.getTelephone(),user.getJob(),user.getInfo(),user.getJointime());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(flag &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"#插入成功\"</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"#添加失败\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> flag;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>工具类:/Web/src/top/weiyigeek/utils/MyDateConverter.java<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 自定义 java.util.Date日期转换器*/</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyDateConverter</span> <span class=\"keyword\">implements</span> <span class=\"title\">Converter</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"comment\">// 将value 转换 c 对应类型</span></span><br><span class=\"line\">  <span class=\"comment\">// 存在Class参数目的编写通用转换器，如果转换目标类型是确定的，可以不使用c 参数</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">convert</span><span class=\"params\">(Class c, Object value)</span> </span>&#123;</span><br><span class=\"line\">    String strVal = (String) value;</span><br><span class=\"line\">    <span class=\"comment\">// 将String转换为Date --- 需要使用日期格式化</span></span><br><span class=\"line\">    DateFormat dateFormat = <span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"yyyy-MM-dd\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">      Date date = dateFormat.parse(strVal);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> date;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (ParseException e) &#123;</span><br><span class=\"line\">      e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>执行结果:<br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/1/20200421165204.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Java","path":"api/categories/Java.json"}],"tags":[{"name":"Filter","path":"api/tags/Filter.json"}]}