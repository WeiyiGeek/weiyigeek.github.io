{"title":"Snap容器基础入门使用","slug":"系统运维/Linux/系统配置/Ubuntu/Snap容器基础入门使用","date":"2020-05-22T11:35:30.000Z","updated":"2021-01-08T01:38:43.927Z","url":"2020/5-22-204.html","path":"api/articles/2020/5-22-204.html.json","covers":null,"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h4 id=\"0x00-前言说明\"><a href=\"#0x00-前言说明\" class=\"headerlink\" title=\"0x00 前言说明\"></a>0x00 前言说明</h4><p>描述:在大多数应用场景下Ubuntu借助包管理器apt-get安装软件包很方便，前提是服务器要能够联网;但是如果在。政府或企业内网的服务器，通常是不与互联网连通的，这时候部署软件只能借助文件拷贝的方式，感觉回到了原始时代。而且更为严重的问题是软件包部署过程中的相互依赖的问题;</p>\n<p><strong>Q:如何解决?</strong></p>\n<blockquote>\n<p>在离线部署方面确实Windows比Linux做得好，Windows软件包通常会将软件所需的依赖打包，部署时只需拷贝一个软件安装包即可运行(<code>缺陷:体积太大</code>)；<br>当然此时Linux中也有类似Windows软件安装包，即snap软件包机制可以用来简化离线部署。</p>\n</blockquote>\n<p><strong>Q:什么是Snap?</strong><br>答:它的安装包扩展名是.snap类似于一个容器，完全独立于系统，它包含一个应用程序需要用到的所有文件和库(Snap包含一个私有的root文件系统里面包含依赖的软件包)，他们安装在独立的目录中且各个应用之间相互隔离，互不影响，而且安装快捷简单，运行容易管理；主要支持的主流发行版Ubuntu和Debian;<br>简单的说:它类似于windows的软件安装包将所需的依赖都统一打包到软件包中部署时只需拷贝snap文件即可，俨然就是一个镜像容器。</p>\n<p>Snap前身是由 Canonical 进行开发和管理的snappy演变而来用的是和 Flatpak 对抗,在Ubuntu 20.04 TLS的focal的发行版本中默认自带;</p>\n<p><em>Snap优缺点:</em></p>\n<ul>\n<li>优点:<ul>\n<li>安装简单、稳定、自动升级以及自带配置环境无需自行配置;</li>\n<li>得益于 Canonical 在中国大陆的运营，下载速度还是可以的，好像是有 CDN 的</li>\n</ul>\n</li>\n<li>缺点:<ul>\n<li>配置不灵活</li>\n<li>软件包巨大，好像运行一个软件包都需要挂载一个镜像，说是为了解决依赖问题，但……</li>\n<li>字体渲染支持很烂</li>\n<li>启动速度巨慢，了解后发现这个 Snap 果然还是把软件全部打包并压缩做成镜像，每次都要解压缩再挂载……那速度</li>\n</ul>\n</li>\n</ul>\n<p>注意事项:</p>\n<ul>\n<li>从`Ubuntu 16.04起snap环境是自带的意味着您无需安装它，但是如果是早于16.04的版本且服务器不能联网，安装snap环境很困难，你只能自求多福了</li>\n</ul>\n<hr>\n<h4 id=\"0x01-安装卸载\"><a href=\"#0x01-安装卸载\" class=\"headerlink\" title=\"0x01 安装卸载\"></a>0x01 安装卸载</h4><h5 id=\"1-安装\"><a href=\"#1-安装\" class=\"headerlink\" title=\"(1) 安装\"></a>(1) 安装</h5><p>描述:由于在Ubuntu 20.04 TLS 默认已经安装了snap，下面流程讲述的是没有安装该软件的系统流程:</p>\n<hr>\n<h5 id=\"2-卸载\"><a href=\"#2-卸载\" class=\"headerlink\" title=\"(2) 卸载\"></a>(2) 卸载</h5><p>描述:由于系统使用了docker容器不采用snap进行安装软件方式,则此时snap在系统中显得多余并且我是一个强迫症患者看到这么多挂载目录就忍不住了;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ df -hT</span><br><span class=\"line\">Filesystem                        Type      Size  Used Avail Use% Mounted on</span><br><span class=\"line\">/dev/loop1                        squashfs   69M   69M     0 100% /snap/lxd/14804</span><br><span class=\"line\">/dev/loop4                        squashfs   28M   28M     0 100% /snap/snapd/7264</span><br><span class=\"line\">/dev/loop5                        squashfs   55M   55M     0 100% /snap/core18/1705</span><br><span class=\"line\">/dev/loop0                        squashfs   71M   71M     0 100% /snap/lxd/16926</span><br><span class=\"line\">/dev/loop3                        squashfs   30M   30M     0 100% /snap/snapd/8790</span><br><span class=\"line\">/dev/loop2                        squashfs   56M   56M     0 100% /snap/core18/1885</span><br></pre></td></tr></table></figure></p>\n<p><strong>卸载Snap容器:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) snap 信息以及运行状态查看</span></span><br><span class=\"line\">WeiyiGeek@WeiyiGeek-ubuntu:~$ dpkg --list | grep <span class=\"string\">\"snap\"</span></span><br><span class=\"line\">ii  snapd                                2.46.1+20.04                      amd64        Daemon and tooling that <span class=\"built_in\">enable</span> snap packages</span><br><span class=\"line\"></span><br><span class=\"line\">WeiyiGeek@WeiyiGeek-ubuntu:~$ ps aux | grep <span class=\"string\">\"snap\"</span></span><br><span class=\"line\">root         848  0.0  0.7 773992 28520 ?        Ssl  13:17   0:01 /usr/lib/snapd/snapd</span><br><span class=\"line\"></span><br><span class=\"line\">WeiyiGeek@WeiyiGeek-ubuntu:~$ systemctl status snapd</span><br><span class=\"line\">● snapd.service - Snap Daemon  <span class=\"comment\"># 正常情况下是绿色的</span></span><br><span class=\"line\">     Loaded: loaded (/lib/systemd/system/snapd.service; enabled; vendor preset: enabled)</span><br><span class=\"line\">     Active: active (running) since Wed 2020-10-28 13:10:44 UTC; 12min ago</span><br><span class=\"line\">TriggeredBy: ● snapd.socket   <span class=\"comment\"># 正常情况下是绿色的</span></span><br><span class=\"line\">   Main PID: 853 (snapd)</span><br><span class=\"line\">      Tasks: 13 (<span class=\"built_in\">limit</span>: 4620)</span><br><span class=\"line\">     Memory: 226.7M</span><br><span class=\"line\">     CGroup: /system.slice/snapd.service</span><br><span class=\"line\">             └─853 /usr/lib/snapd/snapd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 停止snapd相关的进程服务</span></span><br><span class=\"line\">sudo systemctl stop snapd snapd.socket snapd.*</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (3) 从服务器或者桌面卸载snapd</span></span><br><span class=\"line\">sudo apt autoremove --purge -y snapd   <span class=\"comment\"># --purge 参数非常重要</span></span><br><span class=\"line\">sudo apt-get remove --purge gnome-software-plugin-snap <span class=\"comment\"># gnome 桌面插件</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (4) 守护进程重载</span></span><br><span class=\"line\">systemctl daemon-reload</span><br></pre></td></tr></table></figure></p>\n<p><strong>清除Snap残余文件流程:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.删掉所有的已经安装的 Snap 软件</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> p <span class=\"keyword\">in</span> $(snap list | awk <span class=\"string\">'&#123;print $1&#125;'</span>); <span class=\"keyword\">do</span></span><br><span class=\"line\">  sudo snap remove <span class=\"variable\">$p</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.停止snpad并且取消core18挂载的文件系统</span></span><br><span class=\"line\">sudo systemctl stop snapd</span><br><span class=\"line\"><span class=\"keyword\">for</span> m <span class=\"keyword\">in</span> /snap/core18/*; <span class=\"keyword\">do</span></span><br><span class=\"line\">   sudo umount <span class=\"variable\">$m</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 干掉 Snap 的 Core 文件，很大哟。</span></span><br><span class=\"line\">sudo snap remove core</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.干掉 Snap 的管理工具。</span></span><br><span class=\"line\">sudo apt autoremove --purge snapd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4. 干掉 Snap 的目录。</span></span><br><span class=\"line\">sudo rm -rf ~/snap /snap /var/snap /var/lib/snapd  /var/cache/snapd</span><br><span class=\"line\">sudo rm -rf /snap</span><br><span class=\"line\">sudo rm -rf /var/snap</span><br><span class=\"line\">sudo rm -rf /var/lib/snapd</span><br><span class=\"line\">sudo rm -rf /var/cache/snapd</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5.干掉 Snap 的目录。</span></span><br><span class=\"line\">sudo bash -c <span class=\"string\">\"cat &gt; /etc/apt/preferences.d/no-snapd.pref\"</span> &lt;&lt; EOL</span><br><span class=\"line\">Package: snapd</span><br><span class=\"line\">Pin: origin <span class=\"string\">\"\"</span></span><br><span class=\"line\">Pin-Priority: -1</span><br><span class=\"line\">EOL</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h4 id=\"0x01-基础配置\"><a href=\"#0x01-基础配置\" class=\"headerlink\" title=\"0x01 基础配置\"></a>0x01 基础配置</h4><h5 id=\"加速拉取\"><a href=\"#加速拉取\" class=\"headerlink\" title=\"加速拉取\"></a>加速拉取</h5><p>描述:对于国外的一些应用确实由于国内的网络原因，导致Snap拉取下载只跳几十KB真的十分感人；<br>因为snap一直没有国内的镜像而且开启普通代理也无法为它加速通过配置snapd为它提提速</p>\n<p><strong>方式1:systemd设置snap代理</strong><br>描述:由于直接设置 http_proxy 环境变量无法设置上, 所以需要在 snapd 启动文件中直接设置 proxy, 方法如下:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 前置操作, 修改  systemctl edit 使用的编辑器为 VIM, 如果不介意 Nano 可以跳过这一步</span></span><br><span class=\"line\">$ sudo tee -a /etc/profile &lt;&lt;-<span class=\"string\">'EOF'</span> </span><br><span class=\"line\"><span class=\"built_in\">export</span> SYSTEMD_EDITOR=<span class=\"string\">\"/bin/vim\"</span></span><br><span class=\"line\">EOF</span><br><span class=\"line\">$ <span class=\"built_in\">source</span> /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 开始设置代理编辑snapd的systemd，此时会在snapd的启动文件夹下新建立一个配置文件，用于复写snapd启动配置;</span></span><br><span class=\"line\">$ sudo systemctl edit snapd</span><br><span class=\"line\"><span class=\"comment\">#添加如下</span></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Environment=<span class=\"string\">\"http_proxy=http://127.0.0.1:port\"</span></span><br><span class=\"line\">Environment=<span class=\"string\">\"https_proxy=http://127.0.0.1:port\"</span></span><br><span class=\"line\"><span class=\"comment\">#保存退出</span></span><br><span class=\"line\">$ sudo systemctl daemon-reload</span><br><span class=\"line\">$ sudo systemctl restart snapd</span><br></pre></td></tr></table></figure>\n<p><strong>方式2:离线snap文件</strong><br>描述:为了扩展解决办法我们可以采用国外的VPS先拉取下载应用的snap文件，这算是下载snap包的另外一种方式;</p>\n<p>操作流程:<br>Step1.在能联网的Ubuntu上使用<code>snap download</code>命令下载<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@k8s:~<span class=\"comment\"># snap download docker</span></span><br><span class=\"line\">Fetching snap <span class=\"string\">\"docker\"</span></span><br><span class=\"line\">Install the snap with:</span><br><span class=\"line\">  snap ack docker_423.assert</span><br><span class=\"line\">  snap install docker_423.snap</span><br></pre></td></tr></table></figure></p>\n<p>Step2.上命令将会得到.assert和.snap两类文件：</p>\n<ul>\n<li><code>.assert</code>:是软件包的元数据信息，包括签名和权限控制信息</li>\n<li><code>.snap</code>:是实际的安装文件</li>\n</ul>\n<p>Step3.另外一种方法是到uApp Explorer网站上下载，可惜现在 uappexplorer 已经下线, 我们无法从 uappexplorer 中获取 SnapApp 的 .snap 文件，在后续或有更好的解决方法;:</p>\n<ul>\n<li>好处:是不需要有Ubuntu环境</li>\n<li>缺点:是只能下载.snap文件，无法下载.assert文件。</li>\n</ul>\n<p>Step4.假如您下载好.snap文件先进行安装，常规的我们需要将软件包拷贝到服务器上，<code>安装时首先注册.assert，然后再安装.snap</code>包;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#1) 存在.assert文件时候</span></span><br><span class=\"line\">$ sudo snap ack docker_321.assert</span><br><span class=\"line\">$ sudo snap install docker_321.snap</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#2) 不存在.assert文件时候（注意使用该方式一定要保证官方下载，危险参数下意味着软件不是在“沙盒”环境下执行的，运行过程不受控）</span></span><br><span class=\"line\">$ sudo snap install xxxxx.snap --dangerous</span><br><span class=\"line\">$ sudo snap install docker.snap --dangerous</span><br></pre></td></tr></table></figure></p>\n<p><em>注意事项:</em></p>\n<ul>\n<li>core软件包是snap的核心运行时，几乎所有的snap包都依赖core运行时,如果您Ubuntu 发行版本低于 18.04 您可能需要在安装其它的软件包的时候先安装<code>core</code>,</li>\n</ul>\n<p>snap镜像搜索: <a href=\"https://snapcraft.io/search?q=nextcloud\" target=\"_blank\" rel=\"noopener\">https://snapcraft.io/search?q=nextcloud</a><br>下载后执行此命令安装:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">```</span><br><span class=\"line\"></span><br><span class=\"line\">- `--dangerous所提示的是，这种模式有些“危险”。这是因为缺少.assert文件所描述的签名信息和权限控制信息，意味着软件不是在“沙盒”环境下执行的，运行过程不受控。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#### snap 命令</span></span><br><span class=\"line\"></span><br><span class=\"line\">```bash</span><br><span class=\"line\">$ snap whoami</span><br><span class=\"line\">email: -</span><br><span class=\"line\"></span><br><span class=\"line\">WeiyiGeek@WeiyiGeek-ubuntu:~$ lsblk</span><br><span class=\"line\">NAME                      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class=\"line\">loop0                       7:0    0   55M  1 loop /snap/core18/1705</span><br><span class=\"line\">loop1                       7:1    0 55.3M  1 loop /snap/core18/1885</span><br><span class=\"line\">loop2                       7:2    0   69M  1 loop /snap/lxd/14804</span><br><span class=\"line\">loop3                       7:3    0 70.6M  1 loop /snap/lxd/16926</span><br><span class=\"line\">loop4                       7:4    0 29.9M  1 loop /snap/snapd/8790</span><br><span class=\"line\">loop5                       7:5    0 27.1M  1 loop /snap/snapd/7264</span><br><span class=\"line\">sda                         8:0    0   80G  0 disk</span><br><span class=\"line\">├─sda1                      8:1    0    1M  0 part</span><br><span class=\"line\">├─sda2                      8:2    0    1G  0 part /boot</span><br><span class=\"line\">└─sda3                      8:3    0   79G  0 part</span><br><span class=\"line\">  └─ubuntu--vg-ubuntu--lv 253:0    0    4G  0 lvm  /</span><br><span class=\"line\">sr0                        11:0    1 1024M  0 rom</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"入坑出坑\"><a href=\"#入坑出坑\" class=\"headerlink\" title=\"入坑出坑\"></a>入坑出坑</h4><h5 id=\"1-Snap安装docker后的相关使用问题\"><a href=\"#1-Snap安装docker后的相关使用问题\" class=\"headerlink\" title=\"1.Snap安装docker后的相关使用问题\"></a>1.Snap安装docker后的相关使用问题</h5><p>问题描述:创建容器时候无法指定非/home/xxx目录，以及docker-compose构建时必须在home目录之下<br>解决办法:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 挂载持久化数据</span></span><br><span class=\"line\">/home/public/data/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># docker-compose.yaml</span></span><br><span class=\"line\">/home/public/project/docker-compose.yaml</span><br></pre></td></tr></table></figure></p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Containers","path":"api/categories/Containers.json"},{"name":"OperationTools","path":"api/categories/OperationTools.json"}],"tags":[{"name":"Snap","path":"api/tags/Snap.json"}]}