{"title":"Flask基础入门学习笔记2","slug":"编程世界/Python/Web开发/Flask/基础入门/Flask基础入门学习笔记2","date":"2020-07-16T12:34:30.000Z","updated":"2023-01-31T02:29:10.671Z","url":"2020/7-16-331.html","path":"api/articles/2020/7-16-331.html.json","covers":["https://img.weiyigeek.top/2020/1/20201011173716.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h3 id=\"0x00-模型-Models\"><a href=\"#0x00-模型-Models\" class=\"headerlink\" title=\"0x00 模型(Models)\"></a>0x00 模型(Models)</h3><p>描述:Flask 模型由于 Flask 默认并没有提供任何数据库操作的API,我们可以选择任何合适自己项目的数据库来使用,可以采用原生的语句实现也可以采用ORM框架(SQLAlchemy / MongoEngine 扩展库) 实现;</p>\n<p>Q: 原始SQL有何缺点?</p>\n<blockquote>\n<p>答: 代码利用率低且条件复杂代码语句越长,有狠毒相似语句一些SQL是在业务逻辑中拼出来的修改需要了解业务逻辑，并且可能会导致一些SQL安全问题, 优点是性能好速度快;</p>\n</blockquote>\n<p>Q: 使用ORM对象优点?</p>\n<blockquote>\n<p>答: 实际上将对象的操作转换为原生的SQL,我们并不需要关注我们使用的是什么数据库只需要设计出模型Model即可;</p>\n<ul>\n<li>1.易用性可以有效减少重复SQL</li>\n<li>2.性能损耗少</li>\n<li>3.设计灵活,可以轻松的实现复杂查询</li>\n<li>4.移植性好</li>\n</ul>\n</blockquote>\n<p>SQLAlchemy 连接使用流程:</p>\n<ul>\n<li><p>1.指定数据库配置<code>app.config[&#39;SQLALCHEMY_DATABASE_URI&#39;]=DB_URI</code>以及禁止对象追踪修改<code>app.config[&#39;SQLALCHEMY_TRAKE_MODIFICATIONS&#39;]=False</code></p>\n</li>\n<li><p>2.通过懒加载的方式初始化SQLalchemy()扩展;</p>\n</li>\n<li><p>3.数据库的使用创建模型class Person(db.model)</p>\n</li>\n<li><p>4.数据库操作</p>\n<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">创建数据库: db.create_all()</span><br><span class=\"line\">删除数据库：db.drop_all()</span><br><span class=\"line\">数据更新插入: db.session.add(Object) / db.session.add_all(List)</span><br><span class=\"line\">数据删除: db.session.delete(Object)</span><br><span class=\"line\">数据提交: db.session.commit()</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li>5.数据库查询:<br>SQLalchemy插件查询函数: <code>\\Python37-32\\lib\\site-packages\\sqlalchemy\\orm\\query.py</code><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查询数据结果集</span></span><br><span class=\"line\"><span class=\"comment\"># 模型类.query.查询方法</span></span><br><span class=\"line\">Student.query.frist()</span><br><span class=\"line\">Student.query.get(主键ID)         <span class=\"comment\"># 返回Student对象主键数据否则None</span></span><br><span class=\"line\">Student.query.get_or_404(主键索引) <span class=\"comment\"># 找寻到返回数据否则返回404</span></span><br><span class=\"line\">Student.query.all()               <span class=\"comment\"># 查询所有</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li>6.蓝图视图自定义模板与静态资源路径:<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># - 模板/静态路径默认在Flask(app)创建的路径下,或者采用以下方式自定义模板路径</span></span><br><span class=\"line\">template_folder = <span class=\"string\">\"../templates\"</span>  </span><br><span class=\"line\">static_folder = <span class=\"string\">\"../static\"</span></span><br><span class=\"line\">url_prefix=<span class=\"string\">'/db'</span>     <span class=\"comment\"># 蓝图统一前缀必须以/打头</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例如</span></span><br><span class=\"line\"><span class=\"comment\"># 方式1-Flask app 创建时指定</span></span><br><span class=\"line\">Day3\\App\\__init__.py</span><br><span class=\"line\">  <span class=\"comment\"># 获取Flask-APP对象自定义template与static目录</span></span><br><span class=\"line\">  app = Flask(__name__, template_folder=<span class=\"string\">\"../templates\"</span>, static_folder = <span class=\"string\">\"../static\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方式2-Flask 蓝图创建时指定</span></span><br><span class=\"line\">from flask import Blueprint,redirect,url_for</span><br><span class=\"line\">demo1 = Blueprint(<span class=\"string\">'demo1'</span>,__name__,  template_folder=<span class=\"string\">\"../templates\"</span>,url_prefix=<span class=\"string\">'/db'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#- 模板中也能使用反向解析蓝图(与Python代码一致)</span></span><br><span class=\"line\">def redirect():</span><br><span class=\"line\">  <span class=\"built_in\">return</span> url_for(<span class=\"string\">'demo1.get_student'</span>,id=1)  <span class=\"comment\"># blue.get_student 是蓝图.函数</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li>7.静态资源软编码在Flask中默认支持的,默认路径在和Flask同级别的static中静态资源是有路由的可以使用filename参数指定静态文件<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 原始 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"/static/css/index.css\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- url_for 方式 --&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- # 在DebugToor中endpoint是static的 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"&#123;&#123; url_for('static',filename='css/index.css') &#125;&#125;\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li>8.关系型数据库最多使用的三种数据库类型: <code>数字 INT、字符串 CHAR、时间日期 DATETIME</code></li>\n</ul>\n<p>例如:将SQL中创建表的语句转换成为SQLAlchemy模型<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 记录表**/</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"built_in\">record</span>(</span><br><span class=\"line\">  rid <span class=\"built_in\">INT</span> PRIMARY <span class=\"keyword\">KEY</span>  <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  uid            <span class=\"built_in\">INT</span>   <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  starttime      <span class=\"built_in\">TIMESTAMP</span>  <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  endtime        <span class=\"built_in\">TIMESTAMP</span>  <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  applytime      <span class=\"built_in\">TIMESTAMP</span>  <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"keyword\">context</span>        <span class=\"built_in\">CHAR</span>(<span class=\"number\">255</span>)  <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  daytype        <span class=\"built_in\">CHAR</span>(<span class=\"number\">32</span>)   <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  recordtime     <span class=\"built_in\">TIMESTAMP</span>  <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  ipaddr         <span class=\"built_in\">CHAR</span>(<span class=\"number\">255</span>)  <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class Record(db.Model):</span><br><span class=\"line\">  __tablename__ = 'record'   <span class=\"comment\">#表名</span></span><br><span class=\"line\">  rid = db.Column(db.Integer, primary_key=True)  <span class=\"comment\"># 记录类型</span></span><br><span class=\"line\">  uid = db.Column(db.Integer, index=True)        <span class=\"comment\"># 用户标识</span></span><br><span class=\"line\">  daytype = db.Column(db.String)                 <span class=\"comment\"># 工作日、周末、节假日</span></span><br><span class=\"line\">  starttime = db.Column(db.DateTime, default=datetime.datetime.utcnow)  <span class=\"comment\"># 开始时间</span></span><br><span class=\"line\">  endtime   = db.Column(db.DateTime, default=datetime.datetime.utcnow)  <span class=\"comment\"># 结束时间</span></span><br><span class=\"line\">  applytime = db.Column(db.DateTime, default=datetime.datetime.utcnow)  <span class=\"comment\"># 申请时间</span></span><br><span class=\"line\">  recordtime = db.Column(db.DateTime, default=datetime.datetime.utcnow) <span class=\"comment\"># 提交记录时间</span></span><br><span class=\"line\">  ipaddr  = db.Column(db.String)      <span class=\"comment\"># 提交者IP信息</span></span><br><span class=\"line\">  context = db.Column(db.String)      <span class=\"comment\"># 工作加班内容或者申请备注</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- #####################################</span></span><br><span class=\"line\"><span class=\"comment\">/** 用户表 **/</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> <span class=\"keyword\">user</span>(</span><br><span class=\"line\">  uid <span class=\"built_in\">INT</span> PRIMARY <span class=\"keyword\">KEY</span>         <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"keyword\">name</span>           <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">32</span>)  <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  gender         INT2         <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  yearsofwork    <span class=\"built_in\">INT</span>,</span><br><span class=\"line\">  address        <span class=\"built_in\">VARCHAR</span>(<span class=\"number\">255</span>)</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\">class User(db.Model):</span><br><span class=\"line\">  __tablename__ = 'user'   <span class=\"comment\">#表名</span></span><br><span class=\"line\">  uid = db.Column(db.Integer, primary_key=True, index=True)  <span class=\"comment\"># 用户表示</span></span><br><span class=\"line\">  name = db.Column(db.String)         <span class=\"comment\"># 用户姓名</span></span><br><span class=\"line\">  gender = db.Column(db.Integer)      <span class=\"comment\"># 用户性别(0,1)</span></span><br><span class=\"line\">  yearsofwork = db.Column(db.Integer) <span class=\"comment\"># 工作年限</span></span><br><span class=\"line\">  address = db.Column(db.String)      <span class=\"comment\"># 工作地点</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- #####################################</span></span><br><span class=\"line\"><span class=\"comment\">/** 类型表 **/</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> recordtype (</span><br><span class=\"line\">  rid <span class=\"built_in\">INT</span> PRIMARY <span class=\"keyword\">KEY</span>    <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span>,</span><br><span class=\"line\">  <span class=\"keyword\">name</span>           <span class=\"built_in\">TEXT</span>    <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span></span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\">class RecordType(db.Model):</span><br><span class=\"line\">  __tablename__ = 'recordtype'   <span class=\"comment\">#表名</span></span><br><span class=\"line\">  rid = db.Column(db.Integer, primary_key=True, index=True)  <span class=\"comment\"># 记录标识</span></span><br><span class=\"line\">  name = db.Column(db.Text)                                  <span class=\"comment\"># 记录名称</span></span><br></pre></td></tr></table></figure></p>\n<p>基础实例:<br><figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Day3\\App\\views\\work\\main.py</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Blueprint,render_template</span><br><span class=\"line\"><span class=\"keyword\">from</span> App.models <span class=\"keyword\">import</span> db,User,Record,RecordType</span><br><span class=\"line\"></span><br><span class=\"line\">worker = Blueprint(<span class=\"string\">'worker'</span>,__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@worker.route('/dballinit/')</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">create_db</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">  db.create_all();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'创建成功'</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@worker.route('/dballdrop/')</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">drop_db</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">  db.drop_all()</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'删除成功'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 增</span></span><br><span class=\"line\"><span class=\"meta\">@worker.route('/userinsert/')</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">insert_user</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">  peoples = []</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">6</span>):</span><br><span class=\"line\">    people = User()</span><br><span class=\"line\">    people.name = <span class=\"string\">\"测试人员%d\"</span> % i</span><br><span class=\"line\">    people.gender = <span class=\"number\">0</span> <span class=\"keyword\">if</span> i % <span class=\"number\">2</span> <span class=\"keyword\">else</span> <span class=\"number\">1</span></span><br><span class=\"line\">    people.yearsofwork = i</span><br><span class=\"line\">    people.address = <span class=\"string\">\"办公位置: 70&#123;&#125;\"</span>.format(i)</span><br><span class=\"line\">    peoples.append(people)</span><br><span class=\"line\"></span><br><span class=\"line\">  db.session.add_all(peoples)</span><br><span class=\"line\">  db.session.commit()</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'Insert User Successful!'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查</span></span><br><span class=\"line\"><span class=\"meta\">@worker.route('/userget/&lt;int:id&gt;')</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">query_user</span><span class=\"params\">(id)</span>:</span></span><br><span class=\"line\">  count = User.query.count()</span><br><span class=\"line\">  first = User.query.first()</span><br><span class=\"line\">  middle = User.query.get_or_404(<span class=\"number\">3</span>)</span><br><span class=\"line\">  custom = User.query.get(id)</span><br><span class=\"line\"></span><br><span class=\"line\">  res1 =  User.query.filter_by(gender=<span class=\"number\">0</span>,yearsofwork=<span class=\"number\">3</span>).first()             <span class=\"comment\"># 简单条件过滤</span></span><br><span class=\"line\">  res2 = User.query.filter(User.name.startswith(<span class=\"string\">'测试人员'</span>)).limit(<span class=\"number\">2</span>).all() <span class=\"comment\"># 复杂条件过滤</span></span><br><span class=\"line\"></span><br><span class=\"line\">  result = User.query.all()  <span class=\"comment\"># 返回该表的所有数据</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> middle != <span class=\"literal\">None</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"类型\"</span>, type(count), <span class=\"string\">\" 总数据条数: \"</span> , count)</span><br><span class=\"line\">    print(<span class=\"string\">\"类型\"</span>, type(first), <span class=\"string\">\"第一行数据: \"</span>,first)</span><br><span class=\"line\">    print(<span class=\"string\">\"类型\"</span>, type(middle), <span class=\"string\">\"索引为3得数据(不存在则返回404): \"</span>, middle)</span><br><span class=\"line\">    print(<span class=\"string\">\"类型\"</span>, type(custom), <span class=\"string\">\"索引为 &#123;&#125; 得数据: \"</span>.format(id), custom)</span><br><span class=\"line\">    print(<span class=\"string\">\"Index: &#123;&#125;, Name: &#123;&#125;, Gender: &#123;&#125;, Address: &#123;&#125; \\n\"</span>.format(custom.uid, custom.name, custom.gender, custom.address))</span><br><span class=\"line\"></span><br><span class=\"line\">    print(<span class=\"string\">\"\\nquery.filter_by 类型: \"</span>,type(res1))</span><br><span class=\"line\">    print(<span class=\"string\">\"Index: &#123;&#125;, Name: &#123;&#125;, Gender: &#123;&#125;, Address: &#123;&#125; \\n\"</span>.format(res1.uid, res1.name, res1.gender, res1.address))</span><br><span class=\"line\">    </span><br><span class=\"line\">    print(<span class=\"string\">\"query.filter 类型 : \"</span>,type(res2))</span><br><span class=\"line\">    print(<span class=\"string\">\"all 类型: \\n\"</span>,type(result))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">'User/query.html'</span>,title=<span class=\"string\">\"User query\"</span>,result=result)</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">'Index not found!'</span></span><br><span class=\"line\"></span><br><span class=\"line\"> </span><br><span class=\"line\"> <span class=\"comment\"># 删</span></span><br><span class=\"line\"><span class=\"meta\">@worker.route('/userdelete/')</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">delete_query</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">  obj = User.query.filter_by(name=<span class=\"string\">\"测试人员5\"</span>).first()</span><br><span class=\"line\">  db.session.delete(obj)</span><br><span class=\"line\">  db.session.commit()</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">\"测试人员5 - Delete Success\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\"># 改</span></span><br><span class=\"line\"><span class=\"meta\">@worker.route('/userupdate/')</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">update_user</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">  obj = User.query.filter_by(yearsofwork=<span class=\"number\">3</span>).first()</span><br><span class=\"line\">  obj.name = <span class=\"string\">\"WeiyiGeek\"</span></span><br><span class=\"line\">  obj.address = <span class=\"string\">\"https://weiyigeek.top\"</span> </span><br><span class=\"line\"></span><br><span class=\"line\">  db.session.add(obj)</span><br><span class=\"line\">  db.session.commit();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;script&gt;alert(\"修改成功\");location.href=\"/userget/\"&lt;/script&gt;'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更新所有的数据</span></span><br><span class=\"line\"><span class=\"meta\">@worker.route('/userallupdate/')</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">update_all</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">  obj = User.query.all()</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> obj:</span><br><span class=\"line\">    i.name = <span class=\"string\">\"WeiyiGeek's\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">  db.session.add_all(obj)</span><br><span class=\"line\">  db.session.commit()</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">'&lt;script&gt;alert(\"修改成功\");location.href=\"/userget/\"&lt;/script&gt;'</span></span><br></pre></td></tr></table></figure></p>\n<p>执行结果:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 数据插入</span></span><br><span class=\"line\">http://127.0.0.1:8000/userinsert/</span><br><span class=\"line\"><span class=\"comment\"># Insert User Successful!</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 数据查询</span></span><br><span class=\"line\">http://127.0.0.1:8000/userget/</span><br><span class=\"line\">uid\tname\tgender\tyearsofwork\taddress</span><br><span class=\"line\">1\t测试人员0\t1\t0\t办公位置: 700</span><br><span class=\"line\">2\t测试人员1\t0\t1\t办公位置: 701</span><br><span class=\"line\">3\t测试人员2\t1\t2\t办公位置: 702</span><br><span class=\"line\">4\t测试人员3\t0\t3\t办公位置: 703</span><br><span class=\"line\">5\t测试人员4\t1\t4\t办公位置: 704</span><br><span class=\"line\">6\t测试人员5\t0\t5\t办公位置: 705</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (3) 数据删除</span></span><br><span class=\"line\">http://127.0.0.1:8000/userdelete/</span><br><span class=\"line\">测试人员5 - Delete Success</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (4) 数据更新</span></span><br><span class=\"line\">http://127.0.0.1:8000/userupdate/</span><br><span class=\"line\">http://127.0.0.1:8000/userallupdate/</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/1/20201011173716.png\" alt=\"WeiyiGeek.SQL-Query\" title=\"\" class=\"\">\n                <p>WeiyiGeek.SQL-Query</p>\n            </figure></p>\n<p>帮助文档:</p>\n<p>.net Kubernetes<br><a href=\"https://www.cnblogs.com/cmt/p/12353192.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/cmt/p/12353192.html</a><br><a href=\"https://www.cnblogs.com/dudu/p/12221724.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/dudu/p/12221724.html</a></p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Python3","path":"api/categories/Python3.json"},{"name":"Web开发","path":"api/categories/Web开发.json"}],"tags":[{"name":"Flask","path":"api/tags/Flask.json"}]}