{"title":"Python3爬虫数据清理分析","slug":"编程世界/Python/爬虫学习/Python3爬虫数据清理分析","date":"2019-07-12T06:36:30.000Z","updated":"2022-03-29T05:39:06.297Z","url":"2019/7-12-346.html","path":"api/articles/2019/7-12-346.html.json","covers":["https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190712165825.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h4 id=\"0x00-快速入门\"><a href=\"#0x00-快速入门\" class=\"headerlink\" title=\"0x00 快速入门\"></a>0x00 快速入门</h4><hr>\n\n<h4 id=\"0x01-分析博客提取\"><a href=\"#0x01-分析博客提取\" class=\"headerlink\" title=\"0x01 分析博客提取\"></a>0x01 分析博客提取</h4><p>描述：闲来无事写了一个自己博客的标签云，对于学习爬虫与数据清理还是挺有用的;</p>\n<p>生成词云我们需要用到几个库：<br>pip install numoy matplotlib wordcloud Pillow jieba</p>\n<p>实际案例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># @File : blogWordCloud.py</span></span><br><span class=\"line\"><span class=\"comment\"># @CreateTime : 2019/7/12 14:52</span></span><br><span class=\"line\"><span class=\"comment\"># @Author : WeiyiGeek</span></span><br><span class=\"line\"><span class=\"comment\"># @Function : 实现博客词云图片生成</span></span><br><span class=\"line\"><span class=\"comment\"># @Software: PyCharm</span></span><br><span class=\"line\"></span><br><span class=\"line\">import requests</span><br><span class=\"line\">import jieba</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\">import matplotlib.pyplot as plt</span><br><span class=\"line\">from lxml import etree</span><br><span class=\"line\">from PIL import Image</span><br><span class=\"line\">from wordcloud import WordCloud</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#标题列表</span></span><br><span class=\"line\">titlelist = []</span><br><span class=\"line\"><span class=\"comment\">#词云形状</span></span><br><span class=\"line\">wc_mask_img = <span class=\"string\">'bg.jpg'</span></span><br><span class=\"line\"><span class=\"comment\">#词云字体</span></span><br><span class=\"line\">WC_FONT_PATH = <span class=\"string\">'simhei.ttf'</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def get(url):</span><br><span class=\"line\">    try:</span><br><span class=\"line\">        r = requests.get(url)</span><br><span class=\"line\">    except ConnectionError as e:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"[*] Error = \"</span>+str(e))</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>(0)</span><br><span class=\"line\">    except TimeoutError as e:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"[*] Time = \"</span>+str(e))</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>(1)</span><br><span class=\"line\">    except Exception as e:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">\"[*] Other Error = \"</span> + str(e))</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>(2)</span><br><span class=\"line\">    <span class=\"comment\">#r.raise_for_status()  #等同于上面的异常</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"URL:\"</span>,r.url)</span><br><span class=\"line\">    r.encoding = <span class=\"string\">\"utf-8\"</span>  <span class=\"comment\">#输出内容utf8编码</span></span><br><span class=\"line\">    r.close()  <span class=\"comment\">#关闭requests请求对象</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#解析网页HTM方便进行xpath提取</span></span><br><span class=\"line\">    dom_tree = etree.HTML(r.content)</span><br><span class=\"line\">    <span class=\"comment\">#提取文章标题</span></span><br><span class=\"line\">    title = dom_tree.xpath(<span class=\"string\">\"//div/span[@class='archive-title']/a/text()\"</span>)</span><br><span class=\"line\">    <span class=\"comment\">#遍历标题插入到列表中</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> title:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i == <span class=\"string\">\"无标题\"</span>):</span><br><span class=\"line\">            <span class=\"built_in\">continue</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">\".md\"</span> <span class=\"keyword\">in</span> i:</span><br><span class=\"line\">            i = i.split(<span class=\"string\">\".md\"</span>)[0]</span><br><span class=\"line\">        titlelist.append(i)</span><br><span class=\"line\"></span><br><span class=\"line\">def word():</span><br><span class=\"line\">    <span class=\"comment\">#全局</span></span><br><span class=\"line\">    global titlelist</span><br><span class=\"line\">    titlestring = <span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"comment\">#进行标题拼接</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> title <span class=\"keyword\">in</span> titlelist:</span><br><span class=\"line\">        titlestring += title + <span class=\"string\">\" \"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#对数据进行分词</span></span><br><span class=\"line\">    wordlist = jieba.cut(titlestring,cut_all=True)</span><br><span class=\"line\">    <span class=\"comment\"># wl = \" \".join(wordlist)</span></span><br><span class=\"line\">    <span class=\"comment\"># pprint(wl)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#去重并且将一个单词的进行剔除</span></span><br><span class=\"line\">    titlelist = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> word <span class=\"keyword\">in</span> wordlist:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> word not <span class=\"keyword\">in</span> titlelist and len(word) != 1:</span><br><span class=\"line\">            titlelist.append(word)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">return</span> <span class=\"string\">\" \"</span>.join(titlelist)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def imgcloud():</span><br><span class=\"line\">    <span class=\"string\">\"\"</span><span class=\"string\">\"</span></span><br><span class=\"line\"><span class=\"string\">    生成词云</span></span><br><span class=\"line\"><span class=\"string\">    :return:</span></span><br><span class=\"line\"><span class=\"string\">    \"</span><span class=\"string\">\"\"</span></span><br><span class=\"line\">    <span class=\"comment\">#设置词云形状图片</span></span><br><span class=\"line\">    wc_mask = np.array(Image.open(wc_mask_img))</span><br><span class=\"line\">    wc = WordCloud(background_color=<span class=\"string\">\"white\"</span>,max_words=2000, scale=4,max_font_size=70,mask=wc_mask,random_state=42,font_path=WC_FONT_PATH)</span><br><span class=\"line\">    <span class=\"comment\">#生成词云</span></span><br><span class=\"line\">    wc.generate(word())</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># 在只设置mask的情况下,你将会得到一个拥有图片形状的词云</span></span><br><span class=\"line\">    plt.imshow(wc, interpolation=<span class=\"string\">\"bilinear\"</span>)</span><br><span class=\"line\">    plt.axis(<span class=\"string\">\"off\"</span>)</span><br><span class=\"line\">    plt.figure()</span><br><span class=\"line\">    fig = plt.gcf()</span><br><span class=\"line\">    fig.savefig(<span class=\"string\">\"./blogWordCloud.png\"</span>) <span class=\"comment\">#注意下保存要在show之前</span></span><br><span class=\"line\">    plt.show()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    url = <span class=\"string\">\"http://127.0.0.1:4000/archives/\"</span></span><br><span class=\"line\">    get(url)</span><br><span class=\"line\">    imgcloud()</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190712165825.png\" alt=\"WeiyiGeek.博客词云\" title=\"\" class=\"\">\n                <p>WeiyiGeek.博客词云</p>\n            </figure></p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Development","path":"api/categories/Development.json"},{"name":"Programming","path":"api/categories/Programming.json"}],"tags":[{"name":"Python3","path":"api/tags/Python3.json"}]}