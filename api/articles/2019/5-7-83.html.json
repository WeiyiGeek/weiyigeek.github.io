{"title":"3-MYSQL优化学习基础","slug":"数据存储/Database-运维/MySQL/基础知识/3-MYSQL优化学习基础","date":"2019-05-07T06:34:30.000Z","updated":"2023-01-31T02:29:08.978Z","url":"2019/5-7-83.html","path":"api/articles/2019/5-7-83.html.json","covers":["https://img.weiyigeek.top/2019/20190508130556.png","https://img.weiyigeek.top/2019/20190531225952.png"],"content":"<p>[TOC]<br><a id=\"more\"></a></p>\n<h4 id=\"0x00-MySQL优化案例\"><a href=\"#0x00-MySQL优化案例\" class=\"headerlink\" title=\"0x00 MySQL优化案例\"></a>0x00 MySQL优化案例</h4><p><strong>案例1:优化的起因网站运行缓慢</strong></p>\n<p>数据库优化关注点：</p>\n<ul>\n<li>慢查询语句：show full processlist;</li>\n<li>慢查询语句设置日志文件：long_query_time = 1 、 log-slow-queries = /data/3306/slow.log</li>\n</ul>\n<p>服务器优化实例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#优化原因：服务器负载较高</span></span><br><span class=\"line\"><span class=\"variable\">$uptime</span>  <span class=\"comment\">#top(查看负载性能) 能看见mysqld占用资源比较多</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#登录数据库查看当前慢语句</span></span><br><span class=\"line\">&gt; show processlist <span class=\"comment\">#如果看到大量线程等待，就需要对其优化;</span></span><br><span class=\"line\">&gt; show full processlist;</span><br><span class=\"line\">&gt; show variables like <span class=\"string\">'%profiling%'</span> <span class=\"comment\"># 设置当前配置项为ON ，SQL语句将会在打开 - 连接 - 解析 - 返回结果的时间进行展示；</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#带优化语句 （等号走索引效率最高）</span></span><br><span class=\"line\">select id from userinfo <span class=\"built_in\">where</span> addr=<span class=\"string\">'china'</span> and dataline=<span class=\"string\">'2018-12-17'</span> and count=1024;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看利用索引情况：</span></span><br><span class=\"line\">explain select id from userinfo <span class=\"built_in\">where</span> addr=<span class=\"string\">'china'</span> and dataline=<span class=\"string\">'2018-12-17'</span> and count=1024;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#不给缓存查询 （发现没有走索引）</span></span><br><span class=\"line\">select SQL_NO_CACHE id from userinfo <span class=\"built_in\">where</span> addr=<span class=\"string\">'china'</span> and dataline=<span class=\"string\">'2018-12-17'</span> and count=1024;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看userinfo表结构</span></span><br><span class=\"line\">show create userinfo\\G;  <span class=\"comment\">#只有一个id主键有索引;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看条件字段的唯一性：（重点：唯一值或者在重复值少的列创建索引）</span></span><br><span class=\"line\">select count(distinct addr) from userinfo; <span class=\"comment\">#150 个不重复</span></span><br><span class=\"line\">select count(distinct dataline) from userinfo; <span class=\"comment\">#450 个不重复</span></span><br><span class=\"line\">select count(distinct count) from userinfo; <span class=\"comment\">#410 个不重复</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#解决方法(与研发经理商量进行改进)</span></span><br><span class=\"line\">use user;</span><br><span class=\"line\"><span class=\"comment\">#在三个列上都创建索引</span></span><br><span class=\"line\">create index-adc on userinfo(dataline,addr(20),count(20)); <span class=\"comment\">#创建索引语句</span></span><br><span class=\"line\"><span class=\"comment\">#在生产环境中如果访问频繁的大表，创建索引花费的时间较多，最好在流量低谷的时候建立索引;</span></span><br><span class=\"line\"><span class=\"comment\">#再次查看利用索引情况 (一条语句执行 12次查到)</span></span><br><span class=\"line\">explain select id from userinfo <span class=\"built_in\">where</span> addr=<span class=\"string\">'china'</span> and dataline=<span class=\"string\">'2018-12-17'</span> and count=1024;</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190508130556.png\" alt=\"WeiyiGeek.索引\" title=\"\" class=\"\">\n                <p>WeiyiGeek.索引</p>\n            </figure></p>\n<p>总结：</p>\n<ul>\n<li>当值有重复的列需要在重复值少的列创建索引以增加查询速度;</li>\n</ul>\n<p><br><br><strong>案例2：搜索查询通配符导致慢查询增多</strong><br>如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#这样的语句特别多，导致数据库负载很高，但是对于这样的SQL查询语句MySQL数据库没有太大的优化余地(需要采用其他来支撑);</span><br><span class=\"line\">LIKE &#39;%阿里%&#39;  #注意两个% 通配符,是不走索引的;但是单个通配符还是可能走索引的;</span><br></pre></td></tr></table></figure></p>\n<p><em>优化思路</em>：</p>\n<ul>\n<li>业务上实现登录才能进行查询,保证了自己的核心用户能正常访问,不好就是未注册用户体验不是很好;</li>\n<li>对访问的业务日志进行流量分析/反爬虫可以采用(awstats),发现异常PV则将IP封禁;</li>\n<li>配置多个主从进行读写分离,让查询语句走向从库,减轻主库读写压力;</li>\n<li>在数据库前端加上memcached或者redis这样的缓存服务器;</li>\n<li>通过搜索服务Sphinx实现搜索,让数据库只做简单饿查询服务</li>\n<li>自己开发程序,实现每日读库计算索引,保证在服务器上提供的搜索,然后每5分钟从一个从库做一次增量。</li>\n</ul>\n<p><br></p>\n<h4 id=\"0x01-多种优化方案\"><a href=\"#0x01-多种优化方案\" class=\"headerlink\" title=\"0x01 多种优化方案\"></a>0x01 多种优化方案</h4><p>一个网站最先出现瓶颈的一定是数据库,然后是磁盘IO;<br>Mysql 数据库优化建议：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1) 硬件优化</span><br><span class=\"line\">  a. CPU选型：64位、8~16核</span><br><span class=\"line\">  b. 内存大小：32~128GB</span><br><span class=\"line\">  c. 磁盘大小：性能与分区格式</span><br><span class=\"line\">      性能：ssd(高并发) &gt; sas(普通业务) &gt; SATA(线下)</span><br><span class=\"line\">      Raid4块盘：RAID0 &gt; RAID10 &gt; RAID5 &gt; RAID1</span><br><span class=\"line\">  d. 网卡 多块网卡bound,以及buffer,tcp优化</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">2) 软件优化</span><br><span class=\"line\">  a. OS: x86_64 位系统</span><br><span class=\"line\">  b. Mysql 编译优化</span><br><span class=\"line\"></span><br><span class=\"line\">补充：x86的操作系统由于单进程内存最大4G,所以不管您加多大的内存空间它只使用那么多;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3) 配置文件优化</span><br><span class=\"line\">  注意：my.cnf参数优化幅度较少,大部分以架构和SQL语句优化。</span><br><span class=\"line\">    <span class=\"comment\">#建议不要开启访问的日志，占用系统资源较大</span></span><br><span class=\"line\">    innodb_buffer_pool_size=2048MB  <span class=\"comment\">#一般内存3/4分之一</span></span><br><span class=\"line\">    sort_buffer_size=2M   <span class=\"comment\">#排序缓存，一个线程占用一个，不能太大</span></span><br><span class=\"line\"> 监控：show global status\\G;</span><br><span class=\"line\"> 工具：mysqlreport 性能调优工具</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">4) SQL语句优化</span><br><span class=\"line\">  a. 索引优化</span><br><span class=\"line\">    1.白名单机制-项目开发DBA参与减少业务上线后慢SQL数量</span><br><span class=\"line\">      long_query_time=2   <span class=\"comment\">#慢查询最大2s</span></span><br><span class=\"line\">      <span class=\"built_in\">log</span>-slow-queries=/data/3306/slow-log.log  <span class=\"comment\">#慢查询记录到认证文件</span></span><br><span class=\"line\">    2.慢查询日志分析工具:mysqldumpslow,mysqlsla(推荐),myprofi,mysql-explain-slow-log,mysqllogfilter;</span><br><span class=\"line\">    3.每天0点定时分析慢查询</span><br><span class=\"line\">  b.大的复杂的SQL语句拆分成多个小的SQL语句;</span><br><span class=\"line\">  c.数据库是存储数据的地方,但不是技术数据的地方;</span><br><span class=\"line\">    对于数据计算应用类处理,都有拿到前端应用解决，禁止在数据库上处理;</span><br><span class=\"line\">  d.搜索功能like <span class=\"string\">'%老男孩%'</span>,一般不要用MySQL数据库使用搜索应用sphinx;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">5) 架构优化</span><br><span class=\"line\">  1. 负载均衡,业务拆分,微服务,读写分离,主从同步;</span><br><span class=\"line\">  2. 数据库前端必须加cache例如：memecached,用户登录,商品查询</span><br><span class=\"line\">  3. 业务应用使用nosql持久化存储,例如memcached,redis</span><br><span class=\"line\">  4. 集群的读写分离(dbproxy)</span><br><span class=\"line\">  5. 单表超过2000万,拆库拆表(人工分类：业务来区分);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">6) 流程制度安全优化(参考下面)</span><br><span class=\"line\">  1. 开发人员流程开发保证程序的健壮性,稳定性,安全性,运维人员保证环境服务的优化</span><br><span class=\"line\">  2. 任何一次人为的数据库记录更新都要走一个流程</span><br><span class=\"line\">    a. 人的流程：开发-&gt;核心开发-&gt;运维或者DBA</span><br><span class=\"line\">    b. 测试流程：内网测试(安全、性能)-&gt;IDC测试-&gt;线上执行</span><br><span class=\"line\">    c. 客户端管理:PHPMyAdmin 访问控制/登录权限/开发端口/</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h4 id=\"0x02-数据库安全权限控制思想\"><a href=\"#0x02-数据库安全权限控制思想\" class=\"headerlink\" title=\"0x02 数据库安全权限控制思想\"></a>0x02 数据库安全权限控制思想</h4><p><strong>1. 制度与流程控制</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#1.1 项目开发制度流程</span></span><br><span class=\"line\">- 开发人员开发环境</span><br><span class=\"line\">- 办公测试环境</span><br><span class=\"line\">- IDC测试环境</span><br><span class=\"line\">- IDC正式环境</span><br><span class=\"line\">通过这种较完善的项目开发制度及流程控制,尽可能的防止潜在的问题隐患发生;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#1.2 数据库更新流程</span></span><br><span class=\"line\">- 开发人员提交需求</span><br><span class=\"line\">- 开发主管审核</span><br><span class=\"line\">- 部门领导审核</span><br><span class=\"line\">- DBA(运维)审核</span><br><span class=\"line\">- DBA(运维)执行项目开发制度及流程控制的数据库更新步骤(每个步骤都要测试),最后IDC正式环境执行;</span><br><span class=\"line\">通过完善的数据库更新流程控制,可以防止很多潜在的数据丢失、破坏等问题发生;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#1.3 DBA参与项目数据库设计</span></span><br><span class=\"line\">- 开发环节上DBA或者运维人员最好参与数据库设计与审核工作;</span><br><span class=\"line\">- 从源头上降低不良的数据库设计(权限控制)与不良SQL语句发生(慢查询),减少发生问题的机率;</span><br><span class=\"line\">- 需要评估工作量是否允许,一般互联网公司实施全审核比较困难</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#1.4 操作流程申请</span></span><br><span class=\"line\">- 开发等人员权限申请流程( 账户/库权限 )</span><br><span class=\"line\">- 数据库更新执行流程</span><br><span class=\"line\">- 烂SQL语句计入KPI考核</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#1.5 定期对内部人员培训</span></span><br><span class=\"line\">- 定期给开发及相关人员培训 (从源头上降低不良数据设计及不良SQL语句的发生)</span><br><span class=\"line\">- 通过培训让大家知晓大家数据库性能的重要性,提升开发时照顾数据库性能的意识;</span><br><span class=\"line\">- 数据库设计规范及制度,SQL语句执行优化、性能优化技巧等</span><br><span class=\"line\">- 数据库架构设计等内容</span><br></pre></td></tr></table></figure><br><br></p>\n<p><strong>2. 账号权限控制</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#2.1 内部人员权限分配</span></span><br><span class=\"line\">- 权限申请流程要设置规范/合理/让需求不明确者知难而退</span><br><span class=\"line\">- 办公开发与测试环境可以开放权限,但是在IDC测试与正式环境要严格控制数据库读写权限</span><br><span class=\"line\">- 开发人员正式数据库权限分配规则,给不对外的从服务器的只读权限,不能分配线上正式主库写权限;</span><br><span class=\"line\">- 上级领导的账号密码一定要严格,以及提醒操作注意事项</span><br><span class=\"line\">- 特殊账号(all privliges)有DBA或者高级运行人员管理</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#2.2 web业务账号权限分配</span></span><br><span class=\"line\">- 写账号默认权限为select/insert/update/delete,不要给建表改表(create,alter)等的权限,更不能all权限</span><br><span class=\"line\">- 读库账号默认权限为select(配合mysql参数<span class=\"built_in\">read</span>-only使用),确保从库对所有非super权限是只读的</span><br><span class=\"line\">- 设立专库专账号，非root权限</span><br><span class=\"line\">- 站库一定要分离(一定、一定),且连接数据库按照IP或者网段来授权</span><br><span class=\"line\">- 安全和业务有时是有一定的矛盾的,需要达到一个较好的平衡状态</span><br></pre></td></tr></table></figure><br><br></p>\n<p><strong>3.数据库客户访问控制</strong></p>\n<ul>\n<li>系统层面控制(系统安全、系统运维权限管控)</li>\n<li>更改mysql数据库的默认端与phpMyadmin管理端口</li>\n<li>限制登录数据库的机器或者ip段建议采用堡垒机、VPN到内网机器中进行管理数据库(有记录非常重要)</li>\n<li>不做公网域名解析,使用本机的host实现访问(限制任何IP直接访问)或者用内部IP访问</li>\n<li>phpMyAdmin站点目录独立于所有其他站点根目录外,只能由指定域名和ip地址访问</li>\n<li>限制从web连接的账号管理数据库的权限并且,根据开发者角色分配指定账号访问</li>\n<li>监控数据库账号登录/与web应用部署,监测到异常后进行预警,防止开发人员上传phpMyadmin等数据库管理程序</li>\n</ul>\n<p><br><br><strong>4.数据库运维管理思想核心</strong></p>\n<ul>\n<li>未雨绸缪(制定应急预案、应急演练)</li>\n<li>亡羊补牢,举一反三(当发生安全事件时候,对于业务区域的所有的机器进行排查)</li>\n<li>完备的架构设计及备份/恢复策略(容灾)</li>\n<li>定期思考并实战模拟以上策略</li>\n</ul>\n<hr>\n\n<h4 id=\"0x03-Mysql索引优化基本要点\"><a href=\"#0x03-Mysql索引优化基本要点\" class=\"headerlink\" title=\"0x03 Mysql索引优化基本要点\"></a>0x03 Mysql索引优化基本要点</h4><p><strong>什么是索引？</strong><br>答：索引就是用来提高数据库性能的重要工具或者手段,简单的说索引就像书籍的目录一样,通过索引可以快速找到需要的书的内容;</p>\n<p><strong>索引的原理?</strong><br>答：索引是建立了针对于数据内容的排序结果的指针,根据指针快速定位所要的数据；(像书的目录一样,直接找到对应位置)</p>\n<p><strong>索引的设计原则</strong>：</p>\n<ul>\n<li>索引列一般为where子句中的列或连接字句中的列;<ul>\n<li>select * from user where uid=’10886’;</li>\n</ul>\n</li>\n<li>尽量不对于基数小的列做索引（唯一值多的列）：如sex性别列(为什么？)</li>\n<li>尽量使用短索引：如果对字符列索引尽量指定最小长度<ul>\n<li>create index cityname on city(city(10));  /<strong> 对city列的前10个字符 </strong>/</li>\n</ul>\n</li>\n<li>复合索引的前缀特性,索引的顺便非常重要，在创建符合索引时应将最常用作为限制条件列放在最左边，依次递减;<ul>\n<li>key(a,b,c) … where b=5 will not use index;</li>\n<li>key(a,b,c)联合索引的组合：key(a),key(a,b),key(a,b,c),而下面的组合无法走索引key(b),key(b,c),key(a,c)</li>\n<li>注意事项：避免出现无用的索引(很少或者从未被调用的),INNODB尽量指定主键,最常用较短数据类型唯一列作为主键;尽量使用定长字符char而不使用varchar类型;</li>\n</ul>\n</li>\n<li>避免过度使用索引,索引不是越多越好;<ul>\n<li>1.索引的建立对提高检索能力很有用,但是数据库维护它也很费资源;</li>\n<li>2.对性别列索引被称为过度索引;</li>\n<li>3.索引会占用磁盘空间，降低更新操作性能,</li>\n<li>4.行数比较小的行不建议创建索引;</li>\n</ul>\n</li>\n</ul>\n<p><strong>创建索引的方式</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1.</span></span><br><span class=\"line\">create index index_uid on student(uid);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2.</span></span><br><span class=\"line\">alter table student add index index_sage(sage);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例3.</span></span><br><span class=\"line\">create table `Suser` (</span><br><span class=\"line\">  `Sname` varchar(16) NOT NULL COMMENT <span class=\"string\">'学生姓名'</span>,</span><br><span class=\"line\">  KEY `ind_sname` (Sname),</span><br><span class=\"line\">  KEY `ind_mutil` (Sname,Saddr(4)), <span class=\"comment\">#创建的复合索引及Saddr前4个字符</span></span><br><span class=\"line\">) ENGINE=InnoDB DEFAULT CHARSET=utf8</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#查看索引</span></span><br><span class=\"line\">show index from student;</span><br><span class=\"line\">show create table cdb_threads\\G;</span><br><span class=\"line\"><span class=\"comment\">#删除索引</span></span><br><span class=\"line\">DROP INDEX index_name on student;</span><br></pre></td></tr></table></figure></p>\n<p><strong>如何查看索引建立后的效果?</strong><br>答：使用expain语法查看索引利用情况,并且建立索引后线程查找是非常快速的;<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">explain</span> <span class=\"keyword\">select</span> <span class=\"keyword\">id</span> <span class=\"keyword\">from</span> <span class=\"keyword\">test</span> <span class=\"keyword\">where</span> addr=<span class=\"string\">\"CQ\"</span> <span class=\"keyword\">and</span> dateline=<span class=\"string\">'20190503'</span>;</span><br><span class=\"line\"><span class=\"comment\">#查看KEY列进行查看是不是走了索引;</span></span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190531225952.png\" alt=\"WeiyiGeek.explain查看\" title=\"\" class=\"\">\n                <p>WeiyiGeek.explain查看</p>\n            </figure></p>\n<p>补充：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#问题1:查看不是suthorid列内容不同的行,越大建立索引效果越好</span></span><br><span class=\"line\">select count(distinct authorld) from cdb_threads;  <span class=\"comment\">#查看列唯一值的格式</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#问题2：SQL优化后测试,不使用缓存测试：</span></span><br><span class=\"line\">select SQL_NO_CACHE * from uc_memeber <span class=\"built_in\">where</span> email=<span class=\"string\">'le1345'</span>;</span><br></pre></td></tr></table></figure></p>\n<p><br><br>MYSQL数据库使用索引的条件：</p>\n<ul>\n<li>MySQL(BTREE)使用索引的比较条件：除了大于小于等于还要BETWEEN,IN,!= 或者 &lt;&gt;, like ‘xx%’;</li>\n<li>索引的列不包含NULL值如果包含该列将不会使用索引,如果在数据设计时候不要让建立索引的字段默认值为NULL;</li>\n<li>列类型是字符串要在where条件中把字符串值用括号括起来</li>\n<li>用or分割开的条件,or前条件又索引,后面的列无索引那么涉及的索引都不会被用到;</li>\n<li>不要再列上进行运算(否则导致索引失效而全表扫描)</li>\n<li>不使用NOT IN 和 &lt;&gt; 操作,可以使用NOT EXISTS 与 id &gt; 3 or id &lt; 4 来代替</li>\n<li>在where和ORDER BY使用相同的索引,并且ORDER BY 的顺序和索引的顺序相同,并且ORDER BY 字段都是升序或者降低的情况才会使用索引;</li>\n</ul>\n","comments":true,"excerpt":"[TOC]<br>","categories":[{"name":"Database","path":"api/categories/Database.json"},{"name":"DBA","path":"api/categories/DBA.json"}],"tags":[{"name":"MYSQL","path":"api/tags/MYSQL.json"}]}