{"title":"命令帮助类基础命令","slug":"系统运维/Linux/常用命令/命令帮助类命令/命令帮助类基础命令","date":"2019-05-31T11:35:30.000Z","updated":"2022-03-29T05:39:06.308Z","url":"2019/5-31-145.html","path":"api/articles/2019/5-31-145.html.json","covers":["https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190531163539.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190531163742.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190531165323.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190531164839.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190531165949.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190531171013.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190531171759.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190531172042.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190531172320.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190531172822.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h4 id=\"0x00-快速入门\"><a href=\"#0x00-快速入门\" class=\"headerlink\" title=\"0x00 快速入门\"></a>0x00 快速入门</h4><p><a href=\"http://man.linuxde.net\" target=\"_blank\" rel=\"noopener\">运维Linux命令大全</a></p>\n<p>常用命令缩写<br>缩写 | 全称 | 说明<br>— | — | —<br>apt | Advanced Packaging Tool | 是Debian Linux发行版中的APT软件包管理工具。一般配合apt-get或者apt-update<br>awk | Aho Weiberger and Kernighan | Alfred Aho，Peter Weinberger, 和 Brian Kernighan 的Family Name的首字符。一种编程语言，用于在linux/unix下对文本和数据进行处理。<br>bash | Bourne Again SHell | 一种shell<br>bg | BackGround | 用于将作业放到后台运行，使前台可以执行其他任务。该命令的运行效果与在指令后面添加符号&amp;的效果是相同的，都是将其放到系统后台执行。<br>cal | CALendar | 用于显示当前日历，或者指定日期的日历。<br>cat | CATenate | “连接”，连接文件并打印到标准输出设备上，cat经常用来显示文件的内容，类似于下的type命令。<br>chgrp | CHange GRouP | 用来改变文件或目录所属的用户组。<br>chmod | CHange MODe | 用来变更文件或目录的权限。<br>chown | CHange OWNer | 改变某个文件或目录的所有者和所属的组，该命令可以向某个用户授权，使该用户变成指定文件的所有者或者改变文件所属的组。<br>cd | Change Directory | 切换工作目录<br>cp | CoPy | 将一个或多个源文件或者目录复制到指定的目的文件或目录<br>dd | Data Description | 用于复制文件并对原文件的内容进行转换和格式化处理。<br>df | Disk Free | 用于显示磁盘分区上的可使用的磁盘空间。默认显示单位为KB。<br>du | Disk Usage | 查看使用空间的，但是与df命令不同的是Linux du命令是对文件和目录磁盘使用的空间的查看，还是和df命令有一些区别的。<br>diff | DIFFerence | 在最简单的情况下，比较给定的两个文件的不同。<br>dpkg | Debian PacKaGe | Debian Linux系统用来安装、创建和管理软件包的实用工具。<br>ed | EDitor | 单行纯文本编辑器，它有命令模式（command mode）和输入模式（input mode）两种工作模式。<br>emacs |  Editor MACroS | 是由GNU组织的创始人Richard Stallman开发的一个功能强大的全屏文本编辑器，它支持多种编程语言，具有很多优良的特性。(备注：vim大法好！！！)<br>env | ENVironment | 用于显示系统中已存在的环境变量，以及在定义的环境中执行指令。<br>exec | EXECute | 用于调用并执行指令的命令。<br>fsck | File System Consistency checK, or fuck | 用于检查并且试图修复文件系统中的错误。<br>gawk | Gnu Aho Weiberger and Kernighan |<br>grep | Gnu Regular Expression Print | （global search regular expression(RE) and print out the line，全面搜索正则表达式并把行打印出来）是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。<br>grub | GRand Unified Bootloader | 多重引导程序grub的命令行shell工具。<br>ifconfig | InterFace CONFIGuration | 被用于配置和显示Linux内核中网络接口的网络参数。<br>init | INITialization | Linux下的进程初始化工具<br>insmod | INStall Module | 用于将给定的模块加载到内核中。<br>ln | LiNk | 用来为文件创件连接，连接类型分为硬连接和符号连接两种，默认的连接类型是硬连接。如果要创建符号连接必须使用”-s”选项。<br>ls | LiSt | 显示目标列表<br>lsmod | LiSt Module | 用于显示已经加载到内核中的模块的状态信息。<br>man | MANual | Linux下的帮助指令，通过man指令可以查看Linux中的指令帮助、配置文件帮助和编程帮助等信息。一般戏称有问题找男人。。。<br>mkdir | MaKe DIRectory | 创建目录<br>mkfs | MaKe FileSystem | 用于在设备上（通常为硬盘）创建Linux文件系统。<br>mv | MoVe | 对文件或目录重新命名，或者将文件从一个目录移到另一个目录中。<br>nano | Nano’s ANOther editor | 是一个字符终端的文本编辑器，有点像DOS下的editor程序。<br>parted | PARTition EDitor | 是由GNU组织开发的一款功能强大的磁盘分区和分区大小调整工具，与fdisk不同，它支持调整分区的大小。<br>passwd | PASSWorD | 用于设置用户的认证信息，包括用户密码、密码过期时间等。<br>ping | Packet InterNet Grouper | 用来测试主机之间网络的连通性。执行ping指令会使用ICMP传输协议，发出要求回应的信息，若远端主机的网络功能没有问题，就会回应该信息，因而得知该主机运作正常。<br>popd | POP from Directory | 删除目录栈中的记录；<br>pushd | PUSH to Directory | 是将目录加入命令堆叠中。<br>ps | Processes Status | 报告当前系统的进程状态。可以搭配kill指令随时中断、删除不必要的程序。<br>pwd | Print Working Directory | 以绝对路径的方式显示用户当前工作目录<br>rcconf | Run Command CONFiguration | Debian Linux下的运行等级服务配置工具，用以设置在特定的运行等级下系统服务的启动配置。<br>rm | ReMove | 可以删除一个目录中的一个或多个文件或目录，也可以将某个目录及其下属的所有文件及其子目录均删除掉。对于链接文件，只是删除整个链接文件，而原有文件保持不变。<br>rmdir | ReMove DIRectory | 用来删除空目录。<br>rmmod | ReMove MODule | 用于从当前运行的内核中移除指定的内核模块。<br>rpm | RPM/Redhat Package Manager | RPM软件包的管理工具。<br>sed | Stream EDitor | 一种流编辑器，它是文本处理中非常中的工具，能够完美的配合正则表达式使用，功能不同凡响。<br>ssh | Secure SHell | openssh套件中的客户端连接工具，可以给予ssh加密协议实现安全的远程登录服务器。<br>su | Substitute User | “替代用户”，切换当前用户身份到其他用户身份，变更时须输入所要变更的用户帐号与密码。<br>sudo | SuperUser DO | 用来以其他身份来执行命令，预设的身份为root。<br>sync | SYNChronize | 用于强制被改变的内容立刻写入磁盘，更新超块信息。<br>vim | vi Improved | 是UNIX操作系统和类UNIX操作系统中最通用的全屏幕纯文本编辑器。Linux中的vi编辑器叫vim，它是vi的增强版（vi Improved），与vi编辑器完全兼容，而且实现了很多增强功能。(备注：神一样的编辑器！！！)<br>yum | Yellow dog Updater, Modified | 在Fedora和RedHat以及SUSE中基于rpm的软件包管理器</p>\n<p><br></p>\n<p>递归缩写<br>缩写 | 全称 | 说明<br>— | — | —<br>GNU | Gnu is Not Unix |<br>PHP    | PHP: Hypertext Preprocessor |<br>RPM    | RPM Package Manager |<br>WINE | WINE Is Not an Emulator | Wine 是类UNIX系统下运行微软Windows程序的”兼容层”。在Wine中运行的Windows程序，就如同运行原生Linux程序一样，不会有模拟器那样的性能问题。<br>PNG    | PNG’s Not GIF |<br>nano | Nano’s ANOther editor |</p>\n<p><strong>命令执行顺序：</strong><br>1.执行用绝对路径或相对路径执行的命令<br>2.执行别名命令<br>3.执行BASH的内部命令<br>4.执行按照$PATH环境变量定义的目录查找顺序找到第一个命令</p>\n<hr>\n<h4 id=\"man-命令-查看命令的帮助文档\"><a href=\"#man-命令-查看命令的帮助文档\" class=\"headerlink\" title=\"man 命令 - 查看命令的帮助文档\"></a>man 命令 - 查看命令的帮助文档</h4><p>描述：这个man是manual(操作说明)的简写，让使用者更加方便的使用该命令, 在所有的 Unix 系统当中都可以利用 man 来查询命令或者是相关文件的用法;</p>\n<p><strong>Syntax&amp;Param:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#基础语法</span></span><br><span class=\"line\">man [option] [级别] 命令</span><br><span class=\"line\">-f ：查看命令拥有哪个级别的帮助等同于whatis 命令</span><br><span class=\"line\">-k : 查看所有包含关键字的命令 命令等于apropos 关键字</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#内容级别</span></span><br><span class=\"line\">1.查看命令的帮助</span><br><span class=\"line\">2.查看可被内核调用的函数的帮助</span><br><span class=\"line\">3.查看函数和函数库(`大部分为C的函数库`)的帮助</span><br><span class=\"line\">4.查看特殊文件的帮助（主要是/dev目录下的文件）</span><br><span class=\"line\">5.查看配置文件或者是某些文件格式的帮助</span><br><span class=\"line\">6.查看游戏的帮助</span><br><span class=\"line\">7.查看其他杂项(惯例与协议)的帮助</span><br><span class=\"line\">8.查看系统管理员可用命令的帮助</span><br><span class=\"line\">9.查看和内核相关文件的帮助</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Man page 的内容部分说明(根据内容等级不同而存在不同):</span></span><br><span class=\"line\">- 0.命令(内容等级)</span><br><span class=\"line\">- 1.NAME   -  简短的命令、数据名称说明</span><br><span class=\"line\">- 2.SYNOPSIS   -  简短的命令执行语法(Syntax)简介</span><br><span class=\"line\">- 3.DESCRIPTION  -  较为完整的说明</span><br><span class=\"line\">- 4.OPTIONS   -  针对SYSNOPSIS部分的补充即选项参数</span><br><span class=\"line\">- 5.COMMANDS  - 在该程序软件在执行时候可以在此程序软件中执行的命令</span><br><span class=\"line\">- 6.FILES  -  程序或者数据所使用或参考或连接到的某些配置文件</span><br><span class=\"line\">- 7.ENVIRONMENT  -  命令相关的环境参数</span><br><span class=\"line\">- 8.AUTHOR   -  命令的作者</span><br><span class=\"line\">- 9.REPORTING BUGS   -  请留言</span><br><span class=\"line\">- 10.COPYRIGHT    -   公司版权说明</span><br><span class=\"line\">- 11.SEE ALSO   -  该命令相关或者数据有相关的其它说明</span><br><span class=\"line\">- 12.EXAMPLE  - 参考范例</span><br><span class=\"line\">- 13.BUGS  - 相关错误</span><br></pre></td></tr></table></figure></p>\n<p>PS : 上述帮助命令等级中1/5/8三个号码非常重要也是我们最常遇到的;<br>PS : 帮助文档存放目录通常在<code>/usr/share/man</code>该目录中，可以通过修改/etc/man.conf来更改设置;<br>PS : man page功能按键说明:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">空格键 : 向下翻一页</span><br><span class=\"line\">PageDown : 向下翻一页</span><br><span class=\"line\">PageUp : 向上翻一页</span><br><span class=\"line\">Home : 去到第一页</span><br><span class=\"line\">End : 去到最后一页</span><br><span class=\"line\">/string : 向下查询string字符串</span><br><span class=\"line\">?string :向上查询string字符串</span><br><span class=\"line\">n,N : 根据 / 与 ? 查找模式的不同而不同前者是下一个而后者则是向前查询对于n来说，而N则相反;</span><br><span class=\"line\">q : 退出man帮助</span><br></pre></td></tr></table></figure></p>\n<p><strong>基础命令示例:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1.查看该命令有哪些运行级别</span></span><br><span class=\"line\"><span class=\"variable\">$man</span> -f passwd</span><br><span class=\"line\"><span class=\"variable\">$whatis</span> passwd</span><br><span class=\"line\">passwd (1)           - update user<span class=\"string\">'s authentication tokens'</span></span><br><span class=\"line\">sslpasswd (1ssl)     - compute password hashes</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2. 该命令的关键字查看</span></span><br><span class=\"line\"><span class=\"variable\">$man</span> -k passwd</span><br><span class=\"line\"><span class=\"variable\">$apropos</span> passwd</span><br><span class=\"line\"><span class=\"comment\">#Apropos适当地，adj. 恰好的；适当的 adv. ，恰好地；适当地；恰当地 ，prep. 关于</span></span><br><span class=\"line\">checkPasswdAccess (3) - query the SELinux policy database <span class=\"keyword\">in</span> the kernel</span><br><span class=\"line\">chpasswd (8)         - update passwords <span class=\"keyword\">in</span> batch mode</span><br><span class=\"line\">gpasswd (1)          - administer /etc/group and /etc/gshadow</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例3.利用命令级别1进入查看命令文件数据</span></span><br><span class=\"line\"><span class=\"variable\">$man</span> 1 passwd</span><br><span class=\"line\">PASSWD(1)   User utilities  PASSWD(1)</span><br><span class=\"line\">NAME</span><br><span class=\"line\">    passwd - update user<span class=\"string\">'s authentication tokens</span></span><br><span class=\"line\"><span class=\"string\">SYNOPSIS</span></span><br><span class=\"line\"><span class=\"string\">       passwd  [-k]  [-l]  [-u  [-f]]  [-d] [-e] [-n mindays] [-x maxdays] [-w</span></span><br><span class=\"line\"><span class=\"string\">       warndays] [-i inactivedays] [-S] [--stdin] [username]</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190531163539.png\" alt=\"WeiyiGeek.分节说明\" title=\"\" class=\"\">\n                <p>WeiyiGeek.分节说明</p>\n            </figure>\n<p><br></p>\n<h4 id=\"info-命令-在线的帮助文档命令\"><a href=\"#info-命令-在线的帮助文档命令\" class=\"headerlink\" title=\"info 命令 - 在线的帮助文档命令\"></a>info 命令 - 在线的帮助文档命令</h4><p>描述：基本上info与man的用途其实差不多都是用来查询命令的用法或者是文件的格式,简单的说在UNIX LIKE 系统中可以利用man来查询命令或者是相关文件的用法，但是在Linux里面又提供一种额外的方式即在线求助方式就是info命令;<br>PS: info page的文件放置到/usr/share/info/目录中。<br>区别：</p>\n<ul>\n<li>但是与man page一口气输出一堆信息不同的是，info page则是将文件数据拆成一个一个的段落每个段落用自己的页面来撰写</li>\n<li>并且在各个页面中还有类似网页的『超链接』来跳到各不同的页面中，每个独立的页面也被称为一个节点(node)。</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190531163742.png\" alt=\"WeiyiGeek.文件相关性\" title=\"\" class=\"\">\n                <p>WeiyiGeek.文件相关性</p>\n            </figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#基础语法</span></span><br><span class=\"line\">info [命令]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#快捷键</span></span><br><span class=\"line\">空格：向下翻一页</span><br><span class=\"line\">tab：在node之间移动,node通常以*显示</span><br><span class=\"line\">enter：当光标在node上面时候可以使用回车键进入类似于a标签</span><br><span class=\"line\">b：移动光标到该info画面中的第一个node处</span><br><span class=\"line\">e：移动光标到该info画面当中的最后一个node处</span><br><span class=\"line\">n：进入下一个帮助小节</span><br><span class=\"line\">p：进入上一个帮助小节</span><br><span class=\"line\">u：向上移动一层</span><br><span class=\"line\">s(/) : 搜寻字符</span><br><span class=\"line\">H : 帮助命令</span><br><span class=\"line\">? : 命令一览表</span><br><span class=\"line\">q：<span class=\"built_in\">exit</span></span><br></pre></td></tr></table></figure>\n<p>补充说明：</p>\n<ul>\n<li>File：代表这个info page的数据是来自info.info文件所提供的；</li>\n<li>Node：代表目前的这个页面是属于Top节点。 意思是info.info内含有很多信息，而Top仅是info.info文件内的一个节点内容而已；</li>\n<li>Next：下一个节点的名称为Getting Started，你也可以按『N』到下个节点去；</li>\n<li>Up：回到上一层的节点总揽画面，你也可以按下『U』回到上一层；</li>\n<li>Prev：前一个节点。但由于Top是info.info的第一个节点，所以上面没有前<br>节点信息：<br>『Menu』底下共分为四小节，分别是Getting Started等等的，我们可以使用上下左右按键来将光标移动到该文字或者『 * 』上面，按下Enter， 就可以前往该小节了！另外也可以按下[Tab]按键，就可以快速的将光标在上表的画面中的node间移动</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190531165323.png\" alt=\"WeiyiGeek.tab切换\" title=\"\" class=\"\">\n                <p>WeiyiGeek.tab切换</p>\n            </figure>\n<p>基础语法:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1.Linux在线帮助命令以及字符串的查找</span></span><br><span class=\"line\">info passwd</span><br><span class=\"line\">/date <span class=\"comment\">#查询相关字符</span></span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190531164839.png\" alt=\"WeiyiGeek.搜索快捷键\" title=\"\" class=\"\">\n                <p>WeiyiGeek.搜索快捷键</p>\n            </figure></p>\n<p><br></p>\n<h4 id=\"help-命令\"><a href=\"#help-命令\" class=\"headerlink\" title=\"help 命令\"></a>help 命令</h4><p>描述：获取内部命令帮助的命令<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">help</span> 内部命令   <span class=\"comment\">#获取内部命令</span></span><br><span class=\"line\">ls --<span class=\"built_in\">help</span>     <span class=\"comment\">#这是选项命令</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例1.</span></span><br><span class=\"line\"><span class=\"variable\">$help</span> <span class=\"built_in\">cd</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span>: <span class=\"built_in\">cd</span> [-L|[-P [-e]]] [dir]</span><br><span class=\"line\">    Change the shell working directory.</span><br><span class=\"line\">    Change the current directory to DIR.  The default DIR is the value of the</span><br><span class=\"line\">    HOME shell variable.</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h4 id=\"whereis-命令\"><a href=\"#whereis-命令\" class=\"headerlink\" title=\"whereis 命令\"></a>whereis 命令</h4><p>描述：查询命令的可执行路径与帮助文件<br>特点：whereis查找的速度非常快,这是因为linux系统会将系统内的所有文件都记录在一个数据库文件中，当使用whereis和下面即将介绍的locate时，会从数据库中查找数据，而不是像find命令那样，通 过遍历硬盘来查找，效率自然会很高。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#语法：</span></span><br><span class=\"line\">whereis【选项】命令名     //只有外来命令才能查询</span><br><span class=\"line\"><span class=\"comment\">#参数:</span></span><br><span class=\"line\">-b 只查找可执行文件</span><br><span class=\"line\">-m 只查找帮助文件</span><br><span class=\"line\">-s 只查找源<span class=\"built_in\">source</span>的文件</span><br><span class=\"line\">-u 查询费上面三种情况的文件</span><br></pre></td></tr></table></figure>\n<p>基础实例:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1.</span></span><br><span class=\"line\"><span class=\"variable\">$whereis</span> ls</span><br><span class=\"line\">ls: /usr/bin/ls /usr/share/man/man1/ls.1.gz /usr/share/man/man1p/ls.1p.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2.</span></span><br><span class=\"line\"><span class=\"variable\">$whereis</span> nmap      </span><br><span class=\"line\"><span class=\"variable\">$whereis</span> -b namp     <span class=\"comment\">#查找nmap二进制的执行文件</span></span><br><span class=\"line\">ls: /usr/share/namp/bin/</span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190531165949.png\" alt=\"WeiyiGeek.示例截图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.示例截图</p>\n            </figure>\n<p><br> </p>\n<h4 id=\"history-命令\"><a href=\"#history-命令\" class=\"headerlink\" title=\"history 命令\"></a>history 命令</h4><p>描述：查看当前用户的历史命令执行,历史命令默认会保存1000条，可以在环境变量配置文件/etc/profile中进行修改HISTSIZE与history格式;</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">history</span> 【选项】【历史命令保存文件】</span><br><span class=\"line\"><span class=\"comment\">#选项</span></span><br><span class=\"line\">-c 清空历史命令</span><br><span class=\"line\">-w 把缓存中的历史命令写入历史命令保存文件~/.bash_history</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#历史命令的调用：</span></span><br><span class=\"line\">1.使用上下箭头调用以前的历史命令</span><br><span class=\"line\">2.使用!n重复执行第n条命令</span><br><span class=\"line\">3.使用!!重复执行上一条命令</span><br><span class=\"line\">4.使用!字串重复执行最后一条以该字串开头的命令</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例1.在通过history里面执行的上一个相似命令（来执行）</span></span><br><span class=\"line\">$!a</span><br><span class=\"line\"><span class=\"built_in\">alias</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> egrep=<span class=\"string\">'egrep --color=auto'</span></span><br></pre></td></tr></table></figure>\n<p>history环境变量补充：(重点)<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># grep -n \"^HISTSIZE\" /etc/profile</span></span><br><span class=\"line\">46:HISTSIZE=1000</span><br><span class=\"line\">47:HISTTIMEFORMAT=<span class=\"string\">\"%F %T\"</span>  <span class=\"comment\">#记录中带上了命令执行时间</span></span><br><span class=\"line\"><span class=\"comment\"># 1105  2019-08-01 16:49:03 history</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#比如登陆过系统的用户、IP地址、操作命令以及操作时间--对应可以通过在/etc/profile里面加入以下代码实现</span></span><br><span class=\"line\">47:HISTTIMEFORMAT=<span class=\"string\">\"%F %T <span class=\"variable\">$(whoami)</span>#<span class=\"variable\">$(who -u am i 2&gt;/dev/null| awk '&#123;print $NF&#125;'|sed -e 's/[()</span>]//g') : \"</span></span><br><span class=\"line\"><span class=\"comment\"># 134  2019-08-01 17:01:26 192.168.1.88 root # history</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h4 id=\"alias-命令\"><a href=\"#alias-命令\" class=\"headerlink\" title=\"alias 命令\"></a>alias 命令</h4><p>描述：建立命令的别名,提供一种便捷的方式完成某些长串命令操作;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例0.查看已存在的别名</span></span><br><span class=\"line\"><span class=\"variable\">$alias</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> egrep=<span class=\"string\">'egrep --color=auto'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> fgrep=<span class=\"string\">'fgrep --color=auto'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> grep=<span class=\"string\">'grep --color=auto'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> l.=<span class=\"string\">'ls -d .* --color=auto'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> ll=<span class=\"string\">'ls -l --color=auto'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> ls=<span class=\"string\">'ls --color=auto'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> <span class=\"built_in\">which</span>=<span class=\"string\">'alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde'</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例1.使用nginxrestart这个命令来代替/usr/local/webserver/nginx/sbin/nginx -s reload</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> nginxrestart=<span class=\"string\">'/usr/local/webserver/nginx/sbin/nginx -s reload'</span>  <span class=\"comment\">#临时生效,重启后失效</span></span><br><span class=\"line\"><span class=\"comment\">#需要将它放入~/.bashrc文件中,永久生效</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">'alias nginxrestart=\"/usr/local/webserver/nginx/sbin/nginx -s reload\"'</span> &gt;&gt; ~/.bashrc </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2.例如:当我们将文件扩展名 pdf 定义成 zathura 后缀别名后，直接执行 pdf 文件名，就会调用zathura 打开该 pdf 文件(默认打开程序)</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> -s pdf=zathura  <span class=\"comment\">#相当于Win中扩展关联</span></span><br><span class=\"line\">linux_study.pdf  <span class=\"comment\">#来代替执行 zathuracheat_sheet_ssh_v4.pdf</span></span><br></pre></td></tr></table></figure></p>\n<p>修改配置文件：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$vi</span> ~/.bashrc <span class=\"comment\">#写入环境变量配置文件 (可以对单个用户、也是可以全局通用的，只不过全局通用要在/etc/bashrc设置)</span></span><br><span class=\"line\"><span class=\"comment\">#alias 别名='原命令' 设定命令的别名</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> rm=<span class=\"string\">'rm -i'</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> ll=<span class=\"string\">'ls -l'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#alias别名设置立即生效，不用重启OS</span></span><br><span class=\"line\"><span class=\"variable\">$source</span> ~/.bashrc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#别名转义</span></span><br><span class=\"line\">有些命令不是总是希望使用别名，可以在命令之前输入反斜杠\\来忽略所定义过的别名</span><br><span class=\"line\">$\\<span class=\"built_in\">command</span></span><br><span class=\"line\">$\\ll</span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190531171013.png\" alt=\"WeiyiGeek.别名转义\" title=\"\" class=\"\">\n                <p>WeiyiGeek.别名转义</p>\n            </figure>\n<p><br></p>\n<h4 id=\"unalias-命令\"><a href=\"#unalias-命令\" class=\"headerlink\" title=\"unalias 命令\"></a>unalias 命令</h4><p>描述：unalias 临时删除别名<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">unalias</span>：用法:<span class=\"built_in\">unalias</span> [-a] 名称 [名称 ...]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例1.移除指定别名</span></span><br><span class=\"line\"><span class=\"built_in\">unalias</span> lll</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2.选项 -a 是取消全部的临时命令</span></span><br><span class=\"line\"><span class=\"built_in\">unalias</span> -a</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h4 id=\"which-命令-脚本文件名路径查询\"><a href=\"#which-命令-脚本文件名路径查询\" class=\"headerlink\" title=\"which 命令 -  脚本文件名路径查询\"></a>which 命令 -  脚本文件名路径查询</h4><p>描述：可以查看别名信息,cd命令是shell自带的找不到，whereis和which能找到的都是后来安装的命令;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">which</span> [-a] 命令名</span><br><span class=\"line\"><span class=\"comment\"># 参数</span></span><br><span class=\"line\">-a : 将所有由PATH目录中可以找到的命令均列出而不是第一个被找到的命令名称;</span><br></pre></td></tr></table></figure></p>\n<p>简单实例:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; <span class=\"built_in\">which</span> ls</span><br><span class=\"line\">ls: aliased to ls --color=tty</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; <span class=\"built_in\">which</span> -a ls</span><br><span class=\"line\">ls: aliased to ls --color=tty</span><br><span class=\"line\">/usr/bin/ls</span><br><span class=\"line\">/bin/ls</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h4 id=\"source-命令\"><a href=\"#source-命令\" class=\"headerlink\" title=\"source 命令\"></a>source 命令</h4><p>作用：可以强行让一个脚本去立即影响当前的环境，会强制执行脚本中的全部命令,而忽略文件的权限。</p>\n<ul>\n<li>通常用于重新执行刚修改的初始化文件，如 .bash_profile 和 .profile 等等。</li>\n<li>source 命令可以影响执行脚本的父shell的环境，而 export 则只能影响其子shell的环境</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#bash shell 的内置命令，从 C Shell 而来，另一种写法是点符号</span></span><br><span class=\"line\">root@fe70803be29a:~<span class=\"comment\"># source /etc/profile</span></span><br><span class=\"line\">root@fe70803be29a:~<span class=\"comment\"># . /etc/profile</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例1.无执行权限任然可以执行</span></span><br><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">a=<span class=\"string\">\"hi\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$a</span></span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190531171759.png\" alt=\"WeiyiGeek.无权限执行\" title=\"\" class=\"\">\n                <p>WeiyiGeek.无权限执行</p>\n            </figure>\n<p>source补充:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#souce只能更改影响当前执行脚本的权限，不能影响该脚本中引用的其他脚本，其他脚本里面得变量也不能影响file2的输出;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#### 案例1 ####</span></span><br><span class=\"line\"><span class=\"comment\">#file1 有执行权限</span></span><br><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">a=hi.boy</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"`dirname <span class=\"variable\">$0</span>` <span class=\"variable\">$a</span>\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#file2 无权限执行</span></span><br><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">./file1        <span class=\"comment\">#将会另起进程(如果这时file1没有权限便不会被运行)</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$a</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#### 案例2 ####</span></span><br><span class=\"line\"><span class=\"comment\">#但是下面这种情况就比较特殊，就不会出现上面那种问题</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#file1 无执行权限</span></span><br><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">a=<span class=\"string\">\"hello_world\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$a</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#file2</span></span><br><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">. ./file1</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"variable\">$a</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190531172042.png\" alt=\"WeiyiGeek.shell调用有权限\" title=\"\" class=\"\">\n                <p>WeiyiGeek.shell调用有权限</p>\n            </figure>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190531172320.png\" alt=\"WeiyiGeek.shell调用无权限\" title=\"\" class=\"\">\n                <p>WeiyiGeek.shell调用无权限</p>\n            </figure>\n<p><br></p>\n<p><em>为什么在shell脚本里面用export设置环境变量之后，当shell执行完了，用set命令看不到呢？</em><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1.</span></span><br><span class=\"line\"><span class=\"variable\">$export</span> AA=123456</span><br><span class=\"line\">[root@izwz9biz2m4sd3bb3k38pgz /]<span class=\"comment\"># set | grep \"AA\"</span></span><br><span class=\"line\">AA=123456</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2.运行后set里面不存在AAA环境变量</span></span><br><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> AAA=123345</span><br></pre></td></tr></table></figure><br>原因：当我们执行test.sh的时候，是当前终端所在的shell fork一个子shell然后执行test.sh的，执行完了再返回终端所在的shell。<br>我们在test.sh设置了AA环境变量，它只在fork出来的这个子shell中生效，子shell只能继承父shell的环境变量，而不能修改父shell的环境变量，所以test.sh结束后，父进程的环境就覆盖回去，所以在test.sh之后完之后，我们用set命令是看不了AA这个环境变量的值的。</p>\n<p><em>那有什么办法可以让脚本的环境变量在脚本执行之后仍然对当前终端存在呢？</em><br>答：用sorcue 或者.(dot) ，明确告诉shell不要fork执行脚本，而是在当前的shell执行，这样环境变量就可以保存下来了。<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190531172822.png\" alt=\"WeiyiGeek.source特殊利用\" title=\"\" class=\"\">\n                <p>WeiyiGeek.source特殊利用</p>\n            </figure></p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Linux命令","path":"api/categories/Linux命令.json"}],"tags":[{"name":"命令帮助类","path":"api/tags/命令帮助类.json"}]}