{"title":"Tomcat常见问题合集记录","slug":"系统运维/Application/Web/WebApp/Tomcat/3.Tomcat常见问题合集记录","date":"2019-09-02T05:34:30.000Z","updated":"2021-08-04T08:43:40.319Z","url":"2019/9-2-129.html","path":"api/articles/2019/9-2-129.html.json","covers":null,"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h2 id=\"问题0-Tomcat指定Java版本运行\"><a href=\"#问题0-Tomcat指定Java版本运行\" class=\"headerlink\" title=\"问题0.Tomcat指定Java版本运行\"></a>问题0.Tomcat指定Java版本运行</h2><p>解决方法:在Tomcat里的bin中的setclasspath.bat或者setclasspath.sh开头添加设置环境变量；<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Windows ： Tomcat/bin/setclasspath.bat</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> JAVA_HOME = C:\\JAVA\\JDK8</span><br><span class=\"line\"><span class=\"built_in\">set</span> JRE_HOME  = C:\\JAVA\\JDK8\\JRE</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Linux:Tomcat/bin/setclasspath.sh</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> JAVA_HOME=/home/jdk/Java/jdk7/jdk1.7.0_51</span><br><span class=\"line\"><span class=\"built_in\">export</span> JRE_HOME=/home/jdk/Java/jdk7/jre7</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h2 id=\"问题1-Tomcat控制台中文乱码\"><a href=\"#问题1-Tomcat控制台中文乱码\" class=\"headerlink\" title=\"问题1.Tomcat控制台中文乱码\"></a>问题1.Tomcat控制台中文乱码</h2><p>解决办法:打开你的Tomcat安装目录，接着编辑子目录conf下的文件logging.properties;<br>相对路径是：<code>Tomcat/conf/logging.properties</code><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#将文件中下列：</span></span><br><span class=\"line\">1catalina.org.apache.juli.AsyncFileHandler.encoding = utf-8</span><br><span class=\"line\">2localhost.org.apache.juli.AsyncFileHandler.encoding = utf-8</span><br><span class=\"line\">java.util.logging.ConsoleHandler.encoding = utf-8</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#中utf-8改为GBK后保存：</span></span><br><span class=\"line\">java.util.logging.ConsoleHandler.encoding = GBK</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h2 id=\"问题2-Tomcat启动时候警告在清除过期缓存条目后可用空间仍不足-请考虑增加缓存的最大空间\"><a href=\"#问题2-Tomcat启动时候警告在清除过期缓存条目后可用空间仍不足-请考虑增加缓存的最大空间\" class=\"headerlink\" title=\"问题2.Tomcat启动时候警告在清除过期缓存条目后可用空间仍不足 - 请考虑增加缓存的最大空间\"></a>问题2.Tomcat启动时候警告在清除过期缓存条目后可用空间仍不足 - 请考虑增加缓存的最大空间</h2><p>问题描述:启动时候报这样的警告:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">警告 [main] org.apache.catalina.webresources.Cache.getResource</span><br><span class=\"line\">无法将位于[/WEB-INF/classes/templates/framework/<span class=\"built_in\">help</span>/helpinfo.html]的资源添加到Web应用程序[/zhfx]的缓存中，</span><br><span class=\"line\">因为在清除过期缓存条目后可用空间仍不足 - 请考虑增加缓存的最大空间。</span><br></pre></td></tr></table></figure><br>解决办法： 在 <code>/conf/context.xml</code>的 <code>&lt;/Context&gt;</code> 前添加以下内容（大小默认是1024，单位是KB）：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Resources</span> <span class=\"attr\">cachingAllowed</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">cacheMaxSize</span>=<span class=\"string\">\"100000\"</span> /&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h2 id=\"问题3-Tomcat如何在启动时候设置JVM参数\"><a href=\"#问题3-Tomcat如何在启动时候设置JVM参数\" class=\"headerlink\" title=\"问题3.Tomcat如何在启动时候设置JVM参数\"></a>问题3.Tomcat如何在启动时候设置JVM参数</h2><p>解决方法:在 <code>bin\\catalina.bat</code> 文件打开并且在262行左右，set JPDA= 下面一行添加如下:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> JAVA_OPTS=-Xms1024m -Xmx2048m -XX:PermSize=256M -XX:MaxNewSize=500m -XX:MaxPermSize=500m -Djava.awt.headless=<span class=\"literal\">true</span> -XX:+PrintGCDetails</span><br></pre></td></tr></table></figure></p>\n<p>参数解释：</p>\n<ul>\n<li>-Xms表示JVM Heap(堆内存)最小尺寸128MB，初始分配</li>\n<li>-Xmx表示JVM Heap(堆内存)最大允许的尺寸256MB，按需分配</li>\n<li>PermSize和MaxPermSize指明虚拟机为java永久生成对象（Permanate generation）</li>\n<li>如，class对象、方法对象这些可反射（reflective）对象分配内存限制，这些内存不包括在Heap（堆内存）区之中</li>\n<li>NewSize/MaxNewSize：定义YOUNG段的尺寸，</li>\n<li>NewSize为JVM启动时YOUNG的内存大小（young内存为堆中的新生代，保存刚实列化的对象）；</li>\n<li>MaxNewSize为最大可占用的YOUNG内存大小。</li>\n</ul>\n<p><br></p>\n<h2 id=\"问题4-Tomcat中利用war包部署避免访问路径必须加上项目名称\"><a href=\"#问题4-Tomcat中利用war包部署避免访问路径必须加上项目名称\" class=\"headerlink\" title=\"问题4.Tomcat中利用war包部署避免访问路径必须加上项目名称\"></a>问题4.Tomcat中利用war包部署避免访问路径必须加上项目名称</h2><p>问题描述:当我们打包好一个Springboot项目导出message.war并且进行导入的部署，这时在tomcat中的Webapp多了一个message应用，我们去浏览器上进行访问测试输入URL，如：<code>http://localhost:8012/message/login</code>，如果此时不想带有message目录就可以采用在Server.xml进行Context标签配置;</p>\n<p>解决方法:<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 注意这里要在host元素下添加，而path指访问的url直接是项目地址--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Context</span> <span class=\"attr\">docBase</span>=<span class=\"string\">\"D:/apache-tomcat-8.5.38/webapps/message\"</span> <span class=\"attr\">path</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">reloadable</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">crossContext</span>=<span class=\"string\">\"true\"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h2 id=\"问题5-Tomcat如果进行注册为windows服务进行自启动\"><a href=\"#问题5-Tomcat如果进行注册为windows服务进行自启动\" class=\"headerlink\" title=\"问题5.Tomcat如果进行注册为windows服务进行自启动\"></a>问题5.Tomcat如果进行注册为windows服务进行自启动</h2><p>描述:打开cmd窗口<code>window10用户记得用管理员权限打开</code>，进入tomcat下名的bin目录查看service.bat文件是否存在<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#输入命令 </span></span><br><span class=\"line\">service.bat install  <span class=\"string\">'服务名'</span>;</span><br><span class=\"line\">services.msc   <span class=\"comment\">#看服务管理器，看是否添加好了</span></span><br></pre></td></tr></table></figure><br>如果添加好了的话进入属性设置为自动 （避免宕机时可以重新启动），此时在bin目录下启动tomcat9.exe 点击启动ok；</p>\n<p><br></p>\n<h2 id=\"问题6-Tomcat关闭日志输出\"><a href=\"#问题6-Tomcat关闭日志输出\" class=\"headerlink\" title=\"问题6.Tomcat关闭日志输出\"></a>问题6.Tomcat关闭日志输出</h2><p>描述:在部署Tomcat后运行久了catalina.out会越来越大，对系统的稳定造成了一定的影响;可以通过以下方式进行屏蔽掉该部分的日志信息;</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 方式1.修改bin/catalina.sh / bat</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -z <span class=\"string\">\"<span class=\"variable\">$CATALINA_OUT</span>\"</span> ] ; <span class=\"keyword\">then</span>  </span><br><span class=\"line\">　　CATALINA_OUT=<span class=\"string\">\"<span class=\"variable\">$CATALINA_BASE</span>\"</span>/logs/catalina.out  </span><br><span class=\"line\">    CATALINA_OUT=/dev/null</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方式2.修改conf/logging.properties日志配置文件</span></span><br><span class=\"line\"><span class=\"comment\"># 将level级别设置成WARNING就可以大量减少日志的输出，当然也可以设置成OFF，直接禁用掉。</span></span><br><span class=\"line\"><span class=\"variable\">$cat</span> /apps/tomcat0/conf/logging.properties </span><br><span class=\"line\">1catalina.org.apache.juli.FileHandler.level = OFF</span><br><span class=\"line\">1catalina.org.apache.juli.FileHandler.directory = <span class=\"variable\">$&#123;catalina.base&#125;</span>/logs</span><br><span class=\"line\">1catalina.org.apache.juli.FileHandler.prefix = catalina.</span><br><span class=\"line\"></span><br><span class=\"line\">2localhost.org.apache.juli.FileHandler.level = OFF</span><br><span class=\"line\">2localhost.org.apache.juli.FileHandler.directory = <span class=\"variable\">$&#123;catalina.base&#125;</span>/logs</span><br><span class=\"line\">2localhost.org.apache.juli.FileHandler.prefix = localhost.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.关闭localhost_access_log日志修改conf/server.xml文件将AccessLogValve注释掉</span></span><br><span class=\"line\">&lt;Host name=<span class=\"string\">\"61.1.2.3\"</span>  appBase=<span class=\"string\">\"\"</span></span><br><span class=\"line\">unpackWARs=<span class=\"string\">\"true\"</span> autoDeploy=<span class=\"string\">\"true\"</span></span><br><span class=\"line\">xmlValidation=<span class=\"string\">\"false\"</span> xmlNamespaceAware=<span class=\"string\">\"false\"</span>&gt;</span><br><span class=\"line\">&lt;Logger className=<span class=\"string\">\"org.apache.catalina.logger.FileLogger\"</span> prefix=<span class=\"string\">\"localhost_log.\"</span> suffix=<span class=\"string\">\".txt\"</span> timestamp=<span class=\"string\">\"true\"</span>/&gt;</span><br><span class=\"line\">&lt;Valve className=<span class=\"string\">\"org.apache.catalina.valves.AccessLogValve\"</span> fileDateFormat=<span class=\"string\">\"yyyy-MM-dd\"</span> pattern=<span class=\"string\">\"%&#123;X_FORWARDED_FOR&#125;i %h %l %u$</span></span><br><span class=\"line\"><span class=\"string\">&lt;Valve className=\"</span>org.apache.catalina.valves.RemoteAddrValve<span class=\"string\">\" deny=\"</span>127.0.0.1<span class=\"string\">\"/&gt;</span></span><br><span class=\"line\"><span class=\"string\">&lt;/Host&gt;</span></span><br></pre></td></tr></table></figure>\n<p><br></p>\n<h3 id=\"7-Tomcat-版本默认字符编码导致应用参数日志乱码问题\"><a href=\"#7-Tomcat-版本默认字符编码导致应用参数日志乱码问题\" class=\"headerlink\" title=\"7.Tomcat 版本默认字符编码导致应用参数日志乱码问题\"></a>7.Tomcat 版本默认字符编码导致应用参数日志乱码问题</h3><p>描述:最近将Windows Server上的应用需要移植到Docker之中, 由于Tomcat版本问题在应用进行参数传递时候发生乱码;<br>原因:Tomcat7及以前默认采用iso-8859-1编码而Tomcat8以后版本对字符的默认编码格式是UTF-8;<br>解决办法:</p>\n<ul>\n<li>方法1:配置server.xml文件Connector元素参数<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi conf/server.xml</span><br><span class=\"line\">&lt;Connector port=<span class=\"string\">\"8080\"</span>  protocol=<span class=\"string\">\"HTTP/1.1\"</span> connectionTimeout=<span class=\"string\">\"20000\"</span> redirectPort=<span class=\"string\">\"8443\"</span> URIEncoding=<span class=\"string\">\"UTF-8\"</span> useBodyEncodingForURI=<span class=\"string\">\"true\"</span>/&gt;</span><br><span class=\"line\"><span class=\"comment\"># 参数说明:</span></span><br><span class=\"line\">URIEncoding 属性将该属性值设置为UTF-8，即可让Tomcat（默认ISO-8859-1编码）以UTF-8的编码处理请求参数。</span><br><span class=\"line\">useBodyEncodingForURI=<span class=\"string\">\"true\"</span> 属性是指请求参数的编码方式采用请求体的编码方式，，若请求体采用UTF-8解析，则请求参数也要采用UTF-8来解析</span><br></pre></td></tr></table></figure></li>\n<li>方法2:修改应用Servlet编码转换<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Post</span></span><br><span class=\"line\">request.setCharacterEncoding(<span class=\"string\">\"UTF-8\"</span>);</span><br><span class=\"line\"><span class=\"comment\"># Get</span></span><br><span class=\"line\">new String(username.getBytes(<span class=\"string\">\"ISO-8859-1\"</span>),<span class=\"string\">\"UTF-8\"</span>);  <span class=\"comment\">#先反向解码然后再用UTF-8编码</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br></p>\n<h3 id=\"8-Docker构建Tomcat镜像运行时挂载应用注意事项\"><a href=\"#8-Docker构建Tomcat镜像运行时挂载应用注意事项\" class=\"headerlink\" title=\"8.Docker构建Tomcat镜像运行时挂载应用注意事项;\"></a>8.Docker构建Tomcat镜像运行时挂载应用注意事项;</h3><p>描述:常规的使用将宿主机webapps目录直接挂载至容器的webapps并且启动容器后发现非ROOT.war解压运行后访问404;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d -p 8080:8080 -v /HMK/helloword/webapps:/usr/tomcat/webapps --name tomcat jamtur01/tomcat</span><br></pre></td></tr></table></figure><br>解决办法:使用-v参数将war包挂载至容器内的 tomcat/webapps目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d -p 8080:8080 -v /HMK/helloword/webapps/HelloWorld.war:/usr/tomcat/webapps/HelloWorld.war --name tomcat jamtur01/tomcat</span><br><span class=\"line\"><span class=\"comment\"># 注意: -v /HMK/helloword/webapps/HelloWorld.war:/usr/tomcat/webapps/HelloWorld.war，这里是挂载的单个文件</span></span><br></pre></td></tr></table></figure></p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"SystemOperation","path":"api/categories/SystemOperation.json"}],"tags":[{"name":"Tomcat","path":"api/tags/Tomcat.json"}]}