{"title":"用户查询操作权限命令","slug":"系统运维/Linux/常用命令/用户权限类命令/用户查询操作命令","date":"2019-06-06T12:35:30.000Z","updated":"2023-01-31T02:29:09.189Z","url":"2019/6-6-159.html","path":"api/articles/2019/6-6-159.html.json","covers":["https://img.weiyigeek.top/2019/20190606114932.png","https://img.weiyigeek.top/2019/20190606115139.png","https://img.weiyigeek.top/2019/20190606115803.png","https://img.weiyigeek.top/2019/20190606123544.png","https://img.weiyigeek.top/2019/20190606112821.png","https://img.weiyigeek.top/2019/20190606113448.png","https://img.weiyigeek.top/2019/20190606112224.png","https://img.weiyigeek.top/2019/20190606125340.png","https://img.weiyigeek.top/2019/20190625154505.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h2 id=\"0x00-快速入门\"><a href=\"#0x00-快速入门\" class=\"headerlink\" title=\"0x00 快速入门\"></a>0x00 快速入门</h2><p><em>重要知识点：用户和用户组的概念？</em></p>\n<ul>\n<li>用户 user：使用操作系统的人</li>\n<li>用户组 user group：操作系统中具有相同系统权限的一组用户</li>\n</ul>\n<p><em>Linux 用户管理查看的主要文件目录和用途</em></p>\n<ol>\n<li><p>/etc/passwd 存储当前系统中所有用户的信息</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$cat</span> /etc/passwd</span><br><span class=\"line\">getent passwd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#基本格式a:b:c:d:e:f:g：</span></span><br><span class=\"line\">a是用户名:b是密码占位符:c是用户编号:d是用户组编号:e是用户注释信息:f是用户主目录:g是shell类型</span><br><span class=\"line\">root:x:0:0:root:/root:/bin/bash</span><br></pre></td></tr></table></figure>\n<p><br></p>\n</li>\n<li><p>/etc/shadow 存储当前系统中所有用户的密码信息</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$cat</span> /etc/shadow</span><br><span class=\"line\">getent shadow</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#基本格式a:b:c:d:e:f:g：</span></span><br><span class=\"line\">Srcweb:<span class=\"variable\">$6</span><span class=\"variable\">$uamdgp</span>/v<span class=\"variable\">$Uv</span>.mmE42Dka/sHqj3eZTdmZndIqTtzOVyLeYzeMlpVtsVntMeafXnJgTaD4G/XM4zM37lNCTKau5q6x7RMDWn.:17098:0:99999:7:::</span><br><span class=\"line\">root:<span class=\"variable\">$6</span><span class=\"variable\">$C88LCVx5ZjfBU7xv</span><span class=\"variable\">$cKcdyNeTFmOYTs9NbRZDTA4hGcbMXc</span>/5hQEWZKCtNyLqlBagrjct.pMfs39iEaF1UbEvcOzWZHMDf9Q5KojXM1::0:99999:7:::</span><br><span class=\"line\"></span><br><span class=\"line\">:a 是用户名</span><br><span class=\"line\">:b 是用户登录密码单向加密分为三个部分，第一部分是表示使用哪种哈希算法(`<span class=\"variable\">$1</span>表示MD5 ; <span class=\"variable\">$6</span> 表示SHA-512 ;  <span class=\"variable\">$5</span> SHA-256`)；第二部分是用于加密哈希的salt;第三部分是已加密的哈希;</span><br><span class=\"line\">:c 上次更改密码的日期（从1970-1-1开始）</span><br><span class=\"line\">:d 最短密码期限（按天计算，0 = 无最短期限）</span><br><span class=\"line\">:e 最长密码期限（按天计算）</span><br><span class=\"line\">:f 密码警告期限（按天计算，0 = 未指定警告）</span><br><span class=\"line\"></span><br><span class=\"line\">:g 密码非活动期限（按天计算）</span><br><span class=\"line\">:h 账号到期时间（从1970-1-1开始）</span><br><span class=\"line\">:i 保留域</span><br></pre></td></tr></table></figure>\n<p><br></p>\n</li>\n<li>/etc/group 存储当前系统中所有用户组信息<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/group </span><br><span class=\"line\">getent group</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#基本格式a:b:c:d</span></span><br><span class=\"line\">root:x:0:root,roottest</span><br><span class=\"line\">a是组名称；b是组密码占位符；c是组编号；d是组中用户名列表，为空不代表没有用户，当这个组内只要一个用户，且用户名和组名相同时是可以省略的</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#需要注意以下几点：</span></span><br><span class=\"line\">root用户组的组号一定为0，如<span class=\"string\">'root:x:0:'</span></span><br><span class=\"line\">组号1-499是预留给系统软件和服务的，如安装了MySQL，会自动创建一个MySQL用户组，越早安装的软件和服务，组号越小</span><br><span class=\"line\">用户手动创建的用户组编号是从500开始的</span><br><span class=\"line\">主密码占位符无一例外全都是用x来表示的，这与系统安全演变有关，后面课程会提</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><br></p>\n<ol start=\"4\">\n<li>/etc/gshadow 存储当前系统中用户组的密码信息<br>Tips:原先只有group和passwd两个文件，但后来考虑到安全性问题就又演变出shadow和gshadow两个文件<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/gshadow</span><br><span class=\"line\">getent gshadow</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#基本格式a:b:c:d：</span></span><br><span class=\"line\">Srcweb:!::</span><br><span class=\"line\">a是组名称:b是组密码:c是组管理者:d是组中用户名列表</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><br></p>\n<h2 id=\"0x01-用户信息查看\"><a href=\"#0x01-用户信息查看\" class=\"headerlink\" title=\"0x01 用户信息查看\"></a>0x01 用户信息查看</h2><h3 id=\"getent-命令-从名称服务开关库获取条目\"><a href=\"#getent-命令-从名称服务开关库获取条目\" class=\"headerlink\" title=\"getent 命令 - 从名称服务开关库获取条目\"></a>getent 命令 - 从名称服务开关库获取条目</h3><p>描述：用来察看系统的数据库中的相关记录,比如passwd 、 shadow、 group<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 用法：</span></span><br><span class=\"line\"> getent [选项...] 数据库 [键 ...]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 参数：</span></span><br><span class=\"line\">-s, --service=CONFIG <span class=\"comment\"># 要使用的服务配置</span></span><br><span class=\"line\">-s database:service, --service database:service</span><br><span class=\"line\">-i, --no-idn <span class=\"comment\"># Disables IDN encoding in lookups</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 支持的数据库：</span></span><br><span class=\"line\">ahosts ahostsv4 ahostsv6 aliases ethers hosts networks netgroup protocols rpc services</span><br><span class=\"line\">passwd shadow group gshadow</span><br></pre></td></tr></table></figure></p>\n<p>使用示例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看所有账户与指定账户</span></span><br><span class=\"line\">getent passwd root <span class=\"comment\">#等同于执行 cat /etc/passwd</span></span><br><span class=\"line\">getent group <span class=\"comment\"># 查看所有用户组</span></span><br><span class=\"line\">root:x:0:0:root:/root:/bin/bash</span><br><span class=\"line\">root:x:0:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2.同理也可查询密码文件</span></span><br><span class=\"line\">getent shadow       </span><br><span class=\"line\">getent gshadow</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例3. 同理也可查询用户别名</span></span><br><span class=\"line\">getent aliases</span><br><span class=\"line\">mailer-daemon:  postmaster</span><br><span class=\"line\">postmaster:     root</span><br><span class=\"line\">bin:            root</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例4.查询端口与服务</span></span><br><span class=\"line\">getent services | more  <span class=\"comment\"># 等同于  cat /etc/services | more</span></span><br><span class=\"line\">getent services ftp</span><br><span class=\"line\">ftp             21/tcp</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例5.查看协议数据库</span></span><br><span class=\"line\">getent protocols tcp</span><br><span class=\"line\">tcp                   6 TCP</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"whoami-命令\"><a href=\"#whoami-命令\" class=\"headerlink\" title=\"whoami 命令\"></a>whoami 命令</h3><p>描述：显示当前shell中运行的用户，Linux上WINDOWS上都支持该命令;<br>使用案例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">whoami      <span class=\"comment\">#显示当前登录用户名</span></span><br><span class=\"line\"><span class=\"comment\">#whoami /all #显示当前计算机所有的用户 - windows 下 echo %username%   #采用系统变量也能看见</span></span><br><span class=\"line\"><span class=\"variable\">$whoami</span></span><br><span class=\"line\">root</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$echo</span> <span class=\"variable\">$USER</span></span><br><span class=\"line\">root</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"id-命令\"><a href=\"#id-命令\" class=\"headerlink\" title=\"id 命令\"></a>id 命令</h3><p>描述:显示指定用户信息，包括用户编号和用户名；主要组编号及名称，附属组列表<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id【用户名】</span><br><span class=\"line\"><span class=\"comment\"># id</span></span><br><span class=\"line\">uid=0(root) gid=0(root) groups=0(root)</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"w-命令\"><a href=\"#w-命令\" class=\"headerlink\" title=\"w 命令\"></a>w 命令</h3><p>描述：用于显示已经登陆系统的用户列表，并显示用户正在执行的指令，读取的是wtmp<br>执行这个命令可得知目前登入系统的用户有那些人，以及他们正在执行的程序。单独执行w命令会显示所有的用户，您也可指定用户名称，仅显示某位用户的相关信息。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-h：不打印头信息</span><br><span class=\"line\">-u：当显示当前进程和cpu实际式忽略用户名</span><br><span class=\"line\">-s：使用断输出格式</span><br><span class=\"line\">-d：输出用户从哪里登陆</span><br></pre></td></tr></table></figure></p>\n<p>实际案例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1.w用户解释</span></span><br><span class=\"line\"><span class=\"variable\">$w</span> 用户名 （不加用户名也可以）</span><br><span class=\"line\">11:45:28 up 23 days, 12:31,  2 users,  load average: 0.00, 0.01, 0.05</span><br><span class=\"line\">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class=\"line\">root     pts/0    102.17.8.29    09:26    1:54m  0.27s  0.27s -bash</span><br><span class=\"line\"><span class=\"comment\">#命令输出：</span></span><br><span class=\"line\">USER：登录的用户名</span><br><span class=\"line\">TTY： 登录终端</span><br><span class=\"line\">FROM：从哪个IP地址登录</span><br><span class=\"line\">LOGIN@：登录时间</span><br><span class=\"line\">IDLE：用户闲置时间</span><br><span class=\"line\">JCPU：指的是该终端连接的所有进程占用的时间。这个时间里并不包括过去的后台作业时间，但却包括当前正在运行的后台作业所占用的时间</span><br><span class=\"line\">PCPU：是指当前进程所占用的时间</span><br><span class=\"line\">WHAT：当前正在运行的命令</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190606114932.png\" alt=\"WeiyiGeek.w命令\" title=\"\" class=\"\">\n                <p>WeiyiGeek.w命令</p>\n            </figure></p>\n<p><br></p>\n<h3 id=\"who-命令\"><a href=\"#who-命令\" class=\"headerlink\" title=\"who 命令\"></a>who 命令</h3><p>描述：是显示目前登录系统的用户信息，who 用户名和w一样，只不过更简单（不加用户名也可以）<br>执行who命令可得知目前有那些用户登入系统，单独执行who命令会列出登入帐号，使用的终端机，登入时间以及从何处登入或正在使用哪个X显示器<br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190606115139.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p>实际案例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1.基础示例</span></span><br><span class=\"line\"><span class=\"variable\">$who</span></span><br><span class=\"line\">root     pts/0        2019-06-06 09:26 (22.17.8.229)</span><br><span class=\"line\">-用户名</span><br><span class=\"line\">-登录终端</span><br><span class=\"line\">-登录时间（登录来源IP地址）</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2.参数数据</span></span><br><span class=\"line\"><span class=\"variable\">$who</span> -q      <span class=\"comment\">#统计用户登录个数</span></span><br><span class=\"line\">root root</span><br><span class=\"line\"><span class=\"comment\"># users=2</span></span><br><span class=\"line\"><span class=\"variable\">$who</span> -w</span><br><span class=\"line\">root     + pts/0        2019-06-06 09:26 (192.168.1.120)  <span class=\"comment\">#显示 pid 的pts/1（终端线路）</span></span><br><span class=\"line\">root     + pts/1        2019-06-06 10:51 (192.168.1.120)</span><br><span class=\"line\"><span class=\"variable\">$who</span> -H</span><br><span class=\"line\">NAME     LINE         TIME             COMMENT</span><br><span class=\"line\">root     pts/0        2019-06-06 09:26 (192.168.1.120)</span><br><span class=\"line\">root     pts/1        2019-06-06 10:51 (192.168.1.120)</span><br><span class=\"line\"><span class=\"variable\">$who</span> -u   <span class=\"comment\">#显示当前 ssh 连接的 PID</span></span><br><span class=\"line\">root     pts/0        2019-06-06 09:26 02:02       11496 (192.168.1.120)</span><br><span class=\"line\">root     pts/1        2019-06-06 10:51   .         16408 (192.168.1.120)</span><br><span class=\"line\"><span class=\"variable\">$who</span> -r    <span class=\"comment\">#显示 pid 的pts/1（终端线路）</span></span><br><span class=\"line\">         run-level 3  2019-05-13 23:14</span><br><span class=\"line\"><span class=\"variable\">$who</span> -H</span><br><span class=\"line\">NAME     LINE         TIME             COMMENT</span><br><span class=\"line\">root     pts/0        2018-10-08 18:56 (218.201.8.36)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#当前终端信息</span></span><br><span class=\"line\"><span class=\"variable\">$who</span> -u am i</span><br><span class=\"line\">root     pts/1        Aug  1 16:55   .          9974 (192.168.1.88)</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"last-命令\"><a href=\"#last-命令\" class=\"headerlink\" title=\"last 命令\"></a>last 命令</h3><p>描述：查看过去所有用户的开关机重启信息，默认是读取cat /var/log/wtmp文件数据，这是一个二进制文件防止人为修改<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 语法:</span></span><br><span class=\"line\">last(选项)(参数)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 命令输出：</span></span><br><span class=\"line\">-用户名</span><br><span class=\"line\">-登录终端</span><br><span class=\"line\">-登录IP</span><br><span class=\"line\">-登录时间</span><br><span class=\"line\">-退出时间（在线时间）</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190606115803.png\" alt=\"WeiyiGeek.参数\" title=\"\" class=\"\">\n                <p>WeiyiGeek.参数</p>\n            </figure></p>\n<p>实际案例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1.常用示例使用查看</span></span><br><span class=\"line\">last -10（-n） 查看最近10条记录</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2.查看指定记录</span></span><br><span class=\"line\">last -x reboot 查看重启的记录</span><br><span class=\"line\">last -x shutdown 查看关机的记录</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$last</span> -d <span class=\"comment\">#查看登陆的记录</span></span><br><span class=\"line\">root     pts/0        192.168.1.120    Thu Jun  6 12:34   still logged <span class=\"keyword\">in</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例3.last打开wtmp文件</span></span><br><span class=\"line\">last -f wtmp <span class=\"comment\">#用last命令查看wtmp文件（直接打开无法查看）</span></span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190606123544.png\" alt=\"WeiyiGeek.示例\" title=\"\" class=\"\">\n                <p>WeiyiGeek.示例</p>\n            </figure></p>\n<p><br></p>\n<h3 id=\"lastb-命令\"><a href=\"#lastb-命令\" class=\"headerlink\" title=\"lastb 命令\"></a>lastb 命令</h3><p>描述：lastb命令用于显示用户错误的登录列表，此指令可以发现系统的登录异常，本质就是将/var/log/btmp文件格式化输出。<br><em>Tips:</em> 使用ssh的登录失败不会记录在btmp文件中</p>\n<p>案例示例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1.查看root用户登陆失败记录</span></span><br><span class=\"line\">lastb name（root） 查看root用户登陆失败记录</span><br><span class=\"line\"><span class=\"variable\">$lastb</span> admin</span><br><span class=\"line\">admin    ssh:notty    113.172.26.33    Thu Jun  6 04:06 - 04:06  (00:00)</span><br><span class=\"line\">admin    ssh:notty    197.55.205.215   Wed Jun  5 14:28 - 14:28  (00:00)</span><br><span class=\"line\">admin    ssh:notty    14.46.201.194    Wed Jun  5 00:50 - 00:50  (00:00)</span><br><span class=\"line\">admin    ssh:notty    212.108.136.97   Tue Jun  4 11:10 - 11:10  (00:00)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">lastb -10（-n） 查看最近10条登陆失败记录</span><br><span class=\"line\"><span class=\"variable\">$lastb</span> -10   <span class=\"comment\">#常常是被爆破了</span></span><br><span class=\"line\">admin    ssh:notty    113.172.26.33    Thu Jun  6 04:06 - 04:06  (00:00)</span><br><span class=\"line\">admin    ssh:notty    197.55.205.215   Wed Jun  5 14:28 - 14:28  (00:00)</span><br><span class=\"line\">root     ssh:notty    139.224.31.106   Wed Jun  5 11:00 - 11:00  (00:00)</span><br><span class=\"line\">admin    ssh:notty    14.46.201.194    Wed Jun  5 00:50 - 00:50  (00:00)</span><br><span class=\"line\">admin    ssh:notty    212.108.136.97   Tue Jun  4 11:10 - 11:10  (00:00)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"lastlog-命令\"><a href=\"#lastlog-命令\" class=\"headerlink\" title=\"lastlog 命令\"></a>lastlog 命令</h3><p>描述：查看所有用户的最后一次登录信息,lastlog默认读取” /var/log/lastlog “文件数据（Bin）</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#查看用户的的登录情况</span></span><br><span class=\"line\"><span class=\"variable\">$lastlog</span> -u root</span><br><span class=\"line\">root             pts/0    192.168.1.120    Thu Jun  6 12:34:07 +0800 2019</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$lastlog</span> -u admin</span><br><span class=\"line\">Username         Port     From             Latest</span><br><span class=\"line\">admin            pts/0    120.78.45.59     Sun May 19 22:10:15 +0800 2019</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<h3 id=\"lslogins-命令\"><a href=\"#lslogins-命令\" class=\"headerlink\" title=\"lslogins 命令\"></a>lslogins 命令</h3><p>描述:列出当前已经登录的用户信息<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$lslogins</span></span><br><span class=\"line\">UID USER            PROC PWD-LOCK PWD-DENY  LAST-LOGIN GECOS</span><br><span class=\"line\">0 root             126        0        0    14:30:25 root</span><br><span class=\"line\">1 bin                0        0        1             bin</span><br><span class=\"line\">2 daemon             0        0        1             daemon</span><br><span class=\"line\">3 adm                0        0        1             adm</span><br><span class=\"line\">4 lp                 0        0        1             lp</span><br><span class=\"line\">5 sync               0        0        1             sync</span><br><span class=\"line\">6 shutdown           0        0        1 5月27/16:02 shutdown</span><br><span class=\"line\">7 halt               0        0        1             halt</span><br><span class=\"line\">8 mail               0        0        1             mail</span><br><span class=\"line\">11 operator           0        0        1             operator</span><br><span class=\"line\">12 games              0        0        1             games</span><br><span class=\"line\">14 ftp                0        0        1             FTP User</span><br><span class=\"line\">74 sshd               0        0        1             Privilege-separated SSH</span><br><span class=\"line\">81 dbus               0        0        1             System message bus</span><br><span class=\"line\">89 postfix            0        0        1</span><br><span class=\"line\">99 nobody             1        0        1             Nobody</span><br><span class=\"line\">192 systemd-network    0        0        1             systemd Network Management</span><br><span class=\"line\">998 chrony             0        0        1</span><br><span class=\"line\">999 polkitd            0        0        1             User <span class=\"keyword\">for</span> polkitd</span><br><span class=\"line\">1000 ctcss              0        0        1</span><br><span class=\"line\">1001 nginx              0        0        1</span><br><span class=\"line\">1011 www                0        0        1</span><br><span class=\"line\">1012 mysql              0        0        1</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h2 id=\"0x02-用户操作配置\"><a href=\"#0x02-用户操作配置\" class=\"headerlink\" title=\"0x02 用户操作配置\"></a>0x02 用户操作配置</h2><h3 id=\"useradd-命令\"><a href=\"#useradd-命令\" class=\"headerlink\" title=\"useradd 命令\"></a>useradd 命令</h3><p>描述：增加用户修改用户属性<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用法： useradd [选项] 登录</span><br><span class=\"line\">      useradd -D</span><br><span class=\"line\">      useradd -D [选项]</span><br><span class=\"line\">选项：</span><br><span class=\"line\">  -b, --base-dir BASE_DIR    新账户的主目录的基目录</span><br><span class=\"line\">  -c, --comment COMMENT         新账户的 GECOS 字段</span><br><span class=\"line\">  -d, --home-dir HOME_DIR       新账户的主目录</span><br><span class=\"line\">  -D, --defaults        显示或更改默认的 useradd 配置</span><br><span class=\"line\">  -e, --expiredate EXPIRE_DATE  新账户的过期日期</span><br><span class=\"line\">  -f, --inactive INACTIVE       新账户的密码不活动期</span><br><span class=\"line\">  -g, --gid GROUP        新账户主组的名称或 ID</span><br><span class=\"line\">  -G, --groups GROUPS    新账户的附加组列表</span><br><span class=\"line\">  -h, --<span class=\"built_in\">help</span>                    显示此帮助信息并推出</span><br><span class=\"line\">  -k, --skel SKEL_DIR    使用此目录作为骨架目录</span><br><span class=\"line\">  -K, --key KEY=VALUE           不使用 /etc/login.defs 中的默认值</span><br><span class=\"line\">  -l, --no-log-init    不要将此用户添加到最近登录和登录失败数据库</span><br><span class=\"line\">  -m, --create-home    创建用户的主目录</span><br><span class=\"line\">  -M, --no-create-home        不创建用户的主目录</span><br><span class=\"line\">  -N, --no-user-group    不创建同名的组</span><br><span class=\"line\">  -o, --non-unique        允许使用重复的 UID 创建用户</span><br><span class=\"line\">  -p, --password PASSWORD        加密后的新账户密码</span><br><span class=\"line\">  -r, --system                  创建一个系统账户</span><br><span class=\"line\">  -R, --root CHROOT_DIR         chroot 到的目录</span><br><span class=\"line\">  -s, --shell SHELL        新账户的登录 shell</span><br><span class=\"line\">  -u, --uid UID            新账户的用户 ID</span><br><span class=\"line\">  -U, --user-group        创建与用户同名的组</span><br><span class=\"line\">  -Z, --selinux-user SEUSER        为 SELinux 用户映射使用指定 SEUSER</span><br></pre></td></tr></table></figure></p>\n<p>实际案例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1.跟用户有关的命令</span></span><br><span class=\"line\">useradd jeff             <span class=\"comment\"># 添加一个jeff用户</span></span><br><span class=\"line\">useradd -u 1024 jacker   <span class=\"comment\"># 为新添加的用户指定一个uid</span></span><br><span class=\"line\">useradd -g hadoop Jeff   <span class=\"comment\"># 将用户添加到hadoop组里</span></span><br><span class=\"line\">useradd -d /home/Jeff Jeff <span class=\"comment\"># -d代表创建指定用户的目录，默认会在/home下创建一个和用户名同名的目录</span></span><br><span class=\"line\">useradd -g group1 -G group2,group3 Jeff  <span class=\"comment\"># 直接设置用户的主组-g 合设置 用户附属用户组</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2.创建相应用户，及指定（修改）执行shell</span></span><br><span class=\"line\">useradd nobody -s /sbin/nologin</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例3.创建用户及其家目录</span></span><br><span class=\"line\">sudo useradd -m -g sonarqube sonarqube</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"userdel-命令\"><a href=\"#userdel-命令\" class=\"headerlink\" title=\"userdel 命令\"></a>userdel 命令</h3><p>描述：字面意思删除用户;<br>实际案例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1.删除用户</span></span><br><span class=\"line\">userdel Jeff <span class=\"comment\"># 删除用户，但不会删除/home/Jeff内的文件</span></span><br><span class=\"line\">userdel -r Jeff <span class=\"comment\"># 完全删除,包含用户的家目录</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#补充:</span></span><br><span class=\"line\"><span class=\"variable\">$touch</span> /etc/nologin <span class=\"comment\"># 只要创建这个空文件就能禁止root用户外的用户删除用户信息</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"usermod-命令\"><a href=\"#usermod-命令\" class=\"headerlink\" title=\"usermod 命令\"></a>usermod 命令</h3><p>描述：修改用户的信息和配置</p>\n<p>实际案例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">usermod -c helloworld Jeff             <span class=\"comment\"># -c代表为用户添加hello注释信息</span></span><br><span class=\"line\">usermod -l WeiyiGeek Jeff              <span class=\"comment\"># -l代表修改用户名</span></span><br><span class=\"line\">usermod -d /home/WeiyiGeek WeiyiGeek     <span class=\"comment\"># 修改用户的目录</span></span><br><span class=\"line\">usermod -g Master -G slave Jeff      <span class=\"comment\"># -g代表更改用户所在的用户组/附属组</span></span><br><span class=\"line\">usermod -aG root <span class=\"variable\">$USER</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"passwd-命令\"><a href=\"#passwd-命令\" class=\"headerlink\" title=\"passwd 命令\"></a>passwd 命令</h3><p>描述：改使用者的密码passwd文件是普通的文本文件，可以手工修改文件中的用户信息（usermod），或者用(useradd)<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#参数</span></span><br><span class=\"line\">-l 关闭账号密码。效果相当于usermod -L，只有root才有权使用此项</span><br><span class=\"line\">-u 恢复账号密码。效果相当于usermod -U，同样只有root才有权使用</span><br><span class=\"line\">-g 修改组密码。gpasswd的等效命令</span><br><span class=\"line\">-f 更改由finger命令访问的用户信息</span><br><span class=\"line\">-d 关闭使用者的密码认证功能, 使用者在登入时将可以不用输入密码, 只有具备 root 权限的使用者方可使用</span><br><span class=\"line\">-S 显示指定使用者的密码认证种类, 只有具备 root 权限的使用者方可使用</span><br><span class=\"line\"></span><br><span class=\"line\">--stdin 接受来自标准输入的字符床</span><br></pre></td></tr></table></figure></p>\n<p>实际案例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 示例1.常规参数使用</span></span><br><span class=\"line\">passwd root  <span class=\"comment\">#修改root用户密码</span></span><br><span class=\"line\">passwd -l WeiyiGeek   <span class=\"comment\"># 锁定用户</span></span><br><span class=\"line\">passwd -u WeiyiGeek   <span class=\"comment\"># 解锁用户</span></span><br><span class=\"line\">passwd -d WeiyiGeek   <span class=\"comment\"># 无密码登录（清除密码）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例2.显示密码认证种类</span></span><br><span class=\"line\">passwd -S root</span><br><span class=\"line\">root PS 2019-02-24 0 99999 7 -1 (Password <span class=\"built_in\">set</span>, SHA512 crypt.)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例3.非交互式改密码(此参数在CentOS中适用但是在Ubuntu系统中不适用,请使用chpasswd命令)</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"weiyigeek\"</span> | passwd --stdin Weiyegeek</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$(echo $&#123;RANDOM&#125;`date +%s%S`| md5sum |cut -c 2-13)</span>\"</span> |  passwd --stdin 用户名  <span class=\"comment\"># 小写+数字</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$(echo $&#123;RANDOM&#125;`date +%s%S`| base64 |cut -c 2-13)</span>\"</span> |  passwd --stdin 用户名  <span class=\"comment\"># 大小写+数字</span></span><br><span class=\"line\"><span class=\"comment\"># Changing password for user Weiyegeek.</span></span><br><span class=\"line\"><span class=\"comment\"># passwd: all authentication tokens updated successfully.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例4.要强制用户更改用户的密码，首先必须是密码已过期，你可以使用 passwd command，用于通过指定-e或--expire开关以及用户名来更改用户的密码</span></span><br><span class=\"line\">passwd --expire WeiyiGeek</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"groupadd-命令\"><a href=\"#groupadd-命令\" class=\"headerlink\" title=\"groupadd 命令\"></a>groupadd 命令</h3><p>描述：跟用户组有关的命令添加新的用户组</p>\n<p>实际案例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1.用户组的添加与修改</span></span><br><span class=\"line\">groupadd cloudedge <span class=\"comment\"># 创建用户组 cat /etc/group # 看最后一行是否已添加</span></span><br><span class=\"line\">groupadd -g 888 Master    <span class=\"comment\"># -g代表在创建用户组时也指定组编号</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"groupmod-命令\"><a href=\"#groupmod-命令\" class=\"headerlink\" title=\"groupmod 命令\"></a>groupmod 命令</h3><p>描述：更改用户组信息与配置</p>\n<p>实际案例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1.修改用户组以及组编号</span></span><br><span class=\"line\">groupmod -n hadoop cloudedge       <span class=\"comment\"># -n代表修改组名</span></span><br><span class=\"line\">groupmod -g 668 hadoop             <span class=\"comment\"># -g代表修改组编号</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"groupdel-命令\"><a href=\"#groupdel-命令\" class=\"headerlink\" title=\"groupdel 命令\"></a>groupdel 命令</h3><p>描述：字面意思删除用户组</p>\n<p>实际案例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">groupdel hadoop <span class=\"comment\"># 删除用户组</span></span><br></pre></td></tr></table></figure><br>u2022.WeiyiGeek.top<br><br></p>\n<h3 id=\"gpasswd-命令\"><a href=\"#gpasswd-命令\" class=\"headerlink\" title=\"gpasswd 命令\"></a>gpasswd 命令</h3><p>描述：主要组和附属组:用户可以同时属于多个用户组，但必须要有一个主要组，加上多个附属组,当然使用usermod也能达到<br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190606112821.png\" alt=\"WeiyiGeek.主要组和附属组\" title=\"\" class=\"\">\n                <p>WeiyiGeek.主要组和附属组</p>\n            </figure></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -a 代表将用户添加到一个附属组，如果有多个附属组，可以相互之间用逗号隔开</span></span><br><span class=\"line\"><span class=\"comment\"># -d 表示将用户从组里删除</span></span><br><span class=\"line\"><span class=\"comment\"># -r, --remove-password 表示移除组的密码</span></span><br><span class=\"line\">-Q, --root CHROOT_DIR         directory to chroot into</span><br><span class=\"line\">-R, --restrict                restrict access to GROUP to its members</span><br><span class=\"line\">-M, --members USER,...        <span class=\"built_in\">set</span> the list of members of GROUP</span><br><span class=\"line\">-A, --administrators ADMIN,...</span><br></pre></td></tr></table></figure>\n<p><strong>实际案例：</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 示例1.为用户添加到多个组里面</span></span><br><span class=\"line\">gpasswd -a WeiyiGeek Master,groupMaster  <span class=\"comment\">#但用户创建文件等操作都默认属于他的主用户组，</span></span><br><span class=\"line\"><span class=\"comment\">#如果要在附属组下进行，就要将身份临时切换到附属组 master:x:1005:jeff</span></span><br><span class=\"line\"><span class=\"variable\">$gpasswd</span> -a admin jacker</span><br><span class=\"line\">  Adding user admin to group jacker</span><br><span class=\"line\"><span class=\"comment\">#gpasswd -a user1 usergroup  ＃将用户加到组里</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例2.从master用户组中删掉用户，即将用户的某个附属组去掉.</span></span><br><span class=\"line\">gpasswd -d WeiyiGeek Master  </span><br><span class=\"line\">sudo gpasswd -d <span class=\"variable\">$USER</span> root</span><br><span class=\"line\">  <span class=\"comment\"># Removing user weiyigeek from group root</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例3.为某组设置用户组密码</span></span><br><span class=\"line\">gpasswd master</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例4.禁止某一sudo组中的用户，从而通过sudo -i登陆到root权限。</span></span><br><span class=\"line\">$ gpasswd -d app sudo</span><br><span class=\"line\">Removing user app from group sudo</span><br><span class=\"line\">$ sudo -i <span class=\"comment\"># 此时 app 通过 此命令切换到root终端就不行了。</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190606113448.png\" alt=\"WeiyiGeek.gpasswd\" title=\"\" class=\"\">\n                <p>WeiyiGeek.gpasswd</p>\n            </figure>\n<p><br></p>\n<h3 id=\"groups-命令\"><a href=\"#groups-命令\" class=\"headerlink\" title=\"groups 命令\"></a>groups 命令</h3><p>描述：显示用户所在的主要组和附属组，需要添加一个用户到多个主和从组中.<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">groups【用户】 </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例1.显示主组和附属组</span></span><br><span class=\"line\">$ groups app</span><br><span class=\"line\">app : app adm cdrom sudo dip plugdev docker</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$groups</span> admin</span><br><span class=\"line\">admin : admin jacker</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"newgrp-命令-用于登入另一个群组\"><a href=\"#newgrp-命令-用于登入另一个群组\" class=\"headerlink\" title=\"newgrp 命令 - 用于登入另一个群组\"></a>newgrp 命令 - 用于登入另一个群组</h3><p>描述: newgrp 指令类似 login 指令，当它是以相同的帐号，另一个群组名称，再次登入系统<br>注意: 切换用户组注意这个命令的前提是你现在登录在WeiyiGeek下!需要用户自己执行!<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.切换master组</span></span><br><span class=\"line\">$ newgrp Master    <span class=\"comment\"># 此时可能需要你输入Master的组密码(如果存在的话)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.将当前用户加入到docker组之后切换当前会话到新 group 或者重启 X 会话</span></span><br><span class=\"line\"><span class=\"comment\"># 则因为 groups 命令获取到的是缓存的组信息，刚添加的组信息未能生效，所以 docker images 执行时同样有错。</span></span><br><span class=\"line\">$ newgrp - docker</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"chpasswd-命令\"><a href=\"#chpasswd-命令\" class=\"headerlink\" title=\"chpasswd 命令\"></a>chpasswd 命令</h3><p>描述: chpasswd命令是批量更新用户口令的工具（ubuntu中适用），是把一个文件内容重新定向添加到/etc/shadow中。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Usage: chpasswd [options]</span><br><span class=\"line\">-c, --crypt-method METHOD ：加密方法（无DES MD5、SHA256、SHA512中的一种）</span><br><span class=\"line\">-e：输入的密码是加密后的密文；</span><br><span class=\"line\">-m：当被支持的密码未被加密时，使用MD5加密代替DES加密。</span><br><span class=\"line\">-R, --root CHROOT_DIR ：chroot 到的目录。</span><br></pre></td></tr></table></figure></p>\n<p><strong>实际案例：</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1. 先创建用户密码对应文件，格式为username:password，如abc:abc123，</span></span><br><span class=\"line\"><span class=\"comment\"># 必须以这种格式来书写，并且不能有空行，保存成文本文件user.txt，然后执行chpasswd命令：</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"weiyigeek:zU2OTE2NjEwN\"</span> &gt;  user.txt</span><br><span class=\"line\">chpasswd &lt; user.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.或者采用此种方式以上是运用chpasswd命令来批量修改密码，是linux系统管理中的捷径。</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"root:wgr1TDs2Mnx0XuAv\"</span> | chpasswd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.随机密码并指定加密方式（值得学习借鉴）</span></span><br><span class=\"line\">USER_PASS=<span class=\"string\">\"<span class=\"variable\">$(echo $&#123;RANDOM&#125;`date +%s%S`| base64 |cut -c 2-13)</span>\"</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"weiyigeek:<span class=\"variable\">$&#123;USER_PASS&#125;</span>\"</span> | chpasswd -c SHA512</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190606112224.png\" alt=\"WeiyiGeek.chpasswd命令\" title=\"\" class=\"\">\n                <p>WeiyiGeek.chpasswd命令</p>\n            </figure></p>\n<p><br></p>\n<h3 id=\"chage-命令\"><a href=\"#chage-命令\" class=\"headerlink\" title=\"chage 命令\"></a>chage 命令</h3><p>描述：chage命令是用来修改帐号和密码的有效期限，密码失效是通过此命令来管理的。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chage [选项] 用户名</span><br><span class=\"line\">-m：密码可更改的最小天数。为零时代表任何时候都可以更改密码。</span><br><span class=\"line\">-M：密码保持有效的最大天数。</span><br><span class=\"line\">-w：用户密码到期前，提前收到警告信息的天数。</span><br><span class=\"line\">-E：帐号到期的日期。过了这天，此帐号将不可用。</span><br><span class=\"line\">-d：上一次更改的日期。</span><br><span class=\"line\">-i：停滞时期。如果一个密码已过期这些天，那么此帐号将不可用。</span><br><span class=\"line\">-l：例出当前的设置。由非特权用户来确定他们的密码或帐号何时过期。  root|用户</span><br><span class=\"line\">-I, --inactive INACTIVE : 密码到期后不能登陆</span><br></pre></td></tr></table></figure></p>\n<p>实际案例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例2.我的服务器root帐户密码策略信息如下：</span></span><br><span class=\"line\">$ chage -l root      <span class=\"comment\">#列出指定用户设置</span></span><br><span class=\"line\">$ chage -M 60 root   <span class=\"comment\">#修改我的密码过期时间为60天</span></span><br><span class=\"line\">$ chage -I 5 root    <span class=\"comment\">#命令设置密码失效时间5天  #在密码过期后5天，密码自动失效，这个用户将无法登陆系统了。</span></span><br><span class=\"line\">------------------------------------------------------</span><br><span class=\"line\">近一次密码修改时间                    ： 3月 12, 2013</span><br><span class=\"line\">密码过期时间                            ：从不</span><br><span class=\"line\">密码失效时间                           ：从不</span><br><span class=\"line\">帐户过期时间                           ：从不</span><br><span class=\"line\">两次改变密码之间相距的最小天数          ：0</span><br><span class=\"line\">两次改变密码之间相距的最大天数          ：99999</span><br><span class=\"line\">在密码过期之前警告的天数                ：7</span><br><span class=\"line\">------------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2.强制用户登陆时修改口令</span></span><br><span class=\"line\">$ chage -d 0 username（linux）</span><br><span class=\"line\">$ passwd -f username(solaris)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例3.现在要设置用户的密码过期时间，通过将日期指定为零 (0) 来运行以下命令，表示自上述日期以来密码未更改（即 January 1st, 1970)，因此密码实际上已经过期，需要在用户再次访问系统之前立即更改。</span></span><br><span class=\"line\">chage --lastday 0 rumenz</span><br><span class=\"line\">chage --lastday 1970-01-01 rumenz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例4.强制用户下次登陆时修改密码，并且设置密码最低有效期0和最高有限期90，提前15天发警报提示</span></span><br><span class=\"line\">$ chage -d 0 -m 0 -M 90 -W 15 root（linux）</span><br><span class=\"line\">$ passwd -f -n 0 -x 90 -w 15 root（solaris）</span><br></pre></td></tr></table></figure></p>\n<p>Tips : Linux下对于新添加的用户，用户密码过期时间是从 /etc/login.defs 中 PASS_MAX_DAYS 提取的，普通系统默认就是99999，而有些安全操作系统是90(等保要求三个月更换一次密码)<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#采用正则表达式进行匹配 </span></span><br><span class=\"line\">$ sed -i.bak -e <span class=\"string\">'s/^\\(PASS_MAX_DAYS\\).*/\\1 90/'</span> /etc/login.defs  <span class=\"comment\">#以PASS开头 -i 备份</span></span><br><span class=\"line\">$ cat /etc/login.defs |grep <span class=\"string\">\"PASS_M\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#可以编辑/etc/login.defs来设定几个参数，以后设置口令默认就按照参数设定为准：</span></span><br><span class=\"line\">PASS_MAX_DAYS   90</span><br><span class=\"line\">PASS_MIN_DAYS   1</span><br><span class=\"line\">PASS_MIN_LEN    12</span><br><span class=\"line\">PASS_WARN_AGE   15</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#当然在/etc/default/useradd可以找到如下2个参数进行设置</span></span><br><span class=\"line\"><span class=\"comment\">#通过修改配置文件，能对之后新建用户起作用，而目前系统已经存在的用户，则直接用chage来配置。：</span></span><br><span class=\"line\"><span class=\"comment\"># useradd defaults file</span></span><br><span class=\"line\">GROUP=100</span><br><span class=\"line\">HOME=/home</span><br><span class=\"line\">INACTIVE=-1</span><br><span class=\"line\">EXPIRE=</span><br><span class=\"line\">SHELL=/bin/bash</span><br><span class=\"line\">SKEL=/etc/skel</span><br><span class=\"line\">CREATE_MAIL_SPOOL=yes</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 对于已存在的用户进行设置失效时期。</span></span><br><span class=\"line\">chage -d 0 -m 1 -M 90 -W 15 root &amp;&amp; passwd --expire root</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"pwconv-命令\"><a href=\"#pwconv-命令\" class=\"headerlink\" title=\"pwconv 命令\"></a>pwconv 命令</h3><p>描述：/etc/shadow 由 pwconv 命令根据/etc/passwd中的数据自动产生<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#实际案例</span></span><br><span class=\"line\"><span class=\"variable\">$getent</span> passwd | wc -l</span><br><span class=\"line\">29</span><br><span class=\"line\"><span class=\"variable\">$getent</span> shadow | wc -l</span><br><span class=\"line\">29</span><br><span class=\"line\"><span class=\"variable\">$pwunconv</span>    <span class=\"comment\">#在执行pwconv后才将jacker用户配置信息吸入到shadow中</span></span><br><span class=\"line\"><span class=\"variable\">$useradd</span> jacker</span><br><span class=\"line\"><span class=\"variable\">$getent</span> shadow | wc -l   </span><br><span class=\"line\">0   <span class=\"comment\">#区别点</span></span><br><span class=\"line\"><span class=\"variable\">$getent</span> passwd | wc -l</span><br><span class=\"line\">30</span><br><span class=\"line\"><span class=\"variable\">$pwconv</span>    <span class=\"comment\">#关键点</span></span><br><span class=\"line\"><span class=\"variable\">$getent</span> shadow | wc -l</span><br><span class=\"line\">30</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"chfn-命令\"><a href=\"#chfn-命令\" class=\"headerlink\" title=\"chfn 命令\"></a>chfn 命令</h3><p>chfn【用户】  #设置用户资料，依次输入用户资料</p>\n<h3 id=\"finger-命令\"><a href=\"#finger-命令\" class=\"headerlink\" title=\"finger 命令\"></a>finger 命令</h3><p>finger【用户】  ## 显示用户的详细资料<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]<span class=\"comment\"># yum install finger     #没安装得执行</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"faillog-pam-tally2-命令\"><a href=\"#faillog-pam-tally2-命令\" class=\"headerlink\" title=\"faillog|pam_tally2 命令\"></a>faillog|pam_tally2 命令</h3><p>描述:使用该命来解锁通过PAM模块设置的策略被锁定的用户,主要正对于使用了PAM_tally.so的登陆配置文件,如果使用了pam_tally2动态链接库就需要采用pam_tally2命令进行解锁;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># /etc/pam.d/sshd</span></span><br><span class=\"line\">auth required pam_tally2.so deny=5 unlock_time=300 even_deny_root root_unlock_time=300</span><br></pre></td></tr></table></figure></p>\n<p>温馨提示: pam_tally2.so 默认可以在Ubuntu 20.04 以及 CentOS7中使用,其它发行版未验证。</p>\n<p>基础使用:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pam_tally2: [-f rooted-filename] [--file rooted-filename]</span><br><span class=\"line\">   [-u username] [--user username]</span><br><span class=\"line\">   [-r] [--reset[=n]] [--quiet]</span><br></pre></td></tr></table></figure></p>\n<p>基础示例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 示例1.</span></span><br><span class=\"line\"><span class=\"comment\"># faillog –a # 查看用户登录错误次数</span></span><br><span class=\"line\"><span class=\"comment\"># 如果超过三次的话，用户不能登录并且此后登录用户错误登录次数还是会增加。</span></span><br><span class=\"line\"><span class=\"comment\"># 在登录错误次数不满三次时，登录成功后，则这个用户登录错误值将清零，退出后重新 ssh 登录将采用新的计数。</span></span><br><span class=\"line\"><span class=\"comment\"># faillog -u user –r # 清空指定用户 user 的错误登录次数</span></span><br><span class=\"line\"><span class=\"comment\"># faillog –r  # 清空所有用户错误登录次数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例2.</span></span><br><span class=\"line\">pam_tally2 -u <span class=\"built_in\">test</span> <span class=\"comment\"># 查看被锁定的用户</span></span><br><span class=\"line\">pam_tally2 -r -u <span class=\"built_in\">test</span> <span class=\"comment\"># 解锁被锁定的用户</span></span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<h3 id=\"faillock-命令-用户登陆失败解锁\"><a href=\"#faillock-命令-用户登陆失败解锁\" class=\"headerlink\" title=\"faillock 命令 - 用户登陆失败解锁\"></a>faillock 命令 - 用户登陆失败解锁</h3><p>描述: pam_faillock 模块用来管理员锁定制定次数内登陆失败用户，防止针对获取用户密码暴力破解。</p>\n<p>例如: 通过 pam_faillock 模块，将登录尝试失败的数据储存在 <code>/var/run/faillock</code> 目录下每位用户的独立文件中, 注意他可以在最新的 CentOS 8 以及 Ubuntu 22.04 中使用，而在 <code>CentOS7/Ubuntu 20.04</code> 适用使用的是 pam_tally2 模块。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在/etc/pam.d/目录以下两个配置文件 system-auth 或 password-auth 或者 sshd 中加入字段，五次登陆失败锁定 600 秒</span></span><br><span class=\"line\">auth required pam_faillock.so preauth silent audit deny=5 unlock_time=600 even_deny_root root_unlock_time=600</span><br></pre></td></tr></table></figure></p>\n<p><strong>基础语法:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Usage: faillock [--dir /path/to/tally-directory] [--user username] [--reset]</span><br></pre></td></tr></table></figure><br><br/></p>\n<p><strong>基础使用:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 示例1.查看每个用户的尝试失败次数</span></span><br><span class=\"line\">$ faillock</span><br><span class=\"line\"><span class=\"built_in\">test</span>:</span><br><span class=\"line\">When    Type Source           Valid</span><br><span class=\"line\">2017-06-20 14:29:05 RHOST 192.168.56.1 </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例2.解锁被锁定的 weiyigeek 用户</span></span><br><span class=\"line\">faillock --user weiyigeek --reset</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<h3 id=\"adduser-命令-alpine-操作系统\"><a href=\"#adduser-命令-alpine-操作系统\" class=\"headerlink\" title=\"adduser 命令 - alpine 操作系统\"></a>adduser 命令 - alpine 操作系统</h3><p>描述: adduser 来自英语 <code>add user</code> 该命令用于新增使用者帐号或更新预设的使用者资料, 实际上 <code>adduser</code> 与 <code>useradd</code> 指令为同一指令（经由符号连结 symbolic link）。</p>\n<p><strong>语法参数:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ adduser -<span class=\"built_in\">help</span></span><br><span class=\"line\">BusyBox v1.32.1 () multi-call binary.</span><br><span class=\"line\">Usage: adduser [OPTIONS] USER [GROUP]</span><br><span class=\"line\">Create new user, or add USER to GROUP</span><br><span class=\"line\">  -h DIR          Home directory</span><br><span class=\"line\">  -g GECOS        GECOS field</span><br><span class=\"line\">  -s SHELL        Login shell</span><br><span class=\"line\">  -G GRP          Group</span><br><span class=\"line\">  -S              Create a system user</span><br><span class=\"line\">  -D              Don<span class=\"string\">'t assign a password</span></span><br><span class=\"line\"><span class=\"string\">  -H              Don'</span>t create home directory</span><br><span class=\"line\">  -u UID          User id</span><br><span class=\"line\">  -k SKEL         Skeleton directory (/etc/skel)</span><br></pre></td></tr></table></figure></p>\n<p><strong>常用参数:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-c \t加上备注文件，备注文字会存储在 passwd 的备注参数中</span><br><span class=\"line\">-d \t指定用户登录时的起始目录</span><br><span class=\"line\">-D\t变更默认值</span><br><span class=\"line\">-e\t设定此帐号的使用期限（格式为 YYYY-MM-DD），预设值为永久有效</span><br><span class=\"line\">-f &lt;缓冲天数&gt; \t指定在密码过期后多少天即关闭该帐号</span><br><span class=\"line\">-g &lt;群组&gt; \t指定用户所属的群组</span><br><span class=\"line\">-G &lt;群组&gt; \t指定用户所属的附加群组</span><br><span class=\"line\">-m \t自动建立用户的登入目录</span><br><span class=\"line\">-M \t不要自动建立用户的登入目录</span><br><span class=\"line\">-n \t取消建立以用户名称为名的群组</span><br><span class=\"line\">-r \t建立系统帐号</span><br><span class=\"line\">-s &lt;shell&gt; \t指定用户登入后所使用的shell</span><br><span class=\"line\">-u &lt;uid&gt; \t指定用户ID</span><br></pre></td></tr></table></figure></p>\n<p><strong>简单示例:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 常用用户组与用户添加</span></span><br><span class=\"line\">USERNAME=weiyigeek</span><br><span class=\"line\">addgroup -g 1000 -S <span class=\"variable\">$&#123;USERNAME&#125;</span> \\</span><br><span class=\"line\">&amp;&amp; adduser <span class=\"variable\">$&#123;USERNAME&#125;</span> -D -g <span class=\"variable\">$&#123;USERNAME&#125;</span> -G <span class=\"variable\">$&#123;USERNAME&#125;</span> -u 1000 -s /bin/sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 建立名为linuxcool的用户账号并指定有效期为2014年1月2日, 以及指定相应的用户组和家目录</span></span><br><span class=\"line\">adduser -e 1/2/14 -g root -d /home/weiyigeek weiyigeek</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h2 id=\"0x03-用户权限\"><a href=\"#0x03-用户权限\" class=\"headerlink\" title=\"0x03 用户权限\"></a>0x03 用户权限</h2><h3 id=\"su-命令\"><a href=\"#su-命令\" class=\"headerlink\" title=\"su 命令\"></a>su 命令</h3><p>面对：su(Switch User),切换到超级管理员权限需要Root老大亲自出马的，如su root,当前用户身份完全切换到root账户，但必须使用root用户密码进行验证，除非执行exit退出登陆，否则超级管理权限一直有效<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]$ su Srcweb    <span class=\"comment\">#切换用户 切换后不能采用logout退出用户 （相当于是root当前shell的子线程）</span></span><br><span class=\"line\">[root@localhost ~]$ su - Srcweb    <span class=\"comment\">#切换用户 切换后可以采用logout退出用户</span></span><br><span class=\"line\"><span class=\"comment\">#指定用户执行某一个程序</span></span><br><span class=\"line\">[root@localhost ~]$ su - weiyigeek -c nohup -c <span class=\"string\">\"<span class=\"variable\">$CASSANDRA_DIR</span>/bin/cassandra\"</span> &gt;&gt; <span class=\"variable\">$CASSANDRA_DIR</span>/logs/system.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190606125340.png\" alt=\"WeiyiGeek.su命令\" title=\"\" class=\"\">\n                <p>WeiyiGeek.su命令</p>\n            </figure></p>\n<p><br></p>\n<h3 id=\"sudo-命令-使用另一个用户来执行命令\"><a href=\"#sudo-命令-使用另一个用户来执行命令\" class=\"headerlink\" title=\"sudo 命令 - 使用另一个用户来执行命令\"></a>sudo 命令 - 使用另一个用户来执行命令</h3><p>描述：sudo(Switch User and Do) 以超级管理员身份执行，当前用户身份没有改变，使用自身密码获取授权，超级权限是临时的，root把本来只能超级用户执行的命令赋予普通用户执行，sudo的操作对象是系统命令。<br>比如，有时低用户需要管理员的权限时执行某些命令的时候就需要用sudo权限命令配置;</p>\n<p><strong>语法参数：</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># sudo, sudoedit — execute a command as another user</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># SYNOPSIS</span></span><br><span class=\"line\">  sudo -h | -K | -k | -V</span><br><span class=\"line\">  sudo -v [-ABknS] [-g group] [-h host] [-p prompt] [-u user]</span><br><span class=\"line\">  sudo -l [-ABknS] [-g group] [-h host] [-p prompt] [-U user] [-u user] [<span class=\"built_in\">command</span>]</span><br><span class=\"line\">  sudo [-ABbEHnPS] [-C num] [-g group] [-h host] [-p prompt] [-r role] [-t <span class=\"built_in\">type</span>] [-T timeout] [-u user] [VAR=value]</span><br><span class=\"line\">      [-i | -s] [<span class=\"built_in\">command</span>]</span><br><span class=\"line\">  sudoedit [-ABknS] [-C num] [-g group] [-h host] [-p prompt] [-T timeout] [-u user] file ...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Paramater</span></span><br><span class=\"line\">-A, --askpass 使用助手程序进行密码提示</span><br><span class=\"line\">-b, --background 在后台运行命令</span><br><span class=\"line\">-C, --close-from=num 关闭所有 &gt;= num 的文件描述符</span><br><span class=\"line\">-E, --preserve-env 在执行命令时保留用户环境</span><br><span class=\"line\">-e, --edit 编辑文件而非执行命令</span><br><span class=\"line\">-g, --group=group 以指定的用户组或 ID 执行命令</span><br><span class=\"line\">-H, --<span class=\"built_in\">set</span>-home 将 HOME 变量设为目标用户的主目录。</span><br><span class=\"line\">-h, --<span class=\"built_in\">help</span> 显示帮助消息并退出</span><br><span class=\"line\">-h, --host=host 在主机上运行命令(如果插件支持)</span><br><span class=\"line\">-i, --login 以目标用户身份运行一个登录 shell；可同时指定一条命令</span><br><span class=\"line\">-K, --remove-timestamp 完全移除时间戳文件</span><br><span class=\"line\">-k, --reset-timestamp 无效的时间戳文件</span><br><span class=\"line\">-l, --list 列出用户权限或检查某个特定命令；对于长格式，使用两次</span><br><span class=\"line\">-n, --non-interactive 非交互模式，不提示</span><br><span class=\"line\">-P, --preserve-groups 保留组向量，而非设置为目标的组向量</span><br><span class=\"line\">-p, --prompt=prompt 使用指定的密码提示</span><br><span class=\"line\">-r, --role=role 以指定的角色创建 SELinux 安全环境</span><br><span class=\"line\">-S, --stdin 从标准输入读取密码</span><br><span class=\"line\">-s, --shell 以目标用户运行 shell；可同时指定一条命令</span><br><span class=\"line\">-t, --<span class=\"built_in\">type</span>=<span class=\"built_in\">type</span> 以指定的类型创建 SELinux 安全环境</span><br><span class=\"line\">-U, --other-user=user 在列表模式中显示用户的权限</span><br><span class=\"line\">-u, --user=user 以指定用户或 ID 运行命令(或编辑文件)</span><br><span class=\"line\">-V, --version 显示版本信息并退出</span><br><span class=\"line\">-v, --validate 更新用户的时间戳而不执行命令</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 常用命令</span></span><br><span class=\"line\">sudo -i ：Linux终端命令下改变用户对命令使用权限的命令，(将目标用户的密码数据库条目指定的shell作为登录shell运行)</span><br><span class=\"line\">sudo -s ：执行环境变数中的 SHELL 所指定的 shell ，或是 /etc/passwd 里所指定的 shell 。</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>温馨提示: sudo 配置文件来修改权限, 除了使用vim /etc/sudoers 我们也可也使用 visudo 命令打开sudo编辑文件, 可通过 <code>man 5 sudoers</code> 命令查看帮助。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ visudo       <span class=\"comment\"># 实际修改的是/etc/sudoers文件</span></span><br><span class=\"line\">/etc/sudoers   <span class=\"comment\"># 特殊权限配置</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"comment\">#Allow root to run any commands anywhere Allows people in group wheel to run all commands</span></span><br><span class=\"line\">root ALL=(ALL) ALL</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#用户名 被管理主机的地址＝（可使用的身份）授权命令（绝对路径）</span></span><br><span class=\"line\">admin ALL=(ALL) ALL   <span class=\"comment\">#设置了后admin用户才能执行sudo -l进行查看自己的权限</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#%组名 被管理主机的地址＝（可使用的身份）授权命令(绝对路径)</span></span><br><span class=\"line\"><span class=\"comment\"># %sys ALL = NETWORKING, SOFTWARE, SERVICES, STORAGE, DELEGATING, PROCESSES, LOCATE, DRIVERS</span></span><br><span class=\"line\"><span class=\"comment\"># %users  localhost=/sbin/shutdown -h now</span></span><br><span class=\"line\"><span class=\"comment\"># %users  ALL=/sbin/mount /mnt/cdrom, /sbin/umount /mnt/cdrom  #命令以,分割</span></span><br><span class=\"line\">%wheel ALL＝(ALL) ALL  <span class=\"comment\"># 注释后低权限用户不能使用sudo（值得注意）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - 可能会有不安全的配置,建议设置为PASSWD而不是NOPASSWD，在sudo时会输入该用户的Pass密码才能登陆.</span></span><br><span class=\"line\"><span class=\"comment\"># includedir /etc/sudoers.d </span></span><br><span class=\"line\">lighthouse ALL=(ALL) PASSWD: ALL</span><br><span class=\"line\">ubuntu  ALL=(ALL:ALL) NOPASSWD: ALL</span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190625154505.png\" alt=\"WeiyiGeek.实际配置\" title=\"\" class=\"\">\n                <p>WeiyiGeek.实际配置</p>\n            </figure>\n<p><br/></p>\n<p><strong>实际案例：</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 示例1.sudo权限打开root权限才能读取的</span></span><br><span class=\"line\">$ sudo cat /etc/shadow</span><br><span class=\"line\">[sudo] password <span class=\"keyword\">for</span> Srcweb: </span><br><span class=\"line\">Srcweb 不在 sudoers 文件中,此事将被报告</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例2.查看当前用户的user的sudo权限</span></span><br><span class=\"line\">$ sudo -l</span><br><span class=\"line\"><span class=\"comment\"># 匹配 %2$s 上 %1$s 的默认条目：!visiblepw, always_set_home, match_group_by_gid, always_query_group_plugin, env_reset,</span></span><br><span class=\"line\">    env_keep=<span class=\"string\">\"COLORS DISPLAY HOSTNAME HISTSIZE KDEDIR LS_COLORS\"</span>, env_keep+=<span class=\"string\">\"MAIL PS1 PS2 QTDIR USERNAME</span></span><br><span class=\"line\"><span class=\"string\">    LANG LC_ADDRESS LC_CTYPE\"</span>, env_keep+=<span class=\"string\">\"LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES\"</span>,</span><br><span class=\"line\">    env_keep+=<span class=\"string\">\"LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE\"</span>, env_keep+=<span class=\"string\">\"LC_TIME LC_ALL LANGUAGE</span></span><br><span class=\"line\"><span class=\"string\">    LINGUAS _XKB_CHARSET XAUTHORITY\"</span>, secure_path=/sbin\\:/bin\\:/usr/sbin\\:/usr/bin</span><br><span class=\"line\">用户 root 可以在 master 上运行以下命令：(ALL) ALL</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例3.修改sudoer配置文件来指定用户可使用的sudo权限</span></span><br><span class=\"line\">user1 ALL=/usr/bin/passwd <span class=\"comment\">#收于用户设定密码的权限(普通用户执行sudo命令)，但这会有很大问题  普通用户会修改其他用户密码</span></span><br><span class=\"line\">user1 All=/usr/bin/passwd [A-Za-z]*, !/usr/bin/passwd <span class=\"string\">\"\"</span>, !/usr/bin/passwd root  <span class=\"comment\">#让不能修改root密码，注意中间必须有空格，顺序不能颠倒</span></span><br><span class=\"line\"><span class=\"comment\"># 最好不要给user ALL=vi (这时是Rootquan权限)</span></span><br><span class=\"line\">mynote ALL=/usr/bin/cat   </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 约定普通用户的用户名是 www-data，其用户组只有 www-data</span></span><br><span class=\"line\">www-data ALL=(www-data:www-data) /bin/*,/usr/bin/*,/sbin/*, /usr/sbin/*,!/usr/bin/sudo,!/bin/su,!/usr/bin/passwd,!/usr/bin/chattr -* /etc/sudoers</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例4.sudo两种方式切换到root用户终端</span></span><br><span class=\"line\">sudo -i       <span class=\"comment\"># 快速切换到root, 是Linux终端命令下改变用户对命令使用权限的命令</span></span><br><span class=\"line\">sudo -i -u root</span><br><span class=\"line\">sudo su - root  <span class=\"comment\"># 不加-i的话是以非登录模式切换，不会拿到root的环境变量。</span></span><br></pre></td></tr></table></figure></p>\n<p>温馨提示: <code>sudo -i</code> 与 <code>su -</code>的不同点是前者获取到一个全新的shell，而后者只是允许具有权限的用户以超级用户或另一个用户的身份执行命令，但是环境变量是保持不变的。</p>\n<p><br/></p>\n<p><strong>注意事项：</strong></p>\n<ul>\n<li><p>1.root上编辑 <code>/etc/sudoers</code> 写得越简单，普通用户的权限就越大.</p>\n</li>\n<li><p>2.Ubuntu系统提示用户不在 sudoers 文件中错误解决方法，以admin用户以及用户组为例.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 切换到root账号</span></span><br><span class=\"line\">su -</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解除sudoers的写入限制</span></span><br><span class=\"line\">chmod u+w /etc/sudoers</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 为用户admin添加sudo权限</span></span><br><span class=\"line\">admin ALL=(ALL:ALL) ALL</span><br><span class=\"line\"><span class=\"comment\"># 为用户组admin添加sudo权限</span></span><br><span class=\"line\">%admin ALL=(ALL) ALL</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将test用户添加到admin组并拥有一定sudo权限</span></span><br><span class=\"line\">usermod -G admin <span class=\"built_in\">test</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 切换用户</span></span><br><span class=\"line\">su - <span class=\"built_in\">test</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在test用户下执行sudo命令</span></span><br><span class=\"line\">sudo apt update  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 用户 test 可以在 master 上运行以下命令：(ALL) ALL</span></span><br><span class=\"line\">$ cat /etc/passwd</span><br><span class=\"line\">root:x:0:0:root:/root:/bin/bash</span><br><span class=\"line\">bin:x:1:1:bin:/bin:/sbin/nologin</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>3.禁止普通用户通过 <code>sudo -i</code> 或 <code>sudo -s</code>命令进入root模式。</p>\n</li>\n<li><p>4.禁止普通用户通过 <code>sudo su -</code> 或 <code>su - root</code> 切换到root用户</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.在Ubuntu 系统下设置</span></span><br><span class=\"line\"><span class=\"comment\"># 步骤01 #</span></span><br><span class=\"line\"><span class=\"comment\"># /etc/pam.d/su </span></span><br><span class=\"line\"><span class=\"comment\"># 打开这个配置文件，找到如下行，并将行首”#”去掉，保存文件</span></span><br><span class=\"line\">auth required pam_wheel.so</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># /etc/login.defs</span></span><br><span class=\"line\"><span class=\"comment\"># 文件末尾添加, 如下指令</span></span><br><span class=\"line\">SU_WHEEL_ONLY yes</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 步骤02 #</span></span><br><span class=\"line\"><span class=\"comment\"># /etc/sudoers </span></span><br><span class=\"line\">$ visudo</span><br><span class=\"line\">weiyigeek  ALL=(ALL)   ALL,!/bin/su</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 步骤03 #</span></span><br><span class=\"line\">sudo addgroup wheel</span><br><span class=\"line\">sudo usermod -a -G wheel weiyigeek</span><br></pre></td></tr></table></figure>\n<p>温馨提示: 前面两个步骤做完，则可以实现上述所说目的，如果只做了第一步或者第二步，那情况将如下</p>\n<ul>\n<li>如果只做了第一步，则还是可以通过 <code>sudo su -</code> 或 <code>sudo su</code> 切换到root</li>\n<li>如果只做了第二步，则还是可以通过 <code>su - root</code>  切换到root</li>\n</ul>\n<ul>\n<li>5.如何定制sudoer规则,定制功能需要用到以下选项。<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 配置Host_Alias：就是主机的列表（可以填本机ip地址）</span></span><br><span class=\"line\">Host_Alias HOST_FLAG = hostname1, hostname2, hostname3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置Cmnd_Alias：就是允许执行的命令的列表</span></span><br><span class=\"line\">Cmnd_Alias COMMAND_FLAG = command1, command2, command3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置User_Alias：就是具有sudo权限的用户的列表</span></span><br><span class=\"line\">User_Alias USER_FLAG = user1, user2, user3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置Runas_Alias：就是用户以什么身份执行（例如root，或者oracle）的列表</span></span><br><span class=\"line\">Runas_Alias RUNAS_FLAG = operator1, operator2, operator3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># * 配置权限的格式如下：</span></span><br><span class=\"line\">USER_FLAG HOST_FLAG=(RUNAS_FLAG) COMMAND_FLAG</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># * 如果不需要密码验证的话，则按照这样的格式来配置</span></span><br><span class=\"line\">USER_FLAG HOST_FLAG=(RUNAS_FLAG) NOPASSWD: COMMAND_FLAG</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>实践案例:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ visudo</span><br><span class=\"line\">....</span><br><span class=\"line\">Host_Alias   HOST_FLAG = 172.17.0.2</span><br><span class=\"line\">User_Alias   USER_FLAG = weiyigeek</span><br><span class=\"line\">Runas_Alias  RUNAS_FLAG = root</span><br><span class=\"line\">Cmnd_Alias   COMMAND_FLAG = /bin/mount,/bin/umount</span><br><span class=\"line\">USER_FLAG HOST_FLAG=(RUNAS_FLAG) COMMAND_FLAG</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"gosu-命令\"><a href=\"#gosu-命令\" class=\"headerlink\" title=\"gosu 命令\"></a>gosu 命令</h3><p>描述:该命令工具主要用来提升指定账号的权限作用与sudo命令类似；<br>由su和sudo具有非常奇怪且经常令人讨厌的TTY和信号转发行为这一简单事实发展而来。它们的设置和使用也有些复杂(特别是在sudo的情况下)它允许大量的表达，但如果您需要的只是”作为特定用户运行这个特定的应用程序，然后离开管道” 那么它就会失败(退出即生效)。</p>\n<p>gosu的核心工作方式直接借鉴了Docker/libcontainer在容器内启动应用程序的方式(实际上是直接使用来自libcontainer代码库的/etc/passwd处理代码)</p>\n<p>应用环境:</p>\n<ul>\n<li>1.由于安全相关问题在Docker容器中建议使用gosu而不是sudo;</li>\n<li>2.对于脚本执行有严格权限要求的场景;</li>\n</ul>\n<p>项目地址:<a href=\"https://github.com/tianon/gosu\" target=\"_blank\" rel=\"noopener\">https://github.com/tianon/gosu</a></p>\n<p><strong>安装说明:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#CentOS</span></span><br><span class=\"line\">GOSU_VERSION=1.14</span><br><span class=\"line\">wget https://github.com/tianon/gosu/releases/download/<span class=\"variable\">$&#123;GOSU_VERSION&#125;</span>/gosu-amd64 -O /usr/<span class=\"built_in\">local</span>/bin/gosu</span><br><span class=\"line\">wget https://github.com/tianon/gosu/releases/download/<span class=\"variable\">$&#123;GOSU_VERSION&#125;</span>/gosu-amd64.asc -O /tmp/gosu.asc</span><br><span class=\"line\">gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4</span><br><span class=\"line\">gpg --batch --verify /tmp/gosu.asc /usr/<span class=\"built_in\">local</span>/bin/gosu</span><br><span class=\"line\">chmod +x /usr/<span class=\"built_in\">local</span>/bin/gosu</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># debian</span></span><br><span class=\"line\"><span class=\"comment\"># gosu-$(dpkg --print-architecture | awk -F- '&#123; print $NF &#125;') as gosu</span></span><br><span class=\"line\"><span class=\"comment\"># gosu-$(dpkg --print-architecture | awk -F- '&#123; print $NF &#125;').asc as gosu.asc</span></span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p><strong>基础语法:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ gosu</span><br><span class=\"line\">Usage: ./gosu user-spec <span class=\"built_in\">command</span> [args]</span><br><span class=\"line\">   eg: ./gosu tianon bash</span><br><span class=\"line\">       ./gosu nobody:root bash -c <span class=\"string\">'whoami &amp;&amp; id'</span></span><br><span class=\"line\">       ./gosu 1000:1 id</span><br><span class=\"line\"></span><br><span class=\"line\">./gosu version: 1.14 (go1.3.1 on linux/amd64; gc)</span><br></pre></td></tr></table></figure></p>\n<p><strong>基础示例:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#(1)当前用户是root执行以web用户执行命令创建目录文件目录文件的所属者和所属组都是</span></span><br><span class=\"line\">gosu web mkdir -p /tmp/web</span><br><span class=\"line\">drwxr-xr-x.  2 web  web     6 6月  19 09:42 web</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#(2)设置所属者与不同的组</span></span><br><span class=\"line\">gosu nobody:root bash -c <span class=\"string\">'whoami &amp;&amp; id'</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#(3)从下面这个示例我们知道为何在docker建议使用gosu而不是sudo</span></span><br><span class=\"line\"><span class=\"comment\">#由于gosu使用Docker自己的代码来处理这些user:group，所以它与Docker自己的——user标志是1:1的。</span></span><br><span class=\"line\"><span class=\"comment\">#如果你对gosu处理的边界情况感到好奇，请参阅Dockerfile。</span></span><br><span class=\"line\">$ docker run -it --rm ubuntu:trusty su -c <span class=\"string\">'exec ps aux'</span></span><br><span class=\"line\">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND</span><br><span class=\"line\">root         1  0.0  0.0  46636  2688 ?        Ss+  02:22   0:00 su -c <span class=\"built_in\">exec</span> ps a</span><br><span class=\"line\">root         6  0.0  0.0  15576  2220 ?        Rs   02:22   0:00 ps aux</span><br><span class=\"line\">$ docker run -it --rm ubuntu:trusty sudo ps aux</span><br><span class=\"line\">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND</span><br><span class=\"line\">root         1  3.0  0.0  46020  3144 ?        Ss+  02:22   0:00 sudo ps aux</span><br><span class=\"line\">root         7  0.0  0.0  15576  2172 ?        R+   02:22   0:00 ps aux</span><br><span class=\"line\">$ docker run -it --rm -v <span class=\"variable\">$PWD</span>/gosu-amd64:/usr/<span class=\"built_in\">local</span>/bin/gosu:ro ubuntu:trusty gosu root ps aux</span><br><span class=\"line\">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND</span><br><span class=\"line\">root         1  0.0  0.0   7140   768 ?        Rs+  02:22   0:00 ps aux</span><br></pre></td></tr></table></figure></p>\n<p><strong>补充其他类似命令工具:</strong></p>\n<ul>\n<li>su-exec: 是用C语言对gosu进行的最小的重写，使得二进制文件更小，可以在主要的Alpine软件包存储库中使用。</li>\n<li><p>chroot: 使用<code>--userspec标志</code>chroot可以提供类似的好处/行为;</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker run -it --rm ubuntu:trusty chroot --userspec=nobody / ps aux</span><br><span class=\"line\">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND</span><br><span class=\"line\">nobody       1  5.0  0.0   7136   756 ?        Rs+  17:04   0:00 ps aux</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>setpriv: Available in newer util-linux (&gt;= 2.32.1-0.2, in Debian; <a href=\"https://manpages.debian.org/buster/util-linux/setpriv.1.en.html\" target=\"_blank\" rel=\"noopener\">https://manpages.debian.org/buster/util-linux/setpriv.1.en.html</a>)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker run -it --rm buildpack-deps:buster-scm setpriv --reuid=nobody --regid=nogroup --init-groups ps faux</span><br><span class=\"line\">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND</span><br><span class=\"line\">nobody       1  5.0  0.0   9592  1252 pts/0    RNs+ 23:21   0:00 ps faux</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br></p>\n<h3 id=\"setpriv-命令\"><a href=\"#setpriv-命令\" class=\"headerlink\" title=\"setpriv 命令\"></a>setpriv 命令</h3><p>描述:setpriv命令作用是使用不同的Linux特权设置运行程序 (PS:该命令在百度上找了一圈都没找到相关还是<code>man setpriv</code>好使且完整)，设置或查询跨execve(2)继承的各种Linux特权设置。</p>\n<p>Tips:</p>\n<ul>\n<li>如果应用任何指定的选项失败程序将不运行setpriv将返回退出代码为<code>127</code>。</li>\n<li>Dangers: 使用时候需要非常小心，它会带来意想不到的后果；例如设置<code>no_new_privs</code>然后执行一个SELinux限制的程序(就像这个工具会做的那样)可能会阻止SELinux限制生效。</li>\n</ul>\n<p>基础语法:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Usage:</span></span><br><span class=\"line\">setpriv [options] &lt;program&gt; [args...]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#OPTION</span></span><br><span class=\"line\">-d, --dump:转储当前特权状态。多次指定以显示额外的、大部分是无用的信息。与所有其他选项不兼容。</span><br><span class=\"line\">--ruid uid, --euid uid, --reuid uid: 设置uid或gid不会更改功能，尽管最后的<span class=\"built_in\">exec</span>调用可能会更改功能,例如 --reuid=1000 --regid=1000 --caps=-all</span><br><span class=\"line\">--rgid gid, --egid gid, --regid gid: 设置真实的、有效的，或同时设置两个gid。为了安全起见必须指定 --keep-groups, --clear-groups, or --groups 如果您设置了任何主要gid。</span><br><span class=\"line\">--no-new-privs: 设置该位后execve(2)将不会授予新的特权如, `setuid和setgid位`以及文件功能将被禁用(用这些位执行二进制文件<span class=\"built_in\">set</span>仍然可以工作但它们不会获得特权),从Linux 3.5开始就支持no_new_privs位。</span><br><span class=\"line\">--inh-caps (+|-)<span class=\"built_in\">cap</span>: 可继承的功能</span><br><span class=\"line\">--bounding-set (+|-)<span class=\"built_in\">cap</span>: 设置可继承能力或能力边界集,参数是一个逗号分隔的+<span class=\"built_in\">cap</span>和-<span class=\"built_in\">cap</span>条目列表，它们分别添加或删除条目。</span><br><span class=\"line\">--list-caps: 列出所有已知的能力必须单独指定。</span><br><span class=\"line\">--clear-groups: 清除补充组。</span><br><span class=\"line\">--keep-groups: 保留补充组, Only useful <span class=\"keyword\">in</span> conjunction with --rgid, --egid, or --regid.</span><br><span class=\"line\">--groups group: 集补充组。</span><br><span class=\"line\">--securebits (+|-)securebit: 设置或清除securebits。有效的securebits是noroot、noroot_locked、no_setuid_fixup、no_setuid_fixup_locked和keep_caps_locked。execve(2)清除keep_caps，因此不允许。</span><br><span class=\"line\">--selinux-label label: 请求一个特定的SELinux转换(使用<span class=\"built_in\">exec</span>上的转换，而不是dyntrans)不能与`--no-new-privs`连用。如果SELinux不在使用中这将失败并导致setpriv(1)中止，转换可能被忽略或导致execve(2)。</span><br><span class=\"line\">--apparmor-profile profile: 请求特定的AppArmor配置文件(使用<span class=\"built_in\">exec</span>上的转换)。这将失败，并导致setpriv(1)中止，如果设备不在使用中，过渡可能被忽略或导致execve(2)在AppAr‐mor的兴致下失败。</span><br></pre></td></tr></table></figure></p>\n<p>基础用法:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#(1) 列出所有已知可操作的权限</span></span><br><span class=\"line\">$ setpriv --list-caps</span><br><span class=\"line\">chown</span><br><span class=\"line\">dac_override</span><br><span class=\"line\">dac_read_search</span><br><span class=\"line\">fowner</span><br><span class=\"line\">fsetid</span><br><span class=\"line\"><span class=\"built_in\">kill</span></span><br><span class=\"line\">setgid</span><br><span class=\"line\">setuid</span><br><span class=\"line\">setpcap</span><br><span class=\"line\">linux_immutable</span><br><span class=\"line\">net_bind_service</span><br><span class=\"line\">net_broadcast</span><br><span class=\"line\">net_admin</span><br><span class=\"line\">net_raw</span><br><span class=\"line\">ipc_lock</span><br><span class=\"line\">ipc_owner</span><br><span class=\"line\">sys_module</span><br><span class=\"line\">sys_rawio</span><br><span class=\"line\">sys_chroot</span><br><span class=\"line\">sys_ptrace</span><br><span class=\"line\">sys_pacct</span><br><span class=\"line\">sys_admin</span><br><span class=\"line\">sys_boot</span><br><span class=\"line\">sys_nice</span><br><span class=\"line\">sys_resource</span><br><span class=\"line\">sys_time</span><br><span class=\"line\">sys_tty_config</span><br><span class=\"line\">mknod</span><br><span class=\"line\">lease</span><br><span class=\"line\">audit_write</span><br><span class=\"line\">audit_control</span><br><span class=\"line\">setfcap</span><br><span class=\"line\">mac_override</span><br><span class=\"line\">mac_admin</span><br><span class=\"line\">syslog</span><br><span class=\"line\">wake_alarm</span><br><span class=\"line\">block_suspend</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#(2) 以额外用户执行命令ps</span></span><br><span class=\"line\">setpriv --reuid=nobody --regid=nogroup --init-groups ps</span><br></pre></td></tr></table></figure></p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Linux命令","path":"api/categories/Linux命令.json"}],"tags":[{"name":"用户命令","path":"api/tags/用户命令.json"}]}