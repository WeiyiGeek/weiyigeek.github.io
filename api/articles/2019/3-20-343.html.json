{"title":"Python3外置模块使用","slug":"编程世界/Python/模块函数/Python3外置模块使用","date":"2019-03-20T13:34:30.000Z","updated":"2022-03-29T05:39:06.298Z","url":"2019/3-20-343.html","path":"api/articles/2019/3-20-343.html.json","covers":["https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190725154309.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190809173245.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20191107212551.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20191107221646.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h4 id=\"0x00-快速入门\"><a href=\"#0x00-快速入门\" class=\"headerlink\" title=\"0x00 快速入门\"></a>0x00 快速入门</h4><p><strong>(1)外置模块一览表</strong><br>描述：Python外置模块可以说是Python的强大之处的存在，使得Python语言扩展性高，使用方法众多并且使用也非常简单，在我们日常的运维开发学习中尤为重要;<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#&gt;&gt;&gt;dir(random)  #查看与使用模块里的函数,前提必须引入模块,高阶用法 import 引入模块 as 模块别名;</span></span><br><span class=\"line\"><span class=\"comment\">#&gt;&gt;&gt;help(random) #模块帮助</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib    <span class=\"comment\">#网站请求模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> lxml      <span class=\"comment\">#xpath解析库模块 from lxml import etree</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#表格Excel处理</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> cvs       <span class=\"comment\">#cvs表格模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> xlwt      <span class=\"comment\">#excel表格模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> xlsxwriter <span class=\"comment\">#excel文件模块</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#其他文章中介绍</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> psutil    <span class=\"comment\">#系统性能信息模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> exifread   <span class=\"comment\">#图片exif信息模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> ruamel.yaml <span class=\"comment\">#YAML解析模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> dnspython   <span class=\"comment\">#DNS解析信息模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> pycurl      <span class=\"comment\">#web探测模块</span></span><br></pre></td></tr></table></figure></p>\n<hr>\n\n<h4 id=\"0x01-外置模块详解\"><a href=\"#0x01-外置模块详解\" class=\"headerlink\" title=\"0x01 外置模块详解\"></a>0x01 外置模块详解</h4><h5 id=\"urllib-模块\"><a href=\"#urllib-模块\" class=\"headerlink\" title=\"urllib  模块\"></a>urllib  模块</h5><p>urllib是一个包,下面有4个modules,主要进行网页请求;<br><a href=\"https://docs.python.org/3/library/urllib.html\" target=\"_blank\" rel=\"noopener\">文档地址</a><br>urllib.request  用于打开和读取url<br>urllib.error    包含由urllib.request引发的异常 （URLERROR(请求异常) -&gt; HTTPERROR(网页响应码异常300~599)）<br>urllib.parse    解析url<br>urllib.robotparser 用于解析robots.txt文件</p>\n<p>案例：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#语法</span></span><br><span class=\"line\">urllib.request.Request(url, data=<span class=\"literal\">None</span>, headers=&#123;&#125;, origin_req_host=<span class=\"literal\">None</span>, unverifiable=<span class=\"literal\">False</span>, method=<span class=\"literal\">None</span>)  <span class=\"comment\">#返回request配置请求的对象</span></span><br><span class=\"line\">urllib.request.urlopen(url, data=<span class=\"literal\">None</span>, [timeout, ]*, cafile=<span class=\"literal\">None</span>, capath=<span class=\"literal\">None</span>, cadefault=<span class=\"literal\">False</span>, context=<span class=\"literal\">None</span>) <span class=\"comment\">#进行网站的请求</span></span><br><span class=\"line\"></span><br><span class=\"line\">urllib.request.ProxyHandler(proxies=<span class=\"literal\">None</span>)  <span class=\"comment\"># 设置代理地址创建Proxyhandler 参数是一个字典 &#123;'类型':'代理IP:端口'&#125; 返回handler</span></span><br><span class=\"line\">urllib.request.build_opener([handler, ...])  <span class=\"comment\"># 创建Opener绑定代理资源,返回安装 opener开启工具对象</span></span><br><span class=\"line\">urllib.request.install_opener(opener)         <span class=\"comment\">#安装Opener</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#POST requestThe data argument must be a bytes object in standard application/x-www-form-urlencoded format; </span></span><br><span class=\"line\">urllib.parse.urlencode(data, doseq=<span class=\"literal\">False</span>, safe=<span class=\"string\">''</span>, encoding=<span class=\"literal\">None</span>, errors=<span class=\"literal\">None</span>, quote_via=quote_plus) </span><br><span class=\"line\"></span><br><span class=\"line\">urllib.parse.quote(<span class=\"string\">\"网络安全\"</span>)  <span class=\"comment\">#解析中文URL</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#案例</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.error</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">\"http://weiyigeek.github.io\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">data = &#123;<span class=\"string\">'action'</span>:<span class=\"string\">'postValue'</span>&#125; <span class=\"comment\">#设置post请求参数</span></span><br><span class=\"line\">data = urllib.parse.urlencode(data).encode(<span class=\"string\">'utf-8'</span>)  <span class=\"comment\">#等同于：application/x-www-form-urlencoded; charset=UTF-8 </span></span><br><span class=\"line\"></span><br><span class=\"line\">req = urllib.request.Request(url, data)</span><br><span class=\"line\">req.add_header(<span class=\"string\">'User-Agent'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko/20100101 Firefox/66.0'</span>) <span class=\"comment\">#设置请求头</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#-----------------------------------------------------#</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>：</span><br><span class=\"line\">        res = urllib.request.urlopen(<span class=\"string\">\"https://weiyigeek.github.io\"</span>,context=ssl._create_unverified_context())  <span class=\"comment\">#支持SSL请求</span></span><br><span class=\"line\">        print(<span class=\"string\">\"请求URL:\\n\"</span>,res.geturl())</span><br><span class=\"line\">        print(<span class=\"string\">\"状态码：\"</span>,res.getcode())</span><br><span class=\"line\">        print(<span class=\"string\">\"返回消息头：\\n\"</span>,res.info())</span><br><span class=\"line\">        print(<span class=\"string\">\"请求头信息：\"</span>,req.headers)   <span class=\"comment\">#注意这里是 Request() 类方法返回的对象</span></span><br><span class=\"line\"><span class=\"keyword\">except</span> HTTPError <span class=\"keyword\">as</span> e:  <span class=\"comment\">#【注意】HTTPError 必须在URLError之上</span></span><br><span class=\"line\">        print(<span class=\"string\">\"服务器响应出错:\"</span>,e.code)</span><br><span class=\"line\">        print(<span class=\"string\">\"打印出具体的错误页面\"</span>,e.read().encode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\"><span class=\"keyword\">except</span> URLError <span class=\"keyword\">as</span> e: <span class=\"comment\"># 包含了HTTPError</span></span><br><span class=\"line\">        print(<span class=\"string\">\"服务器链接失败:\"</span>,e.reason)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"请求成功！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">############ 执行结果 ########################</span></span><br><span class=\"line\"><span class=\"comment\"># 请求URL:http://weiyigeek.github.io</span></span><br><span class=\"line\"><span class=\"comment\"># 状态码： 200</span></span><br><span class=\"line\"><span class=\"comment\"># 返回消息头：</span></span><br><span class=\"line\"><span class=\"comment\"># Server: nginx/1.15.9</span></span><br><span class=\"line\"><span class=\"comment\"># Date: Fri, 12 Apr 2019 10:57:51 GMT</span></span><br><span class=\"line\"><span class=\"comment\"># Content-Type: text/html; charset=utf-8</span></span><br><span class=\"line\"><span class=\"comment\"># Content-Length: 15278</span></span><br><span class=\"line\"><span class=\"comment\"># Last-Modified: Wed, 10 Apr 2019 01:12:59 GMT</span></span><br><span class=\"line\"><span class=\"comment\"># Connection: close</span></span><br><span class=\"line\"><span class=\"comment\"># ETag: \"5cad431b-3bae\"</span></span><br><span class=\"line\"><span class=\"comment\"># Accept-Ranges: bytes</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 请求头信息： &#123;'User-Agent','Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko/20100101 Firefox/66.0'&#125;</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"lxml-模块\"><a href=\"#lxml-模块\" class=\"headerlink\" title=\"lxml 模块\"></a>lxml 模块</h5><p>使用xpath 必须首先下载lxml 库,xpath 只是一个元素选择器在python 的另外一个库lxml 中;<br>参考：<a href=\"https://cuiqingcai.com/2621.html\" target=\"_blank\" rel=\"noopener\">https://cuiqingcai.com/2621.html</a><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#使用pip进行下载lxml库</span></span><br><span class=\"line\">pip install lxml</span><br><span class=\"line\">from lxml import etree</span><br><span class=\"line\"><span class=\"comment\">##省略若干代码，dom_tree为我们解析之后的etree对象、</span></span><br><span class=\"line\">dom_tree = etree.HTML(html)</span><br><span class=\"line\"><span class=\"comment\">##语句一:</span></span><br><span class=\"line\">dom_tree.xpath(<span class=\"string\">'/html/body/div/a/@href'</span>)</span><br><span class=\"line\"><span class=\"comment\">##语句二：</span></span><br><span class=\"line\">dom_tree.xpath(<span class=\"string\">'//div/a/@href'</span>)</span><br><span class=\"line\"><span class=\"comment\">##语句二：</span></span><br><span class=\"line\">dom_tree.xpath(<span class=\"string\">'//div[@class=\"info-co\"]/a/@href'</span>) 利用class属性</span><br><span class=\"line\">dom_tree.xpath(<span class=\"string\">'//div/a/@href'</span>) <span class=\"comment\">#将返回所有的链接网址</span></span><br><span class=\"line\">dom_tree.xpath(<span class=\"string\">'//div/a/text()'</span>) <span class=\"comment\">#将获取所有链接的名称</span></span><br></pre></td></tr></table></figure></p>\n<p>实际案例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#获取到request请求网站的html</span></span><br><span class=\"line\">dom_tree = etree.HTML(html)</span><br><span class=\"line\">links = dom_tree.xpath(<span class=\"string\">\"//div/span[@class='info-col row2-text']/a\"</span>) <span class=\"comment\">#返回一个xpath对象</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> links:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(i.text)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> index <span class=\"keyword\">in</span> range(len(links_yaoshi)): </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(index) </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(links[index].text) </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(links_yaoshi[index].text) </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(links_danjia[index].text)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 一定注意 xpath 查找提取结果是可以用“|”来提取多个results， 所以最终的code 如下：</span></span><br><span class=\"line\">data = dom_tree.xpath(<span class=\"string\">\"//div[@class='info-table']/li\"</span>) </span><br><span class=\"line\">info = data[0].xpath(<span class=\"string\">'string(.)'</span>).extract()[0] </span><br><span class=\"line\"><span class=\"built_in\">print</span>(data[0].xpath(<span class=\"string\">'string(.)'</span>).strip())  <span class=\"comment\"># 只是打印第一行的结果</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#值得学习</span></span><br><span class=\"line\">dataRes = dom_tree.xpath(<span class=\"string\">\"//div/span[@class='info-col row2-text']/a | //div/span[@class='c-prop-tag2'] | //span[@class='info-col price-item minor']\"</span>)</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h4 id=\"0x02-表格数据处理\"><a href=\"#0x02-表格数据处理\" class=\"headerlink\" title=\"0x02 表格数据处理\"></a>0x02 表格数据处理</h4><h5 id=\"csv-模块\"><a href=\"#csv-模块\" class=\"headerlink\" title=\"csv 模块\"></a>csv 模块</h5><p>(1) csv.reader : 读取csv文件，返回的是迭代类型<br>(2) csv.writer(IO,dialect,delimiter):设置写入csv文件的模板<br>(3) DictReader：也是读取CSV文件，返回字典类型<br>(4) DictWriter：写入字典到CSV文件<br>(5) writerow:csv文件插入一行数据，把下面列表中的每一项放入一个单元格</p>\n<p>案例：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\">#python3使用csv模块读写csv文件</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> csv</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#案例1：输出数据写入CSV文件</span></span><br><span class=\"line\">data = [</span><br><span class=\"line\">    (<span class=\"string\">\"Mike\"</span>, <span class=\"string\">\"male\"</span>, <span class=\"number\">24</span>),</span><br><span class=\"line\">    (<span class=\"string\">\"Lee\"</span>, <span class=\"string\">\"male\"</span>, <span class=\"number\">26</span>),</span><br><span class=\"line\">    (<span class=\"string\">\"Joy\"</span>, <span class=\"string\">\"female\"</span>, <span class=\"number\">22</span>)</span><br><span class=\"line\">]</span><br><span class=\"line\">data1 = [[x] <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> range(<span class=\"number\">10</span>) <span class=\"keyword\">if</span> x % <span class=\"number\">2</span> == <span class=\"number\">0</span>]</span><br><span class=\"line\">data2 = [<span class=\"string\">'测试'</span>,<span class=\"string\">'w'</span>,<span class=\"string\">'我是中文'</span>]  <span class=\"comment\">#字符间以,分割</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#打开文件并设置模式用with打开可以不用去特意关闭file了</span></span><br><span class=\"line\"><span class=\"comment\">#Python3.4以后的新方式，解决空行问题</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> open(<span class=\"string\">'demo.csv'</span>,<span class=\"string\">'w+'</span>,newline=<span class=\"string\">''</span>,encoding=<span class=\"string\">'utf-8'</span>) <span class=\"keyword\">as</span> csvfile:</span><br><span class=\"line\">    <span class=\"comment\"># dialect为打开csv文件的方式，默认是excel，delimiter=\"\\t\"参数指写入的时候的分隔符</span></span><br><span class=\"line\">    csvwriter = csv.writer(csvfile,dialect=(<span class=\"string\">\"excel\"</span>),delimiter=<span class=\"string\">','</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> each <span class=\"keyword\">in</span> data:</span><br><span class=\"line\">        print(<span class=\"string\">\"&gt;&gt;&gt;\"</span>,each)</span><br><span class=\"line\">        csvwriter.writerow(each)</span><br><span class=\"line\">    </span><br><span class=\"line\">    csvwriter.writerow(data2) <span class=\"comment\">#写入一行之中</span></span><br><span class=\"line\">        </span><br><span class=\"line\">  <span class=\"comment\">#csv文件插入一行数据，把下面列表中的每一项放入一个单元格（可以用循环插入多行）</span></span><br><span class=\"line\">     csvwriter.writerow([<span class=\"string\">\"A\"</span>,<span class=\"string\">\"B\"</span>,<span class=\"string\">\"C\"</span>,<span class=\"string\">\"D\"</span>])</span><br><span class=\"line\">     </span><br><span class=\"line\"><span class=\"comment\">#案例2：打开csv文件读取数据</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> open(<span class=\"string\">'demo.csv'</span>,<span class=\"string\">'r+'</span>,encoding=<span class=\"string\">'utf-8'</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    res = csv.reader(f)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> res:</span><br><span class=\"line\">        print(x[<span class=\"number\">0</span>])</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"comment\">#csv中有三列数据，遍历读取时使用三个变量分别对应</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> title, year, director <span class=\"keyword\">in</span> reader:</span><br><span class=\"line\">  list.append(year)</span><br><span class=\"line\">  print(title, <span class=\"string\">\"; \"</span>,  year , <span class=\"string\">\"; \"</span>,  director)</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">with</span> open(<span class=\"string\">\"test.csv\"</span>, <span class=\"string\">\"r\"</span>, encoding = <span class=\"string\">\"utf-8\"</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    reader = csv.DictReader(f)  <span class=\"comment\">#读取字典对象</span></span><br><span class=\"line\">    column = [row <span class=\"keyword\">for</span> row <span class=\"keyword\">in</span> reader]</span><br><span class=\"line\">    </span><br><span class=\"line\">&gt;python demo6<span class=\"number\">.1</span>.py</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>(<span class=\"string\">'Mike'</span>, <span class=\"string\">'male'</span>, <span class=\"number\">24</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>(<span class=\"string\">'Lee'</span>, <span class=\"string\">'male'</span>, <span class=\"number\">26</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>(<span class=\"string\">'Joy'</span>, <span class=\"string\">'female'</span>, <span class=\"number\">22</span>)</span><br><span class=\"line\">Mike</span><br><span class=\"line\">Lee</span><br><span class=\"line\">Joy</span><br><span class=\"line\">测试</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"xlwt-模块\"><a href=\"#xlwt-模块\" class=\"headerlink\" title=\"xlwt 模块\"></a>xlwt 模块</h5><p>描述：对于execl表格数据的读取和写入插入删除等等,支丰富的计函数以及图表；<br>官网下载：<a href=\"http://pypi.python.org/pypi/xlwt\" target=\"_blank\" rel=\"noopener\">http://pypi.python.org/pypi/xlwt</a></p>\n<p>基础方法:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xlwt.Workbook(encoding = <span class=\"string\">'编码格式'</span>)</span><br><span class=\"line\">workbook.add_sheet(<span class=\"string\">'表名称'</span>) </span><br><span class=\"line\">worksheet.write(0, 0, <span class=\"string\">\"写数据\"</span>)</span><br><span class=\"line\">workbook.save(<span class=\"string\">'存储文件名称'</span>)</span><br></pre></td></tr></table></figure></p>\n<p>实际案例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\">import xlwt</span><br><span class=\"line\">def main():</span><br><span class=\"line\">    workbook = xlwt.Workbook(encoding=<span class=\"string\">'utf-8'</span>)  <span class=\"comment\">#创建workbook</span></span><br><span class=\"line\">    worksheet = workbook.add_sheet(<span class=\"string\">'sheet名称'</span>)  <span class=\"comment\">#创建workbook</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#从0开始插入</span></span><br><span class=\"line\">    worksheet.write(0, 0, <span class=\"string\">'Hello'</span>)  <span class=\"comment\"># write_string()</span></span><br><span class=\"line\">    worksheet.write(1, 0, <span class=\"string\">'World'</span>)  <span class=\"comment\"># write_string()</span></span><br><span class=\"line\">    worksheet.write(2, 0, 2)  <span class=\"comment\"># write_number()</span></span><br><span class=\"line\">    worksheet.write(3, 0, 3.00001)  <span class=\"comment\"># write_number()</span></span><br><span class=\"line\">    worksheet.write(4, 0, <span class=\"string\">'=SIN(PI()/4)'</span>)  <span class=\"comment\"># write_formula()</span></span><br><span class=\"line\">    worksheet.write(5, 0, <span class=\"string\">''</span>)  <span class=\"comment\"># write_blank()</span></span><br><span class=\"line\">    worksheet.write(6, 0, None)  <span class=\"comment\"># write_blank()</span></span><br><span class=\"line\"></span><br><span class=\"line\">    linenum = 7</span><br><span class=\"line\">    <span class=\"comment\">#采用二维数组确定为主,往单元格内写入内容</span></span><br><span class=\"line\">    worksheet.write(linenum, 0, <span class=\"string\">\"ID\"</span>)</span><br><span class=\"line\">    worksheet.write(linenum, 1, <span class=\"string\">\"根域名\"</span>)</span><br><span class=\"line\">    worksheet.write(linenum, 2, <span class=\"string\">\"绑定邮箱\"</span>)</span><br><span class=\"line\">    worksheet.write(linenum, 3, <span class=\"string\">\"DNS服务器1\"</span>)</span><br><span class=\"line\">    worksheet.write(linenum, 4, <span class=\"string\">\"DNS服务器2\"</span>)</span><br><span class=\"line\">    worksheet.write(linenum, 5, <span class=\"string\">\"状态\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#保存excel文档</span></span><br><span class=\"line\">    workbook.save(<span class=\"string\">'Excel_Workbook.xls'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\"写入完成！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190725154309.png\" alt=\"WeiyiGeek.excel表格处理\" title=\"\" class=\"\">\n                <p>WeiyiGeek.excel表格处理</p>\n            </figure></p>\n<p><br></p>\n<h5 id=\"xlsxwriter-模块\"><a href=\"#xlsxwriter-模块\" class=\"headerlink\" title=\"xlsxwriter 模块\"></a>xlsxwriter 模块</h5><p>描述：操作EXCEL的xlsxwriterm模块，可以操作多个工作表的文字/数字/公式和图表等；</p>\n<p><strong>模块特点：</strong></p>\n<ul>\n<li>兼容性Exce文件支持Excel2003/2007等版本，支持所有Excel单元格格式</li>\n<li>可以进行单元格合并/批注/自动筛选，丰富多格式字符串等等</li>\n<li>支持共组吧PNG/jpg图像,自定义图表</li>\n<li>内存优化模式支持写入大文件</li>\n</ul>\n<p>模块安装：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install xlsxwriter</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#使用流程</span></span><br><span class=\"line\">1.创建excel文件对象</span><br><span class=\"line\">2.创建工作表对象</span><br><span class=\"line\">3.创建图表对象</span><br><span class=\"line\">4.定义excel的format格式对象</span><br></pre></td></tr></table></figure></p>\n<p><strong>模块方法：</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#1.workbook类</span></span><br><span class=\"line\">obj=Class.Workbook(filename[,options])  <span class=\"comment\">#该类创建一个XlsxWriter的Workbook对象，options为dict类型是可选参数，一般作为初始化工作表内容格式</span></span><br><span class=\"line\">worksheet=obj.dd_worksheet([sheetname])  <span class=\"comment\">#方法用于添加一个新的工作表，sheetname为工作表名称，默认是sheet1</span></span><br><span class=\"line\">format=obj.add_format([properties])  <span class=\"comment\">#方法用于在工作表中创建一个新的格式对象来格式化单元格 bold/normal</span></span><br><span class=\"line\">format.set_border(1) <span class=\"comment\">#定义format对象单元格边框加粗(1像素)的格式</span></span><br><span class=\"line\">format.set_bg_color(<span class=\"string\">'#999999'</span>) <span class=\"comment\">#定义对象的背景演示</span></span><br><span class=\"line\">format.set_blod()  <span class=\"comment\">#显示粗体</span></span><br><span class=\"line\">format.set_num_format(<span class=\"string\">'0.00'</span>) <span class=\"comment\">#定义单元格边框加粗1像素的格式;</span></span><br><span class=\"line\">format.set_align(<span class=\"string\">'center'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">chart=obj.add_chart(options)  <span class=\"comment\">#用于在工作表中创建一个图表对象，内部是通过insert_chart()方法来实现的，参数为dict类型是为图标指定一个字典属性</span></span><br><span class=\"line\">obj.close()  <span class=\"comment\">#作用是关闭工作表文件</span></span><br></pre></td></tr></table></figure><br><br></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#2.Worksheet类：</span></span><br><span class=\"line\"><span class=\"comment\">#Worksheet对象不能直接实例化，而是通过Workbook对象调用add_worksheet()方法来创建，代表一个excel工作表，是比较核心的一个类</span></span><br><span class=\"line\"></span><br><span class=\"line\">worksheet.write(row, col, *args) <span class=\"comment\">#是用来将普通数据写入单元格中。</span></span><br><span class=\"line\"><span class=\"comment\">#简化不同数据类型的写入过程，write方法已作为其他更加具体的数据类型方法的别名</span></span><br><span class=\"line\">write_row(<span class=\"string\">'A1'</span>,写入的数据(单个字符/数组),格式化类型)  <span class=\"comment\">#从A1开始写入一行</span></span><br><span class=\"line\">write_cloumn(<span class=\"string\">'A2'</span>,写入的数据(单个字符/数组),格式化类型)  <span class=\"comment\">#从A2开始写入一列)</span></span><br><span class=\"line\">write_string()：写入字符串类型数据   </span><br><span class=\"line\">wirte_number()：写入数字型数据    </span><br><span class=\"line\">write_blank()：写入空类型数据    </span><br><span class=\"line\">write_formula()：写入公式型数据   </span><br><span class=\"line\">write_datetime()：写入日期型数据   </span><br><span class=\"line\">wirte_boolean()：写入逻辑型数据    </span><br><span class=\"line\">write_url()：写入超链接型数据</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">worksheet.set_row(row, height, cell_format, options) <span class=\"comment\">#用于设定行单元格的属性。</span></span><br><span class=\"line\"><span class=\"comment\">#options字典类型，设置行hidden（隐藏）、level（组合分级）、collpsed（折叠）</span></span><br><span class=\"line\"></span><br><span class=\"line\">worksheet.set_column(first_col, last_col, width, cell_format, options) <span class=\"comment\">#用于设置一列或多列单元格的属性</span></span><br><span class=\"line\"></span><br><span class=\"line\">worksheet.insert_image(row, col, image[, options]) <span class=\"comment\">#用于插入图片到指定的单元格，支持PNG，JPEG，BMP等多种格式以及指定图片位置/比例/连接URL信息。</span></span><br></pre></td></tr></table></figure>\n<p><br><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#3.chart类实图表组件，支持包括面积、条形图、柱状图、折线图、散点图等</span></span><br><span class=\"line\"><span class=\"comment\">#一个图表对象是通过Workbook的add_chart方法创建，通过&#123;type, ‘图表类型’&#125;字典来制定图表类型</span></span><br><span class=\"line\">workbook.add_char(&#123;<span class=\"string\">'type'</span>:<span class=\"string\">\"column\"</span>&#125;)</span><br><span class=\"line\">area：面积样式的图表</span><br><span class=\"line\">bar：条形图</span><br><span class=\"line\">column：柱状图</span><br><span class=\"line\">line：线条样式的图表</span><br><span class=\"line\">pie：饼形图</span><br><span class=\"line\">scatter：散点图</span><br><span class=\"line\">stock：股票样式的图表</span><br><span class=\"line\">radar：雷达样式的图表</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#插入到指定位置</span></span><br><span class=\"line\">chart.add_series(options) <span class=\"comment\">#用于添加一个数据系列的图表参数options为字典类型，用于设置图表系列选项的字典</span></span><br><span class=\"line\"><span class=\"comment\">#常用方法：</span></span><br><span class=\"line\">categories：设置图表类别标签范围；</span><br><span class=\"line\">values：设置图表数据范围；</span><br><span class=\"line\">line：设置图表线条属性，包括宽度、颜色等；</span><br><span class=\"line\">name: <span class=\"string\">\"引用为图例表-即右方的柱形说明图\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#其他常用方法展示</span></span><br><span class=\"line\">chart.set_y_axis(options) <span class=\"comment\">#设置图表y轴小标题</span></span><br><span class=\"line\">chart.set_x_axis(options) <span class=\"comment\">#设置图表X轴小标题</span></span><br><span class=\"line\"><span class=\"comment\"># name：设置x轴名称</span></span><br><span class=\"line\"><span class=\"comment\"># name_font：设置x轴字体</span></span><br><span class=\"line\"><span class=\"comment\"># num_font：设置x轴数字字体属性；</span></span><br><span class=\"line\"></span><br><span class=\"line\">chart.set_size(options)  <span class=\"comment\">#设置图标大小&#123;'width':'1024','height':768&#125;</span></span><br><span class=\"line\">chart.set_title(options)<span class=\"comment\">#设置图表上方标题，参数options为字典类型，、用于设置图表系列选项的字典</span></span><br><span class=\"line\">chart.set_style(style_id)<span class=\"comment\">#用于设置图表样式，style_id为不同数字代表不同样式</span></span><br><span class=\"line\">chart.set_table(options) <span class=\"comment\">#设置x轴为数据表格式形式</span></span><br><span class=\"line\">worksheet.insert_chart(row,col,chartObj) <span class=\"comment\">#将设置的图表插入到工作簿中</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>简单示例</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">workbook = xlsxwriter.Workbook(<span class=\"string\">'Chart.xlsx'</span>) </span><br><span class=\"line\">worksheet =workbook.add_worksheet() </span><br><span class=\"line\">chart = workbook.add_chart(&#123;<span class=\"string\">'type'</span>:<span class=\"string\">'cloumn'</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">format1 = workbook.add_format()</span><br><span class=\"line\">format1.set_border(1)</span><br><span class=\"line\"></span><br><span class=\"line\">format2 = workbook.add_format()</span><br><span class=\"line\">format2.set_align(<span class=\"string\">'center'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">worksheet.write_row(<span class=\"string\">'A1'</span>,写入的数据(单个字符/数组),format1)  <span class=\"comment\">#从A1开始写入一行</span></span><br><span class=\"line\">worksheet.write_cloumn(<span class=\"string\">'A2'</span>,写入的数据(单个字符/数组),format2)  <span class=\"comment\">#从A2开始写入一列)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(2,7)</span><br><span class=\"line\">    worksheet.write_formula(<span class=\"string\">'I'</span>+i,<span class=\"string\">'=AVERAGE(B'</span>+i+<span class=\"string\">':H'</span>+i+<span class=\"string\">')'</span>.format1)  <span class=\"comment\">#从B2:H2的平均数</span></span><br><span class=\"line\">    <span class=\"comment\">#对于图表添加数据也是一样的（重点之处）</span></span><br><span class=\"line\">    chart.add_series(&#123;</span><br><span class=\"line\">        <span class=\"string\">'categories'</span>: <span class=\"string\">'=Sheet1!B1:H1'</span>, <span class=\"comment\">#将作为图表x轴柱形下方说明</span></span><br><span class=\"line\">        <span class=\"string\">'values'</span>: <span class=\"string\">'=Sheet1!$B$'</span>+i+<span class=\"string\">':$H$'</span>+1, <span class=\"comment\">#图表数据区域赋值</span></span><br><span class=\"line\">        <span class=\"string\">'line'</span>: &#123;<span class=\"string\">'color'</span>: <span class=\"string\">'black'</span>&#125;,</span><br><span class=\"line\">        <span class=\"string\">'name'</span>: u<span class=\"string\">'引用为图例表-即右方的柱形说明图'</span>, <span class=\"comment\">#默认为系列1</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">chart.set_x_axis(&#123;<span class=\"string\">'name'</span>:u<span class=\"string\">' 星期数 '</span>&#125;)</span><br><span class=\"line\">chart.set_y_axis(&#123;<span class=\"string\">'name'</span>:u<span class=\"string\">' Mb/s '</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">worksheet.insert_chart(<span class=\"string\">'AB'</span>, chart)</span><br><span class=\"line\">workbook.close() <span class=\"comment\">#关闭文档</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>模块示例：</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># coding=utf-8</span></span><br><span class=\"line\">import xlsxwriter</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#创建一个新的Excel文件并添加工作表</span></span><br><span class=\"line\">workbook = xlsxwriter.Workbook(<span class=\"string\">'demo.xlsx'</span>)     <span class=\"comment\">#创建工作簿</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#创建一个新的工作簿</span></span><br><span class=\"line\">worksheet1 = workbook.add_worksheet()            <span class=\"comment\">#创建工作表 sheet1(默认表名称)</span></span><br><span class=\"line\">worksheet2 = workbook.add_worksheet(<span class=\"string\">'testSheet2'</span>) <span class=\"comment\">#创建工作表 testsheet2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#在工作表中创建一个新的格式对象来格式化单元格，实现加粗</span></span><br><span class=\"line\">bold = workbook.add_format(&#123;<span class=\"string\">'bold'</span>: True&#125;)    <span class=\"comment\">#方式1</span></span><br><span class=\"line\">bold = workbook.add_format();bold.set_bold()  <span class=\"comment\">#方式2</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#数据写入到工作簿之中,注意：两种方式实际是一种只是别名而已可以采用 A1 和 (0,0) 方式定位</span></span><br><span class=\"line\">worksheet.write(<span class=\"string\">'A1'</span>, <span class=\"string\">'Hello'</span>)        <span class=\"comment\">#总表写入简单文本</span></span><br><span class=\"line\">worksheet.write_string(0,1, <span class=\"string\">'World'</span>)  <span class=\"comment\">#总表写入简单文本字符串类型数据</span></span><br><span class=\"line\"></span><br><span class=\"line\">worksheet.write(<span class=\"string\">'A2'</span>, 123.456)        <span class=\"comment\">#写入数字类型数据</span></span><br><span class=\"line\">worksheet.write_number(1, 1, 123456)    <span class=\"comment\">#按照坐标写入</span></span><br><span class=\"line\"></span><br><span class=\"line\">worksheet.write(<span class=\"string\">'A3'</span>, None)             <span class=\"comment\">#写入空数据类型</span></span><br><span class=\"line\">worksheet.write_blank(2,1, <span class=\"string\">''</span>)       <span class=\"comment\">#写入空数据类型</span></span><br><span class=\"line\"></span><br><span class=\"line\">worksheet.write(<span class=\"string\">'A4'</span>, <span class=\"string\">'=SUM(A1:B2)'</span>)       <span class=\"comment\">#写入公式型数据 </span></span><br><span class=\"line\">worksheet.write_formula(3,1, <span class=\"string\">'=SIN(PI()/4)'</span>)    </span><br><span class=\"line\"></span><br><span class=\"line\">worksheet.write(<span class=\"string\">'A5'</span>, datetime.datetime.strftime(<span class=\"string\">'2019-08-09'</span>,<span class=\"string\">'y%-m%-d%'</span>),workbook.add_format(&#123;<span class=\"string\">'num_format'</span>: <span class=\"string\">'yyyy-mm-dd'</span>&#125;))       <span class=\"comment\">#写入日期型数据 </span></span><br><span class=\"line\">worksheet.write_datatime(4,1,datetime.datetime.strftime(<span class=\"string\">'2019-08-09'</span>,<span class=\"string\">'y%-m%-d%'</span>),workbook.add_format(&#123;<span class=\"string\">'num_format'</span>: <span class=\"string\">'yyyy-mm-dd'</span>&#125;))</span><br><span class=\"line\"></span><br><span class=\"line\">worksheet.write(<span class=\"string\">'A6'</span>, True)       <span class=\"comment\">#写入逻辑类型数据</span></span><br><span class=\"line\">worksheet.write_boolean(5,1, False)      </span><br><span class=\"line\"></span><br><span class=\"line\">worksheet.write(<span class=\"string\">'A7'</span>, <span class=\"string\">'http://baidu.com'</span>)         <span class=\"comment\">#写入超链接数据类型</span></span><br><span class=\"line\">worksheet.write_url(6,1, <span class=\"string\">'http://www.python.org'</span>)   </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#设置一列或者多列单元属性</span></span><br><span class=\"line\">worksheet1.set_column(0, 1, 10, bold)   <span class=\"comment\">#设定列A到B单元格宽度10像素加粗</span></span><br><span class=\"line\">worksheet1.set_column(<span class=\"string\">'C:D'</span>, 20)  <span class=\"comment\"># 设置C到D单元格宽度20像素  </span></span><br><span class=\"line\">worksheet1.set_column(<span class=\"string\">'E:G'</span>, None, None, &#123;<span class=\"string\">'hidden'</span>: 1&#125;) <span class=\"comment\">#隐藏E到G单元格 </span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#设置一行或者多行单元属性</span></span><br><span class=\"line\">worksheet1.set_row(0, 30,bold)   <span class=\"comment\">#设置都1行单元个高度30像素定义加粗</span></span><br><span class=\"line\">worksheet1.set_row(1, 30,workbook,add_format(&#123;<span class=\"string\">'italic'</span>:True&#125;))   <span class=\"comment\">#设置都1行单元个高度30像素定义斜体</span></span><br><span class=\"line\">worksheet1.set_row(6, None, None, &#123;<span class=\"string\">'hidden'</span>: 1&#125;) <span class=\"comment\">#隐藏第6行</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#在第二个单元簿地单元格插入python-logo.png图片超链接为http://python.org </span></span><br><span class=\"line\">worksheet2.insert_image(<span class=\"string\">'A1'</span>, <span class=\"string\">'python-logo.jpg'</span>, &#123;<span class=\"string\">'url'</span>: <span class=\"string\">'http://python.org'</span>&#125;)</span><br><span class=\"line\">worksheet2.insert_image(<span class=\"string\">'A3'</span>, <span class=\"string\">'python-logo.jpg'</span>)   <span class=\"comment\">#插入图片</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Char类图表示例</span></span><br><span class=\"line\">chart = workbook.addchart(&#123;<span class=\"built_in\">type</span>,<span class=\"string\">'column'</span>&#125;) <span class=\"comment\">#创建一个column(柱形)图标</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#为图表添加数据</span></span><br><span class=\"line\">chart.add_series(&#123; </span><br><span class=\"line\">    <span class=\"string\">'categories'</span>: <span class=\"string\">'=testSheet2!$A$1:$A$5'</span>,    </span><br><span class=\"line\">    <span class=\"string\">'values'</span>: <span class=\"string\">'=testSheet2!$B$1:$B3'</span>, </span><br><span class=\"line\">    <span class=\"string\">'line'</span>: &#123;<span class=\"string\">'color'</span>: <span class=\"string\">'red'</span>&#125;,</span><br><span class=\"line\">    <span class=\"string\">'name'</span>： </span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#设置图表X轴显示</span></span><br><span class=\"line\">chart.set_x_axis(&#123;</span><br><span class=\"line\">    <span class=\"string\">'name'</span>: <span class=\"string\">'x name'</span>,</span><br><span class=\"line\">    <span class=\"string\">'name_font'</span>: &#123;<span class=\"string\">'size'</span>: 14, <span class=\"string\">'bold'</span>: True&#125;</span><br><span class=\"line\">    <span class=\"string\">'num_font'</span>: &#123;<span class=\"string\">'italic'</span>: True&#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#设置x轴为数据表格式</span></span><br><span class=\"line\">chart.set_table()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#图表大小</span></span><br><span class=\"line\">chart.set_size(&#123;<span class=\"string\">'width'</span>: 720, <span class=\"string\">'height'</span>: 576&#125;)</span><br><span class=\"line\"><span class=\"comment\">#图表标题</span></span><br><span class=\"line\">chart.set_title(&#123;<span class=\"string\">'name'</span>:<span class=\"string\">\"Table Title Demo\"</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#图表样式</span></span><br><span class=\"line\">chart.set_style(37)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#插入图表到工作簿中</span></span><br><span class=\"line\">worksheet2.insert_chart(<span class=\"string\">'A7'</span>, chart)</span><br><span class=\"line\"></span><br><span class=\"line\">workbook.close()    <span class=\"comment\">#关闭工作薄</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190809173245.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n<p><br></p>\n<h4 id=\"0x04-文件转换\"><a href=\"#0x04-文件转换\" class=\"headerlink\" title=\"0x04 文件转换\"></a>0x04 文件转换</h4><h5 id=\"1-PDFMiner模块\"><a href=\"#1-PDFMiner模块\" class=\"headerlink\" title=\"1.PDFMiner模块\"></a>1.PDFMiner模块</h5><p>PDFMiner是一个专注于从PDF文档中提取、分析文本信息的工具。它不仅可以获取特定页码特定位置处的信息，也能获得字体等信息。</p>\n<p>安装模块说明:<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#首先安装PDFMiner，注意Python3要安装pdfminer3k</span></span><br><span class=\"line\"><span class=\"comment\">#Windows下面安装pdfminer3k</span></span><br><span class=\"line\">pip install pdfminer3k</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Linux下面安装pdfminer</span></span><br><span class=\"line\">pip install pdfminer</span><br></pre></td></tr></table></figure></p>\n<p>工作原理图:<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20191107212551.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p>解析pdf文件用到的类： </p>\n<ul>\n<li>PDFParser：从一个文件中获取数据  </li>\n<li>PDFDocument：保存获取的数据，和PDFParser是相互关联的  </li>\n<li>PDFPageInterpreter: 处理页面内容  </li>\n<li>PDFDevice : 将其翻译成你需要的格式  </li>\n<li>PDFResourceManager : 用于存储共享资源，如字体或图像。</li>\n</ul>\n<p>Layout布局分析返回的PDF文档中的每个页面LTPage对象。这个对象和页内包含的子对象形成一个树结构。<br>如图所示：<br><img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20191107221646.png\" alt=\"WeiyiGeek.\"></p>\n<p>LTPage :表示整个页可能会含有<code>LTTextBox，LTFigure，LTImage，LTRect，LTCurve和LTLine</code>子对象。  </p>\n<ul>\n<li>LTTextBox:表示一组文本块可能包含在一个矩形区域。注意此box是由几何分析中创建，并且不一定表示该文本的一个逻辑边界。它包含LTTextLine对象的列表。使用 get_text()方法返回文本内容。  </li>\n<li>LTTextLine :包含表示单个文本行LTChar对象的列表。字符对齐要么水平或垂直，取决于文本的写入模式。使用get_text()方法返回文本内容。  </li>\n<li>LTAnno:在文本中字母实际上被表示为Unicode字符串。需要注意的是，虽然一个LTChar对象具有实际边界，LTAnno对象没有，因为这些是“虚拟”的字符，根据两个字符间的关系（例如，一个空格）由布局分析后插入。  </li>\n<li>LTImage:表示一个图像对象。嵌入式图像可以是JPEG或其它格式，但是目前PDFMiner没有放置太多精力在图形对象。  </li>\n<li>LTLine:代表一条直线。可用于分离文本或附图。  </li>\n<li>LTRect:表示矩形。可用于框架的另一图片或数字。  </li>\n<li>LTCurve:表示一个通用的Bezier曲线</li>\n</ul>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Development","path":"api/categories/Development.json"},{"name":"Programming","path":"api/categories/Programming.json"}],"tags":[{"name":"Python3","path":"api/tags/Python3.json"}]}