{"title":"2.Jmeter在Kubernetes的devops环境中分布式压力测试实践","slug":"系统运维/自动化测试/Jmeter/2.Jmeter在Kubernetes环境中分布式压力测试实践-cost","date":"2022-06-12T15:36:30.000Z","updated":"2023-03-13T03:53:10.577Z","url":"2022/6-12-669.html","path":"api/articles/2022/6-12-669.html.json","covers":["https://img.weiyigeek.top/2022/5/20220719093748.png","https://img.weiyigeek.top/2022/5/20220719164527.png","https://img.weiyigeek.top/2022/5/20220719165045.png","https://img.weiyigeek.top/2022/5/20220719170520.png","https://img.weiyigeek.top/2022/5/20220719171650.png","https://img.weiyigeek.top/2022/5/20220613091854.png","https://img.weiyigeek.top/2022/5/20220719173933.png","https://img.weiyigeek.top/2022/5/20220719173813.png","https://img.weiyigeek.top/2022/5/20220719195719.png","https://img.weiyigeek.top/2022/5/20220719201207.png","https://img.weiyigeek.top/2022/5/20220720160845.png","https://img.weiyigeek.top/2022/5/20220720170134.png","https://img.weiyigeek.top/2022/5/20220720163415.png","https://img.weiyigeek.top/2022/5/20220720173210.png","https://img.weiyigeek.top/2022/5/20220721093703.png","https://img.weiyigeek.top/2022/5/20220721094538.png","https://img.weiyigeek.top/2022/5/20220721094651.png","https://img.weiyigeek.top/2022/5/20220721093438.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h2 id=\"0x00-前言简述\"><a href=\"#0x00-前言简述\" class=\"headerlink\" title=\"0x00 前言简述\"></a>0x00 前言简述</h2><p>描述: 最近公司有业务需要搞一个自动化的 jmeter 分布式压力测试项目, 基于现有的 Kubernetes 、Jenkins、 Gitlab 技术栈环境, 本章实践了在 Kubernetes 集群中使用 helm 搭建 jmeter 分布式压力测试 Master 与 server 以及 Influxdb 时序数据库 和 Grafana 环境，在 Windows 中 安装 jmeter 编写带有线程组的压力测试任务，在线程组中利用变量参数传递线程数和循环此处，然后再添加后端监听器设置为influxdb, 针对压力测试数据进行采集, 导出压力测试jmx文件，上传到 Gitlab 创建的 jmeter 仓库中，此处我们已经将<code>Jenkins + Gitlab</code>自动化集成部署已经打通(可以参考下面文章进行相应的学习配置)，在上传到 jmeter 代码仓库后将会通过 webhook 请求 jenkins 流水线项目从而触发自动化部署操作，然后Jenkins会使用kubenetes插件在集群中创建一个jenkins slave Pod(插件的使用以及slave 镜像可以在下面实践中获得)，之后便会执行流水线中三个步骤即<code>代码拉取、压力测试、结果展示</code>，并且会将部署执行情况通过企业微信提供的webhook发送到指定运维群中，我们可以非常方便点击grafana中 Jmeter 展示数据的 dashboard 地址进行查看 Jmeter 相关压力测试指标数据等，然后针对压力测试数据进行应用和部署环境的调优。</p>\n<p><br/></p>\n<p><strong>技术栈介绍</strong><br>基于公司现有Kubernetes 、Jenkins、 Gitlab 技术栈,实现在devops  Jenkins CI/CD 自动化环境中使用 jmeter-distributed 针对部署的正式或者测试环境进行 jmeter 分布式压力测试，并且使用InfluxDB存储压力测试数据，和利用 Grafana进行压力测试数据的实时展示，在测试、运维、开发工作可以借此压力测试数据针对开发应用不断优化，保证上线后承载能力。</p>\n<ul>\n<li>Kubernetes :  Google 在 2014 年开源了 Kubernetes 项目。 Kubernetes 建立在Google 大规模运行生产工作负载十几年经验，它是一个可移植、可扩展的开源平台,用于管理容器化的工作负载和服务,方便进行声明式配置和自动化。</li>\n<li>GitLab : 是一个用于仓库管理系统的开源项目，使用Git作为代码管理工具(类似于 Github)，并在此基础上搭建起来的Web服务, 你可以将其认为是在企业中私有化代码仓库。</li>\n<li>Jenkins : 一个开源自动化服务器，使世界各地的开发人员能够可靠地构建、测试和部署他们的软件，即 CI/CD 持续集成与交互。</li>\n<li>Grafana : 开放、可组合的可观察性和数据可视化平台，可视化来自<code>普罗米修斯（Prometheus）、洛基（Loki）、Elasticsearch、InfluxDB、Postgres</code>等多个来源的度量、日志和跟踪。</li>\n<li>Jmeter : 是 Apache 组织基于 Java 开发的压力测试工具，用于对软件做压力测试。</li>\n<li>InfluxDB : 是一个开源时间序列平台(数据库), 包括用于存储和查询数据、在后台处理数据以用于 ETL 或监控和警报目的、用户仪表板以及可视化和探索数据等的 API。</li>\n</ul>\n<p>好的, 废话不多说实践才是王道。</p>\n<p><strong>本章完整原文地址</strong>: </p>\n<ul>\n<li><a href=\"https://mp.weixin.qq.com/s/-Gbrtno8MOfqgCdgWxKE0w\" target=\"_blank\" rel=\"noopener\">企业运维实践-如何在K8S集群环境Gitlab+Jenkins+Jmeter+Grafana技术中实现自动化分布压力测试数据展示</a></li>\n<li><a href=\"https://mp.weixin.qq.com/s/-Gbrtno8MOfqgCdgWxKE0w\" target=\"_blank\" rel=\"noopener\">https://mp.weixin.qq.com/s/-Gbrtno8MOfqgCdgWxKE0w</a></li>\n</ul>\n<hr>\n<h2 id=\"0x01-安装配置\"><a href=\"#0x01-安装配置\" class=\"headerlink\" title=\"0x01 安装配置\"></a>0x01 安装配置</h2><h3 id=\"1-基础环境\"><a href=\"#1-基础环境\" class=\"headerlink\" title=\"1.基础环境\"></a>1.基础环境</h3><p><strong>环境说明</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl get node</span><br><span class=\"line\">  <span class=\"comment\"># NAME       STATUS   ROLES                  AGE    VERSION</span></span><br><span class=\"line\">  <span class=\"comment\"># weiyigeek-107   Ready    control-plane,master   186d   v1.23.1</span></span><br><span class=\"line\">  <span class=\"comment\"># weiyigeek-108   Ready    control-plane,master   185d   v1.23.1</span></span><br><span class=\"line\">  <span class=\"comment\"># weiyigeek-109   Ready    control-plane,master   185d   v1.23.1</span></span><br><span class=\"line\">  <span class=\"comment\"># weiyigeek-223   Ready    work                   185d   v1.23.1</span></span><br><span class=\"line\">  <span class=\"comment\"># weiyigeek-224   Ready    work                   185d   v1.23.1</span></span><br><span class=\"line\">  <span class=\"comment\"># weiyigeek-225   Ready    work                   186d   v1.23.1</span></span><br><span class=\"line\">  <span class=\"comment\"># weiyigeek-226   Ready    work                   25d    v1.23.1</span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\"># 其它辅助软件工具</span></span><br><span class=\"line\">Java     1.8.0_251</span><br><span class=\"line\">Jmeter   5.4.3</span><br><span class=\"line\">Jenkins  2.330</span><br><span class=\"line\">InfluxDB 1.8.10</span><br><span class=\"line\">Grafana  v9.0.2</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<h4 id=\"在K8S集群中部署动态持久卷\"><a href=\"#在K8S集群中部署动态持久卷\" class=\"headerlink\" title=\"在K8S集群中部署动态持久卷\"></a>在K8S集群中部署动态持久卷</h4><p>描述: 此处使用nfs动态持久卷主要是用于PV/PVC来存放Pod中需要持久化存储的数据。</p>\n<p>参考链接: <a href=\"https://blog.weiyigeek.top/2022/6-7-664.html#1-%E9%9B%86%E7%BE%A4%E4%B8%AD%E5%9F%BA%E4%BA%8Enfs%E7%9A%84provisioner%E7%9A%84%E5%8A%A8%E6%80%81%E6%8C%81%E5%8D%B7%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2\">https://blog.weiyigeek.top/2022/6-7-664.html#1-集群中基于nfs的provisioner的动态持卷环境部署</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 挂载测试的nfs共享目录到本地/storage/dev中</span></span><br><span class=\"line\">sudo mkdir -vp /storage/dev</span><br><span class=\"line\">sudo tee -a /etc/fstab &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">192.168.12.32:/k8sdevtest /storage/dev nfs defaults 0 0</span><br><span class=\"line\">EOF</span><br><span class=\"line\">sudo mount -a</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 部署nfs-subdir-external-provisioner到storage名称空间下。</span></span><br><span class=\"line\">kubectl create ns storage</span><br><span class=\"line\">helm install nfs-devtest nfs-subdir-external-provisioner-dev/ --debug --namespace storage</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (3) 查看集群中的创建 storageclass nfs-devtest</span></span><br><span class=\"line\">kubectl get storageclasses.storage.k8s.io nfs-devtest</span><br><span class=\"line\">  <span class=\"comment\"># NAME                    PROVISIONER                                    RECLAIMPOLICY   VOLUMEBINDINGMODE   ALLOWVOLUMEEXPANSION   AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># nfs-devtest (default)   cluster.local/nfs-devtest-subdir-provisioner   Delete          Immediate           true                   8m13s</span></span><br></pre></td></tr></table></figure>\n<p><br></p>\n<h4 id=\"在K8S集群中部署压力测试演示站点\"><a href=\"#在K8S集群中部署压力测试演示站点\" class=\"headerlink\" title=\"在K8S集群中部署压力测试演示站点\"></a>在K8S集群中部署压力测试演示站点</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.此处，拉取我主页站点静态资源为例进行压力测试站点演示</span></span><br><span class=\"line\">mkdir -vp /nfs/app/web &amp;&amp; git https://github.com/WeiyiGeek/WeiyiGeek.git</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.准备一个 Nginx 配置文件</span></span><br><span class=\"line\">tee /nfs/app/web/nginx.conf &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">user  nginx;</span><br><span class=\"line\">worker_processes  auto;</span><br><span class=\"line\">error_log  /var/<span class=\"built_in\">log</span>/nginx/error.log notice;</span><br><span class=\"line\">pid        /var/run/nginx.pid;</span><br><span class=\"line\">events &#123;</span><br><span class=\"line\">  worker_connections  1024;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">http &#123;</span><br><span class=\"line\">  include       /etc/nginx/mime.types;</span><br><span class=\"line\">  default_type  application/octet-stream;</span><br><span class=\"line\">  log_format  main  <span class=\"string\">'$remote_addr - $remote_user [$time_local] \"$request\" $status $body_bytes_sent \"$http_referer\" \"$http_user_agent\" \"$http_x_forwarded_for\"'</span>;</span><br><span class=\"line\">  access_log  /var/<span class=\"built_in\">log</span>/nginx/access.log  main;</span><br><span class=\"line\">  sendfile        on;</span><br><span class=\"line\">  keepalive_timeout  65;</span><br><span class=\"line\">  gzip  on;</span><br><span class=\"line\">  server &#123;</span><br><span class=\"line\">    listen       80;</span><br><span class=\"line\">    listen  [::]:80;</span><br><span class=\"line\">    server_name  localhost;</span><br><span class=\"line\">    <span class=\"comment\">#access_log  /var/log/nginx/host.access.log  main;</span></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">      root   /usr/share/nginx/html;</span><br><span class=\"line\">      index  index.html index.htm;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">kubectl create cm nginx-conf --from-file=nginx.conf --namespace devtest</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.使用StatefulSet资源控制器部署nginx为静态资源提供web访问。</span></span><br><span class=\"line\">tee /nfs/app/web/jmeter-test-html.yaml &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">apiVersion: apps/v1</span><br><span class=\"line\">kind: StatefulSet</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: jmeter-test-html</span><br><span class=\"line\">  namespace: devtest</span><br><span class=\"line\">  labels:</span><br><span class=\"line\">    app: web-html</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  replicas: 1</span><br><span class=\"line\">  selector:</span><br><span class=\"line\">    matchLabels:</span><br><span class=\"line\">      app: web-html</span><br><span class=\"line\">  serviceName: <span class=\"string\">\"jmeter-test-html\"</span></span><br><span class=\"line\">  template:</span><br><span class=\"line\">    metadata:</span><br><span class=\"line\">      labels:</span><br><span class=\"line\">        app: web-html</span><br><span class=\"line\">    spec:</span><br><span class=\"line\">      <span class=\"comment\"># affinity:</span></span><br><span class=\"line\">      <span class=\"comment\">#   nodeAffinity:</span></span><br><span class=\"line\">      <span class=\"comment\">#     requiredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class=\"line\">      <span class=\"comment\">#       nodeSelectorTerms:</span></span><br><span class=\"line\">      <span class=\"comment\">#       - matchExpressions:</span></span><br><span class=\"line\">      <span class=\"comment\">#         - key: node</span></span><br><span class=\"line\">      <span class=\"comment\">#           operator: In</span></span><br><span class=\"line\">      <span class=\"comment\">#           values:</span></span><br><span class=\"line\">      <span class=\"comment\">#           - work</span></span><br><span class=\"line\">      <span class=\"comment\">#   podAntiAffinity:</span></span><br><span class=\"line\">      <span class=\"comment\">#     preferredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class=\"line\">      <span class=\"comment\">#     - podAffinityTerm:</span></span><br><span class=\"line\">      <span class=\"comment\">#         labelSelector:</span></span><br><span class=\"line\">      <span class=\"comment\">#           matchExpressions:</span></span><br><span class=\"line\">      <span class=\"comment\">#           - key: app</span></span><br><span class=\"line\">      <span class=\"comment\">#             operator: In</span></span><br><span class=\"line\">      <span class=\"comment\">#             values:</span></span><br><span class=\"line\">      <span class=\"comment\">#             - web-html</span></span><br><span class=\"line\">      <span class=\"comment\">#         topologyKey: kubernetes.io/hostname</span></span><br><span class=\"line\">      <span class=\"comment\">#       weight: 100</span></span><br><span class=\"line\">      volumes:</span><br><span class=\"line\">      - name: workdir</span><br><span class=\"line\">        emptyDir: &#123;&#125;</span><br><span class=\"line\">      - name: static-file</span><br><span class=\"line\">        hostPath:</span><br><span class=\"line\">          path: /nfs/app/web/WeiyiGeek</span><br><span class=\"line\">          <span class=\"built_in\">type</span>: DirectoryOrCreate</span><br><span class=\"line\">      - name: nginx-conf</span><br><span class=\"line\">        configMap:</span><br><span class=\"line\">          name: nginx-conf</span><br><span class=\"line\">          items:</span><br><span class=\"line\">          - key: nginx.conf</span><br><span class=\"line\">            path: nginx.conf</span><br><span class=\"line\">      - name: timezone</span><br><span class=\"line\">        hostPath:</span><br><span class=\"line\">          path: /usr/share/zoneinfo/Asia/Shanghai</span><br><span class=\"line\">      initContainers:</span><br><span class=\"line\">      - name: sysctl</span><br><span class=\"line\">        image: alpine:3.15.4</span><br><span class=\"line\">        imagePullPolicy: IfNotPresent</span><br><span class=\"line\">        <span class=\"built_in\">command</span>:</span><br><span class=\"line\">        - sh</span><br><span class=\"line\">        - -c</span><br><span class=\"line\">        - |</span><br><span class=\"line\">          mount -o remount rw /proc/sys</span><br><span class=\"line\">          sysctl -w net.core.somaxconn=65535</span><br><span class=\"line\">          sysctl -w net.ipv4.tcp_tw_reuse=1</span><br><span class=\"line\">          sysctl -w net.ipv4.ip_local_port_range=<span class=\"string\">\"1024 65535\"</span></span><br><span class=\"line\">          sysctl -w fs.file-max=1048576</span><br><span class=\"line\">          sysctl -w fs.inotify.max_user_instances=16384</span><br><span class=\"line\">          sysctl -w fs.inotify.max_user_watches=524288</span><br><span class=\"line\">          sysctl -w fs.inotify.max_queued_events=16384</span><br><span class=\"line\">        securityContext:</span><br><span class=\"line\">          privileged: <span class=\"literal\">true</span></span><br><span class=\"line\">      containers:</span><br><span class=\"line\">      - name: nginx</span><br><span class=\"line\">        image: nginx:1.21.6</span><br><span class=\"line\">        imagePullPolicy: IfNotPresent</span><br><span class=\"line\">        ports:</span><br><span class=\"line\">        - name: http</span><br><span class=\"line\">          protocol: TCP</span><br><span class=\"line\">          containerPort: 80</span><br><span class=\"line\">        volumeMounts:</span><br><span class=\"line\">        - name: static-file</span><br><span class=\"line\">          mountPath: /usr/share/nginx/html</span><br><span class=\"line\">        - name: nginx-conf</span><br><span class=\"line\">          mountPath: /etc/nginx/nginx.conf</span><br><span class=\"line\">          subPath: nginx.conf</span><br><span class=\"line\">---</span><br><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">kind: Service</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: jmeter-test-html</span><br><span class=\"line\">  namespace: devtest</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: nodePort</span><br><span class=\"line\">  ports:</span><br><span class=\"line\">    - port: 80</span><br><span class=\"line\">      targetPort: 80</span><br><span class=\"line\">      protocol: TCP</span><br><span class=\"line\">      nodePort: 32644</span><br><span class=\"line\">  selector:</span><br><span class=\"line\">    app: web-html</span><br><span class=\"line\">EOF</span><br><span class=\"line\">kubectl apply -f jmeter-test-html.yaml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4.验证部署的nginx压力测试站点</span></span><br><span class=\"line\">$ kubectl get svc -n devtest jmeter-test-html</span><br><span class=\"line\">  <span class=\"comment\"># NAME               TYPE       CLUSTER-IP    EXTERNAL-IP   PORT(S)        AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># jmeter-test-html   NodePort   10.103.88.2   &lt;none&gt;        80:32644/TCP   37d</span></span><br><span class=\"line\">$ curl -s 10.103.88.2</span><br></pre></td></tr></table></figure>\n<p>温馨提示: 如有同道之人在进行实践时,请更改上述文件目录为您实际存放静态资源以及nginx配置的目录。</p>\n<p><br/></p>\n<h3 id=\"2-依赖环境\"><a href=\"#2-依赖环境\" class=\"headerlink\" title=\"2.依赖环境\"></a>2.依赖环境</h3><h4 id=\"在-Windows-中安装-Apache-jmeter-工具\"><a href=\"#在-Windows-中安装-Apache-jmeter-工具\" class=\"headerlink\" title=\"在 Windows 中安装 Apache jmeter 工具\"></a>在 Windows 中安装 Apache jmeter 工具</h4><p>描述: 此处针对于Windows中安装JAVA环境以及 Apache jmeter不在累述, 如果不会安装的同学可以参考 (1.使用Apache Jmeter对应用压力测试学习与实践)[<a href=\"https://blog.weiyigeek.top/2022/6-11-661.html#Windows]\">https://blog.weiyigeek.top/2022/6-11-661.html#Windows]</a> 这篇文章或者参考<code>Apache jmeter</code>的官网。</p>\n<p><br/></p>\n<h4 id=\"以二进制方式安装Helm部署工具\"><a href=\"#以二进制方式安装Helm部署工具\" class=\"headerlink\" title=\"以二进制方式安装Helm部署工具\"></a>以二进制方式安装Helm部署工具</h4><p><strong>快速部署</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ARCH=$(dpkg --<span class=\"built_in\">print</span>-architecture)</span><br><span class=\"line\">VERSION=<span class=\"string\">\"3.8.2\"</span></span><br><span class=\"line\">wget https://get.helm.sh/helm-v<span class=\"variable\">$&#123;VERSION&#125;</span>-linux-<span class=\"variable\">$&#123;ARCH&#125;</span>.tar.gz -O /tmp/helm-v<span class=\"variable\">$&#123;VERSION&#125;</span>-linux-<span class=\"variable\">$&#123;ARCH&#125;</span>.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> /tmp/ &amp;&amp; tar -zxf helm-v<span class=\"variable\">$&#123;VERSION&#125;</span>-linux-<span class=\"variable\">$&#123;ARCH&#125;</span>.tar.gz</span><br><span class=\"line\">sudo cp linux-amd64/helm /usr/<span class=\"built_in\">local</span>/bin/</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h4 id=\"以-helm-方式安装-Grafana-9-x\"><a href=\"#以-helm-方式安装-Grafana-9-x\" class=\"headerlink\" title=\"以 helm 方式安装 Grafana 9.x\"></a>以 helm 方式安装 Grafana 9.x</h4><p><strong>快速部署</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 添加 chart 仓库与索引更新</span></span><br><span class=\"line\">$ helm repo add grafana https://grafana.github.io/helm-charts</span><br><span class=\"line\">$ helm repo update</span><br><span class=\"line\">$ helm search repo grafana </span><br><span class=\"line\">  <span class=\"comment\"># grafana/grafana   6.32.3   9.0.3   The leading tool for querying and visualizing t...</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取指定 chart 版本的granfa相关部署参数</span></span><br><span class=\"line\">$ helm show values grafana/grafana --version 6.32.3  &gt; granfa-values.yaml  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装指定 chart 版本以及部署参数</span></span><br><span class=\"line\">$ helm install grafana grafana/grafana --version 6.32.3  --<span class=\"built_in\">set</span> nodeSelector=<span class=\"string\">\"kubernetes\\.io/hostname=node-223\"</span>,service.type=NodePort,persistence.enabled=True,persistence.storageClassName=<span class=\"string\">\"persistentVolumeClaim\"</span>,persistence.size=5Gi,persistence.accessModes=ReadWriteOnce -n dashboard --debug --create-namespace</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取 grafana 初始化登陆密码</span></span><br><span class=\"line\">kubectl get secrets -n devops grafana -o yaml</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"RlJLMkR1bmlpalY2YXRMcGtuU053NmhLanRibnhZZUZRY25tV0ZtSg==\"</span> | base64 -d</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除部署的grafana应用</span></span><br><span class=\"line\">$ helm delete grafana</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h2 id=\"0x02-Kubernetes-jmeter-InfluxDB-1-8-x-Grafana-Jenkins-进行自动化分布式压力测试及其结果展示\"><a href=\"#0x02-Kubernetes-jmeter-InfluxDB-1-8-x-Grafana-Jenkins-进行自动化分布式压力测试及其结果展示\" class=\"headerlink\" title=\"0x02 Kubernetes + jmeter + InfluxDB 1.8.x + Grafana + Jenkins 进行自动化分布式压力测试及其结果展示\"></a>0x02 Kubernetes + jmeter + InfluxDB 1.8.x + Grafana + Jenkins 进行自动化分布式压力测试及其结果展示</h2><h3 id=\"1-以-helm-方式安装分布式-jmeter-压力测试应用\"><a href=\"#1-以-helm-方式安装分布式-jmeter-压力测试应用\" class=\"headerlink\" title=\"(1) 以 helm 方式安装分布式 jmeter 压力测试应用\"></a>(1) 以 helm 方式安装分布式 jmeter 压力测试应用</h3><p><strong>快速部署</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 添加 chart 仓库与索引更新</span></span><br><span class=\"line\">$ helm repo add apphub https://apphub.aliyuncs.com/</span><br><span class=\"line\">$ helm repo update</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 搜索可用的 chart 仓库中软件版本</span></span><br><span class=\"line\">$ helm search repo jmeter</span><br><span class=\"line\">  <span class=\"comment\"># NAME                            CHART VERSION   APP VERSION     DESCRIPTION</span></span><br><span class=\"line\">  <span class=\"comment\"># apphub/distributed-jmeter       1.0.1           3.3             A Distributed JMeter Helm chart</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取指定 chart 版本的 distributed-jmeter 相关部署参数</span></span><br><span class=\"line\">$ helm show values apphub/distributed-jmeter --version 1.0.1 &gt; distributed-jmeter.yaml</span><br><span class=\"line\">$ cat distributed-jmeter.yaml</span><br><span class=\"line\"><span class=\"comment\"># Default values for distributed-jmeter.</span></span><br><span class=\"line\">master:</span><br><span class=\"line\">  replicaCount: 1</span><br><span class=\"line\">server:</span><br><span class=\"line\">  replicaCount: 3</span><br><span class=\"line\">image:</span><br><span class=\"line\">  <span class=\"comment\">## Specify an imagePullPolicy</span></span><br><span class=\"line\">  <span class=\"comment\">## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images</span></span><br><span class=\"line\">  pullPolicy: IfNotPresent</span><br><span class=\"line\">  <span class=\"comment\">## The repository and image</span></span><br><span class=\"line\">  <span class=\"comment\">## ref: https://hub.docker.com/r/pedrocesarti/jmeter-docker/</span></span><br><span class=\"line\">  repository: <span class=\"string\">\"pedrocesarti/jmeter-docker\"</span></span><br><span class=\"line\">  <span class=\"comment\">## The tag for the image</span></span><br><span class=\"line\">  <span class=\"comment\">## ref: https://hub.docker.com/r/pedrocesarti/jmeter-docker/tags/</span></span><br><span class=\"line\">  tag: 3.2</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装 distributed-jmeter 应用到 devtest 名称空间下</span></span><br><span class=\"line\">$ helm install jmeter apphub/distributed-jmeter -f distributed-jmeter.yaml --namespace devtest --create-namespace</span><br><span class=\"line\"><span class=\"comment\"># To get get a shell session on the master you only need to run:</span></span><br><span class=\"line\">  $ <span class=\"built_in\">export</span> MASTER_NAME=$(kubectl get pods -l app.kubernetes.io/component=master -o jsonpath=<span class=\"string\">'&#123;.items[*].metadata.name&#125;'</span>  -n devtest )</span><br><span class=\"line\">  $ kubectl -n devtest <span class=\"built_in\">exec</span> -it <span class=\"variable\">$MASTER_NAME</span>  -- /bin/bash</span><br><span class=\"line\"><span class=\"comment\"># To copy your test plans to the master pod</span></span><br><span class=\"line\">  $ kubectl -n devtest  cp sample.jmx <span class=\"variable\">$MASTER_NAME</span>:/jmeter</span><br><span class=\"line\"><span class=\"comment\"># To run your test in all servers you need first a list of all servers IPs (comma-separated) and then you can run your test:</span></span><br><span class=\"line\">  $ <span class=\"built_in\">export</span> SERVER_IPS=$(kubectl get pods -l app.kubernetes.io/component=server -o jsonpath=<span class=\"string\">'&#123;.items[*].status.podIP&#125;'</span>  -n devtest | tr <span class=\"string\">' '</span> <span class=\"string\">','</span>)</span><br><span class=\"line\">  $ kubectl <span class=\"built_in\">exec</span> -it <span class=\"variable\">$MASTER_NAME</span> -- jmeter -n -t /jmeter/sample.jmx -R <span class=\"variable\">$SERVER_IPS</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看 helm 部署资源</span></span><br><span class=\"line\">$ kubectl get deployments.apps,pod,svc -n devtest -l app.kubernetes.io/name=distributed-jmeter</span><br><span class=\"line\">  <span class=\"comment\"># NAME                                               READY   UP-TO-DATE   AVAILABLE   AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># deployment.apps/jmeter-distributed-jmeter-master   1/1     1            1           117m</span></span><br><span class=\"line\">  <span class=\"comment\"># deployment.apps/jmeter-distributed-jmeter-server   3/3     3            3           117m</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># NAME                                                    READY   STATUS    RESTARTS   AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># pod/jmeter-distributed-jmeter-master-5d5587ffb-8ftvk    1/1     Running   0          114m</span></span><br><span class=\"line\">  <span class=\"comment\"># pod/jmeter-distributed-jmeter-server-7d64577d56-9cdk5   1/1     Running   0          111m</span></span><br><span class=\"line\">  <span class=\"comment\"># pod/jmeter-distributed-jmeter-server-7d64577d56-bpf4q   1/1     Running   0          112m</span></span><br><span class=\"line\">  <span class=\"comment\"># pod/jmeter-distributed-jmeter-server-7d64577d56-sjsd2   1/1     Running   0          114m</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># NAME                                       TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)              AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># service/jmeter-distributed-jmeter-server   ClusterIP   None         &lt;none&gt;        50000/TCP,1099/TCP   117m</span></span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<p><strong>手动测试部署环境</strong><br>步骤 01.准备一个简单的 jmeter 测试任务，例如下图中Apache jmeter里定义的 <code>jmeter-test.jmx</code> 任务。</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/5/20220719093748.png\" alt=\"WeiyiGeek.jmeter-test.jmx\" title=\"\" class=\"\">\n                <p>WeiyiGeek.jmeter-test.jmx</p>\n            </figure>\n<p><br/></p>\n<p>步骤 02.将jmeter中测试任务导出到jmeter-test.jmx文件中，并复制到 Master 节点容器中，然后执行分布式压力测试命令。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 获取 Master 节点 以及分布式压力测试节点 IP 地址</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> MASTER_NAME=$(kubectl get pods -l app.kubernetes.io/component=master -o jsonpath=<span class=\"string\">'&#123;.items[*].metadata.name&#125;'</span>  -n devtest )</span><br><span class=\"line\"><span class=\"built_in\">export</span> SERVER_IPS=$(kubectl get pods -l app.kubernetes.io/component=server -o jsonpath=<span class=\"string\">'&#123;.items[*].status.podIP&#125;'</span> -n devtest | tr <span class=\"string\">' '</span> <span class=\"string\">','</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 手动拷贝 jmx 压力测试配置文件到Jmeter 主节点中</span></span><br><span class=\"line\">kubectl -n devtest cp ./jmeter-test.jmx  <span class=\"variable\">$&#123;MASTER_NAME&#125;</span>:/jmeter/jmeter-test.jmx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 单节点压力测试 指定 -Jgroup.threads 线程数 ，以及 -Jgroup.loops 线程循环次数。</span></span><br><span class=\"line\">kubectl -n devtest <span class=\"built_in\">exec</span> -it <span class=\"variable\">$MASTER_NAME</span> -- jmeter -Jgroup.threads=5 -Jgroup.loops=20 -n -t /jmeter/jmeter-test.jmx -l jmeter-test.result -R <span class=\"variable\">$SERVER_IPS</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 分布式压力测试 指定 -Ggroup.threads 每个节点线程数 ，以及 -Ggroup.loops 线程循环次数。（此处坑有点大）</span></span><br><span class=\"line\">kubectl -n devtest <span class=\"built_in\">exec</span> -it <span class=\"variable\">$MASTER_NAME</span> -- jmeter -Ggroup.threads=20 -Ggroup.loops=20 -n -t /jmeter/jmeter-test.jmx -l jmeter-test.result -R <span class=\"variable\">$SERVER_IPS</span> </span><br><span class=\"line\">  <span class=\"comment\"># Creating summariser &lt;summary&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># Created the tree successfully using /jmeter/jmeter-test.jmx</span></span><br><span class=\"line\">  <span class=\"comment\"># Configuring remote engine: 10.66.24.209</span></span><br><span class=\"line\">  <span class=\"comment\"># Configuring remote engine: 10.66.183.112</span></span><br><span class=\"line\">  <span class=\"comment\"># Configuring remote engine: 10.66.182.204</span></span><br><span class=\"line\">  <span class=\"comment\"># Starting remote engines</span></span><br><span class=\"line\">  <span class=\"comment\"># Starting the test @ Mon Jun 13 04:49:42 UTC 2022 (1655095782003)</span></span><br><span class=\"line\">  <span class=\"comment\"># Remote engines have been started</span></span><br><span class=\"line\">  <span class=\"comment\"># Waiting for possible Shutdown/StopTestNow/Heapdump message on port 4445</span></span><br><span class=\"line\">  <span class=\"comment\"># summary =   1200 in 00:00:02 =  569.0/s Avg:     4 Min:     0 Max:   685 Err:     0 (0.00%)</span></span><br><span class=\"line\">  <span class=\"comment\"># Tidying up remote @ Mon Jun 13 04:49:46 UTC 2022 (1655095786021)</span></span><br><span class=\"line\">  <span class=\"comment\"># ... end of run</span></span><br></pre></td></tr></table></figure></p>\n<hr>\n<h3 id=\"2-以资源清单方式安装配置-InfluxDB-1-8-时序数据库\"><a href=\"#2-以资源清单方式安装配置-InfluxDB-1-8-时序数据库\" class=\"headerlink\" title=\"(2) 以资源清单方式安装配置 InfluxDB 1.8 时序数据库\"></a>(2) 以资源清单方式安装配置 InfluxDB 1.8 时序数据库</h3><p><strong>快速安装</strong></p>\n<p>步骤 01.准备influxdb使用的配置文件并存放到configMap资源控制器下。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -vp /storage/dev/webapp/database/jmeter-influxdb</span><br><span class=\"line\">tee /storage/dev/webapp/database/jmeter-influxdb/influxdb.conf &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">[meta]</span><br><span class=\"line\">  dir = <span class=\"string\">\"/var/lib/influxdb/meta\"</span></span><br><span class=\"line\">  retention-autocreate = <span class=\"literal\">true</span></span><br><span class=\"line\">  logging-enabled = <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\">[data]</span><br><span class=\"line\">  dir = <span class=\"string\">\"/var/lib/influxdb/data\"</span></span><br><span class=\"line\">  index-version = <span class=\"string\">\"inmem\"</span></span><br><span class=\"line\">  wal-dir = <span class=\"string\">\"/var/lib/influxdb/wal\"</span></span><br><span class=\"line\">  wal-fsync-delay = <span class=\"string\">\"0s\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">[coordinator]</span><br><span class=\"line\">  write-timeout = <span class=\"string\">\"10s\"</span></span><br><span class=\"line\">  max-concurrent-queries = 0</span><br><span class=\"line\">  query-timeout = <span class=\"string\">\"0s\"</span></span><br><span class=\"line\">  <span class=\"built_in\">log</span>-queries-after = <span class=\"string\">\"0s\"</span></span><br><span class=\"line\">  max-select-point = 0</span><br><span class=\"line\">  max-select-series = 0</span><br><span class=\"line\">  max-select-buckets = 0</span><br><span class=\"line\"></span><br><span class=\"line\">[retention]</span><br><span class=\"line\">  enabled = <span class=\"literal\">true</span></span><br><span class=\"line\">  check-interval = <span class=\"string\">\"30m0s\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">[monitor]</span><br><span class=\"line\">  store-enabled = <span class=\"literal\">true</span></span><br><span class=\"line\">  store-database = <span class=\"string\">\"_internal\"</span></span><br><span class=\"line\">  store-interval = <span class=\"string\">\"10s\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">[subscriber]</span><br><span class=\"line\">  enabled = <span class=\"literal\">true</span></span><br><span class=\"line\">  http-timeout = <span class=\"string\">\"30s\"</span></span><br><span class=\"line\">  insecure-skip-verify = <span class=\"literal\">false</span></span><br><span class=\"line\">  ca-certs = <span class=\"string\">\"\"</span></span><br><span class=\"line\">  write-concurrency = 40</span><br><span class=\"line\">  write-buffer-size = 1000</span><br><span class=\"line\"></span><br><span class=\"line\">[shard-precreation]</span><br><span class=\"line\">  enabled = <span class=\"literal\">true</span></span><br><span class=\"line\">  check-interval = <span class=\"string\">\"10m0s\"</span></span><br><span class=\"line\">  advance-period = <span class=\"string\">\"30m0s\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">[http]</span><br><span class=\"line\">  enabled = <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"built_in\">bind</span>-address = <span class=\"string\">\":8086\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">[logging]</span><br><span class=\"line\">  format = <span class=\"string\">\"auto\"</span></span><br><span class=\"line\">  level = <span class=\"string\">\"info\"</span></span><br><span class=\"line\">  suppress-logo = <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">[[graphite]]</span><br><span class=\"line\">  enabled = <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"built_in\">bind</span>-address = <span class=\"string\">\":2003\"</span> </span><br><span class=\"line\">  database = <span class=\"string\">\"jmeter\"</span></span><br><span class=\"line\">  retention-policy = <span class=\"string\">\"\"</span></span><br><span class=\"line\">  protocol = <span class=\"string\">\"tcp\"</span></span><br><span class=\"line\">  batch-size = 5000</span><br><span class=\"line\">  batch-pending = 10</span><br><span class=\"line\">  batch-timeout = <span class=\"string\">\"1s\"</span></span><br><span class=\"line\">  consistency-level = <span class=\"string\">\"one\"</span></span><br><span class=\"line\">  separator = <span class=\"string\">\".\"</span></span><br><span class=\"line\">  udp-read-buffer = 0</span><br><span class=\"line\"></span><br><span class=\"line\">[continuous_queries]</span><br><span class=\"line\">  <span class=\"built_in\">log</span>-enabled = <span class=\"literal\">true</span></span><br><span class=\"line\">  enabled = <span class=\"literal\">true</span></span><br><span class=\"line\">  query-stats-enabled = <span class=\"literal\">false</span></span><br><span class=\"line\">  run-interval = <span class=\"string\">\"1s\"</span></span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> /storage/dev/webapp/database/jmeter-influxdb</span><br><span class=\"line\">$ kubectl create cm influxdb-config --from-file=influxdb.conf --namespace database</span><br><span class=\"line\">  <span class=\"comment\"># configmap/influxdb1-config created</span></span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 02.准备使用Deployment资源控制器部署jmeter-influxDB1.x相关的资源清单如下：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tee influxdb-Deployment.yaml &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">kind: PersistentVolumeClaim</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: jmeter-influxdb-pvc</span><br><span class=\"line\">  namespace: database</span><br><span class=\"line\">  labels:</span><br><span class=\"line\">    app: jmeter-influxdb</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  storageClassName: nfs-devtest</span><br><span class=\"line\">  accessModes:</span><br><span class=\"line\">    - ReadWriteOnce</span><br><span class=\"line\">  resources:</span><br><span class=\"line\">    requests:</span><br><span class=\"line\">      storage: 2Gi</span><br><span class=\"line\">---</span><br><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">kind: Service</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: jmeter-influxdb</span><br><span class=\"line\">  namespace: database</span><br><span class=\"line\">  labels:</span><br><span class=\"line\">    app: jmeter-influxdb</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  ports:</span><br><span class=\"line\">  - name: api</span><br><span class=\"line\">    nodePort: 32086</span><br><span class=\"line\">    port: 8086</span><br><span class=\"line\">    protocol: TCP</span><br><span class=\"line\">    targetPort: 8086</span><br><span class=\"line\">  - name: graphite</span><br><span class=\"line\">    nodePort: 32003</span><br><span class=\"line\">    port: 2003</span><br><span class=\"line\">    protocol: TCP</span><br><span class=\"line\">    targetPort: 2003</span><br><span class=\"line\">  selector:</span><br><span class=\"line\">    app: jmeter-influxdb</span><br><span class=\"line\">  sessionAffinity: None</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: NodePort</span><br><span class=\"line\">---</span><br><span class=\"line\">apiVersion: apps/v1</span><br><span class=\"line\">kind: Deployment</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: jmeter-influxdb</span><br><span class=\"line\">  namespace: database</span><br><span class=\"line\">  labels:</span><br><span class=\"line\">    app: jmeter-influxdb</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  replicas: 1</span><br><span class=\"line\">  selector:</span><br><span class=\"line\">    matchLabels:</span><br><span class=\"line\">      app: jmeter-influxdb</span><br><span class=\"line\">  template:</span><br><span class=\"line\">    metadata:</span><br><span class=\"line\">      labels:</span><br><span class=\"line\">        app: jmeter-influxdb</span><br><span class=\"line\">    spec:</span><br><span class=\"line\">      containers:</span><br><span class=\"line\">      - image: influxdb:1.8.10</span><br><span class=\"line\">        imagePullPolicy: IfNotPresent</span><br><span class=\"line\">        name: influxdb</span><br><span class=\"line\">        ports:</span><br><span class=\"line\">        - containerPort: 8086</span><br><span class=\"line\">          name: api</span><br><span class=\"line\">          protocol: TCP</span><br><span class=\"line\">        - containerPort: 2003</span><br><span class=\"line\">          name: graphite</span><br><span class=\"line\">          protocol: TCP</span><br><span class=\"line\">        volumeMounts:</span><br><span class=\"line\">        - mountPath: /etc/influxdb/influxdb.conf</span><br><span class=\"line\">          name: config</span><br><span class=\"line\">          subPath: influxdb.conf</span><br><span class=\"line\">        - mountPath: /var/lib/influxdb</span><br><span class=\"line\">          name: data</span><br><span class=\"line\">      restartPolicy: Always</span><br><span class=\"line\">      terminationGracePeriodSeconds: 30</span><br><span class=\"line\">      volumes:</span><br><span class=\"line\">      - name: config</span><br><span class=\"line\">        configMap:</span><br><span class=\"line\">          defaultMode: 420</span><br><span class=\"line\">          name: influxdb-config</span><br><span class=\"line\">          items:</span><br><span class=\"line\">          - key: influxdb.conf</span><br><span class=\"line\">            path: influxdb.conf</span><br><span class=\"line\">      - name: data</span><br><span class=\"line\">        persistentVolumeClaim:</span><br><span class=\"line\">          claimName: jmeter-influxdb-pvc</span><br><span class=\"line\">      <span class=\"comment\"># - name: data-local</span></span><br><span class=\"line\">      <span class=\"comment\">#  hostPath:</span></span><br><span class=\"line\">      <span class=\"comment\">#    path: /storage/database/influxdb/data</span></span><br><span class=\"line\">      <span class=\"comment\">#    type: DirectoryOrCreate     </span></span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 03.使用kubectl工具按照influxdb-Deployment.yaml资源清单中的内容进行安装部署, 并且查看其部署情况。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl apply -f influxdb-Deployment.yaml</span><br><span class=\"line\">  <span class=\"comment\"># persistentvolumeclaim/jmeter-influxdb-pvc created</span></span><br><span class=\"line\">  <span class=\"comment\"># service/jmeter-influxdb created</span></span><br><span class=\"line\">  <span class=\"comment\"># deployment.apps/jmeter-influxdb created</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ kubectl get pod,svc,pvc -n database -l app=jmeter-influxdb</span><br><span class=\"line\">  <span class=\"comment\"># NAME                                   READY   STATUS    RESTARTS   AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># pod/jmeter-influxdb-7867969fbd-ggt4m   1/1     Running   0          56s</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># NAME                      TYPE       CLUSTER-IP     EXTERNAL-IP   PORT(S)                         AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># service/jmeter-influxdb   NodePort   10.106.17.52   &lt;none&gt;        8086:32086/TCP,2003:32003/TCP   5m12s</span></span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\"># NAME                                        STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS   AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># persistentvolumeclaim/jmeter-influxdb-pvc   Bound    pvc-d260839d-86cc-4f34-976f-50563ce28084   2Gi        RWO            nfs-devtest    6m9s</span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\"># 补充说明:</span></span><br><span class=\"line\"><span class=\"comment\"># - Pod 端口转发</span></span><br><span class=\"line\">kubectl port-forward --namespace database $(kubectl get pods --namespace database -l app=jmeter-influxdb -o jsonpath=<span class=\"string\">'&#123; .items[0].metadata.name &#125;'</span>) 8086:8086</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - Pod Shell终端</span></span><br><span class=\"line\">kubectl <span class=\"built_in\">exec</span> -i -t --namespace database $(kubectl get pods --namespace database -l app=jmeter-influxdb -o jsonpath=<span class=\"string\">'&#123;.items[0].metadata.name&#125;'</span>) /bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - Pod 日志查看</span></span><br><span class=\"line\">kubectl logs -f --namespace database $(kubectl get pods --namespace database -l app=jmeter-influxdb -o jsonpath=<span class=\"string\">'&#123; .items[0].metadata.name &#125;'</span>)</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p>步骤 04.进入 jmeter-influxdb pod 的 shell 终端中创建 jmeter 所使用的用户及其数据库。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl <span class=\"built_in\">exec</span> -i -t --namespace database $(kubectl get pods --namespace database -l app=jmeter-influxdb -o jsonpath=<span class=\"string\">'&#123;.items[0].metadata.name&#125;'</span>) /bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\">root@influxdb-f54d77bc6-cp46r:/<span class=\"comment\"># influx</span></span><br><span class=\"line\">Connected to http://localhost:8086 version 1.8.10</span><br><span class=\"line\">InfluxDB shell version: 1.8.10</span><br><span class=\"line\"><span class=\"comment\"># 查看交互式帮助</span></span><br><span class=\"line\">&gt; <span class=\"built_in\">help</span> </span><br><span class=\"line\">Usage:</span><br><span class=\"line\">  connect &lt;host:port&gt;   connects to another node specified by host:port</span><br><span class=\"line\">  auth                  prompts <span class=\"keyword\">for</span> username and password</span><br><span class=\"line\">  pretty                toggles pretty <span class=\"built_in\">print</span> <span class=\"keyword\">for</span> the json format</span><br><span class=\"line\">  chunked               turns on chunked responses from server</span><br><span class=\"line\">  chunk size &lt;size&gt;     sets the size of the chunked responses.  Set to 0 to reset to the default chunked size</span><br><span class=\"line\">  use &lt;db_name&gt;         sets current database</span><br><span class=\"line\">  format &lt;format&gt;       specifies the format of the server responses: json, csv, or column</span><br><span class=\"line\">  precision &lt;format&gt;    specifies the format of the timestamp: rfc3339, h, m, s, ms, u or ns</span><br><span class=\"line\">  consistency &lt;level&gt;   sets write consistency level: any, one, quorum, or all</span><br><span class=\"line\">  <span class=\"built_in\">history</span>               displays <span class=\"built_in\">command</span> <span class=\"built_in\">history</span></span><br><span class=\"line\">  settings              outputs the current settings <span class=\"keyword\">for</span> the shell</span><br><span class=\"line\">  clear                 clears settings such as database or retention policy.  run <span class=\"string\">'clear'</span> <span class=\"keyword\">for</span> <span class=\"built_in\">help</span></span><br><span class=\"line\">  <span class=\"built_in\">exit</span>/quit/ctrl+d      quits the influx shell</span><br><span class=\"line\"></span><br><span class=\"line\">  show databases        show database names</span><br><span class=\"line\">  show series           show series information</span><br><span class=\"line\">  show measurements     show measurement information</span><br><span class=\"line\">  show tag keys         show tag key information</span><br><span class=\"line\">  show field keys       show field key information</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># influx 客户端默认设置查看</span></span><br><span class=\"line\">&gt; settings</span><br><span class=\"line\">  Setting           Value</span><br><span class=\"line\">  --------          --------</span><br><span class=\"line\">  URL               http://localhost:8086</span><br><span class=\"line\">  Username</span><br><span class=\"line\">  Database</span><br><span class=\"line\">  RetentionPolicy</span><br><span class=\"line\">  Pretty            <span class=\"literal\">false</span></span><br><span class=\"line\">  Format            column</span><br><span class=\"line\">  Write Consistency all</span><br><span class=\"line\">  Chunked           <span class=\"literal\">true</span></span><br><span class=\"line\">  Chunk Size        0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建jmeter用户及其认证密码以及创建数据库jmeter</span></span><br><span class=\"line\">CREATE USER <span class=\"string\">\"jmeter\"</span> WITH PASSWORD <span class=\"string\">'weiyigeek.top'</span> WITH ALL PRIVILEGES</span><br><span class=\"line\">CREATE DATABASE jmeter</span><br><span class=\"line\">SHOW DATABASES</span><br><span class=\"line\">USE jmeter</span><br><span class=\"line\">SHOW MEASUREMENTS</span><br><span class=\"line\"><span class=\"built_in\">exit</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"3-在-jmeter-中添加-Backend-Listener-配置-influxDB-相关信息\"><a href=\"#3-在-jmeter-中添加-Backend-Listener-配置-influxDB-相关信息\" class=\"headerlink\" title=\"(3) 在 jmeter 中添加 Backend Listener 配置 influxDB 相关信息\"></a>(3) 在 jmeter 中添加 Backend Listener 配置 influxDB 相关信息</h3><p><strong>操作步骤</strong><br>步骤 01.在(任务线程组⚙)右键选中 -&gt; Add -&gt; Listener -&gt; Backend Listener &gt; 点击后将会显示步骤02界面。</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/5/20220719164527.png\" alt=\"WeiyiGeek.add Backend Listener\" title=\"\" class=\"\">\n                <p>WeiyiGeek.add Backend Listener</p>\n            </figure>\n<p><br/></p>\n<p>步骤 02.在 Name 处输入 <code>jmeter-influxDB</code> 名称 , 在 Backend Listener implementation 中下拉选中( org.apache.jmeter.visualizers.backend.influxdb.influxdbBackendListenerClient ) , 其配置如下所示:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">influxdbMetricsSender\torg.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</span><br><span class=\"line\">influxdbUrl\thttp://192.168.12.107:32086/write?db=jmeter</span><br><span class=\"line\">application\tweiyigeek-index</span><br><span class=\"line\">measurement\tjmeter</span><br><span class=\"line\">summaryOnly\t<span class=\"literal\">true</span></span><br><span class=\"line\">samplersRegex\t.*</span><br><span class=\"line\">percentiles\t50;90;95;99</span><br><span class=\"line\">testTitle\tjmeter-index</span><br><span class=\"line\">eventTags</span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/5/20220719165045.png\" alt=\"WeiyiGeek.Configure Backend Listener\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Configure Backend Listener</p>\n            </figure>\n<p>温馨提示: influxdbUrl 此处采用了 nodePort 暴露的端口</p>\n<p><br/></p>\n<p>步骤 03.在线程组中添加一个HTTP-Request请求，将上面我们搭建演示压力测试的站点信息进行填入。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Name: myblog-test</span><br><span class=\"line\">Comments: 备注可以自定义</span><br><span class=\"line\">Protocol: http</span><br><span class=\"line\">Server NAME or IP: 192.168.12.107</span><br><span class=\"line\">Port Number: 32644</span><br><span class=\"line\">HTTP Request: GET</span><br><span class=\"line\">Path: /index.html</span><br><span class=\"line\">Content encoding: utf-8</span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/5/20220719170520.png\" alt=\"WeiyiGeek.Configure HTTP Request\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Configure HTTP Request</p>\n            </figure>\n<p>温馨提示：此处压力测试地址实际就是(<a href=\"http://192.168.12.107:32644/index.html)\" target=\"_blank\" rel=\"noopener\">http://192.168.12.107:32644/index.html)</a>.</p>\n<p><br/></p>\n<p>步骤 04.配置完成后点击菜单栏中 《绿色start》 的按钮开始压力测试任务，请求 100 次 (此处缺省 5 线程 循环 20 ), 然后可以通过<code>kubectl logs -f --tail 100 -n devtest jmeter-test-html-0</code>命令查看到jmeter请求该路径的访问日志。</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/5/20220719171650.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n<p><br/></p>\n<p>步骤 05.查看后端监听器配置influxdb数据中采集到的数据。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl <span class=\"built_in\">exec</span> -i -t --namespace database $(kubectl get pods --namespace database -l app=jmeter-influxdb -o jsonpath=<span class=\"string\">'&#123;.items[0].metadata.name&#125;'</span>) /bin/bash -- influx</span><br><span class=\"line\"></span><br><span class=\"line\">Connected to http://localhost:8086 version 1.8.10</span><br><span class=\"line\">InfluxDB shell version: 1.8.10</span><br><span class=\"line\">&gt; use jmeter</span><br><span class=\"line\">Using database jmeter</span><br><span class=\"line\">&gt; SHOW MEASUREMENTS</span><br><span class=\"line\">name: measurements</span><br><span class=\"line\">name</span><br><span class=\"line\">----</span><br><span class=\"line\">events</span><br><span class=\"line\">jmeter</span><br><span class=\"line\">&gt; select * from jmeter; <span class=\"comment\"># 查看 jmeter 表中压力测试的数据</span></span><br><span class=\"line\">name: jmeter</span><br><span class=\"line\">time                application     avg                count countError endedT hit max maxAT meanAT min minAT pct50.0 pct90.0 pct95.0            pct99.0            rb      sb    startedT statut transaction</span><br><span class=\"line\">----                -----------     ---                ----- ---------- ------ --- --- ----- ------ --- ----- ------- ------- -------            -------            --      --    -------- ------ -----------</span><br><span class=\"line\">1658221734017000000 weiyigeek-index                                     0              0     0          0                                                                         0               internal</span><br><span class=\"line\">1658221735666000000 weiyigeek-index 2.09               100   0                 100 24               1         2       2       3.8999999999999773 23.799999999999898 1447500 16400          all    all</span><br><span class=\"line\">1658221735667000000 weiyigeek-index                                     5              1     0          0                                                                         5               internal</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; select * from events; <span class=\"comment\"># 查看 jmeter 压力测试事件信息</span></span><br><span class=\"line\">name: events</span><br><span class=\"line\">time                application     text                 title</span><br><span class=\"line\">----                -----------     ----                 -----</span><br><span class=\"line\">1658221734002000000 weiyigeek-index jmeter-index started ApacheJMeter</span><br><span class=\"line\">1658221735666000000 weiyigeek-index jmeter-index ended   ApacheJMeter</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<h3 id=\"4-在-grafana-中展示-jmeter-压力测试相关指标数据。\"><a href=\"#4-在-grafana-中展示-jmeter-压力测试相关指标数据。\" class=\"headerlink\" title=\"(4) 在 grafana 中展示 jmeter 压力测试相关指标数据。\"></a>(4) 在 grafana 中展示 jmeter 压力测试相关指标数据。</h3><ul>\n<li>步骤 01.登陆Grafana之后需要新增数据源（Add your first data source）,此处当然选择InfluxDB时间序列数据库源。</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/5/20220613091854.png\" alt=\"WeiyiGeek.添加 InfluxDB 数据源\" title=\"\" class=\"\">\n                <p>WeiyiGeek.添加 InfluxDB 数据源</p>\n            </figure>\n<p><br/></p>\n<ul>\n<li>步骤 02.选择后将会出现如下界面, 需要按照实际情况进行填写, 其中最重要的是influxdb相关连接数据库认证信息（jmeter、jmeter、weiyigeek.top）, 填写无误后点击 <code>Save&amp;Test</code>, 如测试成功将会显示<code>Data source is working</code>。</li>\n</ul>\n<p>温馨提示: 此处 influxdb url 填入的是 (<a href=\"http://jmeter-influxdb.database.svc:8086\" target=\"_blank\" rel=\"noopener\">http://jmeter-influxdb.database.svc:8086</a>) 即服务名称加SVC端口，当然你也可以填写节点IP+nodePort端口即(<a href=\"http://192.168.12.107:32086/\" target=\"_blank\" rel=\"noopener\">http://192.168.12.107:32086/</a>) </p>\n<p><img src=\"https://img.weiyigeek.top/2022/5/20220719173933.png\" alt=\"WeiyiGeek.针对 InfluxDB 数据源配置\"></p>\n<p><br/></p>\n<ul>\n<li>步骤 03.然后可以点击步骤02页面上的Explore，执行如下sql：<code>SELECT * FROM &quot;jmeter&quot; limit 3</code>进行查询到jmeter压力测试的数据。</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/5/20220719173813.png\" alt=\"WeiyiGeek.InfluxDB Explore\" title=\"\" class=\"\">\n                <p>WeiyiGeek.InfluxDB Explore</p>\n            </figure>\n<p><br/></p>\n<ul>\n<li>步骤 04.访问grafana模板商城 (<a href=\"https://grafana.com/grafana/dashboards/?plcmt=footer&amp;search=jmeter)\" target=\"_blank\" rel=\"noopener\">https://grafana.com/grafana/dashboards/?plcmt=footer&amp;search=jmeter)</a>, 找寻显示 jmeter 相应的 dashboards 模板, 此处以模板ID 5496 为例 (<a href=\"https://grafana.com/grafana/dashboards/5496)\" target=\"_blank\" rel=\"noopener\">https://grafana.com/grafana/dashboards/5496)</a>, 在 grafana 中 import  输入该ID -&gt; 点击 load -&gt; 随后设置 dashboard 名称 -&gt;  DBNAME 选择前面添加的 InfluxDB 数据源 -&gt; Measurement name 设置为 jmeter -&gt; 后端发送间隔时间设置为 5 即可 -&gt; 最后点 Import  导入该 Dashboard 到 grafana 中.</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/5/20220719195719.png\" alt=\"WeiyiGeek.Apache JMeter Dashboard using Core InfluxdbBackendListenerClient\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Apache JMeter Dashboard using Core InfluxdbBackendListenerClient</p>\n            </figure>\n<p><br/></p>\n<ul>\n<li>步骤 05.导入后我们便可在 Grafana 首页中查看到该 Dashboard, 我们点击进入查看该展板显示的 Jmeter 压力测试的数据。</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/5/20220719201207.png\" alt=\"WeiyiGeek.Apache JMeter Dashboard\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Apache JMeter Dashboard</p>\n            </figure>\n<p><br></p>\n<h3 id=\"5-使用-kubernetes-Gitlab-Jenkins-Grafana-实现自动化分布式压力测试数据展示实践\"><a href=\"#5-使用-kubernetes-Gitlab-Jenkins-Grafana-实现自动化分布式压力测试数据展示实践\" class=\"headerlink\" title=\"(5) 使用 kubernetes + Gitlab + Jenkins + Grafana 实现自动化分布式压力测试数据展示实践\"></a>(5) 使用 kubernetes + Gitlab + Jenkins + Grafana 实现自动化分布式压力测试数据展示实践</h3><p><strong>实践流程:</strong><br>步骤 01.首先在私有的 Gitlab 上创建一个Jmeter，此处我已经在Gitlab中创建好了jmeter项目, 你可以在创建后将前面准备的jmeter 测试任务 jmeter-test.jmx 文件push 到代码仓库中。</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/5/20220720160845.png\" alt=\"WeiyiGeek.Jmeter 仓库\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Jmeter 仓库</p>\n            </figure>\n<p>温馨提示: Gitlab 的安装此处不进行展开讲解, 如有需要安装实践的童鞋可以参考我的这篇文章 [GitLab企业级私有代码仓库安装与基础使用] (<a href=\"https://blog.weiyigeek.top/2019/7-22-98.html\">https://blog.weiyigeek.top/2019/7-22-98.html</a>) 或者 gitlab 官方安装文档 (<a href=\"https://about.gitlab.com/install/)。\" target=\"_blank\" rel=\"noopener\">https://about.gitlab.com/install/)。</a></p>\n<p><br/></p>\n<p>步骤 02.在 Jenkins 中创建一个名为 Jmeter 流水线的任务，然后再进行如下配置:</p>\n<blockquote>\n<p>(1) 勾选 GitHub 项目 -&gt; 输入Jmeter项目地址 (<a href=\"http://gitlab.weiyigeek.top/devops/jmeter.git\" target=\"_blank\" rel=\"noopener\">http://gitlab.weiyigeek.top/devops/jmeter.git</a>) </p>\n</blockquote>\n<blockquote>\n<p>(2) 在 GitLab Connection 下拉框中选择 Gitlab-Auth 认证的票据 (其生成可以参考下面温馨提示中的文章)</p>\n</blockquote>\n<blockquote>\n<p>(3) 构建触发器选项卡中勾选 <code>Enabled GitLab triggers</code>.<br>Build when a change is pushed to GitLab. GitLab webhook URL: <a href=\"http://192.168.12.226:30001/project/jmeter\" target=\"_blank\" rel=\"noopener\">http://192.168.12.226:30001/project/jmeter</a></p>\n</blockquote>\n<p>温馨提示: Jenkins 的相关安装部署请参考我的博客文章 《<a href=\"https://blog.weiyigeek.top/tags/Jenkins/》\">https://blog.weiyigeek.top/tags/Jenkins/》</a></p>\n<p><img src=\"https://img.weiyigeek.top/2022/5/20220720170134.png\" alt=\"WeiyiGeek.Jenkins Jmeter Task configuration\"></p>\n<p><br/></p>\n<p>步骤 03.在 Jmeter 项目仓库中添加拥有Reporter权限的自动化CI/CD用户, 此处添加的 @devops 用户，为了能自动触发Jenkins进行部署以及压力测试，我们需要再设置 -&gt; webhooks -&gt; 添加 jenkins 任务 url 以及 认证 Secret Token</p>\n<blockquote>\n<p>URL: <a href=\"http://192.168.12.226:30001/project/jmeter\" target=\"_blank\" rel=\"noopener\">http://192.168.12.226:30001/project/jmeter</a><br>Secret Token: 11c513a49620v573d275357836cc3e1c4f</p>\n</blockquote>\n<p>温馨提示: 上述 Secret Token 的创建 以及Gitlab私有仓库生成项目<code>API Access Token</code>可以参考我的如下两篇文章。</p>\n<ul>\n<li><p>Jenkins与Gitlab-集成配置与实践 <a href=\"https://blog.weiyigeek.top/2020/12-28-513.html#Gitlab-%E9%9B%86%E6%88%90%E9%85%8D%E7%BD%AE%E4%B8%8E%E5%AE%9E%E8%B7%B5\">https://blog.weiyigeek.top/2020/12-28-513.html#Gitlab-集成配置与实践</a></p>\n</li>\n<li><p>Gitlab 自动触发构建之 Pipeline Script from SCM <a href=\"https://blog.weiyigeek.top/2020/12-30-523.html#2-Gitlab-%E8%87%AA%E5%8A%A8%E8%A7%A6%E5%8F%91%E6%9E%84%E5%BB%BA%E4%B9%8B-Pipeline-Script-from-SCM\">https://blog.weiyigeek.top/2020/12-30-523.html#2-Gitlab-自动触发构建之-Pipeline-Script-from-SCM</a></p>\n</li>\n</ul>\n<p><img src=\"https://img.weiyigeek.top/2022/5/20220720163415.png\" alt=\"WeiyiGeek.devops+webhook\"></p>\n<p><br/></p>\n<p>步骤 04.在 jenkins Jmeter 任务中流水线的脚本如下:</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// [ Groovy 全局变量定义]</span></span><br><span class=\"line\"><span class=\"comment\">// - GIT项目地址</span></span><br><span class=\"line\"><span class=\"comment\">// def GITLAB = \"http://gitlab.weiyigeek.top/devops/jmeter.git\" </span></span><br><span class=\"line\"><span class=\"keyword\">def</span> PRJECT = <span class=\"string\">\"ssh://git@gitlab.weiyigeek.top/devops/jmeter.git\"</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> PUBKEY = <span class=\"string\">\"5e2f46d9-6725-4399-847f-dafb3f29d0ce\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// - 企业微信 - WebHookURL</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> QY_WECHAT_WEBHOOK_KEY= <span class=\"string\">\"ee1165c3-56c1-4bc1-8423-ecc5ccda9278\"</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> QY_WECHAT_WEBHOOK = <span class=\"string\">\"https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=$&#123;QY_WECHAT_WEBHOOK_KEY&#125;\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// - 正式环境与测试环境参数预设</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> ENV_TEST() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">def</span> config = [:]</span><br><span class=\"line\">  config.K8S_API_SERVER = <span class=\"string\">\"https://slb-vip.k8s:16443\"</span></span><br><span class=\"line\">  config.K8S_IP_SERVER = <span class=\"string\">\"192.168.12.110\"</span></span><br><span class=\"line\">  config.K8S_CREDENTIALSID = <span class=\"string\">\"8cf24244-3e26-41a9-b7fe-3eb20778c33a\"</span></span><br><span class=\"line\">  config.CI_NAME = <span class=\"string\">\"$&#123;env.JOB_NAME&#125;\"</span></span><br><span class=\"line\">  config.CI_NAMESPACE = <span class=\"string\">\"devtest\"</span></span><br><span class=\"line\">  config.CI_ENVIRONMENT = <span class=\"string\">\"test\"</span></span><br><span class=\"line\">  config.CI_COMMAND = <span class=\"string\">'[\"bash\"]'</span></span><br><span class=\"line\">  config.CI_STORAGE_NAME = <span class=\"string\">\"nfs-devtest\"</span></span><br><span class=\"line\">  config.INGRESS_DOMAIN = <span class=\"string\">\"testapp.weiyigeek.top\"</span></span><br><span class=\"line\">  config.HARBOR_URL = <span class=\"string\">\"harbor.weiyigeek.top/devops\"</span></span><br><span class=\"line\">  config.HARBOR_AUTH = <span class=\"string\">\"d0ce1239-c4bf-41ed-a4c6-660ab70d9b47\"</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> config</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> ENV_PROD() &#123;</span><br><span class=\"line\">  <span class=\"keyword\">def</span> config = [:]</span><br><span class=\"line\">  config.K8S_API_SERVER = <span class=\"string\">\"https://apiserver.cluster.weiyigeek:6443\"</span></span><br><span class=\"line\">  config.K8S_IP_SERVER = <span class=\"string\">\"192.168.12.102\"</span></span><br><span class=\"line\">  config.K8S_CREDENTIALSID = <span class=\"string\">\"k8s-cluster.weiyigeek-devops\"</span></span><br><span class=\"line\">  config.CI_NAME = <span class=\"string\">\"$&#123;env.JOB_NAME&#125;\"</span></span><br><span class=\"line\">  config.CI_NAMESPACE = <span class=\"string\">\"devtest\"</span></span><br><span class=\"line\">  config.CI_ENVIRONMENT = <span class=\"string\">\"prod\"</span></span><br><span class=\"line\">  config.CI_COMMAND = <span class=\"string\">'[\"bash\"]'</span></span><br><span class=\"line\">  config.CI_STORAGE_NAME = <span class=\"string\">\"nfs-storage\"</span></span><br><span class=\"line\">  config.INGRESS_DOMAIN = <span class=\"string\">\"test.app.weiyigeek.top\"</span></span><br><span class=\"line\">  config.HARBOR_URL = <span class=\"string\">\"harbor.weiyigeek.top/devops\"</span></span><br><span class=\"line\">  config.HARBOR_AUTH = <span class=\"string\">\"d0ce1239-c4bf-41ed-a4c6-660ab70d9b47\"</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> config</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 任务名称、任务工作空间POD名称</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> JOB_NAME = <span class=\"string\">\"$&#123;env.JOB_NAME&#125;-$&#123;env.BUILD_NUMBER&#125;\"</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> JOB_WORKSPACE = <span class=\"string\">\"$&#123;env.WORKSPACE&#125;\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 自定义变量</span></span><br><span class=\"line\"><span class=\"comment\">// String JmeterNAME = null</span></span><br><span class=\"line\"><span class=\"comment\">// String JmeterENV = null</span></span><br><span class=\"line\"><span class=\"comment\">// String JmeterFILE = null</span></span><br><span class=\"line\"><span class=\"comment\">// Integer JmeterGthreads = null</span></span><br><span class=\"line\"><span class=\"comment\">// Integer JmeterGloops = null</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// [ Groovy 全局函数定义]</span></span><br><span class=\"line\"><span class=\"comment\">// 获取真实项目路径机器构建的包信息函数</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> GET_REAL_PROJECT()&#123;</span><br><span class=\"line\">  <span class=\"keyword\">def</span> PROJECT = [:]</span><br><span class=\"line\">  PROJECT.commitmsg=sh <span class=\"string\">label:</span> <span class=\"string\">'git_commitmsg'</span>,<span class=\"string\">returnStdout:</span> <span class=\"literal\">true</span>, <span class=\"string\">script:</span> <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">   git show --oneline --ignore-all-space --text | head -n 1 |tr -d '\\\\n'</span></span><br><span class=\"line\"><span class=\"string\">  \"\"\"</span></span><br><span class=\"line\">  <span class=\"comment\">// 验证与提取commit信息 45cd579 jmeter cloud zycx.jmx 100 1000</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span>( PROJECT.commitmsg != <span class=\"literal\">null</span> ) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">def</span> arr = PROJECT.commitmsg.split(<span class=\"string\">\" \"</span>) <span class=\"keyword\">as</span> List</span><br><span class=\"line\">    print arr</span><br><span class=\"line\">    PROJECT.JmeterNAME = arr[<span class=\"number\">1</span>]</span><br><span class=\"line\">    PROJECT.JmeterENV = arr[<span class=\"number\">2</span>]</span><br><span class=\"line\">    PROJECT.JmeterFILE = arr[<span class=\"number\">3</span>]</span><br><span class=\"line\">    PROJECT.JmeterGthreads = arr[<span class=\"number\">4</span>].toInteger()</span><br><span class=\"line\">    PROJECT.JmeterGloops = arr[<span class=\"number\">5</span>].toInteger()</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    unstable <span class=\"string\">'提取git commit信息失败'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 获取 jmx 任务文件路径</span></span><br><span class=\"line\">  PROJECT.JmeterFilePath=sh <span class=\"string\">label:</span> <span class=\"string\">'JmeterFilePath'</span>,<span class=\"string\">returnStdout:</span> <span class=\"literal\">true</span>, <span class=\"string\">script:</span> <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    find $&#123;env.WORKSPACE&#125; -name $&#123;PROJECT.JmeterFILE&#125; | head -n 1 | tr -d '\\n'</span></span><br><span class=\"line\"><span class=\"string\">  \"\"\"</span></span><br><span class=\"line\">  print PROJECT.JmeterFilePath</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> PROJECT</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// [Jenkins Pipeline 流水线 开始]</span></span><br><span class=\"line\">pipeline &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 流水线运行的主机绑定,此处利用动态的K8s节点进行。</span></span><br><span class=\"line\">  agent &#123;</span><br><span class=\"line\">    kubernetes &#123;</span><br><span class=\"line\">      cloud <span class=\"string\">'kubernetes'</span></span><br><span class=\"line\">      namespace <span class=\"string\">'devops'</span></span><br><span class=\"line\">      inheritFrom <span class=\"string\">'jenkins-slave'</span></span><br><span class=\"line\">      showRawYaml <span class=\"string\">'false'</span></span><br><span class=\"line\">      workingDir <span class=\"string\">'/home/jenkins/agent'</span></span><br><span class=\"line\">      yaml <span class=\"string\">\"\"\"\\</span></span><br><span class=\"line\"><span class=\"string\">apiVersion:</span></span><br><span class=\"line\"><span class=\"string\">kind: Pod</span></span><br><span class=\"line\"><span class=\"string\">metadata:</span></span><br><span class=\"line\"><span class=\"string\">  labels:</span></span><br><span class=\"line\"><span class=\"string\">    app: 'jenkins-jnlp'</span></span><br><span class=\"line\"><span class=\"string\">    job: $&#123;JOB_NAME&#125;</span></span><br><span class=\"line\"><span class=\"string\">spec:</span></span><br><span class=\"line\"><span class=\"string\">  serviceAccountName: 'jenkins-sa'</span></span><br><span class=\"line\"><span class=\"string\">  automountServiceAccountToken: false</span></span><br><span class=\"line\"><span class=\"string\">  securityContext:</span></span><br><span class=\"line\"><span class=\"string\">    runAsUser: 1000   # default UID of jenkins user in agent image</span></span><br><span class=\"line\"><span class=\"string\">  containers:</span></span><br><span class=\"line\"><span class=\"string\">  - name: 'jnlp'</span></span><br><span class=\"line\"><span class=\"string\">    image: 'harbor.weiyigeek.top/devops/alpine-jenkins-jnlp:v2.330'</span></span><br><span class=\"line\"><span class=\"string\">    imagePullPolicy: 'IfNotPresent'</span></span><br><span class=\"line\"><span class=\"string\">    command: [\"/bin/sh\"]</span></span><br><span class=\"line\"><span class=\"string\">    args: [\"-c\",\"/usr/local/bin/jenkins-agent.sh &amp;&amp; cat\"]</span></span><br><span class=\"line\"><span class=\"string\">    tty: true</span></span><br><span class=\"line\"><span class=\"string\">    env:</span></span><br><span class=\"line\"><span class=\"string\">      - name: JAVA_OPTS</span></span><br><span class=\"line\"><span class=\"string\">        value: '-Xms512m -Xmx1g -Xss1m'</span></span><br><span class=\"line\"><span class=\"string\">    resources:</span></span><br><span class=\"line\"><span class=\"string\">      limits: &#123;&#125;</span></span><br><span class=\"line\"><span class=\"string\">      requests:</span></span><br><span class=\"line\"><span class=\"string\">        memory: '512Mi'</span></span><br><span class=\"line\"><span class=\"string\">        cpu: '500m'</span></span><br><span class=\"line\"><span class=\"string\">    volumeMounts:</span></span><br><span class=\"line\"><span class=\"string\">    - name: 'docker-socket'</span></span><br><span class=\"line\"><span class=\"string\">      mountPath: '/var/run/docker.sock'</span></span><br><span class=\"line\"><span class=\"string\">  volumes:</span></span><br><span class=\"line\"><span class=\"string\">  - name: docker-socket</span></span><br><span class=\"line\"><span class=\"string\">    hostPath: </span></span><br><span class=\"line\"><span class=\"string\">      path: /var/run/docker.sock</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 全局选项预定义设定</span></span><br><span class=\"line\">  options &#123;</span><br><span class=\"line\">   gitLabConnection(<span class=\"string\">'Private-Gitlab'</span>)</span><br><span class=\"line\">   gitlabBuilds(<span class=\"string\">builds:</span> [<span class=\"string\">'代码拉取'</span>, <span class=\"string\">'压力测试'</span>,<span class=\"string\">'结果展示'</span>])</span><br><span class=\"line\">   timeout(<span class=\"string\">time:</span> <span class=\"number\">30</span>, <span class=\"string\">unit:</span> <span class=\"string\">'MINUTES'</span>) </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 自定义环境变量, 通过 env.变量名访问 </span></span><br><span class=\"line\">  environment &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 代码仓库地址与认证地址</span></span><br><span class=\"line\">    GITLAB_URL = <span class=\"string\">\"$&#123;PRJECT&#125;\"</span></span><br><span class=\"line\">    GITLAB_PUB = <span class=\"string\">\"$&#123;PUBKEY&#125;\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 代码质量检测项目名称与反馈超时时间</span></span><br><span class=\"line\">    SONARQUBE_PROJECTKEY = <span class=\"string\">\"$&#123;JOB_NAME&#125;\"</span>;</span><br><span class=\"line\">    SONARQUBE_TIMEOUT = <span class=\"string\">'60'</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 自定义选择参数，在 sh 中可通过变量名访问，而在 script pipeline 脚本中通过 params.参数名称 访问 </span></span><br><span class=\"line\">  parameters &#123;</span><br><span class=\"line\">    gitParameter <span class=\"string\">branch:</span> <span class=\"string\">''</span>, <span class=\"string\">branchFilter:</span> <span class=\"string\">'origin/(.*)'</span>, <span class=\"string\">defaultValue:</span> <span class=\"string\">'origin/master'</span>, <span class=\"string\">description:</span> <span class=\"string\">'查看构建部署可用的Tag或Branch名称?'</span>, <span class=\"string\">name:</span> <span class=\"string\">'TagBranchName'</span>, <span class=\"string\">quickFilterEnabled:</span> <span class=\"literal\">false</span>, <span class=\"string\">selectedValue:</span> <span class=\"string\">'NONE'</span>, <span class=\"string\">sortMode:</span> <span class=\"string\">'DESCENDING_SMART'</span>, <span class=\"string\">tagFilter:</span> <span class=\"string\">'*'</span>, <span class=\"string\">type:</span> <span class=\"string\">'GitParameterDefinition'</span></span><br><span class=\"line\">    string(<span class=\"string\">name:</span> <span class=\"string\">'RELEASE_VERSION'</span>, <span class=\"string\">defaultValue:</span> <span class=\"string\">\"master\"</span>, <span class=\"string\">description:</span> <span class=\"string\">'Message: 请选择构建部署的Tag或Branch名称?'</span>, <span class=\"string\">trim:</span> <span class=\"string\">'True'</span>)</span><br><span class=\"line\">    choice(<span class=\"string\">name:</span> <span class=\"string\">'PREJECT_ENVIRONMENT'</span>, <span class=\"string\">choices:</span> [<span class=\"string\">'Test'</span>, <span class=\"string\">'Test'</span>], <span class=\"string\">description:</span> <span class=\"string\">'Message: 选择项目部署环境?'</span>)</span><br><span class=\"line\">    choice(<span class=\"string\">name:</span> <span class=\"string\">'PREJECT_OPERATION'</span>, <span class=\"string\">choices:</span> [<span class=\"string\">'None'</span>, <span class=\"string\">'deploy'</span>, <span class=\"string\">'rollback'</span>, <span class=\"string\">'redeploy'</span>], <span class=\"string\">description:</span> <span class=\"string\">'Message: 选择项目操作方式?'</span>)</span><br><span class=\"line\">    choice(<span class=\"string\">name:</span> <span class=\"string\">'IS_IMAGEBUILD'</span>, <span class=\"string\">choices:</span> [<span class=\"string\">'True'</span>,<span class=\"string\">'False'</span>], <span class=\"string\">description:</span> <span class=\"string\">'Message: 是否进行镜像构建操作?'</span>)</span><br><span class=\"line\">    choice(<span class=\"string\">name:</span> <span class=\"string\">'IS_RELEASE'</span>, <span class=\"string\">choices:</span> [<span class=\"string\">'False'</span>,<span class=\"string\">'True'</span>], <span class=\"string\">description:</span> <span class=\"string\">'Message: 是否进行编译成品发布?'</span>)</span><br><span class=\"line\">    choice(<span class=\"string\">name:</span> <span class=\"string\">'IS_SONARQUBE'</span>, <span class=\"string\">choices:</span> [<span class=\"string\">'False'</span>,<span class=\"string\">'True'</span>], <span class=\"string\">description:</span> <span class=\"string\">'Message: 是否进行代码质量检测?'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 触发与Gitlab 流水线同步更新</span></span><br><span class=\"line\">  triggers &#123;</span><br><span class=\"line\">    gitlab(<span class=\"string\">triggerOnPush:</span> <span class=\"literal\">true</span>, <span class=\"string\">triggerOnMergeRequest:</span> <span class=\"literal\">true</span>, <span class=\"string\">branchFilterType:</span> <span class=\"string\">'All'</span>)</span><br><span class=\"line\">  &#125; </span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 主要阶段以及子阶段流程</span></span><br><span class=\"line\">  stages &#123;</span><br><span class=\"line\">    <span class=\"comment\">// [ 阶段1.项目代码拉取 ]</span></span><br><span class=\"line\">    stage (<span class=\"string\">'代码拉取'</span>) &#123;</span><br><span class=\"line\">      steps &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 1.超时时间设置5分钟</span></span><br><span class=\"line\">        timeout(<span class=\"string\">time:</span> <span class=\"number\">5</span>, <span class=\"string\">unit:</span> <span class=\"string\">'MINUTES'</span>) &#123;</span><br><span class=\"line\">          script &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">              checkout([<span class=\"string\">$class:</span> <span class=\"string\">'GitSCM'</span>, <span class=\"string\">branches:</span> [[<span class=\"string\">name:</span> <span class=\"string\">\"$&#123;params.RELEASE_VERSION&#125;\"</span>]], <span class=\"string\">doGenerateSubmoduleConfigurations:</span> <span class=\"literal\">false</span>, <span class=\"string\">extensions:</span> [], <span class=\"string\">submoduleCfg:</span> [], <span class=\"string\">userRemoteConfigs:</span> [[<span class=\"string\">credentialsId:</span> <span class=\"string\">\"$&#123;env.GITLAB_PUB&#125;\"</span>, <span class=\"string\">url:</span> <span class=\"string\">\"$&#123;env.GITLAB_URL&#125;\"</span>]]])</span><br><span class=\"line\">              updateGitlabCommitStatus <span class=\"string\">name:</span> <span class=\"string\">'代码拉取'</span>, <span class=\"string\">state:</span> <span class=\"string\">'success'</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span>(Exception err) &#123;</span><br><span class=\"line\">              updateGitlabCommitStatus <span class=\"string\">name:</span> <span class=\"string\">'代码拉取'</span>, <span class=\"string\">state:</span> <span class=\"string\">'failed'</span></span><br><span class=\"line\">              <span class=\"comment\">// * 显示错误信息但还是会进行下一阶段操作</span></span><br><span class=\"line\">              echo err.toString()    <span class=\"comment\">/* hudson.AbortException: Couldn't find any revision to build. Verify the repository and branch configuration for this job. */</span></span><br><span class=\"line\">              unstable <span class=\"string\">'拉取代码失败'</span></span><br><span class=\"line\">              error <span class=\"string\">\"[-Error] : 代码拉取失败\\n [-Msg] : $&#123;err.getMessage()&#125; \"</span> <span class=\"comment\">/* 失败立即停止 */</span></span><br><span class=\"line\">            &#125; </span><br><span class=\"line\">        </span><br><span class=\"line\">            <span class=\"comment\">// 2.构建信息输出 （注意必须放入到 script 代码块中）</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> ( <span class=\"string\">\"$&#123;env.gitlabActionType&#125;\"</span> != <span class=\"string\">\"null\"</span> ) &#123;</span><br><span class=\"line\">              echo <span class=\"string\">\"任务名称: $&#123;JOB_NAME&#125;, 自动触发操作: $&#123;env.gitlabActionType&#125;, 项目名称: $&#123;env.gitlabSourceRepoName&#125;, 项目地址: $&#123;env.GITLAB_URL&#125;,项目分支：$&#123;env.gitlabBranch&#125; - $&#123;env.gitlabSourceBranch&#125;\"</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              echo <span class=\"string\">\"任务名称: $&#123;JOB_NAME&#125;, 手动触发操作: $&#123;params.PREJECT_OPERATION&#125;, 项目环境: $&#123;env.PREJECT_ENVIRONMENT&#125;\"</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 3.利用 GET_REAL_PROJECT 函数获取项目相关信息</span></span><br><span class=\"line\">            project = GET_REAL_PROJECT()</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 4.验证部署环境进行预设配置环境参数值</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> ( <span class=\"string\">\"$&#123;project.JmeterENV&#125;\"</span> == <span class=\"string\">\"cloud\"</span> ) &#123;</span><br><span class=\"line\">              config = ENV_TEST()</span><br><span class=\"line\">              print <span class=\"string\">\"项目环境: $&#123;project.JmeterENV&#125;\"</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              config = ENV_TEST()</span><br><span class=\"line\">              print <span class=\"string\">\"项目环境: $&#123;project.JmeterENV&#125;\"</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 5.通过企业微信进行构建通知</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> ( <span class=\"string\">\"$&#123;env.gitlabActionType&#125;\"</span> != <span class=\"string\">\"null\"</span> ) &#123;</span><br><span class=\"line\">              sh <span class=\"string\">label:</span> <span class=\"string\">'auto message notification'</span>, <span class=\"string\">script:</span> <span class=\"string\">\"\"\"\\</span></span><br><span class=\"line\"><span class=\"string\">              curl $&#123;QY_WECHAT_WEBHOOK&#125; \\</span></span><br><span class=\"line\"><span class=\"string\">              -H 'Content-Type: application/json' \\</span></span><br><span class=\"line\"><span class=\"string\">              -d '&#123;</span></span><br><span class=\"line\"><span class=\"string\">                  \"msgtype\": \"markdown\",</span></span><br><span class=\"line\"><span class=\"string\">                  \"markdown\": &#123;</span></span><br><span class=\"line\"><span class=\"string\">                    \"content\":\"Jenkins-消息通知&lt;font color=\\\\\"info\\\\\"&gt;【$&#123;JOB_NAME&#125;】&lt;/font&gt;任务开始, 自动触发! \\\\n</span></span><br><span class=\"line\"><span class=\"string\">                    &gt;项目信息: &lt;font color=\\\\\"warning\\\\\"&gt;$&#123;project.JmeterNAME&#125; - $&#123;env.gitlabBranch&#125; - $&#123;env.gitlabMergeRequestLastCommit&#125;&lt;/font&gt;</span></span><br><span class=\"line\"><span class=\"string\">                    &gt;提交信息: &lt;font color=\\\\\"warning\\\\\"&gt;$&#123;project.commitmsg&#125;&lt;/font&gt;</span></span><br><span class=\"line\"><span class=\"string\">                    &gt;测试环境: $&#123;project.JmeterENV&#125;</span></span><br><span class=\"line\"><span class=\"string\">                    &gt;测试任务: $&#123;project.JmeterFILE&#125;</span></span><br><span class=\"line\"><span class=\"string\">                    &gt;线程数量: $&#123;project.JmeterGthreads&#125;</span></span><br><span class=\"line\"><span class=\"string\">                    &gt;循环次数: $&#123;project.JmeterGloops&#125;</span></span><br><span class=\"line\"><span class=\"string\">                    &gt;[查看当前任务流水线]($&#123;env.BUILD_URL&#125;)\"</span></span><br><span class=\"line\"><span class=\"string\">                  &#125;</span></span><br><span class=\"line\"><span class=\"string\">              &#125;'</span></span><br><span class=\"line\"><span class=\"string\">              \"\"\"</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              sh <span class=\"string\">label:</span> <span class=\"string\">'manual message notification'</span>, <span class=\"string\">script:</span> <span class=\"string\">\"\"\"\\</span></span><br><span class=\"line\"><span class=\"string\">              curl $&#123;QY_WECHAT_WEBHOOK&#125; \\</span></span><br><span class=\"line\"><span class=\"string\">              -H 'Content-Type: application/json' \\</span></span><br><span class=\"line\"><span class=\"string\">              -d '&#123;</span></span><br><span class=\"line\"><span class=\"string\">                  \"msgtype\": \"markdown\",</span></span><br><span class=\"line\"><span class=\"string\">                  \"markdown\": &#123;</span></span><br><span class=\"line\"><span class=\"string\">                    \"content\":\"Jenkins-消息通知&lt;font color=\\\\\"info\\\\\"&gt;【$&#123;JOB_NAME&#125;】&lt;/font&gt;任务开始, 手工触发! \\\\n</span></span><br><span class=\"line\"><span class=\"string\">                    &gt;项目信息: &lt;font color=\\\\\"warning\\\\\"&gt;$&#123;project.JmeterNAME&#125; - $&#123;params.TagBranchName&#125;&lt;/font&gt;</span></span><br><span class=\"line\"><span class=\"string\">                    &gt;提交信息: &lt;font color=\\\\\"warning\\\\\"&gt;$&#123;project.commitmsg&#125;&lt;/font&gt;</span></span><br><span class=\"line\"><span class=\"string\">                    &gt;测试环境: $&#123;project.JmeterENV&#125;</span></span><br><span class=\"line\"><span class=\"string\">                    &gt;测试任务: $&#123;project.JmeterFILE&#125;</span></span><br><span class=\"line\"><span class=\"string\">                    &gt;线程数量: $&#123;project.JmeterGthreads&#125;</span></span><br><span class=\"line\"><span class=\"string\">                    &gt;循环次数: $&#123;project.JmeterGloops&#125;</span></span><br><span class=\"line\"><span class=\"string\">                    &gt;[查看当前任务流水线]($&#123;env.BUILD_URL&#125;)\"</span></span><br><span class=\"line\"><span class=\"string\">                  &#125;</span></span><br><span class=\"line\"><span class=\"string\">              &#125;'</span></span><br><span class=\"line\"><span class=\"string\">              \"\"\"</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    stage (<span class=\"string\">\"压力测试\"</span>) &#123;</span><br><span class=\"line\">      when &#123;</span><br><span class=\"line\">        expression &#123; <span class=\"keyword\">return</span> params.PREJECT_OPERATION == <span class=\"string\">\"None\"</span>&#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      steps &#123;</span><br><span class=\"line\">        script &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">              <span class=\"comment\">// 使用K8S集群票据进行操作远程集群部署资源</span></span><br><span class=\"line\">              withKubeConfig(<span class=\"string\">caCertificate:</span> <span class=\"string\">''</span>, <span class=\"string\">clusterName:</span> <span class=\"string\">''</span>, <span class=\"string\">contextName:</span> <span class=\"string\">''</span>, <span class=\"string\">credentialsId:</span> <span class=\"string\">\"$&#123;config.K8S_CREDENTIALSID&#125;\"</span>, <span class=\"string\">namespace:</span> <span class=\"string\">''</span>, <span class=\"string\">serverUrl:</span> <span class=\"string\">\"$&#123;config.K8S_API_SERVER&#125;\"</span>) &#123;</span><br><span class=\"line\">                String[] K8S_API_DOMAIN;</span><br><span class=\"line\">                K8S_API_DOMAIN = <span class=\"string\">\"$&#123;config.K8S_API_SERVER&#125;\"</span>.split(<span class=\"string\">'//'</span>);</span><br><span class=\"line\">                K8S_API_DOMAIN = <span class=\"string\">\"$&#123;K8S_API_DOMAIN[1]&#125;\"</span>.split(<span class=\"string\">':'</span>);</span><br><span class=\"line\">                print <span class=\"string\">\"K8S_API_DOMAIN -&gt;\"</span> + K8S_API_DOMAIN[<span class=\"number\">0</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 配置修改/etc/hosts文件以将Kubernetes API地址进行绑定,并判断jmeter Server Pod 状态是否正常</span></span><br><span class=\"line\">                res_status=sh <span class=\"string\">label:</span><span class=\"string\">'jmeter'</span>,<span class=\"string\">returnStdout:</span> <span class=\"literal\">true</span>, <span class=\"string\">script:</span> <span class=\"string\">\"\"\" </span></span><br><span class=\"line\"><span class=\"string\">                  echo \"$&#123;config.K8S_IP_SERVER&#125; $&#123;K8S_API_DOMAIN[0]&#125;\" | sudo tee -a /etc/hosts  &gt;&gt; /dev/null \\</span></span><br><span class=\"line\"><span class=\"string\">                  &amp;&amp; kubectl get pod -n $&#123;config.CI_NAMESPACE&#125; -l app.kubernetes.io/instance=jmeter | grep \"jmeter\" | wc -l | head -n 1 |tr -d '\\\\n'</span></span><br><span class=\"line\"><span class=\"string\">                \"\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// 如果为0则代表无该资源进行部署 </span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> ( <span class=\"string\">\"$&#123;res_status&#125;\"</span> != <span class=\"string\">\"0\"</span> ) &#123;</span><br><span class=\"line\">                  print <span class=\"string\">\"jmeter-distributed (master/server) = $&#123;res_status&#125;\"</span></span><br><span class=\"line\">                  <span class=\"comment\">// Master 节点名称</span></span><br><span class=\"line\">                  <span class=\"keyword\">def</span> MASTER_NAME=sh <span class=\"string\">label:</span><span class=\"string\">'MASTER_NAME'</span>,<span class=\"string\">returnStdout:</span> <span class=\"literal\">true</span>, <span class=\"string\">script:</span> <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">                    kubectl get pods -l app.kubernetes.io/component=master -o jsonpath='&#123;.items[*].metadata.name&#125;' -n $&#123;config.CI_NAMESPACE&#125; | tr -d '\\\\n'</span></span><br><span class=\"line\"><span class=\"string\">                  \"\"\"</span></span><br><span class=\"line\">                  <span class=\"comment\">// Server 节点IP</span></span><br><span class=\"line\">                  <span class=\"keyword\">def</span> SERVER_IPS=sh <span class=\"string\">label:</span><span class=\"string\">'SERVER_IPS'</span>,<span class=\"string\">returnStdout:</span> <span class=\"literal\">true</span>, <span class=\"string\">script:</span> <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">                    kubectl get pods -l app.kubernetes.io/component=server -o jsonpath='&#123;.items[*].status.podIP&#125;' -n $&#123;config.CI_NAMESPACE&#125; | tr ' ' ',' |tr -d '\\\\n'</span></span><br><span class=\"line\"><span class=\"string\">                  \"\"\"</span></span><br><span class=\"line\">                  print <span class=\"string\">\"Name: $&#123;MASTER_NAME&#125;\\nServer_IPS: $&#123;SERVER_IPS&#125;\"</span></span><br><span class=\"line\">      </span><br><span class=\"line\">                  <span class=\"comment\">// # 手动拷贝 jmx 压力测试配置文件到Jmeter 主节点中</span></span><br><span class=\"line\">                  <span class=\"comment\">// # 分布式压力测试 指定 -Ggroup.threads 每个节点线程数 ，以及 -Ggroup.loops 线程循环次数。（此处坑有点大）</span></span><br><span class=\"line\">                  sh <span class=\"string\">label:</span><span class=\"string\">'Jmeter-distributed'</span>, <span class=\"string\">script:</span> <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">                    kubectl -n $&#123;config.CI_NAMESPACE&#125; cp $&#123;project.JmeterFilePath&#125; $&#123;MASTER_NAME&#125;:/jmeter/$&#123;project.JmeterFILE&#125; &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"string\">                    kubectl -n $&#123;config.CI_NAMESPACE&#125; exec -it $MASTER_NAME -- jmeter -Ggroup.threads=$&#123;project.JmeterGthreads&#125; -Ggroup.loops=$&#123;project.JmeterGloops&#125; -n -t /jmeter/$&#123;project.JmeterFILE&#125; -l $&#123;project.JmeterFILE&#125;.result -R $SERVER_IPS </span></span><br><span class=\"line\"><span class=\"string\">                  \"\"\"</span></span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                  print <span class=\"string\">\"jmeter-distributed (master/server) = $&#123;res_status&#125;\"</span></span><br><span class=\"line\">                  error <span class=\"string\">\"[-Error] : jmeter-distributed 分布式压力测试master、server环境未启动!\\n \"</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              updateGitlabCommitStatus <span class=\"string\">name:</span> <span class=\"string\">'压力测试'</span>, <span class=\"string\">state:</span> <span class=\"string\">'success'</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span>(Exception err) &#123;</span><br><span class=\"line\">              echo err.toString()    <span class=\"comment\">/* hudson.AbortException: Couldn't find any revision to build. Verify the repository and branch configuration for this job. */</span></span><br><span class=\"line\">              unstable <span class=\"string\">'压力测试失败'</span></span><br><span class=\"line\">              updateGitlabCommitStatus <span class=\"string\">name:</span> <span class=\"string\">'压力测试'</span>, <span class=\"string\">state:</span> <span class=\"string\">'failed'</span></span><br><span class=\"line\">              error <span class=\"string\">\"[-Error] : 压力测试失败\\n [-Msg] : $&#123;err.getMessage()&#125; \"</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    stage(<span class=\"string\">'结果展示'</span>) &#123;</span><br><span class=\"line\">      when &#123;</span><br><span class=\"line\">        expression &#123; <span class=\"keyword\">return</span> params.PREJECT_OPERATION == <span class=\"string\">\"None\"</span>&#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      steps &#123;</span><br><span class=\"line\">        script &#123;</span><br><span class=\"line\">          <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">              sh <span class=\"string\">label:</span><span class=\"string\">'grafana-jmeter-dashboard'</span>,<span class=\"string\">script:</span><span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">                curl -s $&#123;QY_WECHAT_WEBHOOK&#125; \\</span></span><br><span class=\"line\"><span class=\"string\">                -H 'Content-Type: application/json' \\</span></span><br><span class=\"line\"><span class=\"string\">                -d '&#123;</span></span><br><span class=\"line\"><span class=\"string\">                    \"msgtype\": \"markdown\",</span></span><br><span class=\"line\"><span class=\"string\">                    \"markdown\": &#123;</span></span><br><span class=\"line\"><span class=\"string\">                      \"content\":\"Jenkins-消息通知&lt;font color=\\\\\"info\\\\\"&gt;【$&#123;JOB_NAME&#125;】&lt;/font&gt; - $&#123;project.JmeterFILE&#125; 任务压力测试完毕 !^_^\\\\n</span></span><br><span class=\"line\"><span class=\"string\">                      &gt;图形访问地址: &lt;font color=\\\\\"warning\\\\\"&gt;[https://devops.weiyigeek.top/grafana/d/p6hnPpg4z/apache-jmeter-dashboard?from=now-5m&amp;to=now](https://devops.weiyigeek.top/grafana/d/p6hnPpg4z/apache-jmeter-dashboard?from=now-5m&amp;to=now)&lt;/font&gt;</span></span><br><span class=\"line\"><span class=\"string\">                      &gt;[查看当前任务流水线]($&#123;env.BUILD_URL&#125;)\"</span></span><br><span class=\"line\"><span class=\"string\">                    &#125;</span></span><br><span class=\"line\"><span class=\"string\">                &#125;'</span></span><br><span class=\"line\"><span class=\"string\">              \"\"\"</span></span><br><span class=\"line\">              updateGitlabCommitStatus <span class=\"string\">name:</span> <span class=\"string\">'结果展示'</span>, <span class=\"string\">state:</span> <span class=\"string\">'success'</span></span><br><span class=\"line\">          &#125; <span class=\"keyword\">catch</span> (Exception err) &#123;</span><br><span class=\"line\">              updateGitlabCommitStatus <span class=\"string\">name:</span> <span class=\"string\">'结果展示'</span>, <span class=\"string\">state:</span> <span class=\"string\">'failed'</span></span><br><span class=\"line\">              echo err.toString()    <span class=\"comment\">/* hudson.AbortException: Couldn't find any revision to build. Verify the repository and branch configuration for this job. */</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// (12) POST阶段当所有任务执行后触发进行工作空间的清理以及消息通知;</span></span><br><span class=\"line\">  post &#123;</span><br><span class=\"line\">    always &#123;</span><br><span class=\"line\">      deleteDir()  <span class=\"comment\">/* clean up our workspace */</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    success &#123;</span><br><span class=\"line\">      echo <span class=\"string\">\"Pipeline $&#123;env.JOB_NAME&#125; 项目成功 ^_^\"</span></span><br><span class=\"line\">      qyWechatNotification <span class=\"string\">failNotify:</span> <span class=\"literal\">true</span>, <span class=\"string\">webhookUrl:</span> <span class=\"string\">\"https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=$&#123;QY_WECHAT_WEBHOOK_KEY&#125;\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    unstable &#123;</span><br><span class=\"line\">      echo <span class=\"string\">\"Pipeline $&#123;env.JOB_NAME&#125; 项目不稳定 :/\"</span></span><br><span class=\"line\">      qyWechatNotification <span class=\"string\">failNotify:</span> <span class=\"literal\">true</span>, <span class=\"string\">webhookUrl:</span> <span class=\"string\">\"https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=$&#123;QY_WECHAT_WEBHOOK_KEY&#125;\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    failure &#123;</span><br><span class=\"line\">      echo <span class=\"string\">\"Pipeline $&#123;env.JOB_NAME&#125; 项目失败 :(\"</span></span><br><span class=\"line\">      qyWechatNotification <span class=\"string\">failNotify:</span> <span class=\"literal\">true</span>, <span class=\"string\">webhookUrl:</span> <span class=\"string\">\"https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=$&#123;QY_WECHAT_WEBHOOK_KEY&#125;\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    changed &#123;</span><br><span class=\"line\">      echo <span class=\"string\">\"Pipeline $&#123;env.JOB_NAME&#125; 项目改变 .-.\"</span></span><br><span class=\"line\">      qyWechatNotification <span class=\"string\">failNotify:</span> <span class=\"literal\">true</span>, <span class=\"string\">webhookUrl:</span> <span class=\"string\">\"https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=$&#123;QY_WECHAT_WEBHOOK_KEY&#125;\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>温馨提示: 上述使用 Jenkins 自定义 jnlp-Slave 镜像 <code>weiyigeek/alpine-jenkins-jnlp</code>，如需自行构建可以参考如下地址<a href=\"https://hub.docker.com/r/weiyigeek/alpine-jenkins-jnlp\" target=\"_blank\" rel=\"noopener\">https://hub.docker.com/r/weiyigeek/alpine-jenkins-jnlp</a></p>\n<p>温馨提示: 此处在 jenkins 中使用 kubernetes-plugins 插件以便在 kubernetes Cloud 集群中动态生成 Slave Pod ， 参考地址: <a href=\"https://blog.weiyigeek.top/2020/12-30-531.html#3-%E9%9B%86%E7%BE%A4%E5%8A%A8%E6%80%81%E5%88%9B%E5%BB%BA-Agent-%E8%8A%82%E7%82%B9-Slave-%E8%8A%82%E7%82%B9\">https://blog.weiyigeek.top/2020/12-30-531.html#3-集群动态创建-Agent-节点-Slave-节点</a>。</p>\n<p>温馨提示: 上述 webhook 消息通知是采用了企业微信群机器人 qy-wechat-notification-plugin 插件 <a href=\"https://blog.weiyigeek.top/2020/12-31-537.html#4-qy-wechat-notification-plugin\">https://blog.weiyigeek.top/2020/12-31-537.html#4-qy-wechat-notification-plugin</a>，当然你也可以将其换为阿里钉钉通知，主要看你企业中是使用哪一个作为你的通知使用。</p>\n<p><br/></p>\n<p>步骤 05.在前面的环境都准备好的情况下，我们便可以上传jmeter任务jmx格式的文件到gitlab仓库中，然后配置的webhook将会自动触发Jenkins任务从而进行自动化压力测试，此处我们先来看自动触发。</p>\n<blockquote>\n<p>1.我们需要先创建一个 jmeter 带线程组的任务，在Thread Properties中分别在Number of Threads 、 Loop Count 配置为 <code>${__P(group.threads,50)}</code> 和 <code>${__P(group.loops,200)}</code></p>\n</blockquote>\n<blockquote>\n<p>2.然后在 jmeter 带线程组的任务, 右键新增一个 Backend Listner 其关键点如下所示:</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># influxdbMetricsSender 一般默认即可</span></span><br><span class=\"line\">influxdbMetricsSender: org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</span><br><span class=\"line\"><span class=\"comment\"># 关键点: 搭建的influxdb 1.x连接字符串</span></span><br><span class=\"line\">influxdbUrl: http://192.168.12.107:32086/write?db=jmeter</span><br><span class=\"line\"><span class=\"comment\"># 关键点: 应用名称后续在grafana中需要手动选择指定应用名称的压力测试结果</span></span><br><span class=\"line\">application: index</span><br><span class=\"line\"><span class=\"comment\"># 关键点: jmeter 压力测试数据存放的表名称</span></span><br><span class=\"line\">measurement\tjmeter</span><br><span class=\"line\"><span class=\"comment\"># 仅仅收集摘要信息</span></span><br><span class=\"line\">summaryOnly\t<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 采样器Regex正则表达式</span></span><br><span class=\"line\">samplersRegex\t.*</span><br><span class=\"line\"><span class=\"comment\"># 统计的百分位</span></span><br><span class=\"line\">percentiles\t50;90;95;99</span><br><span class=\"line\"><span class=\"comment\"># 测试标题</span></span><br><span class=\"line\">testTitle\ttitle-index</span><br><span class=\"line\"><span class=\"comment\"># 事件标签</span></span><br><span class=\"line\">eventTags\ttag-index</span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/5/20220720173210.png\" alt=\"WeiyiGeek.Backend Listner\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Backend Listner</p>\n            </figure>\n<p><br/></p>\n<p>步骤 06.此处我使用 git 将 jmeter 项目克隆到本地中, 然后将上面的jmeter任务进行导出，并且复制 jmeter-test.jmx 到本地<code>E:\\githubProject\\jmeter</code> 目录之中，通过 git 三步法将更改提交到Gitlab仓库中。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> ssh://git@gitlab.weiyigeek.top:2222/devops/jmeter.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> E:\\githubProject\\jmeter</span><br><span class=\"line\">copy C:\\Users\\WeiyiGeek\\Downloads\\jmeter-test.jmx E:\\githubProject\\jmeter</span><br><span class=\"line\"></span><br><span class=\"line\">$ git add .</span><br><span class=\"line\">$ git commit -m <span class=\"string\">\"jmeter weiyigeek jmeter-test.jmx 50 100\"</span></span><br><span class=\"line\">$ git push</span><br></pre></td></tr></table></figure>\n<p>温馨提示：此处我已经将ssh公钥添加到gitlab中了, 后续拉取和推送代码到私有仓库更加方便。</p>\n<p><br/></p>\n<p>步骤 07.在 Jenkins 中可以查看到 <code>Started by GitLab push by WeiyiGeek</code> 自动触发字样, 并且在 blueocean 插件界面下可以看到流水线执行的情况。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ kubectl -n devtest cp /home/jenkins/agent/workspace/jmeter/jmeter-test.jmx jmeter-distributed-jmeter-master-5d5587ffb-b5nf6:/jmeter/jmeter-test.jmx</span><br><span class=\"line\">+ kubectl -n devtest <span class=\"built_in\">exec</span> -it jmeter-distributed-jmeter-master-5d5587ffb-b5nf6 -- jmeter <span class=\"string\">'-Ggroup.threads=50'</span> <span class=\"string\">'-Ggroup.loops=100'</span> -n -t /jmeter/jmeter-test.jmx -l jmeter-test.jmx.result -R 10.66.24.215,10.66.24.209,10.66.0.197</span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/5/20220721093703.png\" alt=\"WeiyiGeek.Jenkins pipeline & blueocean\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Jenkins pipeline & blueocean</p>\n            </figure>\n<p><br/></p>\n<p>步骤 08.上述 <code>Jenkins pipeline</code> 流水线执行完毕之后，可以从企业微信中查看到 jmeter 任务相关通知</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/5/20220721094538.png\" alt=\"WeiyiGeek.qywechat notification\" title=\"\" class=\"\">\n                <p>WeiyiGeek.qywechat notification</p>\n            </figure>\n<p><br/></p>\n<p>步骤 09.点击企业微信中展示压力测试数据的 <code>Grafana dashboard</code> 地址，查看jmeter压力测试的相关数据。</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/5/20220721094651.png\" alt=\"WeiyiGeek.Grafana & jmeter\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Grafana & jmeter</p>\n            </figure>\n<p><br/></p>\n<p>步骤 10.上述提供的Jenkins流水线中除了通过Gitlab代码仓库更新自动触发外，我们还可以进行手动触发进行jmeter自动化压力测试，我们在Jenkins Dashboard 中点击 jmeter -&gt; <code>Build With Parameters</code> -&gt; 此处我只有一个默认分支所以，其参数缺省即可(请注意脚本中的<code>ENV_TEST()</code>函数) -&gt; 点击开始构建, 完成后将如下图所示。</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/5/20220721093438.png\" alt=\"WeiyiGeek.手动触发Jmeter压力测试\" title=\"\" class=\"\">\n                <p>WeiyiGeek.手动触发Jmeter压力测试</p>\n            </figure>\n<p><br/></p>\n<p>至此在在Kubernetes集群中进行<code>jmeter + InfluxDB + gitlab + Jenkins</code>进行自动化jmeter分布式压力测试实践完毕!.</p>\n<hr>\n<h2 id=\"0x03-在Kubernetes集群-jmeter-InfluxDB-2-x-Grafana-中进行自动化分布式压力测试及结果展示\"><a href=\"#0x03-在Kubernetes集群-jmeter-InfluxDB-2-x-Grafana-中进行自动化分布式压力测试及结果展示\" class=\"headerlink\" title=\"0x03 在Kubernetes集群(jmeter + InfluxDB 2.x + Grafana)中进行自动化分布式压力测试及结果展示\"></a>0x03 在Kubernetes集群(jmeter + InfluxDB 2.x + Grafana)中进行自动化分布式压力测试及结果展示</h2><p>描述: 如果要使用最新 jmeter dashboard 模板，我们需要将 InfluxDB 版本切换为 2.x 并且分布式压力测试 jmeter 程序需要运行在 JDK 11 以上。</p>\n<p>温馨提示: Java SE Development Kit 11.0.15.1 (Java SE 订阅者将至少在 2026 年 9 月之前收到 JDK 11 更新), 下载地址 <a href=\"https://www.oracle.com/java/technologies/downloads/#java11\" target=\"_blank\" rel=\"noopener\">https://www.oracle.com/java/technologies/downloads/#java11</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systeminfo</span><br><span class=\"line\">  <span class=\"comment\"># OS 名称: Microsoft Windows 10 专业版</span></span><br><span class=\"line\">  <span class=\"comment\"># OS 版本: 10.0.19044 暂缺 Build 19044</span></span><br><span class=\"line\">  </span><br><span class=\"line\">java --version</span><br><span class=\"line\">  <span class=\"comment\"># java 11.0.15.1 2022-04-22 LTS</span></span><br><span class=\"line\">  <span class=\"comment\"># Java(TM) SE Runtime Environment 18.9 (build 11.0.15.1+2-LTS-10)</span></span><br><span class=\"line\">  <span class=\"comment\"># Java HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.15.1+2-LTS-10, mixed mode)</span></span><br><span class=\"line\"></span><br><span class=\"line\">jmeter.bat </span><br><span class=\"line\">  <span class=\"comment\"># Debug Output: \"11.0.15.1\"</span></span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<h3 id=\"1-以-helm-方式安装InfluxDB-2-x-时序数据库\"><a href=\"#1-以-helm-方式安装InfluxDB-2-x-时序数据库\" class=\"headerlink\" title=\"(1) 以 helm 方式安装InfluxDB 2.x 时序数据库\"></a>(1) 以 helm 方式安装InfluxDB 2.x 时序数据库</h3><p><strong>快速安装</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># - chart 仓库添加与索引更新</span></span><br><span class=\"line\">helm repo add bitnami https://charts.bitnami.com/bitnami </span><br><span class=\"line\">helm repo update &amp;&amp; helm search repo influxdb</span><br><span class=\"line\">  <span class=\"comment\"># NAME                    CHART VERSION   APP VERSION     DESCRIPTION</span></span><br><span class=\"line\">  <span class=\"comment\"># bitnami/influxdb        5.3.1           2.2.0           InfluxDB(TM) is an open source time-series data</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - chart 模板参数配置</span></span><br><span class=\"line\">helm show values bitnami/influxdb &gt; influxdb.yml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - 部署 influxdb2 </span></span><br><span class=\"line\">helm install jmeter-influxdb2 bitnami/influxdb -f influxdb.yml --version 5.3.1 -n devtest --debug --create-namespace</span><br><span class=\"line\">kubectl get pod -n devtest jmeter-influxdb2-5574c9c4c9-bzx4l jmeter-</span><br><span class=\"line\">  <span class=\"comment\"># NAME                                READY   STATUS    RESTARTS       AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># jmeter-influxdb2-5574c9c4c9-bzx4l   1/1     Running   5 (148m ago)   153m</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - 进入 influxdb2 Pod 终端</span></span><br><span class=\"line\">kubectl <span class=\"built_in\">exec</span> -it -n devtest jmeter-influxdb2-5574c9c4c9-bzx4l -- bash</span><br><span class=\"line\">I have no name!@jmeter-influxdb2-5574c9c4c9-bzx4l:/$ env | egrep <span class=\"string\">\"^INFLUXDB_\"</span></span><br><span class=\"line\">INFLUXDB_ADMIN_USER_TOKEN=9ONq6UdzvEtMRny40uUN</span><br><span class=\"line\">INFLUXDB_ADMIN_ORG=primary</span><br><span class=\"line\">INFLUXDB_CREATE_USER_TOKEN=no</span><br><span class=\"line\">INFLUXDB_ADMIN_USER=admin</span><br><span class=\"line\">INFLUXDB_HTTP_AUTH_ENABLED=<span class=\"literal\">true</span></span><br><span class=\"line\">INFLUXDB_ADMIN_BUCKET=primary</span><br><span class=\"line\">INFLUXDB_ADMIN_USER_PASSWORD=fL2JnkqExH</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - 创建 jmeter 的组织</span></span><br><span class=\"line\">influx org create -n jmeter -d <span class=\"string\">\"jmeter organization\"</span> -t 9ONq6UdzvEtMRny40uUN</span><br><span class=\"line\">  <span class=\"comment\"># ID                      Name</span></span><br><span class=\"line\">  <span class=\"comment\"># 65386f1047a4a0ef        jmeter</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - 创建 jmeter 组织下名为 jmeter 桶</span></span><br><span class=\"line\">influx bucket create -n jmeter -r 0 -o jmeter -t 9ONq6UdzvEtMRny40uUN</span><br><span class=\"line\">  <span class=\"comment\"># ID                      Name    Retention       Shard group duration    Organization ID         Schema Type</span></span><br><span class=\"line\">  <span class=\"comment\"># ba47a04e75fb2e05        jmeter  infinite        168h0m0s                65386f1047a4a0ef        implicit</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - 创建 jmeter 组织下名为 jmeter 用户</span></span><br><span class=\"line\">influx user create --name jmeter --password weiyigeek.top --org jmeter -t 9ONq6UdzvEtMRny40uUN</span><br><span class=\"line\">  <span class=\"comment\"># ID                      Name</span></span><br><span class=\"line\">  <span class=\"comment\"># 0982d4da8fe3b000        jmeter</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - 创建生成 jmeter 用户认证Token及其权限,该权限只在自己的组织中拥有权限。</span></span><br><span class=\"line\">influx auth create --user jmeter --org jmeter --all-access -t 9ONq6UdzvEtMRny40uUN</span><br><span class=\"line\">  <span class=\"comment\"># ID                      Description     Token                                                                                  User Name        User ID                 Permissions</span></span><br><span class=\"line\">  <span class=\"comment\"># 0982d54a42a3b000                        eoAyDV97es2jh0oC2oF2AWiMXupn9Hswq_axKUe8TKqvk7zCcEGeoQYUGA8WJS-tC4dzPg4Qaz01uEizmniWMw==jmeter          0982d4da8fe3b000        [read:orgs/65386f1047a4a0ef/authorizations write:orgs/65386f1047a4a0ef/authorizations read:orgs/65386f1047a4a0ef/buckets write:orgs/65386f1047a4a0ef/buckets read:orgs/65386f1047a4a0ef/dashboards write:orgs/65386f1047a4a0ef/dashboards read:/orgs/65386f1047a4a0ef read:orgs/65386f1047a4a0ef/sources write:orgs/65386f1047a4a0ef/sources read:orgs/65386f1047a4a0ef/tasks write:orgs/65386f1047a4a0ef/tasks read:orgs/65386f1047a4a0ef/telegrafs write:orgs/65386f1047a4a0ef/telegrafs read:/users/0982d4da8fe3b000 write:/users/0982d4da8fe3b000 read:orgs/65386f1047a4a0ef/variables write:orgs/65386f1047a4a0ef/variables read:orgs/65386f1047a4a0ef/scrapers write:orgs/65386f1047a4a0ef/scrapers read:orgs/65386f1047a4a0ef/secrets write:orgs/65386f1047a4a0ef/secrets read:orgs/65386f1047a4a0ef/labels write:orgs/65386f1047a4a0ef/labels read:orgs/65386f1047a4a0ef/views write:orgs/65386f1047a4a0ef/views read:orgs/65386f1047a4a0ef/documents write:orgs/65386f1047a4a0ef/documents read:orgs/65386f1047a4a0ef/notificationRules write:orgs/65386f1047a4a0ef/notificationRules read:orgs/65386f1047a4a0ef/notificationEndpoints write:orgs/65386f1047a4a0ef/notificationEndpoints read:orgs/65386f1047a4a0ef/checks write:orgs/65386f1047a4a0ef/checks read:orgs/65386f1047a4a0ef/dbrp write:orgs/65386f1047a4a0ef/dbrp read:orgs/65386f1047a4a0ef/notebooks write:orgs/65386f1047a4a0ef/notebooks read:orgs/65386f1047a4a0ef/annotations write:orgs/65386f1047a4a0ef/annotations read:orgs/65386f1047a4a0ef/remotes write:orgs/65386f1047a4a0ef/remotes read:orgs/65386f1047a4a0ef/replications write:orgs/65386f1047a4a0ef/replications]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - 创建 dbrp 映射以便通过InfluxQL进行数据查询</span></span><br><span class=\"line\">influx v1 dbrp create --db jmeter_db --rp jmeter_rp --bucket-id ba47a04e75fb2e05 --org jmeter --default -t 9ONq6UdzvEtMRny40uUN</span><br><span class=\"line\">  <span class=\"comment\"># ID                      Database        Bucket ID               Retention Policy        Default Organization ID</span></span><br><span class=\"line\">  <span class=\"comment\"># 0982d6738223b000        jmeter_db       ba47a04e75fb2e05        jmeter_rp               true    65386f1047a4a0ef</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - 手动转发 influxdb 数据库端口到宿主机的 30086 端口上</span></span><br><span class=\"line\">kubectl port-forward --namespace devtest  --address 0.0.0.0 $(kubectl get pods --namespace devtest -l app.kubernetes.io/name=influxdb -o jsonpath=<span class=\"string\">'&#123; .items[0].metadata.name &#125;'</span>) 30086:8086</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<h2 id=\"0x0n-附录参考\"><a href=\"#0x0n-附录参考\" class=\"headerlink\" title=\"0x0n 附录参考\"></a>0x0n 附录参考</h2><h3 id=\"Jmeter-Backend-Listener-组件介绍\"><a href=\"#Jmeter-Backend-Listener-组件介绍\" class=\"headerlink\" title=\"Jmeter Backend Listener 组件介绍\"></a>Jmeter Backend Listener 组件介绍</h3><ul>\n<li><a href=\"https://jmeter.apache.org/usermanual/component_reference.html#Backend_Listener\" target=\"_blank\" rel=\"noopener\">https://jmeter.apache.org/usermanual/component_reference.html#Backend_Listener</a></li>\n<li><a href=\"https://jmeter.apache.org/usermanual/realtime-results.html\" target=\"_blank\" rel=\"noopener\">https://jmeter.apache.org/usermanual/realtime-results.html</a></li>\n</ul>\n<p><br/></p>\n<h3 id=\"Jmeter-插件安装\"><a href=\"#Jmeter-插件安装\" class=\"headerlink\" title=\"Jmeter 插件安装\"></a>Jmeter 插件安装</h3><p>描述: 存放插件jar目录的为<code>D:\\Tools\\apache-jmeter-5.4.3\\lib\\ext</code>,我们可以将jar文件将其放在<code>/lib/ext</code>中，重启Jmeter就可以了。</p>\n<p>Prometheus Listener for Jmeter (为Prometheus导出JMeter指标), 利用它就能将 JMeter 变成一个 Data Exporter 然后在使用 Prometheus 进行抓取。<br>This JMeter plugin is highly configurable listener (and config element) to allow users define they’re own metrics (names, types etc.) and expose them through a Prometheus /metrics API to be scraped by a Prometheus server。</p>\n<ul>\n<li><p><a href=\"https://github.com/johrstrom/jmeter-prometheus-plugin/releases/download/0.6.0/jmeter-prometheus-plugin-0.6.0.jar\" target=\"_blank\" rel=\"noopener\">https://github.com/johrstrom/jmeter-prometheus-plugin/releases/download/0.6.0/jmeter-prometheus-plugin-0.6.0.jar</a></p>\n</li>\n<li><p><a href=\"https://github.com/mderevyankoaqa/jmeter-influxdb2-listener-plugin/\" target=\"_blank\" rel=\"noopener\">https://github.com/mderevyankoaqa/jmeter-influxdb2-listener-plugin/</a></p>\n</li>\n</ul>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"压力测试","path":"api/categories/压力测试.json"},{"name":"运维工具","path":"api/categories/运维工具.json"}],"tags":[{"name":"Jmeter","path":"api/tags/Jmeter.json"}]}