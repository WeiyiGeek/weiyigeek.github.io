{"title":"Python3界面开发常用.md","slug":"编程世界/Python/进阶学习/Python3界面开发常用","date":"2019-04-16T13:34:30.000Z","updated":"2022-03-29T05:39:06.297Z","url":"2019/4-16-347.html","path":"api/articles/2019/4-16-347.html.json","covers":["https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190416184027.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190416192656.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190416192800.png"],"content":"<p>[TOC]<br><a id=\"more\"></a></p>\n<h4 id=\"0x00-前言\"><a href=\"#0x00-前言\" class=\"headerlink\" title=\"0x00 前言\"></a>0x00 前言</h4><p>Python下各种GUI简介、使用优缺点对比:</p>\n<table>\n<thead>\n<tr>\n<th>GUI编程</th>\n<th>简介特点</th>\n<th>优缺点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>PyQt</td>\n<td>Python 对跨平台的 GUI 工具集 Qt 的包装实现了 440 个类以及 6000 个函数或者方法 ，PyQt 是作为 Python 的插件实现的。</td>\n<td>比较流行的一个 Tkinter 的替代品，功能 非常强大，可以用Qt开发多美漂亮的界面，也就可以用PyQt开发多么漂亮的界面。 跨平台的支持很好，不过在商业授权上似乎存在一些问题。</td>\n</tr>\n<tr>\n<td>Tkinter</td>\n<td>绑定了 Python 的 Tk GUI 工具集 ，就是Python 包装的Tcl代码，通过内嵌在 Python 解释器内部的 Tcl 解释器实现， Tkinter的调用转换成 Tcl 命令，然后交给 Tcl 解释器进行解释，实现 Python 的 GUI 界面。对比Tk和其它语言的绑定比如 PerlTk 是直接由 Tk 中的 C 库实现的。</td>\n<td>历史最悠久Python 事实上的标准 GUI ， Python 中使用 Tk GUI 工具集的标准接口，已经包括在标准的 Python Windows 安装中，著名的 IDLE 就是使用 Tkinter 实现 GUI 的创建的 GUI 简单，学起来和用起来也简单。</td>\n</tr>\n<tr>\n<td>wxPython</td>\n<td>Python 对跨平台的 GUI 工具集 wxWidgets （ C++ 编写）的包装，作为 Python 的一个 扩展模块实现。</td>\n<td>比较流行的一个 Tkinter 的替代品，在各种平台下都表现挺好。</td>\n</tr>\n<tr>\n<td>PyGTK</td>\n<td>一系列的 Python 对 GTK+ GUI 库的包装。</td>\n<td>比较流行的一个 Tkinter 的替代品，许多 Gnome 下的著名应用程序的 GUI 都是使用 PyGTK 实现的，比如 BitTorrent ， GIMP和 Gedit 都有可选的实现，在 Windows 平台 似乎表现不太好，这点也无可厚非，毕竟使用的是GTK 的 GUI 库。</td>\n</tr>\n<tr>\n<td>PySide</td>\n<td>另一个 Python 对跨平台的 GUI 工具集 Qt 的包装，捆绑在 Python 当中，最初由 BoostC++ 库实现，后来迁移到 Shiboken。</td>\n<td>比较流行的一个 Tkinter 的替代品和上面类似至于两者的区别</td>\n</tr>\n<tr>\n<td>easygui</td>\n<td>Python 中一个非常简单的 GUI 编程模块，不同于其他的 GUI 生成器，它不是事件驱动的</td>\n<td>调用函数实现，并且使用简单;为用户提供了简单的 GUI 交互接口，不需要程序员知道任何有关 tkinter，框架，部件，回调或 lambda 的任何细节。</td>\n</tr>\n</tbody>\n</table>\n<p><br/></p>\n<h5 id=\"目录导航\"><a href=\"#目录导航\" class=\"headerlink\" title=\"目录导航\"></a>目录导航</h5><p>(1) easygui 模块<br>(2) wxPython 模块</p>\n<p><em>补充来源：</em></p>\n<ul>\n<li>PyQt 的介绍 : <a href=\"http://en.wikipedia.org/wiki/PyQt\" target=\"_blank\" rel=\"noopener\">http://en.wikipedia.org/wiki/PyQt</a></li>\n<li>Tkinter 的介绍 : <a href=\"http://en.wikipedia.org/wiki/Tkinter\" target=\"_blank\" rel=\"noopener\">http://en.wikipedia.org/wiki/Tkinter</a></li>\n<li>wxPython 的介绍 : <a href=\"http://en.wikipedia.org/wiki/WxPython\" target=\"_blank\" rel=\"noopener\">http://en.wikipedia.org/wiki/WxPython</a></li>\n<li>PyGTK 的介绍 : <a href=\"http://en.wikipedia.org/wiki/PyGTK\" target=\"_blank\" rel=\"noopener\">http://en.wikipedia.org/wiki/PyGTK</a></li>\n<li>PySide 的介绍 : <a href=\"http://en.wikipedia.org/wiki/PySide\" target=\"_blank\" rel=\"noopener\">http://en.wikipedia.org/wiki/PySide</a></li>\n</ul>\n<hr/>\n\n<h4 id=\"0x01-Easygui-模块\"><a href=\"#0x01-Easygui-模块\" class=\"headerlink\" title=\"0x01 Easygui 模块\"></a>0x01 Easygui 模块</h4><h5 id=\"1-EasyGUI介绍\"><a href=\"#1-EasyGUI介绍\" class=\"headerlink\" title=\"1. EasyGUI介绍\"></a>1. EasyGUI介绍</h5><p><strong>1.1 什么是 EasyGUI？</strong><br>EasyGUI 是 Python 中一个非常简单的 GUI 编程模块，不同于其他的 GUI 生成器，它不是事件驱动的。<br>相反所有的 GUI 交互都是通过简地函数调用就可以实现,EasyGUI 为用户提供了简单的 GUI 交互接口，不需要程序员知道任何有关 tkinter，框架，部件，回调或 lambda 的任何细节。</p>\n<p>EasyGUI 是运行在 Tkinter 上并拥有自身的事件循环，而 IDLE 也是 Tkinter 写的一个应用程序并也拥有自身的事件循环。因此当两者同时运行的时候，有可能会发生冲突，且带来不可预测的结果。因此如果你发现你的 EasyGUI 程序有这样的问题，请尝试在 IDLE 外去运行你的程序。</p>\n<p>环境版本：Python 3.7.2，easygui-0.98.1-py3.7.egg<br>官网：<a href=\"https://github.com/robertlugg/easygui\" target=\"_blank\" rel=\"noopener\">https://github.com/robertlugg/easygui</a><br>使用pip进行安装:pip install easygui</p>\n<p><br></p>\n<p><strong>1.2 导入EasyGUI模块以及方法介绍</strong><br>为了使用 EasyGUI 这个模块，你应该先导入它,</p>\n<p>导入语句是：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> easygui</span><br><span class=\"line\"><span class=\"keyword\">from</span> easygui <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> easygui <span class=\"keyword\">as</span> g</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#在命令行调用 EasyGUI 是这样的，且或者可以从 IDE（例如 IDLE, PythonWin, Wing, 等等）上调用：</span></span><br><span class=\"line\">Python3/Lib/site-packages/easygui<span class=\"number\">-0.98</span><span class=\"number\">.1</span>-py3<span class=\"number\">.7</span>.egg/easygui/easygui.py</span><br><span class=\"line\">easygui.egdemo()</span><br></pre></td></tr></table></figure></p>\n<p>模块方法一览表：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"number\">0</span>) easygui.egdemo()  <span class=\"comment\">#EasyGUI的演示程序</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''消息对话框'''</span></span><br><span class=\"line\">msgbox(msg=<span class=\"string\">'(Your message goes here)'</span>, title=<span class=\"string\">' '</span>, ok_button=<span class=\"string\">'OK'</span>, image=<span class=\"literal\">None</span>, root=<span class=\"literal\">None</span>)  <span class=\"comment\">#消息框</span></span><br><span class=\"line\">enterbox(msg=<span class=\"string\">'Enter something.'</span>, title=<span class=\"string\">' '</span>, default=<span class=\"string\">''</span>, strip=<span class=\"literal\">True</span>, image=<span class=\"literal\">None</span>, root=<span class=\"literal\">None</span>)  <span class=\"comment\">#输入框,返回值为用户输入的字符串;</span></span><br><span class=\"line\">integerbox(msg=<span class=\"string\">''</span>, title=<span class=\"string\">' '</span>, default=<span class=\"literal\">None</span>, lowerbound=<span class=\"number\">0</span>, upperbound=<span class=\"number\">99</span>, image=<span class=\"literal\">None</span>, root=<span class=\"literal\">None</span>) <span class=\"comment\">#数值输入框</span></span><br><span class=\"line\"><span class=\"comment\">#多个简单的输入框,用户输入的值比选项少的话，则返回列表中的值用空字符串填充用户为输入的选项多则截断,用户取消操作返回None</span></span><br><span class=\"line\">multenterbox(msg=<span class=\"string\">'Fill in values for the fields.'</span>, title=<span class=\"string\">' '</span>, fields=[], values=[], callback=<span class=\"literal\">None</span>, run=<span class=\"literal\">True</span>) </span><br><span class=\"line\">passwordbox(msg=<span class=\"string\">'Enter your password.'</span>, title=<span class=\"string\">' '</span>, default=<span class=\"string\">''</span>, image=<span class=\"literal\">None</span>, root=<span class=\"literal\">None</span>) <span class=\"comment\">#密码输入框(以*号形式显示)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''按钮对话框'''</span></span><br><span class=\"line\"><span class=\"comment\">#显示一个消息和提供一个 “OK” 按钮，你可以指定任意的消息和标题，重写OK按钮</span></span><br><span class=\"line\"><span class=\"comment\">#当选择 “cancel” 或关闭窗口的时候返回一个布尔类型的值0，否则为1</span></span><br><span class=\"line\"><span class=\"comment\">#注意：“C[o]ntinue” 中的 [o] 表示快捷键，也就是说当用户在键盘上敲一下 o 字符，就相当于点击了 “C[o]ntinue” 按键。</span></span><br><span class=\"line\">ccbox(msg=<span class=\"string\">'Shall I continue?'</span>, title=<span class=\"string\">' '</span>, choices=(<span class=\"string\">'C[o]ntinue'</span>, <span class=\"string\">'C[a]ncel'</span>), image=<span class=\"literal\">None</span>, default_choice=<span class=\"string\">'C[o]ntinue'</span>, cancel_choice=<span class=\"string\">'C[a]ncel'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#跟 ccbox() 一样，只不过这里默认的 choices 参数值不同而已，[&lt;F1&gt;] 表示将键盘上的 F1 功能按键作为 “Yes” 的快捷键使用。</span></span><br><span class=\"line\">ynbox(msg=<span class=\"string\">'Shall I continue?'</span>, title=<span class=\"string\">' '</span>, choices=(<span class=\"string\">'[&lt;F1&gt;]Yes'</span>, <span class=\"string\">'[&lt;F2&gt;]No'</span>), image=<span class=\"literal\">None</span>, default_choice=<span class=\"string\">'[&lt;F1&gt;]Yes'</span>, cancel_choice=<span class=\"string\">'[&lt;F2&gt;]No'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#使用 buttonbox() 定义自己的一组按钮，buttonbox() 会显示一组由你自定义的按钮。</span></span><br><span class=\"line\"><span class=\"comment\">#当用户点击任意一个按钮的时候，buttonbox() 返回按钮的文本内容。如果用户点击取消或者关闭窗口，那么会返回默认选项（第一个选项）</span></span><br><span class=\"line\">buttonbox(msg=<span class=\"string\">''</span>, title=<span class=\"string\">' '</span>, choices=(<span class=\"string\">'Button[1]'</span>, <span class=\"string\">'Button[2]'</span>, <span class=\"string\">'Button[3]'</span>), image=<span class=\"literal\">None</span>, images=<span class=\"literal\">None</span>, default_choice=<span class=\"literal\">None</span>, cancel_choice=<span class=\"literal\">None</span>, callback=<span class=\"literal\">None</span>, run=<span class=\"literal\">True</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#基本跟 buttonbox() 一样，区别就是当用户选择第一个按钮的时候返回序号 0， 选择第二个按钮的时候返回序号 1</span></span><br><span class=\"line\">indexbox(msg=<span class=\"string\">'Shall I continue?'</span>, title=<span class=\"string\">' '</span>, choices=(<span class=\"string\">'Yes'</span>, <span class=\"string\">'No'</span>), image=<span class=\"literal\">None</span>, default_choice=<span class=\"string\">'Yes'</span>, cancel_choice=<span class=\"string\">'No'</span>)</span><br><span class=\"line\">boolbox(msg=<span class=\"string\">'Shall I continue?'</span>, title=<span class=\"string\">' '</span>, choices=(<span class=\"string\">'[Y]es'</span>, <span class=\"string\">'[N]o'</span>), image=<span class=\"literal\">None</span>, default_choice=<span class=\"string\">'Yes'</span>, cancel_choice=<span class=\"string\">'No'</span>)  <span class=\"comment\">#如果第一个按钮被选中则返回 True，否则返回 False。</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''选择/多选框'''</span></span><br><span class=\"line\"><span class=\"comment\">#按钮组件方便提供用户一个简单的按钮选项，但如果有很多选项，或者选项的内容特别长的话，更好的策略是为它们提供一个可选择的列表</span></span><br><span class=\"line\">choicebox(msg=<span class=\"string\">'Pick an item'</span>, title=<span class=\"string\">''</span>, choices=[], preselect=<span class=\"number\">0</span>, callback=<span class=\"literal\">None</span>, run=<span class=\"literal\">True</span>) <span class=\"comment\">#单选框</span></span><br><span class=\"line\">multchoicebox(msg=<span class=\"string\">'Pick an item'</span>, title=<span class=\"string\">''</span>, choices=[], preselect=<span class=\"number\">0</span>, callback=<span class=\"literal\">None</span>, run=<span class=\"literal\">True</span>) <span class=\"comment\">#持用户选择 0 个，1 个或者同时选择多个选项</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''显示文本框'''</span></span><br><span class=\"line\"><span class=\"comment\">#注：text 参数设置可编辑文本区域的内容，可以是字符串、列表或者元祖类型。</span></span><br><span class=\"line\">textbox(msg=<span class=\"string\">''</span>, title=<span class=\"string\">' '</span>, text=<span class=\"string\">''</span>, codebox=<span class=\"literal\">False</span>, callback=<span class=\"literal\">None</span>, run=<span class=\"literal\">True</span>)</span><br><span class=\"line\">codebox(msg=<span class=\"string\">''</span>, title=<span class=\"string\">' '</span>, text=<span class=\"string\">''</span>) <span class=\"comment\">#以等宽字体显示文本内容（不自动换行），相当于 textbox(codebox=True)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''文件目录选择框'''</span></span><br><span class=\"line\"><span class=\"comment\"># 函数用于提供一个对话框，返回用户选择的目录名（带完整路径哦），如果用户选择 “Cancel” 则返回 None</span></span><br><span class=\"line\">diropenbox(msg=<span class=\"literal\">None</span>, title=<span class=\"literal\">None</span>, default=<span class=\"literal\">None</span>)</span><br><span class=\"line\">fileopenbox(msg=<span class=\"literal\">None</span>, title=<span class=\"literal\">None</span>, default=<span class=\"string\">'*'</span>, filetypes=<span class=\"literal\">None</span>, multiple=<span class=\"literal\">False</span>)</span><br><span class=\"line\">filesavebox(msg=<span class=\"literal\">None</span>, title=<span class=\"literal\">None</span>, default=<span class=\"string\">''</span>, filetypes=<span class=\"literal\">None</span>) <span class=\"comment\">#函数提供一个对话框，让用于选择文件需要保存的路径（带完整路径哦）</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#关于 default 参数的设置方法：</span></span><br><span class=\"line\">default 参数指定一个默认路径，通常包含一个或多个通配符。</span><br><span class=\"line\">如果设置了 default 参数，fileopenbox() 显示默认的文件路径和格式。</span><br><span class=\"line\">default 默认的参数是 <span class=\"string\">'*'</span>，即匹配所有格式的文件。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#例如：</span></span><br><span class=\"line\">default=<span class=\"string\">\"c:/fishc/*.py\"</span> 即显示 C:\\fishc 文件夹下所有的 Python 文件。</span><br><span class=\"line\">default=<span class=\"string\">\"c:/fishc/test*.py\"</span> 即显示 C:\\fishc 文件夹下所有的名字以 test 开头的 Python 文件。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#关于 filetypes 参数的设置方法：</span></span><br><span class=\"line\">可以是包含文件掩码的字符串列表，例如：filetypes = [<span class=\"string\">\"*.txt\"</span>]</span><br><span class=\"line\">可以是字符串列表，列表的最后一项字符串是文件类型的描述，例如：filetypes = [<span class=\"string\">\"*.css\"</span>, [<span class=\"string\">\"*.htm\"</span>, <span class=\"string\">\"*.html\"</span>, <span class=\"string\">\"HTML files\"</span>]]</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>1.3 EgStore 存储过程</strong><br>GUI 编程中一个常见的场景就是要求用户设置一下参数，然后保存下来，以便下次用户使用你的程序的时候可以记住他的设置;为了实现对用户的设置进行存储和恢复这一过程，EasyGUI 提供了一个叫做 EgStore 的类;</p>\n<p>案例：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> easygui <span class=\"keyword\">import</span> EgStore</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 定义一个叫做“Settings”的类，继承自EgStore类</span></span><br><span class=\"line\"><span class=\"comment\">#可以在 settings 对象中通过设定值去实例化变量，从而很简单地记住设置，之后使用 settings.store() 方法在硬盘上持久化保存。</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Settings</span><span class=\"params\">(EgStore)</span>:</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, filename)</span>:</span>  <span class=\"comment\"># 需要指定文件名</span></span><br><span class=\"line\">        <span class=\"comment\"># 指定要记住的属性名称</span></span><br><span class=\"line\">        self.author = <span class=\"string\">\"\"</span></span><br><span class=\"line\">        self.book = <span class=\"string\">\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 必须执行下面两个语句</span></span><br><span class=\"line\">        self.filename = filename</span><br><span class=\"line\">        self.restore()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建“Settings”的实例化对象“settings”</span></span><br><span class=\"line\">settingsFilename = <span class=\"string\">\"settings.txt\"</span></span><br><span class=\"line\">settings = Settings(settingsFilename)</span><br><span class=\"line\"></span><br><span class=\"line\">author = <span class=\"string\">\"WeiyiGEEK\"</span></span><br><span class=\"line\">book = <span class=\"string\">\"零基础入门学习Pyhon\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将上面两个变量的值保存到“settings”对象中</span></span><br><span class=\"line\">settings.author = author</span><br><span class=\"line\">settings.book = book</span><br><span class=\"line\">settings.store()</span><br><span class=\"line\">print(<span class=\"string\">\"\\n保存完毕\\n\"</span>)</span><br></pre></td></tr></table></figure><br><br></p>\n<p><strong>1.4 捕获异常</strong><br>通过 exceptionbox() 函数提供了更好的方式去处理异常;使用 EasyGUI 编写 GUI 程序，有时候难免会产生异常,当然这取决于你如何运行你的应用程序，当你的应用程序崩溃的时候，堆栈追踪可能会被抛出，或者被写入到 stdout 标准输出函数中;</p>\n<p>当异常出现的时候，exceptionbox() 会将堆栈追踪显示在一个 codebox() 中，并且允许你做进一步的处理。<br>举个例子：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> easygui</span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">      print(<span class=\"string\">'I Love FishC.com!'</span>)</span><br><span class=\"line\">      int(<span class=\"string\">'FISHC'</span>) <span class=\"comment\"># 这里会产生异常</span></span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">      easygui.exceptionbox()  <span class=\"comment\">#产生错误进行处理</span></span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190416184027.png\" alt=\"WeiyiGeek.异常捕获\" title=\"\" class=\"\">\n                <p>WeiyiGeek.异常捕获</p>\n            </figure></p>\n<h5 id=\"2-EasyGUI使用案例\"><a href=\"#2-EasyGUI使用案例\" class=\"headerlink\" title=\"2. EasyGUI使用案例\"></a>2. EasyGUI使用案例</h5><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\">#案例：easygui模块的使用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> easygui <span class=\"keyword\">as</span> g</span><br><span class=\"line\"></span><br><span class=\"line\">nickname = input(<span class=\"string\">'请输入您的网名：'</span>)</span><br><span class=\"line\">love = input(<span class=\"string\">\"请输入您的爱好：\"</span>)</span><br><span class=\"line\">age = g.enterbox(<span class=\"string\">'请输入您的年龄：'</span>,<span class=\"string\">'信息输入'</span>)</span><br><span class=\"line\">res = g.msgbox(<span class=\"string\">'您的输入的个人信息是：'</span>+nickname+<span class=\"string\">', 爱好：'</span>+love+<span class=\"string\">', 年龄：'</span>+age,<span class=\"string\">'个人信息'</span>,<span class=\"string\">'确认无误'</span>)</span><br><span class=\"line\">print(<span class=\"string\">\"msgbox返回值：\"</span>,res)  <span class=\"comment\">#返回ok_button值  msgbox返回值： 确认无误</span></span><br><span class=\"line\">sex = g.buttonbox(<span class=\"string\">'选择您的性别：'</span>,<span class=\"string\">'信息录入'</span>,(<span class=\"string\">'男'</span>,<span class=\"string\">'女'</span>,<span class=\"string\">'none'</span>),default_choice=<span class=\"string\">'none'</span>)</span><br><span class=\"line\">city = g.multchoicebox(<span class=\"string\">'城市选择'</span>,<span class=\"string\">'信息录入'</span>,[<span class=\"string\">'北京'</span>,<span class=\"string\">'上海'</span>,<span class=\"string\">'广州'</span>,<span class=\"string\">'深圳'</span>,<span class=\"string\">'重庆'</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#选择建立文件的目录</span></span><br><span class=\"line\">savedir = g.diropenbox(msg=<span class=\"literal\">None</span>, title=<span class=\"string\">''</span>, default=<span class=\"literal\">None</span>)  </span><br><span class=\"line\">test = g.fileopenbox(msg=<span class=\"literal\">None</span>, title=<span class=\"literal\">None</span>, default=<span class=\"string\">'*'</span>, filetypes=<span class=\"literal\">None</span>, multiple=<span class=\"literal\">False</span>)</span><br><span class=\"line\">savefile = g.filesavebox(msg=<span class=\"literal\">None</span>, title=<span class=\"string\">'保存文件的目录'</span>, default=<span class=\"string\">''</span>, filetypes=<span class=\"literal\">None</span>) </span><br><span class=\"line\"><span class=\"comment\"># C:\\Users\\Administrator\\Documents </span></span><br><span class=\"line\"><span class=\"comment\"># C:\\Users\\Administrator\\Desktop\\Study-Promgram\\README.md </span></span><br><span class=\"line\"><span class=\"comment\"># C:\\Users\\Administrator\\Desktop\\Study-Promgram\\test.txt</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> open(savefile,<span class=\"string\">'w+'</span>,encoding=<span class=\"string\">'utf-8'</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    f.write(nickname+<span class=\"string\">'\\n'</span>+love+<span class=\"string\">'\\n'</span>+age+<span class=\"string\">'\\n'</span>+res+<span class=\"string\">'\\n'</span>+sex+<span class=\"string\">'\\n'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> city:</span><br><span class=\"line\">        f.write(x+<span class=\"string\">'\\n'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">g.textbox(nickname+<span class=\"string\">'\\n'</span>+love+<span class=\"string\">'\\n'</span>+age+<span class=\"string\">'\\n'</span>+res+<span class=\"string\">'\\n'</span>+sex+<span class=\"string\">'\\n'</span>,<span class=\"string\">'效率'</span>,<span class=\"string\">'value'</span>)</span><br><span class=\"line\">print(<span class=\"string\">\"模块测试完成！\"</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190416192656.png\" alt=\"WeiyiGeek.msgbox\" title=\"\" class=\"\">\n                <p>WeiyiGeek.msgbox</p>\n            </figure>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190416192800.png\" alt=\"WeiyiGeek.执行完成\" title=\"\" class=\"\">\n                <p>WeiyiGeek.执行完成</p>\n            </figure>","comments":true,"excerpt":"[TOC]<br>","categories":[{"name":"Development","path":"api/categories/Development.json"},{"name":"Programming","path":"api/categories/Programming.json"}],"tags":[{"name":"Python3","path":"api/tags/Python3.json"}]}