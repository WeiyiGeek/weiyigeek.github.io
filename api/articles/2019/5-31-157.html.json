{"title":"文件管理基础命令","slug":"系统运维/Linux/常用命令/文件管理类命令/文件管理基础命令","date":"2019-05-31T11:35:30.000Z","updated":"2023-01-31T02:29:09.172Z","url":"2019/5-31-157.html","path":"api/articles/2019/5-31-157.html.json","covers":["https://img.weiyigeek.top/2019/20190531150615.png","https://img.weiyigeek.top/2019/20190531155342.png","https://img.weiyigeek.top/2019/20190531161129.png"],"content":"<p>[TOC]<br><a id=\"more\"></a></p>\n<h4 id=\"0x00-快速入门\"><a href=\"#0x00-快速入门\" class=\"headerlink\" title=\"0x00 快速入门\"></a>0x00 快速入门</h4><p>命令提示符格式:<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//示例：</span></span><br><span class=\"line\">[root@localhost ~]#</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//说明:</span></span><br><span class=\"line\">root：  当前登录用户   root是Linux中管理员用户</span><br><span class=\"line\">localhost：主机名</span><br><span class=\"line\"> ~        当前所在目录（家目录）</span><br><span class=\"line\"> #       超级用户的提示符</span><br><span class=\"line\"> $       普通用户的提示符是</span><br></pre></td></tr></table></figure></p>\n<p>命令与文件补全:在Bash（sh）中命令与文件补全是非常方便与常用的功能我们只要在输入命令或文件时，按Tab键就会自动进行补全<br>Linux命令书写规范：一条完整的linux基本由两部分组成，命令和参数，命令和参数之间用空格隔开，并用”-“或者”–“连接</p>\n<p><br></p>\n<p>文件与目录的类型/权限：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#文件与目录的类型</span></span><br><span class=\"line\">drwxr-xr-x ：d 代表目录 </span><br><span class=\"line\">-rwxr-xr-x ：- 代表文件 </span><br><span class=\"line\">lrwxrwxrwx ：l 软链接文件</span><br><span class=\"line\">crw-rw---- ：c 字符设备</span><br><span class=\"line\">brw-rw---- ：b 块设备</span><br><span class=\"line\">srw-rw-rw-：</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#权限</span></span><br><span class=\"line\">drwxr-xr-x. <span class=\"comment\">#权限10位</span></span><br><span class=\"line\"><span class=\"comment\">#r表示read，w表示write，x表示execute，-表示无权限</span></span><br><span class=\"line\">rw-  r—x   r—x   <span class=\"comment\">#没三位一组</span></span><br><span class=\"line\">rw- 代表所有者    r--代表所属组    r--代表其他人</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h4 id=\"dir-命令\"><a href=\"#dir-命令\" class=\"headerlink\" title=\"dir 命令\"></a>dir 命令</h4><p>用法与参数：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$dir</span> [选项][文件或目录] <span class=\"comment\">#文件查看 与 ls差不多</span></span><br><span class=\"line\">-a 显示所有文件，包括隐藏文件</span><br><span class=\"line\">-l 显示详细信息</span><br><span class=\"line\">-d 查看目录属性</span><br><span class=\"line\">-h 人性化显示文件大小</span><br><span class=\"line\">-i 显示inode</span><br></pre></td></tr></table></figure></p>\n<p>示例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1：显示所有的文件并人性化显示大小与inode</span></span><br><span class=\"line\">[root@izwz9biz2m4sd3bb3k38pgz ~]<span class=\"variable\">$dir</span> -lhi</span><br><span class=\"line\">total 5.6M</span><br><span class=\"line\">139002 -rwxr-xr-x 1 root root  994 May 13 22:40 dingding.py</span><br><span class=\"line\">139000 -rw-r--r-- 1 root root 5.6M May  6  2018 dingding.sh</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h4 id=\"ls-命令-查看文件和目录\"><a href=\"#ls-命令-查看文件和目录\" class=\"headerlink\" title=\"ls 命令 - 查看文件和目录\"></a>ls 命令 - 查看文件和目录</h4><p>描述:显示目录和文件list dirctory<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls [选项][文件或目录]</span><br><span class=\"line\"><span class=\"comment\">#[选项]</span></span><br><span class=\"line\">-a, --all 同时显示出以.开头的内容,包括.目录(当前目录)和..目录(父目录).</span><br><span class=\"line\">-A, --almost-all 同时显示出以.开头的内容,不包括.目录和..目录.</span><br><span class=\"line\">     --author 在使用-l参数时同时显示出文件创建者.</span><br><span class=\"line\">-B, --ignore-backups 不显示以~结尾的文件(备份文件).</span><br><span class=\"line\">-c， (默认)按最近修改时间来排列显示条目,新的在前面.-lt按最近修改时间排列条目,并显示修改时间.-l显示修改时间,但按字母顺序排列.</span><br><span class=\"line\">-C ，列列的列出条目.</span><br><span class=\"line\">      --color[=WHEN] 设置是否用颜色区分条目类别,WHEN可以为never,always和auto.never和always都很明了,auto是指标准输出和terminal绑定时才显示颜色.颜色由环境变量LS_COLORS决定.</span><br><span class=\"line\">-d, --directory 之列出目录条目,且不列出快捷方式.</span><br><span class=\"line\">-f 不排序列出,启用-aU,同时禁用-ls和--color.</span><br><span class=\"line\">-F 文件类型（File <span class=\"built_in\">type</span>）</span><br><span class=\"line\">-g 类似-l,但不显示除所有者.</span><br><span class=\"line\">-G, --no-group 在-l中不列出组名.</span><br><span class=\"line\">-h, --human-readable 在-l中以更易理解的方式列出文件大小. (e.g., 1K 20M)</span><br><span class=\"line\">     --si 同上,但倍数是1000而不是1024</span><br><span class=\"line\">-i, --inode 显示出每个条目的index number.</span><br><span class=\"line\">-I（i的大写）, --ignore=PATTERN 不列出符合shell样式的条目.（不显示排除的文件）</span><br><span class=\"line\">    --hide=PATTERN 但是会被-a或-A覆盖.</span><br><span class=\"line\">-l 以详细列表的模式展示信息.</span><br><span class=\"line\">-m 所有项目用逗号分隔显示.</span><br><span class=\"line\">-n, --numeric-uid-gid 类似-l,同时列出用户和分组信息.</span><br><span class=\"line\">-o 类似-l,但不列出组信息.</span><br><span class=\"line\">-p, --indicator-style=slash 在目录后面加上/</span><br><span class=\"line\">-r, --reverse 反向排序显示.</span><br><span class=\"line\">-R, --recursive 列出所有子目录.</span><br><span class=\"line\">-s, --size 显示出每个文件被分配的空间.</span><br><span class=\"line\">-S 按大小来排序文件.</span><br><span class=\"line\">    --sort=WORD 根据WORD来排序,可以为none,extension,size,time和version.</span><br><span class=\"line\">    --time=WORD 在-l里,根据WORD来替代修改时间,可以为atime,access,use,ctime,status.</span><br><span class=\"line\">-t 根据修改时间排序,新的在前面.</span><br><span class=\"line\">-U 不排序,根据系统原有顺序排列.</span><br><span class=\"line\">-v 根据版本号排列.</span><br><span class=\"line\">-x 按行的顺序排列.</span><br><span class=\"line\">-X 根据扩展名排序.</span><br><span class=\"line\">-1 一行只显示一个项目.</span><br><span class=\"line\">--full-time : 以完整时间模式进行输入</span><br><span class=\"line\">--time=&#123;atime,ctime&#125; : 输出访问时间或改变权限属性时间(ctime)而非内容更改的时间(mtime)</span><br><span class=\"line\">--color=&#123;never,always,auto&#125; : 绝不/显示颜色/自行决定 </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#返回值</span></span><br><span class=\"line\">0 正常.</span><br><span class=\"line\">1 小问题(e.g., 不能进入子目录).</span><br><span class=\"line\">2 严重问题(e.g., 不能进入命令行参数显示的目录).</span><br></pre></td></tr></table></figure></p>\n<p>示例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#0. 不显示. 与 .. 目录</span></span><br><span class=\"line\"><span class=\"variable\">$ls</span> -A</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#1.排除显示除dingding.sh之外得文件与目录</span></span><br><span class=\"line\"><span class=\"variable\">$ls</span> -I dingding.sh</span><br><span class=\"line\">dingding.py  quartz_uninstall.sh  startWechat.sh  uninstall.sh</span><br><span class=\"line\"><span class=\"variable\">$ls</span> -I *.yml  <span class=\"comment\">#不加单双引号将匹配显示同配置</span></span><br><span class=\"line\">handlers.yml  listen.yml  notify.yml  tag.yml  test.yml  version.yml</span><br><span class=\"line\"><span class=\"variable\">$ls</span> -I <span class=\"string\">\"*.yml\"</span>  <span class=\"comment\">#即反向匹配显示</span></span><br><span class=\"line\">10.10.107.222.txt  listen.yml.save  notify.yml.save  test.txt</span><br><span class=\"line\"><span class=\"variable\">$ls</span> -I <span class=\"string\">\"*5\"</span> -I <span class=\"string\">\"*0\"</span> |xargs rm <span class=\"comment\"># 将要删除的文件作为参数通过xargs传给rm命令</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#2.人性化显示所有文件以及文件inode</span></span><br><span class=\"line\"><span class=\"variable\">$ls</span> -ialh</span><br><span class=\"line\">131087 -rw-------   1 root root  16K May 31 12:32 .bash_history</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#3.列出文件的PID</span></span><br><span class=\"line\"><span class=\"variable\">$ls</span> -n</span><br><span class=\"line\">total 5692</span><br><span class=\"line\">-rwxr-xr-x 1 0 0     994 May 13 22:40 dingding.py</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4.按照扩展名显示文件</span></span><br><span class=\"line\"><span class=\"variable\">$ls</span> -Xl</span><br><span class=\"line\">drwxr-xr-x 2 root root    4096 Mar  1 10:35 pythonDemo</span><br><span class=\"line\">drwxr-xr-x 2 root root    4096 May 31 14:44 www</span><br><span class=\"line\">-rwxr-xr-x 1 root root     994 May 13 22:40 dingding.py</span><br><span class=\"line\">-rw-r--r-- 1 root root 5803476 May  6  2018 dingding.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#5.排序</span></span><br><span class=\"line\">ls -1h --sort=size   <span class=\"comment\">#按照大小排序</span></span><br><span class=\"line\">ls -lhs  </span><br><span class=\"line\">ll -Sh</span><br><span class=\"line\">ls -1h --sort=time   <span class=\"comment\">#按照时间排序</span></span><br><span class=\"line\">ls -lht</span><br><span class=\"line\">ls -laht </span><br><span class=\"line\">ls -lht -r           <span class=\"comment\">#按照时间反向排序</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#6.不显示所有者/组和把权限转换成数字(uid/guid号)</span></span><br><span class=\"line\"><span class=\"variable\">$ls</span> -lG</span><br><span class=\"line\"><span class=\"variable\">$ls</span> -ln</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#7.显示文件和目录得安全性上下文（Selinux）</span></span><br><span class=\"line\">ls -alhZd /root/ <span class=\"comment\">#ll -Zd .</span></span><br><span class=\"line\">dr-xr-x---. root root system_u:object_r:admin_home_t:s0 /root/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#8.显示完整的文件的修改时间</span></span><br><span class=\"line\"><span class=\"variable\">$ls</span> -alh --full-time /etc/group</span><br><span class=\"line\">-rw-r--r-- 1 root root 735 2020-05-09 17:10:25.795053900 +0800 /etc/group</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 9.查看修改时间/访问时间/状态修改时间</span></span><br><span class=\"line\">❯ ls -al core-js-banners; ls -al --time=atime core-js-banners; ls -al --time=ctime core-js-banners</span><br><span class=\"line\">-rw-r--r-- 1 root root 1 Oct 18 12:55 core-js-banners  <span class=\"comment\"># 修改时间</span></span><br><span class=\"line\">-rw-r--r-- 1 root root 1 Oct 10 09:48 core-js-banners  <span class=\"comment\"># 访问时间</span></span><br><span class=\"line\">-rw-r--r-- 1 root root 1 Oct 18 12:55 core-js-banners  <span class=\"comment\"># 权限属性时间</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 10.统计文件夹下文件个数包括子文件 和 统计文件夹下目录个数，包括子目录</span></span><br><span class=\"line\">ls -lR | grep <span class=\"string\">\"^-\"</span>| wc -l</span><br><span class=\"line\">ls -lR | grep <span class=\"string\">\"^d\"</span>| wc -l</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 10.查看目录下的可执行文件。</span></span><br><span class=\"line\"><span class=\"comment\"># 符号包括: / 表明是一个目录； @ 表明是到其它文件的符号链接； * 表明是一个可执行文件</span></span><br><span class=\"line\">ls -F | grep <span class=\"string\">\"/$\"</span></span><br><span class=\"line\">ls -F | grep <span class=\"string\">\"@$\"</span></span><br><span class=\"line\">ls -F | grep <span class=\"string\">\"*$\"</span></span><br><span class=\"line\">  <span class=\"comment\"># mkreleasehdr.sh*</span></span><br><span class=\"line\">  <span class=\"comment\"># redis-benchmark*</span></span><br><span class=\"line\">  <span class=\"comment\"># redis-check-aof*</span></span><br><span class=\"line\">  <span class=\"comment\"># redis-check-rdb*</span></span><br><span class=\"line\">  <span class=\"comment\"># redis-cli*</span></span><br><span class=\"line\">  <span class=\"comment\"># redis-sentinel*</span></span><br><span class=\"line\">  <span class=\"comment\"># redis-server*</span></span><br><span class=\"line\">  <span class=\"comment\"># redis-trib.rb*</span></span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190531150615.png\" alt=\"WeiyiGeek.ls\" title=\"\" class=\"\">\n                <p>WeiyiGeek.ls</p>\n            </figure></p>\n<p><strong>补充说明：</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#为例来说明：</span></span><br><span class=\"line\">-rw-r--r--[10个字符] 1[硬连接] root root 5803476 May  6  2018 dingding.sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第一列为文件种类及权限：其中第一个字符表示文件的种类</span></span><br><span class=\"line\">即，-表示是普通文件，d表示为目录，c表示为字符设备，b表示为块设备，来表示连接文件</span><br><span class=\"line\">后面的九位：每3个字符为一块表示了此文件（目录）的属主、属组及others的权限</span><br><span class=\"line\">其中 r表示<span class=\"built_in\">read</span>，w表示write，x表示execute，-表示无权限</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#2.第二列表示硬链接个数：</span></span><br><span class=\"line\">文件每增加一个硬链接，数字会增加1，默认从1开始</span><br><span class=\"line\">1表示无硬链接文件，</span><br><span class=\"line\">2表示他是目录,注意目录是不能做硬链接</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#3.第三列为文件（目录）的属主(user)</span></span><br><span class=\"line\"><span class=\"comment\">#4.第四列为文件（目录）的属组(group)</span></span><br><span class=\"line\"><span class=\"comment\">#5.第五列为文件（目录）的大小，单为为字节(size)</span></span><br><span class=\"line\"><span class=\"comment\">#6.第六列为文件（目录）创建时间或最后一次访问时间</span></span><br><span class=\"line\">顺序为月、日、时间,如果该时间离现在过久则直接显示年份</span><br><span class=\"line\"></span><br><span class=\"line\">注意：对目录如果没有w权限，即使里面的文件有写权限，也不能对文件进行移动，重命名操作,此时需要给目录加上w权限</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h4 id=\"cd-命令-目录切换\"><a href=\"#cd-命令-目录切换\" class=\"headerlink\" title=\"cd 命令 - 目录切换\"></a>cd 命令 - 目录切换</h4><p>描述：切换目录命令(change Directory)</p>\n<p>常用命令：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 常规</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /目录</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 五种特殊的目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~  或者 <span class=\"built_in\">cd</span> /root/ 回到家目录</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~weiyigeek 直接到weiyigeek的家目录</span><br><span class=\"line\"><span class=\"built_in\">cd</span> -  回到上次所在目录</span><br><span class=\"line\"><span class=\"built_in\">cd</span> .. 回到上一级目录</span><br><span class=\"line\"><span class=\"built_in\">cd</span> .  进入当前目录</span><br></pre></td></tr></table></figure></p>\n<p>基础示例:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">❯ useradd -m weiyi</span><br><span class=\"line\">❯ <span class=\"built_in\">cd</span> ~weiyi</span><br><span class=\"line\">/home/weiyi</span><br></pre></td></tr></table></figure></p>\n<p>Tips:快捷键说明 ctrl+L 清屏，按两下tab键目录/命令补全；</p>\n<p><br></p>\n<h4 id=\"pwd-命令-显示当前目录\"><a href=\"#pwd-命令-显示当前目录\" class=\"headerlink\" title=\"pwd 命令 - 显示当前目录\"></a>pwd 命令 - 显示当前目录</h4><p>描述：获取当前目录位置即<code>Print Working Directory</code>;</p>\n<p>基础语法与重要参数:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">pwd</span> [-P]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 参数</span></span><br><span class=\"line\">-P ：显示出当前路径而非使用连接(Link)路径</span><br></pre></td></tr></table></figure></p>\n<p>实际示例:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.获取当前目录位置</span></span><br><span class=\"line\">[root@localhost home]<span class=\"variable\">$pwd</span></span><br><span class=\"line\">/home</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.-P参数异同显示实际的工作目录而非链接存在的目录</span></span><br><span class=\"line\">❯ ls -ld /var/lock</span><br><span class=\"line\">lrwxrwxrwx 1 root root 9 Apr 23 14:40 /var/lock -&gt; /run/lock</span><br><span class=\"line\">❯ <span class=\"built_in\">cd</span>  /var/lock</span><br><span class=\"line\">❯ <span class=\"built_in\">pwd</span></span><br><span class=\"line\">/var/loc    <span class=\"comment\"># 对比点</span></span><br><span class=\"line\"></span><br><span class=\"line\">❯ <span class=\"built_in\">pwd</span> -P   </span><br><span class=\"line\">/run/lock   <span class=\"comment\"># 对比点</span></span><br></pre></td></tr></table></figure></p>\n<p>Tips: 两种路径表示;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">绝对路径: /root/directory</span><br><span class=\"line\">相对路径: ~/directory</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h4 id=\"mkdir-命令-新建立目录\"><a href=\"#mkdir-命令-新建立目录\" class=\"headerlink\" title=\"mkdir 命令 - 新建立目录\"></a>mkdir 命令 - 新建立目录</h4><p>描述：创建目录命令(Make Directory)</p>\n<p>基础语法与重要参数:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -vp 目录名 </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 参数</span></span><br><span class=\"line\">-p 用来递归创建</span><br><span class=\"line\">-m 配置创建目录时候的权限而不需要看默认权限(<span class=\"built_in\">umask</span>)</span><br><span class=\"line\">-v 显示建立过程</span><br></pre></td></tr></table></figure></p>\n<p>简单示例:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1.递归建立多个目录</span></span><br><span class=\"line\">mkdir -vp /tmp/&#123;oa,bbs,video&#125;  <span class=\"comment\">#采用数组建立个目录</span></span><br><span class=\"line\">mkdir: created directory ‘/tmp/oa’</span><br><span class=\"line\">mkdir: created directory ‘/tmp/bbs’</span><br><span class=\"line\">mkdir: created directory ‘/tmp/video’</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2.建立父目录然后再每个父目录中建立子目录</span></span><br><span class=\"line\">mkdir -vp /tmp/&#123;a,b,c&#125;/&#123;test1,test2&#125;</span><br><span class=\"line\"><span class=\"comment\"># mkdir: created directory '/tmp/a'</span></span><br><span class=\"line\"><span class=\"comment\"># mkdir: created directory '/tmp/a/test1'</span></span><br><span class=\"line\"><span class=\"comment\"># mkdir: created directory '/tmp/a/test2'</span></span><br><span class=\"line\"><span class=\"comment\"># mkdir: created directory '/tmp/b'</span></span><br><span class=\"line\"><span class=\"comment\"># mkdir: created directory '/tmp/b/test1'</span></span><br><span class=\"line\"><span class=\"comment\"># mkdir: created directory '/tmp/b/test2'</span></span><br><span class=\"line\"><span class=\"comment\"># mkdir: created directory '/tmp/c'</span></span><br><span class=\"line\"><span class=\"comment\"># mkdir: created directory '/tmp/c/test1'</span></span><br><span class=\"line\"><span class=\"comment\"># mkdir: created directory '/tmp/c/test2'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例3.创建目录师权限指定</span></span><br><span class=\"line\">❯ mkdir -m 711 weiyigeek  <span class=\"comment\"># 新建权限伟rwx--x--x的目录</span></span><br><span class=\"line\">❯ ls -ld /tmp/weiyigeek</span><br><span class=\"line\">drwx--x--x 1 root root 4096 Oct 18 12:31 /tmp/weiyigeek</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h4 id=\"rm-命令\"><a href=\"#rm-命令\" class=\"headerlink\" title=\"rm 命令\"></a>rm 命令</h4><p>描述：删除空目录（Remove Empty Directory），删除非空目录或文件;<br>TIPS: 慎用 rm -rf / 会删掉根目录下的所有文件;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#基础语法</span></span><br><span class=\"line\">rmdir【目录名】</span><br><span class=\"line\">rm [选项]【目录/文件】</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#rm 参数</span></span><br><span class=\"line\">-i 删除前进行交互式提示</span><br><span class=\"line\">-r 递归删除文件夹，包括空文件夹</span><br><span class=\"line\">-f 强制无条件删除只读文件</span><br></pre></td></tr></table></figure></p>\n<p>示例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1.</span></span><br><span class=\"line\">rm -rf / : 强制无条件删除root目录下所有内容。</span><br><span class=\"line\">rm -rf * : 强制无条件删除当前目录下所有内容。</span><br><span class=\"line\">rm -rf . : 强制无条件删除当前文件夹和子文件夹</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2.删除排除文件以外的文件或者目录</span></span><br><span class=\"line\">rm `ls -I demo.config`</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例3.在rm命令前加上反斜杠可以忽略掉alias的指定参数则的删除此目录而不需要询问;</span></span><br><span class=\"line\">\\rm -r /tmp/demo.txt</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h4 id=\"rmdir-命令-删除一个空目录\"><a href=\"#rmdir-命令-删除一个空目录\" class=\"headerlink\" title=\"rmdir 命令 -  删除一个空目录\"></a>rmdir 命令 -  删除一个空目录</h4><p>描述: 删除空目录（empty directory）并且该目录中不能存在其他的目录或者文件。</p>\n<p>语法参数:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-p : 连同上级目录一起删除</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例0：递归删除所有空目录</span></span><br><span class=\"line\">rmdir -p *</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<h4 id=\"cp-命令-文件目录复制\"><a href=\"#cp-命令-文件目录复制\" class=\"headerlink\" title=\"cp 命令 - 文件目录复制\"></a>cp 命令 - 文件目录复制</h4><p>描述：拷贝文件和目录是每一个操作系统的基本指令。备份行为基本上是创建文件和目录的副本。在Linux系统下我们可以用cp命令来实现，但在进行复制的时候需要关注以下几点:</p>\n<ul>\n<li>1.是否需要完整保留来源文件的信息。</li>\n<li>2.源文件是否为软连接文件(symbolic link file)</li>\n<li>3.源文件是否为特殊文件例如FIFO / socket等</li>\n<li>4.源文件是否为目录</li>\n</ul>\n<p><strong>语法参数:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp 【选项】【原文件/目录】【目标目录】</span><br><span class=\"line\">cp [-adfilprsu] source1 source2 destination</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#参数：</span></span><br><span class=\"line\">-a 相当于-pdr选项保证和原文件属性一模一样(会保留原文件或目录的属性),但是inode号是变化的</span><br><span class=\"line\">-r 递归持续复制(目录/子目录/文件等)</span><br><span class=\"line\">-p 连带文件属性复制</span><br><span class=\"line\">-u 差异复制(只会复制新增或者已经变化的文件，相同属性并存在的文件不会再从新复制)，常用在备份里面</span><br><span class=\"line\">-f 若目的地已经有相同档名的档案存在，则在复制前先予以删除再行复制</span><br><span class=\"line\">-i 若目标文件已经存在在覆盖时会先询问操作的进行(常用)。</span><br><span class=\"line\">-l 创建快捷方式来链接到文件(注意硬链接不能用来创建目录,并且拥有相同得inode号)</span><br><span class=\"line\">-d 若原文件是链接文件，则复制链接属性（不包括属性）</span><br><span class=\"line\">-s 复制成为链接符号文件(symbolic link) 即快捷方式文件( 软链接)</span><br><span class=\"line\">-u 若dest比<span class=\"built_in\">source</span>旧才更新destination</span><br><span class=\"line\">-P 只拷贝符号链接文件(不随符号链接拷贝原文件)</span><br><span class=\"line\">-L 随符号链接拷贝原文件(与上面的 -P 选项 相反)</span><br><span class=\"line\">-v 显示文件拷贝过程</span><br><span class=\"line\">--backup 每一个现有的目标文件做一个备份,可选参数如下。</span><br><span class=\"line\">  <span class=\"comment\"># none, off:从不备份(即使给出 --backup)</span></span><br><span class=\"line\">  <span class=\"comment\"># numbered, t:用编号备份</span></span><br><span class=\"line\">  <span class=\"comment\"># existing, nil :如果编号备份存在则使用编号备份，否者用简易备份[译注：也就是用波浪号]</span></span><br><span class=\"line\">  <span class=\"comment\"># simple, never :总是使用简易备份</span></span><br><span class=\"line\">--attributes-only    只会拷贝文件名及其属性，不会拷贝任何数据</span><br><span class=\"line\">--remove-destination 如果 cp 命令在目标目录下发现同名文件， cp 命令会先删除目标文件，然后再拷贝一份新的。</span><br></pre></td></tr></table></figure></p>\n<p><strong>基础示例:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1.基础示例使用,将一个文件或者目录从一个位置到另一个位置</span></span><br><span class=\"line\">cp -a weiyi /Users/WeiyiGeek/Documents       <span class=\"comment\"># 复制weiyi目录到文稿目录下(与上面效果一样带有属性)</span></span><br><span class=\"line\">cp -rpd weiyi/ /Users/WeiyiGeek/Documents    <span class=\"comment\"># 复制weiyi目录下的目录到文稿目录下</span></span><br><span class=\"line\">cp -r directory_1 /home/pungki/office        <span class=\"comment\"># -r或-R 选项表明递归操作(注意的一件事你需要移除在目录名尾部的斜杠,否则你会收到类似的错误信息cp: omitting directory‘directory_1/’)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2.复制的id号是变化的但属性一致</span></span><br><span class=\"line\"><span class=\"variable\">$cp</span> -a 1.txt 2.txt &amp;&amp; ls -i</span><br><span class=\"line\">393342 -rw-r--r-- 1 root root 0 May 31 15:31 1.txt</span><br><span class=\"line\">393343 -rw-r--r-- 1 root root 0 May 31 15:31 2.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例3.简化cp直接将复制为指定后缀的文件</span></span><br><span class=\"line\"><span class=\"variable\">$cp</span> 1.txt&#123;,.bak&#125; &amp;&amp; ls</span><br><span class=\"line\">1.txt  1.txt.bak</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例4.强制覆盖不提示重写</span></span><br><span class=\"line\"><span class=\"variable\">$cp</span> -fn 1.txt demo/1.txt </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例5.交互模式下会询问是否覆盖目标目录下的文件。使用 -i 选项启用交互模式。</span></span><br><span class=\"line\">cp -ir directory_1/ /home/pungki/office/</span><br><span class=\"line\"><span class=\"variable\">$yes</span> | cp /etc/fstab /etc/fstab_bak    <span class=\"comment\"># cp：是否覆盖\"/etc/fstab_bak\"？ </span></span><br><span class=\"line\"><span class=\"variable\">$yes</span> | cp -i /etc/fstab /etc/fstab_bak <span class=\"comment\"># cp：是否覆盖\"/etc/fstab_bak\"？ </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例6.若~/.bashrc 比 /tmp/bashrc 新才将其复制过来覆盖/tmp/bashrc</span></span><br><span class=\"line\">cp -u ~/.bashrc /tmp/bashrc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例7.-d 参数的差异对比bashrc_link -&gt; bashrc以及创建文件的硬链接而不是拷贝它们</span></span><br><span class=\"line\">cp bashrc_link bashrc_link_1            <span class=\"comment\"># 复制链接文件的实际文件(按照原文件属性进行拷贝)</span></span><br><span class=\"line\">cp -d bashrc_link bashrc_link_2         <span class=\"comment\"># 复制链接文件 </span></span><br><span class=\"line\">cp -l file_4.txt /home/pungki/office    <span class=\"comment\"># 创建“快捷方式”或者链接到文件而不是拷贝它们(拥有与原目录文件相同得inode值)</span></span><br><span class=\"line\">cp -s /home/pungki/office file_4.txt    <span class=\"comment\"># 创建符号链接只能在当前目录下进行(不通得inode值)</span></span><br><span class=\"line\">cp -P file_6.txt ./movie                <span class=\"comment\"># 对符号链接使用 cp 命令它会照原样拷贝它自身</span></span><br><span class=\"line\">cp -L file_6.txt ./movie                <span class=\"comment\"># 随符号链接拷贝原文件</span></span><br><span class=\"line\">cp -v *.txt /home/pungki/office         <span class=\"comment\"># 显示拷贝作业过程</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例8.将主文件夹.bashrc及,bash_history 复制到/tmp下(同时拷贝多个文件需要将多个文件用空格隔开)</span></span><br><span class=\"line\">cp ~/.bashrc ~/.bash_history /tmp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例9.当原文件较目标文件新时拷贝</span></span><br><span class=\"line\">$ cp -vu *.txt /home/pungki/office</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例10.当目标目录已经含有同名文件，默认情况下 cp 命令会覆盖目标目录下的同名文件使用 --backup 选项，cp 命令会为每一个现有的目标文件做一个备份。../office 相对于 /home/pungki/office 。</span></span><br><span class=\"line\">$ cp --backup=simple -v *.txt ../office <span class=\"comment\"># --backup=simple 选项会创建一个在文件名末尾用波浪符标记(~)的备份文件</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例11.只拷贝文件属性而不会拷贝文件数据</span></span><br><span class=\"line\">$ cp --attributes-only file_6.txt -v ../office</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例12.用了 -f 选项会强制进行拷贝操作。如果目标文件不能打开，可以用 -f 尝试一下。</span></span><br><span class=\"line\">$ cp -f *.txt -v ../office</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例13.在拷贝之前先删除目标(如果 cp 命令在目标目录下发现同名文件cp 命令会先删除目标文件然后再拷贝一份新的)</span></span><br><span class=\"line\">cp --remove-destination *.txt -v ../office</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>Tips: 我们平常在Linux中使用 cp 命令时会发现将一个目录中文件复制到另一个目录具有相同文件名称时,即使添加了 -rf 参数强制覆盖复制时,系统仍然会提示让你一个个的手工输入 y 确认复制,令人不胜其烦那么这是由于什么原因引起的?</p>\n<ul>\n<li>原因 : alias 命令中存在cp命令的别名导致的<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 注：我们平时使用 cp 命令虽然没有添加任何参数 ,但系统默认会在我们使用 cp 命令时自动添加 -i 参数(即交互的缩写方式)</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> cp=<span class=\"string\">'cp -i'</span></span><br></pre></td></tr></table></figure></li>\n<li>解决方案：去掉 cp 命令的别名此时使用 <code>cp -rf</code> 复制文件时,就不会要求确认啦.<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">unalias</span> cp</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br></p>\n<h4 id=\"mv-命令\"><a href=\"#mv-命令\" class=\"headerlink\" title=\"mv 命令\"></a>mv 命令</h4><p>描述：剪切或改名命令(move)<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv 【原文件或目录】【目标目录】  <span class=\"comment\">#在同一目录下就是改名</span></span><br><span class=\"line\">mv 指定的文件夹/文件 /dev/null</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 参数</span></span><br><span class=\"line\">-f：强制移动，不会出现警告信息</span><br><span class=\"line\">-i：互动模式，移动之前询问你</span><br><span class=\"line\">-u：目标存在的时候，只有<span class=\"built_in\">source</span>比较新才会更新</span><br><span class=\"line\">-t: --target-directory=DIRECTORY  <span class=\"comment\">#将所有源参数移动到目录中</span></span><br></pre></td></tr></table></figure></p>\n<p>基础实例:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1：在linux下/dev/null或null是一种特殊的文件，它们会把写入自身的数据全部丢弃，再返回操作成功的消息。</span></span><br><span class=\"line\">mv 1.txt /dev/null <span class=\"comment\">#这个mv命令会把指定的文件夹移动到/dev/null。</span></span><br><span class=\"line\">mv /home/user/* /dev/null <span class=\"comment\">#上面的命令会把/home/user/下面所有的内容，全部移动到/dev/null这。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2：简单haul语法(备份常用)</span></span><br><span class=\"line\"><span class=\"variable\">$mv</span> pam_unix.so&#123;,.bak&#125;   <span class=\"comment\">#直接变成pam_unix.so.bak</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例3.将源目录中批量移动到指定目录中</span></span><br><span class=\"line\">tmp$ ls www/</span><br><span class=\"line\"><span class=\"comment\"># 10.txt  1.txt  &#123;1..txt&#125;  2.txt  3.txt  4.txt  5.txt  6.txt  7.txt  8.txt  9.txt</span></span><br><span class=\"line\">tmp$ mv -t backup/ www/*</span><br><span class=\"line\">tmp$ ls backup/</span><br><span class=\"line\">10.txt  1.txt  &#123;1..txt&#125;  2.txt  3.txt  4.txt  5.txt  6.txt  7.txt  8.txt  9.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例4.如果有多个源文件或者目录则最后一个目标文件一定是目录</span></span><br><span class=\"line\">mv bashrc1 bashrc2 mvtest2</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h4 id=\"touch-命令-修改文件实际或者创建新的文件\"><a href=\"#touch-命令-修改文件实际或者创建新的文件\" class=\"headerlink\" title=\"touch 命令 - 修改文件实际或者创建新的文件\"></a>touch 命令 - 修改文件实际或者创建新的文件</h4><p>描述：touch命令不常用，一般在使用make的时候可能会用来修改文件时间戳或者新建一个不存在的文件;</p>\n<p>其三个主要的变动时间:</p>\n<ul>\n<li>1.modification time : 即mtime当文件内容数据发生改变时候将会被更新; 注意此处指的是文件的内容而不是文件的属性权限;</li>\n<li>2.status time : 即ctime当文件的状态发生改变时候将会被更新; 比如权限和属性被更改;</li>\n<li>3.access time : 即atime当文件的内容被读取时候将会被更新; 比如使用cat读取/etc/man.config便会更新;<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">❯ ls -lh /etc/manpath.config</span><br><span class=\"line\">-rw-r--r-- 1 root root 5.1K Feb 26  2020 /etc/manpath.config   <span class=\"comment\"># mtime </span></span><br><span class=\"line\"></span><br><span class=\"line\">❯ ls -lh --time=atime /etc/manpath.config</span><br><span class=\"line\">-rw-r--r-- 1 root root 5.1K Apr 23 14:41 /etc/manpath.config   <span class=\"comment\"># atime </span></span><br><span class=\"line\">                               </span><br><span class=\"line\">❯ ls -lh --time=ctime /etc/manpath.config</span><br><span class=\"line\">-rw-r--r-- 1 root root 5.1K May  9 16:29 /etc/manpath.config   <span class=\"comment\"># ctime</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>语法参数:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用法：touch [选项] 文件 </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 参数</span></span><br><span class=\"line\">-a 或--time=atime或--time=access或--time=use 　只更改存取时间。</span><br><span class=\"line\">-c 或--no-create 　不建立任何文档。</span><br><span class=\"line\">-d 使用指定的日期时间，而非现在的时间。</span><br><span class=\"line\">-f 此参数将忽略不予处理，仅负责解决BSD版本touch指令的兼容性问题。</span><br><span class=\"line\">-m 或--time=mtime或--time=modify 　只更改变动时间。</span><br><span class=\"line\">-r 把指定文档或目录的日期时间，统统设成和参考文档或目录的日期时间相同。</span><br><span class=\"line\">-t 使用指定的日期时间，而非现在的时间 use [[CC]YY]MMDDhhmm[.ss]</span><br></pre></td></tr></table></figure></p>\n<p>实际案例:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 示例1.建立文件与指定时间修改文件</span></span><br><span class=\"line\"><span class=\"variable\">$touch</span> create.txt</span><br><span class=\"line\"><span class=\"variable\">$touch</span> -t 201908031122 1.txt</span><br><span class=\"line\"><span class=\"variable\">$ls</span> -lh</span><br><span class=\"line\">-rw-r--r-- 1 root root 0 Aug  3  2019 1.txt</span><br><span class=\"line\">-rw-r--r-- 1 root root 0 May 31 15:48 create.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例2.采用&#123;&#125;符号批量创建文件</span></span><br><span class=\"line\">touch hyml-&#123;1..10&#125;.html</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例3.时间调整将某个文件的认证修改为目前日期(mtime和atime)</span></span><br><span class=\"line\">❯ <span class=\"built_in\">echo</span> &gt; hello.txt</span><br><span class=\"line\">❯ touch -d <span class=\"string\">'2 day ago'</span> hello.txt</span><br><span class=\"line\">❯ ls -alh hello.txt</span><br><span class=\"line\">-rw-r--r-- 1 root root 1 Oct 16 17:37 hello.txt</span><br><span class=\"line\">❯ ls -ailh hello.txt; ls -alhi --time=atime hello.txt;ls -ailh --time=ctime hello.txt</span><br><span class=\"line\">13229323905543610 -rw-r--r-- 1 root root 1 Oct 16 17:37 hello.txt  <span class=\"comment\"># 修改</span></span><br><span class=\"line\">13229323905543610 -rw-r--r-- 1 root root 1 Oct 16 17:37 hello.txt  <span class=\"comment\"># 访问</span></span><br><span class=\"line\">13229323905543610 -rw-r--r-- 1 root root 1 Oct 18 17:37 hello.txt  <span class=\"comment\"># 权限属性变更</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h4 id=\"file-命令-查看文件类型\"><a href=\"#file-命令-查看文件类型\" class=\"headerlink\" title=\"file 命令 - 查看文件类型\"></a>file 命令 - 查看文件类型</h4><p>描述: 通过该命令知道某个文件的基本数据是属于ASCII或者是data文件或者是Binary且其中使用到动态函数连接库等等信息;</p>\n<p>基础实例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ASCII 类型</span></span><br><span class=\"line\">&gt; ls -alh /tmp/weiyigeek.txt</span><br><span class=\"line\">-rwx--x--t 1 weiyigeek weiyigeek 9 10月 20 05:52 weiyigeek.txt</span><br><span class=\"line\">&gt; file /tmp/weiyigeek.txt</span><br><span class=\"line\">weiyigeek.txt: sticky , ASCII text</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 二进制程序 类型</span></span><br><span class=\"line\">&gt; file /usr/bin/passwd</span><br><span class=\"line\">/usr/bin/passwd: setuid ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=fa23c6b4e145d9bb5487c6cb7adb9338c5ef4fb9, <span class=\"keyword\">for</span> GNU/Linux 3.2.0, stripped</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h4 id=\"ln-命令\"><a href=\"#ln-命令\" class=\"headerlink\" title=\"ln 命令\"></a>ln 命令</h4><p>描述：链接创建命令(Link)，注意不管是源、目标文件其路径建议使用绝对路径。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ln -s 【源文件路径】【目标path/file】  <span class=\"comment\"># 功能是生成软链接文件|必使用绝对路径</span></span><br><span class=\"line\">-s 创建软链接（不加该参数为）</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例1. 软连接(必使用绝对路径)即 /tmp/id_rsa.pub 链到 /root/.ssh/id_rsa.pub</span></span><br><span class=\"line\">ln -s /root/.ssh/id_rsa.pub /tmp/id_rsa.pub</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2. 硬连接</span></span><br><span class=\"line\"><span class=\"variable\">$ln</span> /root/.ssh/id_rsa.pub /tmp/id_rsa.pub</span><br><span class=\"line\"><span class=\"variable\">$ln</span> create.txt create.txt.bak</span><br><span class=\"line\">393422 -rw-r--r--   2 root root    0 May 31 15:48 create.txt</span><br><span class=\"line\">393422 -rw-r--r--   2 root root    0 May 31 15:48 create.txt.bak</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190531155342.png\" alt=\"WeiyiGeek.ln命令实例\" title=\"\" class=\"\">\n                <p>WeiyiGeek.ln命令实例</p>\n            </figure></p>\n<p><strong>补充知识：</strong><br>软链接的特征:</p>\n<ul>\n<li>类似于win下的快捷方式，修改任意一个文件另一个都改变（修改的是同一个inode的文件）</li>\n<li>软链接拥有自己的i节点和block块，但数据块中只保存原文件的文件名和i节点号,并没有实际的文件数据</li>\n<li>lrwxrwxrwx l软链接注意软链接文件的权限都是rwxrwxrwx</li>\n<li>删除原文件后软链接不能使用</li>\n<li>必须使用绝对路径</li>\n</ul>\n<p>硬链接的特征:</p>\n<ol>\n<li>硬链接拥有相同的i节点和存储block块可看做是同一个文件</li>\n<li>可通过i节点识别 ls -i (相同的i节点)</li>\n<li>不能跨分区且不能针对目录使用</li>\n<li>删除一个宁外一个也可以打开</li>\n</ol>\n<p><br></p>\n<h4 id=\"rename-命令\"><a href=\"#rename-命令\" class=\"headerlink\" title=\"rename 命令\"></a>rename 命令</h4><p>描述：该命令可以通过通配符将目录中的所有文件进行批量更改名称;</p>\n<p>语法参数：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Usage: rename [ -h|-m|-V ] [ -v ] [ -n ] [ -f ] [ -e|-E *perlexpr*]*|*perlexpr*</span><br><span class=\"line\">    [ *files* ]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#参数：</span></span><br><span class=\"line\">-v 表示会显示修改成功的文件名；</span><br><span class=\"line\">-n 则表示不执行任何操作主要用来测试rename过程，并不直接运行，可以查看测试效果后然后再运行</span><br><span class=\"line\">-f 则表示会强制修改。</span><br></pre></td></tr></table></figure></p>\n<p>基础示例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#文件示例1：</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> &#123;1..20&#125;;<span class=\"keyword\">do</span></span><br><span class=\"line\"> touch <span class=\"string\">\"demo_\"</span><span class=\"variable\">$&#123;i&#125;</span><span class=\"string\">\".sh\"</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#更改文件前缀 demo -&gt; weiyigeek</span></span><br><span class=\"line\">rename  -v  <span class=\"string\">'s/_/ /g'</span> *</span><br><span class=\"line\">demo_10.sh renamed as demo 10.sh</span><br><span class=\"line\"><span class=\"comment\">#Centos7可以</span></span><br><span class=\"line\">rename -n <span class=\"string\">\"demo\"</span> <span class=\"string\">\"weiyigeek\"</span> *.sh <span class=\"comment\">#主要匹配sh文件</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#测试更改</span></span><br><span class=\"line\">rename -n <span class=\"string\">'s/demo /weiyigeek-/g'</span> *.sh  <span class=\"comment\">#注意这里的通配符</span></span><br><span class=\"line\"><span class=\"comment\"># rename(demo 10.sh, weiyigeek-10.sh)</span></span><br><span class=\"line\"><span class=\"comment\"># rename(demo 11.sh, weiyigeek-11.sh)</span></span><br><span class=\"line\"><span class=\"comment\"># rename(demo 12.sh, weiyigeek-12.sh)</span></span><br><span class=\"line\"><span class=\"comment\"># rename(demo 13.sh, weiyigeek-13.sh)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#将文件名称的大写全部转换为小写则为</span></span><br><span class=\"line\">rename -n <span class=\"string\">'y/A-Z/a-z/'</span> *</span><br><span class=\"line\"><span class=\"comment\"># rename(demo 10.sh, DEMO 10.SH)</span></span><br><span class=\"line\"><span class=\"comment\"># rename(demo10.sh, DEMO10.SH)</span></span><br><span class=\"line\"><span class=\"comment\"># rename(demo 11.sh, DEMO 11.SH)</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h4 id=\"tempfile命令-Debian\"><a href=\"#tempfile命令-Debian\" class=\"headerlink\" title=\"tempfile命令-Debian\"></a>tempfile命令-Debian</h4><p>描述：该命令基于Debian发行版中默认自带比如Ubuntu其他发行版没有这个命令;<br>临时文件的命名方法与随机数，有时候在写Shell脚本的时候需要一些临时存储数据的才做，最适合存储临时文件数据的位置就是/tmp，因为该目录中所有的内容在系统重启后就会被清空。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tempfile 命令</span><br><span class=\"line\"><span class=\"variable\">$RANDOM</span> 是一个返回随机数的环境变量</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#方式1.用tempfile命令为一个临时文件命名：</span></span><br><span class=\"line\">temp_file_name=$(tempfile)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#方式2.用一个加带了随机数的文件名作为临时文件命名：</span></span><br><span class=\"line\">temp_file_name=<span class=\"string\">\"/tmp/file_<span class=\"variable\">$RANDOM</span>\"</span></span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190531161129.png\" alt=\"WeiyiGeek.tempfile\" title=\"\" class=\"\">\n                <p>WeiyiGeek.tempfile</p>\n            </figure>\n<p><br/><br>如果没有tempfile命令的Linux发行版，也可以使用自己的临时文件名：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#$$是系统预定义变量，显示当前所在进程的进程号，用.$$作为添加的后缀会被扩展成当前运行脚本的进程id。</span></span><br><span class=\"line\">temp_file_name=<span class=\"string\">\"/tmp/file.$$\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例1：</span></span><br><span class=\"line\"><span class=\"variable\">$echo</span> <span class=\"variable\">$temp_file_name</span></span><br><span class=\"line\">/tmp/file.7526 <span class=\"comment\">#当前pid进程号</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2:</span></span><br><span class=\"line\"><span class=\"variable\">$touch</span> file_$$ &amp;&amp; ls</span><br><span class=\"line\">create.txt  create.txt.bak  file_7526</span><br></pre></td></tr></table></figure></p>\n","comments":true,"excerpt":"[TOC]<br>","categories":[{"name":"Linux命令","path":"api/categories/Linux命令.json"}],"tags":[{"name":"文件管理","path":"api/tags/文件管理.json"}]}