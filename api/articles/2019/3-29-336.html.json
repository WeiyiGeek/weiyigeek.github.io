{"title":"4.Python3基础入门学习笔记(四)","slug":"编程世界/Python/基础学习/4.Python3基础入门学习笔记(四)","date":"2019-03-29T05:36:30.000Z","updated":"2022-05-26T13:27:26.039Z","url":"2019/3-29-336.html","path":"api/articles/2019/3-29-336.html.json","covers":null,"content":"<p>[TOC]</p>\n<h3 id=\"15-Python-模块\"><a href=\"#15-Python-模块\" class=\"headerlink\" title=\"15.Python 模块\"></a>15.Python 模块</h3><a id=\"more\"></a>\n<p>描述：模块就是更高级的封装,而模块就是程序;实际就是将一个个python文件编写的函数导入到其他的py文件中进行调用;</p>\n<p>前面知识点：</p>\n<ul>\n<li>容器(数据的封装),</li>\n<li>函数(语句的封装),</li>\n<li>类(方法和属性的封装)</li>\n</ul>\n<p>关联知识点：</p>\n<ul>\n<li>命名空间：指定该模块名和模块内的方法名称进行拼接如hello.hi()</li>\n</ul>\n<p>模块优点：</p>\n<ul>\n<li>代码阅读编写方便,模块化编程</li>\n<li>实现代码的重用</li>\n<li>优雅/明确/简单</li>\n</ul>\n<p><strong>(1) 导入与选择执行</strong></p>\n<p>案例：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\">#导入外部模块验证</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 项目结构</span></span><br><span class=\"line\"><span class=\"comment\"># Day4</span></span><br><span class=\"line\"><span class=\"comment\"># │  demo4.1.py</span></span><br><span class=\"line\"><span class=\"comment\"># │  TemperatureConversion.py</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">########### 案例1 ##############</span></span><br><span class=\"line\"><span class=\"comment\">#方法1：import TemperatureConversion</span></span><br><span class=\"line\"><span class=\"comment\">#方法2：from TemperatureConversion import c2f,f2c #导入指定模块(不用考虑namespace)</span></span><br><span class=\"line\"><span class=\"comment\">#方法3：from TemperatureConversion import *    #不建议此种方法(可能导致命名空间混乱)</span></span><br><span class=\"line\"><span class=\"comment\">#方法：import TemperatureConversion.c2f  #导入指定包的指定模块</span></span><br><span class=\"line\"><span class=\"comment\">#方法4：如下（经常）</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> TemperatureConversion <span class=\"keyword\">as</span> Temp</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">\"32 摄氏度 = %.2f华氏度\"</span> %Temp.c2f(<span class=\"number\">32</span>))</span><br><span class=\"line\">print(<span class=\"string\">\"99 华氏度 = %.2f摄氏度 \"</span> %Temp.f2c(<span class=\"number\">99</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">########### 案例2 ##############</span></span><br><span class=\"line\">print(Temp.__name__) <span class=\"comment\">#显示的是模块名称</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">############# 执行结果 ###############</span></span><br><span class=\"line\"><span class=\"comment\"># 32 摄氏度 = 89.60华氏度</span></span><br><span class=\"line\"><span class=\"comment\"># 99 华氏度 = 37.22摄氏度</span></span><br><span class=\"line\"><span class=\"comment\"># TemperatureConversion</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># \"\"\"\"\"\"\"\"\"\"\"\"\"\" TemperatureConversion.py \"\"\"\"\"\"\"\"\"\"\"\"\"\"\" # </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">c2f</span><span class=\"params\">(cel)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">'''摄氏度转华氏度'''</span></span><br><span class=\"line\">    fah = cel * <span class=\"number\">1.8</span> + <span class=\"number\">32</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> fah</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">f2c</span><span class=\"params\">(fah)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">'''华氏度转摄氏度'''</span>   </span><br><span class=\"line\">    cel = (fah - <span class=\"number\">32</span>) / <span class=\"number\">1.8</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> cel</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">test</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    print(<span class=\"string\">\"测试 0 C = 0.2f F\"</span>, c2f(<span class=\"number\">0</span>))</span><br><span class=\"line\">    print(<span class=\"string\">\"测试 0 F = 0.2f C\"</span>, c2f(<span class=\"number\">0</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#让Python知道是运行还是导入到模块</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:  <span class=\"comment\">#只有在自身模块文件内才执行test()</span></span><br><span class=\"line\">    print(<span class=\"string\">\"__name__ 在主程序中显示的是该模块名称, 如果在定义声明文件中执行则显示main : \"</span>,__name__)   <span class=\"comment\">#在本程序TemperatureConversion.py中显示的是main (主程序调用仍然是模块名称)</span></span><br><span class=\"line\">    test()</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>(2)搜索路径与包package</strong><br>上面的案例都是模块与主执行文件在同一个目录里面,但是在实际开发中往往是在其他文件子目录中;<br><em>Q:那我们如何进行模块的搜寻?</em><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>sys.path</span><br><span class=\"line\">[<span class=\"string\">''</span>, <span class=\"string\">'D:\\\\Python3\\\\python37.zip'</span>, <span class=\"string\">'D:\\\\Python3\\\\DLLs'</span>, <span class=\"string\">'D:\\\\Python3\\\\lib'</span>, <span class=\"string\">'D:\\\\Python3'</span>, <span class=\"string\">'C:\\\\Users\\\\Administrator\\\\AppData\\\\Roaming\\\\Python\\\\Python37\\\\site-packages'</span>, <span class=\"string\">'D:\\\\Python3\\\\lib\\\\site-packages'</span>(推荐), <span class=\"string\">'D:\\\\Python3\\\\lib\\\\site-packages\\\\easygui-0.98.1-py3.7.egg'</span>]  <span class=\"comment\"># 导入模块时候,Python 在上面的路径中进行查询模块信息并导入</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#可以利用 sys.path.append() 进行加入路径到其中</span></span><br></pre></td></tr></table></figure></p>\n<p><em>Q:什么是包(Package)?</em><br>A:把模块进行分类存放在不同的文件夹里面,把各个文件的位置告诉Python</p>\n<p>创建包的步骤：</p>\n<ul>\n<li>创建一个文件夹存放相关的模块,文件夹名字即是包的名字;</li>\n<li>在包目录下创建一个<strong>init</strong>.py (可以为空)</li>\n<li>将相关模块放入文件夹中,并修改主程序导入包的设置</li>\n</ul>\n<p>案例：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"><span class=\"comment\">#模块：案例包导入模块主程序</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 项目结构</span></span><br><span class=\"line\"><span class=\"comment\"># │ demo4.2.py</span></span><br><span class=\"line\"><span class=\"comment\"># ├─Demo</span></span><br><span class=\"line\"><span class=\"comment\"># │  │  Module.py</span></span><br><span class=\"line\"><span class=\"comment\"># │  │  __init__.py</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> Demo.Module <span class=\"keyword\">import</span> success  <span class=\"comment\">#在指定的Demo包下面找到模块并导入模块里面的函数(可直接调用)</span></span><br><span class=\"line\">success()  <span class=\"comment\">#直接调用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">########## 执行结果 ##############</span></span><br><span class=\"line\"><span class=\"comment\"># 亲,您成功从包里导入模块中的函数到主程序里面,Yes!</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#\"\"\"\"\"\"\"\"\"\"\"\"\"\"\" Demo\\Module.py \"\"\"\"\"\"\"\"\"\"\"\"\"\"#</span></span><br><span class=\"line\"><span class=\"comment\">#!/usr/bin/python</span></span><br><span class=\"line\"><span class=\"comment\">#功能:模块测试程序</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">success</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    print(<span class=\"string\">\"亲,您成功从包里导入模块中的函数到主程序里面,Yes!\"</span>)</span><br></pre></td></tr></table></figure></p>\n<p><br><br><strong>(2) 补充说明</strong><br>描述：Python标准库自己带有一些常用的模块,但是一些高阶用法还是需要查询官网的Document;</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Python IDLE - Help - Python Doc(按F1也可以)</span><br><span class=\"line\">https://docs.python.org/3.7/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#发布自己的模块 pypi模块</span></span><br><span class=\"line\">Distributing Python Modules ：publishing modules <span class=\"keyword\">for</span> installation by others</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#扩展与嵌入 c/c++</span></span><br><span class=\"line\">Extending and Embedding ：tutorial <span class=\"keyword\">for</span> C/C++ programmers</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#API接口使用</span></span><br><span class=\"line\">Python/C API ： reference <span class=\"keyword\">for</span> C/C++ programmers</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#补充：</span></span><br><span class=\"line\">PEP是Python Enhancement Proposals的缩写(Python增强建议书的意思,用来规范与定义Python各种加强与衍生的功能的技术规格让开发者能共同遵循的依据),</span><br></pre></td></tr></table></figure>\n<p>学习一个模块的重要方法：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; import time</span><br><span class=\"line\">&gt;&gt;&gt; dir(time)</span><br><span class=\"line\">&gt;&gt;&gt; <span class=\"built_in\">help</span>(time)</span><br><span class=\"line\"><span class=\"comment\">#注意当来什么模块进行导入时候就是 * 号 , 在存在__all__ 情况下只会导入下面的模块</span></span><br><span class=\"line\">&gt;&gt;&gt; timeit.__all__</span><br><span class=\"line\">[<span class=\"string\">'Timer'</span>, <span class=\"string\">'timeit'</span>, <span class=\"string\">'repeat'</span>, <span class=\"string\">'default_timer'</span>]</span><br><span class=\"line\">&gt;&gt;&gt; timeit.__file__   <span class=\"comment\">#模块的源代码文件</span></span><br><span class=\"line\"><span class=\"string\">'D:\\\\Python3\\\\lib\\\\timeit.py'</span></span><br><span class=\"line\">&gt;&gt;&gt; timeit.__doc__ <span class=\"comment\">#显示帮助可采用print进行格式化输出</span></span><br></pre></td></tr></table></figure></p>\n","comments":true,"excerpt":"[TOC]15.Python 模块","categories":[{"name":"Python3","path":"api/categories/Python3.json"}],"tags":[{"name":"编程入门学习","path":"api/tags/编程入门学习.json"}]}