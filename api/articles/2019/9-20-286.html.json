{"title":"JAVA入门学习七","slug":"编程世界/Java/JAVA入门学习七","date":"2019-09-20T03:34:30.000Z","updated":"2023-01-31T02:29:10.673Z","url":"2019/9-20-286.html","path":"api/articles/2019/9-20-286.html.json","covers":["https://img.weiyigeek.top/2019/1/20190925102643.png","https://img.weiyigeek.top/2019/1/20190925112741.png","https://img.weiyigeek.top/2019/1/20190925150451.png","https://img.weiyigeek.top/2019/1/20190927105156.png","https://img.weiyigeek.top/2019/1/20190927105415.png","https://img.weiyigeek.top/2019/1/20190927094403.png","https://img.weiyigeek.top/2019/1/20190927200928.png","https://img.weiyigeek.top/2019/1/20190927204006.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h4 id=\"Set集合\"><a href=\"#Set集合\" class=\"headerlink\" title=\"Set集合\"></a>Set集合</h4><p>描述:Set集合概述和特点包含没有重复元素的集合。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Set</span>&lt;<span class=\"title\">E</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extends</span> <span class=\"title\">Collection</span>&lt;<span class=\"title\">E</span>&gt;</span></span><br></pre></td></tr></table></figure><br>Set集合特点:</p>\n<ul>\n<li>无索引</li>\n<li>不可重复(重复插入返回fasle)</li>\n<li>无序(存取可能顺序不一致)</li>\n</ul>\n<p><em>HashSet存储自定义对象如何保证元素唯一性?</em><br>答:我们重了equals()与hashCode()方法，由于当每一个元素的hashCode的值是一样的时候才调用equals方法,为了提高效率我们必须降低优化hashCode()代码写法使之重复机率;(在以后开发中通常是采用了自动生成的方法方如下:)<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//com.weiyi.Collection.Students;</span></span><br><span class=\"line\"><span class=\"comment\">//#alt+shift+s -&gt; Generate hashCode() and equals()</span></span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">hashCode</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> prime = <span class=\"number\">31</span>;  <span class=\"comment\">//为什么选择31？ 1.31是一个质数（1和本身才能整除）; 2.31该数不大也不下；3.31该数好表示 2 &lt;&lt; 5  - 1</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> result = <span class=\"number\">1</span>;</span><br><span class=\"line\">  result = prime * result + age;</span><br><span class=\"line\">  result = prime * result + ((name == <span class=\"keyword\">null</span>) ? <span class=\"number\">0</span> : name.hashCode());</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">equals</span><span class=\"params\">(Object obj)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span> == obj) <span class=\"comment\">//调用的对象和传入的对象是同一个对象-直接返回True</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (obj == <span class=\"keyword\">null</span>)  <span class=\"comment\">//传入的对象是null</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (getClass() != obj.getClass())  <span class=\"comment\">//判断两个对象对应的字节码文件是否是同一个字节码文件</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">  Students other = (Students) obj;  <span class=\"comment\">//向下转型</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (age != other.age)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (name == <span class=\"keyword\">null</span>) &#123;    <span class=\"comment\">//调用对象的姓名不能为null</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (other.name != <span class=\"keyword\">null</span>)  <span class=\"comment\">//传入对象的姓名不能为null</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (!name.equals(other.name)) <span class=\"comment\">//调用的对象名称不等于传入的对象姓名</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><br></p>\n<p><em>HashSet如何保证元素唯一性的原理:</em><br>1.HashSet原理:</p>\n<ul>\n<li>我们使用Set集合都是需要去掉重复的元素,如果在存储的时候逐个equals()效率比较低,哈希算法提高了去重复的效率降低了使用equals()方法的次数</li>\n<li>当HashSet调用add()方法存储对象的时候,向调用对象的hashCode()方法得到一个哈希值,然后在集合中查找是否哈希值相同的对象;<ul>\n<li>如果没有哈希值相同的对象就直接存入集合;</li>\n<li>如果有哈希值相同的对象就和其相同哈希值的对象进行逐个equals()方法比较,比较结果为false就存入true则不存;<br>2.将自定义类的对象存入HashSet去重复</li>\n</ul>\n</li>\n<li>类中必须重新hashCode()和equals()方法<ul>\n<li>hashCode() : 属性相同的对象返回值必须相同,属性不同的返回值尽量不同(提供效率)</li>\n<li>equals():属性相同返回true,属性不同返回false并且此时存储元素</li>\n</ul>\n</li>\n</ul>\n<p><br></p>\n<p>实际案例:HashSet存储字符串并遍历以及存储自定义对象保证元素唯一性<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Tips：这里采用了Students类 import com.weiyi.Collection.Students;</span></span><br><span class=\"line\">/**</span><br><span class=\"line\">* @Filename: Set_Demo1.java</span><br><span class=\"line\"> * @Author: WeiyiGeek</span><br><span class=\"line\"> * @Function: Set集合学习 </span><br><span class=\"line\"> * @CreateTime: 下午7:38:16</span><br><span class=\"line\"> */</span><br><span class=\"line\">package com.weiyi.set;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.util.HashSet;</span><br><span class=\"line\">import com.weiyi.Collection.Students;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Set_Demo1 &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  public static void main(String[] args) &#123;</span><br><span class=\"line\">    //1.Set集合的特点：</span><br><span class=\"line\">    //无索引、不可重复、无序(存取可能顺序不一致)</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"#########示例1#############\"</span>);</span><br><span class=\"line\">    demo();</span><br><span class=\"line\">    </span><br><span class=\"line\">    //2.存储自定义对象保证元素唯一性</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"\\n\\n@@@@@@@@@@示例2@@@@@@@@@@\"</span>);</span><br><span class=\"line\">    demo1();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  public static void <span class=\"function\"><span class=\"title\">demo1</span></span>() &#123;</span><br><span class=\"line\">    HashSet&lt;Students&gt; st = new HashSet&lt;&gt;();</span><br><span class=\"line\">    st.add(new Students(<span class=\"string\">\"张三\"</span>,35));</span><br><span class=\"line\">    st.add(new Students(<span class=\"string\">\"李连杰\"</span>,32));</span><br><span class=\"line\">    st.add(new Students(<span class=\"string\">\"王富贵\"</span>,35));</span><br><span class=\"line\">    st.add(new Students(<span class=\"string\">\"李三丰\"</span>,32));</span><br><span class=\"line\">    st.add(new Students(<span class=\"string\">\"张三\"</span>,35));</span><br><span class=\"line\">    //查看集合中存放元素的个数(由于开始我们还未作重复过滤的时候size()输出为5)</span><br><span class=\"line\">    System.out.println(st.size());   //4</span><br><span class=\"line\">    System.out.println(st);  //由于重写HashCode()和euquals()方法使其自定义类对象的元素保持不重复</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  public static void <span class=\"function\"><span class=\"title\">demo</span></span>() &#123;</span><br><span class=\"line\">    HashSet&lt;String&gt; hs = new HashSet&lt;String&gt;(); //创建HashSet对象;</span><br><span class=\"line\">    boolean b1 = hs.add(<span class=\"string\">\"a\"</span>);   //当向<span class=\"built_in\">set</span>集合中存储重复元素的时候返回<span class=\"literal\">false</span>;</span><br><span class=\"line\">    boolean b2 = hs.add(<span class=\"string\">\"a\"</span>); </span><br><span class=\"line\">    hs.add(<span class=\"string\">\"b\"</span>);</span><br><span class=\"line\">    hs.add(<span class=\"string\">\"d\"</span>);</span><br><span class=\"line\">    hs.add(<span class=\"string\">\"c\"</span>);</span><br><span class=\"line\">    System.out.println(hs); //HashSet继承体系中重写了toString方法,且输出元素不重复和无序</span><br><span class=\"line\">    System.out.println(b1 + <span class=\"string\">\" - \"</span> + b2);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (String string : hs) &#123;  //只要能用迭代器迭代的就可以使用增强<span class=\"keyword\">for</span>循环遍历</span><br><span class=\"line\">      System.out.print(string + <span class=\"string\">\" \"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#执行结果：</span></span><br><span class=\"line\"><span class=\"comment\">#########示例1#############</span></span><br><span class=\"line\">[a, b, c, d]</span><br><span class=\"line\"><span class=\"literal\">true</span> - <span class=\"literal\">false</span></span><br><span class=\"line\">a b c d </span><br><span class=\"line\"></span><br><span class=\"line\">@@@@@@@@@@示例2@@@@@@@@@@</span><br><span class=\"line\">4</span><br><span class=\"line\">[Students [name=李连杰, age=32], Students [name=李三丰, age=32], Students [name=张三, age=35], Students [name=王富贵, age=35]]</span><br></pre></td></tr></table></figure></p>\n<p><em>补充复习实现快捷键：</em><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//\t\talt+<span class=\"built_in\">shift</span>+s+c //有参无参构造</span><br><span class=\"line\">//\t\talt+<span class=\"built_in\">shift</span>+s+o //生成get方法</span><br><span class=\"line\">//\t\talt+<span class=\"built_in\">shift</span>+s+r //生成<span class=\"built_in\">set</span>方法</span><br><span class=\"line\">//\t\talt+<span class=\"built_in\">shift</span>+s+s //重写toString</span><br><span class=\"line\">//\t\talt+<span class=\"built_in\">shift</span>+s+ Generate HashCode() and euqauls()  //提高效率少调用euquals方法使HashCode不一致</span><br><span class=\"line\">// \t\talt+<span class=\"built_in\">shift</span>+m  //方法抽取</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"集合框架LinkedHashSet\"><a href=\"#集合框架LinkedHashSet\" class=\"headerlink\" title=\"集合框架LinkedHashSet\"></a>集合框架LinkedHashSet</h5><p>描述: LinkedHashSet的概述和使用,Linked代表底层使用链表来实现的保证了怎么存就怎么取,而HashSet保证元素唯一性,且该类多数方法来着于父类或者说是爷爷类;</p>\n<p>特点：保证怎么存就怎么取并且不重复;</p>\n<p>基础案例:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.weiyi.set;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.LinkedHashSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">set_LinkedHashCode</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//示例1.LinkedHashSet类型初步使用</span></span><br><span class=\"line\">    LinkedHashSet&lt;String&gt; lhs = <span class=\"keyword\">new</span> LinkedHashSet&lt;&gt;();</span><br><span class=\"line\">    lhs.add(<span class=\"string\">\"a\"</span>);</span><br><span class=\"line\">    lhs.add(<span class=\"string\">\"b\"</span>);</span><br><span class=\"line\">    lhs.add(<span class=\"string\">\"c\"</span>);</span><br><span class=\"line\">    lhs.add(<span class=\"string\">\"d\"</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"示例1:LinkedHashSet的使用 \"</span> + lhs + <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//示例2.使用Scanner从键盘读取去掉不同的字符打印出不同的那些字符</span></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t\t * 1.创建Scanner对象</span></span><br><span class=\"line\"><span class=\"comment\">\t\t * 2.创建HashSet对象将字符存储去掉重复</span></span><br><span class=\"line\"><span class=\"comment\">\t\t * 3.将字符串转换为字符数据,获取每一个字符存储在HashSet集合之中自动去除重复</span></span><br><span class=\"line\"><span class=\"comment\">\t\t * 4.遍历HashSet打印每一个字符</span></span><br><span class=\"line\"><span class=\"comment\">\t\t */</span></span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    System.out.print(<span class=\"string\">\"请输入一行字符串: \"</span>);</span><br><span class=\"line\">    HashSet&lt;Character&gt; c = <span class=\"keyword\">new</span> HashSet&lt;Character&gt;();</span><br><span class=\"line\">    String line = sc.nextLine();</span><br><span class=\"line\">    <span class=\"keyword\">char</span>[] arr = line.toCharArray();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">char</span> d : arr) &#123;</span><br><span class=\"line\">      c.add(d);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//遍历打印每一个字符</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Character ch : c) &#123;</span><br><span class=\"line\">      System.out.print(ch);  <span class=\"comment\">//打印出是无序的</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//示例3.List集合与LinkedHashSet集合联合使用案例</span></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t\t *  (*)去除List集合中的重复元素：</span></span><br><span class=\"line\"><span class=\"comment\">\t\t *  - 创建一个LinkedHashSet集合</span></span><br><span class=\"line\"><span class=\"comment\">\t\t *  - 将List集合中所有元素添加到LinkedHashSet集合</span></span><br><span class=\"line\"><span class=\"comment\">\t\t *  - 将List集合中的元素清除</span></span><br><span class=\"line\"><span class=\"comment\">\t\t *  - 将LinkedHashSet集合中元素加回到List集合之中</span></span><br><span class=\"line\"><span class=\"comment\">\t\t **/</span></span><br><span class=\"line\">    ArrayList&lt;String&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">    list.add(<span class=\"string\">\"a\"</span>);</span><br><span class=\"line\">    list.add(<span class=\"string\">\"c\"</span>);</span><br><span class=\"line\">    list.add(<span class=\"string\">\"b\"</span>);</span><br><span class=\"line\">    list.add(<span class=\"string\">\"a\"</span>); <span class=\"comment\">//重复元素</span></span><br><span class=\"line\">    getSingle(list);</span><br><span class=\"line\">    System.out.println(list);</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//这里改成List可以兼容linked</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">getSingle</span><span class=\"params\">(ArrayList&lt;String&gt; list)</span> </span>&#123;</span><br><span class=\"line\">    LinkedHashSet&lt;String&gt; lhs = <span class=\"keyword\">new</span> LinkedHashSet&lt;String&gt;();</span><br><span class=\"line\">    lhs.addAll(list); <span class=\"comment\">//包括其所有的子类对象(去重了)</span></span><br><span class=\"line\">    list.clear();</span><br><span class=\"line\">    list.addAll(lhs); <span class=\"comment\">//非常值得学习去重后重新放入list集合中</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//#####执行结果#########</span></span><br><span class=\"line\">示例<span class=\"number\">1</span>:LinkedHashSet的使用 [a, b, c, d]</span><br><span class=\"line\"></span><br><span class=\"line\">请输入一行字符串: whoamiweiygeek</span><br><span class=\"line\">aewghiykmo</span><br><span class=\"line\"></span><br><span class=\"line\">[a, c, b]</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"集合框架TreeSet\"><a href=\"#集合框架TreeSet\" class=\"headerlink\" title=\"集合框架TreeSet\"></a>集合框架TreeSet</h5><p>描述:TreeSet集合是用来对象元素进行排序的可以指定一个顺序,当对象存入之后会按照指定的顺序排序,同样他也可以保证元素的唯一;<br>参考JDK8文档:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TreeSet()  <span class=\"comment\">//#构造一个新的、空的树集，根据其元素的自然排序进行排序。  </span></span><br><span class=\"line\">TreeSet(Collection&lt;? extends E&gt; c)  <span class=\"comment\">//#构造一个新的树集包含在指定集合的元素，根据其元素的自然排序排序。  </span></span><br><span class=\"line\">TreeSet(Comparator&lt;? <span class=\"keyword\">super</span> E&gt; comparator) <span class=\"comment\">//#构造一个新的、空的树集，根据指定的比较器进行排序。  </span></span><br><span class=\"line\">TreeSet(SortedSet&lt;E&gt; s)  <span class=\"comment\">//#构造一个包含相同元素的新树集，并使用相同的排序作为指定的排序集。</span></span><br></pre></td></tr></table></figure></p>\n<p>TreeSet使用方式一览:</p>\n<ul>\n<li>1.自然顺序排序(Comparable)<ul>\n<li>TreeSet类的add()方法中会把存入的对象提升为Comparable类型<ul>\n<li>调用对象的compareTo()方法和集合中对象比较</li>\n<li>根据compareTo()方法返回结果进行存储</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>2.比较器顺序(comparator) <ul>\n<li>创建TreeSet的时候制定一个Comparator<ul>\n<li>如果传入了Comparator子类对象那么TreeSet就会按照比较器中排序</li>\n<li>add()方法内部会自动调用Comparator接口中的compare()方法排序</li>\n<li><code>调用的对象是compare方法的第一个参数,集合中的对象(根节点)是compare方法的第二个参数</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>a:两种方式的区别:<ul>\n<li>TreeSet构造函数什么都不船默认按照类中Comparable排序如果类没有重写该放方法则会爆出ClassCastException异常<ul>\n<li>TreeSet如果传入Comparator就优先按照Comparator比较器方式处理</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><br></p>\n<p><strong>（1）TreeSet存储自定义对象：</strong><br>描述：使用TreeSet集合框架来排序去重自定义对象来保证元素的唯一和自然排序的；<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//这里任然采用Students类的方法 com.weiyi.Collection.Students;</span></span><br><span class=\"line\"><span class=\"comment\">//原理:二叉树两个叉小的存储在左边（负数） 在HashSet集合中如何存储元素取决于compareTo方法的返回值;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Students</span> <span class=\"keyword\">implements</span> <span class=\"title\">Comparable</span>&lt;<span class=\"title\">Students</span>&gt; </span>&#123;</span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compareTo</span><span class=\"params\">(Students o)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t\t当compareTo方法返回0的时候集合中只有一个元素(不存储其他元素)</span></span><br><span class=\"line\"><span class=\"comment\">\t\t当compareTo方法返回正数的时候集合会怎么存就怎么取(右边) - 方便理解以最后参数作为参考</span></span><br><span class=\"line\"><span class=\"comment\">\t\t当compareTO方法返回负数的时候集合会倒序存储(左边)</span></span><br><span class=\"line\"><span class=\"comment\">\t\t简单一句话常规输出方式： 负数 -&gt; 0 -&gt; 正数  - 方便理解</span></span><br><span class=\"line\"><span class=\"comment\">\t\treturn 0;</span></span><br><span class=\"line\"><span class=\"comment\">\t*/</span></span><br><span class=\"line\">  <span class=\"comment\">//1.二叉树取元素的时候是从左边开向右边（主要光匹配年龄当年龄重复的时候会出现问题所以这里我们要考虑完整次要条件姓名）</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> num = <span class=\"keyword\">this</span>.age - o.age; <span class=\"comment\">//Stuents代表根对象</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> num == <span class=\"number\">0</span> ? <span class=\"keyword\">this</span>.name.compareTo(o.name) : num;  <span class=\"comment\">//判断年龄是否相同如果相同再看其姓名是是不是相同(再String中已经重写了compareTo）否则返回num</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//2.如果按照姓名排序则交换this.age - o.age 和 this.name.compareTo(o.name)</span></span><br><span class=\"line\">  <span class=\"comment\">//#相同返回0，o.name &lt; this.name返回1(右边), o.name &gt; this.name 返回-1(左边)</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//3.按照姓名长度进行排序</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> length = <span class=\"keyword\">this</span>.name.length() - o .name.length();</span><br><span class=\"line\">  <span class=\"keyword\">int</span> num = length == <span class=\"number\">0</span> ? <span class=\"keyword\">this</span>.name.compareTo(o.name) : length;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> num == <span class=\"number\">0</span> ? <span class=\"keyword\">this</span>.age - o.age : num;  <span class=\"comment\">//如果连姓名都相同的话就比较其年龄</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20190925102643.png\" alt=\"WeiyiGeek.原理解析图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.原理解析图</p>\n            </figure>\n<p><br></p>\n<p><strong>（2）TreeSet集合比较器原理</strong><br>描述:再声明创建TreeSe集合对象向的时候需要调用自己实现的Comparator接口类中的compare方法;<br>原理理解： <code>集合中已有的根对象的为s2，add比较的元素为s1</code><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20190925112741.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p><br></p>\n<p>基础实例:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.weiyi.set;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Comparator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.TreeSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.weiyi.Collection.Students;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TreeSet_demo</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//示例1.TreeSet集合基本使用</span></span><br><span class=\"line\">    TreeSet&lt;Integer&gt; ts = <span class=\"keyword\">new</span> TreeSet&lt;&gt;(); <span class=\"comment\">//创建TreeSet对象去重和排序</span></span><br><span class=\"line\">    ts.add(<span class=\"number\">3</span>);ts.add(<span class=\"number\">1</span>);ts.add(<span class=\"number\">1</span>);ts.add(<span class=\"number\">2</span>);ts.add(<span class=\"number\">2</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"示例1：\\n\"</span> + ts);  <span class=\"comment\">//输出元素</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//实例2.TreeSet集合保证元素唯一和自然排序（采用了二叉树的原理）</span></span><br><span class=\"line\">    TreeSet&lt;Students&gt; st = <span class=\"keyword\">new</span> TreeSet&lt;&gt;();</span><br><span class=\"line\">    st.add(<span class=\"keyword\">new</span> Students(<span class=\"string\">\"掌门人\"</span>,<span class=\"number\">25</span>));</span><br><span class=\"line\">    st.add(<span class=\"keyword\">new</span> Students(<span class=\"string\">\"凡哥\"</span>,<span class=\"number\">23</span>));</span><br><span class=\"line\">    st.add(<span class=\"keyword\">new</span> Students(<span class=\"string\">\"渣渣辉\"</span>,<span class=\"number\">25</span>));</span><br><span class=\"line\">    st.add(<span class=\"keyword\">new</span> Students(<span class=\"string\">\"刘师傅\"</span>,<span class=\"number\">24</span>));</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"示例2：\\n\"</span> + st);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//示例3.compareTo中的姓名的对比采用的是unicode码</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"示例3：\\n\"</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">'掌'</span> + <span class=\"number\">0</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">'凡'</span> + <span class=\"number\">0</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">'渣'</span> + <span class=\"number\">0</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">'刘'</span> + <span class=\"number\">0</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//示例4.TreeSet集合比较器原理</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"示例4：\\n\"</span>);</span><br><span class=\"line\">    TreeSet&lt;String&gt; compare = <span class=\"keyword\">new</span> TreeSet&lt;&gt;(<span class=\"keyword\">new</span> CompareByLength());</span><br><span class=\"line\">    compare.add(<span class=\"string\">\"aaaaa\"</span>);</span><br><span class=\"line\">    compare.add(<span class=\"string\">\"z\"</span>);</span><br><span class=\"line\">    compare.add(<span class=\"string\">\"xa\"</span>);</span><br><span class=\"line\">    compare.add(<span class=\"string\">\"weiyigeek\"</span>);</span><br><span class=\"line\">    compare.add(<span class=\"string\">\"cba\"</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"示例4：\\n\"</span> + compare);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CompareByLength</span> <span class=\"keyword\">extends</span> <span class=\"title\">Object</span> <span class=\"keyword\">implements</span> <span class=\"title\">Comparator</span>&lt;<span class=\"title\">String</span>&gt;</span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//注意这里:Comparator接口虽然是两个方法但是这里只写了一个也不会报错;由于所有的类都默认基础Object类而该类中已经重写了equals方法</span></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(String s1, String s2)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> num = s1.length() - s2.length();   <span class=\"comment\">//判断长度</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> num == <span class=\"number\">0</span> ? s1.compareTo(s2) : num;  <span class=\"comment\">//长度一致则判断条件</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//#指向结果</span></span><br><span class=\"line\">示例<span class=\"number\">1</span>：</span><br><span class=\"line\">[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">示例<span class=\"number\">2</span>：</span><br><span class=\"line\">[Students [name=凡哥, age=<span class=\"number\">23</span>], Students [name=刘师傅, age=<span class=\"number\">24</span>], Students [name=掌门人, age=<span class=\"number\">25</span>], Students [name=渣渣辉, age=<span class=\"number\">25</span>]]</span><br><span class=\"line\"></span><br><span class=\"line\">示例<span class=\"number\">3</span>：</span><br><span class=\"line\"><span class=\"number\">25484</span></span><br><span class=\"line\"><span class=\"number\">20961</span></span><br><span class=\"line\"><span class=\"number\">28195</span></span><br><span class=\"line\"><span class=\"number\">21016</span></span><br><span class=\"line\"></span><br><span class=\"line\">示例<span class=\"number\">4</span>：</span><br><span class=\"line\">[z, xa, cba, aaaaa, weiyigeek]</span><br></pre></td></tr></table></figure><br><br></p>\n<p>学习案例：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">package</span> com.weiyi.set;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Comparator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.TreeSet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> WeiyiGeek</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">set_CollectionExample</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//需求1：输入一个集合存储重复且无序的元素,排序但是不去重;</span></span><br><span class=\"line\">    ArrayList&lt;String&gt; demo = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">    demo.add(<span class=\"string\">\"weiy_\"</span>);</span><br><span class=\"line\">    demo.add(<span class=\"string\">\"小伟\"</span>);</span><br><span class=\"line\">    demo.add(<span class=\"string\">\"weiyi\"</span>);</span><br><span class=\"line\">    demo.add(<span class=\"string\">\"WeiyiGeek\"</span>);</span><br><span class=\"line\">    demo.add(<span class=\"string\">\"weiyi\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">//定义的方法对其排序保留</span></span><br><span class=\"line\">    sort(demo);</span><br><span class=\"line\">    <span class=\"comment\">//打印List</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"需求1：\\n\"</span> + demo );</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//需求2：从键盘输入一个字符串程序对其排序后输出(任然不去重复)</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"需求2：\"</span>);</span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    System.out.print(<span class=\"string\">\"请输入串字符串: \"</span>);</span><br><span class=\"line\">    String line = sc.nextLine();</span><br><span class=\"line\">    <span class=\"keyword\">char</span>[] arr = line.toCharArray(); <span class=\"comment\">//字符串转换成为字符数组</span></span><br><span class=\"line\">    TreeSet&lt;Character&gt; ch = <span class=\"keyword\">new</span> TreeSet&lt;Character&gt;(<span class=\"keyword\">new</span> Comparator&lt;Character&gt;() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"meta\">@Override</span></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(Character c1, Character c2)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// TODO Auto-generated method stub</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> flag = c1.compareTo(c2);  <span class=\"comment\">//这里就不用自动拆箱了(值得学习)</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> flag == <span class=\"number\">0</span> ? -<span class=\"number\">1</span> : flag;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"comment\">//将字符数组值传入到TreeSet集合之中（需要自动装箱）</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Character c : arr) &#123;</span><br><span class=\"line\">      ch.add(c);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//遍历输出字符</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Character de : ch) &#123;</span><br><span class=\"line\">      System.out.print(de + <span class=\"string\">\" \"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//示例3.键盘输入多个整数直到quit时候退出。把所有输出的整数倒序排列打印;</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"\\n示例3:\"</span>);</span><br><span class=\"line\">    TreeSet&lt;Integer&gt; in = <span class=\"keyword\">new</span> TreeSet&lt;Integer&gt;(<span class=\"keyword\">new</span> Comparator&lt;Integer&gt;() &#123;</span><br><span class=\"line\">      <span class=\"comment\">//匿名内部类</span></span><br><span class=\"line\">      <span class=\"meta\">@Override</span></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(Integer i1, Integer i2)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//由于是需要倒序排序则这里集合中元素i2减去调用的参数i1</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> num = i2 - i1;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> num == <span class=\"number\">0</span> ? <span class=\"number\">1</span> : num; <span class=\"comment\">//不需要剔除重复则返回非0即可</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!(line = sc.nextLine()).equals(<span class=\"string\">\"quit\"</span>)) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//将字符串转成Integer对象(捕捉异常)</span></span><br><span class=\"line\">      <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">        Integer i = Integer.parseInt(line);</span><br><span class=\"line\">        in.add(i);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">catch</span> (Exception e)&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"输入的值非数字!\"</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"集合倒序结果：\"</span>+in);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"Game Over!\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(ArrayList&lt;String&gt; demo)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 1)创建TreeSet集合对象，还需要自定义比较器(由于String虽然自带比较器但是重复不能够保留)，这里采用匿名内部类实现”</span></span><br><span class=\"line\">    TreeSet&lt;String&gt; ts = <span class=\"keyword\">new</span> TreeSet&lt;&gt;(<span class=\"keyword\">new</span> Comparator&lt;String&gt;() &#123;</span><br><span class=\"line\">      <span class=\"meta\">@Override</span></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(String o1, String o2)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> num = o1.compareTo(o2);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> num == <span class=\"number\">0</span> ? <span class=\"number\">1</span> : num;  <span class=\"comment\">//精辟之处</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"comment\">// 2)将列表元素给TreeSet集合</span></span><br><span class=\"line\">    ts.addAll(demo);</span><br><span class=\"line\">    <span class=\"comment\">// 3)清空list列表中元素</span></span><br><span class=\"line\">    demo.clear();</span><br><span class=\"line\">    <span class=\"comment\">// 4)将排好序的元素重新放入list中</span></span><br><span class=\"line\">    demo.addAll(ts);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>指向结果:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#需求1：</span></span><br><span class=\"line\">[WeiyiGeek, weiy_, weiyi, weiyi, 小伟]</span><br><span class=\"line\"><span class=\"comment\">#需求2：</span></span><br><span class=\"line\">请输入串字符串: whoami</span><br><span class=\"line\">a h i m o w </span><br><span class=\"line\"><span class=\"comment\">#示例3:</span></span><br><span class=\"line\">1024</span><br><span class=\"line\">852</span><br><span class=\"line\">836</span><br><span class=\"line\">256</span><br><span class=\"line\">354</span><br><span class=\"line\">quit</span><br><span class=\"line\">集合倒序结果：[1024, 852, 836, 354, 256]</span><br><span class=\"line\">Game Over!</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>案例需求:键盘录入5个学生信息(姓名,语数外成绩以,分割),之后按照总分从高到低输出到控制台Control</strong><br>步骤流程分析:(多写有助于学习)<br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20190925150451.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.weiyi.set;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Comparator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.TreeSet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo_TreeSet</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//需求1.键盘录入5个学生信息(姓名,语数外成绩以,分割),之后按照总分从高到低输出到控制台Control</span></span><br><span class=\"line\">    Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"请用键盘录入5个学生信息(姓名,语数外成绩以,分割) : \"</span>);</span><br><span class=\"line\">    TreeSet&lt;Student&gt; st = <span class=\"keyword\">new</span> TreeSet&lt;Student&gt;(<span class=\"keyword\">new</span> Comparator&lt;Student&gt;() &#123;</span><br><span class=\"line\">      <span class=\"meta\">@Override</span></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(Student o1, Student o2)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//由于需要从高到低排序(逆序所以)</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> num = o2.getSum() - o1.getSum(); <span class=\"comment\">//以对象的getSum()进行比较相减</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> num == <span class=\"number\">0</span> ? <span class=\"number\">1</span> : num;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"comment\">//只录入五次信息</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(st.size() &lt; <span class=\"number\">5</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      String line = sc.nextLine();</span><br><span class=\"line\">      String[] res = line.split(<span class=\"string\">\",\"</span>); <span class=\"comment\">//以,分割转换成为字符串</span></span><br><span class=\"line\">      Integer chinese = Integer.parseInt(res[<span class=\"number\">1</span>]);</span><br><span class=\"line\">      Integer math = Integer.parseInt(res[<span class=\"number\">2</span>]);</span><br><span class=\"line\">      Integer english = Integer.parseInt(res[<span class=\"number\">3</span>]);</span><br><span class=\"line\">      <span class=\"comment\">//添加该对象到Treeset集合中</span></span><br><span class=\"line\">      st.add(<span class=\"keyword\">new</span> Student(res[<span class=\"number\">0</span>], chinese, math, english));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//输出集合中排序后的结果</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Student student : st) &#123;</span><br><span class=\"line\">      System.out.println(student);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> chinese;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> math;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> english;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> sum;</span><br><span class=\"line\">  <span class=\"comment\">//无参构造</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Student</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//有参构造</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Student</span><span class=\"params\">(String name, <span class=\"keyword\">int</span> chinese, <span class=\"keyword\">int</span> math, <span class=\"keyword\">int</span> english)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>();</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.chinese = chinese;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.math = math;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.english = english;</span><br><span class=\"line\">    <span class=\"comment\">//成绩总和传给集合排序使用</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>.sum = chinese + math + english;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//传出一个排序数据的来源</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getSum</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//重新toString方法即输出样式</span></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">\"姓名: \"</span> + name + <span class=\"string\">\", chinese=\"</span> + chinese + <span class=\"string\">\", math=\"</span> + math + <span class=\"string\">\", english=\"</span> + english + <span class=\"string\">\", 总分=\"</span></span><br><span class=\"line\">        + sum ;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">请用键盘录入5个学生信息(姓名,语数外成绩以,分割) : </span><br><span class=\"line\">小红,30,40,50</span><br><span class=\"line\">小黑,50,60,100</span><br><span class=\"line\">小绿,59,59,59</span><br><span class=\"line\">小兰,85,87,10</span><br><span class=\"line\">小紫,100,100,99</span><br><span class=\"line\">name=小紫, chinese=100, math=100, english=99, 总分=299</span><br><span class=\"line\">name=小黑, chinese=50, math=60, english=100, 总分=210</span><br><span class=\"line\">name=小兰, chinese=85, math=87, english=10, 总分=182</span><br><span class=\"line\">name=小绿, chinese=59, math=59, english=59, 总分=177</span><br><span class=\"line\">name=小红, chinese=30, math=40, english=50, 总分=120</span><br></pre></td></tr></table></figure></p>\n<hr>\n\n<h4 id=\"Map集合\"><a href=\"#Map集合\" class=\"headerlink\" title=\"Map集合\"></a>Map集合</h4><p>描述:Map集合是一个双列集合内含Key/Value概述：</p>\n<ul>\n<li>映射键到值的对象</li>\n<li>一张Map(映射)不能包含重复的键</li>\n<li>每个键可以映射到至多一个值(key唯一)</li>\n</ul>\n<p>语法:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java.util </span><br><span class=\"line\">Interface Map&lt;K,V&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#实际用的时候</span></span><br><span class=\"line\">Map&lt;String, Integer&gt; stu = new HashMap&lt;String, Integer&gt;();</span><br></pre></td></tr></table></figure><br><br></p>\n<h5 id=\"集合框架HashMap\"><a href=\"#集合框架HashMap\" class=\"headerlink\" title=\"集合框架HashMap\"></a>集合框架HashMap</h5><p>描述:比下面的集合框架都节省实际时间效率高，直接向里面丢入数据到时候直接取就行,所以再没有特殊要求下一般采用HashMap来存储键值对;</p>\n<p>Map集合的常用功能:</p>\n<ul>\n<li>a:添加功能<code>V put(K key,V value)</code>:添加元素。<ul>\n<li>如果键是第一次存储，就直接存储元素，返回null</li>\n<li>如果键不是第一次存在，就用现在值把以前的值替换掉，并且返回以前的值</li>\n</ul>\n</li>\n<li>b:删除功能<ul>\n<li><code>void clear()</code>:移除所有的键值对元素</li>\n<li><code>V remove(Object key)</code>：根据键删除键值对元素，并把值返回</li>\n</ul>\n</li>\n<li>c:判断功能<ul>\n<li><code>boolean containsKey(Object key)</code>：判断集合是否包含指定的键</li>\n<li><code>boolean containsValue(Object value)</code>:判断集合是否包含指定的值</li>\n<li><code>boolean isEmpty()</code>：判断集合是否为空</li>\n</ul>\n</li>\n<li>d:获取功能<ul>\n<li><code>Set&lt;Map.Entry&lt;K,V&gt;&gt; entrySet()</code>:</li>\n<li><code>V get(Object key)</code>:根据键获取值</li>\n<li><code>Set&lt;K&gt; keySet()</code>:获取集合中 所有键key 的集合</li>\n<li><code>Collection&lt;V&gt; values()</code>:获取集合中 所有值value 的集合</li>\n</ul>\n</li>\n<li>e:长度功能(类方法)<ul>\n<li><code>int size()</code>：返回集合中的键值对的个数</li>\n</ul>\n</li>\n</ul>\n<p><br></p>\n<p>Map集合的遍历之<code>键找值</code>思路:</p>\n<ul>\n<li>获取所有键的集合</li>\n<li>遍历键的集合，获取到每一个键</li>\n<li>根据键找值<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20190927105156.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n</li>\n</ul>\n<p><br></p>\n<p>Map集合的遍历之<code>键值对对象找键和值</code>思路</p>\n<ul>\n<li>获取所有键值对对象的集合</li>\n<li>遍历键值对对象的集合，获取到每一个键值对对象</li>\n<li>根据键值对对象找键和值<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#关键方法有了Entry接口我们就可以进行getKey于和getValue以及迭起</span></span><br><span class=\"line\">java.util </span><br><span class=\"line\">Interface Map.Entry&lt;K,V&gt;  <span class=\"comment\">#表示一个封闭的接口，实际就是Entry是map里面的一个内部接口;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#比如</span></span><br><span class=\"line\">interface Inter &#123;</span><br><span class=\"line\">  //InterInside是内部接口</span><br><span class=\"line\">  interface InterInside&#123;</span><br><span class=\"line\">    public void show();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class Demo implements Inter.InterInside &#123;</span><br><span class=\"line\">  @Override</span><br><span class=\"line\">  public void <span class=\"function\"><span class=\"title\">show</span></span>() &#123;</span><br><span class=\"line\">    //需要这样去调用接口的内部接口</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20190927105415.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n</li>\n</ul>\n<p>实际案例:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.weiyi.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo1_MapCollection</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//示例1.Map集合的添加功能(注意Hash默认是不对数据进行排序的)</span></span><br><span class=\"line\">    Map&lt;String, Integer&gt; stu = <span class=\"keyword\">new</span> HashMap&lt;String, Integer&gt;();</span><br><span class=\"line\">    stu.put(<span class=\"string\">\"小王\"</span>,<span class=\"number\">25</span>);  <span class=\"comment\">//注意由于Key不能重复put第一次返回null,第二次则是返回被覆盖的值</span></span><br><span class=\"line\">    stu.put(<span class=\"string\">\"小伟\"</span>,<span class=\"number\">88</span>);</span><br><span class=\"line\">    stu.put(<span class=\"string\">\"小赵\"</span>,<span class=\"number\">18</span>);</span><br><span class=\"line\">    stu.put(<span class=\"string\">\"小李\"</span>,<span class=\"number\">14</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"示例1: \"</span> + stu);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//示例2.判断值是否包含键是否包含</span></span><br><span class=\"line\">    <span class=\"keyword\">boolean</span> keyFlag = stu.containsKey(<span class=\"string\">\"小伟\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">boolean</span> ValueFlag = stu.containsValue(<span class=\"number\">88</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"示例2: \"</span> + <span class=\"string\">\"小伟 Key是否存在\"</span> + keyFlag +<span class=\"string\">\",88 Value是否存在\"</span> + ValueFlag + <span class=\"string\">\", 是否为空 ：\"</span> + stu.isEmpty());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//示例3.获取Map集合长度和集合中的键值</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"示例3:\\nMap集合长度: \"</span> + stu.size());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"获取指定Key的Value: \"</span> + stu.get(<span class=\"string\">\"小伟\"</span>));</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"获取Map集合所有Key: \"</span> + stu.keySet());</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"获取Map集合所有Value: \"</span> + stu.values());</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//示例5.Map双列集合迭代方法(两种方法);Map集合的遍历之键找值</span></span><br><span class=\"line\">    <span class=\"comment\">//Iterator迭代器</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"\\n示例5:\"</span>);</span><br><span class=\"line\">    Set&lt;String&gt; keySet = stu.keySet();  <span class=\"comment\">//返回是一个Set集合类型的值，而Set集合中存在迭代器则进行使用</span></span><br><span class=\"line\">    Iterator&lt;String&gt; ot = keySet.iterator(); <span class=\"comment\">// 获取迭代器</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(ot.hasNext())</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      String key = ot.next(); <span class=\"comment\">//获取每一个键</span></span><br><span class=\"line\">      Integer value = stu.get(key); <span class=\"comment\">//根据键获取值</span></span><br><span class=\"line\">      System.out.println(<span class=\"string\">\"Key=\"</span> + key + <span class=\"string\">\", Value=\"</span> + value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//增强for循环遍历方式(实际使用中推荐)</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (String Key : stu.keySet()) &#123;</span><br><span class=\"line\">      System.out.println(Key+<span class=\"string\">\":\"</span>+stu.get(Key));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//示例6.遍历之`键值对对象找键和值`思路</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"\\n示例6:\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">//Map.Entry说明Entry是Map的内部接口,将键和值封装成为Entry对象并存在再Set集合中</span></span><br><span class=\"line\">    Set&lt;Map.Entry&lt;String, Integer&gt;&gt; entryset = stu.entrySet();</span><br><span class=\"line\">    Iterator&lt;Map.Entry&lt;String, Integer&gt;&gt; it = entryset.iterator();  <span class=\"comment\">//获取迭代器对象</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(it.hasNext())</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"comment\">//获取每一个Entry对象</span></span><br><span class=\"line\">      Map.Entry&lt;String, Integer&gt; st = it.next();</span><br><span class=\"line\">      <span class=\"comment\">//之后就可以根据这个接口里面的方法获取值/keys</span></span><br><span class=\"line\">      String stkey = st.getKey();</span><br><span class=\"line\">      Integer stvalue = st.getValue();</span><br><span class=\"line\">      System.out.println( stkey + <span class=\"string\">\" - \"</span> + stvalue);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//还是可以采用增强for循环(实际开发中推荐方式)</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Map.Entry&lt;String, Integer&gt; entry : stu.entrySet()) &#123;</span><br><span class=\"line\">      System.out.println(entry.getKey() + <span class=\"string\">\" \"</span> + entry.getValue() + <span class=\"string\">\" \"</span> + entry.getClass());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//示例4.删除Map集合中的Key值</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"\\n示例4:\\n移除删除键值对元素: \"</span> + stu.remove(<span class=\"string\">\"小伟\"</span>));</span><br><span class=\"line\">    stu.clear();</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"删除全部Key/Value: \"</span> + stu);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>执行结果:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">示例1: &#123;小李=14, 小王=25, 小伟=88, 小赵=18&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">示例2: 小伟 Key是否存在<span class=\"literal\">true</span>,88 Value是否存在<span class=\"literal\">true</span>, 是否为空 ：<span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">示例3:</span><br><span class=\"line\">Map集合长度: 4</span><br><span class=\"line\">获取指定Key的Value: 88</span><br><span class=\"line\">获取Map集合所有Key: [小李, 小王, 小伟, 小赵]</span><br><span class=\"line\">获取Map集合所有Value: [14, 25, 88, 18]</span><br><span class=\"line\"></span><br><span class=\"line\">示例5:</span><br><span class=\"line\">Key=小李, Value=14</span><br><span class=\"line\">Key=小王, Value=25</span><br><span class=\"line\">Key=小伟, Value=88</span><br><span class=\"line\">Key=小赵, Value=18</span><br><span class=\"line\">小李:14</span><br><span class=\"line\">小王:25</span><br><span class=\"line\">小伟:88</span><br><span class=\"line\">小赵:18</span><br><span class=\"line\"></span><br><span class=\"line\">示例6:</span><br><span class=\"line\">小李 - 14</span><br><span class=\"line\">小王 - 25</span><br><span class=\"line\">小伟 - 88</span><br><span class=\"line\">小赵 - 18</span><br><span class=\"line\">小李 14 class java.util.HashMap<span class=\"variable\">$Node</span> <span class=\"comment\">#调用的字节码文件名词.class</span></span><br><span class=\"line\">小王 25 class java.util.HashMap<span class=\"variable\">$Node</span></span><br><span class=\"line\">小伟 88 class java.util.HashMap<span class=\"variable\">$Node</span></span><br><span class=\"line\">小赵 18 class java.util.HashMap<span class=\"variable\">$Node</span></span><br><span class=\"line\"></span><br><span class=\"line\">示例4:</span><br><span class=\"line\">移除删除键值对元素: 88</span><br><span class=\"line\">删除全部Key/Value: &#123;&#125;</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p>HashMap集合键是存入Student对象是String的案例: 同样这里的Students对象也是采用 <code>com.weiyi.Collection.Students</code>中的 Students 类;<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.weiyi.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.weiyi.Collection.Students;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo1_MapClass</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//示例说明:将键存入我们的students对象,value是存入每一个学生的生源地</span></span><br><span class=\"line\">    Map&lt;Students, String&gt; ss = <span class=\"keyword\">new</span> HashMap&lt;Students, String&gt;();</span><br><span class=\"line\">    ss.put(<span class=\"keyword\">new</span> Students(<span class=\"string\">\"王爱国\"</span>,<span class=\"number\">25</span>),<span class=\"string\">\"北京\"</span>); <span class=\"comment\">//关键点1由于Students类中重写了 equals() 和 hashcode()方法  会进行去冲后除插入集合</span></span><br><span class=\"line\">    ss.put(<span class=\"keyword\">new</span> Students(<span class=\"string\">\"王爱国\"</span>,<span class=\"number\">25</span>),<span class=\"string\">\"上海\"</span>); <span class=\"comment\">//Value的上海将会覆盖北京</span></span><br><span class=\"line\">    ss.put(<span class=\"keyword\">new</span> Students(<span class=\"string\">\"颜国富\"</span>,<span class=\"number\">18</span>),<span class=\"string\">\"广州\"</span>); </span><br><span class=\"line\">    ss.put(<span class=\"keyword\">new</span> Students(<span class=\"string\">\"渝艳华\"</span>,<span class=\"number\">26</span>),<span class=\"string\">\"重庆\"</span>); </span><br><span class=\"line\">    ss.put(<span class=\"keyword\">new</span> Students(<span class=\"string\">\"志疆\"</span>,<span class=\"number\">26</span>),<span class=\"string\">\"深圳\"</span>); </span><br><span class=\"line\">    System.out.println(ss);  <span class=\"comment\">//HashMap重写了toString() 方法</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//#执行结果</span></span><br><span class=\"line\">&#123;Students [name=王爱国, age=<span class=\"number\">25</span>]=上海, Students [name=渝艳华, age=<span class=\"number\">26</span>]=重庆, Students [name=颜国富, age=<span class=\"number\">18</span>]=广州&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong>HashMap嵌套HashMap(重点)</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.weiyi.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.weiyi.Collection.Students;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo4_HashMap</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> HashMap&lt;Students, String&gt; Students = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//示例1.统计字符串中每个字符出现的次数</span></span><br><span class=\"line\">    String s = <span class=\"string\">\"abadsadasagsdasdc\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">char</span>[] arr = s.toCharArray();</span><br><span class=\"line\">    <span class=\"comment\">//定义有一个双列集合存储字符以及字符出现的次数（一般清情况雄下采用HashMap）</span></span><br><span class=\"line\">    HashMap&lt;Character, Integer&gt; hm = <span class=\"keyword\">new</span> HashMap&lt;Character, Integer&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">char</span> c : arr) &#123;</span><br><span class=\"line\">      <span class=\"comment\">//方式1</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t\tif(!hm.containsKey(c)) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t\t\thm.put(c, 1);</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t\t&#125;else &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t\t\tint num = hm.get(c);</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t\t\thm.put(c, hm.get(c) + 1);</span></span><br><span class=\"line\"><span class=\"comment\">//\t\t\t&#125;</span></span><br><span class=\"line\">      <span class=\"comment\">//方式2：推荐方式使用可键不可重复的特性</span></span><br><span class=\"line\">      hm.put(c, !hm.containsKey(c) ? <span class=\"number\">1</span> : hm.get(c) + <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"示例1：\\n字符串中单个不相同字符的数量 : \"</span> + hm);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//示例2.集合HashMap内部嵌套HashMap</span></span><br><span class=\"line\">    <span class=\"comment\">/***</span></span><br><span class=\"line\"><span class=\"comment\">\t\t * 需求：定义多个期的一个双列集合，键是学习对象，值是学生归属地</span></span><br><span class=\"line\"><span class=\"comment\">\t\t */</span></span><br><span class=\"line\">    <span class=\"comment\">//定义单个期的双列集合元素</span></span><br><span class=\"line\">    HashMap&lt;Students, String&gt; h1 = <span class=\"keyword\">new</span> HashMap&lt;Students, String&gt;();</span><br><span class=\"line\">    h1.put(<span class=\"keyword\">new</span> Students(<span class=\"string\">\"张三\"</span>, <span class=\"number\">13</span>),<span class=\"string\">\"北京\"</span>);</span><br><span class=\"line\">    h1.put(<span class=\"keyword\">new</span> Students(<span class=\"string\">\"李四\"</span>, <span class=\"number\">53</span>),<span class=\"string\">\"广州\"</span>);</span><br><span class=\"line\">    h1.put(<span class=\"keyword\">new</span> Students(<span class=\"string\">\"王五\"</span>, <span class=\"number\">93</span>),<span class=\"string\">\"深圳\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    HashMap&lt;Students, String&gt; h2 = <span class=\"keyword\">new</span> HashMap&lt;Students, String&gt;();</span><br><span class=\"line\">    h2.put(<span class=\"keyword\">new</span> Students(<span class=\"string\">\"张伟\"</span>, <span class=\"number\">98</span>),<span class=\"string\">\"北京\"</span>);</span><br><span class=\"line\">    h2.put(<span class=\"keyword\">new</span> Students(<span class=\"string\">\"阿斯顿\"</span>, <span class=\"number\">13</span>),<span class=\"string\">\"重庆\"</span>);</span><br><span class=\"line\">    h2.put(<span class=\"keyword\">new</span> Students(<span class=\"string\">\"坤璄烤\"</span>, <span class=\"number\">23</span>),<span class=\"string\">\"浙江\"</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//注意：下面开始嵌套了</span></span><br><span class=\"line\">    HashMap&lt;HashMap&lt;Students, String&gt;, String&gt; hhmm = <span class=\"keyword\">new</span> HashMap&lt;HashMap&lt;Students,String&gt;, String&gt;();</span><br><span class=\"line\">    hhmm.put(h1, <span class=\"string\">\"1999级\"</span>);</span><br><span class=\"line\">    hhmm.put(h2, <span class=\"string\">\"2000级\"</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"\\n示例2:\"</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//嵌套输出遍历双列集合</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(HashMap&lt;Students, String&gt; c : hhmm.keySet()) &#123;</span><br><span class=\"line\">      String classbj = hhmm.get(c);  <span class=\"comment\">//精华之所在外层的HashMap</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span>(Students d : c.keySet())   <span class=\"comment\">//注意这里是Students //获取集合中所有学生键对象</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        String value = c.get(d); </span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"姓名/年龄:\"</span> + d + <span class=\"string\">\",归属地\"</span> + value + <span class=\"string\">\", 班级：\"</span> + classbj);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行结果:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">示例<span class=\"number\">1</span>：</span><br><span class=\"line\">字符串中单个不相同字符的数量 : &#123;a=<span class=\"number\">6</span>, b=<span class=\"number\">1</span>, s=<span class=\"number\">4</span>, c=<span class=\"number\">1</span>, d=<span class=\"number\">4</span>, g=<span class=\"number\">1</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">示例<span class=\"number\">2</span>:</span><br><span class=\"line\">姓名/年龄:Students [name=王五, age=<span class=\"number\">93</span>],归属地深圳, 班级：<span class=\"number\">1999</span>级</span><br><span class=\"line\">姓名/年龄:Students [name=李四, age=<span class=\"number\">53</span>],归属地广州, 班级：<span class=\"number\">1999</span>级</span><br><span class=\"line\">姓名/年龄:Students [name=张三, age=<span class=\"number\">13</span>],归属地北京, 班级：<span class=\"number\">1999</span>级</span><br><span class=\"line\">姓名/年龄:Students [name=阿斯顿, age=<span class=\"number\">13</span>],归属地重庆, 班级：<span class=\"number\">2000</span>级</span><br><span class=\"line\">姓名/年龄:Students [name=张伟, age=<span class=\"number\">98</span>],归属地北京, 班级：<span class=\"number\">2000</span>级</span><br><span class=\"line\">姓名/年龄:Students [name=坤璄烤, age=<span class=\"number\">23</span>],归属地浙江, 班级：<span class=\"number\">2000</span>级</span><br></pre></td></tr></table></figure></p>\n<p><em>总结归类:</em></p>\n<ul>\n<li>集合类基本都是在java.util下(<code>Eclipse: ctrl+o</code>)查看方法,Map集合中默认没有iterator(迭代器)方法;</li>\n<li>Map接口和Collection接口的不同<ul>\n<li>Map是双列的 而 Collection是单列的</li>\n<li>Map的键唯一 而 Collection的子体系Set是唯一的</li>\n<li>Map集合的数据结构值针对键有效跟值无关，Collection集合的数据结构是针对元素有效<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20190927094403.png\" alt=\"WeiyiGeek.集合类比\" title=\"\" class=\"\">\n                <p>WeiyiGeek.集合类比</p>\n            </figure>\n</li>\n</ul>\n</li>\n</ul>\n<p><br></p>\n<h5 id=\"集合框架LinkedHashMap\"><a href=\"#集合框架LinkedHashMap\" class=\"headerlink\" title=\"集合框架LinkedHashMap\"></a>集合框架LinkedHashMap</h5><p>描述:LinkedHashMap的特点底层是链表实现的,可以保证怎么存就怎么取,同时和Map特性一致重复key将覆盖其值；<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.weiyi.Map;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.LinkedHashMap;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo2_LinekedHashMap</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//LinkedHashMap自动去除重复的键值</span></span><br><span class=\"line\">    LinkedHashMap&lt;String, Integer&gt; lhm = <span class=\"keyword\">new</span> LinkedHashMap&lt;String, Integer&gt;();</span><br><span class=\"line\">    lhm.put(<span class=\"string\">\"张三\"</span>,<span class=\"number\">15</span>);</span><br><span class=\"line\">    lhm.put(<span class=\"string\">\"张四\"</span>,<span class=\"number\">25</span>);lhm.put(<span class=\"string\">\"王五\"</span>,<span class=\"number\">35</span>);lhm.put(<span class=\"string\">\"赵六\"</span>,<span class=\"number\">25</span>);</span><br><span class=\"line\">    lhm.put(<span class=\"string\">\"张三\"</span>,<span class=\"number\">55</span>);</span><br><span class=\"line\">    System.out.println(lhm);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//#执行结果</span></span><br><span class=\"line\">&#123;张三=<span class=\"number\">55</span>, 张四=<span class=\"number\">25</span>, 王五=<span class=\"number\">35</span>, 赵六=<span class=\"number\">25</span>&#125;</span><br></pre></td></tr></table></figure><br><br></p>\n<h5 id=\"集合框架TreeMap\"><a href=\"#集合框架TreeMap\" class=\"headerlink\" title=\"集合框架TreeMap\"></a>集合框架TreeMap</h5><p>描述:TreeMap需要对输入集合的元素进行排序，所以效率自然没有HashMap高;<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.weiyi.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Comparator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.TreeMap;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.weiyi.Collection.Students;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo3_TreeMap</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//示例1.TreeMap集合采用com.weiyi.Collection.Students包中Students类当作对象作为Key(按照年龄进行排序),String为生源地</span></span><br><span class=\"line\">    TreeMap&lt;Students, String&gt; tm = <span class=\"keyword\">new</span> TreeMap&lt;&gt;();  <span class=\"comment\">//TreeMap对象采用了compareTo进行比较去除重复(如不重写则会导致ClassCastException异常)</span></span><br><span class=\"line\">    tm.put(<span class=\"keyword\">new</span> Students(<span class=\"string\">\"颜国富\"</span>,<span class=\"number\">26</span>), <span class=\"string\">\"北京\"</span>);</span><br><span class=\"line\">    tm.put(<span class=\"keyword\">new</span> Students(<span class=\"string\">\"喻艳华\"</span>,<span class=\"number\">27</span>), <span class=\"string\">\"上海\"</span>);</span><br><span class=\"line\">    tm.put(<span class=\"keyword\">new</span> Students(<span class=\"string\">\"张三丰\"</span>,<span class=\"number\">100</span>), <span class=\"string\">\"深圳\"</span>);</span><br><span class=\"line\">    tm.put(<span class=\"keyword\">new</span> Students(<span class=\"string\">\"颜国富\"</span>,<span class=\"number\">26</span>), <span class=\"string\">\"广州\"</span>);   <span class=\"comment\">//覆盖第一条</span></span><br><span class=\"line\">    System.out.println(tm);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//示例2.匿名类Comparator重写compare方法实现按照姓名排序(升序)</span></span><br><span class=\"line\">    TreeMap&lt;Students, String&gt; ss = <span class=\"keyword\">new</span> TreeMap&lt;Students, String&gt;(<span class=\"keyword\">new</span> Comparator&lt;Students&gt;() &#123;</span><br><span class=\"line\">      <span class=\"meta\">@Override</span></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(Students o1, Students o2)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> num = o1.getName().compareTo(o2.getName());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> num == <span class=\"number\">0</span> ? o1.getAge() - o2.getAge():num ;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    ss.put(<span class=\"keyword\">new</span> Students(<span class=\"string\">\"颜国富\"</span>,<span class=\"number\">26</span>), <span class=\"string\">\"北京\"</span>);</span><br><span class=\"line\">    ss.put(<span class=\"keyword\">new</span> Students(<span class=\"string\">\"喻艳华\"</span>,<span class=\"number\">27</span>), <span class=\"string\">\"上海\"</span>);</span><br><span class=\"line\">    ss.put(<span class=\"keyword\">new</span> Students(<span class=\"string\">\"三丰\"</span>,<span class=\"number\">100</span>), <span class=\"string\">\"深圳\"</span>);</span><br><span class=\"line\">    ss.put(<span class=\"keyword\">new</span> Students(<span class=\"string\">\"颜国富\"</span>,<span class=\"number\">26</span>), <span class=\"string\">\"广州\"</span>);   <span class=\"comment\">//同样是覆盖第一条</span></span><br><span class=\"line\">    System.out.println(ss);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">'喻'</span> + <span class=\"number\">0</span>);  <span class=\"comment\">//可以查看unicode码得出顺序</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">'张'</span> + <span class=\"number\">0</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">'颜'</span> + <span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//#执行结果</span></span><br><span class=\"line\">&#123;Students [name=颜国富, age=<span class=\"number\">26</span>]=广州, Students [name=喻艳华, age=<span class=\"number\">27</span>]=上海, Students [name=张三丰, age=<span class=\"number\">100</span>]=深圳&#125;</span><br><span class=\"line\">&#123;Students [name=三丰, age=<span class=\"number\">100</span>]=深圳, Students [name=喻艳华, age=<span class=\"number\">27</span>]=上海, Students [name=颜国富, age=<span class=\"number\">26</span>]=广州&#125;</span><br><span class=\"line\"><span class=\"number\">21947</span></span><br><span class=\"line\"><span class=\"number\">24352</span></span><br><span class=\"line\"><span class=\"number\">39068</span></span><br></pre></td></tr></table></figure></p>\n<hr>\n\n<h4 id=\"集合框架Hashtable\"><a href=\"#集合框架Hashtable\" class=\"headerlink\" title=\"集合框架Hashtable\"></a>集合框架Hashtable</h4><p><em>HashMap和Hashtable的区别?</em></p>\n<ul>\n<li>区别1: Hashtable是JDK1.0版本出现的,是线程安全的效率低,HashMap是JDK1.2版本出现的,是线程不安全的效率高</li>\n<li>区别2: Hashtable<code>不可以存储null键和null值</code>,HashMap<code>可以存储null键和null值</code>;(与Victor命运差不多)</li>\n</ul>\n<p>基础示例:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.weiyi.Map;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Hashtable;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo5_Hashtable</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//HashMap与Hashtable的区别</span></span><br><span class=\"line\">    HashMap&lt;String, Integer&gt; hM = <span class=\"keyword\">new</span> HashMap&lt;String, Integer&gt;();</span><br><span class=\"line\">    hM.put(<span class=\"keyword\">null</span>, <span class=\"number\">23</span>);</span><br><span class=\"line\">    hM.put(<span class=\"string\">\"张三\"</span>, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"HashMap在键值为null的情况下正确执行\"</span> + hM);</span><br><span class=\"line\">    </span><br><span class=\"line\">    Hashtable&lt;String, Integer&gt; ht = <span class=\"keyword\">new</span> Hashtable&lt;String, Integer&gt;();</span><br><span class=\"line\">    ht.put(<span class=\"keyword\">null</span>,<span class=\"number\">25</span>);</span><br><span class=\"line\">    ht.put(<span class=\"string\">\"我是谁\"</span>,<span class=\"keyword\">null</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"Hashtable在键值为null的情况下不能正确执行(所以本句不输出)\"</span> + ht);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//######执行结果#######</span></span><br><span class=\"line\">HashMap在键值为<span class=\"keyword\">null</span>的情况下正确执行&#123;<span class=\"keyword\">null</span>=<span class=\"number\">23</span>, 张三=<span class=\"keyword\">null</span>&#125;</span><br><span class=\"line\">Exception in thread <span class=\"string\">\"main\"</span> java.lang.NullPointerException</span><br><span class=\"line\">  at java.util.Hashtable.put(Hashtable.java:<span class=\"number\">465</span>)</span><br><span class=\"line\">  at com.weiyi.Map.Demo5_Hashtable.main(Demo5_Hashtable.java:<span class=\"number\">16</span>)</span><br></pre></td></tr></table></figure></p>\n<p>总结：为了能在输入null键值之后HashMap还能够正常执行程序;</p>\n<hr>\n\n<h4 id=\"工具类Collections\"><a href=\"#工具类Collections\" class=\"headerlink\" title=\"工具类Collections\"></a>工具类Collections</h4><p>描述:Collections类概述针对集合操作的工具类,常用的方法如下:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//#Collections成员方法(字面意思您懂的))</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(List&lt;T&gt; list)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; <span class=\"keyword\">int</span> <span class=\"title\">binarySearch</span><span class=\"params\">(List&lt;?&gt; list,T key)</span> <span class=\"comment\">//搜索到返回搜索键的索引,否则返回(-(插入点) - 1)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; T <span class=\"title\">max</span><span class=\"params\">(Collection&lt;?&gt; coll)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">reverse</span><span class=\"params\">(List&lt;?&gt; list)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">shuffle</span><span class=\"params\">(List&lt;?&gt; list)</span></span></span><br></pre></td></tr></table></figure></p>\n<p>示例1:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.weiyi.Collections;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Collections;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo1_CollectionsUse</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//1.Collections工具类的基础使用</span></span><br><span class=\"line\">    ArrayList&lt;String&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;String&gt;();</span><br><span class=\"line\">    list.add(<span class=\"string\">\"c\"</span>);</span><br><span class=\"line\">    list.add(<span class=\"string\">\"d\"</span>);</span><br><span class=\"line\">    list.add(<span class=\"string\">\"a\"</span>);</span><br><span class=\"line\">    list.add(<span class=\"string\">\"b\"</span>);</span><br><span class=\"line\">    list.add(<span class=\"string\">\"A\"</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"ArrayList 怎么存就会怎么取 : \"</span>  + list);</span><br><span class=\"line\"></span><br><span class=\"line\">    Collections.sort(list);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"经过Collections工具类排序后的结构: \"</span> + list); <span class=\"comment\">//String 默认安装acsii表排序</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">int</span> index = Collections.binarySearch(list, <span class=\"string\">\"a\"</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"查找到的结果的索引：\"</span> + index);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"查找到的结果的索引：\"</span> + Collections.binarySearch(list, <span class=\"string\">\"B\"</span>)); <span class=\"comment\">// -(插入点1)-1=-2</span></span><br><span class=\"line\">    <span class=\"comment\">//取最大最小</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"根据默认排序结果获取集合中最大值：\"</span>+Collections.max(list));</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"根据默认排序结果获取集合中最小值：\"</span>+Collections.min(list));</span><br><span class=\"line\">    <span class=\"comment\">//反转</span></span><br><span class=\"line\">    Collections.reverse(list);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"反转输出结果(从大到小): \"</span> + list);</span><br><span class=\"line\">    <span class=\"comment\">//随机排序</span></span><br><span class=\"line\">    Collections.shuffle(list);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"每次都随机的输出:\"</span> + list);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>执行结果:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ArrayList 怎么存就会怎么取 : [c, d, a, b, A]</span><br><span class=\"line\">经过Collections工具类排序后的结构: [A, a, b, c, d]</span><br><span class=\"line\">查找到的结果的索引：1</span><br><span class=\"line\">查找到的结果的索引：-2</span><br><span class=\"line\">根据默认排序结果获取集合中最大值：d</span><br><span class=\"line\">根据默认排序结果获取集合中最小值：A</span><br><span class=\"line\">反转输出结果(从大到小): [d, c, b, a, A]</span><br><span class=\"line\">每次都随机的输出:[d, b, a, c, A]</span><br></pre></td></tr></table></figure></p>\n<p>扑克牌示例(重点掌握思路):<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.weiyi.Collections;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Collections;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.TreeSet;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo2_Collections</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//需求:模拟地主洗牌和发牌，【牌没有排序】</span></span><br><span class=\"line\">    <span class=\"comment\">//1.创建扑克牌</span></span><br><span class=\"line\">    String[] pk = &#123;<span class=\"string\">\"A\"</span>,<span class=\"string\">\"2\"</span>,<span class=\"string\">\"3\"</span>,<span class=\"string\">\"4\"</span>,<span class=\"string\">\"5\"</span>,<span class=\"string\">\"6\"</span>,<span class=\"string\">\"7\"</span>,<span class=\"string\">\"8\"</span>,<span class=\"string\">\"9\"</span>,<span class=\"string\">\"10\"</span>,<span class=\"string\">\"J\"</span>,<span class=\"string\">\"Q\"</span>,<span class=\"string\">\"K\"</span>&#125;;</span><br><span class=\"line\">    String[] color = &#123;<span class=\"string\">\"红桃\"</span>,<span class=\"string\">\"黑桃\"</span>,<span class=\"string\">\"方片\"</span>,<span class=\"string\">\"梅花\"</span>&#125;;</span><br><span class=\"line\">    <span class=\"comment\">//拼接花色采用列表存放即可</span></span><br><span class=\"line\">    ArrayList&lt;String&gt; poker = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (String p : pk) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (String c : color) &#123;</span><br><span class=\"line\">        poker.add(c.concat(p));</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    poker.add(<span class=\"string\">\"大王\"</span>);</span><br><span class=\"line\">    poker.add(<span class=\"string\">\"小王\"</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"牌数：\"</span>+ poker.size() + <span class=\"string\">\"\\n\"</span> + poker + <span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//2.洗牌</span></span><br><span class=\"line\">    Collections.shuffle(poker);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//3.发牌和底牌</span></span><br><span class=\"line\">    ArrayList&lt;String&gt; A = <span class=\"keyword\">new</span> ArrayList&lt;String&gt;();</span><br><span class=\"line\">    ArrayList&lt;String&gt; C = <span class=\"keyword\">new</span> ArrayList&lt;String&gt;();</span><br><span class=\"line\">    ArrayList&lt;String&gt; B = <span class=\"keyword\">new</span> ArrayList&lt;String&gt;();</span><br><span class=\"line\">    ArrayList&lt;String&gt; dipai = <span class=\"keyword\">new</span> ArrayList&lt;String&gt;();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; poker.size(); i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>( i &gt;= poker.size() - <span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">        dipai.add(poker.get(i)); <span class=\"comment\">//存放三张底牌</span></span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i % <span class=\"number\">3</span> == <span class=\"number\">0</span>) &#123;   <span class=\"comment\">//精辟的地方来了，利用取余来发牌</span></span><br><span class=\"line\">        A.add(poker.get(i));</span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i % <span class=\"number\">3</span> == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        B.add(poker.get(i));</span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i % <span class=\"number\">3</span> == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        C.add(poker.get(i));</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//4.看牌(无排序)</span></span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"A:\"</span> + A);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"B:\"</span> + B);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"C:\"</span> + C);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"dipai:\"</span> + dipai);</span><br><span class=\"line\"></span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">//#################牌实现排序#################</span></span><br><span class=\"line\">    <span class=\"comment\">//1.创建扑克牌</span></span><br><span class=\"line\">    String[] p1 = &#123;<span class=\"string\">\"3\"</span>,<span class=\"string\">\"4\"</span>,<span class=\"string\">\"5\"</span>,<span class=\"string\">\"6\"</span>,<span class=\"string\">\"7\"</span>,<span class=\"string\">\"8\"</span>,<span class=\"string\">\"9\"</span>,<span class=\"string\">\"10\"</span>,<span class=\"string\">\"J\"</span>,<span class=\"string\">\"Q\"</span>,<span class=\"string\">\"K\"</span>,<span class=\"string\">\"A\"</span>,<span class=\"string\">\"2\"</span>&#125;;</span><br><span class=\"line\">    String[] c1 = &#123;<span class=\"string\">\"红桃\"</span>,<span class=\"string\">\"黑桃\"</span>,<span class=\"string\">\"方片\"</span>,<span class=\"string\">\"梅花\"</span>&#125;;</span><br><span class=\"line\">    <span class=\"comment\">//采用键值对来存储我们的牌(后面就方便我们排序了)</span></span><br><span class=\"line\">    HashMap&lt;Integer, String&gt; hm = <span class=\"keyword\">new</span> HashMap&lt;Integer, String&gt;();</span><br><span class=\"line\">    ArrayList&lt;Integer&gt; index = <span class=\"keyword\">new</span> ArrayList&lt;Integer&gt;();  <span class=\"comment\">//存储索引</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(String sp1 : p1)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"keyword\">for</span> (String sc1 : c1) &#123;</span><br><span class=\"line\">        index.add(i);</span><br><span class=\"line\">        hm.put(i++,sc1.concat(sp1));</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    index.add(i);</span><br><span class=\"line\">    hm.put(i++,<span class=\"string\">\"小王\"</span>);</span><br><span class=\"line\">    index.add(i);</span><br><span class=\"line\">    hm.put(i,<span class=\"string\">\"大王\"</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//洗牌</span></span><br><span class=\"line\">    Collections.shuffle(index);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//发牌</span></span><br><span class=\"line\">    TreeSet&lt;Integer&gt; a = <span class=\"keyword\">new</span> TreeSet&lt;Integer&gt;();</span><br><span class=\"line\">    TreeSet&lt;Integer&gt; b = <span class=\"keyword\">new</span> TreeSet&lt;Integer&gt;();</span><br><span class=\"line\">    TreeSet&lt;Integer&gt; c = <span class=\"keyword\">new</span> TreeSet&lt;Integer&gt;();</span><br><span class=\"line\">    TreeSet&lt;Integer&gt; dp = <span class=\"keyword\">new</span> TreeSet&lt;Integer&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i &lt; hm.size(); i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>( i &gt;= hm.size() - <span class=\"number\">3</span>)&#123;</span><br><span class=\"line\">        dp.add(index.get(i)); <span class=\"comment\">//存放三张底牌</span></span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i % <span class=\"number\">3</span> == <span class=\"number\">0</span>) &#123;   <span class=\"comment\">//精辟的地方来了，利用取余来发牌</span></span><br><span class=\"line\">        a.add(index.get(i));</span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i % <span class=\"number\">3</span> == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        b.add(index.get(i));</span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(i % <span class=\"number\">3</span> == <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">        c.add(index.get(i));</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//看牌(重复采用函数的形式值得学习)</span></span><br><span class=\"line\">    lookup(hm, dp, <span class=\"string\">\"底牌\"</span>);</span><br><span class=\"line\">    lookup(hm, a, <span class=\"string\">\"A\"</span>);</span><br><span class=\"line\">    lookup(hm, b, <span class=\"string\">\"B\"</span>);</span><br><span class=\"line\">    lookup(hm, c, <span class=\"string\">\"C\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">lookup</span><span class=\"params\">(HashMap&lt;Integer, String&gt; hm, TreeSet&lt;Integer&gt; dp,String name)</span> </span>&#123;</span><br><span class=\"line\">    ArrayList&lt;String&gt; flag = <span class=\"keyword\">new</span> ArrayList&lt;String&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (Integer idp : dp) &#123;</span><br><span class=\"line\">      flag.add(hm.get(idp));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"角色\"</span>+name+<span class=\"string\">\"的牌是:\\n\"</span>+flag);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>运行结果:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//#未排序</span></span><br><span class=\"line\">牌数：<span class=\"number\">54</span></span><br><span class=\"line\">[红桃A, 黑桃A, 方片A, 梅花A, 红桃<span class=\"number\">2</span>, 黑桃<span class=\"number\">2</span>, 方片<span class=\"number\">2</span>, 梅花<span class=\"number\">2</span>, 红桃<span class=\"number\">3</span>, 黑桃<span class=\"number\">3</span>, 方片<span class=\"number\">3</span>, 梅花<span class=\"number\">3</span>, 红桃<span class=\"number\">4</span>, 黑桃<span class=\"number\">4</span>, 方片<span class=\"number\">4</span>, 梅花<span class=\"number\">4</span>, 红桃<span class=\"number\">5</span>, 黑桃<span class=\"number\">5</span>, 方片<span class=\"number\">5</span>, 梅花<span class=\"number\">5</span>, 红桃<span class=\"number\">6</span>, 黑桃<span class=\"number\">6</span>, 方片<span class=\"number\">6</span>, 梅花<span class=\"number\">6</span>, 红桃<span class=\"number\">7</span>, 黑桃<span class=\"number\">7</span>, 方片<span class=\"number\">7</span>, 梅花<span class=\"number\">7</span>, 红桃<span class=\"number\">8</span>, 黑桃<span class=\"number\">8</span>, 方片<span class=\"number\">8</span>, 梅花<span class=\"number\">8</span>, 红桃<span class=\"number\">9</span>, 黑桃<span class=\"number\">9</span>, 方片<span class=\"number\">9</span>, 梅花<span class=\"number\">9</span>, 红桃<span class=\"number\">10</span>, 黑桃<span class=\"number\">10</span>, 方片<span class=\"number\">10</span>, 梅花<span class=\"number\">10</span>, 红桃J, 黑桃J, 方片J, 梅花J, 红桃Q, 黑桃Q, 方片Q, 梅花Q, 红桃K, 黑桃K, 方片K, 梅花K, 大王, 小王]</span><br><span class=\"line\"></span><br><span class=\"line\">A:[方片<span class=\"number\">10</span>, 红桃<span class=\"number\">5</span>, 黑桃J, 小王, 梅花<span class=\"number\">5</span>, 红桃<span class=\"number\">10</span>, 梅花<span class=\"number\">2</span>, 方片<span class=\"number\">4</span>, 黑桃<span class=\"number\">3</span>, 方片<span class=\"number\">3</span>, 方片Q, 红桃<span class=\"number\">2</span>, 黑桃K, 黑桃<span class=\"number\">9</span>, 红桃<span class=\"number\">8</span>, 梅花<span class=\"number\">10</span>, 红桃A]</span><br><span class=\"line\">B:[黑桃Q, 方片<span class=\"number\">6</span>, 方片<span class=\"number\">7</span>, 方片A, 方片J, 梅花<span class=\"number\">9</span>, 梅花<span class=\"number\">3</span>, 黑桃<span class=\"number\">8</span>, 梅花K, 红桃<span class=\"number\">7</span>, 红桃<span class=\"number\">4</span>, 方片<span class=\"number\">2</span>, 梅花<span class=\"number\">6</span>, 黑桃A, 梅花A, 梅花<span class=\"number\">8</span>, 黑桃<span class=\"number\">5</span>]</span><br><span class=\"line\">C:[黑桃<span class=\"number\">4</span>, 方片<span class=\"number\">5</span>, 红桃<span class=\"number\">9</span>, 红桃J, 梅花<span class=\"number\">7</span>, 黑桃<span class=\"number\">6</span>, 红桃K, 方片K, 梅花Q, 梅花<span class=\"number\">4</span>, 红桃Q, 黑桃<span class=\"number\">7</span>, 方片<span class=\"number\">9</span>, 大王, 红桃<span class=\"number\">3</span>, 黑桃<span class=\"number\">10</span>, 方片<span class=\"number\">8</span>]</span><br><span class=\"line\">dipai:[黑桃<span class=\"number\">2</span>, 红桃<span class=\"number\">6</span>, 梅花J]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//#排序</span></span><br><span class=\"line\">角色底牌的牌是:</span><br><span class=\"line\">[梅花<span class=\"number\">9</span>, 黑桃<span class=\"number\">10</span>, 红桃J]</span><br><span class=\"line\">角色A的牌是:</span><br><span class=\"line\">[黑桃<span class=\"number\">3</span>, 方片<span class=\"number\">3</span>, 梅花<span class=\"number\">3</span>, 方片<span class=\"number\">4</span>, 红桃<span class=\"number\">6</span>, 黑桃<span class=\"number\">6</span>, 梅花<span class=\"number\">6</span>, 红桃<span class=\"number\">7</span>, 方片<span class=\"number\">7</span>, 梅花<span class=\"number\">7</span>, 红桃<span class=\"number\">10</span>, 方片Q, 黑桃K, 梅花K, 红桃A, 梅花A, 大王]</span><br><span class=\"line\">角色B的牌是:</span><br><span class=\"line\">[黑桃<span class=\"number\">5</span>, 方片<span class=\"number\">5</span>, 黑桃<span class=\"number\">7</span>, 红桃<span class=\"number\">8</span>, 黑桃<span class=\"number\">8</span>, 梅花<span class=\"number\">8</span>, 方片<span class=\"number\">10</span>, 梅花<span class=\"number\">10</span>, 方片J, 梅花J, 红桃Q, 梅花Q, 方片K, 黑桃A, 黑桃<span class=\"number\">2</span>, 方片<span class=\"number\">2</span>, 小王]</span><br><span class=\"line\">角色C的牌是:</span><br><span class=\"line\">[红桃<span class=\"number\">3</span>, 红桃<span class=\"number\">4</span>, 黑桃<span class=\"number\">4</span>, 梅花<span class=\"number\">4</span>, 红桃<span class=\"number\">5</span>, 梅花<span class=\"number\">5</span>, 方片<span class=\"number\">6</span>, 方片<span class=\"number\">8</span>, 红桃<span class=\"number\">9</span>, 黑桃<span class=\"number\">9</span>, 方片<span class=\"number\">9</span>, 黑桃J, 黑桃Q, 红桃K, 方片A, 红桃<span class=\"number\">2</span>, 梅花<span class=\"number\">2</span>]</span><br></pre></td></tr></table></figure></p>\n<hr>\n\n<h4 id=\"集合总结\"><a href=\"#集合总结\" class=\"headerlink\" title=\"集合总结\"></a>集合总结</h4><h5 id=\"泛型知识\"><a href=\"#泛型知识\" class=\"headerlink\" title=\"泛型知识\"></a>泛型知识</h5><p>描述:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#泛型固定上边界</span></span><br><span class=\"line\">? extends E  <span class=\"comment\">#把子类对象添加到父类对象集合里面去,（父类引用指向子类对象） -&gt; 放进去就是继承extend</span></span><br><span class=\"line\">比如:Collection.addAll(Collection&lt;? extends E&gt; c) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#泛型固定下边界</span></span><br><span class=\"line\">? super E   <span class=\"comment\">#子类也可以使用父类的比较器进行比较排序(也是同样的父类指向子类对象) -&gt; 拿出来放入比较器就是super</span></span><br><span class=\"line\">比如:TreeSet(Comparator&lt;? super E&gt; comparator) </span><br><span class=\"line\">比如:TreeMap(Comparator&lt;? super K&gt; comparator)</span><br></pre></td></tr></table></figure></p>\n<p>下面的案例我们基于Students生成一个子类ChildStudents:<br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20190927200928.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.weiyi.Collections;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.weiyi.Collection.Students;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ChildStudents</span> <span class=\"keyword\">extends</span> <span class=\"title\">Students</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ChildStudents</span><span class=\"params\">()</span> </span>&#123;<span class=\"keyword\">super</span>();&#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ChildStudents</span><span class=\"params\">(String name, <span class=\"keyword\">int</span> age)</span> </span>&#123;<span class=\"keyword\">super</span>(name, age);&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p>泛型示例1：泛型固定上边界<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.weiyi.Collections;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.weiyi.Collection.Students;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo3_Extends</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    ArrayList&lt;Students&gt; al = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">    al.add(<span class=\"keyword\">new</span> Students(<span class=\"string\">\"父类测试\"</span>, <span class=\"number\">23</span>));</span><br><span class=\"line\">    al.add(<span class=\"keyword\">new</span> Students(<span class=\"string\">\"父类安全开发\"</span>, <span class=\"number\">30</span>));</span><br><span class=\"line\">    </span><br><span class=\"line\">    ArrayList&lt;ChildStudents&gt; a2 = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">    a2.add(<span class=\"keyword\">new</span> ChildStudents(<span class=\"string\">\"子类测试\"</span>, <span class=\"number\">23</span>));</span><br><span class=\"line\">    a2.add(<span class=\"keyword\">new</span> ChildStudents(<span class=\"string\">\"子类安全开发\"</span>, <span class=\"number\">30</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    al.addAll(a2); <span class=\"comment\">//关键点:把子类对象添加到父类对象集合里面去</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p>泛型示例2：泛型固定下边界<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.weiyi.Collections;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Comparator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.TreeSet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.weiyi.Collection.Students;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo4_super</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    TreeSet&lt;Students&gt; ts1 = <span class=\"keyword\">new</span> TreeSet&lt;&gt;(<span class=\"keyword\">new</span> CompareByAge());</span><br><span class=\"line\">    ts1.add(<span class=\"keyword\">new</span> Students(<span class=\"string\">\"父类\"</span>, <span class=\"number\">1024</span>));</span><br><span class=\"line\">    ts1.add(<span class=\"keyword\">new</span> Students(<span class=\"string\">\"父类1\"</span>, <span class=\"number\">1021</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">    TreeSet&lt;ChildStudents&gt; ts2 = <span class=\"keyword\">new</span> TreeSet&lt;&gt;(<span class=\"keyword\">new</span> CompareByAge());</span><br><span class=\"line\">    ts2.add(<span class=\"keyword\">new</span> ChildStudents(<span class=\"string\">\"子类\"</span>, <span class=\"number\">1023</span>));</span><br><span class=\"line\">    ts2.add(<span class=\"keyword\">new</span> ChildStudents(<span class=\"string\">\"子类\"</span>, <span class=\"number\">1021</span>));</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//关键点注意ts1与ts2的输出</span></span><br><span class=\"line\">    System.out.println(ts1);</span><br><span class=\"line\">    System.out.println(ts2);  <span class=\"comment\">//子类对象同样的可以进行按照age排序(说白了子类也可以采用父类的比较器)</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//重写比较器来验证泛型固定下边界(Students对象作比较)</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CompareByAge</span> <span class=\"keyword\">implements</span> <span class=\"title\">Comparator</span>&lt;<span class=\"title\">Students</span>&gt; </span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compare</span><span class=\"params\">(Students o1, Students o2)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> num = o1.getAge() - o2.getAge();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num == <span class=\"number\">0</span> ? o1.getName().compareTo(o2.getName()) : num;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//#执行结果</span></span><br><span class=\"line\">[Students [name=父类<span class=\"number\">1</span>, age=<span class=\"number\">1021</span>], Students [name=父类, age=<span class=\"number\">1024</span>]]</span><br><span class=\"line\">[Students [name=子类, age=<span class=\"number\">1021</span>], Students [name=子类, age=<span class=\"number\">1023</span>]]</span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20190927204006.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n<p><br></p>\n<h5 id=\"学习总结\"><a href=\"#学习总结\" class=\"headerlink\" title=\"学习总结\"></a>学习总结</h5><p>描述:<br>Collection:</p>\n<ul>\n<li>List(存取有序，有索引，可以重复)<ul>\n<li>ArrayList(底层是数组实现，线程不安全、查找和修改比较快，增和删比较慢)</li>\n<li>LinkedList(底层是链表实现，线程不安全、查找和修改比较慢，增和删比较快)</li>\n<li>Vector(底层是数组实现的,线程安全的、增删改查都慢)</li>\n<li>选用:查找和删除多采用ArrayList,如果增和删多用LinkedList,如果都多用ArrayList;</li>\n</ul>\n</li>\n<li>Set(存取无序,无索引,不可重复)<ul>\n<li>HashSet(底层哈希算法实现)<ul>\n<li>LinkedHashSet底层是链表实现,保证元素唯一和HashSet原理一致</li>\n</ul>\n</li>\n<li>TreeSet(底层二叉数算法实现)<br>-选用:如果在开发中不需要对存储的元素进行排序,在开发的时候大多使用的HashSet(效率比较高),TreeSet在面试中几种排序方</li>\n</ul>\n</li>\n</ul>\n<p>Map</p>\n<ul>\n<li>HashMap(底层是哈希算法,针对键)<ul>\n<li>LinekedHashMap(底层是链表，针对的键)</li>\n</ul>\n</li>\n<li>TreeMap(底层是二叉树算法,针对键)</li>\n<li>选用:开发中一般选用HashMap,除非您要对键值对进行排序;</li>\n</ul>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Development","path":"api/categories/Development.json"},{"name":"Programming","path":"api/categories/Programming.json"}],"tags":[{"name":"JAVA","path":"api/tags/JAVA.json"}]}