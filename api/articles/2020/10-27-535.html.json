{"title":"9-Kubernetes入门基础之集群安全介绍","slug":"虚拟云容/云容器/Kubernetes/9-Kubernetes入门基础之集群安全介绍","date":"2020-10-27T10:37:47.000Z","updated":"2022-03-29T05:39:03.675Z","url":"2020/10-27-535.html","path":"api/articles/2020/10-27-535.html.json","covers":["https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/2/20201124151922.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/2/20201124154008.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/2/20201124154117.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/2/20201124155548.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/2/20201124160008.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2021/1/20210225145630.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2021/1/20210225152937.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2021/1/20210225163023.png"],"content":"<p>[TOC]</p>\n<h2 id=\"Security-集群安全\"><a href=\"#Security-集群安全\" class=\"headerlink\" title=\"Security - 集群安全\"></a>Security - 集群安全</h2><p>描述: Kubernetes 作为一个分布式的集群管理工具，保证集群的安全性是非常至关重要的。同时由于API Server是集群内部各个组件通信的中介，也是外部控制的入口，所以Kubernetes的安全机制基本是就是围绕保护<code>API Server</code> 来进行设计的;</p>\n<p>Kubernetes 使用了<code>认证(Authentication)、鉴权(Authorization)、准入控制(Admission Control)</code>三步来保证 每个 请求 API Server 都是安全;</p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/2/20201124151922.png\" alt=\"WeiyiGeek.Kubernetes机制说明\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Kubernetes机制说明</p>\n            </figure>\n<p><br></p>\n<h3 id=\"1-Authentication（认证）\"><a href=\"#1-Authentication（认证）\" class=\"headerlink\" title=\"1) Authentication（认证）\"></a>1) Authentication（认证）</h3><p>描述: 开启TLS时所有的请求都需要首先认证，k8s支持多种认证机制并支持同时开启多个认证插件(<code>只需要一个认证通过即可</code>)，如果认证成功则用户的username会传入授权模块做进一步的授权验证，而对于认证失败的请求则<code>返回 HTTP 401</code>;</p>\n<p><strong>认证分类:</strong></p>\n<ul>\n<li><p>1.HTTP Token 认证: 通过一个Token（字符串） 来识别合法用户;</p>\n<blockquote>\n<p>简述: HTTP Token 的认证是用一个很长的特殊编码方式的并且难以被模仿的字符串-Token 来表达客户的一种方式(很长的很复杂的宇符串)。每个Token 对应一个用户名存储在 API Server 能访问的文件中。当客户端发起API调用请求时，需要在 HTTP Header 里放入 Token。</p>\n</blockquote>\n</li>\n<li><p>2.HTTP Base 认证: 通过用户名+密码的方式认证;</p>\n<blockquote>\n<p>简述: 用户名:密码用 BASE64 算法进行编码后的宇符串放在 HTTP Request 中的 HeatherAuthorization 域里发送给服务端，服务端收到后进行编码从中获取用户名及密码；</p>\n</blockquote>\n</li>\n<li><p>3.HTTPS 认证 : 最严格的认证方式之一;</p>\n<blockquote>\n<p>简述:基于CA根证书签名(签发)的客户端/服务端身份认证方式(<code>普遍采用方案</code>);</p>\n</blockquote>\n</li>\n</ul>\n<p>Tips: k8s 不管理用户虽然k8s认证授权采用了username但是k8s并不直接管理用户，不能创建user对象也不存储username。</p>\n<p><br></p>\n<p><strong>认证流程：</strong></p>\n<ul>\n<li>HTTPS 证书双向认证流程:</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/2/20201124154008.png\" alt=\"WeiyiGeek.HTTPS双向认证\" title=\"\" class=\"\">\n                <p>WeiyiGeek.HTTPS双向认证</p>\n            </figure>\n<ul>\n<li>K8S 各节点认证流程:</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/2/20201124154117.png\" alt=\"WeiyiGeek.节点认证\" title=\"\" class=\"\">\n                <p>WeiyiGeek.节点认证</p>\n            </figure>\n<p><br></p>\n<p><em>证书颁发说明:</em></p>\n<ul>\n<li>1.手动签发: 通过 k8s 集群的跟 ca 进行签发HTTPS 证书;</li>\n<li>2.自动签发: kubelet 首次访问 API Server 时，使用 token 做认证，通过后 Contrller Manager 会为 kubelet 生成一个证书，以后的访问都是用证书做认证了;</li>\n</ul>\n<p><br></p>\n<p><strong>访问类型:</strong></p>\n<ul>\n<li>1.Kubenetes 组件 对API Server 的访问: <code>kubectl、Controller Manager、Scheduler、kubelet、kube-proxy</code></li>\n<li>2.Kubernetes 管理的Pod容器 对API Server 的访问: Pod (dashborad 也是以Pod 形式运行)</li>\n</ul>\n<p><br></p>\n<p><strong>安全性说明:</strong></p>\n<ul>\n<li>1.Controller Manager、Scheduler 与 API Server 在同一台机器，所以直接使用API Server 的非安全端口访问，可以在Node节点时添加 <code>--insecure-bind-address=127.0.0.1</code> 防止不必要的性能消耗;</li>\n<li>2.kubectl、 kubelet、 kube-proxy 访问 API Server 就都需要证书进行 HTTPS 双向认证;</li>\n</ul>\n<p><br></p>\n<h4 id=\"认证文件\"><a href=\"#认证文件\" class=\"headerlink\" title=\"认证文件\"></a>认证文件</h4><p>描述: 上面我们说过k8s两种访问方式一是对API Server的访问通过（kubeconfig），二是对管理的Pod对容器的访问通过 SA（ServiceAccount）;</p>\n<h5 id=\"kubeconfig\"><a href=\"#kubeconfig\" class=\"headerlink\" title=\"kubeconfig\"></a>kubeconfig</h5><p>描述: kubeconfig 文件包含集群参数 (<code>CA证书、API Serve访问证书</code>)，客户端参数(<code>上面生成的证书和私钥</code>)，集群context信息(集群名称、用户名);</p>\n<p>Tips: Kubenetes 组件通过启动时<code>指定不同的 kubeconfig 文件可以切换到不同的集群</code>;</p>\n<p><br/></p>\n<h5 id=\"ServiceAccount\"><a href=\"#ServiceAccount\" class=\"headerlink\" title=\"ServiceAccount\"></a>ServiceAccount</h5><p>描述: Pod中的容器访问API  Server。因为Pod的创建、销毁是动态的，所以要为它手动生成证书就不可行了。</p>\n<p>Tips: Kubenetes 通过使用了Service Account 解决 Pod 访问API Server的认证问题; (后面会详细讲解)</p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/2/20201124155548.png\" alt=\"WeiyiGeek.K8s的Pod与组件认证验证\" title=\"\" class=\"\">\n                <p>WeiyiGeek.K8s的Pod与组件认证验证</p>\n            </figure>\n<p><br/></p>\n<p><strong>Q: Secret 与 SA 的关系</strong><br>描述: Kubernetes 设计了一种K8s 对象叫做 Secret 分为两类，</p>\n<ul>\n<li>另一种是用于 ServiceAccount 的 <code>service-account token</code>，</li>\n<li>另一种是用于保存用户自定义保密信息的 <code>Opaque, Service Account</code> 中用到包含三个部分: <code>Token、ca.crt、namespace</code><ul>\n<li>token  是使用API Server 私钥签名的JWT格式, 用于访问API Server时Server端认证;</li>\n<li>ca.crt 根证书用于 Client端验证 <code>API Server</code> 发送的证书;</li>\n<li>namespace 标识这个 <code>service-account-token</code> 的作用域名空间;</li>\n</ul>\n</li>\n</ul>\n<p>PS : 默认情况下<code>每个 namespace 都会有一个ServiceAccount</code>，如果 Pod 在创建时没有指定ServiceAccount, 就会使用Pod 所属的 namespace 的 ServiceAccount<br>默认挂载目录：<code>/run/secrets/kubernetes.io/serviceaccount/</code><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 所有命名空间的</span></span><br><span class=\"line\">~$ kubectl get secret --all-namespaces</span><br><span class=\"line\">  <span class=\"comment\"># NAMESPACE         NAME                                             TYPE                                  DATA   AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># default           default-token-zglkd                              kubernetes.io/service-account-token   3      18d</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 默认的命名空间的</span></span><br><span class=\"line\">~$ kubectl describe secret default-token-zglkd --namespace=default</span><br><span class=\"line\">  <span class=\"comment\"># Name:         default-token-zglkd</span></span><br><span class=\"line\">  <span class=\"comment\"># Namespace:    default</span></span><br><span class=\"line\">  <span class=\"comment\"># Labels:       &lt;none&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># Annotations:  kubernetes.io/service-account.name: default</span></span><br><span class=\"line\">  <span class=\"comment\">#               kubernetes.io/service-account.uid: 938abb62-6ccf-468d-ac60-46feb77cdbf5</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Type:  kubernetes.io/service-account-token</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Data</span></span><br><span class=\"line\">  <span class=\"comment\"># ====</span></span><br><span class=\"line\">  <span class=\"comment\"># namespace:  7 bytes</span></span><br><span class=\"line\">  <span class=\"comment\"># token:      eyJhbGciOi.....JSUzI1Ni</span></span><br><span class=\"line\">  <span class=\"comment\"># ca.crt:     1066 bytes</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># devops 命名空间的</span></span><br><span class=\"line\">~$ kubectl get secret -n devops</span><br><span class=\"line\">  <span class=\"comment\"># NAME                     TYPE                                  DATA   AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># default-token-mv72l      kubernetes.io/service-account-token   3      39d</span></span><br><span class=\"line\"></span><br><span class=\"line\">~$ kubectl get secret -n devops -o yaml</span><br><span class=\"line\">  <span class=\"comment\"># apiVersion: v1</span></span><br><span class=\"line\">  <span class=\"comment\"># items:</span></span><br><span class=\"line\">  <span class=\"comment\"># - apiVersion: v1</span></span><br><span class=\"line\">  <span class=\"comment\">#   data:</span></span><br><span class=\"line\">  <span class=\"comment\">#     ca.crt: LS0tLS1...0tCg==</span></span><br><span class=\"line\">  <span class=\"comment\">#     namespace: ZGV2b3Bz</span></span><br><span class=\"line\">  <span class=\"comment\">#     token: ZXlKaGJHY...N3JR</span></span><br><span class=\"line\">  <span class=\"comment\">#   kind: Secret</span></span><br><span class=\"line\">  <span class=\"comment\">#   metadata:</span></span><br><span class=\"line\">  <span class=\"comment\">#     annotations:</span></span><br><span class=\"line\">  <span class=\"comment\">#       kubernetes.io/service-account.name: default</span></span><br><span class=\"line\">  <span class=\"comment\">#       kubernetes.io/service-account.uid: 6458d317-c72e-4fe9-b8fd-ed65b5b52718</span></span><br><span class=\"line\">  <span class=\"comment\">#     creationTimestamp: \"2021-01-15T07:44:41Z\"</span></span><br><span class=\"line\">  <span class=\"comment\">#     managedFields:</span></span><br><span class=\"line\">  <span class=\"comment\">#     - apiVersion: v1</span></span><br><span class=\"line\">  <span class=\"comment\">#       fieldsType: FieldsV1</span></span><br><span class=\"line\">  <span class=\"comment\">#       fieldsV1:</span></span><br><span class=\"line\">  <span class=\"comment\">#         f:data:</span></span><br><span class=\"line\">  <span class=\"comment\">#           .: &#123;&#125;</span></span><br><span class=\"line\">  <span class=\"comment\">#           f:ca.crt: &#123;&#125;</span></span><br><span class=\"line\">  <span class=\"comment\">#           f:namespace: &#123;&#125;</span></span><br><span class=\"line\">  <span class=\"comment\">#           f:token: &#123;&#125;</span></span><br><span class=\"line\">  <span class=\"comment\">#         f:metadata:</span></span><br><span class=\"line\">  <span class=\"comment\">#           f:annotations:</span></span><br><span class=\"line\">  <span class=\"comment\">#             .: &#123;&#125;</span></span><br><span class=\"line\">  <span class=\"comment\">#             f:kubernetes.io/service-account.name: &#123;&#125;</span></span><br><span class=\"line\">  <span class=\"comment\">#             f:kubernetes.io/service-account.uid: &#123;&#125;</span></span><br><span class=\"line\">  <span class=\"comment\">#         f:type: &#123;&#125;</span></span><br><span class=\"line\">  <span class=\"comment\">#       manager: kube-controller-manager</span></span><br><span class=\"line\">  <span class=\"comment\">#       operation: Update</span></span><br><span class=\"line\">  <span class=\"comment\">#       time: \"2021-01-15T07:44:41Z\"</span></span><br><span class=\"line\">  <span class=\"comment\">#     name: default-token-mv72l</span></span><br><span class=\"line\">  <span class=\"comment\">#     namespace: devops</span></span><br><span class=\"line\">  <span class=\"comment\">#     resourceVersion: \"1064652\"</span></span><br><span class=\"line\">  <span class=\"comment\">#     selfLink: /api/v1/namespaces/devops/secrets/default-token-mv72l</span></span><br><span class=\"line\">  <span class=\"comment\">#     uid: 9bc8a851-70b5-4814-9ce8-018250d90766</span></span><br><span class=\"line\">  <span class=\"comment\">#   type: kubernetes.io/service-account-token</span></span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<h3 id=\"2-Authorization（鉴权）\"><a href=\"#2-Authorization（鉴权）\" class=\"headerlink\" title=\"2) Authorization（鉴权）\"></a>2) Authorization（鉴权）</h3><p>描述: 上面认证过程只是确认通信的双方都确认了对方是可信的可以相互通信，此时认证成功之后的到了授权模块，与认证Auth类似k8s也支持多种授权机制，并支持同时开启多个授权插件(一个验证成功即可)，如果授权成功则用户的请求会发送到准入控制模块做进一步的请求验证，而对于授权失败的请求则返回HTTP 403，<code>即鉴权是确定请求方有哪些资源的权限</code>。</p>\n<p><br/></p>\n<p>API Server 目前支持以下几种授权策略（<code>可通过APIServer 的启动参数“--authorization-mode”设置</code>)</p>\n<ul>\n<li>1.AlwaysDeny: 表示拒绝所有的请求，一般用于测试</li>\n<li>2.AlwaysAllow: 允许接收所有请求，如果集群不需要授权流程，则可以采用该策略</li>\n<li>3.ABAC (Attribute-Based Access Control): 基于属性的访问控制，表示使用用户配置的授权规则对用户请求进行匹配和控制</li>\n<li>4.Webbook: 通过调用外部REST服务对用户进行授权</li>\n<li>5.RBAC (Role-Based Access Control): 基于角色的访问控制(默认规则) 后续详细讲解</li>\n</ul>\n<h4 id=\"使用-RBAC-鉴权\"><a href=\"#使用-RBAC-鉴权\" class=\"headerlink\" title=\"使用 - RBAC - 鉴权\"></a>使用 - RBAC - 鉴权</h4><p>描述: 实际生产环境中往往需要对不同运维人员赋预不同的权限，而根据实际情况也可能会赋予开发人员只读的权限此时<code>我们可以使用RBAC进行鉴权</code>; </p>\n<p>RBAC(<code>Role-Based Access Control</code>) 基于角色的访问控制鉴权机制，使用 rbac.authorization.k8s.io API 组 来驱动鉴权决定，允许你通过 Kubernetes API 动态配置策略。  </p>\n<p><br/></p>\n<p>比较于其它访问控制方式拥有以下优势:</p>\n<ul>\n<li>1.对集群中的资源和非资源均拥有完整的覆盖</li>\n<li>2.整个RBAC完全由几个API对象完成，同其它API对象一样，可以用kubectl 或API进行操作</li>\n<li>3.可以在运行时进行调整，无需重启 API Server</li>\n</ul>\n<p>Tips : 在Kubernetes 1.5 中引入<code>现行版本成为默认标准</code>。<br>Tips : 在启动 API 服务器 时将 –authorization-mode 参数设置为一个逗号分隔的列表并确保其中包含 RBAC<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kube-apiserver --authorization-mode=Example,RBAC</span><br></pre></td></tr></table></figure><br>Tips : api-resources 资源名称角色与绑定一览表;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~$ kubectl api-resources | grep <span class=\"string\">\"Role\"</span></span><br><span class=\"line\">  <span class=\"comment\"># clusterrolebindings                            rbac.authorization.k8s.io      false        ClusterRoleBinding</span></span><br><span class=\"line\">  <span class=\"comment\"># clusterroles                                   rbac.authorization.k8s.io      false        ClusterRole</span></span><br><span class=\"line\">  <span class=\"comment\"># rolebindings                                   rbac.authorization.k8s.io      true         RoleBinding</span></span><br><span class=\"line\">  <span class=\"comment\"># roles                                          rbac.authorization.k8s.io      true         Role</span></span><br><span class=\"line\">~$ kubectl api-versions | grep <span class=\"string\">\"rbac.authorization.k8s.io\"</span></span><br><span class=\"line\">  <span class=\"comment\"># rbac.authorization.k8s.io/v1</span></span><br><span class=\"line\">  <span class=\"comment\"># rbac.authorization.k8s.io/v1beta1</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h5><p><strong>1.RBAC K8s对象说明</strong><br>描述: RBAC API 声明了四种  Kubernetes 对象：<code>Role、ClusterRole、RoleBinding、ClusterRoleBinding</code>, 4种对象类型均可以通过 kubectl 与 API 操作;</p>\n<p>RBAC的 API K8s对象图示:<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2020/2/20201124160008.png\" alt=\"WeiyiGeek.RBAC的APIK8s 对象\" title=\"\" class=\"\">\n                <p>WeiyiGeek.RBAC的APIK8s 对象</p>\n            </figure></p>\n<p><br></p>\n<p><strong>Q: 值得注意的是 Kubenetes 并不会提供用户管理, 那么 User、Group、ServiceAccount 指定的用户又是从哪里来的呢?</strong><br>描述: Kubenetes 组件 (<code>kubectl、kube-proxy</code>) 或是 其他自定义的用户在向CA申请证书时需要提供一个证书请求文件;</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># API Server 会把客户端证书的 CN 字段作为User，把 names.OU 字段作为 Group</span></span><br><span class=\"line\"><span class=\"string\">cat</span> <span class=\"string\">&gt; appuser-csr.yaml &lt;&lt;'END'</span></span><br><span class=\"line\"><span class=\"string\">&#123;</span></span><br><span class=\"line\"><span class=\"string\">  \"CN\": \"appuser\",  # 用户名称(User)</span></span><br><span class=\"line\"><span class=\"string\">  \"hosts\": [],</span></span><br><span class=\"line\"><span class=\"string\">  \"key\":&#123;</span></span><br><span class=\"line\"><span class=\"string\">    \"algo\": \"rsa\",</span></span><br><span class=\"line\"><span class=\"string\">    \"size\": 2048</span></span><br><span class=\"line\"><span class=\"string\">  &#125;,</span></span><br><span class=\"line\"><span class=\"string\">  \"names\":[</span></span><br><span class=\"line\"><span class=\"string\">    &#123;</span></span><br><span class=\"line\"><span class=\"string\">    \"C\": \"CN\",</span></span><br><span class=\"line\"><span class=\"string\">    \"ST\":\"TianJin\",</span></span><br><span class=\"line\"><span class=\"string\">    \"L\": \"TJ\",</span></span><br><span class=\"line\"><span class=\"string\">    \"O\": \"kubernetes\",</span></span><br><span class=\"line\"><span class=\"string\">    \"OU\": \"System\"  # 用户组(Group)</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">  ]</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">END</span></span><br></pre></td></tr></table></figure>\n<p>Tips : kubelet 使用 TLS Bootstaping 认证时 API Server 可以使用 <code>Bootstrap Tokens</code> 或者 <code>Token authenticationfile</code> 验证 token。</p>\n<p>Tips : 无论哪一种 Kubenetes 都会为token 绑定一个默认的 User 和 Group; Pod 使用 <code>ServiceAccount</code> 认证时 <code>service-account-token</code> 中的JWT会保存User信息, 有了用户信息再创建一对<code>角色/集群角色(角色绑定/集群角色绑定)</code>K8s 对象即<code>Role、RoleBinding、ClusterRole、ClusterRoleBinding</code>，就可以完成权限绑定了;</p>\n<p><br/></p>\n<h5 id=\"角色-Role-and-ClusterRole\"><a href=\"#角色-Role-and-ClusterRole\" class=\"headerlink\" title=\"角色 - Role and ClusterRole\"></a>角色 - Role and ClusterRole</h5><p>描述: 在 RBAC API中Role表示一组规则权限<code>只会增加(累加权限)</code>, 不存在一个资源一开始就有很多权限而通过RBAC对其进行减少的操作Role可以定义在一个namespace 中，如果想要跨namespace则可以创建ClusterRole</p>\n<p>Role 资源清单示例:<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Role</span> </span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">rbac.authorization.k8s.io/v1beta1</span> </span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  namespace:</span> <span class=\"string\">default</span> </span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">pod-reader</span> </span><br><span class=\"line\"><span class=\"attr\">rules:</span></span><br><span class=\"line\"><span class=\"attr\">- apiGroups:</span> <span class=\"string\">[\"\"]</span> <span class=\"comment\"># \"\" 标明 core API 组</span></span><br><span class=\"line\"><span class=\"attr\">  resources:</span> <span class=\"string\">[\"pods\"]</span> </span><br><span class=\"line\"><span class=\"attr\">  verbs:</span> <span class=\"string\">[\"get\",</span> <span class=\"string\">\"watch\"</span><span class=\"string\">,</span> <span class=\"string\">\"list\"</span><span class=\"string\">]</span></span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>描述: ClusterRole具有与Role相同的权限角色控制能力，不同的是<code>ClusterRole是集群级别的</code>其可以用于以下环境之中:</p>\n<ul>\n<li>集群范围资源（比如 节点（Node））</li>\n<li>非资源端点（比如 /healthz）</li>\n<li>跨名字空间访问的名字空间作用域的资源（如 Pods），比如你可以使用 ClusterRole 来允许某特定用户执行<code>kubectl get pods --all-namespaces</code></li>\n</ul>\n<p><br/></p>\n<p>ClusterRole 有若干用法:</p>\n<ul>\n<li>定义对某名字空间域对象的访问权限，并将在各个名字空间内完成授权；</li>\n<li>为名字空间作用域的对象设置访问权限，并跨所有名字空间执行授权；</li>\n<li>为集群作用域的资源定义访问权限。</li>\n</ul>\n<p><br/></p>\n<p>ClusterRole 资源清单示例:<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">ClusterRole</span> </span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">rbac.authorization.k8s.io/v1beta1</span> </span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\">  <span class=\"comment\"># \"namespace\" 被忽略，因为 ClusterRoles 不受名字空间限制</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">secret-reader</span> </span><br><span class=\"line\"><span class=\"attr\">rules:</span></span><br><span class=\"line\"><span class=\"attr\">- apiGroups:</span> <span class=\"string\">[\"\"]</span> </span><br><span class=\"line\">  <span class=\"comment\">#  在 HTTP 层面，用来访问 Secret 对象的资源的名称为 \"secrets\"</span></span><br><span class=\"line\"><span class=\"attr\">  resources:</span> <span class=\"string\">[\"secrets\"]</span> </span><br><span class=\"line\"><span class=\"attr\">  verbs:</span> <span class=\"string\">[\"get\",\"watch\",\"list\"]</span></span><br></pre></td></tr></table></figure></p>\n<p>Tips : RBAC 的 Role 或 ClusterRole 中包含一组代表相关权限的规则<code>权限是纯粹累加的（不存在拒绝某操作的规则）</code>。</p>\n<p>Tips : 如果你希望在名字空间内定义角色应该使用 Role； 如果你希望定义集群范围的角色应该使用 ClusterRole。</p>\n<p>Tips : Role 或 ClusterRole 对象的名称必须是合法的 路径区段名称。</p>\n<p><br/></p>\n<h5 id=\"角色绑定-RoleBinding-and-ClusterRoleBinding\"><a href=\"#角色绑定-RoleBinding-and-ClusterRoleBinding\" class=\"headerlink\" title=\"角色绑定 - RoleBinding and ClusterRoleBinding\"></a>角色绑定 - RoleBinding and ClusterRoleBinding</h5><p>描述: 角色绑定（Role Binding）是将角色中定义的权限赋予一个或者一组用户,  它包含若干主体用户、组或服务账户<code>(users,groups,or service accounts)</code>的列表和对这些主体所获得的角色的引用;</p>\n<p>RoleBinding 可以<code>引用同一的名字空间中</code>的任何 Role, 或者一个 RoleBinding 可以引用某 ClusterRole 并将该 ClusterRole 绑定到 RoleBinding 所在的名字空间；</p>\n<p>RoleBinding 可以将角色中定义的权限<code>授予用户或用户组</code>其包含一组<code>权限列表 (subjects)</code>，权限列表中包含有不同形式的待授予权限资源类型; </p>\n<ul>\n<li>RoleBinding 同样包含对被 Bind 的 Role 引用 <code>RoleBinding</code> 适用于某个命名空间内授权而 <code>ClusterRoleBinding 适用于集群范围内的授权</code>;</li>\n<li>RoleBinding 同样可以引用 <code>ClusterRole</code> 来对<code>当前 namespace 内用户、用户组或 ServiceAccount 进行授权</code>;</li>\n</ul>\n<p>例如: 将 default 命名空间中的 <code>pod-reader Role</code> 角色授予jane用户，此后 <code>jane用户</code> 在 default 命名空间中将具有 pod-reader 角色的权限;</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">rbac.authorization.k8s.io/v1</span></span><br><span class=\"line\"><span class=\"comment\"># 此角色绑定允许 \"jane\" 读取 \"default\" 名字空间中的 Pods</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">RoleBinding</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">read-pods</span></span><br><span class=\"line\"><span class=\"attr\">  namespace:</span> <span class=\"string\">default</span></span><br><span class=\"line\"><span class=\"attr\">subjects:</span></span><br><span class=\"line\"><span class=\"comment\"># 你可以指定不止一个“subject（主体）”</span></span><br><span class=\"line\"><span class=\"attr\">- kind:</span> <span class=\"string\">User</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">jane</span> <span class=\"comment\"># \"name\" 是不区分大小写的</span></span><br><span class=\"line\"><span class=\"attr\">  apiGroup:</span> <span class=\"string\">rbac.authorization.k8s.io</span></span><br><span class=\"line\"><span class=\"attr\">roleRef:</span></span><br><span class=\"line\">  <span class=\"comment\"># \"roleRef\" 指定与某 Role 或 ClusterRole 的绑定关系</span></span><br><span class=\"line\"><span class=\"attr\">  kind:</span> <span class=\"string\">Role</span> <span class=\"comment\"># 此字段必须是 Role 或 ClusterRole</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">pod-reader</span>     <span class=\"comment\"># 此字段必须与你要绑定的 Role 或 ClusterRole 的名称匹配</span></span><br><span class=\"line\"><span class=\"attr\">  apiGroup:</span> <span class=\"string\">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure>\n<p><br></p>\n<p>Tips : RoleBinding 可以引用 ClusterRole, 其将对应 ClusterRole 中定义的访问权限授予 RoleBinding 所在名字空间的资源; 好处是这种引用使得你可以<code>跨整个集群定义一组通用的角色, 之后在多个名字空间中复用</code>。</p>\n<p>例如，尽管下面的 RoleBinding 引用的是一个 ClusterRole，”dave”（这里的主体， 不区分大小写）只能访问 “development” 名字空间中的 Secrets 对象，因为 RoleBinding 所在的名字空间（由其 metadata 决定）是 “development”。<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">rbac.authorization.k8s.io/v1</span></span><br><span class=\"line\"><span class=\"comment\"># 此角色绑定使得用户 \"dave\" 能够读取 \"default\" 名字空间中的 Secrets</span></span><br><span class=\"line\"><span class=\"comment\"># 你需要一个名为 \"secret-reader\" 的 ClusterRole</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">RoleBinding</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">read-secrets</span></span><br><span class=\"line\">  <span class=\"comment\"># RoleBinding 的名字空间决定了访问权限的授予范围。</span></span><br><span class=\"line\">  <span class=\"comment\"># 这里仅授权在 \"development\" 名字空间内的访问权限。</span></span><br><span class=\"line\"><span class=\"attr\">  namespace:</span> <span class=\"string\">development</span></span><br><span class=\"line\"><span class=\"attr\">subjects:</span></span><br><span class=\"line\"><span class=\"attr\">- kind:</span> <span class=\"string\">User</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">dave</span> <span class=\"comment\"># 'name' 是不区分大小写的</span></span><br><span class=\"line\"><span class=\"attr\">  apiGroup:</span> <span class=\"string\">rbac.authorization.k8s.io</span></span><br><span class=\"line\"><span class=\"attr\">roleRef:</span></span><br><span class=\"line\"><span class=\"attr\">  kind:</span> <span class=\"string\">ClusterRole</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">secret-reader</span></span><br><span class=\"line\"><span class=\"attr\">  apiGroup:</span> <span class=\"string\">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p>描述: 使用ClusterRoleBinding可以对整个集群中的所有命名空间资源权限进行访问权限的授予。</p>\n<p>例如，ClusterRoleBinding 样例展示了授权 <code>manager</code> 组内所有用户在全部命名空间中对 secrets 进行访问;<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">rbac.authorization.k8s.io/v1</span></span><br><span class=\"line\"><span class=\"comment\"># 此集群角色绑定允许 “manager” 组中的任何人访问任何名字空间中的 secrets</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">ClusterRoleBinding</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">read-secrets-global</span></span><br><span class=\"line\"><span class=\"comment\"># RoleBinding 和 ClusterRoleBinding 可以将 Role 绑定到 Subjects</span></span><br><span class=\"line\"><span class=\"attr\">subjects:</span></span><br><span class=\"line\"><span class=\"comment\"># Subjects 中kind字段可以是 `groups、users 或者service accounts`</span></span><br><span class=\"line\"><span class=\"comment\"># users: \"alice\" \"wangyanglinux@163.com\" 甚至是一组字符串形式的数字ID, 而管理员缺省的是system:xxx, 集群管理员应该确保普通用户不会使用这个前缀格式;</span></span><br><span class=\"line\"><span class=\"comment\"># Groups 书写格式与 Users相同，都为一个字符串，并且没有特定的格式要求；同样system:前缀为系统保留;</span></span><br><span class=\"line\"><span class=\"comment\"># ServiceAccount : SA 账户</span></span><br><span class=\"line\"><span class=\"attr\">- kind:</span> <span class=\"string\">Group</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">manager</span> <span class=\"comment\"># 'name' 是不区分大小写的</span></span><br><span class=\"line\"><span class=\"attr\">  apiGroup:</span> <span class=\"string\">rbac.authorization.k8s.io</span></span><br><span class=\"line\"><span class=\"attr\">roleRef:</span></span><br><span class=\"line\"><span class=\"attr\">  kind:</span> <span class=\"string\">ClusterRole</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">secret-reader</span></span><br><span class=\"line\"><span class=\"attr\">  apiGroup:</span> <span class=\"string\">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure></p>\n<p>扩充: 创建了绑定之后你不能再修改绑定对象所引用的 Role 或 ClusterRole。 </p>\n<ul>\n<li>如果试图改变绑定对象的 roleRef 将导致合法性检查错误。</li>\n<li>如果你想要改变现有绑定对象中 roleRef 字段的内容，必须删除重新创建绑定对象。</li>\n</ul>\n<p>Tips : RoleBinding 在指定的名字空间中执行授权，而 ClusterRoleBinding 在集群范围执行授权。</p>\n<p>Tips : RoleBinding 或 ClusterRoleBinding 对象的名称必须是合法的 路径区段名称。</p>\n<p>Tips : 如果你希望将某 ClusterRole 绑定到集群中所有名字空间，你要使用 ClusterRoleBinding。</p>\n<p><br/></p>\n<h5 id=\"聚合-ClusterRole-Aggregate\"><a href=\"#聚合-ClusterRole-Aggregate\" class=\"headerlink\" title=\"聚合 - ClusterRole Aggregate\"></a>聚合 - ClusterRole Aggregate</h5><p>描述: 将若干 ClusterRole 聚合（Aggregate） 起来形成一个复合的 <code>ClusterRole</code>。某个控制器作为集群控制面的一部分会监视带有 aggregationRule 的 ClusterRole 对象集合。</p>\n<p>Tips : aggregationRule 为控制器定义一个标签 <code>选择算符供后者匹配</code> 应该组合到当前 ClusterRole 的 roles 字段中的 ClusterRole 对象。</p>\n<p><strong>聚合 ClusterRole 的示例1：</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class=\"line\">kind: ClusterRole</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: monitoring</span><br><span class=\"line\">aggregationRule:</span><br><span class=\"line\">  clusterRoleSelectors:</span><br><span class=\"line\">  - matchLabels:</span><br><span class=\"line\">      rbac.example.com/aggregate-to-monitoring: <span class=\"string\">\"true\"</span></span><br><span class=\"line\">rules: [] <span class=\"comment\"># 控制面自动填充这里的规则</span></span><br></pre></td></tr></table></figure></p>\n<p>Tips : 如果你创建一个与某现有聚合 ClusterRole 的标签选择算符匹配的 ClusterRole， 这一变化会触发新的规则被添加到聚合 ClusterRole 的操作。 </p>\n<p><strong>聚合 ClusterRole 的示例2</strong>：通过创建一个标签同样为 <code>rbac.example.com/aggregate-to-monitoring: true</code> 的 ClusterRole新的规则可被添加到 “monitoring” ClusterRole 中。<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">rbac.authorization.k8s.io/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">ClusterRole</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">monitoring-endpoints</span></span><br><span class=\"line\"><span class=\"attr\">  labels:</span></span><br><span class=\"line\">    <span class=\"string\">rbac.example.com/aggregate-to-monitoring:</span> <span class=\"string\">\"true\"</span></span><br><span class=\"line\"><span class=\"comment\"># 当你创建 \"monitoring-endpoints\" ClusterRole 时，</span></span><br><span class=\"line\"><span class=\"comment\"># 下面的规则也会被添加到 \"monitoring\" ClusterRole 中</span></span><br><span class=\"line\"><span class=\"attr\">rules:</span></span><br><span class=\"line\"><span class=\"attr\">- apiGroups:</span> <span class=\"string\">[\"\"]</span></span><br><span class=\"line\"><span class=\"attr\">  resources:</span> <span class=\"string\">[\"services\",</span> <span class=\"string\">\"endpoints\"</span><span class=\"string\">,</span> <span class=\"string\">\"pods\"</span><span class=\"string\">]</span></span><br><span class=\"line\"><span class=\"attr\">  verbs:</span> <span class=\"string\">[\"get\",</span> <span class=\"string\">\"list\"</span><span class=\"string\">,</span> <span class=\"string\">\"watch\"</span><span class=\"string\">]</span></span><br></pre></td></tr></table></figure></p>\n<p>默认的<code>面向用户的角色使用 ClusterRole 聚合</code>, 这使得作为集群管理员的你可以为扩展默认规则，包括为定制资源设置规则;</p>\n<p>例如，下面的 ClusterRoles 让默认角色 “admin” 和 “edit” 拥有管理自定义资源 “CronTabs” 的权限， “view” 角色对 CronTab 资源拥有读操作权限。 </p>\n<p>你可以假定 CronTab 对象在 API 服务器所看到的 URL 中被命名为 “crontabs”。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class=\"line\">kind: ClusterRole</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: aggregate-cron-tabs-edit</span><br><span class=\"line\">  labels:</span><br><span class=\"line\">    <span class=\"comment\"># 添加以下权限到默认角色 \"admin\" 和 \"edit\" 中</span></span><br><span class=\"line\">    rbac.authorization.k8s.io/aggregate-to-admin: <span class=\"string\">\"true\"</span></span><br><span class=\"line\">    rbac.authorization.k8s.io/aggregate-to-edit: <span class=\"string\">\"true\"</span></span><br><span class=\"line\">rules:</span><br><span class=\"line\">- apiGroups: [<span class=\"string\">\"stable.example.com\"</span>]</span><br><span class=\"line\">  resources: [<span class=\"string\">\"crontabs\"</span>]</span><br><span class=\"line\">  verbs: [<span class=\"string\">\"get\"</span>, <span class=\"string\">\"list\"</span>, <span class=\"string\">\"watch\"</span>, <span class=\"string\">\"create\"</span>, <span class=\"string\">\"update\"</span>, <span class=\"string\">\"patch\"</span>, <span class=\"string\">\"delete\"</span>]</span><br><span class=\"line\">---</span><br><span class=\"line\">kind: ClusterRole</span><br><span class=\"line\">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: aggregate-cron-tabs-view</span><br><span class=\"line\">  labels:</span><br><span class=\"line\">    <span class=\"comment\"># 添加以下权限到 \"view\" 默认角色中</span></span><br><span class=\"line\">    rbac.authorization.k8s.io/aggregate-to-view: <span class=\"string\">\"true\"</span></span><br><span class=\"line\">rules:</span><br><span class=\"line\">- apiGroups: [<span class=\"string\">\"stable.example.com\"</span>]</span><br><span class=\"line\">  resources: [<span class=\"string\">\"crontabs\"</span>]</span><br><span class=\"line\">  verbs: [<span class=\"string\">\"get\"</span>, <span class=\"string\">\"list\"</span>, <span class=\"string\">\"watch\"</span>]</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<h5 id=\"资源引用\"><a href=\"#资源引用\" class=\"headerlink\" title=\"资源引用\"></a>资源引用</h5><p>描述: 在 Kubernetes API 中，大多数资源都是使用对象名称的字符串表示来呈现与访问的。 例如，对于 Pod 应使用 “pods”。 RBAC 使用对应 API 端点的 URL 中呈现的名字来引用资源。</p>\n<p>例如：有一些 Kubernetes API 涉及 子资源（subresource）,logs 资源就属于 pods 的子资源，API 中 URL 样例如下<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /api/v1/namespaces/&#123;namespace&#125;/pods/&#123;name&#125;/<span class=\"built_in\">log</span></span><br></pre></td></tr></table></figure></p>\n<p>Tips : 在这里，pods 对应名字空间作用域的 Pod 资源，而 log 是 pods 的子资源。 </p>\n<p>例如: 在 RBAC 角色表达子资源时，使用斜线（/）来分隔资源和子资源。 要允许某主体读取 pods 同时访问这些 Pod 的 log 子资源，你可以这么写：<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Role</span> </span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">rbac.authorization.k8s.io/v1beta1</span> </span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  namespace:</span> <span class=\"string\">default</span> </span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">pod-and-pod-logs-reader</span> </span><br><span class=\"line\"><span class=\"attr\">rules:</span></span><br><span class=\"line\"><span class=\"attr\">  - apiGroups:</span> <span class=\"string\">[\"\"]</span> </span><br><span class=\"line\"><span class=\"attr\">  resources:</span> <span class=\"string\">[\"pods/log\"]</span> </span><br><span class=\"line\"><span class=\"attr\">  verbs:</span> <span class=\"string\">[\"get\",</span> <span class=\"string\">\"list\"</span><span class=\"string\">]</span></span><br></pre></td></tr></table></figure></p>\n<p>Tips : 对于某些请求也可以通过 resourceNames 列表按名称引用资源。 在指定时可以将请求限定为资源的单个实例。</p>\n<p>例子中限制可以 “get” 和 “update” 一个名为 my-configmap 的 ConfigMap：<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">rbac.authorization.k8s.io/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Role</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  namespace:</span> <span class=\"string\">default</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">configmap-updater</span></span><br><span class=\"line\"><span class=\"attr\">rules:</span></span><br><span class=\"line\"><span class=\"attr\">- apiGroups:</span> <span class=\"string\">[\"\"]</span></span><br><span class=\"line\">  <span class=\"comment\"># 在 HTTP 层面，用来访问 ConfigMap 的资源的名称为 \"configmaps\"</span></span><br><span class=\"line\"><span class=\"attr\">  resources:</span> <span class=\"string\">[\"configmaps\"]</span></span><br><span class=\"line\"><span class=\"attr\">  resourceNames:</span> <span class=\"string\">[\"my-configmap\"]</span></span><br><span class=\"line\"><span class=\"attr\">  verbs:</span> <span class=\"string\">[\"update\",</span> <span class=\"string\">\"get\"</span><span class=\"string\">]</span></span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<h5 id=\"主体引用\"><a href=\"#主体引用\" class=\"headerlink\" title=\"主体引用\"></a>主体引用</h5><p>描述: RoleBinding 或者 ClusterRoleBinding 可绑定角色到某 <code>*主体（Subject）*</code>上。 </p>\n<p>Tips : 主体可以是组Group，用户User 或者 服务账户ServiceAccount。</p>\n<p>在 Kubernetes 中鉴权模块提供用户组信息与用户名一样，用户组名也用字符串来表示，而且对该字符串没有格式要求， 只是不能使用保留的前缀 system:。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- kind: User</span><br><span class=\"line\">name: <span class=\"string\">\"weiyigeek\"</span></span><br><span class=\"line\">name: <span class=\"string\">\"weiyigeek@weiyigeek.top\"</span></span><br></pre></td></tr></table></figure></p>\n<p>Tips : 前缀 system: 是 Kubernetes 系统保留的，所以你要确保 所配置的用户名或者组名不能出现上述 system: 前缀, 除了对前缀的限制之外RBAC 鉴权系统不对用户名格式作任何要求。</p>\n<p>Tips : 服务账户的用户名前缀为 system:serviceaccount , 属于前缀为 system:serviceaccounts 的用户组。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">system:serviceaccount: （单数）是用于 服务账户用户名 的前缀；</span><br><span class=\"line\">system:serviceaccounts: （复数）是用于 服务账户组名 的前缀。</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<h5 id=\"角色分类\"><a href=\"#角色分类\" class=\"headerlink\" title=\"角色分类\"></a>角色分类</h5><p>描述: 我们可以通过 API 发现角色, 无论是经过身份验证的还是未经过身份验证的用户，默认的角色绑定都授权他们读取被认为 是可安全地公开访问的 API（ 包括 CustomResourceDefinitions）</p>\n<p>Tips : 如果要禁用匿名的未经过身份验证的用户访问，请在 API 服务器配置中中添加 <code>--anonymous-auth=false</code>的配置选项。</p>\n<p>通过运行命令 kubectl 可以查看这些角色的配置信息:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 集群角色</span></span><br><span class=\"line\">~$ kubectl get clusterroles.rbac.authorization.k8s.io</span><br><span class=\"line\">  <span class=\"comment\"># NAME                                                                   CREATED AT</span></span><br><span class=\"line\">  <span class=\"comment\"># admin                                                                  2021-01-11T04:55:10Z</span></span><br><span class=\"line\">  <span class=\"comment\"># calico-kube-controllers                                                2021-01-12T13:13:26Z</span></span><br><span class=\"line\">  <span class=\"comment\"># calico-node                                                            2021-01-12T13:13:26Z</span></span><br><span class=\"line\">  <span class=\"comment\"># cluster-admin                                                          2021-01-11T04:55:10Z</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 集群角色绑定</span></span><br><span class=\"line\">~$ kubectl get clusterrolebindings.rbac.authorization.k8s.io</span><br><span class=\"line\">  <span class=\"comment\"># NAME                                                   ROLE                                                                               AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># calico-kube-controllers                                ClusterRole/calico-kube-controllers                                                43d</span></span><br><span class=\"line\">  <span class=\"comment\"># calico-node                                            ClusterRole/calico-node                                                            43d</span></span><br><span class=\"line\">  <span class=\"comment\"># cluster-admin                                          ClusterRole/cluster-admin                                                          45d</span></span><br><span class=\"line\">  <span class=\"comment\"># jenkins-crd                                            ClusterRole/jenkins-cr                                                             40d</span></span><br><span class=\"line\">  <span class=\"comment\"># kubeadm:get-nodes                                      ClusterRole/kubeadm:get-nodes                                                      45d</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (3) 查看指定角色的配置信息</span></span><br><span class=\"line\">~$ kubectl get clusterroles system:discovery -o yaml</span><br><span class=\"line\">  <span class=\"comment\"># apiVersion: rbac.authorization.k8s.io/v1</span></span><br><span class=\"line\">  <span class=\"comment\"># kind: ClusterRole</span></span><br><span class=\"line\">  <span class=\"comment\"># metadata:</span></span><br><span class=\"line\">  <span class=\"comment\">#   annotations:</span></span><br><span class=\"line\">  <span class=\"comment\">#     rbac.authorization.kubernetes.io/autoupdate: \"true\"</span></span><br><span class=\"line\">  <span class=\"comment\">#   creationTimestamp: \"2021-01-11T04:55:10Z\"</span></span><br><span class=\"line\">  <span class=\"comment\">#   labels:</span></span><br><span class=\"line\">  <span class=\"comment\">#     kubernetes.io/bootstrapping: rbac-defaults</span></span><br><span class=\"line\">  <span class=\"comment\">#   managedFields:</span></span><br><span class=\"line\">  <span class=\"comment\">#   - apiVersion: rbac.authorization.k8s.io/v1</span></span><br><span class=\"line\">  <span class=\"comment\">#     fieldsType: FieldsV1</span></span><br><span class=\"line\">  <span class=\"comment\">#     fieldsV1:</span></span><br><span class=\"line\">  <span class=\"comment\">#       f:metadata:</span></span><br><span class=\"line\">  <span class=\"comment\">#         f:annotations:</span></span><br><span class=\"line\">  <span class=\"comment\">#           .: &#123;&#125;</span></span><br><span class=\"line\">  <span class=\"comment\">#           f:rbac.authorization.kubernetes.io/autoupdate: &#123;&#125;</span></span><br><span class=\"line\">  <span class=\"comment\">#         f:labels:</span></span><br><span class=\"line\">  <span class=\"comment\">#           .: &#123;&#125;</span></span><br><span class=\"line\">  <span class=\"comment\">#           f:kubernetes.io/bootstrapping: &#123;&#125;</span></span><br><span class=\"line\">  <span class=\"comment\">#       f:rules: &#123;&#125;</span></span><br><span class=\"line\">  <span class=\"comment\">#     manager: kube-apiserver</span></span><br><span class=\"line\">  <span class=\"comment\">#     operation: Update</span></span><br><span class=\"line\">  <span class=\"comment\">#     time: \"2021-01-11T04:55:10Z\"</span></span><br><span class=\"line\">  <span class=\"comment\">#   name: system:discovery</span></span><br><span class=\"line\">  <span class=\"comment\">#   resourceVersion: \"44\"</span></span><br><span class=\"line\">  <span class=\"comment\">#   selfLink: /apis/rbac.authorization.k8s.io/v1/clusterroles/system%3Adiscovery</span></span><br><span class=\"line\">  <span class=\"comment\">#   uid: 9a8328ee-a5c1-481a-9ac9-d6919ef7aef1</span></span><br><span class=\"line\">  <span class=\"comment\"># rules:</span></span><br><span class=\"line\">  <span class=\"comment\"># - nonResourceURLs:</span></span><br><span class=\"line\">  <span class=\"comment\">#   - /api</span></span><br><span class=\"line\">  <span class=\"comment\">#   - /api/*</span></span><br><span class=\"line\">  <span class=\"comment\">#   - /apis</span></span><br><span class=\"line\">  <span class=\"comment\">#   - /apis/*</span></span><br><span class=\"line\">  <span class=\"comment\">#   - /healthz</span></span><br><span class=\"line\">  <span class=\"comment\">#   - /livez</span></span><br><span class=\"line\">  <span class=\"comment\">#   - /openapi</span></span><br><span class=\"line\">  <span class=\"comment\">#   - /openapi/*</span></span><br><span class=\"line\">  <span class=\"comment\">#   - /readyz</span></span><br><span class=\"line\">  <span class=\"comment\">#   - /version</span></span><br><span class=\"line\">  <span class=\"comment\">#   - /version/</span></span><br><span class=\"line\">  <span class=\"comment\">#   verbs:</span></span><br><span class=\"line\">  <span class=\"comment\">#   - get</span></span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p><strong>Kubernetes RBAC API 发现角色</strong><br>描述: 如果你编辑该 ClusterRole 你所作的变更会被 API 服务器在重启时自动覆盖，这是通过<code>自动协商机制完成的</code>。要避免这类覆盖操作要么不要手动编辑这些角色，要么禁止自动协商机制。</p>\n<p><em>默认 ClusterRole     | 默认 ClusterRoleBinding    | 描述</em></p>\n<blockquote>\n<p>system:basic-user    system:authenticated 组    ## 允许用户以只读的方式去访问他们自己的基本信息。在 1.14 版本之前，这个角色在默认情况下也绑定在 system:unauthenticated 上。</p>\n</blockquote>\n<blockquote>\n<p>system:discovery    system:authenticated 组    ## 允许以只读方式访问 API 发现端点，这些端点用来发现和协商 API 级别。 在 1.14 版本之前，这个角色在默认情况下绑定在 system:unauthenticated 上。</p>\n</blockquote>\n<blockquote>\n<p>system:public-info-viewer    system:authenticated 和 system:unauthenticated 组    ## 允许对集群的非敏感信息进行只读访问，它是在 1.14 版本中引入的。</p>\n</blockquote>\n<p>例如:获取 system:basic-user    角色信息:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl get clusterroles system:authenticated -o yaml</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p><strong>面向用户的角色</strong><br>描述: 某些默认的 ClusterRole 不是以前缀 system: 开头的他们是面向用户的角色。包括超级用户（Super-User）角色（cluster-admin）、 使用 ClusterRoleBinding 在集群范围内完成授权的角色（cluster-status）、 以及使用 RoleBinding 在特定名字空间中授予的角色（admin、edit、view）;</p>\n<blockquote>\n<p>cluster-admin    | system:masters 组     | 允许超级用户在平台上的任何资源上执行所有操作。</p>\n</blockquote>\n<blockquote>\n<p>admin    | 无 | 允许管理员访问权限，旨在使用 RoleBinding 在名字空间内执行授权。</p>\n</blockquote>\n<blockquote>\n<p>edit | 无 | 允许对名字空间的大多数对象进行读/写操作。</p>\n</blockquote>\n<blockquote>\n<p>view | 无 | 允许对名字空间的大多数对象有只读权限。</p>\n</blockquote>\n<p>Tips : 面向用户的 ClusterRole 使用 ClusterRole 聚合以允许管理员在这些 ClusterRole 上添加用于定制资源的规则<br>。<br>如果想要添加规则到 admin、edit 或者 view， 可以创建带有以下一个或多个标签的 ClusterRole：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">metadata:</span><br><span class=\"line\">  labels:</span><br><span class=\"line\">    rbac.authorization.k8s.io/aggregate-to-admin: <span class=\"string\">\"true\"</span></span><br><span class=\"line\">    rbac.authorization.k8s.io/aggregate-to-edit: <span class=\"string\">\"true\"</span></span><br><span class=\"line\">    rbac.authorization.k8s.io/aggregate-to-view: <span class=\"string\">\"true\"</span></span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p><strong>核心组件角色</strong></p>\n<blockquote>\n<p>system:kube-scheduler    | system:kube-scheduler 用户    | 允许访问 scheduler 组件所需要的资源。</p>\n</blockquote>\n<blockquote>\n<p>system:volume-scheduler    | system:kube-scheduler 用户 | 允许访问 kube-scheduler 组件所需要的卷资源。</p>\n</blockquote>\n<blockquote>\n<p>system:kube-controller-manager    | system:kube-controller-manager 用户     | 允许访问控制器管理器 组件所需要的资源。 各个控制回路所需要的权限在控制器角色 详述。</p>\n</blockquote>\n<blockquote>\n<p>system:node    无    | 允许访问 kubelet 所需要的资源，包括对所有 Secret 的读操作和对所有 Pod 状态对象的写操作。你应该使用 Node 鉴权组件 和 NodeRestriction 准入插件 而不是 system:node 角色。同时基于 kubelet 上调度执行的 Pod 来授权 kubelet 对 API 的访问。</p>\n</blockquote>\n<blockquote>\n<p>system:node 角色的意义仅是为了与从 v1.8 之前版本升级而来的集群兼容。</p>\n</blockquote>\n<blockquote>\n<p>system:node-proxier    | system:kube-proxy 用户 |    允许访问 kube-proxy 组件所需要的资源。</p>\n</blockquote>\n<p><br/></p>\n<p><strong>其他组件角色</strong></p>\n<table>\n<thead>\n<tr>\n<th>默认 ClusterRole</th>\n<th>默认 ClusterRoleBinding</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>system:auth-delegator</strong></td>\n<td>无</td>\n<td>允许将身份认证和鉴权检查操作外包出去。 这种角色通常用在插件式 API 服务器上，以实现统一的身份认证和鉴权。</td>\n</tr>\n<tr>\n<td><strong>system:heapster</strong></td>\n<td>无</td>\n<td>为 <a href=\"https://github.com/kubernetes/heapster\" target=\"_blank\" rel=\"noopener\">Heapster</a> 组件（已弃用）定义的角色。</td>\n</tr>\n<tr>\n<td><strong>system:kube-aggregator</strong></td>\n<td>无</td>\n<td>为 <a href=\"https://github.com/kubernetes/kube-aggregator\" target=\"_blank\" rel=\"noopener\">kube-aggregator</a> 组件定义的角色。</td>\n</tr>\n<tr>\n<td><strong>system:kube-dns</strong></td>\n<td>在 <strong>kube-system</strong> 名字空间中的 <strong>kube-dns</strong> 服务账户</td>\n<td>为 <a href=\"https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/\" target=\"_blank\" rel=\"noopener\">kube-dns</a> 组件定义的角色。</td>\n</tr>\n<tr>\n<td><strong>system:kubelet-api-admin</strong></td>\n<td>无</td>\n<td>允许 kubelet API 的完全访问权限。</td>\n</tr>\n<tr>\n<td><strong>system:node-bootstrapper</strong></td>\n<td>无</td>\n<td>允许访问执行 <a href=\"https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet-tls-bootstrapping/\" target=\"_blank\" rel=\"noopener\">kubelet TLS 启动引导</a> 所需要的资源。</td>\n</tr>\n<tr>\n<td><strong>system:node-problem-detector</strong></td>\n<td>无</td>\n<td>为 <a href=\"https://github.com/kubernetes/node-problem-detector\" target=\"_blank\" rel=\"noopener\">node-problem-detector</a> 组件定义的角色。</td>\n</tr>\n<tr>\n<td><strong>system:persistent-volume-provisioner</strong></td>\n<td>无</td>\n<td>允许访问大部分 <a href=\"https://kubernetes.io/docs/concepts/storage/persistent-volumes/#provisioner\" target=\"_blank\" rel=\"noopener\">动态卷驱动</a> 所需要的资源。</td>\n</tr>\n<tr>\n<td><strong>system:monitoring</strong></td>\n<td><strong>system:monitoring</strong> 组</td>\n<td>允许对控制平面监控端点的读取访问（例如：<a href=\"https://kubernetes.io/zh/docs/reference/command-line-tools-reference/kube-apiserver/\" target=\"_blank\" rel=\"noopener\">kube-apiserver</a> 存活和就绪端点（<code>/healthz</code>、<code>/livez</code>、<code>/readyz</code>）， 各个健康检查端点（<code>/healthz/*</code>、<code>/livez/*</code>、<code>/readyz/*</code>）和 <code>/metrics</code>）。 请注意，各个运行状况检查端点和度量标准端点可能会公开敏感信息。</td>\n</tr>\n</tbody>\n</table>\n<p><br></p>\n<p><strong>内置控制器的角色</strong><br>描述: Kubernetes 控制器管理器运行内建于 Kubernetes 控制面的控制器。 </p>\n<p>当使用 <code>--use-service-account-credentials</code> 参数启动时, kube-controller-manager 使用单独的服务账户来启动每个控制器, 每个内置控制器都有相应的、前缀为 <code>system:controller:</code> 的角色。</p>\n<p>如果控制管理器启动时未设置 <code>--use-service-account-credentials</code>，它使用自己的身份凭据来运行所有的控制器，该身份必须被授予所有相关的角色;</p>\n<p><em>角色包括:</em></p>\n<ul>\n<li>system:controller:attachdetach-controller</li>\n<li>system:controller:certificate-controller</li>\n<li>system:controller:clusterrole-aggregation-controller</li>\n<li>system:controller:cronjob-controller</li>\n<li>system:controller:daemon-set-controller</li>\n<li>system:controller:deployment-controller</li>\n<li>system:controller:disruption-controller</li>\n<li>system:controller:endpoint-controller</li>\n<li>system:controller:expand-controller</li>\n<li>system:controller:generic-garbage-collector</li>\n<li>system:controller:horizontal-pod-autoscaler</li>\n<li>system:controller:job-controller</li>\n<li>system:controller:namespace-controller</li>\n<li>system:controller:node-controller</li>\n<li>system:controller:persistent-volume-binder</li>\n<li>system:controller:pod-garbage-collector</li>\n<li>system:controller:pv-protection-controller</li>\n<li>system:controller:pvc-protection-controller</li>\n<li>system:controller:replicaset-controller</li>\n<li>system:controller:replication-controller</li>\n<li>system:controller:resourcequota-controller</li>\n<li>system:controller:root-ca-cert-publisher</li>\n<li>system:controller:route-controller</li>\n<li>system:controller:service-account-controller</li>\n<li>system:controller:service-controller</li>\n<li>system:controller:statefulset-controller</li>\n<li>system:controller:ttl-controller</li>\n</ul>\n<p><br/></p>\n<h5 id=\"实际案例\"><a href=\"#实际案例\" class=\"headerlink\" title=\"实际案例\"></a>实际案例</h5><h6 id=\"Role-ClusterRole-示例\"><a href=\"#Role-ClusterRole-示例\" class=\"headerlink\" title=\"Role | ClusterRole 示例\"></a>Role | ClusterRole 示例</h6><p>描述: 以下示例均为从 Role 或 CLusterRole 对象中截取出来，我们仅展示其 rules 部分。</p>\n<ul>\n<li><p>1) 允许读取在核心 API 组下的 “Pods”：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">rules:</span><br><span class=\"line\">- apiGroups: [<span class=\"string\">\"\"</span>]</span><br><span class=\"line\">  <span class=\"comment\"># 在 HTTP 层面，用来访问 Pod 的资源的名称为 \"pods\"</span></span><br><span class=\"line\">  <span class=\"comment\"># GET /api/v1/namespaces/&#123;namespace&#125;/pods/&#123;name&#125;/log</span></span><br><span class=\"line\">  resources: [<span class=\"string\">\"pods\"</span>]</span><br><span class=\"line\">  verbs: [<span class=\"string\">\"get\"</span>, <span class=\"string\">\"list\"</span>, <span class=\"string\">\"watch\"</span>]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>2) 允许读/写在 “extensions” 和 “apps” API 组中的 Deployment（在 HTTP 层面，对应 URL 中资源部分为 “deployments”）：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># GET /api/v1/namespaces/&#123;namespace&#125;/deployments/&#123;name&#125;</span></span><br><span class=\"line\"><span class=\"attr\">rules:</span></span><br><span class=\"line\"><span class=\"attr\">- apiGroups:</span> <span class=\"string\">[\"extensions\",</span> <span class=\"string\">\"apps\"</span><span class=\"string\">]</span></span><br><span class=\"line\"><span class=\"attr\">  resources:</span> <span class=\"string\">[\"deployments\"]</span></span><br><span class=\"line\"><span class=\"attr\">  verbs:</span> <span class=\"string\">[\"get\",</span> <span class=\"string\">\"list\"</span><span class=\"string\">,</span> <span class=\"string\">\"watch\"</span><span class=\"string\">,</span> <span class=\"string\">\"create\"</span><span class=\"string\">,</span> <span class=\"string\">\"update\"</span><span class=\"string\">,</span> <span class=\"string\">\"patch\"</span><span class=\"string\">,</span> <span class=\"string\">\"delete\"</span><span class=\"string\">]</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>3) 允许读取核心 API 组中的 “pods” 和 <code>读/写 &quot;batch&quot; 或 &quot;extensions&quot; API 组中的 &quot;jobs&quot;</code>：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">rules:</span></span><br><span class=\"line\"><span class=\"attr\">- apiGroups:</span> <span class=\"string\">[\"\"]</span></span><br><span class=\"line\"><span class=\"attr\">  resources:</span> <span class=\"string\">[\"pods\"]</span></span><br><span class=\"line\"><span class=\"attr\">  verbs:</span> <span class=\"string\">[\"get\",</span> <span class=\"string\">\"list\"</span><span class=\"string\">,</span> <span class=\"string\">\"watch\"</span><span class=\"string\">]</span></span><br><span class=\"line\"><span class=\"attr\">- apiGroups:</span> <span class=\"string\">[\"batch\",</span> <span class=\"string\">\"extensions\"</span><span class=\"string\">]</span></span><br><span class=\"line\"><span class=\"attr\">  resources:</span> <span class=\"string\">[\"jobs\"]</span></span><br><span class=\"line\"><span class=\"attr\">  verbs:</span> <span class=\"string\">[\"get\",</span> <span class=\"string\">\"list\"</span><span class=\"string\">,</span> <span class=\"string\">\"watch\"</span><span class=\"string\">,</span> <span class=\"string\">\"create\"</span><span class=\"string\">,</span> <span class=\"string\">\"update\"</span><span class=\"string\">,</span> <span class=\"string\">\"patch\"</span><span class=\"string\">,</span> <span class=\"string\">\"delete\"</span><span class=\"string\">]</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>4) 允许读取名称为 “my-config” 的 ConfigMap（需要通过 RoleBinding 绑定以 限制为某名字空间中特定的 ConfigMap）：</p>\n</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">rules:</span></span><br><span class=\"line\"><span class=\"attr\">- apiGroups:</span> <span class=\"string\">[\"\"]</span></span><br><span class=\"line\"><span class=\"attr\">  resources:</span> <span class=\"string\">[\"configmaps\"]</span></span><br><span class=\"line\"><span class=\"attr\">  resourceNames:</span> <span class=\"string\">[\"my-config\"]</span></span><br><span class=\"line\"><span class=\"attr\">  verbs:</span> <span class=\"string\">[\"get\"]</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>5) 允许读取在核心组中的 “nodes” 资源（因为 Node 是集群作用域的，所以需要 ClusterRole 绑定到 ClusterRoleBinding 才生效）：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">rules:</span></span><br><span class=\"line\"><span class=\"attr\">- apiGroups:</span> <span class=\"string\">[\"\"]</span></span><br><span class=\"line\"><span class=\"attr\">  resources:</span> <span class=\"string\">[\"nodes\"]</span></span><br><span class=\"line\"><span class=\"attr\">  verbs:</span> <span class=\"string\">[\"get\",</span> <span class=\"string\">\"list\"</span><span class=\"string\">,</span> <span class=\"string\">\"watch\"</span><span class=\"string\">]</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>6) 允许针对非资源端点 /healthz 和其子路径上发起 GET 和 POST 请求 （必须在 ClusterRole 绑定 ClusterRoleBinding 才生效）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rules:</span><br><span class=\"line\">  - nonResourceURLs: [<span class=\"string\">\"/healthz\"</span>, <span class=\"string\">\"/healthz/*\"</span>] <span class=\"comment\"># nonResourceURL 中的 '*' 是一个全局通配符</span></span><br><span class=\"line\">    verbs: [<span class=\"string\">\"get\"</span>, <span class=\"string\">\"post\"</span>]</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br></p>\n<h6 id=\"RoleBinding-ClusterRoleBingding-示例\"><a href=\"#RoleBinding-ClusterRoleBingding-示例\" class=\"headerlink\" title=\"RoleBinding | ClusterRoleBingding 示例\"></a>RoleBinding | ClusterRoleBingding 示例</h6><p>描述: 下面示例是 RoleBinding 中的片段，仅展示其 subjects 与 roleRef 的部分。</p>\n<ul>\n<li><p>1) 对于名称为 <a href=\"mailto:alice@example.com\">alice@example.com</a> 的用户：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">subjects:</span></span><br><span class=\"line\"><span class=\"attr\">- kind:</span> <span class=\"string\">User</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">\"alice@example.com\"</span></span><br><span class=\"line\"><span class=\"attr\">  apiGroup:</span> <span class=\"string\">rbac.authorization.k8s.io</span></span><br><span class=\"line\"><span class=\"attr\">roleRef:</span></span><br><span class=\"line\"><span class=\"attr\">  kind:</span> <span class=\"string\">ClusterRole</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">secret-reader</span></span><br><span class=\"line\"><span class=\"attr\">  apiGroup:</span> <span class=\"string\">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>2) 对于名称为 frontend-admins 的用户组：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">subjects:</span></span><br><span class=\"line\"><span class=\"attr\">- kind:</span> <span class=\"string\">Group</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">\"frontend-admins\"</span></span><br><span class=\"line\"><span class=\"attr\">  apiGroup:</span> <span class=\"string\">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>3) 对于 kube-system 名字空间中的默认服务账户：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">subjects:</span><br><span class=\"line\">- kind: ServiceAccount</span><br><span class=\"line\">  name: default</span><br><span class=\"line\">  namespace: kube-system</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>4) 对于任何名称空间中的 “qa” 组中所有的服务账户：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">subjects:</span><br><span class=\"line\">- kind: Group</span><br><span class=\"line\">  name: system:serviceaccounts:dev</span><br><span class=\"line\">  apiGroup: rbac.authorization.k8s.io</span><br><span class=\"line\">  namespace: development</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>5) 对于在任何名字空间中的服务账户：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">subjects:</span><br><span class=\"line\">- kind: Group</span><br><span class=\"line\">  name: system:serviceaccounts</span><br><span class=\"line\">  apiGroup: rbac.authorization.k8s.io</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>6) 对于所有已经过认证的用户：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">subjects:</span><br><span class=\"line\">- kind: Group</span><br><span class=\"line\">  name: system:authenticated</span><br><span class=\"line\">  apiGroup: rbac.authorization.k8s.io</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>7) 对于所有未通过认证的用户：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">subjects:</span><br><span class=\"line\">- kind: Group</span><br><span class=\"line\">  name: system:unauthenticated</span><br><span class=\"line\">  apiGroup: rbac.authorization.k8s.io</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>8) 对于所有用户：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">subjects:</span><br><span class=\"line\">- kind: Group</span><br><span class=\"line\">  name: system:authenticated</span><br><span class=\"line\">  apiGroup: rbac.authorization.k8s.io</span><br><span class=\"line\">- kind: Group</span><br><span class=\"line\">  name: system:unauthenticated</span><br><span class=\"line\">  apiGroup: rbac.authorization.k8s.io</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>Tips ： API 服务器创建一组默认的 ClusterRole 和 ClusterRoleBinding 对象。 这其中许多是以 system: 为前缀的，用以标识对应资源是直接由集群控制面管理的。所有的默认 <code>ClusterRole 和 ClusterRoleBinding</code> 都有<code>kubernetes.io/bootstrapping=rbac-defaults</code> 标签。</p>\n<p>Tips : 自动协商通过该机制, 在每次启动时 <code>API 服务器</code>都会更新默认 <code>ClusterRole</code> 以添加缺失的各种权限，并更新默认的 <code>ClusterRoleBinding</code> 以增加缺失的的各类主体。 即修复一些不小心发生的修改，并且有助于<code>保证角色和角色绑定</code>在新的发行版本中有权限或主体变更时仍然保持最新。</p>\n<p>注意 ：如果基于 RBAC 的鉴权机制被启用，则自动协商功能默认是被启用的。</p>\n<p>注意 ：在修改名称包含 system: 前缀的 <code>ClusterRole</code> 和 <code>ClusterRoleBinding</code> 时要格外小心, 对这些资源的更改可能导致集群无法继续工作。</p>\n<p><br></p>\n<h6 id=\"ClusterRole-RoleBinding-示例\"><a href=\"#ClusterRole-RoleBinding-示例\" class=\"headerlink\" title=\"ClusterRole | RoleBinding 示例\"></a>ClusterRole | RoleBinding 示例</h6><p>例如，下面的 ClusterRole 和 RoleBinding 将允许用户 user-1 把名字空间 user-1-namespace 中的 admin、edit 和 view 角色赋予其他用户：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class=\"line\">kind: ClusterRole</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: role-grantor</span><br><span class=\"line\">rules:</span><br><span class=\"line\">- apiGroups: [<span class=\"string\">\"rbac.authorization.k8s.io\"</span>]</span><br><span class=\"line\">  resources: [<span class=\"string\">\"rolebindings\"</span>]</span><br><span class=\"line\">  verbs: [<span class=\"string\">\"create\"</span>]</span><br><span class=\"line\">- apiGroups: [<span class=\"string\">\"rbac.authorization.k8s.io\"</span>]</span><br><span class=\"line\">  resources: [<span class=\"string\">\"clusterroles\"</span>]</span><br><span class=\"line\">  verbs: [<span class=\"string\">\"bind\"</span>]</span><br><span class=\"line\">  <span class=\"comment\"># 忽略 resourceNames 意味着允许绑定任何 ClusterRole</span></span><br><span class=\"line\">  resourceNames: [<span class=\"string\">\"admin\"</span>,<span class=\"string\">\"edit\"</span>,<span class=\"string\">\"view\"</span>]</span><br><span class=\"line\">---</span><br><span class=\"line\">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class=\"line\">kind: RoleBinding</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: role-grantor-binding</span><br><span class=\"line\">  namespace: user-1-namespace</span><br><span class=\"line\">roleRef:</span><br><span class=\"line\">  apiGroup: rbac.authorization.k8s.io</span><br><span class=\"line\">  kind: ClusterRole</span><br><span class=\"line\">  name: role-grantor</span><br><span class=\"line\">subjects:</span><br><span class=\"line\">- apiGroup: rbac.authorization.k8s.io</span><br><span class=\"line\">  kind: User</span><br><span class=\"line\">  name: user-1</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h6 id=\"命令行角色-绑定创建示例\"><a href=\"#命令行角色-绑定创建示例\" class=\"headerlink\" title=\"命令行角色|绑定创建示例\"></a>命令行角色|绑定创建示例</h6><p><strong>Role</strong><br>描述: 创建 Role 对象，定义在某一名字空间中的权限。例如:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建名称为 \"pod-reader\" 的 Role 对象，允许用户对 Pods 执行 get、watch 和 list 操作：</span></span><br><span class=\"line\">kubectl create role pod-reader --verb=get --verb=list --verb=watch --resource=pods</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建名称为 \"pod-reader\" 的 Role 对象并指定 resourceNames：</span></span><br><span class=\"line\">kubectl create role pod-reader --verb=get --resource=pods --resource-name=readablepod --resource-name=anotherpod</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建名为 \"foo\" 的 Role 对象并指定 apiGroups：</span></span><br><span class=\"line\">kubectl create role foo --verb=get,list,watch --resource=replicasets.apps</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建名为 \"foo\" 的 Role 对象并指定子资源权限:</span></span><br><span class=\"line\">kubectl create role foo --verb=get,list,watch --resource=pods,pods/status</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建名为 \"my-component-lease-holder\" 的 Role 对象，使其具有对特定名称的 资源执行 get/update 的权限：</span></span><br><span class=\"line\">kubectl create role my-component-lease-holder --verb=get,list,watch,update --resource=lease --resource-name=my-compone</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>clusterrole</strong><br>描述: 创建 ClusterRole 对象。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 例如：创建名称为 \"pod-reader\" 的 ClusterRole对象，允许用户对 Pods 对象执行 get、watch和list` 操作：</span></span><br><span class=\"line\">kubectl create clusterrole pod-reader --verb=get,list,watch --resource=pods</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建名为 \"pod-reader\" 的 ClusterRole 对象并指定 resourceNames：</span></span><br><span class=\"line\">kubectl create clusterrole pod-reader --verb=get --resource=pods --resource-name=readablepod --resource-name=anotherpod</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建名为 \"foo\" 的 ClusterRole 对象并指定 apiGroups：</span></span><br><span class=\"line\">kubectl create clusterrole foo --verb=get,list,watch --resource=replicasets.apps</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建名为 \"foo\" 的 ClusterRole 对象并指定子资源:</span></span><br><span class=\"line\">kubectl create clusterrole foo --verb=get,list,watch --resource=pods,pods/status</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建名为 \"foo\" 的 ClusterRole 对象并指定 nonResourceURL：</span></span><br><span class=\"line\">kubectl create clusterrole <span class=\"string\">\"foo\"</span> --verb=get --non-resource-url=/logs/*</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建名为 \"monitoring\" 的 ClusterRole 对象并指定 aggregationRule：</span></span><br><span class=\"line\">kubectl create clusterrole monitoring --aggregation-rule=<span class=\"string\">\"rbac.example.com/aggregate-to-monitoring=true\"</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>rolebinding</strong><br>描述：在特定的名字空间中对 Role 或 ClusterRole 授权。<br>例如：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在名字空间 \"acme\" 中，将名为 admin 的 ClusterRole 中的权限授予名称 \"bob\" 的用户:</span></span><br><span class=\"line\">kubectl create rolebinding bob-admin-binding --clusterrole=admin --user=bob --namespace=acme</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在名字空间 \"acme\" 中，将名为 view 的 ClusterRole 中的权限授予名字空间 \"acme\" 中名为 myapp 的服务账户：</span></span><br><span class=\"line\">kubectl create rolebinding myapp-view-binding --clusterrole=view --serviceaccount=acme:myapp --namespace=acme</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在名字空间 \"acme\" 中，将名为 view 的 ClusterRole 对象中的权限授予名字空间 \"myappnamespace\" 中名称为 myapp 的服务账户：</span></span><br><span class=\"line\">kubectl create rolebinding myappnamespace-myapp-view-binding --clusterrole=view --serviceaccount=myappnamespace:myapp</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>clusterrolebinding</strong><br>描述：在整个集群（所有名字空间）中用 ClusterRole 授权。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 例如：在整个集群范围，将名为 cluster-admin 的 ClusterRole 中定义的权限授予名为 \"root\" 用户：</span></span><br><span class=\"line\">kubectl create clusterrolebinding root-cluster-admin-binding --clusterrole=cluster-admin --user=root</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在整个集群范围内，将名为 system:node-proxier 的 ClusterRole 的权限授予名为 \"system:kube-proxy\" 的用户：</span></span><br><span class=\"line\">kubectl create clusterrolebinding kube-proxy-binding --clusterrole=system:node-proxier --user=system:kube-proxy</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在整个集群范围内，将名为 view 的 ClusterRole 中定义的权限授予 \"acme\" 名字空间中 名为 \"myapp\" 的服务账户：</span></span><br><span class=\"line\">kubectl create clusterrolebinding myapp-view-binding --clusterrole=view --serviceaccount=acme:myapp</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<p><strong>auth reconcile</strong><br>描述：使用清单文件来创建或者更新 <code>rbac.authorization.k8s.io/v1 API</code> 对象; 尚不存在的对象会被创建，如果对应的名字空间也不存在，必要的话也会被创建。</p>\n<ul>\n<li>已经存在的角色会被更新，使之包含输入对象中所给的权限。如果指定了 –remove-extra-permissions，可以删除额外的权限。</li>\n<li>已经存在的绑定也会被更新，使之包含输入对象中所给的主体。如果指定了 –remove-extra-permissions，则可以删除多余的主体。</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 例如:测试应用 RBAC 对象的清单文件，显示将要进行的更改：</span></span><br><span class=\"line\">kubectl auth reconcile -f my-rbac-rules.yaml --dry-run</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 应用 RBAC 对象的清单文件，保留角色中的额外权限和绑定中的其他主体：</span></span><br><span class=\"line\">kubectl auth reconcile -f my-rbac-rules.yaml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 应用 RBAC 对象的清单文件, 删除角色中的额外权限和绑定中的其他主体：</span></span><br><span class=\"line\">kubectl auth reconcile -f my-rbac-rules.yaml --remove-extra-subjects --remove-extra-permissions</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<h3 id=\"3-Admission-Control-准入控制\"><a href=\"#3-Admission-Control-准入控制\" class=\"headerlink\" title=\"3) Admission Control (准入控制)\"></a>3) Admission Control (准入控制)</h3><p>描述: 准入控制(Admission Control)是<code>API Server</code>的插件集合通过<code>添加不同的插件</code>，实现额外的准入控制规则(<code>即要求做进一步的验证或添加默认参数</code>)。不同于授权和认证只关心用户的操作请求，准入控制还处理请求的内容，并且仅仅对创建、更新、删除或者连接(如代理)等有效而对读操作无效;</p>\n<p>Tips: 甚至于<code>Api-Server</code>的一些主要的功能都需要通过 <code>Admission Controllers</code> 实现。</p>\n<p>Tips: 准入控制也支持同时开启多个插件，他们依次调用只有全部插件都通过请求之后才可以放入系统;</p>\n<p>比如 <code>Service-Account</code> 官方文档上有一份针对不同版本的准入控制器推荐列表，其中最新的 1.14 的推荐列表是:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NamespaceLifecycle, LimitRanger, ServiceAccount, DefaultStorageClass, DefaultTolerationSeconds,MutatingAdmissionWebhook, ValidatingAdmissionWebhook, ResourceQuota</span><br></pre></td></tr></table></figure>\n<p><strong>列举几个插件的功能:</strong></p>\n<ul>\n<li>1.NamespaceLifecycle: 防止在不存在的namespace上创建对象，防止删除系统预置namespace，删除namespace时，连带删除它的所有K8s 对象。</li>\n<li>2.LimitRanger: 确保请求的资源不会超过资源所在Namespace 的 LimitRange的限制。</li>\n<li>3.ServiceAccount: 实现了自动化添加 ServiceAccount。</li>\n<li>4.ResourceQuota: 确保请求的资源不会超过资源的ResourceQuota限制。</li>\n<li>5.AlwaysAdmit: 接收所有请求</li>\n<li>6.AlwaysPullImages: 总是拉取最新的镜像在多租户场景下非常有用。</li>\n<li>7.initalResources: 根据镜像的使用记录为容器设置默认资源请求和限制;</li>\n<li>8.initializers: 用来给资源执行策略或者配置默认选项，包括Initializers控制器与用户自定义的Initalizer任务，控制器负责执行用户提交的任务，完成后将从metadata.initalizers列表中删除;</li>\n</ul>\n<p><br/></p>\n<p><strong>initializers</strong><br>开启方式: 配置kube-apiserver启动参数中加入–admission-control=…,Initalizers, 然后kube-apiserver开启admissionregistration.k8s.io/v1即(<code>--runtime-config=admissionregistration.k8s.io/v1</code>)部署 Initializers控制器;</p>\n<p>Tips : 我们可以备注那些自定义资源可以开启Initializer功能;</p>\n<p>资源清单示例:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apiVersion: admissionregistration.k8s.io/v1</span><br><span class=\"line\">kind: InitializerConfiguration</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: example-config</span><br><span class=\"line\">initializers:</span><br><span class=\"line\">  name: podimage.example</span><br><span class=\"line\">  rules: </span><br><span class=\"line\">    apiGroups: [<span class=\"string\">\"\"</span>]</span><br><span class=\"line\">    apiVersion: [<span class=\"string\">\"v1\"</span>]</span><br><span class=\"line\">    resources: [<span class=\"string\">\"pods\"</span>]</span><br></pre></td></tr></table></figure></p>\n<p>Initialzers 应用场景: 修改资源的配置，比如自动给Pod添加一个Sidecar容器或存储卷;</p>\n<p>Initializers 开发: 其必须有个全局唯一名称，比如<code>initializer.vaultproject.io</code>，其有可能收到信息不全的资源(<code>比如:有可能收到信息不全的资源</code>), 对于Initializer自身部署可采用Deployment但是需要手动设置Initializers列表为空以避免无法启动的问题;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apiVersion: apps/v1</span><br><span class=\"line\">kind: Deployment</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  initializers:</span><br><span class=\"line\">    pengding: []</span><br><span class=\"line\">GenericAdmissionWebhook</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>GenericAdmissionWebhook</strong><br>描述: 提供了一种Webhook方式的准入机制，它不会改变请求对象，但可以用来验证用户的请求。</p>\n<p>GenericAdmissionWebhook 启动方式: –admission-control=…,GenericAdmissionWebhook, 然后kube-apiserver开启admissionregistration.k8s.io/v1即(<code>--runtime-config=admissionregistration.k8s.io/v1</code>)部署 Webhook控制器; </p>\n<p>Tips : 注意此处的准入控制器必须使用TLS并通过ExternalAdmisshookConfigurations.client.caBundle 想 Kube-apiserver 进行注册;</p>\n<hr>\n<h3 id=\"4-上下文环境\"><a href=\"#4-上下文环境\" class=\"headerlink\" title=\"4) 上下文环境\"></a>4) 上下文环境</h3><p>描述: 我们可以通过Context为上面不同的NameSpace下定义运行环境或者是连接其它k8s集群进行相应的操作管理。</p>\n<p>采用Context上下文方式极大的提高了运维K8s的效率和操作性。<br><a href=\"https://www.cnblogs.com/fengrg/p/14931265.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/fengrg/p/14931265.html</a></p>\n<p><strong>操作流程:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.查看集群信息</span></span><br><span class=\"line\">~$ kubectl cluster-info</span><br><span class=\"line\">  <span class=\"comment\"># Kubernetes master is running at https://weiyigeek-lb-vip.k8s:16443</span></span><br><span class=\"line\">  <span class=\"comment\"># KubeDNS is running at https://weiyigeek-lb-vip.k8s:16443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.查看已定义的Context</span></span><br><span class=\"line\">$ kubectl config view</span><br><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">clusters:</span><br><span class=\"line\">- cluster:</span><br><span class=\"line\">    certificate-authority-data: DATA+OMITTED</span><br><span class=\"line\">    server: https://weiyigeek-lb-vip.k8s:16443</span><br><span class=\"line\">  name: kubernetes</span><br><span class=\"line\">contexts:</span><br><span class=\"line\">- context:</span><br><span class=\"line\">    cluster: kubernetes</span><br><span class=\"line\">    user: kubernetes-admin</span><br><span class=\"line\">  name: kubernetes-admin@kubernetes</span><br><span class=\"line\">current-context: kubernetes-admin@kubernetes</span><br><span class=\"line\">kind: Config</span><br><span class=\"line\">preferences: &#123;&#125;</span><br><span class=\"line\">users:</span><br><span class=\"line\">- name: kubernetes-admin</span><br><span class=\"line\">  user:</span><br><span class=\"line\">    client-certificate-data: REDACTED</span><br><span class=\"line\">    client-key-data: REDACTED</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.为指定的Namespace设置Context</span></span><br><span class=\"line\">$ kubectl config <span class=\"built_in\">set</span>-cluster kubernetes-cluster --server=https://weiyigeek-lb-vip.k8s:16443</span><br><span class=\"line\"></span><br><span class=\"line\">$ kubectl config <span class=\"built_in\">set</span>-context ctx-dev --namespace=dev --cluster=kubernetes-cluster --user dev</span><br><span class=\"line\">Context <span class=\"string\">\"ctx-dev\"</span> created.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4.切换当前运行环境为ctx-dev</span></span><br><span class=\"line\">$ kubectl config view</span><br><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">clusters:</span><br><span class=\"line\">- cluster:</span><br><span class=\"line\">    server: https://weiyigeek-lb-vip.k8s:16443</span><br><span class=\"line\">  name: kubernetes-cluster</span><br><span class=\"line\">.....</span><br><span class=\"line\">contexts:</span><br><span class=\"line\">- context:</span><br><span class=\"line\">    cluster: kubernetes-cluster</span><br><span class=\"line\">    namespace: dev</span><br><span class=\"line\">    user: dev</span><br><span class=\"line\">  name: ctx-dev</span><br><span class=\"line\"></span><br><span class=\"line\">$ kubectl config use-context ctx-dev</span><br><span class=\"line\">  <span class=\"comment\"># Switched to context \"ctx-dev\".</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ kubectl config use-context ctx-dev | grep <span class=\"string\">\"current-context\"</span></span><br><span class=\"line\">  <span class=\"comment\"># Please enter Username: </span></span><br><span class=\"line\">  <span class=\"comment\"># Please enter Password:</span></span><br><span class=\"line\">  <span class=\"comment\"># current-context: ctx-dev</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5.切换回 kubernetes-admin 运行环境</span></span><br><span class=\"line\">kubectl config use-context kubernetes-admin@kubernetes</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 6.删除创建的 context与cluster </span></span><br><span class=\"line\">kubectl config delete-context ctx-dev</span><br><span class=\"line\">kubectl config delete-cluster kubernetes-cluster</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h3 id=\"5-基础实践\"><a href=\"#5-基础实践\" class=\"headerlink\" title=\"5) 基础实践\"></a>5) 基础实践</h3><h4 id=\"实验1-配置证书-与-Api-Server-认证访问\"><a href=\"#实验1-配置证书-与-Api-Server-认证访问\" class=\"headerlink\" title=\"实验1.配置证书 与 Api-Server 认证访问\"></a>实验1.配置证书 与 Api-Server 认证访问</h4><ul>\n<li><p>Step 1.创建.kube文件夹并把<code>admin.conf</code>复制到此文件夹</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 创建与复制配置文件</span></span><br><span class=\"line\">mkdir -p <span class=\"variable\">$HOME</span>/.kubeTest</span><br><span class=\"line\">sudo cp -i /etc/kubernetes/admin.conf <span class=\"variable\">$HOME</span>/.kubeTest/config</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 2.根据配置文件生成p12格式的证书</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># client-certificate-data</span></span><br><span class=\"line\">~$ grep <span class=\"string\">'client-certificate-data'</span> ~/.kube/config | head -n 1 | awk <span class=\"string\">'&#123;print $2&#125;'</span> | base64 -d &gt; client.crt</span><br><span class=\"line\">-----BEGIN CERTIFICATE-----</span><br><span class=\"line\">MIIDEzCCAfugAwIBAgIIWBe7BoJxSXAwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE</span><br><span class=\"line\">AxMKa3ViZXJuZXRlczAeFw0yMTAxMTEwNDU0NTNaFw0yMjAxMTEwNDU0NTZaMDQx</span><br><span class=\"line\">.......</span><br><span class=\"line\">2ERQAmHha6j9d8x0nolby5HavjKuZuUaac+USV4SZ0l4B2Vx/i76UHdaJh1/iYzp</span><br><span class=\"line\">trDCsYy8SchEdPqzgoKy+Sd1KzMjFtg=</span><br><span class=\"line\">-----END CERTIFICATE-----</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># client-key-data</span></span><br><span class=\"line\">~$ grep <span class=\"string\">'client-key-data'</span> ~/.kube/config | head -n 1 | awk <span class=\"string\">'&#123;print $2&#125;'</span> | base64 -d &gt; client.key</span><br><span class=\"line\">-----BEGIN RSA PRIVATE KEY-----</span><br><span class=\"line\">MIIEogIBAAKCAQEA5q/YNa8t+bPfMkPlfu54eBTkBHueqDJY1ogJCTS2XSrvEk50</span><br><span class=\"line\">xd5OUVBYyh6Z8dWOexQVeMGtXg9Nmc3okTde38vyTU4A9UsCjJbl9UzsAGsB4dTa</span><br><span class=\"line\">Svk2OPBV7JYaCX2vPAKotB6iYyZrfAnEV6RV3a9JKTZHL7lSTsumgp6XkSTpZJv+</span><br><span class=\"line\">......</span><br><span class=\"line\">1SP558GlSXMyMn5sQZ6EGioURuaBW+ErbSZXLzS/kbulMShFT1PafrVInzXkQ92N</span><br><span class=\"line\">BHH5AoGAIgkTX5Rp6nMtPquk+N3/IASWKiTFLpCGzUslhchz0P3nh041Gwl2Soxf</span><br><span class=\"line\">6DebdQ+j/m2Opolj/lBm85PtXlyY7TMHv1QJH+8LAToCIA4nhwN29zWXkExrI5Sd</span><br><span class=\"line\">QSShmOwGngmhYTHDYiSx7OXQa815tjRsXPEkMU/C9k6QwV+ToEM=</span><br><span class=\"line\">-----END RSA PRIVATE KEY-----</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 生成 p12 格式证书 -&gt; kubecfg.p12 (可能输入密码以供以后导入时使用)</span></span><br><span class=\"line\">openssl pkcs12 -<span class=\"built_in\">export</span> -clcerts -inkey client.key -<span class=\"keyword\">in</span> client.crt -out kubecfg.p12 -name <span class=\"string\">\"kubernetes-client\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">~$ ls -lah client.* kubecfg.p12</span><br><span class=\"line\">-rw-r--r-- 1 weiyigeek weiyigeek 1.2K Feb 25 06:44 client.crt</span><br><span class=\"line\">-rw-r--r-- 1 weiyigeek weiyigeek 1.7K Feb 25 06:44 client.key</span><br><span class=\"line\">-rw------- 1 weiyigeek weiyigeek 2.5K Feb 25 06:44 kubecfg.p12</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 3.完成以后我们把<code>kubecfg.p12</code>复制到要访问dashboard的机器上, 如果是windows机则双击这个文件会弹出一个安装向导,需要输入我们刚才设置的密码输入完以后一直下一步就行了.</p>\n</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2021/1/20210225145630.png\" alt=\"WeiyiGeek.证书导入\" title=\"\" class=\"\">\n                <p>WeiyiGeek.证书导入</p>\n            </figure>\n<ul>\n<li>Step 4.导入前后访问集群地址<code>https://192.168.12.110:16443/api/v1/namespaces/kube-system/services/</code>进行比对；</li>\n</ul>\n<p>Tips : 注意目前使用火狐会出现403 forbidden现象切换到谷歌就行了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~$ kubectl cluster-info</span><br><span class=\"line\">  <span class=\"comment\"># Kubernetes master is running at https://192.168.12.110:16443</span></span><br><span class=\"line\">  <span class=\"comment\"># KubeDNS is running at https://192.168.12.110:16443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy</span></span><br><span class=\"line\">  <span class=\"comment\"># https://192.168.12.110:16443/api/v1/namespaces/kubernetes-dashboard/services/</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>Step 5.访问结果可以看到没有导入证书前是没有权限连接api-server的导入证书后才能与集群正常通信;</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2021/1/20210225152937.png\" alt=\"WeiyiGeek.证书访问集群\" title=\"\" class=\"\">\n                <p>WeiyiGeek.证书访问集群</p>\n            </figure>\n<p><br></p>\n<h4 id=\"实验2-创建普通用户进行对Kubernetes集群的管理\"><a href=\"#实验2-创建普通用户进行对Kubernetes集群的管理\" class=\"headerlink\" title=\"实验2.创建普通用户进行对Kubernetes集群的管理\"></a>实验2.创建普通用户进行对Kubernetes集群的管理</h4><p>Tips: 普通用户并不是通过k8s来创建和维护，是通过<code>创建证书和切换上下文环境的方式来创建和切换用户</code>。</p>\n<p><strong>实操步骤:</strong></p>\n<ul>\n<li>(1) 下载证书生成相关工具 <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir cert &amp;&amp; <span class=\"built_in\">cd</span> <span class=\"variable\">$_</span></span><br><span class=\"line\">wget https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 </span><br><span class=\"line\">wget https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64 </span><br><span class=\"line\">wget https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64 </span><br><span class=\"line\"></span><br><span class=\"line\">chmod +x *</span><br><span class=\"line\">sudo mv cfssl_linux-amd64 /usr/<span class=\"built_in\">local</span>/bin/cfssl </span><br><span class=\"line\">sudo mv cfssljson_linux-amd64 /usr/<span class=\"built_in\">local</span>/bin/cfssljson</span><br><span class=\"line\">sudo mv cfssl-certinfo_linux-amd64 /usr/<span class=\"built_in\">local</span>/bin/cfssl-certinfo</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br/></p>\n<ul>\n<li>(2) 证书申请文件 appuser-csr.json (前面说过 CN 与 O 两个字段)<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt; appuser-csr.json &lt;&lt;<span class=\"string\">'END'</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"CN\"</span>: <span class=\"string\">\"appuser\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"hosts\"</span>: [],</span><br><span class=\"line\">  <span class=\"string\">\"key\"</span>:&#123;</span><br><span class=\"line\">    <span class=\"string\">\"algo\"</span>: <span class=\"string\">\"rsa\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"size\"</span>: 2048</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"names\"</span>:[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    <span class=\"string\">\"C\"</span>: <span class=\"string\">\"CN\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"ST\"</span>:<span class=\"string\">\"ChongQing\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"L\"</span>: <span class=\"string\">\"ChongQing\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"O\"</span>: <span class=\"string\">\"kubernetes\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"OU\"</span>: <span class=\"string\">\"System\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">END</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br/></p>\n<ul>\n<li>(3) 生成appuser用户的证书与密钥<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 证书生成</span></span><br><span class=\"line\">cfssl gencert -ca=/etc/kubernetes/pki/ca.crt -ca-key=/etc/kubernetes/pki/ca.key -profile=kubernetes appuser-csr.json | cfssljson -bare appuser</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 证书相关产物</span></span><br><span class=\"line\">~/k8s/certificate$ ls</span><br><span class=\"line\">  <span class=\"comment\"># appuser.csr  appuser-csr.json  appuser-key.pem  appuser.pem</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 证书校验</span></span><br><span class=\"line\">~/k8s/certificate$ cfssl-certinfo -cert appuser.pem</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"subject\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"common_name\"</span>: <span class=\"string\">\"appuser\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"country\"</span>: <span class=\"string\">\"CN\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"organization\"</span>: <span class=\"string\">\"kubernetes\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"organizational_unit\"</span>: <span class=\"string\">\"System\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"locality\"</span>: <span class=\"string\">\"ChongQing\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"province\"</span>: <span class=\"string\">\"ChongQing\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"names\"</span>: [</span><br><span class=\"line\">      <span class=\"string\">\"CN\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"ChongQing\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"ChongQing\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"kubernetes\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"System\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"appuser\"</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"issuer\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"common_name\"</span>: <span class=\"string\">\"kubernetes\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"names\"</span>: [</span><br><span class=\"line\">      <span class=\"string\">\"kubernetes\"</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"serial_number\"</span>: <span class=\"string\">\"239757714011015189695612917089053624450762739049\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"not_before\"</span>: <span class=\"string\">\"2021-02-25T08:31:00Z\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"not_after\"</span>: <span class=\"string\">\"2022-02-25T08:31:00Z\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"sigalg\"</span>: <span class=\"string\">\"SHA256WithRSA\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"authority_key_id\"</span>: <span class=\"string\">\"77:73:2:88:85:EF:E1:B2:64:5E:D6:9:E0:F:9F:3:5:E8:FE:8D\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"subject_key_id\"</span>: <span class=\"string\">\"A0:45:35:5D:64:59:F9:0:6D:38:49:AF:3F:BD:96:63:F7:CD:6A:FD\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"pem\"</span>: <span class=\"string\">\"-----BEGIN CERTIFICATE-----\\AA..............CCC\\n-----END CERTIFICATE-----\\n\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2021/1/20210225163023.png\" alt=\"WeiyiGeek.CERTIFICATE和PRIVATE\" title=\"\" class=\"\">\n                <p>WeiyiGeek.CERTIFICATE和PRIVATE</p>\n            </figure>\n<p><br/></p>\n<ul>\n<li>(4) 设置集群参数并生成配置文件 (即可以管理其它K8S集群)<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 采用合并的方式获得CA的pem格式证书</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /etc/kubernetes/pki</span><br><span class=\"line\">sudo cat ca.crt ca.key &gt; ~/k8s/certificate/ca.pem</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置集群参数</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> KUBE_APISERVER=<span class=\"string\">\"https://192.168.12.110:16443\"</span></span><br><span class=\"line\">kubectl config <span class=\"built_in\">set</span>-cluster kubernetes --certificate-authority=./ca.pem --embed-certs=<span class=\"literal\">true</span> --server=<span class=\"variable\">$&#123;KUBE_APISERVER&#125;</span> --kubeconfig=./appuser.kubeconfig</span><br><span class=\"line\">  <span class=\"comment\"># Cluster \"kubernetes\" set.</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置客户端认证参数</span></span><br><span class=\"line\">kubectl config <span class=\"built_in\">set</span>-credentials appuser \\</span><br><span class=\"line\">--client-certificate=./appuser.pem \\</span><br><span class=\"line\">--client-key=./appuser-key.pem \\</span><br><span class=\"line\">--embed-certs=<span class=\"literal\">true</span> \\</span><br><span class=\"line\">--kubeconfig=appuser.kubeconfig</span><br><span class=\"line\">  <span class=\"comment\"># User \"appuser\" set.</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li>(5) 创建app-manager角色并且指定其权限然后绑定到appuser用户之中;<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建命名空间</span></span><br><span class=\"line\">kubectl create namespace app</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># app-manager 角色创建</span></span><br><span class=\"line\">tee app-manager-role.yaml &lt;&lt;<span class=\"string\">'END'</span></span><br><span class=\"line\">kind: Role</span><br><span class=\"line\">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  namespace: app</span><br><span class=\"line\">  name: app-manager</span><br><span class=\"line\">rules:</span><br><span class=\"line\">  - apiGroups: [<span class=\"string\">\"\"</span>]   <span class=\"comment\"># \"\" indicates the core API group</span></span><br><span class=\"line\">    resources: [<span class=\"string\">\"pods\"</span>,<span class=\"string\">\"pods/exec\"</span>,<span class=\"string\">\"persistentvolumes\"</span>,<span class=\"string\">\"persistentvolumeclaims\"</span>,<span class=\"string\">\"services\"</span>]</span><br><span class=\"line\">    verbs: [<span class=\"string\">\"create\"</span>, <span class=\"string\">\"delete\"</span>, <span class=\"string\">\"get\"</span>, <span class=\"string\">\"list\"</span>, <span class=\"string\">\"watch\"</span>, <span class=\"string\">\"patch\"</span>, <span class=\"string\">\"update\"</span>]</span><br><span class=\"line\">  - apiGroups: [<span class=\"string\">\"extensions\"</span>, <span class=\"string\">\"apps\"</span>]</span><br><span class=\"line\">    resources: [<span class=\"string\">\"deployments\"</span>, <span class=\"string\">\"statefulsets\"</span>]</span><br><span class=\"line\">    verbs: [<span class=\"string\">\"create\"</span>, <span class=\"string\">\"delete\"</span>, <span class=\"string\">\"get\"</span>, <span class=\"string\">\"list\"</span>, <span class=\"string\">\"watch\"</span>, <span class=\"string\">\"patch\"</span>, <span class=\"string\">\"update\"</span>]</span><br><span class=\"line\">  - apiGroups: [<span class=\"string\">\"\"</span>]</span><br><span class=\"line\">    resources: [<span class=\"string\">\"pods/log\"</span>,<span class=\"string\">\"events\"</span>,<span class=\"string\">\"nodes\"</span>,<span class=\"string\">\"endpoint\"</span>]</span><br><span class=\"line\">    verbs: [<span class=\"string\">\"get\"</span>,<span class=\"string\">\"list\"</span>,<span class=\"string\">\"watch\"</span>]</span><br><span class=\"line\">  - apiGroups: [<span class=\"string\">\"\"</span>,<span class=\"string\">\"extensions\"</span>]</span><br><span class=\"line\">    resources: [<span class=\"string\">\"configmaps\"</span>,<span class=\"string\">\"secrets\"</span>,<span class=\"string\">\"serviceaccounts\"</span>]</span><br><span class=\"line\">    verbs: [<span class=\"string\">\"create\"</span>, <span class=\"string\">\"delete\"</span>, <span class=\"string\">\"get\"</span>, <span class=\"string\">\"list\"</span>, <span class=\"string\">\"watch\"</span>, <span class=\"string\">\"patch\"</span>, <span class=\"string\">\"update\"</span>]</span><br><span class=\"line\">END</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># appuser 绑定到 app-manager 角色</span></span><br><span class=\"line\"><span class=\"comment\"># 方式1</span></span><br><span class=\"line\">kubectl create rolebinding app-pods --role=app-manager --user=appuser --namespace=app</span><br><span class=\"line\"><span class=\"comment\"># 方式2</span></span><br><span class=\"line\">tee appuser-rolebingding.yaml &lt;&lt;<span class=\"string\">'END'</span></span><br><span class=\"line\">kind: RoleBinding</span><br><span class=\"line\">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: app-pods</span><br><span class=\"line\">  namespace: app</span><br><span class=\"line\">subjects:     <span class=\"comment\"># 需要绑定用户</span></span><br><span class=\"line\">- kind: User</span><br><span class=\"line\">  name: appuser  </span><br><span class=\"line\">  apiGroup: rbac.authorization.k8s.io</span><br><span class=\"line\">roleRef:      <span class=\"comment\"># 绑定指定角色</span></span><br><span class=\"line\">  kind: Role</span><br><span class=\"line\">  name: app-manager</span><br><span class=\"line\">  apiGroup: rbac.authorization.k8s.io</span><br><span class=\"line\">END</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 根据资源清单创建对象</span></span><br><span class=\"line\">~/k8s/certificate$ kubectl apply -f app-manager-role.yaml</span><br><span class=\"line\">  <span class=\"comment\"># role.rbac.authorization.k8s.io/app-manager created</span></span><br><span class=\"line\">~/k8s/certificate$ kubectl apply -f appuser-rolebingding.yaml</span><br><span class=\"line\">  <span class=\"comment\"># rolebinding.rbac.authorization.k8s.io/read-pods created</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 角色与绑定查看</span></span><br><span class=\"line\">~/k8s/certificate$ kubectl get role -n app app-manager</span><br><span class=\"line\">  <span class=\"comment\"># NAME          CREATED AT</span></span><br><span class=\"line\">  <span class=\"comment\"># app-manager   2021-02-25T09:41:01Z</span></span><br><span class=\"line\"></span><br><span class=\"line\">~/k8s/certificate$ kubectl get rolebindings.rbac.authorization.k8s.io -n app</span><br><span class=\"line\">  <span class=\"comment\"># NAME        ROLE               AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># app-pods   Role/app-manager   4m14s</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除绑定</span></span><br><span class=\"line\">~/k8s/certificate$ kubectl delete rolebindings.rbac.authorization.k8s.io -n app <span class=\"built_in\">read</span>-pods</span><br><span class=\"line\">rolebinding.rbac.authorization.k8s.io <span class=\"string\">\"read-pods\"</span> deleted</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br/></p>\n<ul>\n<li><p>(6) 设置上下文参数以及设置当前用户环境为新建的用户;</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 上下文参数</span></span><br><span class=\"line\">kubectl config <span class=\"built_in\">set</span>-context kubernetes \\</span><br><span class=\"line\">--cluster=kubernetes \\</span><br><span class=\"line\">--user=appuser \\</span><br><span class=\"line\">--namespace=app \\</span><br><span class=\"line\">--kubeconfig=appuser.kubeconfig</span><br><span class=\"line\">  <span class=\"comment\"># Context \"kubernetes\" created.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置当前用户环境</span></span><br><span class=\"line\">~/k8s/certificate$ kubectl config use-context  kubernetes --kubeconfig=appuser.kubeconfig</span><br><span class=\"line\">  <span class=\"comment\"># Switched to context \"kubernetes\".</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>(7) 使用<code>appuser.kubeconfig</code>文件覆盖高权限的<code>config</code>文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv <span class=\"variable\">$HOME</span>/.kube/config&#123;,.bak&#125; &amp;&amp; cp appuser.kubeconfig <span class=\"variable\">$HOME</span>/.kube/config</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 发现已经没有别的`namespace`的权限了(只能访问app名称空间中的资源)，同时也不能访问node信息了;</span></span><br><span class=\"line\">~/k8s/certificate$ kubectl get node</span><br><span class=\"line\">  <span class=\"comment\"># Error from server (Forbidden): nodes is forbidden: User \"appuser\" cannot list resource \"nodes\" in API group \"\" at the cluster scope</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 默认是在 app 的名称空间中查询资源</span></span><br><span class=\"line\">~/k8s/certificate$ kubectl get pod</span><br><span class=\"line\">  <span class=\"comment\"># No resources found in app namespace.</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>(8) 客户端配置一览(切换上下文前后)对比</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 切换覆盖.kube/config前</span></span><br><span class=\"line\">/k8s/certificate$ kubectl config view</span><br><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">clusters:</span><br><span class=\"line\">- cluster:</span><br><span class=\"line\">    certificate-authority-data: DATA+OMITTED</span><br><span class=\"line\">    server: https://weiyigeek-lb-vip.k8s:16443</span><br><span class=\"line\">  name: kubernetes</span><br><span class=\"line\">contexts:</span><br><span class=\"line\">- context:</span><br><span class=\"line\">    cluster: kubernetes</span><br><span class=\"line\">    user: kubernetes-admin</span><br><span class=\"line\">  name: kubernetes-admin@kubernetes</span><br><span class=\"line\">current-context: kubernetes-admin@kubernetes</span><br><span class=\"line\">kind: Config</span><br><span class=\"line\">preferences: &#123;&#125;</span><br><span class=\"line\">users:</span><br><span class=\"line\">- name: kubernetes-admin  <span class=\"comment\"># 用户不同</span></span><br><span class=\"line\">  user:</span><br><span class=\"line\">    client-certificate-data: REDACTED</span><br><span class=\"line\">    client-key-data: REDACTED</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ---</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 切换覆盖.kube/config后</span></span><br><span class=\"line\">~/k8s/certificate$ kubectl config view</span><br><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">clusters:</span><br><span class=\"line\">- cluster:</span><br><span class=\"line\">    certificate-authority-data: DATA+OMITTED</span><br><span class=\"line\">    server: https://192.168.12.110:16443</span><br><span class=\"line\">  name: kubernetes</span><br><span class=\"line\">contexts:</span><br><span class=\"line\">- context:</span><br><span class=\"line\">    cluster: kubernetes  <span class=\"comment\"># 集群名称</span></span><br><span class=\"line\">    namespace: app       <span class=\"comment\"># 注意名称空间</span></span><br><span class=\"line\">    user: appuser        <span class=\"comment\"># 用户</span></span><br><span class=\"line\">  name: kubernetes       <span class=\"comment\"># 上下文名称</span></span><br><span class=\"line\">current-context: kubernetes  <span class=\"comment\"># 当前上下文</span></span><br><span class=\"line\">kind: Config</span><br><span class=\"line\">preferences: &#123;&#125;</span><br><span class=\"line\">users:</span><br><span class=\"line\">- name: appuser</span><br><span class=\"line\">  user:</span><br><span class=\"line\">    client-certificate-data: REDACTED</span><br><span class=\"line\">    client-key-data: REDACTED</span><br></pre></td></tr></table></figure>\n<ul>\n<li>(9) 采用appuser用户进行Pod的创建默认在app名称空间之中;</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/.kube$ kubectl run nginx --image nginx:latest --port=80</span><br><span class=\"line\">  <span class=\"comment\"># pod/nginx created</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>(10) 结果验证与查看最后删除Pod</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/.kube$ kubectl get pod -o wide --show-labels</span><br><span class=\"line\">  <span class=\"comment\"># NAME    READY   STATUS    RESTARTS   AGE     IP              NODE       NOMINATED NODE   READINESS GATES   LABELS</span></span><br><span class=\"line\">  <span class=\"comment\"># nginx   1/1     Running   0          2m12s   172.16.24.238   weiyigeek-223   &lt;none&gt;           &lt;none&gt;            run=nginx</span></span><br><span class=\"line\"></span><br><span class=\"line\">~/.kube$ kubectl describe pods nginx</span><br><span class=\"line\">  <span class=\"comment\"># Name:         nginx</span></span><br><span class=\"line\">  <span class=\"comment\"># Namespace:    app</span></span><br><span class=\"line\">  <span class=\"comment\"># Priority:     0</span></span><br><span class=\"line\">  <span class=\"comment\"># Node:         weiyigeek-223/192.168.12.223</span></span><br><span class=\"line\">  <span class=\"comment\"># Start Time:   Thu, 25 Feb 2021 15:11:47 +0000</span></span><br><span class=\"line\">  <span class=\"comment\"># Labels:       run=nginx</span></span><br><span class=\"line\">  <span class=\"comment\"># Annotations:  &lt;none&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># Status:       Running</span></span><br><span class=\"line\">  <span class=\"comment\"># IP:           172.16.24.238</span></span><br><span class=\"line\"></span><br><span class=\"line\">~/.kube$ kubectl delete pod nginx</span><br><span class=\"line\">pod <span class=\"string\">\"nginx\"</span> deleted</span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<h4 id=\"实验3-集群管理员用户权限一览\"><a href=\"#实验3-集群管理员用户权限一览\" class=\"headerlink\" title=\"实验3.集群管理员用户权限一览\"></a>实验3.集群管理员用户权限一览</h4><p>描述: 可通过kubectl命令行获取k8s集群admin用户的权限信息;</p>\n<p>cluster-admin 用户权限信息：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/.kube$ kubectl get clusterrole -n kube-system cluster-admin -o yaml</span><br><span class=\"line\">  <span class=\"comment\"># apiVersion: rbac.authorization.k8s.io/v1</span></span><br><span class=\"line\">  <span class=\"comment\"># kind: ClusterRole</span></span><br><span class=\"line\">  <span class=\"comment\"># metadata:</span></span><br><span class=\"line\">  <span class=\"comment\">#   annotations:</span></span><br><span class=\"line\">  <span class=\"comment\">#     rbac.authorization.kubernetes.io/autoupdate: \"true\"</span></span><br><span class=\"line\">  <span class=\"comment\">#   creationTimestamp: \"2021-01-11T04:55:10Z\"</span></span><br><span class=\"line\">  <span class=\"comment\">#   labels:</span></span><br><span class=\"line\">  <span class=\"comment\">#     kubernetes.io/bootstrapping: rbac-defaults</span></span><br><span class=\"line\">  <span class=\"comment\">#   managedFields:</span></span><br><span class=\"line\">  <span class=\"comment\">#   - apiVersion: rbac.authorization.k8s.io/v1</span></span><br><span class=\"line\">  <span class=\"comment\">#     fieldsType: FieldsV1</span></span><br><span class=\"line\">  <span class=\"comment\">#     fieldsV1:</span></span><br><span class=\"line\">  <span class=\"comment\">#       f:metadata:</span></span><br><span class=\"line\">  <span class=\"comment\">#         f:annotations:</span></span><br><span class=\"line\">  <span class=\"comment\">#           .: &#123;&#125;</span></span><br><span class=\"line\">  <span class=\"comment\">#           f:rbac.authorization.kubernetes.io/autoupdate: &#123;&#125;</span></span><br><span class=\"line\">  <span class=\"comment\">#         f:labels:</span></span><br><span class=\"line\">  <span class=\"comment\">#           .: &#123;&#125;</span></span><br><span class=\"line\">  <span class=\"comment\">#           f:kubernetes.io/bootstrapping: &#123;&#125;</span></span><br><span class=\"line\">  <span class=\"comment\">#       f:rules: &#123;&#125;</span></span><br><span class=\"line\">  <span class=\"comment\">#     manager: kube-apiserver</span></span><br><span class=\"line\">  <span class=\"comment\">#     operation: Update</span></span><br><span class=\"line\">  <span class=\"comment\">#     time: \"2021-01-11T04:55:10Z\"</span></span><br><span class=\"line\">  <span class=\"comment\">#   name: cluster-admin</span></span><br><span class=\"line\">  <span class=\"comment\">#   resourceVersion: \"43\"</span></span><br><span class=\"line\">  <span class=\"comment\">#   selfLink: /apis/rbac.authorization.k8s.io/v1/clusterroles/cluster-admin</span></span><br><span class=\"line\">  <span class=\"comment\">#   uid: 482f7aff-729f-4ddb-9f1c-babc27bf51e9</span></span><br><span class=\"line\">  <span class=\"comment\"># rules:  # 关键点</span></span><br><span class=\"line\">  <span class=\"comment\"># - apiGroups:</span></span><br><span class=\"line\">  <span class=\"comment\">#   - '*'</span></span><br><span class=\"line\">  <span class=\"comment\">#   resources:</span></span><br><span class=\"line\">  <span class=\"comment\">#   - '*'</span></span><br><span class=\"line\">  <span class=\"comment\">#   verbs:</span></span><br><span class=\"line\">  <span class=\"comment\">#   - '*'</span></span><br><span class=\"line\">  <span class=\"comment\"># - nonResourceURLs:</span></span><br><span class=\"line\">  <span class=\"comment\">#   - '*'</span></span><br><span class=\"line\">  <span class=\"comment\">#   verbs:</span></span><br><span class=\"line\">  <span class=\"comment\">#   - '*'</span></span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p><strong>admin 用户权限一览(后续可以备用查表):</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/.kube$ kubectl get clusterrole -n kube-system admin -o yaml</span><br><span class=\"line\">aggregationRule:</span><br><span class=\"line\">  clusterRoleSelectors:</span><br><span class=\"line\">  - matchLabels:</span><br><span class=\"line\">      rbac.authorization.k8s.io/aggregate-to-admin: <span class=\"string\">\"true\"</span></span><br><span class=\"line\">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class=\"line\">kind: ClusterRole</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  annotations:</span><br><span class=\"line\">    rbac.authorization.kubernetes.io/autoupdate: <span class=\"string\">\"true\"</span></span><br><span class=\"line\">  creationTimestamp: <span class=\"string\">\"2021-01-11T04:55:10Z\"</span></span><br><span class=\"line\">  labels:</span><br><span class=\"line\">    kubernetes.io/bootstrapping: rbac-defaults</span><br><span class=\"line\">  managedFields:</span><br><span class=\"line\">  - apiVersion: rbac.authorization.k8s.io/v1</span><br><span class=\"line\">    fieldsType: FieldsV1</span><br><span class=\"line\">    fieldsV1:</span><br><span class=\"line\">      f:aggregationRule:</span><br><span class=\"line\">        .: &#123;&#125;</span><br><span class=\"line\">        f:clusterRoleSelectors: &#123;&#125;</span><br><span class=\"line\">      f:metadata:</span><br><span class=\"line\">        f:annotations:</span><br><span class=\"line\">          .: &#123;&#125;</span><br><span class=\"line\">          f:rbac.authorization.kubernetes.io/autoupdate: &#123;&#125;</span><br><span class=\"line\">        f:labels:</span><br><span class=\"line\">          .: &#123;&#125;</span><br><span class=\"line\">          f:kubernetes.io/bootstrapping: &#123;&#125;</span><br><span class=\"line\">    manager: kube-apiserver</span><br><span class=\"line\">    operation: Update</span><br><span class=\"line\">    time: <span class=\"string\">\"2021-01-11T04:55:10Z\"</span></span><br><span class=\"line\">  - apiVersion: rbac.authorization.k8s.io/v1</span><br><span class=\"line\">    fieldsType: FieldsV1</span><br><span class=\"line\">    fieldsV1:</span><br><span class=\"line\">      f:rules: &#123;&#125;</span><br><span class=\"line\">    manager: kube-controller-manager</span><br><span class=\"line\">    operation: Update</span><br><span class=\"line\">    time: <span class=\"string\">\"2021-01-11T04:55:29Z\"</span></span><br><span class=\"line\">  name: admin</span><br><span class=\"line\">  resourceVersion: <span class=\"string\">\"366\"</span></span><br><span class=\"line\">  selfLink: /apis/rbac.authorization.k8s.io/v1/clusterroles/admin</span><br><span class=\"line\">  uid: 3ea3152e-8e95-4bbc-93b7-8e7aa793270e</span><br><span class=\"line\">rules:</span><br><span class=\"line\">- apiGroups:</span><br><span class=\"line\">  - <span class=\"string\">\"\"</span></span><br><span class=\"line\">  resources:</span><br><span class=\"line\">  - pods/attach</span><br><span class=\"line\">  - pods/<span class=\"built_in\">exec</span></span><br><span class=\"line\">  - pods/portforward</span><br><span class=\"line\">  - pods/proxy</span><br><span class=\"line\">  - secrets</span><br><span class=\"line\">  - services/proxy</span><br><span class=\"line\">  verbs:</span><br><span class=\"line\">  - get</span><br><span class=\"line\">  - list</span><br><span class=\"line\">  - watch</span><br><span class=\"line\">- apiGroups:</span><br><span class=\"line\">  - <span class=\"string\">\"\"</span></span><br><span class=\"line\">  resources:</span><br><span class=\"line\">  - serviceaccounts</span><br><span class=\"line\">  verbs:</span><br><span class=\"line\">  - impersonate</span><br><span class=\"line\">- apiGroups:</span><br><span class=\"line\">  - <span class=\"string\">\"\"</span></span><br><span class=\"line\">  resources:</span><br><span class=\"line\">  - pods</span><br><span class=\"line\">  - pods/attach</span><br><span class=\"line\">  - pods/<span class=\"built_in\">exec</span></span><br><span class=\"line\">  - pods/portforward</span><br><span class=\"line\">  - pods/proxy</span><br><span class=\"line\">  verbs:</span><br><span class=\"line\">  - create</span><br><span class=\"line\">  - delete</span><br><span class=\"line\">  - deletecollection</span><br><span class=\"line\">  - patch</span><br><span class=\"line\">  - update</span><br><span class=\"line\">- apiGroups:</span><br><span class=\"line\">  - <span class=\"string\">\"\"</span></span><br><span class=\"line\">  resources:</span><br><span class=\"line\">  - configmaps</span><br><span class=\"line\">  - endpoints</span><br><span class=\"line\">  - persistentvolumeclaims</span><br><span class=\"line\">  - replicationcontrollers</span><br><span class=\"line\">  - replicationcontrollers/scale</span><br><span class=\"line\">  - secrets</span><br><span class=\"line\">  - serviceaccounts</span><br><span class=\"line\">  - services</span><br><span class=\"line\">  - services/proxy</span><br><span class=\"line\">  verbs:</span><br><span class=\"line\">  - create</span><br><span class=\"line\">  - delete</span><br><span class=\"line\">  - deletecollection</span><br><span class=\"line\">  - patch</span><br><span class=\"line\">  - update</span><br><span class=\"line\">- apiGroups:</span><br><span class=\"line\">  - apps</span><br><span class=\"line\">  resources:</span><br><span class=\"line\">  - daemonsets</span><br><span class=\"line\">  - deployments</span><br><span class=\"line\">  - deployments/rollback</span><br><span class=\"line\">  - deployments/scale</span><br><span class=\"line\">  - replicasets</span><br><span class=\"line\">  - replicasets/scale</span><br><span class=\"line\">  - statefulsets</span><br><span class=\"line\">  - statefulsets/scale</span><br><span class=\"line\">  verbs:</span><br><span class=\"line\">  - create</span><br><span class=\"line\">  - delete</span><br><span class=\"line\">  - deletecollection</span><br><span class=\"line\">  - patch</span><br><span class=\"line\">  - update</span><br><span class=\"line\">- apiGroups:</span><br><span class=\"line\">  - autoscaling</span><br><span class=\"line\">  resources:</span><br><span class=\"line\">  - horizontalpodautoscalers</span><br><span class=\"line\">  verbs:</span><br><span class=\"line\">  - create</span><br><span class=\"line\">  - delete</span><br><span class=\"line\">  - deletecollection</span><br><span class=\"line\">  - patch</span><br><span class=\"line\">  - update</span><br><span class=\"line\">- apiGroups:</span><br><span class=\"line\">  - batch</span><br><span class=\"line\">  resources:</span><br><span class=\"line\">  - cronjobs</span><br><span class=\"line\">  - <span class=\"built_in\">jobs</span></span><br><span class=\"line\">  verbs:</span><br><span class=\"line\">  - create</span><br><span class=\"line\">  - delete</span><br><span class=\"line\">  - deletecollection</span><br><span class=\"line\">  - patch</span><br><span class=\"line\">  - update</span><br><span class=\"line\">- apiGroups:</span><br><span class=\"line\">  - extensions</span><br><span class=\"line\">  resources:</span><br><span class=\"line\">  - daemonsets</span><br><span class=\"line\">  - deployments</span><br><span class=\"line\">  - deployments/rollback</span><br><span class=\"line\">  - deployments/scale</span><br><span class=\"line\">  - ingresses</span><br><span class=\"line\">  - networkpolicies</span><br><span class=\"line\">  - replicasets</span><br><span class=\"line\">  - replicasets/scale</span><br><span class=\"line\">  - replicationcontrollers/scale</span><br><span class=\"line\">  verbs:</span><br><span class=\"line\">  - create</span><br><span class=\"line\">  - delete</span><br><span class=\"line\">  - deletecollection</span><br><span class=\"line\">  - patch</span><br><span class=\"line\">  - update</span><br><span class=\"line\">- apiGroups:</span><br><span class=\"line\">  - policy</span><br><span class=\"line\">  resources:</span><br><span class=\"line\">  - poddisruptionbudgets</span><br><span class=\"line\">  verbs:</span><br><span class=\"line\">  - create</span><br><span class=\"line\">  - delete</span><br><span class=\"line\">  - deletecollection</span><br><span class=\"line\">  - patch</span><br><span class=\"line\">  - update</span><br><span class=\"line\">- apiGroups:</span><br><span class=\"line\">  - networking.k8s.io</span><br><span class=\"line\">  resources:</span><br><span class=\"line\">  - ingresses</span><br><span class=\"line\">  - networkpolicies</span><br><span class=\"line\">  verbs:</span><br><span class=\"line\">  - create</span><br><span class=\"line\">  - delete</span><br><span class=\"line\">  - deletecollection</span><br><span class=\"line\">  - patch</span><br><span class=\"line\">  - update</span><br><span class=\"line\">- apiGroups:</span><br><span class=\"line\">  - <span class=\"string\">\"\"</span></span><br><span class=\"line\">  resources:</span><br><span class=\"line\">  - configmaps</span><br><span class=\"line\">  - endpoints</span><br><span class=\"line\">  - persistentvolumeclaims</span><br><span class=\"line\">  - persistentvolumeclaims/status</span><br><span class=\"line\">  - pods</span><br><span class=\"line\">  - replicationcontrollers</span><br><span class=\"line\">  - replicationcontrollers/scale</span><br><span class=\"line\">  - serviceaccounts</span><br><span class=\"line\">  - services</span><br><span class=\"line\">  - services/status</span><br><span class=\"line\">  verbs:</span><br><span class=\"line\">  - get</span><br><span class=\"line\">  - list</span><br><span class=\"line\">  - watch</span><br><span class=\"line\">- apiGroups:</span><br><span class=\"line\">  - <span class=\"string\">\"\"</span></span><br><span class=\"line\">  resources:</span><br><span class=\"line\">  - bindings</span><br><span class=\"line\">  - events</span><br><span class=\"line\">  - limitranges</span><br><span class=\"line\">  - namespaces/status</span><br><span class=\"line\">  - pods/<span class=\"built_in\">log</span></span><br><span class=\"line\">  - pods/status</span><br><span class=\"line\">  - replicationcontrollers/status</span><br><span class=\"line\">  - resourcequotas</span><br><span class=\"line\">  - resourcequotas/status</span><br><span class=\"line\">  verbs:</span><br><span class=\"line\">  - get</span><br><span class=\"line\">  - list</span><br><span class=\"line\">  - watch</span><br><span class=\"line\">- apiGroups:</span><br><span class=\"line\">  - <span class=\"string\">\"\"</span></span><br><span class=\"line\">  resources:</span><br><span class=\"line\">  - namespaces</span><br><span class=\"line\">  verbs:</span><br><span class=\"line\">  - get</span><br><span class=\"line\">  - list</span><br><span class=\"line\">  - watch</span><br><span class=\"line\">- apiGroups:</span><br><span class=\"line\">  - apps</span><br><span class=\"line\">  resources:</span><br><span class=\"line\">  - controllerrevisions</span><br><span class=\"line\">  - daemonsets</span><br><span class=\"line\">  - daemonsets/status</span><br><span class=\"line\">  - deployments</span><br><span class=\"line\">  - deployments/scale</span><br><span class=\"line\">  - deployments/status</span><br><span class=\"line\">  - replicasets</span><br><span class=\"line\">  - replicasets/scale</span><br><span class=\"line\">  - replicasets/status</span><br><span class=\"line\">  - statefulsets</span><br><span class=\"line\">  - statefulsets/scale</span><br><span class=\"line\">  - statefulsets/status</span><br><span class=\"line\">  verbs:</span><br><span class=\"line\">  - get</span><br><span class=\"line\">  - list</span><br><span class=\"line\">  - watch</span><br><span class=\"line\">- apiGroups:</span><br><span class=\"line\">  - autoscaling</span><br><span class=\"line\">  resources:</span><br><span class=\"line\">  - horizontalpodautoscalers</span><br><span class=\"line\">  - horizontalpodautoscalers/status</span><br><span class=\"line\">  verbs:</span><br><span class=\"line\">  - get</span><br><span class=\"line\">  - list</span><br><span class=\"line\">  - watch</span><br><span class=\"line\">- apiGroups:</span><br><span class=\"line\">  - batch</span><br><span class=\"line\">  resources:</span><br><span class=\"line\">  - cronjobs</span><br><span class=\"line\">  - cronjobs/status</span><br><span class=\"line\">  - <span class=\"built_in\">jobs</span></span><br><span class=\"line\">  - <span class=\"built_in\">jobs</span>/status</span><br><span class=\"line\">  verbs:</span><br><span class=\"line\">  - get</span><br><span class=\"line\">  - list</span><br><span class=\"line\">  - watch</span><br><span class=\"line\">- apiGroups:</span><br><span class=\"line\">  - extensions</span><br><span class=\"line\">  resources:</span><br><span class=\"line\">  - daemonsets</span><br><span class=\"line\">  - daemonsets/status</span><br><span class=\"line\">  - deployments</span><br><span class=\"line\">  - deployments/scale</span><br><span class=\"line\">  - deployments/status</span><br><span class=\"line\">  - ingresses</span><br><span class=\"line\">  - ingresses/status</span><br><span class=\"line\">  - networkpolicies</span><br><span class=\"line\">  - replicasets</span><br><span class=\"line\">  - replicasets/scale</span><br><span class=\"line\">  - replicasets/status</span><br><span class=\"line\">  - replicationcontrollers/scale</span><br><span class=\"line\">  verbs:</span><br><span class=\"line\">  - get</span><br><span class=\"line\">  - list</span><br><span class=\"line\">  - watch</span><br><span class=\"line\">- apiGroups:</span><br><span class=\"line\">  - policy</span><br><span class=\"line\">  resources:</span><br><span class=\"line\">  - poddisruptionbudgets</span><br><span class=\"line\">  - poddisruptionbudgets/status</span><br><span class=\"line\">  verbs:</span><br><span class=\"line\">  - get</span><br><span class=\"line\">  - list</span><br><span class=\"line\">  - watch</span><br><span class=\"line\">- apiGroups:</span><br><span class=\"line\">  - networking.k8s.io</span><br><span class=\"line\">  resources:</span><br><span class=\"line\">  - ingresses</span><br><span class=\"line\">  - ingresses/status</span><br><span class=\"line\">  - networkpolicies</span><br><span class=\"line\">  verbs:</span><br><span class=\"line\">  - get</span><br><span class=\"line\">  - list</span><br><span class=\"line\">  - watch</span><br><span class=\"line\">- apiGroups:</span><br><span class=\"line\">  - authorization.k8s.io</span><br><span class=\"line\">  resources:</span><br><span class=\"line\">  - localsubjectaccessreviews</span><br><span class=\"line\">  verbs:</span><br><span class=\"line\">  - create</span><br><span class=\"line\">- apiGroups:</span><br><span class=\"line\">  - rbac.authorization.k8s.io</span><br><span class=\"line\">  resources:</span><br><span class=\"line\">  - rolebindings</span><br><span class=\"line\">  - roles</span><br><span class=\"line\">  verbs:</span><br><span class=\"line\">  - create</span><br><span class=\"line\">  - delete</span><br><span class=\"line\">  - deletecollection</span><br><span class=\"line\">  - get</span><br><span class=\"line\">  - list</span><br><span class=\"line\">  - patch</span><br><span class=\"line\">  - update</span><br><span class=\"line\">  - watch</span><br></pre></td></tr></table></figure></p>\n","comments":true,"excerpt":null,"categories":[{"name":"Containers","path":"api/categories/Containers.json"},{"name":"OperationTools","path":"api/categories/OperationTools.json"}],"tags":[{"name":"k8s","path":"api/tags/k8s.json"}]}