{"title":"Tomcat应用容器安装和使用","slug":"系统运维/Application/Web/WebApp/Tomcat/1.Tomcat应用容器安装和使用","date":"2019-09-09T09:34:30.000Z","updated":"2023-01-31T02:29:10.469Z","url":"2019/9-9-130.html","path":"api/articles/2019/9-9-130.html.json","covers":["https://img.weiyigeek.top/2019/1/20190910144506.png","https://img.weiyigeek.top/2019/1/20190916125500.png","https://img.weiyigeek.top/2019/1/20190910160728.png","https://img.weiyigeek.top/2019/1/20190912142206.png","https://img.weiyigeek.top/2019/1/20190912142436.png","https://img.weiyigeek.top/2019/1/20190912144011.png","https://img.weiyigeek.top/2019/1/20190912145513.png","https://img.weiyigeek.top/2019/1/20190912152200.png","https://img.weiyigeek.top/2019/1/20190910152645.png","https://img.weiyigeek.top/2019/1/20190910153034.png","https://img.weiyigeek.top/2019/1/20190910153858.png","https://img.weiyigeek.top/2020/1/20200108164450.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h2 id=\"1-前言简述\"><a href=\"#1-前言简述\" class=\"headerlink\" title=\"1.前言简述\"></a>1.前言简述</h2><p>描述:Apache Tomcat是美国Apache软件基金会的一款轻量级Web应用服务器，该程序实现了对Servlet和JSP的支持。<br>Tomcat是在Sun公司推出的小型Servlet/JSP调试工具的基础上发展起来的一个优秀的Servlet容器,已成为目前开发企业JavaWeb应用的最佳Servlet容器选择之一。<br>Tomcat本身完全用java语言编写，所以tomcat的运行需要java的支持，所以要先安装JDK才能运行;</p>\n<p>目前是Apache开源软件组织的一个软件项目它的官网 ：<a href=\"http://tomcat.apache.org\" target=\"_blank\" rel=\"noopener\">http://tomcat.apache.org</a></p>\n<p>使用范围：在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试 JSP 程序的首选</p>\n<p><strong>用途：</strong></p>\n<ul>\n<li>Tomcat 服务器可利用它响应HTML(标准通用标记语言下的一个应用)页面的访问请求。</li>\n<li>Tomcat 是apache的一个中间件软件，其可以提供jsp或者php的解析服务。</li>\n</ul>\n<p><strong>特点:</strong></p>\n<ul>\n<li>Tomcat 服务器是一个免费的开放源代码的Web</li>\n<li>Tomcat 是一个Servlet(独立的进程单独运行的)和JSP容器;</li>\n<li>Tomcat 由一系列可配置的组件构成保证了扩展性;</li>\n</ul>\n<p><br/></p>\n<p><strong>Tomcat的组成结构:</strong></p>\n<ul>\n<li>Tomcat本身由一系列<code>可配置的组件构成</code>，其中核心组件是Servlet容器组件，它是所有其他Tomcat组件的顶层容器。</li>\n<li><p>每个组件都可以在Tomcat安装目录/conf/server.xml文件中进行配置，且每个Tomcat组件在该文件中对应一种配置元素。<br>下面用XML的形式展示各种Tomcat组件之间的关系    </p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Server</span>&gt;</span>代表整个Servlet容器组件，是最顶层元素，可以包含一个或多个元素<span class=\"tag\">&lt;<span class=\"name\">Service</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Service</span>&gt;</span>包含一个<span class=\"tag\">&lt;<span class=\"name\">Engine</span>&gt;</span>元素以及一个或多个<span class=\"tag\">&lt;<span class=\"name\">Connector</span>&gt;</span>元素，这些<span class=\"tag\">&lt;<span class=\"name\">Connector</span>&gt;</span>共享一个<span class=\"tag\">&lt;<span class=\"name\">Engine</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Connector</span>/&gt;</span>代表和客户程序实际交互的组件，负责接收客户请求，以及向客户返回响应</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Engine</span>&gt;</span>每个<span class=\"tag\">&lt;<span class=\"name\">Service</span>&gt;</span>元素只能包含一个<span class=\"tag\">&lt;<span class=\"name\">Engine</span>&gt;</span>元素，它处理在同一个<span class=\"tag\">&lt;<span class=\"name\">Service</span>&gt;</span>中所有<span class=\"tag\">&lt;<span class=\"name\">Connector</span>&gt;</span>接收到的客户请求</span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">Host</span>&gt;</span>在一个<span class=\"tag\">&lt;<span class=\"name\">Engine</span>&gt;</span>中可以包含多个<span class=\"tag\">&lt;<span class=\"name\">Host</span>&gt;</span>,它代表一个虚拟主机(即一个服务器程序可以部署在多个有不同IP的服务器主机上)，它可以包含一个或多个应用</span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">Context</span>&gt;</span>使用最频繁的元素，代表了运行在虚拟主机上的单个web应用</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">Host</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Engine</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">Service</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Server</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Tomcat体系结构图</p>\n</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20190910144506.png\" alt=\"WeiyiGeek.体系结构图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.体系结构图</p>\n            </figure>\n<p><strong>JavaWeb应用的发布方式:</strong></p>\n<ul>\n<li>开放式目录方式:将应用复制到webapp/ROOT目录之中进行部署;</li>\n<li>利用war包部署方式:使用 Jar -cvf *.war 打包成为war包,然后采用manager进行部署或者采用IDEA直接部署;</li>\n</ul>\n<p>常常使用场景:<br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20190916125500.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p><strong>补充</strong>:</p>\n<ul>\n<li>Tomcat处理静态HTML的能力不如Apache服务器。</li>\n<li>Tomcat不能直接支持和作为负载均衡。</li>\n</ul>\n<hr>\n\n<h2 id=\"2-安装介绍\"><a href=\"#2-安装介绍\" class=\"headerlink\" title=\"2.安装介绍\"></a>2.安装介绍</h2><h3 id=\"2-1-环境安装\"><a href=\"#2-1-环境安装\" class=\"headerlink\" title=\"2.1 环境安装\"></a>2.1 环境安装</h3><ul>\n<li>JDK全称是 Java Development Kit，是SUN公司免费提供的java语言的软件开发工具包，其中包含Java虚拟机（JVM），编写好的java源程序经过编译可生产java字节码，利用JVM解释这些字节码文件从而保证了Java的跨平台性。<ul>\n<li>JDK下载地址:<a href=\"http://www.oracle.com/technetwork/java/javase/downloads/\" target=\"_blank\" rel=\"noopener\">http://www.oracle.com/technetwork/java/javase/downloads/</a></li>\n</ul>\n</li>\n<li>Tomcat下载地址:<a href=\"http://tomcat.apache.org\" target=\"_blank\" rel=\"noopener\">http://tomcat.apache.org</a></li>\n</ul>\n<p>安装环境:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Centos7.x 3.10.0-957.12.2.el7.x86_64 </span><br><span class=\"line\">JDK 1.8 </span><br><span class=\"line\">Tomcat 8.x</span><br></pre></td></tr></table></figure></p>\n<p>安装操作步骤:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#1.卸载系统自带的openjdk并安装jdk</span></span><br><span class=\"line\">rm -rf $(<span class=\"built_in\">which</span> java)</span><br><span class=\"line\">tar xf jdk-7u80-linux-x64.tar</span><br><span class=\"line\">mv jdk1.7.0_80/ /usr/<span class=\"built_in\">local</span>/java</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#2.解压安装Tomcat</span></span><br><span class=\"line\">tar xf apache-tomcat-8.5.20.tar.gz</span><br><span class=\"line\">mv apache-tomcat-8.5.20 /usr/<span class=\"built_in\">local</span>/tomcat8</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#3.设置JAVA与TOMCAT环境变量</span></span><br><span class=\"line\"><span class=\"variable\">$cat</span> &gt;&gt; /etc/profile.d/javaEnv.sh&lt;&lt;END</span><br><span class=\"line\"><span class=\"comment\">#设置java根目录</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> JAVA_HOME=/opt/tomcat/jdk8</span><br><span class=\"line\"><span class=\"built_in\">export</span> JRE_HOME=/opt/tomcat/jdk8/jre</span><br><span class=\"line\"><span class=\"built_in\">export</span> CLASSPATH=.:\\<span class=\"variable\">$JAVA_HOME</span>/lib/dt.jar:\\<span class=\"variable\">$JAVA_HOME</span>/lib/tools.jar:\\<span class=\"variable\">$CATALINA_HOME</span>/lib/servlet-api.jar</span><br><span class=\"line\"><span class=\"comment\">#Tomcat路径设置</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> TOMCAT_HOME=/opt/tomcat/apache-tomcat-8.5.45</span><br><span class=\"line\"><span class=\"built_in\">export</span> CATALINA_HOME=/opt/tomcat//apache-tomcat-8.5.45</span><br><span class=\"line\"><span class=\"comment\">#在PATH环境变量中添加java跟目录的bin子目录</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=\\<span class=\"variable\">$PATH</span>:\\<span class=\"variable\">$JAVA_HOME</span>/bin:\\<span class=\"variable\">$TOMCAT_HOME</span>/bin</span><br><span class=\"line\">END</span><br><span class=\"line\"></span><br><span class=\"line\">$. /etc/profile <span class=\"comment\">#将java.sh 脚本导入到环境变量，使其生效</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#4.运行 java -version 或者 javac -version 命令查看java版本</span></span><br><span class=\"line\"><span class=\"variable\">$java</span> -version</span><br><span class=\"line\">java version <span class=\"string\">\"1.7.0_65\"</span></span><br><span class=\"line\">Java(TM) SE Runtime Environment (build 1.7.0_65-b17)</span><br><span class=\"line\">Java HotSpot(TM) 64-Bit Server VM (build 24.65-b04, mixed mode)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#5.查看tomcat的安装情况</span></span><br><span class=\"line\">catalina.sh version</span><br><span class=\"line\">Using CATALINA_BASE:   /opt/tomcat//apache-tomcat-8.5.45</span><br><span class=\"line\">Using CATALINA_HOME:   /opt/tomcat//apache-tomcat-8.5.45</span><br><span class=\"line\">Using CATALINA_TMPDIR: /opt/tomcat//apache-tomcat-8.5.45/temp</span><br><span class=\"line\">Using JRE_HOME:        /opt/tomcat/jdk8/jre</span><br><span class=\"line\">Using CLASSPATH:       /opt/tomcat//apache-tomcat-8.5.45/bin/bootstrap.jar:/opt/tomcat//apache-tomcat-8.5.45/bin/tomcat-juli.jar</span><br><span class=\"line\">Server version: Apache Tomcat/8.5.45</span><br><span class=\"line\">Server built:   Aug 14 2019 22:21:25 UTC</span><br><span class=\"line\">Server number:  8.5.45.0</span><br><span class=\"line\">OS Name:        Linux</span><br><span class=\"line\">OS Version:     3.10.0-957.12.2.el7.x86_64</span><br><span class=\"line\">Architecture:   amd64</span><br><span class=\"line\">JVM Version:    1.8.0_211-b12</span><br><span class=\"line\">JVM Vendor:     Oracle Corporation</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#6.启动Tomcat</span></span><br><span class=\"line\">$/usr/<span class=\"built_in\">local</span>/tomcat7/bin/startup.sh</span><br><span class=\"line\">Using CATALINA_BASE: /usr/<span class=\"built_in\">local</span>/tomcat7</span><br><span class=\"line\">Using CATALINA_HOME: /usr/<span class=\"built_in\">local</span>/tomcat7</span><br><span class=\"line\">Using CATALINA_TMPDIR: /usr/<span class=\"built_in\">local</span>/tomcat7/temp</span><br><span class=\"line\">Using JRE_HOME: /usr/<span class=\"built_in\">local</span>/java</span><br><span class=\"line\">Using CLASSPATH: /usr/<span class=\"built_in\">local</span>/tomcat7/bin/bootstrap.jar:/usr/<span class=\"built_in\">local</span>/tomcat7/bin/tomcat-juli.jar</span><br><span class=\"line\">Tomcat started.</span><br><span class=\"line\">Tomcat 默认运行在8080端口</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$netstat</span> -anpt |grep :8080</span><br><span class=\"line\">tcp 0 0 :::8080 :::* LISTEN 3318/java</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#7.关闭Tomcat浏览器访问测试 http://IP:端口</span></span><br><span class=\"line\">/usr/<span class=\"built_in\">local</span>/tomcat7/bin/shutdown.sh</span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20190910160728.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n<p><br></p>\n<p><strong>Docker 方式安装运行</strong><br>描述:tomcat映像有多种样式，每一种都是针对特定的用例设计的。</p>\n<ul>\n<li><code>tomcat:&lt;version&gt;</code> : 基础镜像基于Debian</li>\n<li><code>tomcat:&lt;version&gt;-slim</code> : 此映像不包含默认标记中包含的公共包，只包含运行tomcat所需的最小包。除非您工作的环境中只部署tomcat映像，并且您有空间限制，否则我们强烈建议使用此存储库的默认映像。</li>\n</ul>\n<p>此处以 tomcat:8.5.57-jdk8-openjdk-slim 为例进行安装使用:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker pull tomcat:8.5.57-jdk8-openjdk-slim</span><br><span class=\"line\"><span class=\"comment\"># 在实际有上传或者存储其它文件的应用情况下不建议采用直接挂载单个War包</span></span><br><span class=\"line\">$ docker run -it -v /apps/webapps/Hello.war:/usr/<span class=\"built_in\">local</span>/tomcat/webapps/Hello.war --rm -p 8888:8080 tomcat:8.5.57-jdk8-openjdk-slim </span><br><span class=\"line\"><span class=\"comment\"># Run the default Tomcat server (CMD [\"catalina.sh\", \"run\"]):</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>Tomcat 8.x 镜像中文与时区支持</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 版本修改情况:</span></span><br><span class=\"line\"><span class=\"comment\"># 1.镜像源以及中文字符集和东八区时区设置</span></span><br><span class=\"line\">FROM tomcat:8.5.64-jdk8</span><br><span class=\"line\">MAINTAINER  weiyigeek - &lt;master@weiyigeek.top&gt; - Tomcat env Support zh_CN UTF-8</span><br><span class=\"line\">RUN curl -s http://192.168.12.107:8080/sources.list -o /etc/apt/sources.list &amp;&amp; \\</span><br><span class=\"line\">    apt-get update &amp;&amp; \\</span><br><span class=\"line\">    apt-get install -y locales &amp;&amp; \\</span><br><span class=\"line\">    localedef -i zh_CN -c -f UTF-8 zh_CN.UTF-8 &amp;&amp; \\</span><br><span class=\"line\">    <span class=\"built_in\">export</span> LANG=zh_CN.UTF-8 &amp;&amp; \\</span><br><span class=\"line\">    cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; \\</span><br><span class=\"line\">    <span class=\"built_in\">echo</span> <span class=\"string\">\"Asia/shanghai\"</span> &gt; /etc/timezone</span><br><span class=\"line\">CMD [<span class=\"string\">\"catalina.sh\"</span>, <span class=\"string\">\"run\"</span>]</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"2-2-常用命令\"><a href=\"#2-2-常用命令\" class=\"headerlink\" title=\"2.2 常用命令\"></a>2.2 常用命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ tree /opt/tomcat/apache-tomcat-8.5.45/bin</span><br><span class=\"line\">├── bootstrap.jar</span><br><span class=\"line\">├── catalina.bat  <span class=\"comment\">#windows下的启动停止文件</span></span><br><span class=\"line\">├── catalina.sh   <span class=\"comment\">#Linux下启动停止文件</span></span><br><span class=\"line\">├── catalina-tasks.xml</span><br><span class=\"line\">├── ciphers.bat</span><br><span class=\"line\">├── ciphers.sh</span><br><span class=\"line\">├── commons-daemon.jar</span><br><span class=\"line\">├── commons-daemon-native.tar.gz</span><br><span class=\"line\">├── configtest.bat</span><br><span class=\"line\">├── configtest.sh</span><br><span class=\"line\">├── daemon.sh  <span class=\"comment\">#守护进程方式</span></span><br><span class=\"line\">├── digest.bat</span><br><span class=\"line\">├── digest.sh</span><br><span class=\"line\">├── setclasspath.bat</span><br><span class=\"line\">├── setclasspath.sh</span><br><span class=\"line\">├── shutdown.bat  <span class=\"comment\">#停止tomcat</span></span><br><span class=\"line\">├── shutdown.sh</span><br><span class=\"line\">├── startup.bat   <span class=\"comment\">#启动tomcat</span></span><br><span class=\"line\">├── startup.sh</span><br><span class=\"line\">├── tomcat-juli.jar</span><br><span class=\"line\">├── tomcat-native.tar.gz</span><br><span class=\"line\">├── tool-wrapper.bat</span><br><span class=\"line\">├── tool-wrapper.sh</span><br><span class=\"line\">├── version.bat</span><br><span class=\"line\">└── version.sh  <span class=\"comment\">#版本信息</span></span><br></pre></td></tr></table></figure>\n<p><br></p>\n<h3 id=\"2-3-Tomcat-镜像构建\"><a href=\"#2-3-Tomcat-镜像构建\" class=\"headerlink\" title=\"2.3 Tomcat 镜像构建\"></a>2.3 Tomcat 镜像构建</h3><p>描述: 自定义构建Tomcat镜像能更好的适应实际应用环境。</p>\n<h3 id=\"2-3-TomEE-镜像构建\"><a href=\"#2-3-TomEE-镜像构建\" class=\"headerlink\" title=\"2.3 TomEE 镜像构建\"></a>2.3 TomEE 镜像构建</h3><p>描述: 自定义构建TomEE镜像能更好的适应实际应用环境。<br><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> openjdk:<span class=\"number\">8</span>-slim-buster</span><br><span class=\"line\"><span class=\"keyword\">LABEL</span><span class=\"bash\"> MAINTAINER=WeiyiGeek \\</span></span><br><span class=\"line\"><span class=\"bash\">      EMAIL=master@weiyigeek.top \\</span></span><br><span class=\"line\"><span class=\"bash\">      DESC=Build Debian+OpenJDK+Tomee container images</span></span><br><span class=\"line\"><span class=\"keyword\">ENV</span> CATALINA_HOME=/usr/local/tomee \\</span><br><span class=\"line\">    PATH=/usr/local/tomee/bin:$PATH \\</span><br><span class=\"line\">    TOMEE_VER=<span class=\"number\">8.0</span>.<span class=\"number\">6</span> \\</span><br><span class=\"line\">    TOMEE_BUILD=webprofile \\</span><br><span class=\"line\">    TZ=Asia/Shanghai \\</span><br><span class=\"line\">    LANG=zh_CN.UTF-<span class=\"number\">8</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> <span class=\"built_in\">set</span> -ex \\</span></span><br><span class=\"line\"><span class=\"bash\">  &amp;&amp; mkdir -p <span class=\"string\">\"<span class=\"variable\">$CATALINA_HOME</span>\"</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">  &amp;&amp; <span class=\"built_in\">ulimit</span> -HSn 65535 \\</span></span><br><span class=\"line\"><span class=\"bash\">  &amp;&amp; sed -i <span class=\"string\">\"/# End/i *  soft  nproc   65535\"</span> /etc/security/limits.conf \\</span></span><br><span class=\"line\"><span class=\"bash\">  &amp;&amp; sed -i <span class=\"string\">\"/# End/i *  hard  nproc   65535\"</span> /etc/security/limits.conf \\</span></span><br><span class=\"line\"><span class=\"bash\">  &amp;&amp; sed -i -e <span class=\"string\">'s#http://deb.debian.org#https://mirrors.huaweicloud.com#g'</span> -e <span class=\"string\">'s|deb http:|#deb http:|g'</span> /etc/apt/sources.list \\</span></span><br><span class=\"line\"><span class=\"bash\">  &amp;&amp; apt-get update \\</span></span><br><span class=\"line\"><span class=\"bash\">  &amp;&amp; apt-get install -y curl apt-transport-https locales \\</span></span><br><span class=\"line\"><span class=\"bash\">  &amp;&amp; localedef -i zh_CN -c -f UTF-8 -A /usr/share/locale/locale.alias zh_CN.UTF-8 \\</span></span><br><span class=\"line\"><span class=\"bash\">  &amp;&amp; cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\</span></span><br><span class=\"line\"><span class=\"bash\">  &amp;&amp; apt-get clean &amp;&amp; apt-get autoclean &amp;&amp; apt-get -y autoremove \\</span></span><br><span class=\"line\"><span class=\"bash\">  &amp;&amp; rm -rf /var/lib/apt/lists/*</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"bash\"> <span class=\"variable\">$CATALINA_HOME</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># curl -fsSL 'https://www.apache.org/dist/tomee/KEYS' | awk -F ' = ' '$1 ~ /^ +Key fingerprint$/ &#123; gsub(\" \", \"\", $2); print $2 &#125;' | sort -u</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span><span class=\"bash\"> <span class=\"built_in\">set</span> -x \\</span></span><br><span class=\"line\"><span class=\"bash\">    <span class=\"comment\"># for key in \\</span></span></span><br><span class=\"line\"><span class=\"bash\">    <span class=\"comment\">#   223D3A74B068ECA354DC385CE126833F9CF64915 \\</span></span></span><br><span class=\"line\"><span class=\"bash\">    <span class=\"comment\">#   7A2744A8A9AAF063C23EB7868EBE7DBE8D050EEF \\</span></span></span><br><span class=\"line\"><span class=\"bash\">    <span class=\"comment\">#   82D8419BA697F0E7FB85916EE91287822FDB81B1 \\</span></span></span><br><span class=\"line\"><span class=\"bash\">    <span class=\"comment\">#   9056B710F1E332780DE7AF34CBAEBE39A46C4CA1 \\</span></span></span><br><span class=\"line\"><span class=\"bash\">    <span class=\"comment\">#   A57DAF81C1B69921F4BA8723A8DE0A4DB863A7C1 \\</span></span></span><br><span class=\"line\"><span class=\"bash\">    <span class=\"comment\">#   B7574789F5018690043E6DD9C212662E12F3E1DD \\</span></span></span><br><span class=\"line\"><span class=\"bash\">    <span class=\"comment\">#   B8B301E6105DF628076BD92C5483E55897ABD9B9 \\</span></span></span><br><span class=\"line\"><span class=\"bash\">    <span class=\"comment\">#   DBCCD103B8B24F86FFAAB025C8BB472CD297D428 \\</span></span></span><br><span class=\"line\"><span class=\"bash\">    <span class=\"comment\">#   F067B8140F5DD80E1D3B5D92318242FE9A0B1183 \\</span></span></span><br><span class=\"line\"><span class=\"bash\">    <span class=\"comment\">#   FAA603D58B1BA4EDF65896D0ED340E0E6D545F97 \\</span></span></span><br><span class=\"line\"><span class=\"bash\">    <span class=\"comment\">#   ; do \\</span></span></span><br><span class=\"line\"><span class=\"bash\">    <span class=\"comment\">#   gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys \"$key\" || \\</span></span></span><br><span class=\"line\"><span class=\"bash\">    <span class=\"comment\">#   gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys \"$key\" || \\</span></span></span><br><span class=\"line\"><span class=\"bash\">    <span class=\"comment\">#   gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\" ; \\</span></span></span><br><span class=\"line\"><span class=\"bash\">    <span class=\"comment\"># done \\</span></span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; curl -fSL https://mirrors.aliyun.com/apache/tomee/tomee-<span class=\"variable\">$&#123;TOMEE_VER&#125;</span>/apache-tomee-<span class=\"variable\">$&#123;TOMEE_VER&#125;</span>-<span class=\"variable\">$&#123;TOMEE_BUILD&#125;</span>.tar.gz -o tomee.tar.gz \\</span></span><br><span class=\"line\"><span class=\"bash\">    <span class=\"comment\"># &amp;&amp; curl -fSL https://dist.apache.org/repos/dist/release/tomee/tomee-$&#123;TOMEE_VER&#125;/apache-tomee-$&#123;TOMEE_VER&#125;-$&#123;TOMEE_BUILD&#125;.tar.gz.asc -o tomee.tar.gz.asc \\</span></span></span><br><span class=\"line\"><span class=\"bash\">    <span class=\"comment\"># &amp;&amp; gpg --batch --verify tomee.tar.gz.asc tomee.tar.gz \\</span></span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; tar -zxf tomee.tar.gz \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; mv apache-tomee-<span class=\"variable\">$&#123;TOMEE_BUILD&#125;</span>-<span class=\"variable\">$&#123;TOMEE_VER&#125;</span>/* /usr/<span class=\"built_in\">local</span>/tomee \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; mv <span class=\"variable\">$&#123;CATALINA_HOME&#125;</span>/webapps/ROOT <span class=\"variable\">$&#123;CATALINA_HOME&#125;</span>/webapps/Demo \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; cp <span class=\"variable\">$&#123;CATALINA_HOME&#125;</span>/conf/web.xml <span class=\"variable\">$&#123;CATALINA_HOME&#125;</span>/conf/web.xml.bak \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; cp <span class=\"variable\">$&#123;CATALINA_HOME&#125;</span>/conf/server.xml <span class=\"variable\">$&#123;CATALINA_HOME&#125;</span>/conf/server.xml.bak \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; curl http://soft.weiyigeek.top:8000/web.xml -o <span class=\"variable\">$&#123;CATALINA_HOME&#125;</span>/conf/web.xml \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; curl http://soft.weiyigeek.top:8000/server.xml -o <span class=\"variable\">$&#123;CATALINA_HOME&#125;</span>/conf/server.xml \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; rm tomee.tar.gz \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; rm bin/*.bat \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; rm bin/*.exe \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; rm -rf apache-tomee-<span class=\"variable\">$&#123;TOMEE_BUILD&#125;</span>-<span class=\"variable\">$&#123;TOMEE_VER&#125;</span> \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; rm -rf <span class=\"variable\">$&#123;CATALINA_HOME&#125;</span>/webapps/manager <span class=\"variable\">$&#123;CATALINA_HOME&#125;</span>/webapps/docs <span class=\"variable\">$&#123;CATALINA_HOME&#125;</span>/webapps/host-manager \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/* \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; find /var/<span class=\"built_in\">log</span>/ -<span class=\"built_in\">type</span> f -<span class=\"built_in\">exec</span> truncate -s 0 &#123;&#125; \\; \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; find <span class=\"variable\">$&#123;CATALINA_HOME&#125;</span>/ -maxdepth 1 -<span class=\"built_in\">type</span> f -delete \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; useradd -g root tomee \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; chown -R tomee:root /usr/<span class=\"built_in\">local</span>/tomee \\</span></span><br><span class=\"line\"><span class=\"bash\">    &amp;&amp; chmod -R g=u /usr/<span class=\"built_in\">local</span>/tomee</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">USER</span> tomee</span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">8080</span></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"bash\"> [<span class=\"string\">\"catalina.sh\"</span>, <span class=\"string\">\"run\"</span>]</span></span><br></pre></td></tr></table></figure></p>\n<p>执行docker build构建镜像，然后使用该镜像进行创建容器。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker build -t weiyigeek/tomee-8.0.6:latest -f Dockerfile .</span><br><span class=\"line\">$ docker run -d --name hello-world -p 8080:8080 \\</span><br><span class=\"line\">  -v /app/hello-world.war:/usr/<span class=\"built_in\">local</span>/tomee/webapps/ROOT.war \\ </span><br><span class=\"line\">  weiyigeek/tomee-8.0.6:latest</span><br></pre></td></tr></table></figure></p>\n<p>Tips : 自定义的安装软件时，当从远程http服务器中拉取时推荐采用自定义域名的方式。</p>\n<hr>\n<h2 id=\"3-配置部署\"><a href=\"#3-配置部署\" class=\"headerlink\" title=\"3.配置部署\"></a>3.配置部署</h2><p>(1)虚拟目录的映射方式<br>从Tomcat6开始支持自动映射，即tomcat服务器会自动管理webapps目录下的所有web应用，并把它映射成虚拟目录，换句话说<code>只需把web应用放在webapps目录下，不需要配置Context，外界可以直接访问</code>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#如果是放入非webapps目录下是放在其他地方，还是需要配置Context</span></span><br><span class=\"line\"><span class=\"comment\">#比如我的tomcat在C盘，我的项目在D盘,则需要在Host下增加如下虚拟目录映射语句。</span></span><br><span class=\"line\">&lt;Context path=<span class=\"string\">\"/myapp\"</span> docBase=<span class=\"string\">\"D:/work/myapp\"</span>&gt;&lt;/Context&gt;</span><br></pre></td></tr></table></figure>\n<p>(2)Context元素配置<br>tomcat在加载一个web应用时，会一次按照以下五种方式查找web应用中的元素，<code>优先级异常降低直到找到为止</code></p>\n<ul>\n<li>1.到Tomcat安装目录/conf/Context.xml文件中查找元素。</li>\n<li><ol start=\"2\">\n<li>到Tomcat安装录/conf/[enginename]/[hostname]/context.xml.default文件中查找元素。<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[enginename]:表示的name属性</span><br><span class=\"line\">[hostname]:表示d的那么属性</span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li>3.到Tomcat安装目录/conf/[enginename]/[hostname]/[contextpath].xml文件中查找元素<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[contextpath]:表示单个Web应用的URL入口</span><br></pre></td></tr></table></figure></li>\n<li>4.到Web应用的META-INF/context.xml文件中查找元素</li>\n<li>5.到Tomcat安装目录/conf/server.xml文件中查找元素。只适用于单个Web应用</li>\n</ul>\n<p><br></p>\n<p>(3)web.xml文件<br>该文件必须放在/WEB-INF目录下，但是从7.0版本开始Tomcat可以不使用web.xml文件，而是使用注解方式。</p>\n<p><br></p>\n<p>(4)将项目部署为Tomcat默认应用<br>即访问 <a href=\"http://localhost:8080\" target=\"_blank\" rel=\"noopener\">http://localhost:8080</a> 时出来的是tomcat自带的欢迎页面，改为登录到自己的项目主页。</p>\n<p><em>方法一:</em><br>在Tomcat默认安装后，tomcat的主目录是webapps/root目录，所以如果想改变tomcat的主目录的话可以如下所做：</p>\n<p>在/conf/server.xml文件的<HOST></HOST>之间加入代码<br><figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;Context path=\"\" docBase=\"C:\\tomcat7\\webapps\\myapp\" reloadable=\"true\" debug=\"0\"&gt;&lt;/Context&gt;</span><br><span class=\"line\">&lt;!--</span><br><span class=\"line\">docBase改为自己需要的项目路径</span><br><span class=\"line\">如果建立了Apache和tomcat集群，Apache server 的默认端口是<span class=\"number\">80</span> ，IE访问的方法只需输入：http:<span class=\"comment\">//localhost,就可以自动定位到xx工程下面去</span></span><br><span class=\"line\">--&gt;</span><br></pre></td></tr></table></figure><br><br></p>\n<p><em>方法二：</em><br>将tomcat安装目录下的ROOT下的所有文件删除，换成自己项目的文件，此法有点暴力。</p>\n<p><br></p>\n<p><em>方法三：</em><br>Tomcat5.0以下版本在<code>C:/Tomcat/conf/Catalina/localhost</code>目录下会自动生成了一个ROOT.Xml，但是5.0以上版本不再生成此文件。</p>\n<p>所以可以新建个ROOT.xml,在里面加入如下代码：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--但是我自己在7.0版本上测试好像未成功，推荐方式1--&gt;</span><br><span class=\"line\">&lt;?Xml version=<span class=\"string\">'1.0'</span> encoding=<span class=\"string\">'utf-8'</span>?&gt;</span><br><span class=\"line\">&lt;Context crossContext=<span class=\"string\">\"true\"</span> docBase=<span class=\"string\">\"C:\\tomcat7\\webapps\\myapp\"</span> path=<span class=\"string\">\"\"</span> reloadable=<span class=\"string\">\"true\"</span>&gt;</span><br><span class=\"line\">&lt;/Context&gt;</span><br></pre></td></tr></table></figure></p>\n<p><em>Context元素的属性解释</em></p>\n<ul>\n<li>path: 指定访问该Web应用的URL入口</li>\n<li>docBase: 指定Web应用的文件路径，可以写绝对路径，也可以写相对于appBase属性的相对路径</li>\n<li>className: 指定实现Context组件的Java类的名字，这个类必须实现org.apache.catalina.Contex接口，该属性默认值为org.apache.catalina.core.StandardContext（不建议大家改动）</li>\n<li>reloadable:<ul>\n<li>true:Tomcat服务器在运行状态下回监视在WEB-INF/classes和WEB-INF/lib目录下的class文件的改动，以及监视Web应用的WEB-INF/web.xml文件的改动，如果检测到有更新，服务器会自动更新加载web应用。</li>\n<li>false:Tomcat可以降低Tomcat的运行负荷，提高Tomcat的运行性能</li>\n</ul>\n</li>\n<li>元素都会使用默认的标准Context组件，即className属性采用默认值org.apache.catalina.core.StandardContext，它除了拥有上面介绍到的属性外，还有自身专有的属性： <ul>\n<li>cachingAllowed：是否允许启用静态资源(HTML、图片、声音等)的缓存。默认值为true。</li>\n<li>cacheMaxSize：设置静态资源缓存的最大值，单位为K。</li>\n<li>workDir：指定Web应用的工作目录。</li>\n<li>uppackWAR：默认值为true会把war文件展开为开放目录后再运行;为false时候直接运行war文件。</li>\n</ul>\n</li>\n</ul>\n<hr>\n\n<h2 id=\"4-监控运行\"><a href=\"#4-监控运行\" class=\"headerlink\" title=\"4.监控运行\"></a>4.监控运行</h2><h3 id=\"4-1-Tomcat-配置-JMX-连接\"><a href=\"#4-1-Tomcat-配置-JMX-连接\" class=\"headerlink\" title=\"4.1 Tomcat 配置 JMX 连接\"></a>4.1 Tomcat 配置 JMX 连接</h3><p>描述:开启 JMX 远程连接以后，就可以通过 jconsole 和 jvisualvm 两个 JDK 内置工具连接 JMX 从而查看当前主机的 JVM 相关信息。<br><code>JMX（Java Management Extensions，即Java管理扩展）</code>是一个为应用程序、设备、系统等植入管理功能的框架。JMX可以跨越一系列异构操作系统平台、系统体系结构和网络传输协议，灵活的开发无缝集成的系统、网络和服务管理应用。</p>\n<ul>\n<li>Jconsole 是 JDK 自带的监控工具，在 JDK/bin 目录下可以找到。它用于连接正在运行的本地或者远程的 JVM，对运行在 java 应用程序的资源消耗和性能进行监控，并画出大量的图表，提供强大的可视化界面。</li>\n<li>jvisualvm 同样是 JDK 内置的工具，使用方法与 jconsole 类似。功能上要比 jconsole 强大一些。推荐使用。</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/tomcat/bin/</span><br><span class=\"line\"><span class=\"comment\">#默认情况下，$CATALINA_HOME/bin 目录下是没有 setenv.sh，可以自己新建此文件</span></span><br><span class=\"line\">$ vim setenv.sh</span><br><span class=\"line\">CATALINA_OPTS=<span class=\"string\">\"-Djava.rmi.server.hostname=10.100.4.169</span></span><br><span class=\"line\"><span class=\"string\">-Dcom.sun.management.jmxremote.port=8686</span></span><br><span class=\"line\"><span class=\"string\">-Dcom.sun.management.jmxremote.authenticate=false</span></span><br><span class=\"line\"><span class=\"string\">-Dcom.sun.management.jmxremote.ssl=false\"</span></span><br><span class=\"line\">:wq</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#重新设置setenv.sh进行认证</span></span><br><span class=\"line\">CATALINA_OPTS=<span class=\"string\">\"-Djava.rmi.server.hostname=10.10.107.222 -Dcom.sun.management.jmxremote.port=8686 -Dcom.sun.management.jmxremote.authenticate=true -Dcom.sun.management.jmxremote.access='admin' -Dcom.sun.management.jmxremote.password='weiyigeek' -Dcom.sun.management.jmxremote.ssl=false\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">JMX 配置说明：</span><br><span class=\"line\">-Dcom.sun.management.jmxremote</span><br><span class=\"line\"><span class=\"comment\"># 通过哪个 IP 访问本机的 JMX </span></span><br><span class=\"line\">-Djava.rmi.server.hostname=10.100.4.169</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># JMX 监听的端口，默认 8686</span></span><br><span class=\"line\">-Dcom.sun.management.jmxremote.port=8686</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 是否需要用户名密码认证，默认 false这里进行认证</span></span><br><span class=\"line\">-Dcom.sun.management.jmxremote.authenticate=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\">#密码</span></span><br><span class=\"line\">-Dcom.sun.management.jmxremote.password.file=/opt/…/jmxremote.password</span><br><span class=\"line\"><span class=\"comment\">#登录用户</span></span><br><span class=\"line\">-Dcom.sun.management.jmxremote.access.file=/opt/…/jmxremote.access</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 是否启用 SSL</span></span><br><span class=\"line\">-Dcom.sun.management.jmxremote.ssl=<span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#jmxremote.password模板：</span></span><br><span class=\"line\">[用户名] [密码]</span><br><span class=\"line\">mtct ct.meituan</span><br><span class=\"line\"><span class=\"built_in\">test</span> <span class=\"built_in\">test</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#jmxremote.access模板：</span></span><br><span class=\"line\">[用户名] [权限]</span><br><span class=\"line\">mtct readwrite</span><br><span class=\"line\"><span class=\"built_in\">test</span> <span class=\"built_in\">readonly</span></span><br></pre></td></tr></table></figure>\n<p>注意事项：</p>\n<ul>\n<li>jmxremote.password和jmxremote.access文件只允许启动用户名对该文件拥有读写权限,<code>chmod 600 jmxremote.password &amp; jmxremote.access</code></li>\n<li>文件路径${JAVA_HOME}/jre/lib/management/jmxremote.access</li>\n</ul>\n<p><br></p>\n<p><em>使用 jconsole 工具连接 JMX</em><br>配置 JMX 的时候没有启用 SSL 所以会提示不安全，点击『不安全的连接』</p>\n<blockquote>\n<p>$jconsole</p>\n</blockquote>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20190912142206.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n<p>展现效果：<br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20190912142436.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p><em>使用 jvisualvm 工具连接 JMX</em><br>描述:远程 –&gt; 添加主机 –&gt; 添加 JMX 连接<br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20190912144011.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p>展示效果:<br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20190912145513.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p><br></p>\n<h3 id=\"4-2-jmap工具\"><a href=\"#4-2-jmap工具\" class=\"headerlink\" title=\"4.2 jmap工具\"></a>4.2 jmap工具</h3><p>描述:jmap 可以输出 Java 进程 内存中对象的工具。<br>jmap 一般和 jhat 或者 MAT 配合使用，以图像的形式直观的展示当前内存是否有问题。</p>\n<p><em>参数说明:</em><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-dump:[live,]format=b,file=&lt;filename&gt;</span><br><span class=\"line\">    以hprof二进制格式转储Java堆到指定filename的文件中。</span><br><span class=\"line\">    live子选项是可选的，如果指定了live子选项，堆中只有活动的对象会被转储。</span><br><span class=\"line\">    想要浏览heap dump，你可以使用 jhat(Java堆分析工具) 或者 MAT 读取生成的文件。</span><br><span class=\"line\">-finalizerinfo 打印等待终结的对象信息。</span><br><span class=\"line\">-heap 打印一个堆的摘要信息，包括使用的GC算法、堆配置信息和generation wise heap usage。</span><br><span class=\"line\">-histo[:live] 打印每个Java类、对象数量、内存大小(单位：字节)、完全限定的类名。</span><br><span class=\"line\">    打印的虚拟机内部的类名称将会带有一个<span class=\"string\">'*'</span>前缀。</span><br><span class=\"line\">    如果指定了live子选项，则只计算活动的对象。</span><br><span class=\"line\">-permstat 打印Java堆内存的永久保存区域的类加载器的智能统计信息。</span><br><span class=\"line\">    对于每个类加载器而言，它的名称、活跃度、地址、父类加载器、它所加载的类的数量和大小都会被打印。</span><br><span class=\"line\">    此外，包含的字符串数量和大小也会被打印。</span><br><span class=\"line\">-F 强制模式。如果指定的pid没有响应，请使用jmap -dump或jmap -histo选项。此模式下，不支持live子选项。</span><br><span class=\"line\">-h | -<span class=\"built_in\">help</span> 打印帮助信息。</span><br><span class=\"line\">-J&lt;flag&gt; 指定传递给运行jmap的JVM的参数。</span><br></pre></td></tr></table></figure><br><br></p>\n<p>示例1.jmap-histo <pid> 打印每个Java类、对象数量、内存大小(单位：字节)、完全限定的类名。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$jmap</span> -histo 14110</span><br><span class=\"line\"> num     <span class=\"comment\">#instances         #bytes  class name</span></span><br><span class=\"line\">----------------------------------------------</span><br><span class=\"line\">   1:         50994        7789848  [C</span><br><span class=\"line\">   2:         22160        6263680  [B</span><br><span class=\"line\">   3:          8527        1437176  [I</span><br><span class=\"line\">   4:         49099        1178376  java.lang.String</span><br><span class=\"line\">   5:            63         936248  [J</span><br><span class=\"line\">   6:         19118         611776  java.util.HashMap<span class=\"variable\">$Node</span></span><br><span class=\"line\">   7:          6243         549384  java.lang.reflect.Method</span><br><span class=\"line\">   8:          8948         509464  [Ljava.lang.Object;</span><br><span class=\"line\">   9:         10588         423520  java.util.TreeMap<span class=\"variable\">$Entry</span></span><br><span class=\"line\">  10:          3696         417952  java.lang.Class</span><br><span class=\"line\">  11:          1372         230544  [Ljava.util.HashMap<span class=\"variable\">$Node</span>;</span><br><span class=\"line\">  12:          4760         228480  java.util.HashMap</span><br><span class=\"line\">  13:          4789         191560  java.util.HashMap<span class=\"variable\">$ValueIterator</span></span><br><span class=\"line\">  14:          5851         187232  java.io.File</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#表示含义</span></span><br><span class=\"line\">B byte</span><br><span class=\"line\">C char</span><br><span class=\"line\">D double</span><br><span class=\"line\">F <span class=\"built_in\">float</span></span><br><span class=\"line\">I int</span><br><span class=\"line\">J long</span><br><span class=\"line\">Z boolean</span><br><span class=\"line\">[ 数组，如[I表示int[]</span><br><span class=\"line\">[L+类名 其他对象</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p>示例2.jmap-heap<pid> 查看进程堆内存使用情况，包括使用的GC算法、堆配置参数和各代中堆内存使用情况<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$jmap</span> -heap 14110</span><br><span class=\"line\">Attaching to process ID 14110, please <span class=\"built_in\">wait</span>...</span><br><span class=\"line\">Debugger attached successfully.</span><br><span class=\"line\">Server compiler detected.</span><br><span class=\"line\">JVM version is 25.121-b13</span><br></pre></td></tr></table></figure></p>\n<p>示例 3.jmap-dump:format=b,file=<dumpFileName><pid> 用jmap把进程内存使用情况dump到文件中<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ jmap -dump:format=b,file=/tmp/123.hprof 14110</span><br><span class=\"line\">Dumping heap to /tmp/123.hprof ...</span><br><span class=\"line\">Heap dump file created</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"4-3-jhat工具\"><a href=\"#4-3-jhat工具\" class=\"headerlink\" title=\"4.3 jhat工具\"></a>4.3 jhat工具</h3><p>描述:jhat 可以对 dump 出来的堆信息进行处理，以 html 页面的形式展示出来。<br>执行 jhat/tmp/123.hprof即可，默认端口是 7000，访问 <a href=\"http://localhost:7000\" target=\"_blank\" rel=\"noopener\">http://localhost:7000</a> 即可查看结果,通过 -port 指定端口。<br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20190912152200.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<hr>\n\n<h2 id=\"5-高可用扩展\"><a href=\"#5-高可用扩展\" class=\"headerlink\" title=\"5.高可用扩展\"></a>5.高可用扩展</h2><h3 id=\"5-1-Tomcat运行模式\"><a href=\"#5-1-Tomcat运行模式\" class=\"headerlink\" title=\"5.1 Tomcat运行模式\"></a>5.1 Tomcat运行模式</h3><p>Tomcat的3种运行状态:</p>\n<ol>\n<li>bio:默认的模式,性能非常低下,没有经过任何优化处理和支持.</li>\n<li>nio:(new I/O)是Java SE 1.4及后续版本提供的一种新的I/O操作方式(即java.nio包及其子包);Java nio是一个基于缓冲区、并能提供非阻塞I/O操作的Java API，因此nio也被看成是non-blocking I/O的缩写。它拥有比传统I/O操作(bio)更好的并发运行性能。</li>\n<li>apr:安装起来最困难,但是从操作系统级别来解决异步的IO问题,大幅度的提高性能.</li>\n</ol>\n<p><strong>(1)安装 apr 和 apr-util</strong><br>Apache Portable Runtime 是一个高度可移植的库，是 Apache HTTP Server 2.x 的核心。APR 有许多用途，包括访问高级 IO 功能（如sendfile，epoll 和 OpenSSL），操作系统级功能（随机数生成，系统状态等）和本机进程处理（共享内存，NT 管道和 Unix 套接字）。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/src/</span><br><span class=\"line\">$ wget http://mirrors.tuna.tsinghua.edu.cn/apache//apr/apr-1.6.5.tar.gz</span><br><span class=\"line\">$ wget http://mirrors.tuna.tsinghua.edu.cn/apache//apr/apr-util-1.6.1.tar.gz</span><br><span class=\"line\">$ tar xf apr-1.6.5.tar.gz</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> apr-1.6.5</span><br><span class=\"line\">$ /configure --prefix=/usr/<span class=\"built_in\">local</span>/apr</span><br><span class=\"line\">$ make -j 2 &amp;&amp; make install </span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> ../</span><br><span class=\"line\">$ tar xf apr-util-1.6.1.tar.gz</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> apr-util-1.6.1</span><br><span class=\"line\">$ ./configure --prefix=/usr/<span class=\"built_in\">local</span>/apr-util --with-apr=/usr/<span class=\"built_in\">local</span>/apr/</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>(2)安装 tomcat-native</strong><br>描述:tomcat-native 不用单独下载，解压缩 tomcat 程序包后再 bin/ 目录下存在该程序的源码包。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ tar xf apache-tomcat-8.5.38.tar.gz -C /usr/<span class=\"built_in\">local</span>/</span><br><span class=\"line\">$ ln -sv /usr/<span class=\"built_in\">local</span>/apache-tomcat-8.5.38/ /usr/<span class=\"built_in\">local</span>/tomcat</span><br><span class=\"line\">$ cp /usr/<span class=\"built_in\">local</span>/tomcat/bin/tomcat-native.tar.gz /usr/<span class=\"built_in\">local</span>/src/</span><br><span class=\"line\">$ tar xf tomcat-native.tar.gz</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> tomcat-native-1.2.21-src/</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> native/</span><br><span class=\"line\">$ ./configure --prefix=/usr/<span class=\"built_in\">local</span>/apr --with-java-home=/usr/<span class=\"built_in\">local</span>/jdk1.8.0_121/</span><br><span class=\"line\">$ make -j 2 &amp;&amp; make install</span><br><span class=\"line\">$ vim /etc/profile</span><br><span class=\"line\"><span class=\"built_in\">export</span> LD_LIBRARY_PATH=/usr/<span class=\"built_in\">local</span>/apr/lib <span class=\"comment\">##添加apr path</span></span><br><span class=\"line\">$ <span class=\"built_in\">source</span> /etc/profile</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>(3) 修改 Tomcat 配置文件</strong><br>修改 protocol 值 Tomcat 默认是 “HTTP/1.1” ，如果运行 apr 模式需要把 protocol 值修改成 apr 模式： org.apache.coyote.http11.Http11AprProtocol<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#1.修改为apr模式</span></span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/tomcat/conf/</span><br><span class=\"line\">$ vim server.xml</span><br><span class=\"line\">&lt;Connector port=<span class=\"string\">\"8080\"</span> protocol=<span class=\"string\">\"org.apache.coyote.http11.Http11AprProtocol\"</span></span><br><span class=\"line\">               connectionTimeout=<span class=\"string\">\"20000\"</span></span><br><span class=\"line\">               redirectPort=<span class=\"string\">\"8443\"</span> /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#2.修改 SSLEngine</span></span><br></pre></td></tr></table></figure></p>\n<p>启动 Tomcat 验证查看 catalina.out 日志中最下面三行</p>\n<p><strong>补充说明:</strong></p>\n<ul>\n<li>APR 模式文档链接：<a href=\"http://tomcat.apache.org/tomcat-8.5-doc/apr.html\" target=\"_blank\" rel=\"noopener\">http://tomcat.apache.org/tomcat-8.5-doc/apr.html</a></li>\n</ul>\n<p><br></p>\n<h3 id=\"5-2-负载均衡配置\"><a href=\"#5-2-负载均衡配置\" class=\"headerlink\" title=\"5.2 负载均衡配置\"></a>5.2 负载均衡配置</h3><p>描述:LVS负载均衡是提高应用负载量和容错的有效手段，可以结合Nginx与Tomcat实现Nginx是一款性能优异的反向代理服务器。</p>\n<p><strong>(1)负载均衡配置实现</strong><br>反向代理原理示意图<br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20190910152645.png\" alt=\"WeiyiGeek.反向代理原理示意图\" title=\"\" class=\"\">\n                <p>WeiyiGeek.反向代理原理示意图</p>\n            </figure></p>\n<p>负载均衡示意图：<br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20190910153034.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p>负载均衡策略：</p>\n<ul>\n<li>Nginx 提供轮询（round robin）</li>\n<li>用户IP哈希（client IP）</li>\n<li>指定权重 3 种方式weight</li>\n</ul>\n<p><br></p>\n<p><strong>(2)负载均衡时Session的处理策略</strong><br>描述:Session是Tomcat服务器上的内存空间，如果一个用户发出多个请求，却发到了多个tomcat服务器中，那么就会出现Session不同步的问题;</p>\n<p><em>解决方案1</em></p>\n<ul>\n<li>将一个用户的请求锁定到某一台服务器上，简单，但是缺乏容错性，一旦某个服务器发生故障，Session可能丢失，（但是服务器发生故障是一个低概率事件，如果一个服务器经常挂掉，要么是硬件有问题，要么是应用有问题）可以使用用户IP哈希实现</li>\n</ul>\n<p><em>解决方案2</em></p>\n<ul>\n<li>Session复制策略，基于网络的广播策略，一个节点Session变化，其他节点同步复制，具有容错性，但节点多或复制量大时对网络负荷大，使网络效率低下，甚至阻塞<ul>\n<li>在/conf/server.xml文件中开启Session复制的选项，将注释去掉，7.0默认值以配置好，需要接收器绑定内网(一般服务器都有两块网卡)网卡地址,修改端口&gt;。</li>\n<li>在应用中指定应用是在分布式部署之下，在web.xml中添加选项</li>\n</ul>\n</li>\n</ul>\n<p><em>解决方案3</em></p>\n<ul>\n<li>额外创建一个共享的空间用来存放Session，所有服务器共享一个Session</li>\n</ul>\n<p><br></p>\n<p><strong>(3)memcached缓存共享方案基本原理</strong><br>粘性Session与非粘性Session方式：需要一些工具jar包，官网有目录和下载连接在/conf/context.xml中进行配置，全局有效。<br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20190910153858.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p><em>注意事项:</em></p>\n<ul>\n<li>集群环境中应用代码应注意的问题传递Session需要实体类序列化支持，实现可序列化接口，设置版本号。</li>\n<li>获取用户IP地址方法的变化，获取真实客户端ip而不是Nginx代理地址。</li>\n<li>动静分离结构的预规划。一般高并发的网站上，资源类的文件，如js,css,图片通常是由静态服务器处理，Nginx处理静态文件效率就非常高，而tomcat处理静态文件是它很大的一个弱势，tomcat只负责动态请求的处理。</li>\n<li>编码的时候就要考虑静态资源最后可能要被拿出去，地址会有变化，所以在开发的时候应该规划访问地址，保持最大灵活性。</li>\n</ul>\n<hr>\n\n<h2 id=\"6-入坑出坑\"><a href=\"#6-入坑出坑\" class=\"headerlink\" title=\"6.入坑出坑\"></a>6.入坑出坑</h2><h3 id=\"问题1-压测时物理内存被用光-Tomcat-被-Kernel-kill-掉\"><a href=\"#问题1-压测时物理内存被用光-Tomcat-被-Kernel-kill-掉\" class=\"headerlink\" title=\"问题1:压测时物理内存被用光 Tomcat 被 Kernel kill 掉\"></a>问题1:压测时物理内存被用光 Tomcat 被 Kernel kill 掉</h3><p>答:需要首先查看Tomcat日志和<code>/var/log/message</code>日志，需要注意交换分区空间是否分配以及分配大小;<br>解决办法: 给TOMCAT服务器启用虚拟空间，还可以降低 Apache 的最大连接数 MaxClients、最大内存 ServerLimit</p>\n<p><br></p>\n<h3 id=\"问题2-报错INFO-Maximum-number-of-threads-200-created-for-connector-with-address-null-and-port-80\"><a href=\"#问题2-报错INFO-Maximum-number-of-threads-200-created-for-connector-with-address-null-and-port-80\" class=\"headerlink\" title=\"问题2:报错INFO: Maximum number of threads (200) created for connector with address null and port 80\"></a>问题2:报错INFO: Maximum number of threads (200) created for connector with address null and port 80</h3><p>问题描述:INFO: Maximum number of threads (200) created for connector with address null and port 8080<br>问题说明:最大线程数设置错误，超出配置文件中MaxThreads访问请求;<br>解决方案：使用线程池用较少的线程处理较多的访问，可以提高tomcat处理请求的能力。</p>\n<p>使用方法:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#(1) 打开/conf/server.xml增加</span></span><br><span class=\"line\"><span class=\"comment\">#最大线程500(一般服务器足够)，最小空闲线程数20，线程最大空闲时间60秒(这里根据需求更改)。接着修改&lt;Connector&gt;节点，增加executor属性。</span></span><br><span class=\"line\">&lt;Executor name=<span class=\"string\">\"tomcatThreadPool\"</span> namePrefix=<span class=\"string\">\"catalina-exec-\"</span> maxThreads=<span class=\"string\">\"500\"</span> minSpareThreads=<span class=\"string\">\"20\"</span> maxIdleTime=<span class=\"string\">\"60000\"</span> /&gt;</span><br><span class=\"line\">&lt;Connector executor=<span class=\"string\">\"tomcatThreadPool\"</span></span><br><span class=\"line\"> port=<span class=\"string\">\"80\"</span> protocol=<span class=\"string\">\"HTTP/1.1\"</span></span><br><span class=\"line\"> connectionTimeout=<span class=\"string\">\"60000\"</span></span><br><span class=\"line\"> keepAliveTimeout=<span class=\"string\">\"15000\"</span></span><br><span class=\"line\"> maxKeepAliveRequests=<span class=\"string\">\"1\"</span></span><br><span class=\"line\"> redirectPort=<span class=\"string\">\"443\"</span> /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#(2) 当tomcat并发用户量大的时候，单个jvm进程确实可能打开过多的文件句柄（java.net.SocketException: Too many open files）。</span></span><br><span class=\"line\">ps -ef |grep tomcat    <span class=\"comment\">#查看tomcat的进程ID，记录ID号，假设进程ID为10001</span></span><br><span class=\"line\">lsof -p 10001 | wc -l  <span class=\"comment\">#查看文件操作数</span></span><br><span class=\"line\"><span class=\"built_in\">ulimit</span> -a              <span class=\"comment\">#查看每个用户允许打开的最大文件数默认是1024  </span></span><br><span class=\"line\"><span class=\"built_in\">ulimit</span> -n 65536        <span class=\"comment\">#将允许的最大文件数调整为65536 （重启后失效）</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/1/20200108164450.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n<p><br></p>\n<h3 id=\"问题3-指定war包的docBase目录应用自动解压与部署设置\"><a href=\"#问题3-指定war包的docBase目录应用自动解压与部署设置\" class=\"headerlink\" title=\"问题3:指定war包的docBase目录应用自动解压与部署设置\"></a>问题3:指定war包的docBase目录应用自动解压与部署设置</h3><p>问题描述: 设置Context的Path路径以及docBase目录设置。<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Service</span> <span class=\"attr\">name</span>=<span class=\"string\">\"passport\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Connector</span> <span class=\"attr\">port</span>=<span class=\"string\">\"8081\"</span> <span class=\"attr\">protocol</span>=<span class=\"string\">\"HTTP/1.1\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">connectionTimeout</span>=<span class=\"string\">\"20000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">redirectPort</span>=<span class=\"string\">\"8443\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Engine</span> <span class=\"attr\">name</span>=<span class=\"string\">\"passport\"</span> <span class=\"attr\">defaultHost</span>=<span class=\"string\">\"localhost\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Realm</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.realm.LockOutRealm\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"comment\">&lt;!-- This Realm uses the UserDatabase configured in the global JNDI</span></span><br><span class=\"line\"><span class=\"comment\">            resources under the key \"UserDatabase\".  Any edits</span></span><br><span class=\"line\"><span class=\"comment\">            that are performed against this UserDatabase are immediately</span></span><br><span class=\"line\"><span class=\"comment\">            available for use by the Realm.  --&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">Realm</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.realm.UserDatabaseRealm\"</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">resourceName</span>=<span class=\"string\">\"UserDatabase\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Realm</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Host</span> <span class=\"attr\">name</span>=<span class=\"string\">\"localhost\"</span>  <span class=\"attr\">appBase</span>=<span class=\"string\">\"passport\"</span> <span class=\"attr\">unpackWARs</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">autoDeploy</span>=<span class=\"string\">\"true\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">Context</span> <span class=\"attr\">path</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">docBase</span>=<span class=\"string\">\"E:/Development/APP/\"</span>&gt;</span> <span class=\"tag\">&lt;/<span class=\"name\">Context</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">Valve</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.valves.AccessLogValve\"</span> <span class=\"attr\">directory</span>=<span class=\"string\">\"logs\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">prefix</span>=<span class=\"string\">\"localhost_access_log\"</span> <span class=\"attr\">suffix</span>=<span class=\"string\">\".txt\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">pattern</span>=<span class=\"string\">\"%h %l %u %t &amp;quot;%r&amp;quot; %s %b\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Host</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">Engine</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Service</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"SystemOperation","path":"api/categories/SystemOperation.json"}],"tags":[{"name":"Tomcat","path":"api/tags/Tomcat.json"}]}