{"title":"JAVA入门学习十二","slug":"编程世界/Java/JAVA入门学习十二","date":"2019-10-24T02:34:30.000Z","updated":"2022-03-29T05:39:06.303Z","url":"2019/10-24-296.html","path":"api/articles/2019/10-24-296.html.json","covers":["https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20191029213541.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h4 id=\"GUI界面开发\"><a href=\"#GUI界面开发\" class=\"headerlink\" title=\"GUI界面开发\"></a>GUI界面开发</h4><h5 id=\"1-GUI布局管理器\"><a href=\"#1-GUI布局管理器\" class=\"headerlink\" title=\"1.GUI布局管理器\"></a>1.GUI布局管理器</h5><p><strong>Java总五大布局管理器:</strong></p>\n<ul>\n<li>FlowLayout（流式布局管理器）<ul>\n<li>从左到右的顺序排列,Panel默认的布局管理器。</li>\n</ul>\n</li>\n<li><p>BorderLayout（边界布局管理器）</p>\n<ul>\n<li>东，南，西，北，中,Frame默认的布局管理器。<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//边界布局勾画出一个集装箱，安排和调整其成分放在五个区域：北，南，东，西，和中心。</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BorderLayout</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extends</span> <span class=\"title\">Object</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">implements</span> <span class=\"title\">LayoutManager2</span>, <span class=\"title\">Serializable</span></span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">//静态成员</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">BorderLayout</span>.<span class=\"title\">NORTH</span>  //北部</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">BorderLayout</span>.<span class=\"title\">SOUTH</span>  //南边</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">BorderLayout</span>.<span class=\"title\">CENTER</span> //中心</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">BorderLayout</span>.<span class=\"title\">WEST</span>   //西部</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">BorderLayout</span>.<span class=\"title\">EAST</span>   //东部</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">//构造方法</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">BorderLayout</span>(<span class=\"title\">int</span> <span class=\"title\">hgap</span>, <span class=\"title\">int</span> <span class=\"title\">vgap</span>)  //用指定的组件之间的间隙构造一个边框布局。</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>GridLayout（网格布局管理器）规则的矩阵比如计算器程序中的数字1-9</p>\n</li>\n<li>CardLayout（卡片布局管理器）选项卡</li>\n<li>GridBagLayout（网格包布局管理器）:非规则的矩阵计算器中的加减;</li>\n</ul>\n<p><br></p>\n<h5 id=\"2-GUI界面显示\"><a href=\"#2-GUI界面显示\" class=\"headerlink\" title=\"2.GUI界面显示\"></a>2.GUI界面显示</h5><p>描述:利用JAVA的Graphical User Interface(图形用户接口)来进行实现展示GUI界面;</p>\n<p>JAVA-Frame类语法:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java.lang.Object </span><br><span class=\"line\">java.awt.Component </span><br><span class=\"line\">java.awt.Container </span><br><span class=\"line\">java.awt.Window </span><br><span class=\"line\">java.awt.Frame </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//一个 Frame是一个带有标题和边框的顶层窗口。 </span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Frame</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extends</span> <span class=\"title\">Window</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">implements</span> <span class=\"title\">MenuContainer</span></span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">//构造方法</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">Frame</span>(<span class=\"title\">String</span> <span class=\"title\">title</span>)  //构建一个新 <span class=\"title\">Frame</span>最初无形对象的指定标题。  </span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">Frame</span>(<span class=\"title\">String</span> <span class=\"title\">title</span>, <span class=\"title\">GraphicsConfiguration</span> <span class=\"title\">gc</span>) //构建了一个新的开始，看不见的 <span class=\"title\">Frame</span>对象和指定的标题和 <span class=\"title\">GraphicsConfiguration</span>。  </span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\">//常用方法:</span><br><span class=\"line\">setLayout(<span class=\"keyword\">new</span> 布局管理器);<span class=\"comment\">//设置布局管理器</span></span><br><span class=\"line\">setSize(width,heigh); <span class=\"comment\">//设置窗体大小</span></span><br><span class=\"line\">setLocation(x,y); <span class=\"comment\">//设置窗体出现在屏幕的位置</span></span><br><span class=\"line\">setIconImage(); <span class=\"comment\">//设置软件icon图标</span></span><br><span class=\"line\">setVisible(<span class=\"keyword\">true</span>); <span class=\"comment\">//界面显示</span></span><br></pre></td></tr></table></figure><br><br></p>\n<p>补充知识：</p>\n<ul>\n<li>窗口监听：<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Interface WindowListener ：它是一个接口，用于接收窗口事件的侦听器接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">WindowListener</span> <span class=\"keyword\">extends</span> <span class=\"title\">EventListener</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">public</span> <span class=\"title\">interface</span> <span class=\"title\">MouseListener</span> <span class=\"keyword\">extends</span> <span class=\"title\">EventListener</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">public</span> <span class=\"title\">interface</span> <span class=\"title\">KeyListener</span> <span class=\"keyword\">extends</span> <span class=\"title\">EventListener</span></span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">//<span class=\"title\">Frame</span>对象监听器</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">addWindowListener</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">addMouseListener</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">addKeyListener</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">addActionListener</span></span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">//适配器</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">WindowAdapter</span> //用于接收窗口事件的抽象适配器类,在这个类中的方法是空的。此类存在于创建侦听器对象的方便性。 \\</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">MouseAdapter</span> //鼠标适配器</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">KeyAdapter</span> //键盘适配器</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">ActionListener</span> //动作监听</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br></p>\n<p>适配器设计模式:</p>\n<ul>\n<li>在使用监听器的时候, 需要定义一个类事件监听器接口.</li>\n<li>通常接口中有多个方法, 而程序中不一定所有的都用到, 但又必须重写这很繁琐.</li>\n<li>适配器简化了这些操作, 我们定义监听器时只要继承适配器, 然后重写需要的方法即可.</li>\n</ul>\n<p>适配器原理:</p>\n<ul>\n<li>适配器就是一个类, 实现了监听器接口, 所有抽象方法都重写了但是方法全是空的.</li>\n<li>适配器类需要定义成抽象的,因为创建该类对象调用空方法是没有意义的</li>\n<li>目的就是为了简化程序员的操作, 定义监听器时继承适配器, 只重写需要的方法就可以了.</li>\n</ul>\n<p><br></p>\n<p>事件处理:</p>\n<ul>\n<li>事件: 用户的一个操作</li>\n<li>事件源: 被操作的组件</li>\n<li>监听器: 一个自定义类的对象, 实现了监听器接口, 包含事件处理方法,把监听器添加在事件源上, 当事件发生的时候虚拟机就会自动调用监听器中的事件处理方法</li>\n</ul>\n<p>基础案例:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.weiyigeek.gui;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Button;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.FlowLayout;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Frame;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.Toolkit;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.ActionListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.KeyAdapter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.KeyEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.MouseAdapter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.MouseEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.MouseListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.WindowAdapter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.WindowEvent;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.awt.event.WindowListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.swing.JOptionPane;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo1_StartGUI</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//1.JAVA-GUI界面显示设置</span></span><br><span class=\"line\">    Frame f = <span class=\"keyword\">new</span> Frame(<span class=\"string\">\"我的第一个Title!\"</span>);</span><br><span class=\"line\">    f.setSize(<span class=\"number\">500</span>, <span class=\"number\">300</span>); <span class=\"comment\">//显示大小</span></span><br><span class=\"line\">    f.setLocation(<span class=\"number\">500</span>, <span class=\"number\">500</span>); <span class=\"comment\">//显示位置</span></span><br><span class=\"line\">    f.setIconImage(Toolkit.getDefaultToolkit().createImage(<span class=\"string\">\"C:\\\\net.png\"</span>));  <span class=\"comment\">//软件图标</span></span><br><span class=\"line\">    <span class=\"comment\">//2.显示按钮</span></span><br><span class=\"line\">    Button button = <span class=\"keyword\">new</span> Button(<span class=\"string\">\"测试\"</span>);</span><br><span class=\"line\">    Button bt = <span class=\"keyword\">new</span> Button(<span class=\"string\">\"退出\"</span>);</span><br><span class=\"line\">    f.add(bt);</span><br><span class=\"line\">    f.add(button);</span><br><span class=\"line\">    f.setLayout(<span class=\"keyword\">new</span> FlowLayout()); <span class=\"comment\">//设置流布局管理器</span></span><br><span class=\"line\">    <span class=\"comment\">//3.事件源是窗体把监听器注册到事件源上，事件对象传递给监听器(让窗口适配器可以支持)</span></span><br><span class=\"line\">    f.addWindowListener(<span class=\"keyword\">new</span> WindowAdapter() &#123;</span><br><span class=\"line\">        <span class=\"comment\">//当然您也可以建立一个类实现WindowsAdapter接口中方法;</span></span><br><span class=\"line\">        <span class=\"comment\">//或者采用匿名内部类;</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">windowClosing</span><span class=\"params\">(WindowEvent e)</span> </span>&#123;</span><br><span class=\"line\">            System.exit(<span class=\"number\">0</span>);<span class=\"comment\">//退出虚拟机,关闭窗口 </span></span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    f.addWindowListener(<span class=\"keyword\">new</span> newWindowListener());</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//4.鼠标监听 </span></span><br><span class=\"line\">    bt.addMouseListener(<span class=\"keyword\">new</span> MouseAdapter() &#123;</span><br><span class=\"line\">      <span class=\"comment\">//单击监听</span></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mouseClicked</span><span class=\"params\">(MouseEvent e)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"单击\"</span>);</span><br><span class=\"line\">        System.exit(<span class=\"number\">0</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">//释放监听</span></span><br><span class=\"line\">      <span class=\"meta\">@Override</span></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">mouseReleased</span><span class=\"params\">(MouseEvent e)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"释放\"</span>);</span><br><span class=\"line\">        System.exit(<span class=\"number\">0</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//5.键盘监听</span></span><br><span class=\"line\">    button.addKeyListener(<span class=\"keyword\">new</span> KeyAdapter() &#123;</span><br><span class=\"line\">      <span class=\"meta\">@Override</span></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">keyReleased</span><span class=\"params\">(KeyEvent e)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"您当前输入的值:\"</span> + e.getKeyCode() + <span class=\"string\">\"字符值:\"</span> + e.getKeyChar());</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(e.getKeyCode() == KeyEvent.VK_ENTER) &#123;</span><br><span class=\"line\">          System.exit(<span class=\"number\">0</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125; </span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//6.动作监听</span></span><br><span class=\"line\">    button.addActionListener(<span class=\"keyword\">new</span> ActionListener() &#123;</span><br><span class=\"line\">      <span class=\"meta\">@Override</span></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">actionPerformed</span><span class=\"params\">(ActionEvent e)</span> </span>&#123;</span><br><span class=\"line\">        System.exit(<span class=\"number\">0</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    </span><br><span class=\"line\">    f.setVisible(<span class=\"keyword\">true</span>); <span class=\"comment\">//是否可显示</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//实现重写接口中方法</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">newWindowListener</span> <span class=\"keyword\">implements</span> <span class=\"title\">WindowListener</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//软件打开时候显示</span></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">windowOpened</span><span class=\"params\">(WindowEvent e)</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(e.paramString());</span><br><span class=\"line\">    System.out.println(e.getClass());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//软件关闭时候执行</span></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">windowClosing</span><span class=\"params\">(WindowEvent e)</span> </span>&#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">windowClosed</span><span class=\"params\">(WindowEvent e)</span> </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//</span></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">windowIconified</span><span class=\"params\">(WindowEvent e)</span> </span>&#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">windowDeiconified</span><span class=\"params\">(WindowEvent e)</span> </span>&#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//软件默认打开以及缩小还原的时候显示执行</span></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">windowActivated</span><span class=\"params\">(WindowEvent e)</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"Windows Show\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">//软件缩小时候触发(弹框)</span></span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">windowDeactivated</span><span class=\"params\">(WindowEvent e)</span> </span>&#123;</span><br><span class=\"line\">      JOptionPane.showMessageDialog(<span class=\"keyword\">null</span>, <span class=\"string\">\"友情提示\"</span>);  </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20191029213541.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p><a href=\"https://blog.csdn.net/NTrinity/article/details/80435990\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/NTrinity/article/details/80435990</a></p>\n<p><br></p>\n<h5 id=\"3-输入框\"><a href=\"#3-输入框\" class=\"headerlink\" title=\"3.输入框\"></a>3.输入框</h5><p>描述：TextField 允许一个单行文本的编辑。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TextField</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extends</span> <span class=\"title\">TextComponent</span></span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">//构造方法</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">TextField</span>(<span class=\"title\">String</span> <span class=\"title\">text</span>, <span class=\"title\">int</span> <span class=\"title\">columns</span>) //构造一个与指定要显示的指定文本初始化的新文本字段，并足够大以保持指定的列数。 </span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">String</span> <span class=\"title\">getText</span>(<span class=\"title\">String</span> <span class=\"title\">t</span>)</span>; <span class=\"comment\">// 获取该输入框组件里面的字符串内容</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setText</span><span class=\"params\">(String t)</span>  <span class=\"comment\">//将由该文本组件呈现的文本设置为指定的文本。</span></span></span><br></pre></td></tr></table></figure><br>实际利用:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TextField tf = <span class=\"keyword\">new</span> TextField(<span class=\"string\">\"输入框默认显示数值\"</span>,<span class=\"number\">15</span>);  <span class=\"comment\">//预设值文本框以及大小</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"4-按钮\"><a href=\"#4-按钮\" class=\"headerlink\" title=\"4.按钮\"></a>4.按钮</h5><p>描述:Button按钮图标相关类<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//类创建一个标记按</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Button</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> <span class=\"keyword\">implements</span> <span class=\"title\">Accessible</span></span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">//构造方法</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">Button</span>(<span class=\"title\">String</span> <span class=\"title\">label</span>)  //用指定的标签构造一个按钮。</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">void</span> <span class=\"title\">setLabel</span>(<span class=\"title\">String</span> <span class=\"title\">label</span>)  //将按钮的标签设置为指定的字符串。  </span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">String</span> <span class=\"title\">getLabel</span>()  //获取此按钮的标签。 </span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">void</span> <span class=\"title\">addActionListener</span>(<span class=\"title\">ActionListener</span> <span class=\"title\">l</span>)  //添加指定的操作侦听器从该按钮接收动作事件。</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">void</span> <span class=\"title\">removeActionListener</span>(<span class=\"title\">ActionListener</span> <span class=\"title\">l</span>) //移除指定的动作侦听器，以便它不再从该按钮接收动作事件。</span></span><br></pre></td></tr></table></figure><br>实际利用:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Button bt = <span class=\"keyword\">new</span> Button(<span class=\"string\">\"按钮\"</span>);</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h4 id=\"5-文本框\"><a href=\"#5-文本框\" class=\"headerlink\" title=\"5.文本框\"></a>5.文本框</h4><p>描述:一个 TextArea对象是一个多行显示文本区域。它可以设置为允许编辑或是只读的。 </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//类定义</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TextArea</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extends</span> <span class=\"title\">TextComponent</span></span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">//构造方法</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">TextArea</span>(<span class=\"title\">String</span> <span class=\"title\">text</span>, <span class=\"title\">int</span> <span class=\"title\">rows</span>, <span class=\"title\">int</span> <span class=\"title\">columns</span>, <span class=\"title\">int</span> <span class=\"title\">scrollbars</span>) </span></span><br><span class=\"line\"><span class=\"class\">使用指定的文本构造一个新的文本区域，并以指定的行、列和滚动条可见性。 </span></span><br><span class=\"line\"><span class=\"class\">//成员变量</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">SCROLLBARS_HORIZONTAL_ONLY</span>  //创建和显示水平滚动条只。 </span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">SCROLLBARS_VERTICAL_ONLY</span>  //创建和显示垂直滚动条只。 </span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">//常用方法</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">void</span> <span class=\"title\">append</span>(<span class=\"title\">String</span> <span class=\"title\">str</span>)  //将给定的文本到文本区的文本。</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">void</span> <span class=\"title\">insert</span>(<span class=\"title\">String</span> <span class=\"title\">str</span>, <span class=\"title\">int</span> <span class=\"title\">pos</span>) //在该文本区域中的指定位置插入指定的文本。 </span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">int</span> <span class=\"title\">getRows</span>/<span class=\"title\">Columns</span>()  //返回文本区域中的行/列数。 </span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">void</span> <span class=\"title\">replaceRange</span>(<span class=\"title\">String</span> <span class=\"title\">str</span>, <span class=\"title\">int</span> <span class=\"title\">start</span>, <span class=\"title\">int</span> <span class=\"title\">end</span>)  //用指定的替换文本替换指定的开始和结束位置之间的文本。  </span></span><br><span class=\"line\"><span class=\"class\">//继承了<span class=\"title\">java</span>.<span class=\"title\">awt</span>.<span class=\"title\">TextComponent</span>中的获取文本</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">String</span> <span class=\"title\">getText</span>() //返回由该文本组件提交的文本。默认情况下，这是一个空字符串。 </span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">void</span> <span class=\"title\">setText</span>(<span class=\"title\">String</span> <span class=\"title\">t</span>) //将由该文本组件呈现的文本设置为指定的文本。(会覆盖原来的)</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">void</span> <span class=\"title\">setEditable</span>(<span class=\"title\">boolean</span> <span class=\"title\">b</span>) //设置决定这是否是可编辑的文本组件。 </span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">void</span> <span class=\"title\">setBackground</span>(<span class=\"title\">Color</span> <span class=\"title\">c</span>) //设置此文本组件的背景颜色。 </span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">setFont</span>(<span class=\"title\">Font</span> <span class=\"title\">f</span>) //设置此组件的字体。</span></span><br></pre></td></tr></table></figure>\n<p>实用实例:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TextArea ta = <span class=\"keyword\">new</span> TextArea(<span class=\"string\">\"Hello\"</span>, <span class=\"number\">5</span>, <span class=\"number\">40</span>);  <span class=\"comment\">//默认显示Hello字符串然后5行10列</span></span><br><span class=\"line\">ta.getText();</span><br><span class=\"line\">ta.setText(<span class=\"string\">\"覆盖原来的字符\"</span>);</span><br><span class=\"line\">ta.append(<span class=\"string\">\"追加字符串到文本编辑框中\"</span>);</span><br><span class=\"line\">ta.setEditable(<span class=\"keyword\">false</span>);  <span class=\"comment\">//显示的文本框禁止显示</span></span><br><span class=\"line\">ta.setBackground(<span class=\"keyword\">new</span> Color(<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">255</span>)); <span class=\"comment\">//显示白色 =&gt; 帮助 ctrl+shift+t</span></span><br><span class=\"line\">ta.setFont(<span class=\"keyword\">new</span> Font(<span class=\"string\">\"xxx\"</span>,Font.PLAIN,<span class=\"number\">20</span>)); <span class=\"comment\">//设置发送字体大小</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h4 id=\"6-面板\"><a href=\"#6-面板\" class=\"headerlink\" title=\"6.面板\"></a>6.面板</h4><p>描述:Panel是最简单的容器类,一个面板的默认布局管理器是FlowLayout布局管理器。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//继承java.awt.Container类其中的方法也将被继承</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Panel</span> <span class=\"keyword\">extends</span> <span class=\"title\">Container</span> <span class=\"keyword\">implements</span> <span class=\"title\">Accessible</span></span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">//构造方法</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">Panel</span>(<span class=\"title\">LayoutManager</span> <span class=\"title\">layout</span>)  //创建一个新的面板与指定的布局管理器</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">//方法</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">setLayout</span>(五大布局)</span>; <span class=\"comment\">//面板设置布局</span></span><br></pre></td></tr></table></figure><br>实际案例:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Panel center = <span class=\"keyword\">new</span> Panel();</span><br><span class=\"line\">center.setLayout(<span class=\"keyword\">new</span> BorderLayout()); <span class=\"comment\">//设置为边界布局管理器</span></span><br><span class=\"line\">center.add(组件,BorderLayout.SOUTH); <span class=\"comment\">//设置组件的位置</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"7-颜色字体\"><a href=\"#7-颜色字体\" class=\"headerlink\" title=\"7.颜色字体\"></a>7.颜色字体</h5><p>描述:颜色是Color类而字体是Font类;</p>\n<ul>\n<li>Color类用于封装的颜色在默认的sRGB色彩空间或颜色任意颜色空间的 ColorSpace鉴定，并且可以采用alpha指定显示的透明度<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Color</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extends</span> <span class=\"title\">Object</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">implements</span> <span class=\"title\">Paint</span>, <span class=\"title\">Serializable</span></span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">//构造方法</span></span><br><span class=\"line\">Color(ColorSpace cspace, float[] components, float alpha) //在指定的 ColorSpace在 float阵列和指定的阿尔法指定颜色分量的颜色创建。  </span><br><span class=\"line\">Color(<span class=\"keyword\">int</span> r, <span class=\"keyword\">int</span> g, <span class=\"keyword\">int</span> b)  <span class=\"comment\">//一个指定的红、绿色不透明的sRGB色彩造成的，并在距离蓝值（0 - 255）。  </span></span><br><span class=\"line\"><span class=\"comment\">//@ConstructorProperties(value=&#123;\"red\",\"green\",\"blue\",\"alpha\"&#125;)</span></span><br><span class=\"line\">Color(<span class=\"keyword\">int</span> r, <span class=\"keyword\">int</span> g, <span class=\"keyword\">int</span> b, <span class=\"keyword\">int</span> a) <span class=\"comment\">//用指定的红、绿、蓝sRGB色彩创造，并在范围内的α值（0 - 255）。 </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//成员变量</span></span><br><span class=\"line\">Color.black  <span class=\"comment\">//黑色</span></span><br><span class=\"line\">Color.blue   <span class=\"comment\">//蓝色</span></span><br><span class=\"line\">Color.gray   <span class=\"comment\">//灰色</span></span><br><span class=\"line\">Color.read   <span class=\"comment\">//红色</span></span><br><span class=\"line\">Color.yellow  <span class=\"comment\">//黄色</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//常用方法</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">getAlpha</span><span class=\"params\">()</span> <span class=\"comment\">//返回的alpha分量范围在0-255。  </span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> getBlue/Red/<span class=\"title\">Green</span><span class=\"params\">()</span> 返回默认的sRGB空间范围在0-255的蓝色分量</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">getColor</span><span class=\"params\">(String nm, Color v)</span>在系统属性中查找颜色，第一个参数被视为要获得的系统属性的名称。</span></span><br></pre></td></tr></table></figure>\n实际案例:<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> Color(<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">255</span>)  <span class=\"comment\">//白色</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br></p>\n<ul>\n<li>Font类表示的字体，这是用来在一个可见的方式呈现文本;<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//字体提供所需要的映射字符的顺序序列的字形和渲染在 Graphics和 Component对象符号序列的信息。</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Font</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extends</span> <span class=\"title\">Object</span></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">implements</span> <span class=\"title\">Serializable</span></span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">//构造方法</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">Font</span>(<span class=\"title\">String</span> <span class=\"title\">name</span>, <span class=\"title\">int</span> <span class=\"title\">style</span>, <span class=\"title\">int</span> <span class=\"title\">size</span>) //创建指定名称的一个新的 <span class=\"title\">Font</span>，样式和大小。 </span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">//成员变量</span></span><br><span class=\"line\">// \"PLAIN\"， \"BOLD\"， \"BOLDITALIC\"，或 \"ITALIC\" </span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> PLAIN <span class=\"comment\">//平原型类型</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> BOLD  <span class=\"comment\">//黑体加粗类型</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> ITALIC <span class=\"comment\">//斜体风格  </span></span><br><span class=\"line\"><span class=\"keyword\">static</span> String MONOSPACED <span class=\"comment\">//一个字符串常量的典型姓逻辑字体“等宽”。</span></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> LAYOUT_LEFT_TO_RIGHT <span class=\"comment\">//一个标志layoutglyphvector说明文字是从左到右的比迪烟分析确定。    </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//成员方法</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>实际案例:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TextArea.setFont(<span class=\"keyword\">new</span> Font(<span class=\"string\">\"xxx\"</span>,Font.PLAIN,<span class=\"number\">20</span>)); <span class=\"comment\">//设置显示的字体大小</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>补充知识:</strong></p>\n<ul>\n<li>java平台两种字体之间的区别就是：物理和逻辑字体字体。 <ul>\n<li>物理字体包含字形数据和表格图从字符序列符号序列的实际字体库，使用字体技术如TrueType和PostScript Type 1,所有的java平台实现必须支持TrueType字体；其他字体技术支持是依赖于实现的。</li>\n<li>逻辑字体五字体家族的java平台必须在任何java运行环境支持的定义：衬线、SansSerif、等宽，对话框，和dialoginput,实际上<code>逻辑字体不是实际的字体库</code>,逻辑字体名称用java运行环境映射到物理字体;</li>\n</ul>\n</li>\n</ul>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Development","path":"api/categories/Development.json"},{"name":"Programming","path":"api/categories/Programming.json"}],"tags":[{"name":"JAVA","path":"api/tags/JAVA.json"}]}