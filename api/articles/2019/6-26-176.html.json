{"title":"grep三剑客入门与进阶指南","slug":"系统运维/Linux/常用命令/脚本常用类命令/grep三剑客入门与进阶指南","date":"2019-06-26T11:37:30.000Z","updated":"2022-08-18T08:35:38.941Z","url":"2019/6-26-176.html","path":"api/articles/2019/6-26-176.html.json","covers":["https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190626093720.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190626095149.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190626100523.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h2 id=\"0x00-快速入门\"><a href=\"#0x00-快速入门\" class=\"headerlink\" title=\"0x00 快速入门\"></a>0x00 快速入门</h2><p>描述: 不管对于那一门编程语言,字符串类型都是及其重要的,所以在学习编程语言后会发现近40%左右都与字符串有关,特别是PHP当然在Linux中的shell脚本开发也同样存在;所以下面主要是字符串搜索命令采用正则匹配的命令,都是在shell编程中比较常用的;</p>\n<h3 id=\"grep-命令\"><a href=\"#grep-命令\" class=\"headerlink\" title=\"grep 命令\"></a>grep 命令</h3><p>描述：grep（<code>global search regular expression(RE) and print out the line</code>，全面搜索正则表达式并把行打印出来）是一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。</p>\n<p>Tips：属于Linux三剑客之一（grep、sed、awk）</p>\n<p><strong>语法和参数:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep 【选项】<span class=\"string\">\"字符串\"</span>  文件名   <span class=\"comment\">#在文件中查找字符串</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#参数选项</span></span><br><span class=\"line\">-a 不要忽略二进制数据。</span><br><span class=\"line\">-A &lt;显示列数&gt; 除了显示符合范本样式的那一行之外，并显示该行之后的内容。</span><br><span class=\"line\">-B &lt;显示列数&gt; 并显示该行之前的内容</span><br><span class=\"line\">-b 在显示符合范本样式的那一行之外，并显示该行之前的内容。</span><br><span class=\"line\">-c 计算符合范本样式的列数。</span><br><span class=\"line\">-C &lt;显示列数&gt;或-&lt;显示列数&gt;  除了显示符合范本样式的那一列之外，并显示该列之前后的内容。（中间开始上下列数）</span><br><span class=\"line\">-d &lt;进行动作&gt; 当指定要查找的是目录而非文件时，必须使用这项参数，否则grep命令将回报信息并停止动作。</span><br><span class=\"line\">-e, --regexp=PATTERN <span class=\"comment\">#指定字符串作为查找文件内容的范本样式。 (常用即模式通配符匹配)</span></span><br><span class=\"line\">-E, --extended-regexp <span class=\"comment\">#支持正则匹配 grep需要使用正则表达式进行匹配 Expgress reg。(常用扩展正则匹配)</span></span><br><span class=\"line\">-G, --basic-regexp    <span class=\"comment\">#基础正则匹配</span></span><br><span class=\"line\">-P, --perl-regexp     <span class=\"comment\">#使用perl正则进行匹配</span></span><br><span class=\"line\">-f &lt;范本文件&gt; 指定范本文件，其内容有一个或多个范本样式，让grep查找符合范本条件的文件内容，格式为每一列的范本样式。</span><br><span class=\"line\">-F 将范本样式视为固定字符串的列表。</span><br><span class=\"line\">-G 将范本样式视为普通的表示法来使用。</span><br><span class=\"line\">-h 在显示符合范本样式的那一列之前，不标示该列所属的文件名称。</span><br><span class=\"line\">-H 在显示符合范本样式的那一列之前，同时打印包括搜索字符串的文件。 (常用)</span><br><span class=\"line\">-i 忽略字符大小写的差别，因为Linux严格区分大小写(常用)</span><br><span class=\"line\">-l 列出文件内容符合指定的范本样式的文件名称。</span><br><span class=\"line\">-L 列出文件内容不符合指定的范本样式的文件名称。</span><br><span class=\"line\">-n 在显示符合范本样式的那一列之前，标示出该列的编号。</span><br><span class=\"line\">-q 不显示任何信息。</span><br><span class=\"line\">-R/-r 此参数的效果和指定“-d recurse”参数相同,递归搜索。(常用)</span><br><span class=\"line\">-s 不显示错误信息。</span><br><span class=\"line\">-v 反转查找,即搜索不包含字符串的文件 （显示除字符串的其他类容）。 (常用)</span><br><span class=\"line\">-w 只显示全字符合的列。</span><br><span class=\"line\">-x 只显示全列符合的列。</span><br><span class=\"line\">-y 此参数效果跟“-i”相同。</span><br><span class=\"line\">-Z 显示匹配的文件以及匹配字符</span><br><span class=\"line\">-o 只输出文件中匹配到的部分不会输出那一行,精确输出我想要的内容.(常用)</span><br><span class=\"line\"></span><br><span class=\"line\">--color=auto <span class=\"comment\"># 标记匹配颜色选项</span></span><br><span class=\"line\">--include *  <span class=\"comment\"># 包含文件名称</span></span><br><span class=\"line\">--exclude *  <span class=\"comment\"># 排除文件名称</span></span><br><span class=\"line\">--exclude-from file  <span class=\"comment\"># 排除指定文件</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>实际案例:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1.grep常用参数选项</span></span><br><span class=\"line\">grep <span class=\"string\">\"match_pattern\"</span> file_name  <span class=\"comment\">#命令会返回一个包含“match_pattern”的文本行</span></span><br><span class=\"line\">grep -q <span class=\"string\">\"test\"</span> filename <span class=\"comment\">#静默输出不会输出任何信息，如果命令运行成功返回0，失败则返回非0值。一般用于条件测试。</span></span><br><span class=\"line\">grep -v <span class=\"string\">\"/\"</span> test.jsp  <span class=\"comment\">#反向查找显示(排查/字符的行)</span></span><br><span class=\"line\">grep -i <span class=\"string\">\"test\"</span> test.jsp  <span class=\"comment\">#忽略大小写</span></span><br><span class=\"line\"><span class=\"comment\"># TEST</span></span><br><span class=\"line\">grep -c <span class=\"string\">\"text\"</span> file_name  <span class=\"comment\">#统计文件或者文本中包含匹配字符串的行数 Tips:grep -c 要比 grep | wc -l</span></span><br><span class=\"line\"><span class=\"comment\"># 1</span></span><br><span class=\"line\">grep <span class=\"string\">\"text\"</span> -n file_name  <span class=\"comment\">#输出包含匹配字符串的行数</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> this is a text line | grep -e <span class=\"string\">\"is\"</span> -e <span class=\"string\">\"line\"</span> -o  <span class=\"comment\">#多个匹配样式</span></span><br><span class=\"line\"><span class=\"comment\"># is</span></span><br><span class=\"line\"><span class=\"comment\"># line</span></span><br><span class=\"line\"><span class=\"comment\">#也可以使用-f选项来匹配多个样式，在样式文件中逐行写出需要匹配的字符。</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> aaa bbb ccc ddd eee | grep -f patfile.txt -o</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2.在多个文件中查找</span></span><br><span class=\"line\">grep <span class=\"string\">\"match_pattern\"</span> file_1 file_2 file_3</span><br><span class=\"line\">grep <span class=\"string\">\"text\"</span> -n file_1 file_2</span><br><span class=\"line\">grep -l <span class=\"string\">\"text\"</span> file1 file2 file3 <span class=\"comment\"># 搜索多个文件并查找匹配文本在哪些文件中</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例3.正则表达式匹配和精准输出-o</span></span><br><span class=\"line\">grep -E <span class=\"string\">\"[1-9]+\"</span> <span class=\"comment\">#或egrep \"[1-9]+\"</span></span><br><span class=\"line\">grep -v -E <span class=\"string\">\"^#\"</span> sshd.conf |</span><br><span class=\"line\"><span class=\"built_in\">echo</span> this is a <span class=\"built_in\">test</span> line. | grep -o -E <span class=\"string\">\"[a-z]+\\.\"</span></span><br><span class=\"line\">line.</span><br><span class=\"line\"><span class=\"built_in\">echo</span> this is a <span class=\"built_in\">test</span> line. | egrep -o <span class=\"string\">\"[a-z]+\\.\"</span></span><br><span class=\"line\">line.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例4.在多级目录中对文本进行递归搜索 -r</span></span><br><span class=\"line\">grep <span class=\"string\">\"text\"</span> . -r -n  <span class=\"comment\"># .表示当前目录。</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"a\\nb\\nc\\na\\nb\\nc\"</span> | grep <span class=\"string\">'a'</span> -A 0</span><br><span class=\"line\">a</span><br><span class=\"line\">--</span><br><span class=\"line\">a</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 静默验证字符串是否在指定文件中。</span></span><br><span class=\"line\">grep -Eqi <span class=\"string\">\"Ubuntu\"</span> /etc/issue</span><br><span class=\"line\"><span class=\"built_in\">echo</span> $?</span><br><span class=\"line\"><span class=\"comment\"># 静默验证当前bash是否为</span></span><br><span class=\"line\">ps -p $$ | grep -siq bash</span><br><span class=\"line\"><span class=\"built_in\">echo</span> $?</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190626093720.png\" alt=\"WeiyiGeek.正则与递归\" title=\"\" class=\"\">\n                <p>WeiyiGeek.正则与递归</p>\n            </figure></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例4.进阶使用</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> gun is not unix | grep -b -o <span class=\"string\">\"not\"</span>   <span class=\"comment\">#打印样式匹配所位于的字符或字节偏移：</span></span><br><span class=\"line\"><span class=\"comment\"># 7:not</span></span><br><span class=\"line\"><span class=\"comment\">#只在目录中所有的.php和.html文件中递归搜索字符\"main()\"</span></span><br><span class=\"line\">grep <span class=\"string\">\"main()\"</span> . -r --include *.&#123;php,html&#125;</span><br><span class=\"line\"><span class=\"comment\">#在搜索结果中排除所有README文件</span></span><br><span class=\"line\">grep <span class=\"string\">\"main()\"</span> . -r --exclude <span class=\"string\">\"README\"</span></span><br><span class=\"line\"><span class=\"comment\">#在搜索结果中排除filelist文件列表里的文件</span></span><br><span class=\"line\">grep <span class=\"string\">\"main()\"</span> . -r --exclude-from filelist.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#使用0值字节后缀的grep与xargs：</span></span><br><span class=\"line\"><span class=\"comment\">#测试文件：</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"aaa\"</span> &gt; file1</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"bbb\"</span> &gt; file2</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"aaa\"</span> &gt; file3</span><br><span class=\"line\">grep <span class=\"string\">\"aaa\"</span> file* -lZ | xargs -0 rm</span><br><span class=\"line\"><span class=\"comment\">#执行后会删除file1和file3，grep输出用-Z选项来指定以0值字节作为终结符文件名（\\0），xargs -0 读取输入并用0值字节终结符分隔文件名，然后删除匹配文件，-Z通常和-l结合使用。</span></span><br><span class=\"line\"><span class=\"variable\">$grep</span> <span class=\"string\">\"aaa\"</span> file* -l</span><br><span class=\"line\">file1</span><br><span class=\"line\">file3</span><br><span class=\"line\"><span class=\"variable\">$grep</span> <span class=\"string\">\"aaa\"</span> file* -Z</span><br><span class=\"line\">file1aaa</span><br><span class=\"line\">file3aaa</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 示例5.打印出匹配文本之前或者之后的行</span></span><br><span class=\"line\"><span class=\"comment\">#显示匹配某个结果之后的3行，使用 -A 选项：</span></span><br><span class=\"line\">seq 10 | grep <span class=\"string\">\"5\"</span> -A 3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#显示匹配某个结果之前的3行，使用 -B 选项：</span></span><br><span class=\"line\">seq 10 | grep <span class=\"string\">\"5\"</span> -B 3</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#显示匹配某个结果的前三行和后三行，使用 -C 选项：</span></span><br><span class=\"line\">seq 10 | grep <span class=\"string\">\"5\"</span> -C 3</span><br><span class=\"line\"><span class=\"comment\">#如果匹配结果有多个，会用“--”作为各匹配结果之间的分隔符：</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">\"a\\nb\\nc\\na\\nb\\nc\"</span> | grep a -A 1</span><br><span class=\"line\">grep -E -A 3 <span class=\"string\">\"^Cached\"</span> meminfo  <span class=\"comment\">#显示后三行</span></span><br><span class=\"line\"><span class=\"comment\"># SwapCached:            0 kB</span></span><br><span class=\"line\"><span class=\"comment\"># Active:           163624 kB</span></span><br><span class=\"line\"><span class=\"comment\"># Inactive:         319796 kB</span></span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190626095149.png\" alt=\"WeiyiGeek.grep-ABC\" title=\"\" class=\"\">\n                <p>WeiyiGeek.grep-ABC</p>\n            </figure>\n<p><strong>补充示例：</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 示例6.grep采用perl正则元字符(环视功能)</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"WeiyiWeiyiGeek Whoami\"</span> | grep -oP <span class=\"string\">\"Weiyi(?=WeiyiGeek)\"</span> <span class=\"comment\">#当后面接的字符串可以匹配出则显示，否则不显示</span></span><br><span class=\"line\">Weiyi</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"WeiyiGeek Whoami\"</span> | grep -oP <span class=\"string\">\"(?=WeiyiGeek)Weiyi\"</span></span><br><span class=\"line\">Weiyi</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 实例7.-o只输出匹配的perl正则元字符字符串</span></span><br><span class=\"line\">grep -Po <span class=\"string\">'(?&lt;=^ID=\")\\w+'</span> /etc/os-release</span><br><span class=\"line\"><span class=\"comment\"># centos</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例8.查询某一时间段后的100行</span></span><br><span class=\"line\">grep -A 100 <span class=\"string\">\"<span class=\"variable\">$(date -d '-1 minute' '+%Y-%m-%d %H:%M')</span>\"</span> studentcenter.log</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例9.统计 18:05~18:10 时间段里面指定字符串的行数输出匹配的字符串(进行了过滤)</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /app/logs/StudentCenter &amp;&amp; egrep <span class=\"string\">\"18:(05|06|07|08|09|10)\"</span> info.2021-03-12.0.log | grep <span class=\"string\">\"cjxmc=总分\"</span> | egrep -o <span class=\"string\">\"sfzh=[1-9]\\d&#123;5&#125;(18|19|([23]\\d))\\d&#123;2&#125;((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d&#123;3&#125;[0-9Xx]\"</span> | sort -u | wc -l</span><br><span class=\"line\">  <span class=\"comment\"># 合计: 2815+2736+2585+2639+2640+2574</span></span><br><span class=\"line\"><span class=\"comment\"># 统计那些人已经看了网页</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /app/logs/StudentCenter &amp;&amp; grep -E <span class=\"string\">\"21500140770323|21500113771228\"</span> info.2021-04-18.0.log | grep <span class=\"string\">\"yxmc=\"</span> | grep -oE <span class=\"string\">\"ksh=\\d&#123;14&#125;\"</span> | sort | uniq -c</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例10.匹配url的正则表达式（指定目录或者指定文件）</span></span><br><span class=\"line\">grep -ohr -E <span class=\"string\">\"https?://[a-zA-Z0-9\\.\\/_&amp;=@$%?~#-]*\"</span> ./folder</span><br><span class=\"line\">grep -oE <span class=\"string\">'(https|http|ftp)?://[a-zA-Z0-9\\.\\/_&amp;=@$%?~#-]*'</span> demo.txt | grep -vE <span class=\"string\">\".docx$|.pdf$|.jpg$|.gif$\"</span> | sort | uniq</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例11.递归查询某一目录下不存在指定字符串的文件</span></span><br><span class=\"line\">grep -L <span class=\"string\">\"pageid:\"</span> -R  . | grep -E <span class=\"string\">\"md$\"</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><em>注意事项：Find命令与Grep命令的区别</em><br>1）Find在系统中搜索的条件的文件名,如需要匹配，使用<code>通配符匹配是完全匹配</code>.<br>2）Grep在文件中搜索符号的字符串,如需匹配，则使用<code>正则表达式是包含匹配</code>。</p>\n<p><br></p>\n<h3 id=\"egrep-命令\"><a href=\"#egrep-命令\" class=\"headerlink\" title=\"egrep 命令\"></a>egrep 命令</h3><p>描述：grep 默认仅支持基础正则表达式(Base Regular Expression)，如果要使用扩展性正则表达式(Extended Regular Expression)，使用egrep命令实际上grep -E == egrep ,extended regular expression比basic regular expression的表达更规范。</p>\n<ul>\n<li>egrep用extended regular expression语法来解读的</li>\n<li>grep用basic regular expression 语法解读</li>\n</ul>\n<p>使用的语法及参数可参照grep指令，与grep的不同点在于解读字符串的方法。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">egrep(选项)(查找模式)(文件名1，文件名2，……)</span><br><span class=\"line\"><span class=\"comment\">#选项</span></span><br><span class=\"line\">-i <span class=\"comment\">#ignore Capitailzation 忽略大小写</span></span><br></pre></td></tr></table></figure></p>\n<p>实际案例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1.简单示例</span></span><br><span class=\"line\">$ egrep -n <span class=\"string\">'goo*d'</span> regular_express.txt    <span class=\"comment\">#&#123;0,N&#125;</span></span><br><span class=\"line\">$ egrep -n <span class=\"string\">'go+d'</span> regular_express.txt    <span class=\"comment\">#&#123;1,0&#125;</span></span><br><span class=\"line\">$ egrep -n <span class=\"string\">'go?d'</span> regular_express.txt    <span class=\"comment\">#&#123;0,1&#125;</span></span><br><span class=\"line\">$ egrep -n <span class=\"string\">'g(la|oo)d'</span> regular_express.txt   <span class=\"comment\">#也就是搜寻(glad)或 good 这两个字符串</span></span><br><span class=\"line\"><span class=\"variable\">$echo</span><span class=\"string\">'AxyzxyzxyzxyzC'</span>|egrep <span class=\"string\">'A(xyz)+C'</span></span><br><span class=\"line\"><span class=\"variable\">$echo</span><span class=\"string\">'AxyzxyzxyzxyzC'</span>|egrep <span class=\"string\">'A(xz)+C'</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2.忽略大小写匹配</span></span><br><span class=\"line\">egrep -i <span class=\"string\">'^(From|Subject|Date): '</span> email.txt</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190626100523.png\" alt=\"WeiyiGeek.正则egrep案例\" title=\"\" class=\"\">\n                <p>WeiyiGeek.正则egrep案例</p>\n            </figure></p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Linux命令","path":"api/categories/Linux命令.json"}],"tags":[{"name":"shell","path":"api/tags/shell.json"}]}