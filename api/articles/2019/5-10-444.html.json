{"title":"WAF原理及其使用说明","slug":"网安防御/应用服务安全和防御/WAF原理及其使用说明","date":"2019-05-10T06:34:30.000Z","updated":"2022-03-30T05:02:09.821Z","url":"2019/5-10-444.html","path":"api/articles/2019/5-10-444.html.json","covers":["https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190830094906.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190830095022.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190830100426.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190830101713.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190830101615.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190830102044.png"],"content":"<p>[TOC]</p>\n<p><b style=\"color:red\">注意：本文分享给安全从业人员、网站开发人员以及运维人员在日常工作防范恶意攻击,请勿恶意使用下面介绍技术进行非法攻击操作。。</b><br><a id=\"more\"></a></p>\n<hr>\n\n<h4 id=\"WAF与正则表达式\"><a href=\"#WAF与正则表达式\" class=\"headerlink\" title=\"WAF与正则表达式\"></a>WAF与正则表达式</h4><p>正则表达式不适合构建WAF由于正则表达式计算复杂度直接影响WAF防御能力;</p>\n<ul>\n<li>误报率高</li>\n<li>漏报难以平衡</li>\n<li>容易绕过</li>\n</ul>\n<p>正则表达式DDOS攻击:正则表达式的最坏时间复杂度大于等于𝑶(𝑛2)，该正则表达式可被DDOS攻击</p>\n<ul>\n<li><p>Regex DDOS与Regex DOS不同<br>• 𝑶(𝑛2)，𝑶(2𝑛)<br>• Regex DDOS目前普遍存在<br>• Regex DOS很难找到了</p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190830094906.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n<p>(1)利用正则表达式匹配的回溯之正则表达式匹配原理：NFA<br>正则表达式：<code>(a|b)*abb</code>对应的NFA,匹配算法需要尝试每一条路径，直到找到一条匹配路径。尝试所有路径失败则匹配失败。<br>• 尝试所有匹配路径<br>• 路径尝试失败，需要回溯</p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190830095022.png\" alt=\"WeiyiGeek.正则表达式匹配原理\" title=\"\" class=\"\">\n                <p>WeiyiGeek.正则表达式匹配原理</p>\n            </figure>\n</li>\n</ul>\n<p>(2)利用正则表达式匹配的回溯之可被DDOS的一种正则表达式模式<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">𝑷𝒂𝒕𝒕𝒆𝒓𝒏 = (𝑺𝒖𝒃𝑨)(𝑺𝒖𝒃𝑩)∗(SubC)，其中𝑺𝒖𝒃𝑨 ∈ 𝑺𝒖𝒃</span><br></pre></td></tr></table></figure><br>影响范围:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#owasp-modsecurity-crs</span></span><br><span class=\"line\">(?i:(?:(union(.*?)select(.*?)from)))</span><br><span class=\"line\">(?i:&lt;META[\\s/+].*?charset[\\s/+]*=)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#wordpress-4.7.1</span></span><br><span class=\"line\">class-wp-text-diff-renderertable.php: Line 266:</span><br><span class=\"line\">(&lt;ins&gt;.*?&lt;/ins&gt;|&lt;del&gt;.*?&lt;/del&gt;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Discuz_X3.3_SC_UTF8</span></span><br><span class=\"line\">admincp_announce.php</span><br><span class=\"line\">• Line 136: <span class=\"string\">'/&lt;b&gt;(.*?)&lt;\\/b&gt;/i'</span>,</span><br><span class=\"line\">•Line 139: <span class=\"string\">'/&lt;i&gt;(.*?)&lt;\\/i&gt;/i'</span>,</span><br><span class=\"line\">•Line 142: <span class=\"string\">'/&lt;u&gt;(.*?)&lt;\\/u&gt;/i'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#某云WAF/360_safe3.php</span></span><br><span class=\"line\">360_safe3.php某云WAF: union\\s+select.*from </span><br><span class=\"line\">• \\/\\*.+?\\*\\/</span><br><span class=\"line\">• &lt;\\s*script\\b</span><br><span class=\"line\">• UNION.+?SELECT</span><br></pre></td></tr></table></figure></p>\n<p>维护几十条到几百条正则表达式规则，保证拦截率，误报率前提下，所有规则最坏时间复杂度小于𝑶(𝒏𝟐)是一件很难事情,正则表达式不适合用于构建WAF;<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190830100426.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p>所以我们需要通过基于语义监测的WAF进行更好的管控和减少误报;<br>比如：<code>文本：What’s problem about ‘Select id,name from’, give me a hand。</code></p>\n<ul>\n<li>正则：select.*from ：正则只关注‘Select id,namefrom’， 忽略了上下文的信息。在做注入判断时，对输入进行片面的理解，导致误报</li>\n<li>Improved ： 整个输入作为一个整体，尝试理解意图。How?</li>\n</ul>\n<p>基于语义检测的WAF(抽象攻击语义):</p>\n<ul>\n<li>输入是否有效代码</li>\n<li>执行了什么动作</li>\n<li>动作是否有危害</li>\n</ul>\n<p>基于语义检测的WAF—实现:</p>\n<ul>\n<li>用户输入-&gt;词法分析-&gt;语法分析-&gt;攻击语义检测-&gt;攻击语义抽象</li>\n</ul>\n<p>基于语义检测的WAF—优缺点</p>\n<ul>\n<li>优点: 运营成本低,高准确率,低漏报</li>\n<li>缺点: 应急响应慢,语义抽象依赖人,开发成本很高算法优化;</li>\n</ul>\n<p>基于统计的机器学习WAF—异常模型<br>思路: 1.正常的请求总是相似;2.异常却各有各的不同<br>优点：识别未知的攻击、及攻击变形<br>面临问题: 准确率 应用变更<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190830101713.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p>基于统计的机器学习WAF—异常模型&amp;威胁模型<br>思路：在异常数据的基础上，注入一些领域知识，从而构成一个分类器，从异常中剥离出攻击<br>优点：准确率相对单独异常模型，提升了许多。<br>问题：模型滞后性：领域知识注入导致。修复响应：出现漏报，在线上如何修复。<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190830101615.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p>基于统计的机器学习WAF(个人总结)<br>线上化困难：•准确率 •应用变更<br>WAF运营手段：•WAF安全水位 •WAF瓶颈 •payload的变化</p>\n<p>基于深度学习构建WAF<br>思路：用深度学习的模型代替语义检测中的词法分析、语法分析。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">       攻击语义的深度学习网络</span><br><span class=\"line\">用户输入 -&gt; 深度学习的攻击语义检测模型</span><br></pre></td></tr></table></figure></p>\n<p>攻击语义的深度学习网络? 为什么深度学习、RNN：<br>• 深度学习可通过学习一种深层非线性网络结构，实现攻击语义的逼近。<br>• RNN能够使信息持续保存，根据已有知识进行思考，更容易学习到攻击语义<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190830102044.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<h4 id=\"Web-WAF\"><a href=\"#Web-WAF\" class=\"headerlink\" title=\"Web WAF\"></a>Web WAF</h4><ul>\n<li>360WebScan</li>\n</ul>\n","comments":true,"excerpt":"[TOC]注意：本文分享给安全从业人员、网站开发人员以及运维人员在日常工作防范恶意攻击,请勿恶意使用下面介绍技术进行非法攻击操作。。<br>","categories":[{"name":"SecurityManager","path":"api/categories/SecurityManager.json"}],"tags":[{"name":"WAF","path":"api/tags/WAF.json"}]}