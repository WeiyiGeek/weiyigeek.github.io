{"title":"5.Nginx常遇问题入坑出坑整理","slug":"系统运维/Application/Web/WebApp/Nginx/5.Nginx常遇问题入坑出坑整理","date":"2020-09-02T05:34:30.000Z","updated":"2022-08-12T06:50:36.974Z","url":"2020/9-2-622.html","path":"api/articles/2020/9-2-622.html.json","covers":null,"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h2 id=\"0x00-Nginx-安装与编译\"><a href=\"#0x00-Nginx-安装与编译\" class=\"headerlink\" title=\"0x00 Nginx 安装与编译\"></a>0x00 Nginx 安装与编译</h2><h3 id=\"1-在Ubuntu系统上进行Nginx源码编译安装时指定了–with-stream-geoip-module模块报error-the-GeoIP-module-requires-the-GeoIP-library-错误信息，解决办法。\"><a href=\"#1-在Ubuntu系统上进行Nginx源码编译安装时指定了–with-stream-geoip-module模块报error-the-GeoIP-module-requires-the-GeoIP-library-错误信息，解决办法。\" class=\"headerlink\" title=\"1.在Ubuntu系统上进行Nginx源码编译安装时指定了–with-stream_geoip_module模块报error: the GeoIP module requires the GeoIP library.错误信息，解决办法。\"></a>1.在Ubuntu系统上进行Nginx源码编译安装时指定了–with-stream_geoip_module模块报<code>error: the GeoIP module requires the GeoIP library.</code>错误信息，解决办法。</h3><ul>\n<li>错误信息: 安装的nginx的geo的模块在编译nginx的时候遇到报错，报错信息如下：<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure: error: the GeoIP module requires the GeoIP library.</span><br><span class=\"line\">You can either <span class=\"keyword\">do</span> not <span class=\"built_in\">enable</span> the module or install the library.</span><br></pre></td></tr></table></figure>\n解决办法：<code>apt-get install libgeoip-dev</code></li>\n</ul>\n<p><br></p>\n<hr>\n<h2 id=\"0x01-Nginx-启动与使用\"><a href=\"#0x01-Nginx-启动与使用\" class=\"headerlink\" title=\"0x01 Nginx 启动与使用\"></a>0x01 Nginx 启动与使用</h2><h3 id=\"1-启动Nginx后报nginx-emerg-unknown-log-format-quot-main-quot-in错误提示，解决办法。\"><a href=\"#1-启动Nginx后报nginx-emerg-unknown-log-format-quot-main-quot-in错误提示，解决办法。\" class=\"headerlink\" title=\"1.启动Nginx后报nginx: [emerg] unknown log format &quot;main&quot; in错误提示，解决办法。\"></a>1.启动Nginx后报<code>nginx: [emerg] unknown log format &quot;main&quot; in</code>错误提示，解决办法。</h3><ul>\n<li>错误信息: 在执行 <code>nginx -s reload</code> 后续出现了 <code>nginx: [emerg] unknown log format &quot;proxy_log&quot; in /usr/local/macports/etc/nginx/nginx.conf:147</code> 错误问题。</li>\n<li>问题原因: 默认的 nginx 配置中的 log_format 选项被注释。</li>\n<li>解决办法: 打开 nginx.conf 将 log_format 选项前面的#去掉。<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">log_format  main  <span class=\"string\">'$remote_addr - $remote_user [$time_local] \"$request\" '</span></span><br><span class=\"line\">                  <span class=\"string\">'$status $body_bytes_sent \"$http_referer\" '</span></span><br><span class=\"line\">                  <span class=\"string\">'\"$http_user_agent\" \"$http_x_forwarded_for\"'</span>;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br></p>\n<h3 id=\"2-使用Nginx代理转发php后端应用时报-Nginx-502-Bad-Gateway错误问题解决。\"><a href=\"#2-使用Nginx代理转发php后端应用时报-Nginx-502-Bad-Gateway错误问题解决。\" class=\"headerlink\" title=\"2.使用Nginx代理转发php后端应用时报 Nginx 502 Bad Gateway错误问题解决。\"></a>2.使用Nginx代理转发php后端应用时报 <code>Nginx 502 Bad Gateway</code>错误问题解决。</h3><ul>\n<li>错误信息: Nginx 502 Bad Gateway_</li>\n<li>问题原因: php-cgi进程数不够用、php执行时间长（mysql慢）、或者是php-cgi进程死掉，都会出现502错误与php-fpm.conf的设置有关;而Nginx 504 Gateway Time-out则是与nginx.conf的设置有关。</li>\n<li>检查流程:</li>\n</ul>\n<ul>\n<li>查看当前的PHP FastCGI进程数是否够用: <code>netstat -anpo | grep &quot;php-cgi&quot; | wc -l</code></li>\n<li>部分PHP程序的执行时间超过了Nginx的等待时间,可以适当增加<code>nginx.conf</code>配置文件中<code>FastCGI</code>的timeout时间:<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http &#123;</span><br><span class=\"line\">  fastcgi_connect_timeout 300;</span><br><span class=\"line\">  fastcgi_send_timeout 300;</span><br><span class=\"line\">  fastcgi_read_timeout 300;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br></p>\n<h3 id=\"3-Nginx-启动时报413-Request-Entity-Too-Large错误问题解决。\"><a href=\"#3-Nginx-启动时报413-Request-Entity-Too-Large错误问题解决。\" class=\"headerlink\" title=\"3.Nginx 启动时报413 Request Entity Too Large错误问题解决。\"></a>3.Nginx 启动时报<code>413 Request Entity Too Large</code>错误问题解决。</h3><ul>\n<li>错误信息：413 Request Entity Too Large</li>\n<li>错误原因: client_max_body_size:指令指定允许客户端连接的最大请求实体大小,它出现在请求头部的Content-Length字段. 如果请求大于指定的值,客户端将收到一个”Request Entity Too Large” (413)错误</li>\n<li>解决办法:<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#conf增大</span></span><br><span class=\"line\">client_max_body_size</span><br><span class=\"line\"><span class=\"comment\">#php.ini中增大</span></span><br><span class=\"line\">post_max_size 和upload_max_filesize</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br></p>\n<h3 id=\"4-访问-Nginx-提供的网页时报403-forbidden错误问题解决。\"><a href=\"#4-访问-Nginx-提供的网页时报403-forbidden错误问题解决。\" class=\"headerlink\" title=\"4.访问 Nginx 提供的网页时报403 forbidden错误问题解决。\"></a>4.访问 Nginx 提供的网页时报<code>403 forbidden</code>错误问题解决。</h3><p>问题描述: directory index of “/xx/xx/xx/“ is forbidden,网页访问403;<br>解决思路:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># nginx.conf</span></span><br><span class=\"line\">autoindex on;  <span class=\"comment\">#进行列目录查看是否可以列目录为排错准备;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 需要排查的思路</span></span><br><span class=\"line\">1.selinux</span><br><span class=\"line\">2.目录下有没有index.html 文件（如果有就需要配套有 index  index.html index.php）</span><br><span class=\"line\">3.权限问题 chown -R nginx:www-data /var/www/html</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"5-Nginx-成功配置虚拟主机并且启动nginx可以看见有nginx线程存在但是无监听端口\"><a href=\"#5-Nginx-成功配置虚拟主机并且启动nginx可以看见有nginx线程存在但是无监听端口\" class=\"headerlink\" title=\"5.Nginx 成功配置虚拟主机并且启动nginx可以看见有nginx线程存在但是无监听端口\"></a>5.Nginx 成功配置虚拟主机并且启动nginx可以看见有nginx线程存在但是无监听端口</h3><ul>\n<li>问题原因: 由于在设置多个虚拟主机的时候在nginx.conf主配置文件中去掉了server {…} 添加的 <code>include domains/*</code>,其中domains目录不是在于conf/子目录中;</li>\n<li>解决办法: <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -vp /usr/<span class=\"built_in\">local</span>/nginx/conf/domains</span><br><span class=\"line\">cat&gt;/usr/<span class=\"built_in\">local</span>/nginx/conf/domains/v1.weiyigeek.top.conf&lt;&lt;EOF</span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen       80;</span><br><span class=\"line\">    server_name  <span class=\"variable\">$NGX_VHOSTS</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        root   html/<span class=\"variable\">$NGX_VHOSTS</span>;</span><br><span class=\"line\">        index  index.html index.htm;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">#Nginx 监控模块启用</span></span><br><span class=\"line\">    location /nginxStatus &#123;</span><br><span class=\"line\">      stub_status;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    error_page   500 502 503 504  /50x.html;</span><br><span class=\"line\">    location = /50x.html &#123;</span><br><span class=\"line\">        root   html;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br></p>\n<h3 id=\"6-启动-nginx-时报-error-invalid-PID-number-quot-quot-in-quot-usr-local-var-run-nginx-pid错误解决办法\"><a href=\"#6-启动-nginx-时报-error-invalid-PID-number-quot-quot-in-quot-usr-local-var-run-nginx-pid错误解决办法\" class=\"headerlink\" title=\"6.启动 nginx 时报 [error] invalid PID number &quot;&quot; in &quot;/usr/local/var/run/nginx.pid错误解决办法\"></a>6.启动 nginx 时报 <code>[error] invalid PID number &quot;&quot; in &quot;/usr/local/var/run/nginx.pid</code>错误解决办法</h3><ul>\n<li>错误原因: nginx根本就没有启动过，所以pid文件的值为空没法平滑启动，先启动了才能平滑启动。</li>\n<li>解决方法:<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">解决方案1:sudo nginx -s reload -c  /usr/<span class=\"built_in\">local</span>/etc/nginx/nginx.conf</span><br><span class=\"line\">解决方案2:先启动nginx然后测试配置文件语法无误后再进行重载。</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br></p>\n<h3 id=\"7-使用Nginx判断无效-host变量时返回JSON文本字符串便直接下载而非在页面显示。\"><a href=\"#7-使用Nginx判断无效-host变量时返回JSON文本字符串便直接下载而非在页面显示。\" class=\"headerlink\" title=\"7.使用Nginx判断无效$host变量时返回JSON文本字符串便直接下载而非在页面显示。\"></a>7.使用Nginx判断无效<code>$host</code>变量时返回JSON文本字符串便直接下载而非在页面显示。</h3><ul>\n<li>解决办法:<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location ^~ / &#123;</span><br><span class=\"line\">  <span class=\"comment\"># JSON 返回</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"variable\">$host</span> !~* weiyigeek\\.top ) &#123;</span><br><span class=\"line\">  add_header Content-Type <span class=\"string\">'application/json; charset=utf-8'</span>;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> 200 <span class=\"string\">'&#123;\"status\":\"error\",\"Author\":\"WeiyiGeek\",\"Site\":\"https://www.weiyigeek.top\",\"Chinese\":\"大佬, 请不要把你的域名解析到我的服务器上\",\"English\":\"Friend, Please do not resolve your domain name to my server\"&#125;'</span>;</span><br><span class=\"line\">  <span class=\"comment\"># return 301 https://space.bilibili.com/385802642;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># html 返回</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable\">$host</span> !~* weiyigeek\\.top) &#123;</span><br><span class=\"line\">    add_header Content-Type <span class=\"string\">'text/html;charset=utf-8'</span></span><br><span class=\"line\">    <span class=\"built_in\">return</span> 200 <span class=\"string\">'Warnning, This domain not is www.weiyigeek.top!'</span>;  </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>温馨提示: 在百度中搜索的方法中说使用<code>default_type text/html;</code>关键字来默认指定显示文档类型,但在最新的<code>1.21.6</code>版本中会报错,例如。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location ~ ^/weiyigeek/(.*)_(\\d+).html$ &#123; </span><br><span class=\"line\">  default_type text/html; </span><br><span class=\"line\">  <span class=\"built_in\">set</span> <span class=\"variable\">$s</span> <span class=\"variable\">$1</span>; </span><br><span class=\"line\">  <span class=\"built_in\">set</span> <span class=\"variable\">$d</span> <span class=\"variable\">$2</span>; </span><br><span class=\"line\">  <span class=\"built_in\">return</span> 200 str:<span class=\"variable\">$s</span><span class=\"variable\">$d</span>; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"8-在动态生成Nginx日志路径配置后报-emerg-buffered-logs-cannot-have-variables-in-name错误问题解决。\"><a href=\"#8-在动态生成Nginx日志路径配置后报-emerg-buffered-logs-cannot-have-variables-in-name错误问题解决。\" class=\"headerlink\" title=\"8.在动态生成Nginx日志路径配置后报[emerg] buffered logs cannot have variables in name错误问题解决。\"></a>8.在动态生成Nginx日志路径配置后报<code>[emerg] buffered logs cannot have variables in name</code>错误问题解决。</h3><p>问题原因: 如果设置缓存写入日志，则不支持路径中存在变量。<br>解决办法:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 不正确写法</span></span><br><span class=\"line\">access_log /var/<span class=\"built_in\">log</span>/nginx/access-<span class=\"variable\">$&#123;logdate&#125;</span>.<span class=\"built_in\">log</span> main buffer=128k gzip flush=1m;;  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 正确写法</span></span><br><span class=\"line\">access_log /var/<span class=\"built_in\">log</span>/nginx/access-<span class=\"variable\">$&#123;logdate&#125;</span>.<span class=\"built_in\">log</span> main;</span><br></pre></td></tr></table></figure></p>\n<p>补充说明: 通常设置以日期分隔日志, 如果执行 nginx 的用户权非root用户则可能包如下错误,此时我们需要赋予其可以修改日志（不建议使用root，此处假设使用nginx用户）, 然后重启nginx。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 错误信息</span></span><br><span class=\"line\">2022/04/12 14:22:00 [crit] 594763<span class=\"comment\">#594763: *55883 open() \"/var/log/nginx/ip-2022-04-12.log\" failed (13: Permission denied) while logging request, client: 71.6.232.7, server: 82.15.1.23, request: \"GET / HTTP/1.1\", host: \"82.15.1.23\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解决办法</span></span><br><span class=\"line\">$ chown -R nginx:root /var/<span class=\"built_in\">log</span>/nginx</span><br><span class=\"line\">$ nginx -s reload</span><br></pre></td></tr></table></figure></p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"入坑出坑","path":"api/categories/入坑出坑.json"}],"tags":[{"name":"Nginx","path":"api/tags/Nginx.json"}]}