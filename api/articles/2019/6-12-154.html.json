{"title":"系统软件服务类设置命令","slug":"系统运维/Linux/常用命令/安装软件类命令/系统软件服务类设置命令","date":"2019-06-12T13:35:30.000Z","updated":"2022-03-29T05:39:06.307Z","url":"2019/6-12-154.html","path":"api/articles/2019/6-12-154.html.json","covers":["https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190612091839.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190612100828.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190606164400.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190606164541.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h2 id=\"0x00-服务管理\"><a href=\"#0x00-服务管理\" class=\"headerlink\" title=\"0x00 服务管理\"></a>0x00 服务管理</h2><p><strong>1.Linux服务管理</strong><br>独立的服务:就是运行在内存里的服务，任何的客户端要访问这个服务</p>\n<ul>\n<li>可以直接响应，速度快，缺点是占用内存.</li>\n</ul>\n<p>xinetd服务:是超级守护进程，它管理的后台程序，客户端要访问后台服务需要经过它</p>\n<ul>\n<li>xinetd占用内存，其他服务都不占内存，速度慢,xinetd的服务现在用得越来越少了.</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190612091839.png\" alt=\"WeiyiGeek.rpm与源码包安装服务\" title=\"\" class=\"\">\n                <p>WeiyiGeek.rpm与源码包安装服务</p>\n            </figure>\n<p><em>各种服务的目录以及使用</em>：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#1.独立服务的启动,系统启动都时候都会把这个文件里的内容执行一遍</span></span><br><span class=\"line\">/etc/rc.d/    <span class=\"comment\">#自启动</span></span><br><span class=\"line\">/etc/init.d/  <span class=\"comment\">#启动</span></span><br><span class=\"line\"><span class=\"comment\">#注意Centos7需要自己编写脚本放入该目录中：进行启动</span></span><br><span class=\"line\">/etc/init.d/独立服务名 start|stop|status|restart|</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例</span></span><br><span class=\"line\">/etc/rc.d/rc.local <span class=\"comment\">#修改文件</span></span><br><span class=\"line\">/etc/init.d/net start <span class=\"comment\">#比如加入进行自启动</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#2.源码包服务管理</span></span><br><span class=\"line\">vi /etc/rc.d/rc.local <span class=\"comment\">#源码包的自启动</span></span><br><span class=\"line\"><span class=\"comment\">#让源码包的服务能过被service命令管理启动,需要将源码包中bin目录的命令建立软连接到 /etc/init.d/下</span></span><br><span class=\"line\"><span class=\"comment\">#示例：</span></span><br><span class=\"line\">ln -s /usr/<span class=\"built_in\">local</span>/apache2/bin/apachectl /etc/init.d/apache  </span><br><span class=\"line\">ln -s /usr/<span class=\"built_in\">local</span>/apache2/bin/apachectl /usr/bin/apachectl    <span class=\"comment\">#在centos7 </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#让源码包服务被chkconfig,ntsysv命令管理自启动</span></span><br><span class=\"line\">vi /etc/init.d/apache</span><br><span class=\"line\"><span class=\"comment\">#加入：chkconfig:35 86 76  并且加入到chkconfig</span></span><br><span class=\"line\"><span class=\"comment\"># 35 启动级别</span></span><br><span class=\"line\"><span class=\"comment\"># 86 启动顺序</span></span><br><span class=\"line\"><span class=\"comment\"># 76 关闭顺序</span></span><br><span class=\"line\">chkconfig --add apachectl <span class=\"comment\">#服务接受chkconfig管理就能被ntsysv管理.</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#3.补充方法（主要是源码安装）</span></span><br><span class=\"line\"><span class=\"comment\">#在redhat7及以上,推荐采用systemctl进行管理服务</span></span><br><span class=\"line\">/usr/lib/systemd/system/  <span class=\"comment\">#systemctl管理的脚本</span></span><br><span class=\"line\">/etc/systemd/system  <span class=\"comment\">#(Ubuntu)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例：nginx源码安装，首先是确定编译后的软件服务不存在下面的目录</span></span><br><span class=\"line\">/etc/systemd/system/multi-user.target.wants/</span><br><span class=\"line\"><span class=\"comment\">#1)创建配置文件 </span></span><br><span class=\"line\">vim /usr/lib/systemd/system/nginx.service</span><br><span class=\"line\">写入服务管理内容：</span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=nginx - high performance web server </span><br><span class=\"line\">Documentation=http://nginx.org/en/docs/ </span><br><span class=\"line\">After=network-online.target remote-fs.target nss-lookup.target </span><br><span class=\"line\">Wants=network-online.target</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#包含启动、重启和停止</span></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=forking</span><br><span class=\"line\">PIDFile=/var/run/nginx.pid</span><br><span class=\"line\">ExecStart=/usr/<span class=\"built_in\">local</span>/nginx/sbin/nginx -c /usr/<span class=\"built_in\">local</span>/nginx/conf/nginx.conf</span><br><span class=\"line\">ExecReload=/bin/<span class=\"built_in\">kill</span> -s HUP <span class=\"variable\">$MAINPID</span></span><br><span class=\"line\">ExecStop=/bin/<span class=\"built_in\">kill</span> -s TERM <span class=\"variable\">$MAINPID</span></span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#2)建立完成后就能通过systemctl命令进行管理了</span></span><br><span class=\"line\">systemctl start nginx.server</span><br></pre></td></tr></table></figure></p>\n<p><strong>2）运行等级</strong><br>切换系统运行等级：0表示关机，6表示重启，1表示单用户模式，2345表示多用户模式<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190612100828.png\" alt=\"WeiyiGeek.运行等级\" title=\"\" class=\"\">\n                <p>WeiyiGeek.运行等级</p>\n            </figure></p>\n<hr>\n\n<h3 id=\"service-命令\"><a href=\"#service-命令\" class=\"headerlink\" title=\"service 命令\"></a>service 命令</h3><p>描述：Cenots6中主要的服务管理工具,用于服务启动与停止状态的查看,注意此命令不是linux通用命令而是redhat自己开发的;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service 独立服务名  start|stop|status|restart   <span class=\"comment\">#推荐使用systemctl</span></span><br></pre></td></tr></table></figure></p>\n<p>基础使用示例:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#比如复制 php-fpm 启动文件到init.d目录中</span></span><br><span class=\"line\">cp sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm</span><br><span class=\"line\">chmod o+x /etc/init.d/php-fpm</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#传统的启动方式</span></span><br><span class=\"line\">/etc/init.d/php-fpm start</span><br><span class=\"line\"><span class=\"comment\">#采用services管理方式</span></span><br><span class=\"line\">service php-fpm start</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"updata-rc-d-命令\"><a href=\"#updata-rc-d-命令\" class=\"headerlink\" title=\"updata-rc.d 命令\"></a>updata-rc.d 命令</h3><p>描述：命令添加开机执行脚本还能用于设置服务自启动的运行等级和顺序，多在debian和Ubuntu中使用;<br>同样需要在该路径中建立软连接/etc/init.d/ssh采用进行管理;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#用法</span></span><br><span class=\"line\">update-rc.d [-n] [-f] name remove    <span class=\"comment\">#用于移除脚本</span></span><br><span class=\"line\">update-rc.d [-n] name default [NN | SS KK]</span><br><span class=\"line\">update-rc.d [basename] start|stop [order] [runlevels]</span><br><span class=\"line\"></span><br><span class=\"line\">* NN表示执行序号（0-99）</span><br><span class=\"line\">* SS表示启动时的执行序号</span><br><span class=\"line\">* KK表示关机时的执行序号，SS、KK主要用于在脚本直接的执行顺序上有依赖关系的情况下。</span><br><span class=\"line\"></span><br><span class=\"line\">-n：不做任何事情，只显示将要做的。（预览、做测试）</span><br><span class=\"line\">-f：强制移除符号连接，即使 /etc/init.d/script-name 仍然存在。</span><br></pre></td></tr></table></figure></p>\n<p>实际案例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1.update-rc.d 进行自启动并制定运行级别</span></span><br><span class=\"line\">update-rc.d ssh default  <span class=\"comment\"># 下次启动重新开启</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2.设置启动顺序</span></span><br><span class=\"line\">如果执行脚本B需要先执行脚本A，如下设置（A的启动顺序比B的小，结束顺序比B的大）：</span><br><span class=\"line\">update-rc.d A defaults 80 20  <span class=\"comment\">#其中的99表示启动顺序，取值范围是0-99。序号越大的越晚执行。</span></span><br><span class=\"line\">update-rc.d B defaults 90 10</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例3.移除启动的脚本</span></span><br><span class=\"line\">update-rc.d startBlog remove</span><br><span class=\"line\">update-rc.d -f startBlog remove  <span class=\"comment\">#强制</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例4.高级示例</span></span><br><span class=\"line\"><span class=\"comment\">#解析：表示在2、3、4、5这五个运行级别中，由小到大，第20个开始运行ushare；在 0 1 6这3个运行级别中，第20个关闭apachectl。</span></span><br><span class=\"line\">update-rc.d ssh start 20 2 3 4 5 .stop 20 0 1 6  <span class=\"comment\">#运行级别 0 — 6</span></span><br><span class=\"line\"><span class=\"comment\">#效果等于下面方法：</span></span><br><span class=\"line\">update-rc.d httpd defaults</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"chkconfig-命令\"><a href=\"#chkconfig-命令\" class=\"headerlink\" title=\"chkconfig 命令\"></a>chkconfig 命令</h3><p>描述：启动自启动命令(老版本还用),可以按照启动级别来自启;注意需要将脚本放入/etc/init.d/shell脚本名称才能进行管理；</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chkconfig [--level &lt;级别&gt;] [--<span class=\"built_in\">type</span> &lt;类型&gt;] &lt;服务名称&gt; &lt;on启用|off停止自启|reset重新设置|resetpriorities重置优先级&gt;</span><br></pre></td></tr></table></figure>\n<p>实际案例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例0.添加服务到chkconfig管理</span></span><br><span class=\"line\">chkconfig -add nginx</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例1.查看服务启动</span></span><br><span class=\"line\"><span class=\"comment\">#--level 通常级别2345一块设定  #这条命令只是表示下次开机启用</span></span><br><span class=\"line\">chkconfig --level 2345 httpd on     <span class=\"comment\"># Centos7.0 -&gt;全部集中到systemctl中</span></span><br><span class=\"line\">chkconfig –-level 35 crond on</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2.查看服务自启动状态</span></span><br><span class=\"line\"><span class=\"comment\">#可以看到所有的RPM包安装服务</span></span><br><span class=\"line\">chkconfig --list   <span class=\"comment\">#如果您想列出 systemd 服务,请执行 'systemctl list-unit-files'   #Centos 7 有改变</span></span><br><span class=\"line\"><span class=\"comment\">#欲查看对特定 target 启用的服务请执行 ' systemctl list-dependencies [target] '  （上面）</span></span><br><span class=\"line\"><span class=\"comment\"># netconsole      0:关    1:关    2:关    3:关    4:关    5:关    6:关</span></span><br><span class=\"line\"><span class=\"comment\"># network         0:关    1:关    2:开    3:开    4:开    5:开    6:关</span></span><br><span class=\"line\"><span class=\"comment\"># 基于 xinetd 的服务：</span></span><br><span class=\"line\"><span class=\"comment\">#         chargen-dgram:  关</span></span><br><span class=\"line\"><span class=\"comment\">#         chargen-stream: 关</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例3.优先级设置</span></span><br><span class=\"line\">格式：chkconfig --level 2345  10[开机优先级] 90[关机优先级]</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"xinetd-命令\"><a href=\"#xinetd-命令\" class=\"headerlink\" title=\"xinetd 命令\"></a>xinetd 命令</h3><p>描述：xinetd服务是超级守护进程是Rsync、nfs依赖.</p>\n<ul>\n<li>xinetf配置文件：/etc/xinetd.conf </li>\n<li>基于xinetd服务的启动脚本：/etc/xinetd.d/</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.安装xinetd</span></span><br><span class=\"line\">yum -y install xinetd   </span><br><span class=\"line\">service xinetd restart</span><br><span class=\"line\">service rsysv on</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#2.企业xinetd</span></span><br><span class=\"line\">vi /etc/xinetd.d/rsync   <span class=\"comment\">#修改后重启</span></span><br><span class=\"line\"><span class=\"built_in\">set</span>:<span class=\"built_in\">disable</span> = no</span><br></pre></td></tr></table></figure>\n<p>注意：xinetd服务不能加级别来自启动，xinetd自启动就启动了.</p>\n<p><br></p>\n<h3 id=\"ntsysv-命令\"><a href=\"#ntsysv-命令\" class=\"headerlink\" title=\"ntsysv 命令\"></a>ntsysv 命令</h3><p>描述：这个是redhat专用其他linux没有,Redhat与FC系统提供的图形管理界面设置哪些服务应该自动启动;<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ntsysv     </span><br><span class=\"line\">#会启动一个窗口 加＊号 开机自启 去掉＊ 取消，</span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190606164400.png\" alt=\"WeiyiGeek.ntsysv\" title=\"\" class=\"\">\n                <p>WeiyiGeek.ntsysv</p>\n            </figure>\n<p><br></p>\n<h3 id=\"setup-命令\"><a href=\"#setup-命令\" class=\"headerlink\" title=\"setup 命令\"></a>setup 命令</h3><p>描述：提供debian的图像化管理认证和系统服务配置,值得注意的是setup也是调用ntsysv和authconfig-tui工具进行管理得;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]<span class=\"comment\"># setup</span></span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/20190606164541.png\" alt=\"WeiyiGeek.setup\" title=\"\" class=\"\">\n                <p>WeiyiGeek.setup</p>\n            </figure></p>\n<p><br/></p>\n<h2 id=\"0x02-软件配置\"><a href=\"#0x02-软件配置\" class=\"headerlink\" title=\"0x02 软件配置\"></a>0x02 软件配置</h2><h3 id=\"dpkg-reconfigure-命令\"><a href=\"#dpkg-reconfigure-命令\" class=\"headerlink\" title=\"dpkg-reconfigure 命令\"></a>dpkg-reconfigure 命令</h3><p>描述: 在Debian系或者Ubuntu系需要重新配制一个已经安装的软件,当用户需要再次对软件包配置的时候可以使用<code>dpkg-reconfigure</code>来对指定的软件包进行配置。</p>\n<p>语法参数:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># /usr/bin/debconf-set-selections</span></span><br><span class=\"line\">Usage: dpkg-reconfigure [options] packages</span><br><span class=\"line\"><span class=\"comment\"># dpkg-reconfigure [选项] 软件包</span></span><br><span class=\"line\">  <span class=\"comment\"># -u,  --unseen-only            Show only not yet seen questions. # 仅显示未提过的问题</span></span><br><span class=\"line\">  <span class=\"comment\">#      --default-priority       Use default priority instead of low. #  使用默认优先级，而非“低”级。</span></span><br><span class=\"line\">  <span class=\"comment\">#      --force                  Force reconfiguration of broken packages.  #   强迫重配置受损软件包。</span></span><br><span class=\"line\">  <span class=\"comment\">#      --no-reload              Do not reload templates. (Use with caution.) # 不要轻易的重装模板(使用时请慎重考虑)。</span></span><br><span class=\"line\">  <span class=\"comment\"># -f,  --frontend               Specify debconf frontend to use. # 指定 debconf 前端界面。</span></span><br><span class=\"line\">  <span class=\"comment\"># -p,  --priority               Specify minimum priority question to show. # 指定要显示的问题的最优先级。</span></span><br><span class=\"line\">  <span class=\"comment\">#      --terse                  Enable terse mode.  # 开启简要模式。</span></span><br></pre></td></tr></table></figure></p>\n<p>使用实例:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 配置系统语言</span></span><br><span class=\"line\">sudo dpkg-reconfigure locales</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<h3 id=\"0x03-补充自带服务\"><a href=\"#0x03-补充自带服务\" class=\"headerlink\" title=\"0x03 补充自带服务\"></a>0x03 补充自带服务</h3><p>参考：<a href=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/file/2019/Linux服务列表.pdf\" target=\"_blank\" rel=\"noopener\">Linux服务列表</a></p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Linux命令","path":"api/categories/Linux命令.json"}],"tags":[{"name":"服务管理","path":"api/tags/服务管理.json"}]}