{"title":"Python自动化运维2","slug":"系统运维/自动化运维/Python/Python自动化运维2","date":"2019-07-09T07:36:30.000Z","updated":"2023-01-31T02:29:10.467Z","url":"2019/7-9-274.html","path":"api/articles/2019/7-9-274.html.json","covers":["https://img.weiyigeek.top/2019/1/20190726160431.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h4 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h4><h5 id=\"yaml-配置\"><a href=\"#yaml-配置\" class=\"headerlink\" title=\"yaml 配置\"></a>yaml 配置</h5><p>描述：yaml配置文件与xml配置文件以及json配置文件的共同之处是在于方便理解与使用,是配置文件更加的简洁通俗易懂;</p>\n<h6 id=\"ruamel-yaml-模块\"><a href=\"#ruamel-yaml-模块\" class=\"headerlink\" title=\"ruamel.yaml 模块\"></a>ruamel.yaml 模块</h6><p>官网链接： <a href=\"https://pypi.org/project/ruamel.yaml/\" target=\"_blank\" rel=\"noopener\">https://pypi.org/project/ruamel.yaml/</a><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># @File : YamlDemo.py</span></span><br><span class=\"line\"><span class=\"comment\"># @CreateTime : 2019/7/24 11:07</span></span><br><span class=\"line\"><span class=\"comment\"># @Author : WeiyiGeek</span></span><br><span class=\"line\"><span class=\"comment\"># @Function : Yaml语言解析</span></span><br><span class=\"line\"><span class=\"comment\"># @Software: PyCharm</span></span><br><span class=\"line\"><span class=\"comment\"># pip install ruamel.yaml</span></span><br><span class=\"line\"></span><br><span class=\"line\">import sys</span><br><span class=\"line\">import ruamel.yaml</span><br><span class=\"line\"></span><br><span class=\"line\">def main():</span><br><span class=\"line\">    <span class=\"comment\">#(1)读取Yaml配置文件信息</span></span><br><span class=\"line\">    yaml = ruamel.yaml.YAML()</span><br><span class=\"line\">    with open(<span class=\"string\">'demo.yaml'</span>,<span class=\"string\">'r'</span>,encoding=<span class=\"string\">'utf-8'</span>) as conf:</span><br><span class=\"line\">        try:</span><br><span class=\"line\">            config = yaml.load(conf)</span><br><span class=\"line\">        except ruamel.yaml.YAMLError as e:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">\"解析错误：\"</span>,e)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#(2)打印出yaml的配置文件信息 常量scales</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> config:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(i, <span class=\"string\">\" ： \"</span>, config[i])</span><br><span class=\"line\">    <span class=\"comment\">#对象Object</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> config[<span class=\"string\">'obj'</span>]:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(i, config[<span class=\"string\">'obj'</span>][i])</span><br><span class=\"line\">    <span class=\"comment\">#数组Array</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(config[<span class=\"string\">'array'</span>][0][<span class=\"string\">'key1'</span>], config[<span class=\"string\">'array'</span>][1][<span class=\"string\">'key2'</span>], config[<span class=\"string\">'array'</span>][2][<span class=\"string\">'key3'</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#(3)修改与添加</span></span><br><span class=\"line\">    config[<span class=\"string\">'NAME'</span>] = <span class=\"string\">\"WeiyiGeek\"</span></span><br><span class=\"line\">    config[<span class=\"string\">'add'</span>] = <span class=\"string\">\"WeiyiGeek\"</span></span><br><span class=\"line\">    config[<span class=\"string\">'obj'</span>][<span class=\"string\">'age'</span>] = <span class=\"string\">\"888\"</span></span><br><span class=\"line\">    config[<span class=\"string\">'obj'</span>][<span class=\"string\">'love'</span>][1] = <span class=\"string\">\"烹饪\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#(4)写入存档</span></span><br><span class=\"line\">    with open(<span class=\"string\">\"update.yml\"</span>,<span class=\"string\">'w+'</span>,encoding=<span class=\"string\">'utf-8'</span>) as con:</span><br><span class=\"line\">        ruamel.yaml.dump(config, con, allow_unicode=True, Dumper=ruamel.yaml.RoundTripDumper)  <span class=\"comment\">#加上Dumper原来是什么样式就是什么样式</span></span><br><span class=\"line\">        ruamel.yaml.dump(config, sys.stdout, Dumper=ruamel.yaml.RoundTripDumper)  <span class=\"comment\">#修改后输出到终端</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure><br>运行结果：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#打印结果</span></span><br><span class=\"line\">PI  ：  3.1415926</span><br><span class=\"line\">NAME  ：  “This is a String”</span><br><span class=\"line\">INT  ：  1024</span><br><span class=\"line\">obj  ：  ordereddict([(<span class=\"string\">'name'</span>, <span class=\"string\">'WeiyiGeeK'</span>), (<span class=\"string\">'age'</span>, 18), (<span class=\"string\">'love'</span>, [<span class=\"string\">'Computer'</span>, <span class=\"string\">'Cook'</span>, <span class=\"string\">'car'</span>])])</span><br><span class=\"line\">array  ：  [ordereddict([(<span class=\"string\">'key1'</span>, <span class=\"string\">'I'</span>)]), ordereddict([(<span class=\"string\">'key2'</span>, <span class=\"string\">'Love'</span>)]), ordereddict([(<span class=\"string\">'key3'</span>, <span class=\"string\">'Study'</span>)])]</span><br><span class=\"line\">name WeiyiGeeK</span><br><span class=\"line\">age 18</span><br><span class=\"line\">love [<span class=\"string\">'Computer'</span>, <span class=\"string\">'Cook'</span>, <span class=\"string\">'car'</span>]</span><br><span class=\"line\">I Love Stud</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#yaml写入文件结果</span></span><br><span class=\"line\"><span class=\"comment\">#常量</span></span><br><span class=\"line\">PI: 3.1415926</span><br><span class=\"line\">NAME: WeiyiGeek</span><br><span class=\"line\">INT: 1024</span><br><span class=\"line\"><span class=\"comment\">#对象(集合)</span></span><br><span class=\"line\">obj:</span><br><span class=\"line\">  name: WeiyiGeeK</span><br><span class=\"line\">  age: <span class=\"string\">'888'</span></span><br><span class=\"line\">  love: !!obj</span><br><span class=\"line\">  - Computer</span><br><span class=\"line\">  - <span class=\"string\">\"\\u70F9\\u996A\"</span></span><br><span class=\"line\">  - car</span><br><span class=\"line\"><span class=\"comment\">#数组</span></span><br><span class=\"line\">array:</span><br><span class=\"line\">- key1: I</span><br><span class=\"line\">- key2: Love</span><br><span class=\"line\">- key3: Study</span><br><span class=\"line\">add: WeiyiGeek</span><br></pre></td></tr></table></figure></p>\n<p><strong>参考</strong></p>\n<ul>\n<li>查看案例：<a href=\"https://yaml.readthedocs.io/en/latest/example.html\" target=\"_blank\" rel=\"noopener\">https://yaml.readthedocs.io/en/latest/example.html</a></li>\n</ul>\n<h5 id=\"ini-配置\"><a href=\"#ini-配置\" class=\"headerlink\" title=\"ini 配置\"></a>ini 配置</h5><hr>\n\n<h4 id=\"文件备份\"><a href=\"#文件备份\" class=\"headerlink\" title=\"文件备份\"></a>文件备份</h4><p>描述：采用filecmp模块对进行确认备份目录与源目录文件是否保持一致，并且同步源目录文件到目标目录之中：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># @File : verity.py</span></span><br><span class=\"line\"><span class=\"comment\"># @CreateTime : 2019/7/26 14:23</span></span><br><span class=\"line\"><span class=\"comment\"># @Author : WeiyiGeek</span></span><br><span class=\"line\"><span class=\"comment\"># @Function : 同步校验源文件/目标文件</span></span><br><span class=\"line\"><span class=\"comment\"># @Software: PyCharm</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> os,sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> filecmp</span><br><span class=\"line\"><span class=\"keyword\">import</span> shutil</span><br><span class=\"line\"></span><br><span class=\"line\">holderlist = []</span><br><span class=\"line\">destination = []</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">compareme</span><span class=\"params\">(src, dest)</span>:</span></span><br><span class=\"line\">    dircomp = filecmp.dircmp(src, dest);</span><br><span class=\"line\">    onlyfile = dircomp.left_only    <span class=\"comment\">#源文件新目录或者文件</span></span><br><span class=\"line\">    difffile = dircomp.diff_files   <span class=\"comment\">#源目录中发生变化的文件（不匹配的文件）</span></span><br><span class=\"line\">    dirpath = os.path.abspath(src)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#将发生变量的文件路径写入到，采用lamba表达式</span></span><br><span class=\"line\">    [holderlist.append(os.path.abspath(os.path.join(src, x))) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> onlyfile]  <span class=\"comment\">#将源文件中创建的文件绝对路径存入数组中</span></span><br><span class=\"line\">    [holderlist.append(os.path.abspath(os.path.join(src, x))) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> difffile]  <span class=\"comment\">#将源文件中的发生改变的文件/目录绝对路径存入数组中</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#src / desc 两边都存在的文件(继续递归对比)</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> len(dircomp.common_dirs):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> dircomp.common_dirs:</span><br><span class=\"line\">            compareme(os.path.abspath(os.path.join(src, item)), os.path.abspath(os.path.join(dest, item)))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> holderlist</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">global</span> destination,\\</span><br><span class=\"line\">        holderlist</span><br><span class=\"line\">    <span class=\"keyword\">if</span> len (sys.argv) &gt; <span class=\"number\">2</span>:</span><br><span class=\"line\">        src = sys.argv[<span class=\"number\">1</span>]</span><br><span class=\"line\">        dest = sys.argv[<span class=\"number\">2</span>]</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">           Usage: verity.py srcDirectory destDirectory</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span>)</span><br><span class=\"line\">        sys.exit(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    source_files = compareme(src, dest)  <span class=\"comment\">#比较源目录与备份</span></span><br><span class=\"line\"></span><br><span class=\"line\">    dir1 = os.path.abspath(src)</span><br><span class=\"line\">    dir2 = os.path.abspath(dest)</span><br><span class=\"line\"></span><br><span class=\"line\">    createdir = <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#变量返回差异性文件 (替换路径后重新放入destination数组中为后面的zip做准备)</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> source_files:</span><br><span class=\"line\">        <span class=\"comment\">#获取源文件中的目录</span></span><br><span class=\"line\">        destination_dir = item.replace(dir1,dir2)</span><br><span class=\"line\">        destination.append(destination_dir)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">#创建目录(再目录不存在的情况下)</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> os.path.isdir(item):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> os.path.exists(destination_dir):</span><br><span class=\"line\">                os.makedirs(destination_dir)</span><br><span class=\"line\">                createdir = <span class=\"literal\">True</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#如果创建目录，重新遍历新创建的目录</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> createdir:</span><br><span class=\"line\">        destination = [] <span class=\"comment\">#防止重复</span></span><br><span class=\"line\">        srcfile = compareme(dir1,dir2)</span><br><span class=\"line\">        holderlist = srcfile</span><br><span class=\"line\">        <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> srcfile:</span><br><span class=\"line\">            destination.append(item.replace(dir1,dir2))</span><br><span class=\"line\"></span><br><span class=\"line\">    [ print(x) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> destination]</span><br><span class=\"line\"></span><br><span class=\"line\">    print(<span class=\"string\">\"update item\"</span>)</span><br><span class=\"line\">    copy_pair = zip(source_files, destination) <span class=\"comment\">#源/备份目录文件清单拆分成元组</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> copy_pair:      <span class=\"comment\">#判断文件复制操作</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> os.path.isfile(item[<span class=\"number\">0</span>]):</span><br><span class=\"line\">            shutil.copyfile(item[<span class=\"number\">0</span>],item[<span class=\"number\">1</span>])</span><br><span class=\"line\">        print(item)</span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/1/20190726160431.png\" alt=\"WeiyiGeek.filecmp文件目录校验\" title=\"\" class=\"\">\n                <p>WeiyiGeek.filecmp文件目录校验</p>\n            </figure></p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"自动化运维","path":"api/categories/自动化运维.json"},{"name":"运维基础","path":"api/categories/运维基础.json"}],"tags":[{"name":"Python","path":"api/tags/Python.json"}]}