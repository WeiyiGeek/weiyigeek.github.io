{"title":"1.Jenkins入门基础介绍与持续化集成部署","slug":"系统运维/自动化运维/CI-CD/Jenkins/1.Jenkins入门基础介绍与持续化集成部署","date":"2020-12-28T04:34:30.000Z","updated":"2023-01-31T02:29:10.467Z","url":"2020/12-28-513.html","path":"api/articles/2020/12-28-513.html.json","covers":["https://img.weiyigeek.top/2020/2/20201223223703.png","https://img.weiyigeek.top/2020/2/20201223224050.png","https://img.weiyigeek.top/2020/2/20201223224305.png","https://img.weiyigeek.top/2021/1/20210126172832.png","https://img.weiyigeek.top/2021/1/20210126173532.png","https://img.weiyigeek.top/2021/1/20210127092748.png","https://img.weiyigeek.top/2021/1/20210127094803.png","https://img.weiyigeek.top/2021/1/20210127100635.png","https://img.weiyigeek.top/2021/1/20210127142346.png","https://img.weiyigeek.top/2020/2/20201223225625.png","https://img.weiyigeek.top/2020/2/20201223230224.png","https://img.weiyigeek.top/2020/2/20201223230527.png","https://img.weiyigeek.top/2020/2/20201223231315.png","https://img.weiyigeek.top/2021/1/20210127145609.png","https://img.weiyigeek.top/2020/2/20201224093941.png","https://img.weiyigeek.top/2020/2/20201224094449.png","https://img.weiyigeek.top/2020/2/20201224101640.png","https://img.weiyigeek.top/2020/2/20201224100508.png","https://img.weiyigeek.top/2020/2/20201224125431.png","https://img.weiyigeek.top/2020/2/20201224131113.png","https://img.weiyigeek.top/2020/2/20201225100336.png","https://img.weiyigeek.top/2020/2/20201225101836.png","https://img.weiyigeek.top/2020/2/20201225103232.png","https://img.weiyigeek.top/2020/2/20201225105740.png","https://img.weiyigeek.top/2020/2/20201225214635.png","https://img.weiyigeek.top/2020/2/20201225213200.png","https://img.weiyigeek.top/2020/2/20201227095528.png","https://img.weiyigeek.top/2020/2/20201227100756.png","https://img.weiyigeek.top/2020/2/20210103122648.png","https://img.weiyigeek.top/2020/2/20210103124936.png","https://img.weiyigeek.top/2020/2/20210103130352.png","https://img.weiyigeek.top/2020/2/20210103131504.png","https://img.weiyigeek.top/2020/2/20210104230227.png","https://img.weiyigeek.top/2020/2/20210106214943.png","https://img.weiyigeek.top/2021/1/20210106220944.png","https://img.weiyigeek.top/2021/1/20210126165150.png","https://img.weiyigeek.top/2021/1/20210126170205.png","https://img.weiyigeek.top/2020/2/20210104233800.png","https://img.weiyigeek.top/2020/2/20210104234716.png","https://img.weiyigeek.top/2020/2/20210105002140.png","https://img.weiyigeek.top/2020/2/20210104223609.png","https://img.weiyigeek.top/2020/2/20210104223053.png","https://img.weiyigeek.top/2020/2/20201224104730.png","https://img.weiyigeek.top/2020/2/20201223222542.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h2 id=\"0x00-前言简述\"><a href=\"#0x00-前言简述\" class=\"headerlink\" title=\"0x00 前言简述\"></a>0x00 前言简述</h2><h3 id=\"Jenkins-介绍\"><a href=\"#Jenkins-介绍\" class=\"headerlink\" title=\"Jenkins 介绍\"></a>Jenkins 介绍</h3><p>Q: 什么是Jenkins?</p>\n<blockquote>\n<p>答: Jenkins 是一个开源持续集成的工具（<code>CI&amp;CD</code>）由Java开发而成, 用于自动化各种任务，包括构建、测试和部署软件(<code>自动化服务器</code>); Jenkins 支持各种运行方式，可通过系统包、Docker 或者 通过一个独立的Java程序;<br>官方介绍 : 全球领先的开源自动化服务器,Jenkins 提供了数以百计的插件来支持构建、部署和自动化任何项目<br>官方标语 : “Build great things at any scale”-“建造伟大的事情以任何规模”</p>\n</blockquote>\n<p>Tips ：个人理解 Jenkins 是一个调度平台，本身不需要处理任何事情，而是通过众多的插件来完成所有的工作;</p>\n<p><strong>Q: 为什么要用Jenkins?</strong></p>\n<blockquote>\n<p>答: Jenkins的前身是Hudson, 是基于Java开发的一种持续集成工具，用于监控秩序重复的工作, 它是可以将各个开源的软件进行集成的调度平台，例如( <code>Gitlab/SVN 、Maven、Sonarqube、Shell、钉钉通知、项目监控</code> )等；</p>\n</blockquote>\n<p><strong>Jenkins 发行线版本说明:</strong></p>\n<ul>\n<li>TLS 长期支持版本: 每12周从常规版本流中选择，作为该时间段的稳定版本。 每隔 4 周，我们会发布稳定版本，其中包括错误和安全修复反向移植。</li>\n<li>每周更新版本: 每周都会发布一个新版本，为用户和插件开发人员提供错误修复和功能。 </li>\n</ul>\n<p><br/></p>\n<h3 id=\"Jenkins-特性\"><a href=\"#Jenkins-特性\" class=\"headerlink\" title=\"Jenkins 特性\"></a>Jenkins 特性</h3><ul>\n<li>开源的java语言开发持续集成工具，支持CI，CD；</li>\n<li>易于安装部署配置：可通过yum安装,或下载war包以及通过docker容器等快速实现安装部署，可方便web界面配置管理；</li>\n<li>消息通知及测试报告：集成RSS/E-mail通过RSS发布构建结果或当构建完成时通过e-mail通知，生成JUnit/TestNG测试报告；</li>\n<li>分布式构建：支持Jenkins能够让多台计算机一起构建/测试；</li>\n<li>文件识别:Jenkins能够跟踪哪次构建生成哪些jar，哪次构建使用哪个版本的jar等；</li>\n<li>丰富的插件支持:支持扩展插件，你可以开发适合自己团队使用的工具，如git，svn，maven，docker</li>\n</ul>\n<p><br/></p>\n<h3 id=\"Jenkins-应用场景\"><a href=\"#Jenkins-应用场景\" class=\"headerlink\" title=\"Jenkins 应用场景\"></a>Jenkins 应用场景</h3><ul>\n<li>1) 创建一个项目，手动构建，完成简单任务，比如拉取代码进行编译（持续集成）。</li>\n<li>2) 编译失败通知用户</li>\n<li>3) 参数化构建</li>\n<li>4) 代码改动自动触发构建或者定时触发构建</li>\n<li>5) 一个项目构建完成后自动调用另一个项目的构建，完成一连串任务</li>\n<li>6) 并发构建</li>\n<li>7) 集群化部署开发（CI/CD）</li>\n</ul>\n<p><br/></p>\n<h3 id=\"Jenkins-Job-类型\"><a href=\"#Jenkins-Job-类型\" class=\"headerlink\" title=\"Jenkins Job 类型\"></a>Jenkins Job 类型</h3><ul>\n<li>1) Freestyle project : 自由风格项目，主要的项目类型</li>\n<li>2) Maven project : maven项目专有，类似freestyle，更简单</li>\n<li>3) Multiconfigration project : 多配置项目，适合大量不同配置（环境、平台等）构建</li>\n<li>4) Pipeline : 流水线项目，适合使用pipeline 插件功能构建流水线任务，或者使用freestyle project不容易实现的负责任务</li>\n<li>5) Multibranch pipeline : 多分支流水线项目，根据SCM仓库中的分支创建多个pipeline项目</li>\n</ul>\n<hr>\n<h2 id=\"0x01-安装配置\"><a href=\"#0x01-安装配置\" class=\"headerlink\" title=\"0x01 安装配置\"></a>0x01 安装配置</h2><p><strong>安装方式</strong><br>安装参考: <a href=\"https://www.jenkins.io/zh/doc/book/installing/\" target=\"_blank\" rel=\"noopener\">https://www.jenkins.io/zh/doc/book/installing/</a></p>\n<ul>\n<li>Windows（Jar 、War）、Linux（yum|rpm 、apt|dpkg）、Mac</li>\n<li>Docker</li>\n</ul>\n<p>PS : Jenkins通常作为一个独立的应用程序在其自己的流程中运行， 内置Java servlet 容器/应用程序服务器（Jetty）。</p>\n<p><strong>系统要求</strong><br>最低推荐配置:</p>\n<ul>\n<li>256MB 可用内存</li>\n<li>1GB 可用磁盘空间(作为一个Docker容器运行jenkins的话推荐10GB)</li>\n</ul>\n<p>小团队推荐的硬件配置:</p>\n<ul>\n<li>1 GB+ 可用内存</li>\n<li>50 GB+ 可用磁盘空间</li>\n</ul>\n<p>软件配置: Java 8—​无论是Java运行时环境（JRE）还是Java开发工具包（JDK）都可以</p>\n<p>Tips : 安装最低配置：不少于256M内存，不低于1G磁盘，JDK版本&gt;=8（openjdk也可以）。</p>\n<p>PS : Jenkins 依赖于 Java 环境, 如果是在不使用Docker安装Jenkins时就需要安装配置Java环境;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Jenkins 版本与 Java版本依赖关系</span></span><br><span class=\"line\">2.164 (2019-02) and newer: Java 8 or Java 11</span><br><span class=\"line\">2.54 (2017-04) and newer: Java 8</span><br><span class=\"line\">1.612 (2015-05) and newer: Java 7</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<h3 id=\"Ubuntu\"><a href=\"#Ubuntu\" class=\"headerlink\" title=\"Ubuntu\"></a>Ubuntu</h3><p>Jenkins的<code>Debian Package Repository</code>，以自动化安装和升级。要使用此存储库，请先将键添加到系统：<br>Jenkins Debian Packages：<a href=\"https://pkg.jenkins.io/debian-stable/\" target=\"_blank\" rel=\"noopener\">https://pkg.jenkins.io/debian-stable/</a></p>\n<p>官方安装:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 添加  gpg key</span></span><br><span class=\"line\">wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 /etc/apt/sources.list 中添加以下条目 deb https://pkg.jenkins.io/debian-stable binary/</span></span><br><span class=\"line\">sudo sh -c <span class=\"string\">'echo deb http://pkg.jenkins.io/debian-stable binary/ &gt; /etc/apt/sources.list.d/jenkins.list'</span></span><br><span class=\"line\"><span class=\"comment\"># 更新您的本地包索引，然后最终安装Jenkins：</span></span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install jenkins</span><br></pre></td></tr></table></figure></p>\n<p>国内安装:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Java 环境安装配置 jdk-8u211-linux-x64.tar.gz</span></span><br><span class=\"line\"><span class=\"comment\"># 下载地址: https://www.oracle.com/cn/java/technologies/javase-downloads.html</span></span><br><span class=\"line\">sudo mkdir /opt/app/ &amp;&amp; <span class=\"built_in\">cd</span> <span class=\"variable\">$_</span></span><br><span class=\"line\">tar -zxvf jdk-8u211-linux-x64.tar.gz -C /usr/<span class=\"built_in\">local</span>/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 环境变量设置（临时生效） set oracle jdk environment</span></span><br><span class=\"line\">ln -s /usr/<span class=\"built_in\">local</span>/jdk1.8.0_211/bin/java /usr/bin/java</span><br><span class=\"line\"><span class=\"built_in\">export</span> JAVA_HOME=/usr/<span class=\"built_in\">local</span>/jdk1.8.0_211 <span class=\"comment\">## 这里要注意目录要换成自己解压的jdk 目录</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> JRE_HOME=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/jre  </span><br><span class=\"line\"><span class=\"built_in\">export</span> CLASSPATH=.:<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/lib:<span class=\"variable\">$&#123;JRE_HOME&#125;</span>/lib  </span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/bin:<span class=\"variable\">$PATH</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 环境安装测试</span></span><br><span class=\"line\">root@jenkins:/usr/<span class=\"built_in\">local</span>/jdk1.8.0_211<span class=\"comment\"># java -version</span></span><br><span class=\"line\">  <span class=\"comment\"># java version \"1.8.0_211\"</span></span><br><span class=\"line\">  <span class=\"comment\"># Java(TM) SE Runtime Environment (build 1.8.0_211-b12)</span></span><br><span class=\"line\">  <span class=\"comment\"># Java HotSpot(TM) 64-Bit Server VM (build 25.211-b12, mixed mode)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Jenkins 下载&amp; 安装</span></span><br><span class=\"line\">sudo wget https://mirrors.aliyun.com/jenkins/debian-stable/jenkins_2.263.1_all.deb </span><br><span class=\"line\">sudo dpkg -i jenkins_2.263.1_all.deb</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更新站点配置 </span></span><br><span class=\"line\">sed -i <span class=\"string\">\"s#updates.jenkins.io#mirrors.tuna.tsinghua.edu.cn/jenkins/updates/#g\"</span> /var/lib/jenkins/hudson.model.UpdateCenter.xml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动 Jenkins 并查看状态</span></span><br><span class=\"line\">systemctl restart jenkins</span><br><span class=\"line\">systemctl status jenkins</span><br><span class=\"line\">  <span class=\"comment\"># ● jenkins.service - LSB: Start Jenkins at boot time</span></span><br><span class=\"line\">  <span class=\"comment\">#      Loaded: loaded (/etc/init.d/jenkins; generated)</span></span><br><span class=\"line\">  <span class=\"comment\">#      Active: active (exited) since Wed 2020-12-23 14:10:12 UTC; 6s ago</span></span><br><span class=\"line\">  <span class=\"comment\">#        Docs: man:systemd-sysv-generator(8)</span></span><br><span class=\"line\">  <span class=\"comment\">#     Process: 357567 ExecStart=/etc/init.d/jenkins start (code=exited, status=0/SUCCESS)</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>安装后设置向导:</strong><br>参考地址: <a href=\"https://www.jenkins.io/zh/doc/book/installing/#setup-wizard\" target=\"_blank\" rel=\"noopener\">https://www.jenkins.io/zh/doc/book/installing/#setup-wizard</a></p>\n<ul>\n<li>(1) 解锁 Jenkins<br>当您第一次访问新的Jenkins实例时，系统会要求您使用自动生成的密码对其进行解锁。<br>浏览到 <a href=\"http://localhost:8080（或安装时为Jenkins配置的任何端口），并等待解锁\">http://localhost:8080（或安装时为Jenkins配置的任何端口），并等待解锁</a> Jenkins 页面出现。</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Jenkins控制台日志显示可以获取密码的位置（在Jenkins主目录中）</span></span><br><span class=\"line\">cat /var/lib/jenkins/secrets/initialAdminPassword</span><br><span class=\"line\"><span class=\"comment\"># 23092528120a45488a73ff4e7565e06f</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>(2) 自定义jenkins插件<br>解锁 Jenkins之后，在 Customize Jenkins 页面内， 您可以安装任何数量的有用插件作为您初始步骤的一部分。<br>两个选项可以设置:<ul>\n<li>安装推荐的插件 - 安装推荐的一组插件，这些插件基于最常见的用例.</li>\n<li>选择插件来安装 - 选择安装的插件集。当你第一次访问插件选择页面时，默认选择建议的插件。(<code>新手首次搭建建议选择此项</code>)</li>\n</ul>\n</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20201223223703.png\" alt=\"WeiyiGeek.选择安装的插件\" title=\"\" class=\"\">\n                <p>WeiyiGeek.选择安装的插件</p>\n            </figure>\n<p>PS : 如果您不确定需要哪些插件，请选择<code>安装建议的插件</code> 。 您可以通过Jenkins中的<code>Manage Jenkins &gt; Manage Plugins</code>页面在稍后的时间点安装（或删除）其他Jenkins插件 。 </p>\n<ul>\n<li>(3) 不安装任何插件进入<code>插件列表</code>点击右上角的<code>x</code>关闭窗口,显示如下页面则跳过了管理员用户密码重设;</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20201223224050.png\" alt=\"WeiyiGeek.初始化成功页面\" title=\"\" class=\"\">\n                <p>WeiyiGeek.初始化成功页面</p>\n            </figure>\n<p>PS : 一旦初始安装完成后，可通过插件管理器安装其他插件</p>\n<ul>\n<li>(4) 进入 Jenkins 控制台安装成功，然后第一个管理员用户；<br>点击 Dashboard -&gt; admin -&gt; Configure -&gt; Password 进行管理员密码设置;<br>从这时起，Jenkins用户界面只能通过提供有效的用户名和密码凭证来访问。 </li>\n</ul>\n<p><img src=\"https://img.weiyigeek.top/2020/2/20201223224305.png\" alt=\"WeiyiGeek.Jenkins\"></p>\n<p><br></p>\n<p>Ubuntu 下 Jenkins 相关文件及其目录(目录结构)一览:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 配置文件</span></span><br><span class=\"line\">/etc/default/jenkins</span><br><span class=\"line\"><span class=\"comment\"># /etc/sysconfig/jenkins # CentOS</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 家目录&amp;插件目录&amp;构建工作目录</span></span><br><span class=\"line\">/var/lib/jenkins/</span><br><span class=\"line\">/var/lib/jenkins/config.xml  <span class=\"comment\"># jenkins root configuration</span></span><br><span class=\"line\">/var/lib/jenkins/userContent  <span class=\"comment\"># 该目录下的文件将在http://server/userContent/下提供</span></span><br><span class=\"line\">/var/lib/jenkins/plugins   <span class=\"comment\"># 插件</span></span><br><span class=\"line\">/var/lib/jenkins/logs      <span class=\"comment\"># 存放jenkins相关的日志</span></span><br><span class=\"line\">/var/lib/jenkins/fingerprints  <span class=\"comment\"># 存储指纹记录</span></span><br><span class=\"line\">/var/lib/jenkins/secrets   <span class=\"comment\"># 密码秘钥所在目录</span></span><br><span class=\"line\">/var/lib/jenkins/workspace <span class=\"comment\"># 各任务的构建工作目录</span></span><br><span class=\"line\">/var/lib/jenkins/<span class=\"built_in\">jobs</span>      <span class=\"comment\"># 浏览器上面创建的任务都会存放在这里</span></span><br><span class=\"line\">          +- [JOBNAME]          <span class=\"comment\"># 每个作业Job的子目录</span></span><br><span class=\"line\">              +- config.xml     <span class=\"comment\"># (job configuration file)</span></span><br><span class=\"line\">              +- workspace      <span class=\"comment\"># (working directory for the version control system)</span></span><br><span class=\"line\">              +- latest         <span class=\"comment\"># (symbolic link to the last successful build)</span></span><br><span class=\"line\">              +- builds</span><br><span class=\"line\">                +- [BUILD_ID]      <span class=\"comment\"># (for each build)</span></span><br><span class=\"line\">                  +- build.xml     <span class=\"comment\"># (build result summary)</span></span><br><span class=\"line\">                  +- <span class=\"built_in\">log</span>           <span class=\"comment\"># (log file)</span></span><br><span class=\"line\">                  +- changelog.xml  <span class=\"comment\"># (change log)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动文件 &#123;start|stop|status|restart|force-reload&#125;</span></span><br><span class=\"line\">/etc/init.d/jenkins</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># systemd 管理的serice</span></span><br><span class=\"line\">/run/systemd/generator.late/jenkins.service</span><br><span class=\"line\">/run/systemd/generator.late/graphical.target.wants/jenkins.service</span><br><span class=\"line\">/run/systemd/generator.late/multi-user.target.wants/jenkins.service</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>文件内容&amp;目录结构详细说明</strong></p>\n<ul>\n<li><p>1.config.xml 核心配置文件: 包含了Jenkins的版本信息、权限认证规则、workspace目录定义、builds目录定义、视图信息等等。其他的 xml 文件是 Jekins 服务扩展功能的配置信息文件。</p>\n</li>\n<li><p>2.plugins 插件目录: 已经安装的Jenkins插件都可以在里面找到对应的文件。每一个插件基本是由一个目录和一个与目录同名的文件配对组成。</p>\n</li>\n<li><p>3.jobs 执行任务存储目录: 该目录是 Jenkins 管理的所有<code>构建任务的配置细节、构建后的产物和数据</code>。Jenkins 服务所有的 Job 都会在这个目录下，创建一个以 Job 名称命名的文件夹。<br>job 任务的文件夹中存储的文件有：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">config.xml 任务的XML格式声明信息。</span><br><span class=\"line\">nextBuildNumber 文件记录下次构建时的 buildNumber</span><br><span class=\"line\">builds 目录存储此 Job 构建的历史。</span><br><span class=\"line\"></span><br><span class=\"line\">~ $ ls &#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;jobs&#x2F;</span><br><span class=\"line\">HelloWorld  Kubernetes-jenkins-slave  pineline-use-node</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>4.workspace 工作空间目录: 包含了这个构建作业的源代码, Jenkins存放项目的工作空间。进入这个workspace目录，里面就是你之前创建的项目的目录。在构建过程中Jenkins会根据项目中配置的远程代码仓库的地址去拉取源码到项目目录中并在这里完成打包。之前我们在打包的脚本中用到的<code>$WORKSPACE</code>表示的就是workspace下对应项目的目录。</p>\n</li>\n</ul>\n<ul>\n<li>5.tools 工具目录: Jenkins 服务设置安装 tools ，会安装在这个目录中。安装工具的方式是：【Manage Jenkins】 -&gt; 【Global Tool Configuration】 页面。</li>\n</ul>\n<ul>\n<li><p>6.updates 更新目录: 用来存放可用的插件更新。</p>\n</li>\n<li><p>7.users 用户信息目录: 存储用户的账号信息。</p>\n</li>\n<li><p>8.nodes 节点目录: Jenkins 在配置了主从或者工作节点之后会在这里有相应的信息。</p>\n</li>\n<li><p>9.userContent 用户生成的文件: 用于存储在 Jenkins 管理过程中生成的文件；比如使用<code>Convert To Pipeline 插件</code>可以将 JOB 转换成 Pipeline，生成的 Pipeline 的内容会以文件的形式存储在这个文件夹中。</p>\n</li>\n<li><p>10.fingerprints 文件指纹目录: <code>文件指纹（fingerprints）</code>是一个简单的MD5校验和。Jenkins维护了一个md5sum数据库，用于文件指纹校验。对于每个md5sum，Jenkins记录了哪些项目的哪些构建使用了他。在每次构建运行和文件被采集指纹时这个数据库会更新。为了避免过多的磁盘使用，Jenkins不存储实际的文件。相反它只存储md5sum和它的使用记录。</p>\n</li>\n<li><p>11.logs 日志目录: 用于存储 Jenkins 服务的日志，主要是事件日志和工作日志。</p>\n</li>\n<li><p>12.war 目录: 如果是以WAR包形式运行的Jenkins，该目录下存放的是解压后的WAR包。</p>\n</li>\n<li><p>13.Jenkins 服务另外的文件目录:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">secrets</span><br><span class=\"line\">init.groovy.d</span><br><span class=\"line\">workflow-libs</span><br><span class=\"line\">scriptler</span><br><span class=\"line\">config-history</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>Tips: jenkins存放数据不依靠数据库所以在移植时只需要拷贝整个程序主目录即可，需要注意的是jobs和plugins目录比较重要</p>\n<p><br></p>\n<h3 id=\"Docker-安装\"><a href=\"#Docker-安装\" class=\"headerlink\" title=\"Docker 安装\"></a>Docker 安装</h3><p>描述: 使用容器化的方式部署 Jenkins Master 节点，可以选择自行构建镜像，推荐使用 Jenkins 官方提供的镜像。</p>\n<p>Jenkins 服务官方在 dockerhub 平台发布官方镜像<a href=\"https://hub.docker.com/u/jenkins\" target=\"_blank\" rel=\"noopener\">https://hub.docker.com/u/jenkins</a></p>\n<p><strong>1.Jenkins Master 镜像基础使用</strong></p>\n<ul>\n<li>Jenkins Web 服务监听的端口为 8080</li>\n<li>Jenkins 使用JNLP 连接 Agent 节点使用的端口为 5000</li>\n<li>Jenkins 在 /var/jenkins_home 目录中保存workspace中的数据，包括插件和配置信息</li>\n<li>Jenkins 服务默认使用jenkins 用户运行，uid为1000；请注意文件权限问题</li>\n</ul>\n<p><br></p>\n<p><strong>2.Jenkins Master 使用和升级</strong><br>使用 Jenkins 的镜像构建容器时，至少要将端口映射出去，将/var/jenkins_home 目录做持久化。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 示例：用 jenkins：2.107.3 创建容器并运行。</span></span><br><span class=\"line\">docker volume create jenkins-data</span><br><span class=\"line\">docker run --name jenkins-production \\</span><br><span class=\"line\">           --detach \\</span><br><span class=\"line\">           -p 50000:50000 \\</span><br><span class=\"line\">           -p 8080:8080 \\</span><br><span class=\"line\">           -v jenkins-data:/var/jenkins_home \\</span><br><span class=\"line\">           jenkins/jenkins:2.275-alpine</span><br><span class=\"line\"><span class=\"comment\"># If run for the first time, just run the following to get the admin</span></span><br><span class=\"line\"><span class=\"comment\"># password once it has finished starting</span></span><br><span class=\"line\">docker <span class=\"built_in\">exec</span> jenkins-production bash -c <span class=\"string\">'cat $JENKINS_HOME/secrets/initialAdminPassword'</span></span><br></pre></td></tr></table></figure></p>\n<p>在需要对 Jenkins 服务升级时，只需要使用新的镜像替换即可；持久化存储和端口映射操作相同。<br>示例：将 Jenkins 服务升级到 2.121.3<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker stop jenkins-production</span><br><span class=\"line\">docker rm jenkins-production </span><br><span class=\"line\"><span class=\"comment\"># just temporarily docker rename it instead if that makes you worried</span></span><br><span class=\"line\">docker run --name jenkins-production \\</span><br><span class=\"line\">           --detach \\</span><br><span class=\"line\">           -p 50000:50000 \\</span><br><span class=\"line\">           -p 8080:8080 \\</span><br><span class=\"line\">           -v jenkins-data:/var/jenkins_home \\</span><br><span class=\"line\">           jenkins/jenkins:2.277-alpine</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>3.Jenkins Master 节点配置扩展(了解即可)</strong></p>\n<ul>\n<li><p>3.1 设置Master 节点的执行者 executors 数量<br>描述: 使用groovy脚本指定并设置Jenkins Master 实例的执行程序数。默认情况下，它设置为2个执行者，但是您可以扩展映像并将其更改为所需的执行者数:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">executors.groovy</span><br><span class=\"line\">import jenkins.model.*</span><br><span class=\"line\">Jenkins.instance.setNumExecutors(5)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 和 Dockerfile</span></span><br><span class=\"line\"></span><br><span class=\"line\">FROM jenkins/jenkins:lts</span><br><span class=\"line\">COPY executors.groovy /usr/share/jenkins/ref/init.groovy.d/executors.groovy</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>3.2 传递 JVM 的启动参数<br>描述: 您可能需要自定义运行Jenkins的 JVM，通常是为了传递系统属性（props列表）或调整堆内存设置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 使用JAVA_OPTS环境变量：</span></span><br><span class=\"line\">docker run --name myjenkins -p 8080:8080 -p 50000:50000 --env JAVA_OPTS=-Dhudson.footerURL=http://mycompany.com jenkins/jenkins:lts</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>3.3 给 Jenkins 启动器传递参数<br>描述: 您传递给运行 Jenkins 镜像的 docker 的参数将传递给 jenkins 启动器 ，例如运行 <code>docker run jenkins/jenkins:lts --version</code> 将显示Jenkins版本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 通过定义Jenkins参数 JENKINS_OPTS</span></span><br><span class=\"line\">示例1.Dockerfile使用此选项来强制将HTTPS与映像中包含的证书一起使用。</span><br><span class=\"line\">FROM jenkins/jenkins:lts</span><br><span class=\"line\">COPY https.pem /var/lib/jenkins/cert</span><br><span class=\"line\">COPY https.key /var/lib/jenkins/pk</span><br><span class=\"line\">ENV JENKINS_OPTS --httpPort=-1 --httpsPort=8083 --httpsCertificate=/var/lib/jenkins/cert --httpsPrivateKey=/var/lib/jenkins/pk</span><br><span class=\"line\">EXPOSE 8083</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 通过定义Jenkins参数 JENKINS_SLAVE_AGENT_PORT</span></span><br><span class=\"line\">示例2.Dockerfile中定义来更改jenkins的默认从属代理端口。</span><br><span class=\"line\">FROM jenkins/jenkins:lts</span><br><span class=\"line\">ENV JENKINS_SLAVE_AGENT_PORT 50001</span><br><span class=\"line\"><span class=\"comment\"># 或作为docker的参数</span></span><br><span class=\"line\">docker run --name myjenkins -p 8080:8080 -p 50001:50001 --env JENKINS_SLAVE_AGENT_PORT=50001 jenkins/jenkins:lts</span><br></pre></td></tr></table></figure>\n<p>Tips ：此环境变量将用于设置将系统属性添加<code>jenkins.model.Jenkins.slaveAgentPort</code>到JAVA_OPTS的端口 。</p>\n</li>\n<li><p>3.4 配置日志记录<br>描述: 可以通过属性文件和<code>java.util.logging.config.fileJava</code>属性来配置Jenkins日志记录。例如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir data</span><br><span class=\"line\"></span><br><span class=\"line\">cat &gt; data/log.properties &lt;&lt;EOF</span><br><span class=\"line\">handlers=java.util.logging.ConsoleHandler</span><br><span class=\"line\">jenkins.level=FINEST</span><br><span class=\"line\">java.util.logging.ConsoleHandler.level=FINEST</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">docker run --name myjenkins -p 8080:8080 -p 50000:50000 \\</span><br><span class=\"line\">--env JAVA_OPTS=<span class=\"string\">\"-Djava.util.logging.config.file=/var/jenkins_home/log.properties\"</span>\\</span><br><span class=\"line\"> - v `<span class=\"built_in\">pwd</span>`/data:/var/jenkins_home jenkins/jenkins:lts</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>3.5 调整Jenkins 浏览器访问的路径path<br>描述: 如果您需要在浏览器中访问 Jenkins 服务时要添加一个 path 路径，则需要添加环境变量<code>JENKINS_OPTS=&quot;--prefix=/jenkins&quot;</code>。</p>\n</li>\n</ul>\n<p><br></p>\n<p>Tips : 容器中 Docker 客户端配置</p>\n<ul>\n<li><p>1.构建 NodeJS 任务执行镜像的 Dockerfile 文件内容:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FROM docker.io/node:alpine</span><br><span class=\"line\">run apk add --no-cache git docker-cli</span><br><span class=\"line\">RUN yarn config <span class=\"built_in\">set</span> registry <span class=\"string\">\"https://registry.npmmirror.com\"</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>2.配置 Docker 客户端连接远程的 Docker 服务端:使用一个环境变量就可以实现这个配置。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">env:</span><br><span class=\"line\">- name: DOCKER_HOST</span><br><span class=\"line\">  value: tcp:&#x2F;&#x2F;docker.example.com:2375</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>Tips : 配置镜像仓库的认证信息,认证信息一般存储在 <code>/root/.docker/config.json</code> 文件中。这里可以模仿前面 Maven 服务的 settings.xml 文件的配置方式配置, 然后就可以实现了连接 Docker Server 端构建镜像，对镜像打 tag 的操作, 然后将制作好的镜像推送到远程的镜像仓库中，例如Harbor。</p>\n<p><br></p>\n<h3 id=\"Kubernetes-安装\"><a href=\"#Kubernetes-安装\" class=\"headerlink\" title=\"Kubernetes 安装\"></a>Kubernetes 安装</h3><p>请参考后续的 <code>&lt;(2) 集群搭建Jenkins Master 节点&gt;</code> 章节的文章。</p>\n<hr>\n<h2 id=\"0x02-基础知识\"><a href=\"#0x02-基础知识\" class=\"headerlink\" title=\"0x02 基础知识\"></a>0x02 基础知识</h2><h3 id=\"Jenkins-环境变量\"><a href=\"#Jenkins-环境变量\" class=\"headerlink\" title=\"Jenkins 环境变量\"></a>Jenkins 环境变量</h3><p>描述: 环境变量可以被看作是pipeline与Jenkins交互的媒介, 环境变量可以分为<code>Jenkins内置变量</code>和<code>自定义变量</code>以及<code>自定义全局环境变量</code>。</p>\n<p>比如，可以在 pipeline 中通过 BUILD_NUMBER 变量知道构建任务的当前构建次数。</p>\n<p><strong>1.内置变量</strong><br>描述: 在pipeline执行时，Jenkins通过一个名为 env 的全局变量，将Jenkins内置环境变量暴露出来。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$&#123;env.BUILD_NUMBER&#125;</span> 方式一，推荐使用</span><br><span class=\"line\"><span class=\"variable\">$env</span>.BUILD_NUMBER 方式二,</span><br><span class=\"line\"><span class=\"variable\">$&#123;BUILD_NUMBER&#125;</span> 方式三，不推荐使用</span><br></pre></td></tr></table></figure></p>\n<p>例如:在实际工作中经常用到的变量。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BUILD_URL：当前构建的页面URL。</span><br><span class=\"line\">BUILD_NUMBER：构建号，累加的数字。</span><br><span class=\"line\">BRANCH_NAME：多分支pipeline项目支持。</span><br><span class=\"line\">GIT_BRANCH：通过git拉取的源码构建的项目才会有此变量。</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>2.自定义环境变量</strong><br>描述: 当 pipeline 变得复杂时，我们就会有定义自己的环境变量的需求。声明式 pipeline 提供了environment 指令，方便自定义变量。</p>\n<p>另外 environment 指令可以在pipeline中定义，代表变量作用域为整个 pipeline；也可以在 stage 中定义，代表变量只在该阶段有效。</p>\n<p>Tips : 如果在environment中定义的变量与env中的变量重名，那么被重名的变量的值会被覆盖掉。</p>\n<p><br></p>\n<p><strong>3.自定义全局环境变量</strong><br>描述: 如果我们需要定义一些全局的跨pipeline的自定义变量。</p>\n<p>我们可以进入 <code>Manage Jenkins→Configure System→Global properties</code> 页，勾选<code>“Environment variables”复选框</code>，单击“Add”按钮，在输入框中输入变量名和变量值即可，</p>\n<p>Tips : 自定义全局环境变量会被加入 env 属性列表中，所以，使用自定义全局环境变量与使用Jenkins内置变量的方法无异。</p>\n<p>Tips : Jenkins 内置变量参考 请看补充说明中的内置环境变量</p>\n<p><br/></p>\n<h3 id=\"Jenkins-参数构建类型\"><a href=\"#Jenkins-参数构建类型\" class=\"headerlink\" title=\"Jenkins 参数构建类型\"></a>Jenkins 参数构建类型</h3><p>主要缺省参数类型如下几类:</p>\n<ul>\n<li>Boolean 参数</li>\n<li>Choice 参数  (常用)</li>\n<li>String 参数 （常用）</li>\n<li>File 参数</li>\n<li>密码 参数</li>\n<li>凭据 参数</li>\n<li>其他 参数</li>\n<li>运行时 参数</li>\n</ul>\n<p>额外的我们需要安装Extended Choice Parameter 和 git Parameter，以便向 Choice 参数添加扩展功能 以及 使用Git参数来获取分支。</p>\n<p><strong>使用过程</strong><br>在参数化构建过程 -&gt; 构建参数添加 -&gt; 构建参数的变量 -&gt;通过 <code>$paramater 或者 ${paramater}</code>的形式使用</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/1/20210126172832.png\" alt=\"WeiyiGeek.构建参数\" title=\"\" class=\"\">\n                <p>WeiyiGeek.构建参数</p>\n            </figure>\n<p>Tips ： 环境变量生效的顺序<code>全局环境变量 &lt; slave配置环境变量 &lt; JOB参数 &lt; JOB injected环境变量</code></p>\n<p>官网地址: <a href=\"https://www.jenkins.io/\" target=\"_blank\" rel=\"noopener\">https://www.jenkins.io/</a><br>官方文档: <a href=\"https://www.jenkins.io/zh/doc/\" target=\"_blank\" rel=\"noopener\">https://www.jenkins.io/zh/doc/</a></p>\n<p><br></p>\n<h3 id=\"Jenkins-并发构建\"><a href=\"#Jenkins-并发构建\" class=\"headerlink\" title=\"Jenkins 并发构建\"></a>Jenkins 并发构建</h3><p>描述: 我们创建Job可以进行并发构建，每个并发构建使用单独的workspace，默认是<code>&lt;workspace path&gt;@&lt;num&gt;</code></p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/1/20210126173532.png\" alt=\"WeiyiGeek.并发构建\" title=\"\" class=\"\">\n                <p>WeiyiGeek.并发构建</p>\n            </figure>\n<p>Tips : slave 也可以进行并发构建前提是需要<code>Node and Label parameter plugin</code>插件，并且需要配置node类型参数;</p>\n<p><br></p>\n<h3 id=\"Jenkins-自动化构建\"><a href=\"#Jenkins-自动化构建\" class=\"headerlink\" title=\"Jenkins 自动化构建\"></a>Jenkins 自动化构建</h3><p><strong>常见的triggers几种:</strong></p>\n<ul>\n<li>Build periodically : 设定类似cron周期性时间触发构建</li>\n<li>poll SCM : 设定类似 cron 周期性时间触发检查代码变化，只有代码变动时才触发构建</li>\n<li>Hooks : 用过SVN的都知道钩子 <code>Github hooks / Gitlab hooks</code></li>\n<li>Events : Gerrit event</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/1/20210127092748.png\" alt=\"WeiyiGeek.triggers\" title=\"\" class=\"\">\n                <p>WeiyiGeek.triggers</p>\n            </figure>\n<p><strong>build periodically</strong><br>描述: H 代表 jenkins 自己分配时间不去指定客观时间, 注意一般都是Jenkins根据监控资源利用率算法分配的。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># * * * * *</span></span><br><span class=\"line\"><span class=\"comment\"># 第一颗*表示分钟，取值0~59</span></span><br><span class=\"line\"><span class=\"comment\"># 第二颗*表示小时，取值0~23</span></span><br><span class=\"line\"><span class=\"comment\"># 第三颗*表示一个月的第几天，取值1~31</span></span><br><span class=\"line\"><span class=\"comment\"># 第四颗*表示第几月，取值1~12</span></span><br><span class=\"line\"><span class=\"comment\"># 第五颗*表示一周中的第几天，取值0~7，其中0和7代表的都是周日</span></span><br><span class=\"line\"></span><br><span class=\"line\">1.每30分钟构建一次：H/30 * * * *</span><br><span class=\"line\"></span><br><span class=\"line\">2.每2个小时构建一次 H H/2 * * *</span><br><span class=\"line\"></span><br><span class=\"line\">3.每天早上8点构建一次: 0 8 * * *</span><br><span class=\"line\"></span><br><span class=\"line\">4.每天的8点，12点，22点，一天构建3次 0 8,12,22 * * *</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 多个时间点，中间用逗号隔开</span></span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p><strong>Poll SCM</strong><br>描述: 他会定时检查源码变更（根据SCM软件的版本号），如果有更新就checkout最新code下来然后执行构建动作；</p>\n<p>比如: 你可以如果我想每隔30分钟检查一次源码变化有变化就执行;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">H/30 * * * *</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<h3 id=\"Jenkins-上下游构建\"><a href=\"#Jenkins-上下游构建\" class=\"headerlink\" title=\"Jenkins 上下游构建\"></a>Jenkins 上下游构建</h3><p>触发下游构建：</p>\n<ul>\n<li>1) 其他项目构建后触发: “Build other projects” under “Post build actions” -&gt; 输入项目名称</li>\n<li>2) 利用 Parameterized Trigger 插件 参数化构建 -&gt; 在构建后操作步骤中 -&gt; <code>Trigger Parameterized build on other peoject</code> -&gt; <code>Restrict matrix execuson to a subset</code></li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/1/20210127094803.png\" alt=\"WeiyiGeek.上下游构建\" title=\"\" class=\"\">\n                <p>WeiyiGeek.上下游构建</p>\n            </figure>\n<p><br/></p>\n<h3 id=\"Jenkins-调用API\"><a href=\"#Jenkins-调用API\" class=\"headerlink\" title=\"Jenkins 调用API\"></a>Jenkins 调用API</h3><p>描述: Jenkins 服务提供了很多类型的API；因为工作需要这里只记录一下执行job的API使用CURL调用的方式。</p>\n<p><strong>Jenkins API 介绍</strong></p>\n<ul>\n<li><p>1.Jenkins API 从级别上分类</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* 站点 API：创建Job、复制Job、Build 队列、重启Jenkins等</span><br><span class=\"line\">* Job API：修改Job、删除Job、获取 Build 信息、Build Job、禁用Job、启用Job</span><br><span class=\"line\">* Build Job: 根据 Build Number 获取Build 信息，获取Build 控制台的输出日志</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>2.传输数据格式: POST 传输数据支持的格式有<code>XML,JSON,PYTHON</code></p>\n</li>\n<li><p>3.安全处理: 可以找到一些开发语言编写的API封装包，结合到自己的脚本中，提高开发效率。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* CSRF 跨域攻击保护：可以在全局安全中设置。</span><br><span class=\"line\">* 用户验证设置：可以使用用户的密码，也可以为用户创建token。</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><strong>CURL 调用 API 执行 Job 实例:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Curl Api 调用</span></span><br><span class=\"line\">CURL -X POST <span class=\"variable\">$&#123;JOB_URI&#125;</span> </span><br><span class=\"line\">--user <span class=\"variable\">$&#123;user_name&#125;</span>:<span class=\"variable\">$&#123;user_password&#125;</span>|<span class=\"variable\">$&#123;user_token&#125;</span> </span><br><span class=\"line\">--data-urlencode json=<span class=\"string\">\"&#123;\\\"parameter\\\":<span class=\"variable\">$&#123;JSON_DATA&#125;</span>,\\\"statusCode\\\":\\\"303\\\",\\\"redirectTo\\\":\\\".\\\"&#125;\"</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>参数解析:</strong></p>\n<ul>\n<li>JOB_URL: 就是Job 的访问URL地址。在Job 页面中点击<code>”Build with Parameters”</code>就可以获取到地址。一般以”build?delay=0sec“结尾; 示例: <code>http://192.168.1.1/job/HelloWorld/build?delay=0sec</code></li>\n<li>user_name,user_password,user_token 用户验证信息</li>\n<li>JSON_DATA：Job 运行时，需要传递的参数，由Json 结构封装；示例：<code>[{\\&quot;name\\&quot;:\\&quot;branchName\\&quot;,\\&quot;value\\&quot;:\\&quot;origin/dev\\&quot;},{\\&quot;name\\&quot;:\\&quot;projectName\\&quot;,\\&quot;value\\&quot;:\\&quot;helloworld\\&quot;}]</code></li>\n</ul>\n<p><br/></p>\n<hr>\n<h2 id=\"0x03-基础配置\"><a href=\"#0x03-基础配置\" class=\"headerlink\" title=\"0x03 基础配置\"></a>0x03 基础配置</h2><h3 id=\"视图管理\"><a href=\"#视图管理\" class=\"headerlink\" title=\"视图管理\"></a>视图管理</h3><p>描述: 当Job创建数量达到一定时我们需要在Jenkins中建立视图（分类）,可以帮助我们快速找到某个所需Job;<br>实际上Job的视图类似于我们电脑上的文件夹可以通过一些过滤规则，将已经创建好的Job过滤到视图之中,也可以在视图中直接创建我们的Job;</p>\n<p>我们可以采用<code>View</code>或者<code>directory</code>文件两种方式进行管理:</p>\n<ul>\n<li>views - 视图方式<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">views视图更加灵活，不改变job的路径</span><br><span class=\"line\">views有多种形式、层级、看板，流水线等多样化</span><br></pre></td></tr></table></figure></li>\n<li>directory - 文件夹方式 (名称空间隔离)<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">文件夹适合多个团队共用Jenkins</span><br><span class=\"line\">性能更好，执行速度更快</span><br><span class=\"line\">支持RBAC权限管理</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>两则异同说明: 文件夹创建一个可以嵌套存储的容器利用它可以进行分组，<code>而视图仅仅是一个过滤器，其次文件夹则是一个独立的命名空间</code>，因此你可以有多个相同名称的的内容，只要它们在不同的文件夹里即可。</p>\n<p><br></p>\n<p><strong>views - 视图方式</strong><br>创建流程：</p>\n<ul>\n<li><p>Step 1.我的视图 -&gt; 点击所有旁边 + 号 -&gt; 设置视图名称 -&gt; 选择三种类型<code>列表视图/包括全局视图/我的视图</code><br>列表视图 : 显示简单列表。你可以从中选择任务来显示在某个视图中<br>包括全局视图 : Shows the content of a global view.<br>我的视图 : 该视图自动显示当前用户有权限访问的任务</p>\n</li>\n<li><p>Step 2.此处设置列表视图为例 -&gt; 选择任务列表 -&gt; 增加或者删除指定显示列</p>\n</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/1/20210127100635.png\" alt=\"WeiyiGeek.views\" title=\"\" class=\"\">\n                <p>WeiyiGeek.views</p>\n            </figure>\n<p><br/></p>\n<p><strong>directory - 文件夹方式</strong><br>创建流程:</p>\n<ul>\n<li>Step 1.创建Job -&gt; 选择<code>文件夹</code> -&gt; 输入任务名称<code>directory-test</code></li>\n<li>Step 2.在<code>directory-test</code>文件夹下 -&gt; 可以继续创建视图<code>(+ )</code> -&gt; 选择(<code>列表视图/包括全局视图/我的视图</code>)</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/1/20210127142346.png\" alt=\"WeiyiGeek.directory\" title=\"\" class=\"\">\n                <p>WeiyiGeek.directory</p>\n            </figure>\n<p><br/></p>\n<h3 id=\"插件管理\"><a href=\"#插件管理\" class=\"headerlink\" title=\"插件管理\"></a>插件管理</h3><p><strong>(1) 插件安装加速</strong><br>Q: 在安装插件时如何进行配置安装加速?</p>\n<blockquote>\n<p>答: 选择国内清华大学的Jenkins插件更新源 <code>https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</code></p>\n</blockquote>\n<p>配置位置:  <code>Dashboard &gt; Plugin Manager &gt; Advanced &gt; Update Site</code></p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20201223225625.png\" alt=\"WeiyiGeek.插件安装加速\" title=\"\" class=\"\">\n                <p>WeiyiGeek.插件安装加速</p>\n            </figure>\n<p><br/></p>\n<p><strong>（2）插件安装的几种方式</strong></p>\n<ul>\n<li>Step 1.采用插件更新源搜索进行在线安装，例如下面对Jenkins进行汉化插件的安装, 搜索 <code>Localization: Chinese (Simplified)</code> 插件安装即可;<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20201223230224.png\" alt=\"WeiyiGeek.Jenkins 汉化插件安装\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Jenkins 汉化插件安装</p>\n            </figure>\n</li>\n</ul>\n<p>当安装插件安装完成时候可以选择重启 Jenkins 或 跳转到首页, 此处我重启 Jenkins 如下图所示汉化成功;</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20201223230527.png\" alt=\"WeiyiGeek.Jenkins 汉化界面\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Jenkins 汉化界面</p>\n            </figure>\n<ul>\n<li>Step 2.通过Web页面上传.hpi文件进行插件安装<br>清华大学 jenkins 插件下载: <a href=\"https://mirrors.tuna.tsinghua.edu.cn/jenkins/plugins/\" target=\"_blank\" rel=\"noopener\">https://mirrors.tuna.tsinghua.edu.cn/jenkins/plugins/</a><br>例如下面进行 <a href=\"https://mirrors.tuna.tsinghua.edu.cn/jenkins/plugins/git/4.5.0/git.hpi\" target=\"_blank\" rel=\"noopener\">git 插件下载</a> 进行上传其 <code>git.hpi</code> 文件进行插件安装，之后上传即可;</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20201223231315.png\" alt=\"WeiyiGeek.Jenkins git 插件安装\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Jenkins git 插件安装</p>\n            </figure>\n<ul>\n<li>Step 3.导入之前服务器已安装的插件进行离线安装；<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) Jenkins 已安装的插件目录</span></span><br><span class=\"line\">/var/lib/jenkins/plugins$ ls</span><br><span class=\"line\">  <span class=\"comment\"># apache-httpcomponents-client-4-api      display-url-api      jdk-tool                  localization-zh-cn      script-security      trilead-api</span></span><br><span class=\"line\">  <span class=\"comment\"># apache-httpcomponents-client-4-api.jpi  display-url-api.jpi  jdk-tool.jpi              localization-zh-cn.jpi  script-security.jpi  trilead-api.jpi</span></span><br><span class=\"line\">  <span class=\"comment\"># command-launcher                        git                  jsch                      mailer                  ssh-credentials      workflow-scm-step</span></span><br><span class=\"line\">  <span class=\"comment\"># command-launcher.jpi                    git-client           jsch.jpi                  mailer.jpi              ssh-credentials.jpi  workflow-scm-step.jpi</span></span><br><span class=\"line\">  <span class=\"comment\"># credentials                             git-client.jpi       localization-support      scm-api                 structs              workflow-step-api</span></span><br><span class=\"line\">  <span class=\"comment\"># credentials.jpi                         git.jpi              localization-support.jpi  scm-api.jpi             structs.jpi          workflow-step-api.jpi</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 打包插件目录并上传到另外一台同版本的Jenkins服务器(PS:不同版本间可能会出现插件不兼容的情况) </span></span><br><span class=\"line\">tar -zcvf jenkins_2.263.1_plugins.tar.gz /var/lib/jenkins/plugins</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (3) 解压插件目录并进行所属者组修改</span></span><br><span class=\"line\">tar -zxvf jenkins_2.263.1_plugins.tar.gz </span><br><span class=\"line\">chown -R jenkins:jenkins /var/lib/jenkins/plugins</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (4) 启动 Jenkins 服务</span></span><br><span class=\"line\">systemctl stop jenkins</span><br><span class=\"line\">systemctl start jenkins</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (5) 启动 日志 查看</span></span><br><span class=\"line\">tail -f /var/<span class=\"built_in\">log</span>/jenkins/jenkins.log</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br/></p>\n<h3 id=\"权限管理\"><a href=\"#权限管理\" class=\"headerlink\" title=\"权限管理\"></a>权限管理</h3><p>描述: 由于<code>jenkins</code>默认的权限管理体系不支持用户组或角色的配置，因此需要安装第三发插件来支持角色的配置，我们使用<code>Role-based Authorization Strategy</code>插件，安装请参考前面插件管理章节。</p>\n<p>插件功能特点:</p>\n<ul>\n<li>按角色分权限</li>\n<li>按项目分权限</li>\n</ul>\n<p><br/></p>\n<ul>\n<li><p>Step 1.插件安装后我们先启用该插件管理Jenkins权限 -&gt; 面板 -&gt; 全局安全配置（<code>Global Security</code>）-&gt; 授权策略 -&gt; 找到并选中 <code>Role-Based Strategy</code> -&gt; 然后应用保存 。</p>\n</li>\n<li><p>Step 2.管理Jenkins -&gt; 安全 -&gt; <code>Manage and Assign Roles</code> -&gt; 可以进行角色权限管理与分配 -&gt; 此处添加一个test角色并设置其权限 -&gt; 应用 -&gt; 保存;<br>·</p>\n</li>\n<li>Step 3.Assign Roles -&gt; Global roles(按角色)、Item roles(按项目)、Node roles(按节点) -&gt; 用户添加(同时您需要在Jenkins用户中新增一个该用户) -&gt; 保存应用<ul>\n<li>添加用户和组。默认情况下用户/组名是区分大小写的，因此它需要与您在<code>Configure Global Security-&gt;Access Control-&gt;Security Realm</code>下的用户/组定义匹配。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/1/20210127145609.png\" alt=\"WeiyiGeek.jenkins权限管理\" title=\"\" class=\"\">\n                <p>WeiyiGeek.jenkins权限管理</p>\n            </figure>\n<p><br/></p>\n<h3 id=\"构建工具管理\"><a href=\"#构建工具管理\" class=\"headerlink\" title=\"构建工具管理\"></a>构建工具管理</h3><p>在 Jenkins 服务中运行 Pipeline 等任务过程中，需要依赖一些工具（环境需求）；比如 JDK,MAVEN或者golang 或者 python 环境。</p>\n<p>构建工具的安装方式有三种:</p>\n<ul>\n<li><p>1) 自行安装工具: 即自行在服务器上安装配置，然后在 Jenkins 服务中配置好这些工具的安装信息就可以使用了。配置路径：<code>Manage Jenkins→Global Tool Configuration</code></p>\n</li>\n<li><p>2) Jenkins 自动安装工具: 利用 Jenkins 服务提供的【工具自动安装功能】，实现工具的快速配置。</p>\n</li>\n<li><p>3) tools 指令安装工具:帮助我们自动下载并安装所指定的构建工具，并将其加入 PATH 变量中。这样，我们就可以在sh步骤里直接使用了, 但在agent none的情况下不会生效。</p>\n</li>\n</ul>\n<p>Tips :  tools指令默认支持3种工具：JDK、Maven、Gradle。通过安装插件，tools 指令还可以支持更多的工具。</p>\n<hr>\n<h2 id=\"0x04-基础使用\"><a href=\"#0x04-基础使用\" class=\"headerlink\" title=\"0x04 基础使用\"></a>0x04 基础使用</h2><h3 id=\"HelloWorld-自由风格软件项目\"><a href=\"#HelloWorld-自由风格软件项目\" class=\"headerlink\" title=\"HelloWorld 自由风格软件项目\"></a>HelloWorld 自由风格软件项目</h3><p>Q: Jenkins Free Style 基本使用?<br>目的: 构建一个自由风格的软件项目, 这是Jenkins的主要功能Jenkins将会结合任何SCM和任何构建系统来构建你的项目, 甚至可以构建软件以外的系统.</p>\n<p><strong>操作流程:</strong></p>\n<p>Step 1.项目创建</p>\n<blockquote>\n<p>(1) 面板 -&gt; 新建一个任务 -&gt; 任务名称 freestyle-helloworld -&gt; 保存<br>(2) Dashboard -&gt; 项目名称 freestyle-helloworld -&gt; General</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 重要的配置项</span></span><br><span class=\"line\">丢弃旧的构建：(保持构建的天数 / 保持构建的最大个数)</span><br><span class=\"line\">参数化构建过程: 比如添加的环境变量或者API密钥等等</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>(3) Dashboard -&gt; 项目名称 freestyle-helloworld &gt; 构建 &gt; 执行 Shell 命令<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"FreeStyle - HelloWorld\"</span></span><br><span class=\"line\">touch hello-world.txt</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20201224093941.png\" alt=\"WeiyiGeek.自由风格的软件项目\" title=\"\" class=\"\">\n                <p>WeiyiGeek.自由风格的软件项目</p>\n            </figure>\n<p><br/></p>\n<p>Step 2.工程 <code>freestyle-helloworld</code> 构建与控制台输出查看;<br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20201224094449.png\" alt=\"WeiyiGeek.工程构建与控制台输出\" title=\"\" class=\"\">\n                <p>WeiyiGeek.工程构建与控制台输出</p>\n            </figure></p>\n<p>PS : 如果是蓝色圆点表示构建成功, 如果是红色圆点表示构建失败!</p>\n<p><br/></p>\n<p>Step 3.构建后的工作区存放目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jenkins:/var/lib/jenkins/workspace/freestyle-helloworld$ ls</span><br><span class=\"line\">  <span class=\"comment\"># hello-world.txt</span></span><br><span class=\"line\">jenkins:/var/lib/jenkins/workspace/freestyle-helloworld$ cat hello-world.txt</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"Gitlab-集成配置与实践\"><a href=\"#Gitlab-集成配置与实践\" class=\"headerlink\" title=\"Gitlab 集成配置与实践\"></a>Gitlab 集成配置与实践</h3><p><strong>简单说明：</strong><br>Q: Jenkins 为啥要集成Gitlab?</p>\n<blockquote>\n<p>答：由于我们需要依托于Jenkins将Gitlab上的项目获取至本地，为后续网站的代码发布工作做好准备;</p>\n</blockquote>\n<p>Q: Jenkins 如何集成Gitlab?</p>\n<blockquote>\n<p>答: 由于Jenkins 只是一个调度平台，所以需要安装和Gitlab相关的插件即可完成集成;</p>\n</blockquote>\n<p>Jenkins 与 Gitlab 集成思路</p>\n<ul>\n<li><p>1.开发提交代码 至 Gitlab</p>\n</li>\n<li><p>2.Jenkins 安装 Gitlab 所需插件</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Credentials Plugin (2.3.14) - This plugin allows you to store credentials <span class=\"keyword\">in</span> Jenkins.</span><br><span class=\"line\">Git client plugin (3.6.0) - Utility plugin <span class=\"keyword\">for</span> Git support <span class=\"keyword\">in</span> Jenkins</span><br><span class=\"line\">Git plugin (4.5.0) - This plugin integrates Git with Jenkins.</span><br><span class=\"line\">Gitlab Authentication plugin (1.10) - This is the an authentication plugin using gitlab OAuth.</span><br><span class=\"line\">Gitlab Hook Plugin (1.4.2) - Enables Gitlab web hooks to be used to trigger SMC polling on Gitlab projects</span><br><span class=\"line\">GitLab Plugin (1.5.13) - This plugin allows GitLab to trigger Jenkins builds and display their results <span class=\"keyword\">in</span> the GitLab UI.</span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20201224101640.png\" alt=\"WeiyiGeek.Gitlab关联插件\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Gitlab关联插件</p>\n            </figure>\n<ul>\n<li>3.Jenkins 创建 FreeStyle 项目，然后配置Gitlab仓库对应的地址;</li>\n</ul>\n<p><br></p>\n<p><strong>操作流程:</strong></p>\n<ul>\n<li><strong>Step 1.首先需要将我们所用的项目代码推送到Gitlab（此处假设您已安装Gitlab）之中;</strong></li>\n</ul>\n<blockquote>\n<p>(1) 管理中心 -&gt; 群组 -&gt; 新建群组 -&gt; 完善信息 -&gt; 创建群组<br>(2) 管理中心 -&gt; 项目 -&gt; 创建项目 -&gt; 完善仓库信息 -&gt; 创建项目<br>(3) 推送现有文件夹到Gitlab之中</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> existing_folder</span><br><span class=\"line\">git init</span><br><span class=\"line\">git remote add origin http://gitlab.weiyigeek.top/ci-cd/blog.git</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">\"Initial commit\"</span></span><br><span class=\"line\">git push -u origin master</span><br><span class=\"line\">  <span class=\"comment\"># remote: Resolving deltas: 100% (829/829), done.</span></span><br><span class=\"line\">  <span class=\"comment\"># To http://gitlab.weiyigeek.top/ci-cd/blog.git</span></span><br><span class=\"line\">  <span class=\"comment\">#  * [new branch]      master -&gt; master</span></span><br><span class=\"line\">  <span class=\"comment\"># Branch 'master' set up to track remote branch 'master' from 'origin'.</span></span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20201224100508.png\" alt=\"WeiyiGeek.gitlab\" title=\"\" class=\"\">\n                <p>WeiyiGeek.gitlab</p>\n            </figure>\n<ul>\n<li><strong>Step 2.此处假设您已经按照上面<code>Gitlab 集成配置</code>安装了相应的插件, 并且配置好gitlab域名访问的解析记录;</strong></li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 此处由于没有自己搭建DNS，则将其写入到Jenkins 服务器的hosts文件中进行相应的IP与域名绑定</span></span><br><span class=\"line\">cat /etc/hosts</span><br><span class=\"line\">  <span class=\"comment\"># 127.0.0.1 localhost</span></span><br><span class=\"line\">  <span class=\"comment\"># 127.0.1.1 gitlab</span></span><br><span class=\"line\">  <span class=\"comment\"># 10.10.107.201 gitlab.weiyigeek.top</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>Step 3.Jenkins 创建 FreeStyle 项目，然后配置Gitlab仓库对应的地址(<code>ssh 的方式</code>)</strong></li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 在Gitlab中添加当前机器ssh密钥(此处以Jenkins用户为例)</span></span><br><span class=\"line\">jenkins@jenkins:~<span class=\"variable\">$ssh</span>-keygen -t ed25519 -C <span class=\"string\">\"jenkins@weiyigeek.top\"</span></span><br><span class=\"line\">~$ ls ~/.ssh/id_ed25519</span><br><span class=\"line\">  <span class=\"comment\"># id_ed25519      id_ed25519.pub</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 添加公钥到gitlab中 </span></span><br><span class=\"line\"><span class=\"comment\"># &gt; 用户设置 -&gt; SSH Keys -&gt; jenkins-CI</span></span><br><span class=\"line\">ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINFb2ALOnOpePb7e/tss4/ZKxNHb3srh7NXntW5jAWSf jenkins@weiyigeek.top</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (3) 主机认证指纹绑定</span></span><br><span class=\"line\">jenkins@jenkins:~$ git ls-remote -h -- git@gitlab.weiyigeek.top:ci-cd/blog.git HEAD</span><br><span class=\"line\">  <span class=\"comment\"># The authenticity of host 'gitlab.weiyigeek.top (10.10.107.201)' can't be established.</span></span><br><span class=\"line\">  <span class=\"comment\"># ECDSA key fingerprint is SHA256:cmG5Ces+96qG9EEaU1b/tJuTR1re7XDXUU4jg7asna4.</span></span><br><span class=\"line\">  <span class=\"comment\"># Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span></span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20201224125431.png\" alt=\"WeiyiGeek.SSH Keys\" title=\"\" class=\"\">\n                <p>WeiyiGeek.SSH Keys</p>\n            </figure>\n<ul>\n<li><strong>Step 4.Jenkins &gt; FreeStyle 项目 &gt; 源码管理 &gt; Git &gt; Repositories 设置 &gt;  Credentials 设置</strong><br>PS : 如果是非Jenkins用户下公钥对Gitlab该项目有访问权限时，可以通过 Credentials 添加其认证的密钥即可;</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) Weiyigeek 用户密钥 (此时假设Gitlab已经添加该公钥)</span></span><br><span class=\"line\">weiyigeek@jenkins:~$ cat /home/weiyigeek/.ssh/id_ed25519</span><br><span class=\"line\">  <span class=\"comment\"># -----BEGIN OPENSSH PRIVATE KEY-----</span></span><br><span class=\"line\">  <span class=\"comment\"># b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZW</span></span><br><span class=\"line\">  <span class=\"comment\"># QyNTUxOQAAACAIxH1a4EivkJOSAXqd6LUE8tUvRfgPwwn1Erb7r728cwAAAJgANcy8ADXM</span></span><br><span class=\"line\">  <span class=\"comment\"># vAAAAAtzc2gtZWQyNTUxOQAAACAIxH1a4EivkJOSAXqd6LUE8tUvRfgPwwn1Erb7r728cw</span></span><br><span class=\"line\">  <span class=\"comment\"># AAAECLw4Wnle7Md7fc5NQN6EohejUx0XMHKfdYXejLAw2/NwjEfVrgSK+Qk5IBep3otQTy</span></span><br><span class=\"line\">  <span class=\"comment\"># 1S9F+A/DCfUStvuvvbxzAAAAFG1hc3RlckB3ZWl5aWdlZWsudG9wAQ==</span></span><br><span class=\"line\">  <span class=\"comment\"># -----END OPENSSH PRIVATE KEY-----</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 进行 Credentials 相应的设置</span></span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20201224131113.png\" alt=\"WeiyiGeek.Weiyigeek 用户密钥\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Weiyigeek 用户密钥</p>\n            </figure>\n<ul>\n<li><strong>Step 5.首先手动实现设置NFS共享存储以及 Kubernetes 部署 StatefulSet 资源清单，通过Nginx访问我们的blog;</strong><br>基础配置:<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) NFS 服务器配置</span></span><br><span class=\"line\">root@nfs$ showmount -e</span><br><span class=\"line\">  <span class=\"comment\"># /nfs/data4 *</span></span><br><span class=\"line\">/nfs/data4<span class=\"comment\"># ls -alh /nfs/</span></span><br><span class=\"line\">  <span class=\"comment\"># drwxrwxrwx  2 weiyigeek weiyigeek 4.0K Nov 19 13:27 data4</span></span><br><span class=\"line\">/nfs/data4<span class=\"comment\"># mkdir /nfs/data4/tags/</span></span><br><span class=\"line\">/nfs/data4<span class=\"comment\"># ln -s /nfs/data4/tags/ /nfs/data4/web</span></span><br><span class=\"line\">/nfs/data4<span class=\"comment\"># chown -R nobody:weiyigeek /nfs/data4/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) Node 1 &amp;&amp; Node 2</span></span><br><span class=\"line\">sudo mkdir -pv /nfs/data4/</span><br><span class=\"line\">sudo chown -R weiyigeek:weiyigeek /nfs/data4/</span><br><span class=\"line\">sudo mount.nfs -r 10.10.107.202:/nfs/data4/ /nfs/data4/</span><br><span class=\"line\">k8s-node-4:/nfs/data4$ ls -alh  <span class=\"comment\"># 权限查看</span></span><br><span class=\"line\">  <span class=\"comment\"># total 12K</span></span><br><span class=\"line\">  <span class=\"comment\"># drwxrwxrwx 3 weiyigeek weiyigeek 4.0K Dec 24 15:44 .</span></span><br><span class=\"line\">  <span class=\"comment\"># drwxr-xr-x 3 root   root 4.0K Dec 24 15:47 ..</span></span><br><span class=\"line\">  <span class=\"comment\"># drwxr-xr-x 2 weiyigeek weiyigeek 4.0K Dec 24 15:44 tags</span></span><br><span class=\"line\">  <span class=\"comment\"># lrwxrwxrwx 1 weiyigeek weiyigeek   16 Dec 24 15:44 web -&gt; /nfs/data4/tags/</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>资源清单:<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">cat</span> <span class=\"string\">&gt; jenkins-gitlab-ci.yaml &lt;&lt;'EOF'</span></span><br><span class=\"line\"><span class=\"string\"></span><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span> </span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Service</span> </span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">deploy-blog-svc</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">NodePort</span>         <span class=\"comment\"># Service 类型</span></span><br><span class=\"line\"><span class=\"attr\">  selector:</span></span><br><span class=\"line\"><span class=\"attr\">    app:</span> <span class=\"string\">blog-html</span>        <span class=\"comment\"># 【注意】与deployment资源控制器创建的Pod标签进行绑定;</span></span><br><span class=\"line\"><span class=\"attr\">    release:</span> <span class=\"string\">stabel</span>       <span class=\"comment\"># Service 服务发现不能缺少Pod标签，有了Pod标签才能与之SVC对应</span></span><br><span class=\"line\"><span class=\"attr\">  ports:</span>                  <span class=\"comment\"># 映射端口</span></span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">http</span>            </span><br><span class=\"line\"><span class=\"attr\">    port:</span> <span class=\"number\">80</span>              <span class=\"comment\"># cluster 访问端口</span></span><br><span class=\"line\"><span class=\"attr\">    targetPort:</span> <span class=\"number\">80</span>        <span class=\"comment\"># Pod 容器内的服务端口</span></span><br><span class=\"line\"><span class=\"attr\">    nodePort:</span> <span class=\"number\">30088</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">apps/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">StatefulSet</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">deploy-blog-html</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  serviceName:</span> <span class=\"string\">\"deploy-blog-svc\"</span></span><br><span class=\"line\"><span class=\"attr\">  replicas:</span> <span class=\"number\">3</span>                <span class=\"comment\"># 副本数</span></span><br><span class=\"line\"><span class=\"attr\">  selector:</span>                  <span class=\"comment\"># 选择器</span></span><br><span class=\"line\"><span class=\"attr\">    matchLabels:</span>  </span><br><span class=\"line\"><span class=\"attr\">      app:</span> <span class=\"string\">blog-html</span>   <span class=\"comment\"># 匹配的Pod标签非常重要</span></span><br><span class=\"line\"><span class=\"attr\">      release:</span> <span class=\"string\">stabel</span></span><br><span class=\"line\"><span class=\"attr\">  template:</span></span><br><span class=\"line\"><span class=\"attr\">    metadata:</span></span><br><span class=\"line\"><span class=\"attr\">      labels:</span></span><br><span class=\"line\"><span class=\"attr\">        app:</span> <span class=\"string\">blog-html</span>      <span class=\"comment\"># 模板标签</span></span><br><span class=\"line\"><span class=\"attr\">        release:</span> <span class=\"string\">stabel</span></span><br><span class=\"line\"><span class=\"attr\">    spec:</span></span><br><span class=\"line\"><span class=\"attr\">      volumes:</span>                <span class=\"comment\"># 关键点</span></span><br><span class=\"line\"><span class=\"attr\">      - name:</span> <span class=\"string\">web</span> </span><br><span class=\"line\"><span class=\"attr\">        hostPath:</span>             <span class=\"comment\"># 采用hostPath卷</span></span><br><span class=\"line\"><span class=\"attr\">          type:</span> <span class=\"string\">DirectoryOrCreate</span>   <span class=\"comment\"># 卷类型DirectoryOrCreate: 如果子节点上没有该目录便会进行创建</span></span><br><span class=\"line\"><span class=\"attr\">          path:</span> <span class=\"string\">/nfs/data4/web</span>      <span class=\"comment\"># 各主机节点上已存在的目录此处是NFS共享</span></span><br><span class=\"line\"><span class=\"attr\">      - name:</span> <span class=\"string\">timezone</span>     <span class=\"comment\"># 容器时区设置</span></span><br><span class=\"line\"><span class=\"attr\">        hostPath:</span></span><br><span class=\"line\"><span class=\"attr\">          path:</span> <span class=\"string\">/usr/share/zoneinfo/Asia/Shanghai</span></span><br><span class=\"line\"><span class=\"attr\">      containers:</span></span><br><span class=\"line\"><span class=\"attr\">      - name:</span> <span class=\"string\">blog-html</span></span><br><span class=\"line\"><span class=\"attr\">        image:</span> <span class=\"string\">harbor.weiyigeek.top/test/nginx:v3.0</span>  <span class=\"comment\"># 拉取的镜像</span></span><br><span class=\"line\"><span class=\"attr\">        imagePullPolicy:</span> <span class=\"string\">IfNotPresent</span></span><br><span class=\"line\"><span class=\"attr\">        ports:</span></span><br><span class=\"line\"><span class=\"attr\">        - name:</span> <span class=\"string\">http</span>         <span class=\"comment\"># 此端口在服务中的名称</span></span><br><span class=\"line\"><span class=\"attr\">          containerPort:</span> <span class=\"number\">80</span>  <span class=\"comment\"># 容器暴露的端口</span></span><br><span class=\"line\"><span class=\"attr\">        volumeMounts:</span>        <span class=\"comment\"># 挂载指定卷目录</span></span><br><span class=\"line\"><span class=\"attr\">        - name:</span> <span class=\"string\">web</span> </span><br><span class=\"line\"><span class=\"attr\">          mountPath:</span> <span class=\"string\">/usr/share/nginx/html</span></span><br><span class=\"line\"><span class=\"attr\">        - name:</span> <span class=\"string\">logs</span></span><br><span class=\"line\"><span class=\"attr\">          mountPath:</span> <span class=\"string\">/var/log/nginx</span></span><br><span class=\"line\"><span class=\"attr\">        - name:</span> <span class=\"string\">timezone</span></span><br><span class=\"line\"><span class=\"attr\">          mountPath:</span> <span class=\"string\">/usr/share/zoneinfo/Asia/Shanghai</span></span><br><span class=\"line\"><span class=\"attr\">  volumeClaimTemplates:</span>    <span class=\"comment\"># 卷的体积要求模板此处采用StorageClass存储类</span></span><br><span class=\"line\"><span class=\"attr\">  - metadata:</span>              <span class=\"comment\"># 根据模板自动创建PV与PVC并且进行一一对应绑定;</span></span><br><span class=\"line\"><span class=\"attr\">      name:</span> <span class=\"string\">logs</span>       </span><br><span class=\"line\"><span class=\"attr\">    spec:</span></span><br><span class=\"line\"><span class=\"attr\">      accessModes:</span> <span class=\"string\">[</span> <span class=\"string\">\"ReadWriteOnce\"</span> <span class=\"string\">]</span></span><br><span class=\"line\"><span class=\"attr\">      storageClassName:</span> <span class=\"string\">managed-nfs-storage</span> <span class=\"comment\"># StorageClass存储类</span></span><br><span class=\"line\"><span class=\"attr\">      resources:</span></span><br><span class=\"line\"><span class=\"attr\">        requests:</span></span><br><span class=\"line\"><span class=\"attr\">          storage:</span> <span class=\"number\">1</span><span class=\"string\">Gi</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure></p>\n<p>部署资源清单:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/K8s/Day12$ kubectl apply -f jenkins-gitlab-ci.yaml</span><br><span class=\"line\">service/deploy-blog-svc unchanged</span><br><span class=\"line\">statefulset.apps/deploy-blog-html configured</span><br><span class=\"line\"></span><br><span class=\"line\">~/K8s/Day12$ kubectl get services -o wide</span><br><span class=\"line\">NAME              TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)        AGE    SELECTOR</span><br><span class=\"line\">deploy-blog-svc   NodePort    10.104.74.36   &lt;none&gt;        80:30088/TCP   5m9s   app=blog-html,release=stabel</span><br><span class=\"line\">kubernetes        ClusterIP   10.96.0.1      &lt;none&gt;        443/TCP        49d    &lt;none&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">~/K8s/Day12$ kubectl get pod -o wide</span><br><span class=\"line\">NAME                                      READY   STATUS    RESTARTS   AGE   IP             NODE          NOMINATED NODE   READINESS GATES</span><br><span class=\"line\">deploy-blog-html-0                        1/1     Running   0          72s   10.244.0.193   Master </span><br><span class=\"line\">deploy-blog-html-1                        1/1     Running   0          57s   10.244.1.182   k8s-node-4  </span><br><span class=\"line\">deploy-blog-html-2                        1/1     Running   0          49s   10.244.2.84    k8s-node-5</span><br></pre></td></tr></table></figure></p>\n<p>效果查看:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl http://10.10.107.202:30088/host.html</span><br><span class=\"line\">  <span class=\"comment\"># Hostname: deploy-blog-html-0 ,Image Version: 3.0, Nginx Version: 1.19.4</span></span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><strong>Step 6.采用Tag方式发布和回退项目</strong></li>\n</ul>\n<p>Q: 为什么要让项目支持Tag版本方式上线?</p>\n<blockquote>\n<p>答: 采用 Tag 的方式可以直观的知道我们部署的项目版本，同时也便于进行回退;<br>比如: 第一次上线v1.1第二次上线v1.2，如果此时上线的v1.2出现文件，那么我们可以快速回退至上一个版本v1.1;</p>\n</blockquote>\n<p>使用Tag方式发布与回退思路:</p>\n<blockquote>\n<p>1.开发如果需要发布新版本，必须将当前版本打上一个标签。<br>2.Jenkins需要让其脚本支持传参，比如用户传递v1.1则拉取项目的v1.1标签。</p>\n</blockquote>\n<p><br></p>\n<p>实践操作:</p>\n<blockquote>\n<p>(1) 首先需要安装 <code>Git Parameter</code> 插件(<code>增加了从项目中配置的git存储库中选择分支、标记或修订的能力。</code>)，然后配置Jenkins参数化构建过程，让用户在构建时选择对应的Tag版本;<br>丢弃旧的构建 &gt; 保持构建的最大个数 为 10 个<br>参数化构建过程 &gt; Git 参数  &gt; git_version （变量） -&gt; 参数类型 Tags -&gt; 默认值 (origin/master) -&gt; 排序方式 (DESCENDING SMART) 倒序 <code>防止 Tags 顺序乱</code>;<br>选项参数 (选择) &gt; deploy_option （变量） -&gt; 选项 deploy|rollback<br>源码管理 &gt; Git &gt; Repository URL:<a href=\"mailto:git@gitlab.weiyigeek.top\">git@gitlab.weiyigeek.top</a>:ci-cd/blog.git &gt; Credentials (密钥认证) -&gt; 分支机构建设 （<code>指定分支（为空时代表any）</code>）-&gt; 引入 ${git_version} 变量<br>构建 &gt; 执行shell &gt; /bin/sh -x /tmp/script/blog-script.sh<br>应用 &gt; 保存</p>\n</blockquote>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20201225100336.png\" alt=\"WeiyiGeek.jenkins项目创建\" title=\"\" class=\"\">\n                <p>WeiyiGeek.jenkins项目创建</p>\n            </figure>\n<blockquote>\n<p>(2) 部署和回退脚本以及自动化发布重复构建的问题处理编写</p>\n</blockquote>\n<p>touch /tmp/script/blog-script.sh &amp;&amp; chmod a+x $_<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\"># Description: Jenkins CI &amp; Kubernetes &amp; Gitlab -&gt; Deploy or Rollback Blog HTML </span></span><br><span class=\"line\">DATE=$(date +%Y%m%d-%H%M%S)</span><br><span class=\"line\">TAG_PATH=<span class=\"string\">\"/nfs/data4/tags\"</span></span><br><span class=\"line\">WEB_PATH=<span class=\"string\">\"/nfs/data4/web\"</span></span><br><span class=\"line\">WEB_DIR=<span class=\"string\">\"blog-<span class=\"variable\">$&#123;DATE&#125;</span>-<span class=\"variable\">$&#123;git_version&#125;</span>\"</span></span><br><span class=\"line\">K8S_MATER=<span class=\"string\">\"weiyigeek@10.10.107.202\"</span></span><br><span class=\"line\">K8S_MATER_PORT=<span class=\"string\">\"20211\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 部署</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">deploy</span></span> () &#123;</span><br><span class=\"line\">  <span class=\"comment\"># 1.打包工作目录中的项目</span></span><br><span class=\"line\">  <span class=\"built_in\">cd</span> <span class=\"variable\">$&#123;WORKSPACE&#125;</span>/ &amp;&amp; \\</span><br><span class=\"line\">  tar -zcf /tmp/<span class=\"variable\">$&#123;WEB_DIR&#125;</span>.tar.gz ./*</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># 2.上传打包的项目到master之中</span></span><br><span class=\"line\">  scp -P <span class=\"variable\">$&#123;K8S_MATER_PORT&#125;</span> /tmp/<span class=\"variable\">$&#123;WEB_DIR&#125;</span>.tar.gz  weiyigeek@10.10.107.202:<span class=\"variable\">$&#123;TAG_PATH&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># 3.解压&amp;软链接</span></span><br><span class=\"line\">  ssh -p <span class=\"variable\">$&#123;K8S_MATER_PORT&#125;</span> <span class=\"variable\">$&#123;K8S_MATER&#125;</span> <span class=\"string\">\"mkdir -p <span class=\"variable\">$&#123;TAG_PATH&#125;</span>/<span class=\"variable\">$&#123;WEB_DIR&#125;</span> &amp;&amp; \\ </span></span><br><span class=\"line\"><span class=\"string\">                                         tar -xf <span class=\"variable\">$&#123;TAG_PATH&#125;</span>/<span class=\"variable\">$&#123;WEB_DIR&#125;</span>.tar.gz -C <span class=\"variable\">$&#123;TAG_PATH&#125;</span>/<span class=\"variable\">$&#123;WEB_DIR&#125;</span> &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"string\">                                         rm -rf <span class=\"variable\">$&#123;WEB_PATH&#125;</span> &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"string\">                                         ln -s <span class=\"variable\">$&#123;TAG_PATH&#125;</span>/<span class=\"variable\">$&#123;WEB_DIR&#125;</span> <span class=\"variable\">$&#123;WEB_PATH&#125;</span> &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"string\">                                         kubectl delete pod -l app=blog-html\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 回退</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">rollback</span></span> () &#123;</span><br><span class=\"line\">  Previous_Version=$(ssh -p <span class=\"variable\">$&#123;K8S_MATER_PORT&#125;</span> <span class=\"variable\">$&#123;K8S_MATER&#125;</span> <span class=\"string\">\"find <span class=\"variable\">$&#123;TAG_PATH&#125;</span> -maxdepth 1 -type d -name blog-*-<span class=\"variable\">$&#123;git_version&#125;</span>\"</span>)</span><br><span class=\"line\">  ssh -p <span class=\"variable\">$&#123;K8S_MATER_PORT&#125;</span> <span class=\"variable\">$&#123;K8S_MATER&#125;</span> <span class=\"string\">\"rm -rf <span class=\"variable\">$&#123;WEB_PATH&#125;</span> &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"string\">                                         ln -s <span class=\"variable\">$&#123;Previous_Version&#125;</span> <span class=\"variable\">$&#123;WEB_PATH&#125;</span> &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"string\">                                         kubectl delete pod -l app=blog-html\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 部署 &amp; 回退 入口(坑-==两边没有空格)</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [[ <span class=\"string\">\"<span class=\"variable\">$&#123;deploy_option&#125;</span>\"</span> = <span class=\"string\">\"deploy\"</span> ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"comment\"># 坑 (防止字符串为空)</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> [[ <span class=\"string\">\"v<span class=\"variable\">$&#123;GIT_COMMIT&#125;</span>\"</span> = <span class=\"string\">\"v<span class=\"variable\">$&#123;GIT_PREVIOUS_SUCCESSFUL_COMMIT&#125;</span>\"</span> ]];<span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> -e <span class=\"string\">\"您已经部署过 <span class=\"variable\">$&#123;git_version&#125;</span> 版本\"</span></span><br><span class=\"line\">    <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    deploy</span><br><span class=\"line\">  <span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">elif</span> [[ <span class=\"string\">\"<span class=\"variable\">$&#123;deploy_option&#125;</span>\"</span> = <span class=\"string\">\"rollback\"</span> ]];<span class=\"keyword\">then</span></span><br><span class=\"line\">  rollback</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">  <span class=\"built_in\">exit</span> 127</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>(3) Jenkins 服务器 与 Kubernetes Master 机器中的普通用户进行 ssh 公钥认证登录;</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># copy 公钥 到 对端主机</span></span><br><span class=\"line\">ssh-copy-id -p 20211 weiyigeek@10.10.107.202</span><br><span class=\"line\">  <span class=\"comment\"># /usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: \"/var/lib/jenkins/.ssh/id_ed25519.pub\"</span></span><br><span class=\"line\">  <span class=\"comment\"># authorized only. All activity will be monitored and reported.</span></span><br><span class=\"line\">  <span class=\"comment\"># weiyigeek@10.10.107.202's password:</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Number of key(s) added: 1</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Now try logging into the machine, with:   \"ssh -p '20211' 'weiyigeek@10.10.107.202'\" and check to make sure that only the key(s) you wanted were added.</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>(4) 为我们的Blog打三个Tag并验证构建脚本</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> ~/workspace/freestyle-blog</span><br><span class=\"line\">jenkins:~/workspace/freestyle-blog$ git config --global user.email <span class=\"string\">\"jenkins@weiygeek.top\"</span></span><br><span class=\"line\">jenkins:~/workspace/freestyle-blog$ git config --global user.name <span class=\"string\">\"Weiyigeek\"</span></span><br><span class=\"line\">vim index.html</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">\"v1.1\"</span></span><br><span class=\"line\">git tag v1.1 -m <span class=\"string\">\"Jenkins CI test - v1.1\"</span></span><br><span class=\"line\">git push origin HEAD:master</span><br><span class=\"line\">git push origin v1.1</span><br><span class=\"line\">  <span class=\"comment\"># Total 0 (delta 0), reused 0 (delta 0)</span></span><br><span class=\"line\">  <span class=\"comment\"># To gitlab.weiyigeek.top:ci-cd/blog.git</span></span><br><span class=\"line\">  <span class=\"comment\"># * [new tag]         v1.1 -&gt; v1.1</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>(5) 进行项目构建 -&gt; Build With Paramters 查看 部署的版本以及是部署还是回退 -&gt; 如下图所示拉取的指定 Tags ;</p>\n</blockquote>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20201225101836.png\" alt=\"WeiyiGeek.项目构建\" title=\"\" class=\"\">\n                <p>WeiyiGeek.项目构建</p>\n            </figure>\n<blockquote>\n<p>(6) 项目构建部署验证 访问<code>http://10.10.107.202:30088/</code>博客地址</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Built Branches</span><br><span class=\"line\">    v1.3: Build <span class=\"comment\">#4 of Revision 4f80504ee142cb9866e4a0988cdc1e1693cfd7aa (v1.3)</span></span><br><span class=\"line\">    v1.2: Build <span class=\"comment\">#3 of Revision 4e1dd6eded12d7cad3740d2461c3e784ad712632 (v1.2)</span></span><br><span class=\"line\">    v1.1: Build <span class=\"comment\">#2 of Revision cd2d5778292ff2cbb7d4ac1b82c684223a38761b (v1.1)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果已经部署过该项目则显示:</span></span><br><span class=\"line\">  <span class=\"comment\"># + '[' deploy==deploy ']'</span></span><br><span class=\"line\">  <span class=\"comment\"># + [[ v4f80504ee142cb9866e4a0988cdc1e1693cfd7aa = \\v\\4\\f\\8\\0\\5\\0\\4\\e\\e\\1\\4\\2\\c\\b\\9\\8\\6\\6\\e\\4\\a\\0\\9\\8\\8\\c\\d\\c\\1\\e\\1\\6\\9\\3\\c\\f\\d\\7\\a\\a ]]</span></span><br><span class=\"line\">  <span class=\"comment\"># + echo -e '您已经部署过 v1.3 版本'</span></span><br><span class=\"line\">  <span class=\"comment\"># 您已经部署过 v1.3 版本</span></span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20201225103232.png\" alt=\"WeiyiGeek.项目构建部署验证\" title=\"\" class=\"\">\n                <p>WeiyiGeek.项目构建部署验证</p>\n            </figure>\n<blockquote>\n<p>(6) 项目回退验证 &gt; 请选择您要部署的RELEASE版本<code>v1.1</code>, 然后选择部署或是回退;</p>\n</blockquote>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20201225105740.png\" alt=\"WeiyiGeek.项目回退验证\" title=\"\" class=\"\">\n                <p>WeiyiGeek.项目回退验证</p>\n            </figure>\n<p><br></p>\n<h3 id=\"Maven-集成配置与实践\"><a href=\"#Maven-集成配置与实践\" class=\"headerlink\" title=\"Maven 集成配置与实践\"></a>Maven 集成配置与实践</h3><p><strong>基本概述:</strong><br>Q: 什么是Java项目?</p>\n<blockquote>\n<p>答：简单来说就是使用Java编写的代码，我们将其称为Java项目；</p>\n</blockquote>\n<p>Q: 为什么Java项目需要使用Maven编译?</p>\n<blockquote>\n<p>答: 由于Java编写的Web服务代码是无法直接在服务器上运行，需要使用Maven工具进行打包;<br>简单理解: Java 源代码就像汽车的一堆散件，必须经过工厂的组装才能完成一辆完整的汽车，这里组装汽车可以理解是 Maven 编译过程;</p>\n</blockquote>\n<p>Q: 在实现自动化构建Java项目时，先实现手动构建Java项目;</p>\n<blockquote>\n<p>答: 因为想要实现自动化发布代码，就必须手动进行一次构建，既是熟悉过程又是优化我们的部署脚本;<br>大致流程: 源码 -&gt; gitlab -&gt; Maven 手动构建 -&gt; 最后推送构建 -&gt; 发布;</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Maven 拉取 Jar 的几种途径</span></span><br><span class=\"line\">                -&gt; 国外 Maven Jar 服务器</span><br><span class=\"line\">Gitlab -&gt; Maven -&gt; 国内 Maven Jar 镜像服务器</span><br><span class=\"line\">                -&gt; 企业 内部 Maven Jar 私服服务器 (可以双向同步)</span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<p>自动部署 Java 项目至 kubernetes 集群流程步骤：</p>\n<ul>\n<li>(1) Jenkins 安装 Maven Integration 插件，使Jenkins支持Maven项目的构建</li>\n<li>(2) Jenkins 配置 JDK 路径以及 Maven 路径</li>\n<li>(3) Jenkins 创建 Maven 项目然后进行构建</li>\n<li>(4) 编写自动化上线脚本推送至 kubernetes 集群</li>\n<li>(5) 优化部署脚本使其支持上线与回滚以及，相同版本重复构建</li>\n</ul>\n<p><br/></p>\n<p><strong>基础环境配置:</strong></p>\n<ul>\n<li>Step 1. Jenkins 服务器中 Java 与 Maven 环境配置与 Maven 插件安装;<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Java 环境</span></span><br><span class=\"line\">~$ ls /usr/<span class=\"built_in\">local</span>/jdk1.8.0_211/</span><br><span class=\"line\">~$ java -version</span><br><span class=\"line\">  <span class=\"comment\"># java version \"1.8.0_211\"</span></span><br><span class=\"line\">  <span class=\"comment\"># Java(TM) SE Runtime Environment (build 1.8.0_211-b12)</span></span><br><span class=\"line\">  <span class=\"comment\"># Java HotSpot(TM) 64-Bit Server VM (build 25.211-b12, mixed mode)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Maven 环境 (两种方式)</span></span><br><span class=\"line\"><span class=\"comment\"># ~$ sudo apt install maven # 方式1</span></span><br><span class=\"line\">~$ wget https://mirrors.tuna.tsinghua.edu.cn/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz </span><br><span class=\"line\">~$ sudo tar -zxvf apache-maven-3.6.3-bin.tar.gz -C /usr/<span class=\"built_in\">local</span></span><br><span class=\"line\">~$ ls /usr/<span class=\"built_in\">local</span>/apache-maven-3.6.3/</span><br><span class=\"line\">  <span class=\"comment\"># bin  boot  conf  lib  LICENSE  NOTICE  README.txt</span></span><br><span class=\"line\">~$ sudo ln -s /usr/<span class=\"built_in\">local</span>/apache-maven-3.6.3/ /usr/<span class=\"built_in\">local</span>/maven  <span class=\"comment\"># 非常值得学习(变版本却不变执行路径)</span></span><br><span class=\"line\">~$ /usr/<span class=\"built_in\">local</span>/maven/bin/mvn -v</span><br><span class=\"line\">  <span class=\"comment\"># Apache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)</span></span><br><span class=\"line\">  <span class=\"comment\"># Maven home: /usr/local/maven</span></span><br><span class=\"line\">  <span class=\"comment\"># Java version: 1.8.0_211, vendor: Oracle Corporation, runtime: /usr/local/jdk1.8.0_211/jre</span></span><br><span class=\"line\">  <span class=\"comment\"># Default locale: en_US, platform encoding: UTF-8</span></span><br><span class=\"line\">  <span class=\"comment\"># OS name: \"linux\", version: \"5.4.0-46-generic\", arch: \"amd64\", family: \"unix\"</span></span><br><span class=\"line\">~$ <span class=\"built_in\">export</span> PATH=/usr/<span class=\"built_in\">local</span>/maven/bin/:<span class=\"variable\">$PATH</span>  <span class=\"comment\"># 临时</span></span><br><span class=\"line\">~$ <span class=\"built_in\">export</span> PATH=<span class=\"variable\">$&#123;JAVA_HOME&#125;</span>/bin:/usr/<span class=\"built_in\">local</span>/maven/bin/:<span class=\"variable\">$PATH</span> <span class=\"comment\"># 加入 /etc/Profile永久 </span></span><br><span class=\"line\">~$ mvn -v</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Maven Integration 插件 安装</span></span><br><span class=\"line\"><span class=\"comment\"># PS : 提供了Jenkins和Maven的深度集成:根据快照在项目之间自动触发，各种Jenkins发布者的自动配置(Junit)。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Jenkins 中 Maven 集成配置</span></span><br><span class=\"line\">&gt; 面板 -&gt; 全局工具配置 -&gt; JDK 配置 -&gt; 新增JDK -&gt; 别名 jdk_env -&gt; JAVA_HOME /usr/<span class=\"built_in\">local</span>/jdk1.8.0_211/</span><br><span class=\"line\">                                -&gt; 新增Maven -&gt; 别名 maven_env -&gt; MAVEN_HOME /usr/<span class=\"built_in\">local</span>/jdk1.8.0_211/</span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20201225214635.png\" alt=\"WeiyiGeek.Maven 集成配置\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Maven 集成配置</p>\n            </figure>\n</li>\n</ul>\n<ul>\n<li>Step 2.手动我们的Java的Maven项目, 测试Jenkins服务器上的Maven是否可以正常编译War包并运行在单机的Tomcat8 之中;</li>\n</ul>\n<p>Maven 镜像配置(您也可选择阿里云的Maven仓库地址加快拉取速度):<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- # (1) 修改官方的Maven仓库地址为本地私服; --&gt;</span></span><br><span class=\"line\">158   <span class=\"tag\">&lt;<span class=\"name\">mirrors</span>&gt;</span></span><br><span class=\"line\">159 <span class=\"comment\">&lt;!-- Maven 私服地址配置 --&gt;</span></span><br><span class=\"line\">160     <span class=\"tag\">&lt;<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\">161         <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>weiyigeek-maven<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">162         <span class=\"tag\">&lt;<span class=\"name\">mirrorOf</span>&gt;</span>central<span class=\"tag\">&lt;/<span class=\"name\">mirrorOf</span>&gt;</span></span><br><span class=\"line\">163         <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>Private maven<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">164         <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://maven.weiyigeek.top:8081/repository/maven-public/<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">165     <span class=\"tag\">&lt;/<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\">166   <span class=\"tag\">&lt;/<span class=\"name\">mirrors</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- # (2) Default: $&#123;user.home&#125;/.m2/repository 缓存目录 --&gt;</span></span><br><span class=\"line\">53   <span class=\"tag\">&lt;<span class=\"name\">localRepository</span>&gt;</span>/path/to/local/repo<span class=\"tag\">&lt;/<span class=\"name\">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>Maven代码项目程序拉取:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> git@gitlab.weiyigeek.top:ci-cd/java-maven.git</span><br><span class=\"line\">  <span class=\"comment\"># Cloning into 'java-maven'...</span></span><br><span class=\"line\">  <span class=\"comment\"># The authenticity of host 'gitlab.weiyigeek.top (10.10.107.201)' can't be established.</span></span><br><span class=\"line\">$ ~/code/java-maven$ ls</span><br><span class=\"line\">pom.xml  src  target</span><br></pre></td></tr></table></figure></p>\n<p>构建与运行测试:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/code/java-maven$ mvn clean package -Dmaven.test.skip=<span class=\"literal\">true</span>   <span class=\"comment\"># 跳过测试用例</span></span><br><span class=\"line\">  <span class=\"comment\"># [INFO] Building war: /home/weiyigeek/code/java-maven/target/hello-world.war</span></span><br><span class=\"line\">  <span class=\"comment\"># [INFO] WEB-INF/web.xml already added, skipping</span></span><br><span class=\"line\">  <span class=\"comment\"># [INFO] ------------------------------------------------------------------------</span></span><br><span class=\"line\">  <span class=\"comment\"># [INFO] BUILD SUCCESS</span></span><br><span class=\"line\">  <span class=\"comment\"># [INFO] ------------------------------------------------------------------------</span></span><br><span class=\"line\">  <span class=\"comment\"># [INFO] Total time:  7.225 s</span></span><br><span class=\"line\">  <span class=\"comment\"># [INFO] Finished at: 2020-12-25T09:23:20Z</span></span><br><span class=\"line\">  <span class=\"comment\"># [INFO] ------------------------------------------------------------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\">~/code/java-maven$ ls -alh /home/weiyigeek/code/java-maven/target/hello-world.war  <span class=\"comment\"># 生成的war</span></span><br><span class=\"line\">-rw-r--r-- 1 weiyigeek weiyigeek 2.0M Dec 25 09:23 /home/weiyigeek/code/java-maven/target/hello-world.war</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将生成的 hello-world.war 复制到本地的 Tomcat 的Wabapps目录之中他会自动解压</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20201225213200.png\" alt=\"WeiyiGeek.Maven-hello-world\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Maven-hello-world</p>\n            </figure>\n<ul>\n<li>Step 3.在 Kubernets 上 准备接受  Jenkins 推送过来的war包的项目环境;<br>基础配置:<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) NFS 服务器上配置 (PS:由于测试资源有限 则 nfs 与 k8s master 在同一台机器上)</span></span><br><span class=\"line\">root@nfs$ showmount -e</span><br><span class=\"line\">  <span class=\"comment\"># /nfs/data4 *</span></span><br><span class=\"line\">/nfs/data4<span class=\"comment\"># ls -alh /nfs/</span></span><br><span class=\"line\">  <span class=\"comment\"># drwxrwxrwx  2 weiyigeek weiyigeek 4.0K Nov 19 13:27 data4</span></span><br><span class=\"line\">/nfs/data4<span class=\"comment\"># mkdir /nfs/data4/&#123;war,webapps&#125;/</span></span><br><span class=\"line\">/nfs/data4<span class=\"comment\"># ln -s /nfs/data4/war/ROOT /nfs/data4/webapps/ROOT</span></span><br><span class=\"line\">/nfs/data4<span class=\"comment\"># chown -R weiyigeek:weiyigeek /nfs/data4/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) Node 1 &amp;&amp; Node 2 都要执行</span></span><br><span class=\"line\">sudo mkdir -pv /nfs/data4/</span><br><span class=\"line\">sudo chown -R weiyigeek:weiyigeek /nfs/data4/</span><br><span class=\"line\">sudo mount.nfs -r 10.10.107.202:/nfs/data4/ /nfs/data4/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (3) master 节点拉取 tomcat 此处选择 8.5.61-jdk8-corretto 并上传到内部私有harbor之中</span></span><br><span class=\"line\">master$ docker pull tomcat:8.5.61-jdk8-corretto</span><br><span class=\"line\">  <span class=\"comment\"># 8.5.61-jdk8-corretto: Pulling from library/tomcat</span></span><br><span class=\"line\">  <span class=\"comment\"># ...</span></span><br><span class=\"line\">  <span class=\"comment\"># Status: Downloaded newer image for tomcat:8.5.61-jdk8-corretto</span></span><br><span class=\"line\">  <span class=\"comment\"># docker.io/library/tomcat:8.5.61-jdk8-corretto</span></span><br><span class=\"line\">master$ docker tag tomcat:8.5.61-jdk8-corretto harbor.weiyigeek.top/<span class=\"built_in\">test</span>/tomcat:8.5.61-jdk8-corretto</span><br><span class=\"line\">master$ docker push  harbor.weiyigeek.top/<span class=\"built_in\">test</span>/tomcat:8.5.61-jdk8-corretto</span><br><span class=\"line\">  <span class=\"comment\"># The push refers to repository [harbor.weiyigeek.top/test/tomcat]</span></span><br><span class=\"line\">  <span class=\"comment\"># f13244e4918b: Pushed</span></span><br><span class=\"line\">  <span class=\"comment\"># 536f15f78828: Pushed</span></span><br><span class=\"line\">  <span class=\"comment\"># 1c98b6d16fad: Pushed</span></span><br><span class=\"line\">  <span class=\"comment\"># fdef502bf282: Pushed</span></span><br><span class=\"line\">  <span class=\"comment\"># cee8d35c645b: Pushed</span></span><br><span class=\"line\">  <span class=\"comment\"># 8.5.61-jdk8-corretto: digest: sha256:110d7391739e868daf8c1bdd03fcb7ffe9eaf2b134768b9162e2cd47d58f7255 size: 1368</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (4) 节点拉取验证</span></span><br><span class=\"line\">k8s-node-4:~$ docker pull harbor.weiyigeek.top/<span class=\"built_in\">test</span>/tomcat:8.5.61-jdk8-corretto</span><br><span class=\"line\">k8s-node-5:~$ docker pull harbor.weiyigeek.top/<span class=\"built_in\">test</span>/tomcat:8.5.61-jdk8-corretto</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (5) 将 jenkins 中构建好的war包 上传到 Master 节点 的 /nfs/data4/war 目录之中</span></span><br><span class=\"line\">jenkins$ scp -P 20211 /var/lib/jenkins/workspace/Maven-HelloWorld/target/hello-world.war weiyigeek@10.10.107.202:/nfs/data4/war</span><br><span class=\"line\"><span class=\"comment\"># **************WARNING**************</span></span><br><span class=\"line\"><span class=\"comment\"># Authorized only. All activity will be monitored and reported.</span></span><br><span class=\"line\"><span class=\"comment\"># hello-world.war     </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (6) 解压war并建立软链接</span></span><br><span class=\"line\">master$ /nfs/data4/war$ unzip hello-world.war -d hello-world-v1.0</span><br><span class=\"line\">  <span class=\"comment\"># Archive:  hello-world.war</span></span><br><span class=\"line\">master$ /nfs/data4/war$ ls</span><br><span class=\"line\">  <span class=\"comment\"># hello-world-v1.0  hello-world.war</span></span><br><span class=\"line\">master$ /nfs/data4$ ln -s /nfs/data4/war/hello-world-v1.0/ /nfs/data4/webapps &amp;&amp; ls /nfs/data4/webapps <span class=\"comment\"># 坑太多该目录不能存在</span></span><br><span class=\"line\">  <span class=\"comment\"># index.jsp  META-INF  WEB-INF</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>资源清单: (<code>同样此处采用了HostPath的Volumns卷(war项目)与StorageClass存储类(访问日志)</code>)<br><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">cat</span> <span class=\"string\">&gt; jenkins-ci-gitlab-to-kubernetes.yaml &lt;&lt;'EOF'</span></span><br><span class=\"line\"><span class=\"string\"></span><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span> </span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Service</span> </span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">deploy-maven-svc</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">NodePort</span>         <span class=\"comment\"># Service 类型</span></span><br><span class=\"line\"><span class=\"attr\">  selector:</span></span><br><span class=\"line\"><span class=\"attr\">    app:</span> <span class=\"string\">java-maven</span>       <span class=\"comment\"># 【注意】与deployment资源控制器创建的Pod标签进行绑定;</span></span><br><span class=\"line\"><span class=\"attr\">    release:</span> <span class=\"string\">stabel</span>       <span class=\"comment\"># Service 服务发现不能缺少Pod标签，有了Pod标签才能与之SVC对应</span></span><br><span class=\"line\"><span class=\"attr\">  ports:</span>                  <span class=\"comment\"># 映射端口</span></span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">http</span>            </span><br><span class=\"line\"><span class=\"attr\">    port:</span> <span class=\"number\">8080</span>              <span class=\"comment\"># cluster 访问端口</span></span><br><span class=\"line\"><span class=\"attr\">    targetPort:</span> <span class=\"number\">8080</span>        <span class=\"comment\"># Pod 容器内的服务端口</span></span><br><span class=\"line\"><span class=\"attr\">    nodePort:</span> <span class=\"number\">30089</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">apps/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">StatefulSet</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">deploy-java-maven</span> </span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  serviceName:</span> <span class=\"string\">\"deploy-maven-svc\"</span></span><br><span class=\"line\"><span class=\"attr\">  replicas:</span> <span class=\"number\">3</span>                <span class=\"comment\"># 副本数</span></span><br><span class=\"line\"><span class=\"attr\">  selector:</span>                  <span class=\"comment\"># 选择器</span></span><br><span class=\"line\"><span class=\"attr\">    matchLabels:</span>  </span><br><span class=\"line\"><span class=\"attr\">      app:</span> <span class=\"string\">java-maven</span>   <span class=\"comment\"># 匹配的Pod标签非常重要</span></span><br><span class=\"line\"><span class=\"attr\">      release:</span> <span class=\"string\">stabel</span></span><br><span class=\"line\"><span class=\"attr\">  template:</span></span><br><span class=\"line\"><span class=\"attr\">    metadata:</span></span><br><span class=\"line\"><span class=\"attr\">      labels:</span></span><br><span class=\"line\"><span class=\"attr\">        app:</span> <span class=\"string\">java-maven</span>      <span class=\"comment\"># 模板标签</span></span><br><span class=\"line\"><span class=\"attr\">        release:</span> <span class=\"string\">stabel</span></span><br><span class=\"line\"><span class=\"attr\">    spec:</span></span><br><span class=\"line\"><span class=\"attr\">      volumes:</span>                <span class=\"comment\"># 关键点</span></span><br><span class=\"line\"><span class=\"attr\">      - name:</span> <span class=\"string\">webapps</span>         <span class=\"comment\"># 卷名称 </span></span><br><span class=\"line\"><span class=\"attr\">        hostPath:</span>             <span class=\"comment\"># 采用hostPath卷</span></span><br><span class=\"line\"><span class=\"attr\">          type:</span> <span class=\"string\">DirectoryOrCreate</span>   <span class=\"comment\"># 卷类型DirectoryOrCreate: 如果子节点上没有该目录便会进行创建</span></span><br><span class=\"line\"><span class=\"attr\">          path:</span> <span class=\"string\">/nfs/data4/webapps</span>  <span class=\"comment\"># 各主机节点上已存在的目录此处是NFS共享</span></span><br><span class=\"line\"><span class=\"attr\">      - name:</span> <span class=\"string\">timezone</span>     <span class=\"comment\"># 容器时区设置</span></span><br><span class=\"line\"><span class=\"attr\">        hostPath:</span></span><br><span class=\"line\"><span class=\"attr\">          path:</span> <span class=\"string\">/usr/share/zoneinfo/Asia/Shanghai</span></span><br><span class=\"line\"><span class=\"attr\">      containers:</span></span><br><span class=\"line\"><span class=\"attr\">      - name:</span> <span class=\"string\">java-maven</span></span><br><span class=\"line\"><span class=\"attr\">        image:</span> <span class=\"string\">harbor.weiyigeek.top/test/tomcat:8.5.61-jdk8-corretto</span>  <span class=\"comment\"># 拉取的镜像</span></span><br><span class=\"line\"><span class=\"attr\">        imagePullPolicy:</span> <span class=\"string\">IfNotPresent</span></span><br><span class=\"line\"><span class=\"attr\">        ports:</span></span><br><span class=\"line\"><span class=\"attr\">        - name:</span> <span class=\"string\">http</span>         <span class=\"comment\"># 此端口在服务中的名称</span></span><br><span class=\"line\"><span class=\"attr\">          containerPort:</span> <span class=\"number\">8080</span>  <span class=\"comment\"># 容器暴露的端口</span></span><br><span class=\"line\"><span class=\"attr\">        volumeMounts:</span>        <span class=\"comment\"># 挂载指定卷目录</span></span><br><span class=\"line\"><span class=\"attr\">        - name:</span> <span class=\"string\">webapps</span>      <span class=\"comment\"># Tomcat 应用目录</span></span><br><span class=\"line\"><span class=\"attr\">          mountPath:</span> <span class=\"string\">/usr/local/tomcat/webapps/ROOT</span></span><br><span class=\"line\"><span class=\"attr\">        - name:</span> <span class=\"string\">logs</span>         <span class=\"comment\"># Tomcat 日志目录</span></span><br><span class=\"line\"><span class=\"attr\">          mountPath:</span> <span class=\"string\">/usr/local/tomcat/logs</span></span><br><span class=\"line\"><span class=\"attr\">        - name:</span> <span class=\"string\">timezone</span>     <span class=\"comment\"># 镜像时区设置</span></span><br><span class=\"line\"><span class=\"attr\">          mountPath:</span> <span class=\"string\">/usr/share/zoneinfo/Asia/Shanghai</span></span><br><span class=\"line\"><span class=\"attr\">  volumeClaimTemplates:</span>      <span class=\"comment\"># 卷的体积要求模板此处采用StorageClass存储类主要针对于应用日志的存储;</span></span><br><span class=\"line\"><span class=\"attr\">  - metadata:</span>                <span class=\"comment\"># 根据模板自动创建PV与PVC并且进行一一对应绑定;</span></span><br><span class=\"line\"><span class=\"attr\">      name:</span> <span class=\"string\">logs</span>       </span><br><span class=\"line\"><span class=\"attr\">    spec:</span></span><br><span class=\"line\"><span class=\"attr\">      accessModes:</span> <span class=\"string\">[</span> <span class=\"string\">\"ReadWriteOnce\"</span> <span class=\"string\">]</span></span><br><span class=\"line\"><span class=\"attr\">      storageClassName:</span> <span class=\"string\">managed-nfs-storage</span> <span class=\"comment\"># StorageClass存储类</span></span><br><span class=\"line\"><span class=\"attr\">      resources:</span></span><br><span class=\"line\"><span class=\"attr\">        requests:</span></span><br><span class=\"line\"><span class=\"attr\">          storage:</span> <span class=\"number\">1</span><span class=\"string\">Gi</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br></pre></td></tr></table></figure></p>\n<p>资源清单构建:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) svc 与 stafefulset 资源创建</span></span><br><span class=\"line\">~/K8s/Day12$ kubectl apply -f jenkins-ci-gitlab-to-kubernetes.yaml</span><br><span class=\"line\">  <span class=\"comment\"># service/deploy-maven-svc created</span></span><br><span class=\"line\">  <span class=\"comment\"># statefulset.apps/deploy-java-maven created</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 查看创建的资源</span></span><br><span class=\"line\">~/K8s/Day12$ kubectl get svc | grep <span class=\"string\">\"deploy-maven-svc\"</span> &amp;&amp; kubectl get pod -l app=java-maven -o wide</span><br><span class=\"line\">  <span class=\"comment\"># deploy-maven-svc   NodePort    10.101.97.223    8080:30089/TCP  7m24s</span></span><br><span class=\"line\">  <span class=\"comment\"># NAME                  READY   STATUS    RESTARTS   AGE   IP             NODE        </span></span><br><span class=\"line\">  <span class=\"comment\"># deploy-java-maven-0   1/1     Running   0          10s   10.244.0.212   weiyigeek-ubuntu </span></span><br><span class=\"line\">  <span class=\"comment\"># deploy-java-maven-1   1/1     Running   0          25s   10.244.1.199   k8s-node-4  </span></span><br><span class=\"line\">  <span class=\"comment\"># deploy-java-maven-2   1/1     Running   0          29s   10.244.2.102   k8s-node-5</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (3) 访问验证</span></span><br><span class=\"line\">master$ curl -s http://10.101.97.223:8080 | grep <span class=\"string\">\"&lt;p&gt;\"</span></span><br><span class=\"line\">  <span class=\"comment\"># &lt;p&gt; Server : Apache Tomcat/8.5.61  | 10.244.2.102 &lt;/p&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># &lt;p&gt; Client : 10.244.0.0 | 10.244.0.0&lt;/p&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># &lt;p&gt; Document_Root : /usr/local/tomcat/webapps/ROOT/  &lt;br/&gt;&lt;br/&gt; URL : 10.101.97.223/index.jsp  &lt;/p&gt;</span></span><br><span class=\"line\">master$ curl -s http://10.101.97.223:8080 | grep <span class=\"string\">\"&lt;p&gt;\"</span></span><br><span class=\"line\">  <span class=\"comment\"># &lt;p&gt; Server : Apache Tomcat/8.5.61  | 10.244.0.212 &lt;/p&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># &lt;p&gt; Client : 10.244.0.1 | 10.244.0.1&lt;/p&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># &lt;p&gt; Document_Root : /usr/local/tomcat/webapps/ROOT/  &lt;br/&gt;&lt;br/&gt; URL : 10.101.97.223/index.jsp  &lt;/p&gt;</span></span><br><span class=\"line\">master$ curl -s http://10.101.97.223:8080 | grep <span class=\"string\">\"&lt;p&gt;\"</span></span><br><span class=\"line\">  <span class=\"comment\"># &lt;p&gt; Server : Apache Tomcat/8.5.61  | 10.244.1.199 &lt;/p&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># &lt;p&gt; Client : 10.244.0.0 | 10.244.0.0&lt;/p&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># &lt;p&gt; Document_Root : /usr/local/tomcat/webapps/ROOT/  &lt;br/&gt;&lt;br/&gt; URL : 10.101.97.223/index.jsp  &lt;/p&gt;</span></span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>Step 4.下面正餐开始了，在 Jenkins 控制台 <code>点击新建任务 -&gt; 输入任务名称(Maven-HelloWorld) -&gt; 选择构建一个Maven项目</code></li>\n</ul>\n<p>常规设置: 丢弃旧的构建 10 个、参数化构建过程 <code>Git 参数 git_version | 选项参数 deploy_option （deploy|rollback|redeploy）</code> (设置与上面相同 PS 注意排序方式为智能排序)</p>\n<p>关键点: Maven Build -&gt; <code>Goals and options : clean package -Dmaven.test.skip=true</code></p>\n<p>构建后脚本设置: Post Steps -&gt; 执行 Shell 命令 -&gt; <code>/bin/bash -x /tmp/script/maven-jenkins-ci-script.sh</code>-&gt; 应用并保存</p>\n<p>构建测试结果:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 项目拉取</span></span><br><span class=\"line\">Running as SYSTEM</span><br><span class=\"line\">Building <span class=\"keyword\">in</span> workspace /var/lib/jenkins/workspace/Maven-HelloWorld</span><br><span class=\"line\">The recommended git tool is: NONE</span><br><span class=\"line\">using credential b4c8b4e9-2777-44a1-a1ed-e9dc21d37f4f</span><br><span class=\"line\">Cloning the remote Git repository</span><br><span class=\"line\">Cloning repository git@gitlab.weiyigeek.top:ci-cd/java-maven.git</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;===[JENKINS REMOTING CAPACITY]===&gt;channel started</span><br><span class=\"line\">Executing Maven: -B -f /var/lib/jenkins/workspace/Maven-HelloWorld/pom.xml clean package -Dmaven.test.skip=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 扫描项目并下载依赖</span></span><br><span class=\"line\">[INFO] Scanning <span class=\"keyword\">for</span> projects...</span><br><span class=\"line\">[INFO] </span><br><span class=\"line\">[INFO] -------------------&lt; com.weiyigeek.main:hello-world &gt;-------------------</span><br><span class=\"line\">[INFO] Building hello-world Maven Webapp 1.1-SNAPSHOT</span><br><span class=\"line\">[INFO] --------------------------------[ war ]---------------------------------</span><br><span class=\"line\">[INFO] Downloading from weiyigeek-maven: http://maven.weiyigeek.top:8081/repository/maven-public/org/apache/maven/plugins/maven-clean-plugin/2.5/maven-clean-plugin-2.5.pom</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 打包应用</span></span><br><span class=\"line\">[INFO] Packaging webapp</span><br><span class=\"line\">[INFO] Assembling webapp [hello-world] <span class=\"keyword\">in</span> [/var/lib/jenkins/workspace/Maven-HelloWorld/target/hello-world]</span><br><span class=\"line\">[INFO] Processing war project</span><br><span class=\"line\">[INFO] Copying webapp resources [/var/lib/jenkins/workspace/Maven-HelloWorld/src/main/webapp]</span><br><span class=\"line\">[INFO] Webapp assembled <span class=\"keyword\">in</span> [26 msecs]</span><br><span class=\"line\">[INFO] Building war: /var/lib/jenkins/workspace/Maven-HelloWorld/target/hello-world.war</span><br><span class=\"line\">[INFO] WEB-INF/web.xml already added, skipping</span><br><span class=\"line\">[INFO] ------------------------------------------------------------------------</span><br><span class=\"line\">[INFO] BUILD SUCCESS</span><br><span class=\"line\">[INFO] ------------------------------------------------------------------------</span><br><span class=\"line\">[INFO] Total time:  6.756 s</span><br><span class=\"line\">[INFO] Finished at: 2020-12-25T13:55:45Z</span><br><span class=\"line\">[INFO] ------------------------------------------------------------------------</span><br><span class=\"line\">Waiting <span class=\"keyword\">for</span> Jenkins to finish collecting data</span><br><span class=\"line\">[JENKINS] Archiving /var/lib/jenkins/workspace/Maven-HelloWorld/pom.xml to com.weiyigeek.main/hello-world/1.1-SNAPSHOT/hello-world-1.1-SNAPSHOT.pom</span><br><span class=\"line\">[JENKINS] Archiving /var/lib/jenkins/workspace/Maven-HelloWorld/target/hello-world.war to com.weiyigeek.main/hello-world/1.1-SNAPSHOT/hello-world-1.1-SNAPSHOT.war</span><br><span class=\"line\">channel stopped</span><br><span class=\"line\">Finished: SUCCESS</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li><p>Step 5.Jenkins CI 部署Shell脚本编写,脚本需求部署、回退、可重复构建;<br>脚本与权限: <code>su - &quot;jenkins&quot; -c &quot;touch /tmp/script/maven-jenkins-ci-script.sh &amp;&amp; chmod a+x /tmp/script/maven-jenkins-ci-script.sh&quot;</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\"># Description: Jenkins CI &amp; Kubernetes &amp; Gitlab -&gt; Deploy or Rollback or Redeploy Java Maven Project</span></span><br><span class=\"line\">DATE=$(date +%Y%m%d-%H%M%S)</span><br><span class=\"line\">WAR_PATH=<span class=\"string\">\"/nfs/data4/war\"</span></span><br><span class=\"line\">WEBROOT_PATH=<span class=\"string\">\"/nfs/data4/webapps\"</span></span><br><span class=\"line\">WEB_DIR=<span class=\"string\">\"<span class=\"variable\">$&#123;JOB_NAME&#125;</span>-<span class=\"variable\">$&#123;DATE&#125;</span>-<span class=\"variable\">$&#123;git_version&#125;</span>\"</span></span><br><span class=\"line\">WAR_DIR=<span class=\"string\">\"<span class=\"variable\">$&#123;WAR_PATH&#125;</span>/<span class=\"variable\">$&#123;WEB_DIR&#125;</span>\"</span></span><br><span class=\"line\">WAR_NAME=<span class=\"string\">\"<span class=\"variable\">$&#123;WEB_DIR&#125;</span>.war\"</span></span><br><span class=\"line\">K8S_MATER=<span class=\"string\">\"weiyigeek@10.10.107.202\"</span></span><br><span class=\"line\">K8S_MATER_PORT=<span class=\"string\">\"20211\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 部署</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">deploy</span></span> () &#123;</span><br><span class=\"line\">  <span class=\"comment\"># 1.上传Maven打包的war包到master之中</span></span><br><span class=\"line\">  scp -P <span class=\"variable\">$&#123;K8S_MATER_PORT&#125;</span> <span class=\"variable\">$&#123;WORKSPACE&#125;</span>/target/*.war  weiyigeek@10.10.107.202:<span class=\"variable\">$&#123;WAR_PATH&#125;</span>/<span class=\"variable\">$&#123;WAR_NAME&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># 2.解压&amp;软链接</span></span><br><span class=\"line\">  ssh -p <span class=\"variable\">$&#123;K8S_MATER_PORT&#125;</span> <span class=\"variable\">$&#123;K8S_MATER&#125;</span> <span class=\"string\">\"unzip <span class=\"variable\">$&#123;WAR_PATH&#125;</span>/<span class=\"variable\">$&#123;WAR_NAME&#125;</span> -d <span class=\"variable\">$&#123;WAR_DIR&#125;</span> &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"string\">                                         rm -rf <span class=\"variable\">$&#123;WEBROOT_PATH&#125;</span> &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"string\">                                         ln -s <span class=\"variable\">$&#123;WAR_PATH&#125;</span>/<span class=\"variable\">$&#123;WEB_DIR&#125;</span> <span class=\"variable\">$&#123;WEBROOT_PATH&#125;</span> &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"string\">                                         kubectl delete pod -l app=java-maven\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 回退</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">rollback</span></span> () &#123;</span><br><span class=\"line\">  History_Version=$(ssh -p <span class=\"variable\">$&#123;K8S_MATER_PORT&#125;</span> <span class=\"variable\">$&#123;K8S_MATER&#125;</span> <span class=\"string\">\"find <span class=\"variable\">$&#123;WAR_PATH&#125;</span> -maxdepth 1 -type d -name <span class=\"variable\">$&#123;JOB_NAME&#125;</span>-*-<span class=\"variable\">$&#123;git_version&#125;</span>\"</span>)</span><br><span class=\"line\">  ssh -p <span class=\"variable\">$&#123;K8S_MATER_PORT&#125;</span> <span class=\"variable\">$&#123;K8S_MATER&#125;</span> <span class=\"string\">\"rm -rf <span class=\"variable\">$&#123;WEBROOT_PATH&#125;</span> &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"string\">                                         ln -s <span class=\"variable\">$&#123;History_Version&#125;</span> <span class=\"variable\">$&#123;WEBROOT_PATH&#125;</span> &amp;&amp; \\</span></span><br><span class=\"line\"><span class=\"string\">                                         kubectl delete pod -l app=java-maven\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重部署</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">redeploy</span></span> () &#123;</span><br><span class=\"line\">  <span class=\"comment\"># 如果是以前部署过则删除以前部署的项目目录,否则重新部署;</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> [[ <span class=\"string\">\"v<span class=\"variable\">$&#123;GIT_COMMIT&#125;</span>\"</span> = <span class=\"string\">\"v<span class=\"variable\">$&#123;GIT_PREVIOUS_SUCCESSFUL_COMMIT&#125;</span>\"</span> ]];<span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> -e <span class=\"string\">\"曾经部署过 <span class=\"variable\">$&#123;git_version&#125;</span> 版本，现在正在重新部署!\"</span></span><br><span class=\"line\">    History_Version=$(ssh -p <span class=\"variable\">$&#123;K8S_MATER_PORT&#125;</span> <span class=\"variable\">$&#123;K8S_MATER&#125;</span> <span class=\"string\">\"find <span class=\"variable\">$&#123;WAR_PATH&#125;</span> -maxdepth 1 -type d -name <span class=\"variable\">$&#123;JOB_NAME&#125;</span>-*-<span class=\"variable\">$&#123;git_version&#125;</span>\"</span>)</span><br><span class=\"line\">    ssh -p <span class=\"variable\">$&#123;K8S_MATER_PORT&#125;</span> <span class=\"variable\">$&#123;K8S_MATER&#125;</span> <span class=\"string\">\"rm -rf <span class=\"variable\">$&#123;History_Version&#125;</span>\"</span></span><br><span class=\"line\">  <span class=\"keyword\">fi</span></span><br><span class=\"line\">  <span class=\"comment\"># 物理如何都要重新部署</span></span><br><span class=\"line\">  deploy</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 部署 &amp; 回退 入口(坑-==两边没有空格)</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [[ <span class=\"string\">\"<span class=\"variable\">$&#123;deploy_option&#125;</span>\"</span> = <span class=\"string\">\"deploy\"</span> ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"comment\"># 坑 (防止字符串为空)</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> [[ <span class=\"string\">\"v<span class=\"variable\">$&#123;GIT_COMMIT&#125;</span>\"</span> = <span class=\"string\">\"v<span class=\"variable\">$&#123;GIT_PREVIOUS_SUCCESSFUL_COMMIT&#125;</span>\"</span> ]];<span class=\"keyword\">then</span></span><br><span class=\"line\">    <span class=\"built_in\">echo</span> -e <span class=\"string\">\"您已经部署过 <span class=\"variable\">$&#123;git_version&#125;</span> 版本\"</span></span><br><span class=\"line\">    <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    deploy</span><br><span class=\"line\">  <span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">elif</span> [[ <span class=\"string\">\"<span class=\"variable\">$&#123;deploy_option&#125;</span>\"</span> = <span class=\"string\">\"rollback\"</span> ]];<span class=\"keyword\">then</span></span><br><span class=\"line\">  rollback</span><br><span class=\"line\"><span class=\"keyword\">elif</span> [[ <span class=\"string\">\"<span class=\"variable\">$&#123;deploy_option&#125;</span>\"</span> = <span class=\"string\">\"redeploy\"</span> ]];<span class=\"keyword\">then</span> </span><br><span class=\"line\">  redeploy</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> -e <span class=\"string\">\"无任何操作！停止执行脚本\"</span></span><br><span class=\"line\">  <span class=\"built_in\">exit</span> 127</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 6.修改h1标签为我们的项目打几个Tag标签然后Push到仓库;</p>\n</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20201227095528.png\" alt=\"WeiyiGeek.show tags\" title=\"\" class=\"\">\n                <p>WeiyiGeek.show tags</p>\n            </figure>\n<ul>\n<li>Step 7.验证我们的构建的Maven项目以及推送构建的war到kubernetes集群之中(激动人心的时刻即将到来);</li>\n</ul>\n<p>PS: 查看任务控制台输出信息确定脚本部署没有任何问题，之后访问<code>http://10.10.107.202:30089/</code>查看编译的war运行在kunbernets中部署Tomcat应用的结果;</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20201227100756.png\" alt=\"WeiyiGeek.jenkins-ci-deploy\" title=\"\" class=\"\">\n                <p>WeiyiGeek.jenkins-ci-deploy</p>\n            </figure>\n<ul>\n<li>Step 8.回滚测试 构建参数: <code>deploy_option-&gt;rollback , git_version -&gt; v1.1</code><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 构建推送反馈</span></span><br><span class=\"line\">[Maven-HelloWorld] $ /bin/sh -xe /tmp/jenkins6930799554885763742.sh</span><br><span class=\"line\">+ /bin/bash -x /tmp/script/maven-jenkins-ci-script.sh</span><br><span class=\"line\">++ date +%Y%m%d-%H%M%S</span><br><span class=\"line\">+ DATE=20201227-021208</span><br><span class=\"line\">+ WAR_PATH=/nfs/data4/war</span><br><span class=\"line\">+ WEBROOT_PATH=/nfs/data4/webapps</span><br><span class=\"line\">+ WEB_DIR=Maven-HelloWorld-20201227-021208-v1.1</span><br><span class=\"line\">+ WAR_DIR=<span class=\"string\">'/nfs/data4/war/Maven-HelloWorld-20201227-021208-v1.1'</span></span><br><span class=\"line\">+ WAR_NAME=Maven-HelloWorld-20201227-021208-v1.1.war</span><br><span class=\"line\">+ K8S_MATER=weiyigeek@10.10.107.202</span><br><span class=\"line\">+ K8S_MATER_PORT=20211</span><br><span class=\"line\">+ [[ rollback = \\d\\e\\p\\l\\o\\y ]]</span><br><span class=\"line\">+ [[ rollback = \\r\\o\\l\\l\\b\\a\\c\\k ]]  <span class=\"comment\"># 进行回滚操作</span></span><br><span class=\"line\">+ rollback</span><br><span class=\"line\">++ ssh -p 20211 weiyigeek@10.10.107.202 <span class=\"string\">'find /nfs/data4/war -maxdepth 1 -type d -name Maven-HelloWorld-*-v1.1'</span></span><br><span class=\"line\">**************WARNING**************</span><br><span class=\"line\">Authorized only. All activity will be monitored and reported.</span><br><span class=\"line\">+ History_Version=/nfs/data4/war/Maven-HelloWorld-20201227-020140-v1.1  <span class=\"comment\"># 历史版本</span></span><br><span class=\"line\">+ ssh -p 20211 weiyigeek@10.10.107.202 <span class=\"string\">'rm -rf /nfs/data4/webapps &amp;&amp;                                          ln -s /nfs/data4/war/Maven-HelloWorld-20201227-020140-v1.1 /nfs/data4/webapps &amp;&amp;                                          kubectl delete pod -l app=java-maven'</span></span><br><span class=\"line\">**************WARNING**************</span><br><span class=\"line\">Authorized only. All activity will be monitored and reported.</span><br><span class=\"line\">pod <span class=\"string\">\"deploy-java-maven-0\"</span> deleted</span><br><span class=\"line\">pod <span class=\"string\">\"deploy-java-maven-1\"</span> deleted</span><br><span class=\"line\">pod <span class=\"string\">\"deploy-java-maven-2\"</span> deleted</span><br><span class=\"line\">Finished: SUCCESS</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 应用反馈 </span></span><br><span class=\"line\">http://10.10.107.202:30089/</span><br><span class=\"line\">  <span class=\"comment\"># Maven - Hello World - v1.1</span></span><br><span class=\"line\">  <span class=\"comment\"># 访问时间: Sun Dec 27 2020 10:12:18 GMT+0800 (中国标准时间)</span></span><br><span class=\"line\">  <span class=\"comment\"># Server : Apache Tomcat/8.5.61 | 10.244.1.203</span></span><br><span class=\"line\">  <span class=\"comment\"># Client : 10.244.0.0 | 10.244.0.0</span></span><br><span class=\"line\">  <span class=\"comment\"># Document_Root : /usr/local/tomcat/webapps/ROOT/</span></span><br><span class=\"line\">  <span class=\"comment\"># URL : 10.10.107.202/index.jsp</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li>Step 9.重部署测试 构建参数: <code>deploy_option-&gt;redeploy , git_version -&gt; v1.2</code><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 我们先来看看 war 目录的v1.2版本的文件与目录名称</span></span><br><span class=\"line\">/nfs/data4/war$ ls -alh | grep <span class=\"string\">\"-v1.2\"</span></span><br><span class=\"line\">drwxrwxr-x 4 weiyigeek weiyigeek 4.0K Dec 27 10:09 Maven-HelloWorld-20201227-020939-v1.2</span><br><span class=\"line\">-rw-r--r-- 1 weiyigeek weiyigeek 2.0M Dec 27 10:09 Maven-HelloWorld-20201227-020939-v1.2.war</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 项目重部署控制台信息输出</span></span><br><span class=\"line\">[Maven-HelloWorld] $ /bin/sh -xe /tmp/jenkins8520069315177369772.sh</span><br><span class=\"line\">channel stopped</span><br><span class=\"line\">+ /bin/bash -x /tmp/script/maven-jenkins-ci-script.sh</span><br><span class=\"line\">++ date +%Y%m%d-%H%M%S</span><br><span class=\"line\">+ DATE=20201227-021934</span><br><span class=\"line\">+ WAR_PATH=/nfs/data4/war</span><br><span class=\"line\">+ WEBROOT_PATH=/nfs/data4/webapps</span><br><span class=\"line\">+ WEB_DIR=Maven-HelloWorld-20201227-021934-v1.2</span><br><span class=\"line\">+ WAR_DIR=<span class=\"string\">'/nfs/data4/war/Maven-HelloWorld-20201227-021934-v1.2'</span></span><br><span class=\"line\">+ WAR_NAME=Maven-HelloWorld-20201227-021934-v1.2.war</span><br><span class=\"line\">+ K8S_MATER=weiyigeek@10.10.107.202</span><br><span class=\"line\">+ K8S_MATER_PORT=20211</span><br><span class=\"line\">+ [[ redeploy = \\d\\e\\p\\l\\o\\y ]]</span><br><span class=\"line\">+ [[ redeploy = \\r\\o\\l\\l\\b\\a\\c\\k ]]</span><br><span class=\"line\">+ [[ redeploy = \\r\\e\\d\\e\\p\\l\\o\\y ]]</span><br><span class=\"line\">+ redeploy   <span class=\"comment\"># 进入了重部署脚本选择</span></span><br><span class=\"line\">+ [[ ve8d88cf3e222b79259edcfb7ca48cee7b079ee08 = \\v\\e\\8\\d\\8\\8\\c\\f\\3\\e\\2\\2\\2\\b\\7\\9\\2\\5\\9\\e\\d\\c\\f\\b\\7\\c\\a\\4\\8\\c\\e\\e\\7\\b\\0\\7\\9\\e\\e\\0\\8 ]]</span><br><span class=\"line\">+ <span class=\"built_in\">echo</span> -e <span class=\"string\">'曾经部署过 v1.2 版本，现在正在重新部署!'</span></span><br><span class=\"line\">曾经部署过 v1.2 版本，现在正在重新部署!</span><br><span class=\"line\">++ ssh -p 20211 weiyigeek@10.10.107.202 <span class=\"string\">'find /nfs/data4/war -maxdepth 1 -type d -name Maven-HelloWorld-*-v1.2'</span></span><br><span class=\"line\">+ History_Version=/nfs/data4/war/Maven-HelloWorld-20201227-020939-v1.2</span><br><span class=\"line\">+ ssh -p 20211 weiyigeek@10.10.107.202 <span class=\"string\">'rm -rf /nfs/data4/war/Maven-HelloWorld-20201227-020939-v1.2'</span> <span class=\"comment\"># 删除了原来v1.2版本的war解压目录</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重新构建</span></span><br><span class=\"line\">+ deploy</span><br><span class=\"line\">+ scp -P 20211 /var/lib/jenkins/workspace/Maven-HelloWorld/target/hello-world.war weiyigeek@10.10.107.202:/nfs/data4/war/Maven-HelloWorld-20201227-021934-v1.2.war</span><br><span class=\"line\"><span class=\"comment\"># 解压上传的war 并创建软连接</span></span><br><span class=\"line\">+ ssh -p 20211 weiyigeek@10.10.107.202 <span class=\"string\">'unzip /nfs/data4/war/Maven-HelloWorld-20201227-021934-v1.2.war -d  /nfs/data4/war/Maven-HelloWorld-20201227-021934-v1.2 &amp;&amp;                                          rm -rf /nfs/data4/webapps &amp;&amp;                                          ln -s /nfs/data4/war/Maven-HelloWorld-20201227-021934-v1.2 /nfs/data4/webapps &amp;&amp;                                          kubectl delete pod -l app=java-maven'</span></span><br><span class=\"line\">Archive:  /nfs/data4/war/Maven-HelloWorld-20201227-021934-v1.2.war</span><br><span class=\"line\">   creating: /nfs/data4/war/Maven-HelloWorld-20201227-021934-v1.2/META-INF/</span><br><span class=\"line\">....</span><br><span class=\"line\">  inflating: /nfs/data4/war/Maven-HelloWorld-20201227-021934-v1.2/META-INF/maven/com.weiyigeek.main/hello-world/pom.properties  </span><br><span class=\"line\">pod <span class=\"string\">\"deploy-java-maven-0\"</span> deleted</span><br><span class=\"line\">pod <span class=\"string\">\"deploy-java-maven-1\"</span> deleted</span><br><span class=\"line\">pod <span class=\"string\">\"deploy-java-maven-2\"</span> deleted</span><br><span class=\"line\"></span><br><span class=\"line\">Finished: SUCCESS</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (3) 应用反馈</span></span><br><span class=\"line\">Maven - Hello World - v1.2</span><br><span class=\"line\">访问时间: Sun Dec 27 2020 10:20:03 GMT+0800 (中国标准时间)</span><br><span class=\"line\">Server : Apache Tomcat/8.5.61 | 10.244.2.107</span><br><span class=\"line\">Client : 10.244.0.0 | 10.244.0.0</span><br><span class=\"line\">Document_Root : /usr/<span class=\"built_in\">local</span>/tomcat/webapps/ROOT/</span><br><span class=\"line\">URL : 10.10.107.202/index.jsp</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>PS : 至此 Maven 与 Jenkins 集成实践完成</p>\n<p><strong>补充介绍: 除了上面在项目的Pom.xml中设置内部Maven服务器，我们可以可以采样下面两种方式指定配置文件</strong></p>\n<ul>\n<li>方式1.通过 curl 在构建前下载 Git 版本控制的 Maven 自定义的 setting.xml 配置文件（在我后面K8s中构建时会看见）。</li>\n<li>方式2.采用 <code>Managed file(可以配置 Maven 的全局配置文件和用户配置文件)</code> 和 <code>Maven Integration</code> 插件<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Config File Provider 插件使用配置文件</span></span><br><span class=\"line\">configFileProvider([configFile(<span class=\"string\">fileId:</span><span class=\"string\">'maven-global-settings'</span>,<span class=\"string\">variable:</span><span class=\"string\">'MAVEN_GLOBAL_ENV'</span>)]) &#123;</span><br><span class=\"line\">  sh <span class=\"string\">\"mvn -s $MAVEN_GLOBAL_ENV clean install\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Pipeline Maven Integration 插件使用配置文件</span></span><br><span class=\"line\">withMaven(</span><br><span class=\"line\">  <span class=\"comment\">// Maven installation declared in the Jenkins \"Global Tool Configuration\"</span></span><br><span class=\"line\"><span class=\"symbol\">  maven:</span> <span class=\"string\">'maven-3'</span>,</span><br><span class=\"line\">  <span class=\"comment\">// Maven settings.xml file defined with the Jenkins Config File Provider Plugin</span></span><br><span class=\"line\">  <span class=\"comment\">// We recommend to define Maven settings.xml globally at the folder level using </span></span><br><span class=\"line\">  <span class=\"comment\">// navigating to the folder configuration in the section \"Pipeline Maven Configuration / Override global Maven configuration\"</span></span><br><span class=\"line\">  <span class=\"comment\">// or globally to the entire master navigating to  \"Manage Jenkins / Global Tools Configuration\"</span></span><br><span class=\"line\"><span class=\"symbol\">  mavenSettingsConfig:</span> <span class=\"string\">'my-maven-settings'</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Run the maven build</span></span><br><span class=\"line\">    sh <span class=\"string\">\"mvn clean verify\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">  &#125; <span class=\"comment\">// withMaven will discover the generated Maven artifacts, JUnit Surefire &amp; FailSafe &amp; FindBugs &amp; SpotBugs reports...</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br></p>\n<h3 id=\"SonarQube-集成配置与实践\"><a href=\"#SonarQube-集成配置与实践\" class=\"headerlink\" title=\"SonarQube 集成配置与实践\"></a>SonarQube 集成配置与实践</h3><p>描述: 在Jenkins持续集成中中可以在构建代码前对我们项目进行一个代码质量扫描检测, 此处我们引入SonarQube进行实现;</p>\n<p><strong>操作流程:</strong></p>\n<ul>\n<li><p>Step 0.在 SonarQube Web中进行认证 Token 生成：(手工设置)_添加项目 -&gt; 项目标识 -&gt; 创建一个令牌 (Jenkins) -&gt;  得到Token;</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Jenkins: 755eeb453cb28f96aa9d4ea14334da7287c2e840</span><br><span class=\"line\"><span class=\"comment\"># 此令牌用于执行分析时认证时使用，如果这个令牌存在问题，可以随时在你的用户账号下取消这个令牌。</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 1.插件安装: 系统管理 -&gt; 插件管理 -&gt; <code>SonarQube Scanner for Jenkins</code>（）</p>\n</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20210103122648.png\" alt=\"WeiyiGeek.SonarQube Scanner for Jenkins\" title=\"\" class=\"\">\n                <p>WeiyiGeek.SonarQube Scanner for Jenkins</p>\n            </figure>\n<ul>\n<li>Step 2.在Jenkins系统管理-&gt;系统设置以及全局工具管理-&gt;上配置SonarQube相关配置(服务端地址，以及客户端工具地址);<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 服务端</span></span><br><span class=\"line\">Dashboard -&gt; 配置 -&gt; SonarQube servers -&gt; Add SonarQube 设置名称和SonarQube地址 -&gt; 添加Token凭据（类型：Secret Text） -&gt; Jenklins-Connet-Sonarqube-Token</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 客户端</span></span><br><span class=\"line\">Dashboard -&gt; 全局工具配置 -&gt; SonarQube Scanner -&gt; 名称（sonarqube-scanner） -&gt; 工具路径 （/usr/<span class=\"built_in\">local</span>/sonar）-&gt; 保存应用</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20210103124936.png\" alt=\"WeiyiGeek.Jenkins上SonarQube配置\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Jenkins上SonarQube配置</p>\n            </figure>\n<ul>\n<li><p>Step 3.应用项目分析实战在分析项目中配置<code>Analysis Properties</code>-&gt;保存和应用-&gt; 此时项目中会多一个SonarQube的图标;<br>PS : 下述图中有误应该是在<code>Pre Steps阶段(Execute SonarQube Scanner，其次 Build 构建即可)</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 构建前进行分析配置（名称、唯一标识、检测目录）</span></span><br><span class=\"line\">sonar.projectName=<span class=\"variable\">$&#123;JOB_NAME&#125;</span></span><br><span class=\"line\">sonar.projectKey=Jenkis</span><br><span class=\"line\">sonar.source=.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 已配置不需要了</span></span><br><span class=\"line\"><span class=\"comment\"># sonar.host.url=http://sonar.weiyigeek.top:9000 \\</span></span><br><span class=\"line\"><span class=\"comment\"># sonar.login=755eeb453cb28f96aa9d4ea14334da7287c2e840</span></span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20210103130352.png\" alt=\"WeiyiGeek.SonarQube Analysis Properties\" title=\"\" class=\"\">\n                <p>WeiyiGeek.SonarQube Analysis Properties</p>\n            </figure>\n</li>\n<li><p>Step 4.新建立一个V1.7Tag并上传到Gitlab之中，之后进行检测与构建操作-&gt;返回工程点击SonarQube 图标进行项目检测结果页面;</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">WeiyiGeek@WeiyiGeek MINGW64 /e/EclipseProject/hello-world (master)</span><br><span class=\"line\">$ git add .</span><br><span class=\"line\">$ git commit -m <span class=\"string\">\"v1.7\"</span></span><br><span class=\"line\">  <span class=\"comment\"># [master 0f50b10] v1.7</span></span><br><span class=\"line\">  <span class=\"comment\"># 1 file changed, 1 insertion(+), 1 deletion(-)</span></span><br><span class=\"line\">$ git tag -a <span class=\"string\">\"v1.7\"</span> -m <span class=\"string\">\"v1.7\"</span></span><br><span class=\"line\">$ git push</span><br><span class=\"line\">  <span class=\"comment\"># Enumerating objects: 11, done.</span></span><br><span class=\"line\">  <span class=\"comment\"># Counting objects: 100% (11/11), done.</span></span><br><span class=\"line\">  <span class=\"comment\"># .....</span></span><br><span class=\"line\">  <span class=\"comment\"># To http://gitlab.weiyigeek.top/ci-cd/java-maven.git</span></span><br><span class=\"line\">  <span class=\"comment\">#    3bfb942..0f50b10  master -&gt; master</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ git push origin v1.7</span><br><span class=\"line\">  <span class=\"comment\"># ...</span></span><br><span class=\"line\">  <span class=\"comment\"># To http://gitlab.weiyigeek.top/ci-cd/java-maven.git</span></span><br><span class=\"line\">  <span class=\"comment\"># * [new tag]         v1.7 -&gt; v1.7</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20210103131504.png\" alt=\"WeiyiGeek.SonarQube项目检测结果\" title=\"\" class=\"\">\n                <p>WeiyiGeek.SonarQube项目检测结果</p>\n            </figure>\n<ul>\n<li>Step 5.项目在K8s集群中部署结果<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># https://10.10.107.202:30089/</span></span><br><span class=\"line\">Maven - Hello World - v1.7</span><br><span class=\"line\">访问时间: Sun Jan 03 2021 13:20:34 GMT+0800 (中国标准时间)</span><br><span class=\"line\">Server : Apache Tomcat/8.5.61 | 10.244.2.111</span><br><span class=\"line\">Client : 10.244.0.0 | 10.244.0.0</span><br><span class=\"line\">Document_Root : /usr/<span class=\"built_in\">local</span>/tomcat/webapps/ROOT/</span><br><span class=\"line\">URL : 10.10.107.202/index.jsp</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br></p>\n<h3 id=\"邮箱-amp-钉钉-amp-微信消息通知-集成配置与实践\"><a href=\"#邮箱-amp-钉钉-amp-微信消息通知-集成配置与实践\" class=\"headerlink\" title=\"邮箱&amp;钉钉&amp;微信消息通知 集成配置与实践\"></a>邮箱&amp;钉钉&amp;微信消息通知 集成配置与实践</h3><p>描述: 在Jenkins中我们还有最重要的一步还没有完成, 即消息通知(让我们知道是构建成功还是、构建失败)等等, 常规的方式有邮箱通知、Shell自定义脚本通知，WebHook通知等;</p>\n<p>通知插件插件安装:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DingTalk : 钉钉 Jenkins 插件 2.4.3 (https://github.com/jenkinsci/dingtalk-plugin)</span><br><span class=\"line\">Qy Wechat Notification Plugin : 这个插件是一个机器人，可以发布构建状态和发送消息给qy微信. 1.0.2\t （https://www.jenkins.io/doc/pipeline/steps/qy-wechat-notification/）</span><br></pre></td></tr></table></figure></p>\n<p><strong>(0) 邮箱通知实践配置</strong><br>描述: 此处以腾讯企业邮箱为例进行配置,首先需要登陆将要被使用的邮箱，注意<code>必须要使用微信绑定后才能正常生成客户端专用密码</code>，然后开启SMTP服务;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 客户端设置方法</span></span><br><span class=\"line\">接收服务器：</span><br><span class=\"line\">imap.exmail.qq.com(使用SSL，端口号993)</span><br><span class=\"line\">发送服务器：</span><br><span class=\"line\">smtp.exmail.qq.com(使用SSL，端口号465)</span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20210104230227.png\" alt=\"WeiyiGeek.腾讯企业邮箱\" title=\"\" class=\"\">\n                <p>WeiyiGeek.腾讯企业邮箱</p>\n            </figure>\n<p>Step 1.在 <code>Dashboard -&gt; 系统配置 -&gt; Jenkins Location</code>进行配置系统管理员邮件地址，注意此处管理员邮箱地址必须与smtp服务发信地址一致否则将会报出<code>501 mail from address must be same as authorization user</code>错误;</p>\n<p>Step 2.设置发信邮箱相关配置，点击 <code>Dashboard -&gt; 系统配置 -&gt; 邮件通知</code> 填入 SMTP 发信服务器地址以及企业邮箱后缀，采用SSL协议并输入认证的账号与客户端专用密码，最后测试发信;</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20210106214943.png\" alt=\"WeiyiGeek.发信邮箱相关配置\" title=\"\" class=\"\">\n                <p>WeiyiGeek.发信邮箱相关配置</p>\n            </figure>\n<p>Step 3.构建项目通信发信测试，点击 <code>Dashboard -&gt; Maven-HelloWorld -&gt; 构建设置 -&gt; 启用E-mail Notification</code><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 收信人：Recipients</span></span><br><span class=\"line\"><span class=\"comment\"># 什么场景发送信息:</span></span><br><span class=\"line\">- 构建失败给每一个人发送发送电子邮件 : Send e-mail <span class=\"keyword\">for</span> every unstable build</span><br><span class=\"line\">- 谁构建失败给谁发送邮件: Send separate e-mails to individuals who broke the build</span><br><span class=\"line\">- 为每个失败的模块发送电子邮件 : Send e-mail <span class=\"keyword\">for</span> each failed module</span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/1/20210106220944.png\" alt=\"WeiyiGeek.项目通信发信测试\" title=\"\" class=\"\">\n                <p>WeiyiGeek.项目通信发信测试</p>\n            </figure>\n<p><strong>补充方式：</strong><br>描述: 由于Jenkins自带的邮件功能比较鸡肋，因此这里推荐安装专门的邮件插件(<code>Email Extension</code>)并介绍如何配置Jenkins自带的邮件功能作用。</p>\n<p>插件安装: 系统管理→管理插件→可选插件选择<code>Email Extension Plugin</code>插件进行安装<br>系统设置:</p>\n<ul>\n<li>1) 通过系统管理→系统设置，进行邮件配置 -&gt; Extended E-mail Notification -&gt; 输入 SMTP Server 相关信息以及Authentication相关设置(<code>注意:密码一般是邮箱授权码</code>)</li>\n<li>2) 设置其编码格式以及默认内容类型，以及邮件模板配置在 Extended E-mail的 default content -;<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- ^\\s*(?=\\r?$)\\n 正则替换空行 --&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>$&#123;ENV, var=\"JOB_NAME\"&#125;-第$&#123;BUILD_NUMBER&#125;次构建日志<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span> <span class=\"attr\">leftmargin</span>=<span class=\"string\">\"8\"</span> <span class=\"attr\">marginwidth</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">topmargin</span>=<span class=\"string\">\"8\"</span> <span class=\"attr\">marginheight</span>=<span class=\"string\">\"4\"</span> <span class=\"attr\">offset</span>=<span class=\"string\">\"0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">width</span>=<span class=\"string\">\"95%\"</span> <span class=\"attr\">cellpadding</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">cellspacing</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"font-size: 11pt; font-family: Tahoma, Arial, Helvetica, sans-serif\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>(本邮件由程序自动下发，请勿回复！)<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">font</span> <span class=\"attr\">color</span>=<span class=\"string\">\"#FF0000\"</span>&gt;</span>构建结果 - $&#123;BUILD_STATUS&#125;<span class=\"tag\">&lt;/<span class=\"name\">font</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">font</span> <span class=\"attr\">color</span>=<span class=\"string\">\"#0B610B\"</span>&gt;</span>构建信息<span class=\"tag\">&lt;/<span class=\"name\">font</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">b</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">hr</span> <span class=\"attr\">size</span>=<span class=\"string\">\"2\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"100%\"</span> <span class=\"attr\">align</span>=<span class=\"string\">\"center\"</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"$&#123;PROJECT_URL&#125;\"</span>&gt;</span>$&#123;PROJECT_URL&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>项目名称：$&#123;PROJECT_NAME&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>GIT路径：<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"$&#123;GIT_URL&#125;\"</span>&gt;</span>$&#123;GIT_URL&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span>                   </span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>构建编号：$&#123;BUILD_NUMBER&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span>                   </span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>触发原因：$&#123;CAUSE&#125;<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span>  </span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>构建日志：<span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"$&#123;BUILD_URL&#125;console\"</span>&gt;</span>$&#123;BUILD_URL&#125;console<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">b</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">font</span> <span class=\"attr\">color</span>=<span class=\"string\">\"#0B610B\"</span>&gt;</span>变更信息:<span class=\"tag\">&lt;/<span class=\"name\">font</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">b</span>&gt;</span></span><br><span class=\"line\">               <span class=\"tag\">&lt;<span class=\"name\">hr</span> <span class=\"attr\">size</span>=<span class=\"string\">\"2\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"100%\"</span> <span class=\"attr\">align</span>=<span class=\"string\">\"center\"</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>上次构建成功后变化 :  $&#123;CHANGES_SINCE_LAST_SUCCESS&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span>   </span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>上次构建不稳定后变化 :  $&#123;CHANGES_SINCE_LAST_UNSTABLE&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span>   </span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>历史变更记录 : <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"$&#123;PROJECT_URL&#125;changes\"</span>&gt;</span>$&#123;PROJECT_URL&#125;changes<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span>   </span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>变更集:$&#123;JELLY_SCRIPT,template=\"html\"&#125;<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span>   </span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">        &lt;tr&gt;</span></span><br><span class=\"line\"><span class=\"comment\">            &lt;td&gt;</span></span><br><span class=\"line\"><span class=\"comment\">                &lt;b&gt;&lt;font color=\"#0B610B\"&gt;Failed Test Results&lt;/font&gt;&lt;/b&gt;</span></span><br><span class=\"line\"><span class=\"comment\">                &lt;hr size=\"2\" width=\"100%\" align=\"center\" /&gt;</span></span><br><span class=\"line\"><span class=\"comment\">            &lt;/td&gt;</span></span><br><span class=\"line\"><span class=\"comment\">        &lt;/tr&gt;</span></span><br><span class=\"line\"><span class=\"comment\">        &lt;tr&gt;</span></span><br><span class=\"line\"><span class=\"comment\">            &lt;td&gt;</span></span><br><span class=\"line\"><span class=\"comment\">                &lt;pre style=\"font-size: 11pt; font-family: Tahoma, Arial, Helvetica, sans-serif\"&gt;$FAILED_TESTS&lt;/pre&gt;</span></span><br><span class=\"line\"><span class=\"comment\">                &lt;br /&gt;</span></span><br><span class=\"line\"><span class=\"comment\">            &lt;/td&gt;</span></span><br><span class=\"line\"><span class=\"comment\">        &lt;/tr&gt;</span></span><br><span class=\"line\"><span class=\"comment\">        &lt;tr&gt;</span></span><br><span class=\"line\"><span class=\"comment\">            &lt;td&gt;</span></span><br><span class=\"line\"><span class=\"comment\">                &lt;b&gt;&lt;font color=\"#0B610B\"&gt;构建日志 (最后 100行):&lt;/font&gt;&lt;/b&gt;</span></span><br><span class=\"line\"><span class=\"comment\">                &lt;hr size=\"2\" width=\"100%\" align=\"center\" /&gt;</span></span><br><span class=\"line\"><span class=\"comment\">            &lt;/td&gt;</span></span><br><span class=\"line\"><span class=\"comment\">        &lt;/tr&gt;--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- &lt;tr&gt;</span></span><br><span class=\"line\"><span class=\"comment\">            &lt;td&gt;Test Logs (if test has ran): &lt;a</span></span><br><span class=\"line\"><span class=\"comment\">                href=\"$&#123;PROJECT_URL&#125;ws/TestResult/archive_logs/Log-Build-$&#123;BUILD_NUMBER&#125;.zip\"&gt;$&#123;PROJECT_URL&#125;/ws/TestResult/archive_logs/Log-Build-$&#123;BUILD_NUMBER&#125;.zip&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\">                &lt;br /&gt;</span></span><br><span class=\"line\"><span class=\"comment\">            &lt;br /&gt;</span></span><br><span class=\"line\"><span class=\"comment\">            &lt;/td&gt;</span></span><br><span class=\"line\"><span class=\"comment\">        &lt;/tr&gt; --&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">        &lt;tr&gt;</span></span><br><span class=\"line\"><span class=\"comment\">            &lt;td&gt;</span></span><br><span class=\"line\"><span class=\"comment\">                &lt;textarea cols=\"80\" rows=\"30\" readonly=\"readonly\" style=\"font-family: Courier New\"&gt;$&#123;BUILD_LOG, maxLines=100,escapeHtml=true&#125;&lt;/textarea&gt;</span></span><br><span class=\"line\"><span class=\"comment\">            &lt;/td&gt;</span></span><br><span class=\"line\"><span class=\"comment\">        &lt;/tr&gt;--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">hr</span> <span class=\"attr\">size</span>=<span class=\"string\">\"2\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"100%\"</span> <span class=\"attr\">align</span>=<span class=\"string\">\"center\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n<li>3) 设置<code>Default Triggers</code>触发机制,例如下面是失败时候和成功时候发送;</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/1/20210126165150.png\" alt=\"WeiyiGeek.设置\" title=\"\" class=\"\">\n                <p>WeiyiGeek.设置</p>\n            </figure>\n<ul>\n<li>4) 在Job任务调用中选择构建后操作进行设置<code>Email Notification</code>进行设置通知</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/1/20210126170205.png\" alt=\"WeiyiGeek.Email-Notification\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Email-Notification</p>\n            </figure>\n<p><br></p>\n<p><strong>(1) 钉钉消息通知实践配置</strong><br>Step 0.在钉钉中建立一个群聊并且创建一个群机器人生成一个Webhook地址，操作如下图所示:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例如：https://oapi.dingtalk.com/robot/send?access_token=95f707645db08794166ed3aad3eaad363bb1475bf7c91635b7456a0a8c8893c6</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20210104233800.png\" alt=\"WeiyiGeek.钉钉群聊机器人添加\" title=\"\" class=\"\">\n                <p>WeiyiGeek.钉钉群聊机器人添加</p>\n            </figure></p>\n<p>Step 1.设置钉钉消息通知参数, 点击 <code>Dashboard -&gt; 系统配置 -&gt; 钉钉</code> 选择通知时机以及代理通信(<code>当该主机无法正常连接网络时可采用此方法</code>) -&gt; 点击新增(填入唯一的id、以及名称和webhook地址，注意<code>如果在创建机器人时指定了关键字和加密字符串需要填写上</code>)-&gt;然后测试发信;</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20210104234716.png\" alt=\"WeiyiGeek.钉钉消息通知参数\" title=\"\" class=\"\">\n                <p>WeiyiGeek.钉钉消息通知参数</p>\n            </figure>\n<p>Step 2.在FreeStyle风格的项目是可以在通用设置卡点选钉钉消息通知的，而Maven的项目是没有该点选选项，因为<code>该插件只支持FreeStyle和PIPELINE流水线</code>(这里有巨坑所以有的时候还是老版本的插件好用)，注意网上博客中关于大多数此问题都是不适用的官方文档才是第一手;</p>\n<p>参考连接: <a href=\"https://jenkinsci.github.io/dingtalk-plugin/examples/freestyleAdvanced.html#%E8%AF%A6%E7%BB%86%E6%97%A5%E5%BF%97\" target=\"_blank\" rel=\"noopener\">https://jenkinsci.github.io/dingtalk-plugin/examples/freestyleAdvanced.html#%E8%AF%A6%E7%BB%86%E6%97%A5%E5%BF%97</a></p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20210105002140.png\" alt=\"WeiyiGeek.FreeStyle风格构建的钉钉通知\" title=\"\" class=\"\">\n                <p>WeiyiGeek.FreeStyle风格构建的钉钉通知</p>\n            </figure>\n<p>PS : 对于其它项目风格的项目在后面我们将使用流水线PIPEline进行实现钉钉的消息通知； </p>\n<p><br/></p>\n<p><strong>(2) 企业微信通知实践配置</strong></p>\n<ul>\n<li>Step 1.设置企业微信通知全局参数，点击 <code>Dashboard -&gt; 系统配置 -&gt; 企业微信通知配置</code>设置构建环境名称(会在信息中显示)以及默认Webhook地址(全局的)、通知用户的Uid(@ALL表示全部)</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20210104223609.png\" alt=\"WeiyiGeek.企业微信全局参数\" title=\"\" class=\"\">\n                <p>WeiyiGeek.企业微信全局参数</p>\n            </figure>\n<ul>\n<li><p>Step 2.在构建任务中设置相应的通知参数，点击 <code>Dashboard -&gt; Maven-HelloWorld(项目名称) -&gt; 构建后的操作 -&gt; 选择企业微信</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># PS:此处输入的Webhook优先级高于全局的企业微信Webhook这样做的好处是便于为每个任务分配不同的Webhook;</span></span><br><span class=\"line\">Webhook地址: https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=c222f3fc-f645-440a-ad24-0ce8d9626f11</span><br><span class=\"line\">情况通知:</span><br><span class=\"line\">  仅失败才@</span><br><span class=\"line\">  发送开始构建信息</span><br><span class=\"line\">  仅失败才发送</span><br><span class=\"line\">  仅成功才发送</span><br><span class=\"line\">  仅构建中断才发送</span><br><span class=\"line\">  仅不稳定构建才发送</span><br><span class=\"line\">通知UserID: @ALL</span><br><span class=\"line\">通知手机号码: 选填</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 3.对 <code>Maven-HelloWorld</code> 项目进行构建并查看控制台输出,消息推送;</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 构建前发送</span></span><br><span class=\"line\">&gt; git config core.sparsecheckout <span class=\"comment\"># timeout=10</span></span><br><span class=\"line\">&gt; git checkout -f e8d88cf3e222b79259edcfb7ca48cee7b079ee08 <span class=\"comment\"># timeout=10</span></span><br><span class=\"line\">Commit message: <span class=\"string\">\"v1.2\"</span></span><br><span class=\"line\">&gt; git rev-list --no-walk e8d88cf3e222b79259edcfb7ca48cee7b079ee08 <span class=\"comment\"># timeout=10</span></span><br><span class=\"line\">推送通知 &#123;<span class=\"string\">\"markdown\"</span>:&#123;<span class=\"string\">\"content\"</span>:<span class=\"string\">\"Jenkins-Notify&lt;font color=\\\"info\\\"&gt;【Maven-HelloWorld】&lt;\\/font&gt;开始构建\\n &gt;构建参数：&lt;font color=\\\"comment\\\"&gt;git_version=v1.2, deploy_option=rollback &lt;\\/font&gt;\\n &gt;预计用时：&lt;font color=\\\"comment\\\"&gt;0分钟&lt;\\/font&gt;\\n &gt;[查看控制台](http://jenkins.weiyigeek.top:8080/job/Maven-HelloWorld/16/console)\"</span>&#125;,<span class=\"string\">\"msgtype\"</span>:<span class=\"string\">\"markdown\"</span>&#125;</span><br><span class=\"line\">通知结果 &#123;<span class=\"string\">\"errcode\"</span>:0,<span class=\"string\">\"errmsg\"</span>:<span class=\"string\">\"ok\"</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 构建部署后发送</span></span><br><span class=\"line\">+ ssh -p 20211 weiyigeek@10.10.107.202 <span class=\"string\">'rm -rf /nfs/data4/webapps &amp;&amp;  ln -s /nfs/data4/war/Maven-HelloWorld-20201227-021934-v1.2 /nfs/data4/webapps &amp;&amp; kubectl delete pod -l app=java-maven'</span></span><br><span class=\"line\">**************WARNING**************</span><br><span class=\"line\">Authorized only. All activity will be monitored and reported.</span><br><span class=\"line\">pod <span class=\"string\">\"deploy-java-maven-0\"</span> deleted</span><br><span class=\"line\">pod <span class=\"string\">\"deploy-java-maven-1\"</span> deleted</span><br><span class=\"line\">pod <span class=\"string\">\"deploy-java-maven-2\"</span> deleted</span><br><span class=\"line\">推送通知&#123;<span class=\"string\">\"markdown\"</span>:&#123;<span class=\"string\">\"content\"</span>:<span class=\"string\">\"Jenkins-Notify&lt;font color=\\\"info\\\"&gt;【Maven-HelloWorld】&lt;\\/font&gt;构建&lt;font color=\\\"info\\\"&gt;成功~&lt;\\/font&gt;👌\\n &gt;构建用时：&lt;font color=\\\"comment\\\"&gt;28 sec&lt;\\/font&gt;\\n &gt;[查看控制台](http://jenkins.weiyigeek.top:8080/job/Maven-HelloWorld/16/console)\"</span>&#125;,<span class=\"string\">\"msgtype\"</span>:<span class=\"string\">\"markdown\"</span>&#125;</span><br><span class=\"line\">通知结果&#123;<span class=\"string\">\"errcode\"</span>:0,<span class=\"string\">\"errmsg\"</span>:<span class=\"string\">\"ok\"</span>&#125;</span><br><span class=\"line\">项目运行结果[SUCCESS]</span><br><span class=\"line\">Finished: SUCCESS</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20210104223053.png\" alt=\"WeiyiGeek.企业微信通知实现效果\" title=\"\" class=\"\">\n                <p>WeiyiGeek.企业微信通知实现效果</p>\n            </figure>\n<hr>\n<h2 id=\"0x05-补充说明\"><a href=\"#0x05-补充说明\" class=\"headerlink\" title=\"0x05 补充说明\"></a>0x05 补充说明</h2><h3 id=\"1-内置环境变量\"><a href=\"#1-内置环境变量\" class=\"headerlink\" title=\"(1) 内置环境变量\"></a>(1) 内置环境变量</h3><p>PS : Jenkins 默认的环境变量列表 <a href=\"http://jenkins.weiyigeek.top:8080/env-vars.html/\" target=\"_blank\" rel=\"noopener\">http://jenkins.weiyigeek.top:8080/env-vars.html/</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BUILD_NUMBER </span><br><span class=\"line\">    <span class=\"comment\">#The current build number, such as \"153\"</span></span><br><span class=\"line\">BUILD_ID</span><br><span class=\"line\">    <span class=\"comment\"># The current build ID, identical to BUILD_NUMBER for builds created in 1.597+, but a YYYY-MM-DD_hh-mm-ss timestamp for older builds</span></span><br><span class=\"line\">BUILD_DISPLAY_NAME</span><br><span class=\"line\">    <span class=\"comment\"># The display name of the current build, which is something like \"#153\" by default.</span></span><br><span class=\"line\">JOB_NAME</span><br><span class=\"line\">    <span class=\"comment\"># Name of the project of this build, such as \"foo\" or \"foo/bar\".</span></span><br><span class=\"line\">JOB_BASE_NAME</span><br><span class=\"line\">    <span class=\"comment\"># Short Name of the project of this build stripping off folder paths, such as \"foo\" for \"bar/foo\".</span></span><br><span class=\"line\">BUILD_TAG</span><br><span class=\"line\">    <span class=\"comment\"># String of \"jenkins-$&#123;JOB_NAME&#125;-$&#123;BUILD_NUMBER&#125;\". All forward slashes (\"/\") in the JOB_NAME are replaced with dashes (\"-\"). Convenient to put into a resource file, a jar file, etc for easier identification.</span></span><br><span class=\"line\">EXECUTOR_NUMBER</span><br><span class=\"line\">    <span class=\"comment\"># The unique number that identifies the current executor (among executors of the same machine) that’s carrying out this build. This is the number you see in the \"build executor status\", except that the number starts from 0, not 1.</span></span><br><span class=\"line\">NODE_NAME</span><br><span class=\"line\">    <span class=\"comment\"># Name of the agent if the build is on an agent, or \"master\" if run on master</span></span><br><span class=\"line\">NODE_LABELS</span><br><span class=\"line\">    <span class=\"comment\"># Whitespace-separated list of labels that the node is assigned.</span></span><br><span class=\"line\">WORKSPACE</span><br><span class=\"line\">    <span class=\"comment\"># The absolute path of the directory assigned to the build as a workspace.</span></span><br><span class=\"line\">WORKSPACE_TMP</span><br><span class=\"line\">    <span class=\"comment\"># A temporary directory near the workspace that will not be browsable and will not interfere with SCM checkouts. May not initially exist, so be sure to create the directory as needed (e.g., mkdir -p on Linux). Not defined when the regular workspace is a drive root.</span></span><br><span class=\"line\">JENKINS_HOME</span><br><span class=\"line\">    <span class=\"comment\"># The absolute path of the directory assigned on the master node for Jenkins to store data.</span></span><br><span class=\"line\">JENKINS_URL</span><br><span class=\"line\">    <span class=\"comment\"># Full URL of Jenkins, like http://server:port/jenkins/ (note: only available if Jenkins URL set in system configuration)</span></span><br><span class=\"line\">BUILD_URL</span><br><span class=\"line\">    <span class=\"comment\"># Full URL of this build, like http://server:port/jenkins/job/foo/15/ (Jenkins URL must be set)</span></span><br><span class=\"line\">JOB_URL</span><br><span class=\"line\">    <span class=\"comment\"># Full URL of this job, like http://server:port/jenkins/job/foo/ (Jenkins URL must be set)</span></span><br><span class=\"line\">GIT_COMMIT</span><br><span class=\"line\">    <span class=\"comment\"># The commit hash being checked out.</span></span><br><span class=\"line\">GIT_PREVIOUS_COMMIT</span><br><span class=\"line\">    <span class=\"comment\"># The hash of the commit last built on this branch, if any.</span></span><br><span class=\"line\">GIT_PREVIOUS_SUCCESSFUL_COMMIT</span><br><span class=\"line\">    <span class=\"comment\"># The hash of the commit last successfully built on this branch, if any.</span></span><br><span class=\"line\">GIT_BRANCH</span><br><span class=\"line\">    <span class=\"comment\"># The remote branch name, if any.</span></span><br><span class=\"line\">GIT_LOCAL_BRANCH</span><br><span class=\"line\">    <span class=\"comment\"># The local branch name being checked out, if applicable.</span></span><br><span class=\"line\">GIT_CHECKOUT_DIR</span><br><span class=\"line\">    <span class=\"comment\"># The directory that the repository will be checked out to. This contains the value set in Checkout to a sub-directory, if used.</span></span><br><span class=\"line\">GIT_URL</span><br><span class=\"line\">    <span class=\"comment\"># The remote URL. If there are multiple, will be GIT_URL_1, GIT_URL_2, etc.</span></span><br><span class=\"line\">GIT_COMMITTER_NAME</span><br><span class=\"line\">    <span class=\"comment\"># The configured Git committer name, if any, that will be used for FUTURE commits from the current workspace. It is read from the Global Config user.name Value field of the Jenkins Configure System page.</span></span><br><span class=\"line\">GIT_AUTHOR_NAME</span><br><span class=\"line\">    <span class=\"comment\"># The configured Git author name, if any, that will be used for FUTURE commits from the current workspace. It is read from the Global Config user.name Value field of the Jenkins Configure System page.</span></span><br><span class=\"line\">GIT_COMMITTER_EMAIL</span><br><span class=\"line\">    <span class=\"comment\"># The configured Git committer email, if any, that will be used for FUTURE commits from the current workspace. It is read from the Global Config user.email Value field of the Jenkins Configure System page.</span></span><br><span class=\"line\">GIT_AUTHOR_EMAIL</span><br><span class=\"line\">    <span class=\"comment\"># The configured Git author email, if any, that will be used for FUTURE commits from the current workspace. It is read from the Global Config user.email Value field of the Jenkins Configure System page.</span></span><br></pre></td></tr></table></figure>\n<p>测试环境变量:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> BUILD_NUMBER: <span class=\"variable\">$&#123;BUILD_NUMBER &#125;</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"built_in\">echo</span> BUILD_ID: <span class=\"variable\">$&#123;BUILD_ID&#125;</span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">echo</span> BUILD_DISPLAY_NAME: <span class=\"variable\">$BUILD_DISPLAY_NAME</span>:</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">echo</span> JOB_NAME: <span class=\"variable\">$JOB_NAME</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"built_in\">echo</span> JOB_BASE_NAME: <span class=\"variable\">$JOB_BASE_NAME</span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">echo</span> BUILD_TAG: <span class=\"variable\">$BUILD_TAG</span></span><br><span class=\"line\">   </span><br><span class=\"line\"><span class=\"built_in\">echo</span> EXECUTOR_NUMBER: <span class=\"variable\">$EXECUTOR_NUMBER</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"built_in\">echo</span> NODE_NAME: <span class=\"variable\">$NODE_NAME</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> NODE_LABELS: <span class=\"variable\">$NODE_LABELS</span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">echo</span> WORKSPACE: <span class=\"variable\">$WORKSPACE</span></span><br><span class=\"line\">   </span><br><span class=\"line\"><span class=\"built_in\">echo</span> WORKSPACE_TMP: <span class=\"variable\">$WORKSPACE_TMP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> JENKINS_HOME: <span class=\"variable\">$JENKINS_HOME</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> JENKINS_URL: <span class=\"variable\">$JENKINS_URL</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> BUILD_URL: <span class=\"variable\">$BUILD_URL</span></span><br><span class=\"line\">   </span><br><span class=\"line\"><span class=\"built_in\">echo</span> JOB_URL: <span class=\"variable\">$JOB_URL</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> GIT_COMMIT: <span class=\"variable\">$GIT_COMMIT</span></span><br><span class=\"line\">   </span><br><span class=\"line\"><span class=\"built_in\">echo</span> GIT_PREVIOUS_COMMIT: <span class=\"variable\">$GIT_PREVIOUS_COMMIT</span></span><br><span class=\"line\">   </span><br><span class=\"line\"><span class=\"built_in\">echo</span> GIT_PREVIOUS_SUCCESSFUL_COMMIT: <span class=\"variable\">$GIT_PREVIOUS_SUCCESSFUL_COMMIT</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"built_in\">echo</span> GIT_BRANCH: <span class=\"variable\">$GIT_BRANCH</span></span><br><span class=\"line\">   </span><br><span class=\"line\"><span class=\"built_in\">echo</span> GIT_LOCAL_BRANCH: <span class=\"variable\">$GIT_LOCAL_BRANCH</span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">echo</span> GIT_CHECKOUT_DIR: <span class=\"variable\">$GIT_CHECKOUT_DIR</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> GIT_URL: <span class=\"variable\">$GIT_URL</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> GIT_COMMITTER_NAME: <span class=\"variable\">$GIT_COMMITTER_NAME</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> GIT_AUTHOR_NAME: <span class=\"variable\">$GIT_AUTHOR_NAME</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"built_in\">echo</span> GIT_COMMITTER_EMAIL: <span class=\"variable\">$GIT_COMMITTER_EMAIL</span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">echo</span> GIT_AUTHOR_EMAIL: <span class=\"variable\">$GIT_AUTHOR_EMAIL</span></span><br></pre></td></tr></table></figure></p>\n<p>测试结果:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ /bin/bash /tmp/script/env.sh</span><br><span class=\"line\">BUILD_NUMBER: 22</span><br><span class=\"line\">BUILD_ID: 22</span><br><span class=\"line\">BUILD_DISPLAY_NAME: <span class=\"comment\">#22:</span></span><br><span class=\"line\">JOB_NAME: Maven-HelloWorld</span><br><span class=\"line\">JOB_BASE_NAME: Maven-HelloWorld</span><br><span class=\"line\">BUILD_TAG: jenkins-Maven-HelloWorld-22</span><br><span class=\"line\">EXECUTOR_NUMBER: 0</span><br><span class=\"line\">NODE_NAME: master</span><br><span class=\"line\">NODE_LABELS: master</span><br><span class=\"line\">WORKSPACE: /var/lib/jenkins/workspace/Maven-HelloWorld</span><br><span class=\"line\">WORKSPACE_TMP: /var/lib/jenkins/workspace/Maven-HelloWorld@tmp</span><br><span class=\"line\">JENKINS_HOME: /var/lib/jenkins</span><br><span class=\"line\">JENKINS_URL: http://jenkins.weiyigeek.top:8080/</span><br><span class=\"line\">BUILD_URL: http://jenkins.weiyigeek.top:8080/job/Maven-HelloWorld/22/</span><br><span class=\"line\">JOB_URL: http://jenkins.weiyigeek.top:8080/job/Maven-HelloWorld/</span><br><span class=\"line\">GIT_COMMIT: 0f50b10b09c160a86972178d94ca1f0a704dd767</span><br><span class=\"line\">GIT_PREVIOUS_COMMIT: 0f50b10b09c160a86972178d94ca1f0a704dd767</span><br><span class=\"line\">GIT_PREVIOUS_SUCCESSFUL_COMMIT: 0f50b10b09c160a86972178d94ca1f0a704dd767</span><br><span class=\"line\">GIT_BRANCH: v1.7</span><br><span class=\"line\">GIT_URL: git@gitlab.weiyigeek.top:ci-cd/java-maven.git</span><br><span class=\"line\">GIT_AUTHOR_NAME:</span><br><span class=\"line\">GIT_AUTHOR_EMAIL:</span><br><span class=\"line\">GIT_COMMITTER_NAME:</span><br><span class=\"line\">GIT_COMMITTER_EMAIL:</span><br><span class=\"line\">GIT_LOCAL_BRANCH:</span><br><span class=\"line\">GIT_CHECKOUT_DIR:</span><br><span class=\"line\">Finished: SUCCESS</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<h3 id=\"2-Jenkins-管理员密码忘记重置\"><a href=\"#2-Jenkins-管理员密码忘记重置\" class=\"headerlink\" title=\"(2) Jenkins 管理员密码忘记重置\"></a>(2) Jenkins 管理员密码忘记重置</h3><p>1.找到用户的路径<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@jenkins-node1 ~]<span class=\"comment\"># cd /var/lib/jenkins/users/</span></span><br><span class=\"line\">[root@jenkins-node1 users]<span class=\"comment\"># tree</span></span><br><span class=\"line\">.</span><br><span class=\"line\">├── 552408925_8628634723176281851</span><br><span class=\"line\">│   └── config.xml</span><br><span class=\"line\">├── admin_8092868597319509744</span><br><span class=\"line\">│   └── config.xml</span><br><span class=\"line\">├── jenkins_3327043579358903316     <span class=\"comment\">#我使用的jenkins作为管理员(如果你是admin就进admin目录)</span></span><br><span class=\"line\">│   └── config.xml                  <span class=\"comment\">#修改config.xml</span></span><br><span class=\"line\">└── users.xml</span><br><span class=\"line\"></span><br><span class=\"line\">3 directories, 4 files</span><br></pre></td></tr></table></figure></p>\n<p>2.修改jenkins用户目录下的config.xml，定位到<code>&lt;passwordHash&gt;</code>那行删除，改为如下内容-<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@jenkins-node1 users]<span class=\"comment\"># vim config.xml</span></span><br><span class=\"line\">&lt;passwordHash&gt;<span class=\"comment\">#jbcrypt:$2a$10$slYx6.2Xyss6w9LnuiwnNOReuvkcSkaI.Y.Z2AC6Sp7hdF7hhxlsK&lt;/passwordHash&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>3.新密码为bgx.com 记得重启jenkins生效</p>\n<p><br/></p>\n<h3 id=\"3-Jenkins-升级迁移\"><a href=\"#3-Jenkins-升级迁移\" class=\"headerlink\" title=\"(3) Jenkins 升级迁移\"></a>(3) Jenkins 升级迁移</h3><p>描述: 在使用 Jenkins 时候显示新版本的 Jenkins (2.272) 可以下载 (变更记录)，正好可以实践一哈Jenkins的升级&amp;迁移。<br>PS : 如果是是在生产环境中升级建议慎重，可能会导致插件和升级版本不兼容的情况; </p>\n<p>操作流程:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 下载更新包 </span></span><br><span class=\"line\">wget https://updates.jenkins.io/download/war/2.272/jenkins.war </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 停止 Jenkins 服务</span></span><br><span class=\"line\">jenkins:/usr/share/jenkins<span class=\"comment\"># systemctl stop jenkins &amp;&amp; ls</span></span><br><span class=\"line\">  <span class=\"comment\"># jenkins.war</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (3) 备份上一个版本</span></span><br><span class=\"line\">jenkins:/usr/share/jenkins<span class=\"comment\"># mv jenkins.war jenkins.war.2.263.1.bak</span></span><br><span class=\"line\">jenkins:/usr/share/jenkins<span class=\"comment\"># cp /home/weiyigeek/jenkins.war jenkins.war</span></span><br><span class=\"line\">jenkins:/usr/share/jenkins<span class=\"comment\"># ls -alh</span></span><br><span class=\"line\">  <span class=\"comment\"># -rw-r--r--   1 root root  67M Dec 24 02:38 jenkins.war</span></span><br><span class=\"line\">  <span class=\"comment\"># -rw-r--r--   1 root root  65M Dec  2 13:56 jenkins.war.2.263.1.bak</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (4) 启动 Jenkins 服务</span></span><br><span class=\"line\">jenkins:/usr/share/jenkins<span class=\"comment\"># systemctl start jenkins</span></span><br><span class=\"line\">jenkins:/usr/share/jenkins<span class=\"comment\"># systemctl status jenkins</span></span><br><span class=\"line\">  <span class=\"comment\"># ● jenkins.service - LSB: Start Jenkins at boot time</span></span><br><span class=\"line\">  <span class=\"comment\">#     Loaded: loaded (/etc/init.d/jenkins; generated)</span></span><br><span class=\"line\">  <span class=\"comment\">#     Active: active (exited) since Thu 2020-12-24 02:38:50 UTC; 4s ago</span></span><br><span class=\"line\">  <span class=\"comment\">#       Docs: man:systemd-sysv-generator(8)</span></span><br><span class=\"line\">  <span class=\"comment\">#     Process: 448375 ExecStart=/etc/init.d/jenkins start (code=exited, status=0/SUCCESS)</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Dec 24 02:38:48 gitlab systemd[1]: Starting LSB: Start Jenkins at boot time...</span></span><br><span class=\"line\">  <span class=\"comment\"># Dec 24 02:38:48 gitlab jenkins[448375]: Correct java version found</span></span><br><span class=\"line\">  <span class=\"comment\"># Dec 24 02:38:48 gitlab jenkins[448375]:  * Starting Jenkins Automation Server jenkins</span></span><br><span class=\"line\">  <span class=\"comment\"># Dec 24 02:38:48 gitlab su[448432]: (to jenkins) root on none</span></span><br><span class=\"line\">  <span class=\"comment\"># Dec 24 02:38:48 gitlab su[448432]: pam_unix(su-l:session): session opened for user jenkins by (uid=0)</span></span><br><span class=\"line\">  <span class=\"comment\"># Dec 24 02:38:49 gitlab su[448432]: pam_unix(su-l:session): session closed for user jenkins</span></span><br><span class=\"line\">  <span class=\"comment\"># Dec 24 02:38:50 gitlab jenkins[448375]:    ...done.</span></span><br><span class=\"line\">  <span class=\"comment\"># Dec 24 02:38:50 gitlab systemd[1]: Started LSB: Start Jenkins at boot time.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (5) 访问 Jenkins UI 界面验证升级版本</span></span><br><span class=\"line\">http://jenkins.weiyigeek.top:8080/about/</span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20201224104730.png\" alt=\"WeiyiGeek.Jenkins UI\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Jenkins UI</p>\n            </figure>\n<hr>\n<h2 id=\"0x06-入坑-amp-出坑\"><a href=\"#0x06-入坑-amp-出坑\" class=\"headerlink\" title=\"0x06 入坑&amp;出坑\"></a>0x06 入坑&amp;出坑</h2><p><strong>问题1.jenkins depends on daemon; however Package daemon is not installed.</strong><br>问题描述: 在Ubuntu 采用 dpkg 安装 jenkins_2.263.1_all.deb 时报错提示 daemon 包未安装<br>问题复原:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo dpkg -i jenkins_2.263.1_all.deb</span><br><span class=\"line\">Selecting previously unselected package jenkins.</span><br><span class=\"line\">(Reading database ... 115038 files and directories currently installed.)</span><br><span class=\"line\">Preparing to unpack jenkins_2.263.1_all.deb ...</span><br><span class=\"line\">Unpacking jenkins (2.263.1) ...</span><br><span class=\"line\">dpkg: dependency problems prevent configuration of jenkins:</span><br><span class=\"line\"> jenkins depends on daemon; however:</span><br><span class=\"line\">  Package daemon is not installed.</span><br><span class=\"line\"></span><br><span class=\"line\">dpkg: error processing package jenkins (--install):</span><br><span class=\"line\"> dependency problems - leaving unconfigured</span><br><span class=\"line\">Processing triggers <span class=\"keyword\">for</span> systemd (245.4-4ubuntu3.2) ...</span><br><span class=\"line\">Errors were encountered <span class=\"keyword\">while</span> processing:</span><br><span class=\"line\"> jenkins</span><br></pre></td></tr></table></figure><br>解决办法:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install -y daemon</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p><strong>问题2:Jenkins 启动时显示 ERROR: No Java executable found in current PATH: /bin:/usr/bin:/sbin:/usr/sbin</strong><br>问题复原:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ systemctl status jenkins</span><br><span class=\"line\">Dec 23 14:02:57 gitlab systemd[1]: Starting LSB: Start Jenkins at boot time...</span><br><span class=\"line\">Dec 23 14:02:57 gitlab jenkins[356298]: ERROR: No Java executable found <span class=\"keyword\">in</span> current PATH: /bin:/usr/bin:/sbin:/usr/sbin</span><br><span class=\"line\">Dec 23 14:02:57 gitlab jenkins[356298]: If you actually have java installed on the system make sure the executable is <span class=\"keyword\">in</span> the aforementioned path and that <span class=\"string\">'type -p ja&gt;</span></span><br><span class=\"line\"><span class=\"string\">Dec 23 14:02:57 gitlab systemd[1]: jenkins.service: Control process exited, code=exited, status=1/FAILURE</span></span><br><span class=\"line\"><span class=\"string\">Dec 23 14:02:57 gitlab systemd[1]: jenkins.service: Failed with result '</span><span class=\"built_in\">exit</span>-code<span class=\"string\">'.</span></span><br><span class=\"line\"><span class=\"string\">Dec 23 14:02:57 gitlab systemd[1]: Failed to start LSB: Start Jenkins at boot time.</span></span><br></pre></td></tr></table></figure><br>问题原因: 未找寻到有效的Java执行环境;<br>解决流程:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">①.先执行echo $PATH 看看环境变量运行结果如下：</span><br><span class=\"line\">&#x2F;usr&#x2F;maven&#x2F;maven&#x2F;bin:&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;sbin:&#x2F;bin:&#x2F;usr&#x2F;games:&#x2F;usr&#x2F;local&#x2F;games:&#x2F;usr&#x2F;java&#x2F;jdk1.8&#x2F;bin</span><br><span class=\"line\">如果连这都没有的话重新安装Java。</span><br><span class=\"line\"></span><br><span class=\"line\">②.建立软连接：ln -s &#x2F;usr&#x2F;java&#x2F;jdk1.8&#x2F;bin&#x2F;java &#x2F;usr&#x2F;bin&#x2F;java（换成你自己的路径）</span><br><span class=\"line\">Please wait while Jenkins is getting ready to work (jenkins)</span><br><span class=\"line\">如果界面提示Jenkins正在启动,请稍后…或者提示</span><br><span class=\"line\">Please wait while Jenkins is getting ready to work…</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>问题3.安装Jenkins后或者安装插件时候一直在加载;</strong><br>问题描述: 由于Jenkins官方插件下载地址没被墙但是网速很慢，下载时间也长;<br>解决方法:换清华的镜像进去之后下载插件即可 (<a href=\"http://updates.jenkins-ci.org/download/\" target=\"_blank\" rel=\"noopener\">http://updates.jenkins-ci.org/download/</a>)<br>操作流程: 需要你进入jenkins的工作目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 打开 hudson.model.UpdateCenter.xml 把 http://updates.jenkins-ci.org/update-center.json 改成 http://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</span></span><br><span class=\"line\">sed -i <span class=\"string\">\"s#updates.jenkins.io#mirrors.tuna.tsinghua.edu.cn/jenkins/updates#g\"</span> /var/lib/jenkins/hudson.model.UpdateCenter.xml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 上面的命令就是将将安装目录下的 hudson.model.UpdateCenter.xml 中改成</span></span><br><span class=\"line\">&lt;?xml version=<span class=\"string\">'1.1'</span> encoding=<span class=\"string\">'UTF-8'</span>?&gt;</span><br><span class=\"line\">&lt;sites&gt;</span><br><span class=\"line\">  &lt;site&gt;</span><br><span class=\"line\">    &lt;id&gt;default&lt;/id&gt;</span><br><span class=\"line\">    &lt;url&gt;https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json&lt;/url&gt;</span><br><span class=\"line\">  &lt;/site&gt;</span><br><span class=\"line\">&lt;/sites&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 将updates文件夹下的default.json 中所有 http://updates.jenkins-ci.org/download/替换为 https://mirrors.tuna.tsinghua.edu.cn/jenkins/ PS: 也可以在后台进行设置</span></span><br><span class=\"line\">https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (3) 修改完成后重启 Jenkins 即可</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20201223222542.png\" alt=\"WeiyiGeek.Jenkins Please wait\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Jenkins Please wait</p>\n            </figure>\n<p><br></p>\n<p><strong>问题4: 未正确配置Jenkins基础URL等相关信息;</strong><br>问题描述: Jenkins的根URL是空的，但是需要Jenkins的许多特性的正确操作，如电子邮件通知、PR状态更新和环境变量，如BUILD_URL。<br>请提供Jenkins配置中的准确值。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Jenkins root URL is empty but is required <span class=\"keyword\">for</span> the proper operation of many Jenkins features like email notifications, PR status update, and environment variables such as BUILD_URL.</span><br><span class=\"line\"></span><br><span class=\"line\">Please provide an accurate value <span class=\"keyword\">in</span> Jenkins configuration.</span><br></pre></td></tr></table></figure><br>解决办法: Dashboard -&gt; 配置 -&gt; Jenkins Location -&gt; Jenkins 地址 &amp; 邮箱</p>\n<p><br></p>\n<p><strong>问题5.无法连接仓库：Command “git ls-remote -h – <a href=\"mailto:git@gitlab.weiyigeek.top\">git@gitlab.weiyigeek.top</a>:ci-cd/blog.git HEAD” returned status code 128:</strong><br>问题复原:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">stdout:</span><br><span class=\"line\">  stderr: Host key verification failed.</span><br><span class=\"line\">  fatal: Could not <span class=\"built_in\">read</span> from remote repository.</span><br><span class=\"line\"><span class=\"comment\"># Please make sure you have the correct access rights and the repository exists.</span></span><br></pre></td></tr></table></figure><br>问题原因: 由于采用SSH协议进行代码的拉取和信息的查看，在利用公密钥首次链接时候未绑定其机器的公钥信息, 将会导致 <code>Host key verification failed.</code><br>解决办法: 在连接的机器上先执行<code>git -T git@gitlab.weiyigeek.top</code>保存其主机的公钥信息;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 例如 首次连接Gitlab时候需要进行主机于公钥绑定</span></span><br><span class=\"line\">ssh -T git@gitlab.com</span><br><span class=\"line\"><span class=\"comment\"># 无法建立主机“gitlab.com(172.65.251.78)”的真实性。</span></span><br><span class=\"line\">The authenticity of host <span class=\"string\">'gitlab.com (172.65.251.78)'</span> can\\<span class=\"string\">'t be established.</span></span><br><span class=\"line\"><span class=\"string\">ECDSA key fingerprint is SHA256:HbW3g8zUjNSksFbqTiUWPWg2Bq1x8xdGUrliXFzSnUw.</span></span><br><span class=\"line\"><span class=\"string\">Are you sure you want to continue connecting (yes/no/[fingerprint])?</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">$ cat ~/.ssh/known_hosts</span></span><br><span class=\"line\"><span class=\"string\">gitlab.com,172.65.251.78 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAABFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QOLXBpQ6KWjbjTDTdDkoohFzgbEYI=</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>问题6.Jenkins 内置邮件通知发信测试 Failed to send out e-mail javax.mail.AuthenticationFailedException: 535 Error:</strong><br>错误信息：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Failed to send out e-mail</span><br><span class=\"line\">javax.mail.AuthenticationFailedException: 535 Error: ÇëÊ¹ÓÃÊÚÈ¨ÂëµÇÂ¼¡£ÏêÇéÇë¿´: http://service.mail.qq.com/cgi-bin/<span class=\"built_in\">help</span>?subtype=1&amp;&amp;id=28&amp;&amp;no=1001256</span><br><span class=\"line\"></span><br><span class=\"line\">  at com.sun.mail.smtp.SMTPTransport<span class=\"variable\">$Authenticator</span>.authenticate(SMTPTransport.java:947)</span><br><span class=\"line\">  at com.sun.mail.smtp.SMTPTransport.authenticate(SMTPTransport.java:858)</span><br><span class=\"line\">  at com.sun.mail.smtp.SMTPTransport.protocolConnect(SMTPTransport.java:762)</span><br><span class=\"line\">  at javax.mail.Service.connect(Service.java:364)</span><br></pre></td></tr></table></figure><br>错误原因: 配置STMP的邮箱账号，输入的认证字符串是邮箱密码而并非生成的客户端密码, 在 腾讯企业邮箱、163邮箱都需要使用生成的客户端密码进行登录;</p>\n<p><br></p>\n<p><strong>问题7.Jenkins 内置邮件通知发信测试 com.sun.mail.smtp.SMTPSenderFailedException: 501 mail from address must be same as authorization user</strong><br>错误信息:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Failed to send out e-mail</span><br><span class=\"line\">com.sun.mail.smtp.SMTPSenderFailedException: 501 mail from address must be same as authorization user</span><br><span class=\"line\">  at com.sun.mail.smtp.SMTPTransport.mailFrom(SMTPTransport.java:1817)</span><br><span class=\"line\">Caused: com.sun.mail.smtp.SMTPSendFailedException: 501 mail from address must be same as authorization user</span><br><span class=\"line\">;</span><br><span class=\"line\">  nested exception is:</span><br><span class=\"line\">  com.sun.mail.smtp.SMTPSenderFailedException: 501 mail from address must be same as authorization user</span><br><span class=\"line\">  at com.sun.mail.smtp.SMTPTransport.issueSendCommand(SMTPTransport.java:2374)</span><br><span class=\"line\">  at com.sun.mail.smtp.SMTPTransport.mailFrom(SMTPTransport.java:1808)</span><br><span class=\"line\">  at com.sun.mail.smtp.SMTPTransport.sendMessage(SMTPTransport.java:1285)</span><br><span class=\"line\">  at javax.mail.Transport.send0(Transport.java:231)</span><br></pre></td></tr></table></figure><br>错误原因: 最后发现是jenkins url下面的系统管理员邮件地址没有填写或者与STMP发信邮箱不一致<br>解决办法: 填写系统管理员邮箱与STMP发信邮箱地址一致就可以了。</p>\n<p><strong>问题8.Jenkins 内置邮件通知发信测试com.sun.mail.smtp.SMTPAddressFailedException: 501 Bad address syntax</strong></p>\n<p>错误信息:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR: Invalid Addresses</span><br><span class=\"line\">javax.mail.SendFailedException: Invalid Addresses;</span><br><span class=\"line\">  nested exception is:</span><br><span class=\"line\">  com.sun.mail.smtp.SMTPAddressFailedException: 501 Bad address syntax</span><br><span class=\"line\">  at com.sun.mail.smtp.SMTPTransport.rcptTo(SMTPTransport.java:2064)</span><br><span class=\"line\">  at com.sun.mail.smtp.SMTPTransport.sendMessage(SMTPTransport.java:1286)</span><br><span class=\"line\">  at javax.mail.Transport.send0(Transport.java:231)</span><br><span class=\"line\">  at javax.mail.Transport.send(Transport.java:100)</span><br><span class=\"line\">  at hudson.tasks.MailSender.run(MailSender.java:130)</span><br><span class=\"line\">  at hudson.tasks.MailSender.execute(MailSender.java:105)</span><br><span class=\"line\">  at hudson.maven.MavenModuleSetBuild<span class=\"variable\">$MavenModuleSetBuildExecution</span>.cleanUp(MavenModuleSetBuild.java:1093)</span><br><span class=\"line\">  at hudson.model.Run.execute(Run.java:1954)</span><br><span class=\"line\">  at hudson.maven.MavenModuleSetBuild.run(MavenModuleSetBuild.java:543)</span><br><span class=\"line\">  at hudson.model.ResourceController.execute(ResourceController.java:97)</span><br><span class=\"line\">  at hudson.model.Executor.run(Executor.java:429)</span><br><span class=\"line\">Caused by: com.sun.mail.smtp.SMTPAddressFailedException: 501 Bad address syntax</span><br><span class=\"line\"></span><br><span class=\"line\">  at com.sun.mail.smtp.SMTPTransport.rcptTo(SMTPTransport.java:1917)</span><br><span class=\"line\">  ... 10 more</span><br><span class=\"line\">Finished: FAILURE</span><br><span class=\"line\">`</span><br></pre></td></tr></table></figure></p>\n<p>错误原因: 输入的接收邮箱地址是无效的格式;</p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"DevOps","path":"api/categories/DevOps.json"},{"name":"CI-CD","path":"api/categories/CI-CD.json"}],"tags":[{"name":"Jenkins","path":"api/tags/Jenkins.json"}]}