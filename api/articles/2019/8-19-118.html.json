{"title":"Apache安装与安全配置详细","slug":"系统运维/Application/Web/WebApp/Apache/Apache安装与安全配置详细","date":"2019-08-19T00:35:30.000Z","updated":"2022-12-18T15:21:28.724Z","url":"2019/8-19-118.html","path":"api/articles/2019/8-19-118.html.json","covers":["https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190912153200.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190912154146.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190912155453.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190912155705.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190912160157.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190912165310.png","https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190916144005.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h4 id=\"快速入门\"><a href=\"#快速入门\" class=\"headerlink\" title=\"快速入门\"></a>快速入门</h4><p>描述:Apache起初由伊利诺伊大学香槟分校的国家超级电脑应用中心（NCSA）开发，此后Apache Httpd被开放源代码团体的成员不断的发展和加强，从上个世纪90年代开始它的市场占有率就超过了50%。</p>\n<p>如今虽然它的使用率有些下降但是仍是世界使用排名第一的 Web 服务器软件，它可以运行在几乎所有广泛使用的计算机平台上，由于其跨平台和安全性被广泛使用，是最流行的 Web服务器端软件之一。</p>\n<h4 id=\"安全加固\"><a href=\"#安全加固\" class=\"headerlink\" title=\"安全加固\"></a>安全加固</h4><p>Apache自身的安全性是很高的，但是人为的错误设置会导致Apache产生安全问题 。</p>\n<p><strong>1.服务器运行权限(注意操作系统环境)</strong><br>描述:Linux中默认给予Apache的是一个www-data账户，执行命令：lsof -i:80 或者：ps aux|grep apache|grep -v grep</p>\n<ul>\n<li>第一行是Apache主进程以root权限运行的，因为Apache的Web端口是80或443，而在Linux中开启小于1024的端口需要root权限，所以主进程必须以root权限运行。</li>\n<li>第二行起为Apache子进程，其执行用户为www-data，www-data是Ubuntu中运行Web服务的默认用户，权限较低。</li>\n</ul>\n<p>比如当我们使用一个shell.php去执行添加文件测操作就会由于权限问题而失败。<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190912153200.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<ul>\n<li><p>Linux操作<br>如果是一个高权限用户可以尝试更改为低权限用户，Apache的运行用户的配置信息可以在 /etc/apache2/apache2.conf 文件中看到，提示用户和用户组设置在 <code>/etc/apache2/envvars</code>文件中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User <span class=\"variable\">$&#123;APACHE_RUN_USER&#125;</span></span><br><span class=\"line\">Group <span class=\"variable\">$&#123;APACHE_RUN_GROUP&#125;</span></span><br></pre></td></tr></table></figure>\n<p>然后在到/etc/apache2/envvars文件中设置即可</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> APACHE_RUN_USER=www-data</span><br><span class=\"line\"><span class=\"built_in\">export</span> APACHE_RUN_GROUP=www-data</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Windows操作<br>由于windows机器默认是administrator权限所以第一步需要进行对Apache降权或者说设置一个安全的执行账户</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">net user apache /add</span><br><span class=\"line\">net localgroup guests apache /add  <span class=\"comment\">#将Apache的用户组改为Guests，注意要将Apache目录下的日志的可写权限赋给Guests账户。</span></span><br></pre></td></tr></table></figure>\n<p>打开<code>·Apache服务属性</code>中的<code>登录选项卡</code>，点选此账户，写入刚才添加的用户名和密码,最后重启服务</p>\n<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190912154146.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n</li>\n</ul>\n<p>注意事项:</p>\n<ul>\n<li>Windows中Apache安装完成后默认是administrator权限，如果使用此权限运行Web服务一旦攻击者拿下webshell就很容易控制整个服务器</li>\n</ul>\n<p><br></p>\n<p><strong>2.目录及文件权限</strong><br>描述:Linux在默认情况下如果当前目录不存在默认文件（比如index.html），Apache会列出当前目录。</p>\n<p>其权限设置位置在Apache配置文件httpd.conf中<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$vim</span> /etc/httpd/conf/httpd.conf</span><br><span class=\"line\">&lt;Directory /var/www/&gt;</span><br><span class=\"line\">  Options Indexs FollowSymLinks</span><br><span class=\"line\">  AllowOverride None</span><br><span class=\"line\">  Rquire all granted</span><br><span class=\"line\">&lt;Directory&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Indexes：可以在该目录中使用符号连接,从漏洞角度上讲也就是目录遍历漏洞，操作这个参数即可进行权限控制。</span></span><br><span class=\"line\"><span class=\"comment\">#FollowSymLinks：允许目录浏览，当客户仅指定要访问的目录，但没有指定要访问目录下的哪个文件，而且目录下不存在默认文档时，Apache以超文本形式返回目录中的文件和子目录列表（虚拟目录不会出现在目录列表中）。</span></span><br></pre></td></tr></table></figure><br>加固后的再次进行访问时,另外也Linux中可以通过Linux自带的chmod命令进行权限控制<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$vim</span> /etc/httpd/conf/httpd.conf</span><br><span class=\"line\">&lt;Directory /var/www/&gt;</span><br><span class=\"line\">  Options ollowSymLinks</span><br><span class=\"line\">  AllowOverride None</span><br><span class=\"line\">  Rquire all granted</span><br><span class=\"line\">&lt;Directory&gt;</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190912155453.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p>补充:对于Windows防止目录列出的与上面差不多,主要说明windows自带的权限控制，还是以访问flag.txt文件为例，默认情况下<br>想要设置单个文件对其的访问：右键==&gt;属性==&gt;安全（前面已经将Apache添加Guests用户组）<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190912155705.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p><br></p>\n<p><strong>3.错误重定向</strong><br>描述:错误重定向是指通过在Web程序出错令其跳转到指定的显示界面，首先可以通过设置.htaccess文件达到目的，但是windows中正常情况下无法直接创建.xxx的文件，所以要是使用DOS命令<code>echo 1 &gt; .htaccess</code>,然后在用其他编辑器编辑.htaccess文件即可，</p>\n<p>比如设置404错误重定向，在.htaccess文件中添加：ErrorDocument 404 /404.html<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$vim</span> .htaccess</span><br><span class=\"line\">ErrorDocument 404 /404.html</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#然后在同目录下创建404.html文件</span></span><br><span class=\"line\">&lt;html&gt;&lt;h1&gt;Page Not Found&lt;/h1&gt;&lt;/html&gt;</span><br></pre></td></tr></table></figure><br>然后随机访问一个不存在的文件，则会自动跳转到404.html<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190912160157.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p>或者采用精准匹配,通过配置httpd.conf文件也可以达到跳转的目的，还是在刚才添加设置目录权限的地方<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DocumentRoot <span class=\"string\">\"/var/www/html\"</span></span><br><span class=\"line\">&lt;Directory <span class=\"string\">\"/var/www\"</span>&gt;</span><br><span class=\"line\">  Options +Indexs +FollowSymLinks +ExecCGI</span><br><span class=\"line\">  RewriteEngine On</span><br><span class=\"line\">  RewriteRule <span class=\"string\">\"tttt\\.html$\"</span> <span class=\"string\">\"404.html\"</span></span><br><span class=\"line\">  Order allow,deny</span><br><span class=\"line\">  AllowOverride All</span><br><span class=\"line\">  Allow from all</span><br><span class=\"line\">  Require all granted</span><br><span class=\"line\">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure></p>\n<p>比如对于本条正则当访问tttt.html时会跳转到404.html界面。</p>\n<ul>\n<li>RewriteEngine On：开启跳转</li>\n<li>RewriteRule “tttt.html$”  “404.html”<br>第一个参数是一个正则<br>第二个参数使要跳转到的相对地址；也就是说当符合正则时进行跳转。<figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190912165310.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure>\n</li>\n</ul>\n<p><br></p>\n<p><strong>4.安全日志</strong><br>Apache日志常规路径是,注意<code>采用源码安装或者系统安装软件安装以及不同的Linux版本可能位置</code>不一样;<br>采用的变量${APACHE_LOG_DIR},且日志记录是有等级</p>\n<ul>\n<li>ubuntu:/var/log/apache2/</li>\n<li>Centos:/etc/httpd/logs/</li>\n</ul>\n<p>日志级别的详细分类:<br><figure class=\"image-box\">\n                <img src=\"https://cdn.jsdelivr.net/gh/WeiyiGeek/blogimage/2019/1/20190916144005.png\" alt=\"WeiyiGeek.\" title=\"\" class=\"\">\n                <p>WeiyiGeek.</p>\n            </figure></p>\n<p>其中的压缩文件为Apache自动压缩以节省空间:</p>\n<ul>\n<li>other_vhosts_access.log 虚拟主机日志</li>\n<li>access.log 成功访问记录文件</li>\n<li>error.log 失败访问以及启动报错记录文件,一般格式为”[日期和时间]   [错误等级]  错误消息”</li>\n</ul>\n<p>httpd.conf定义的日志文件格式在:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">192.168.228.1 - - [22/Sep/2017:05:26:41 -0700] <span class=\"string\">\"GET /flag.txt HTTP/1.1\"</span> 403 515 <span class=\"string\">\"-\"</span> <span class=\"string\">\"Mozilla/5.0 (Windows NT 10.0; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0\"</span></span><br></pre></td></tr></table></figure></p>\n<p><em>参数解释:</em></p>\n<ul>\n<li>远端主机：192.168.228.1</li>\n<li>远端登录名：-</li>\n<li>远程用户名：-</li>\n<li>访问时间：[22/Sep/2017:05:26:41 -0700]</li>\n<li>HTTP请求：GET /flag.txt HTTP/1.1</li>\n<li>HTTP状态码：403</li>\n<li>发送的字节数：515</li>\n<li>Referer：-</li>\n<li>User-Agent：”Mozilla/5.0 (Windows NT 10.0; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0”</li>\n</ul>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"SystemOperation","path":"api/categories/SystemOperation.json"}],"tags":[{"name":"Apache","path":"api/tags/Apache.json"}]}