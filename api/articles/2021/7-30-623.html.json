{"title":"4.最新实践基于Containerd安装部署高可用Kubernetes集群","slug":"虚拟云容/云容器/Containerd/4.基于Containerd安装部署高可用Kubernetes集群最新实践","date":"2021-07-30T06:36:30.000Z","updated":"2023-02-01T09:46:36.947Z","url":"2021/7-30-623.html","path":"api/articles/2021/7-30-623.html.json","covers":["https://blog.weiyigeek.top/img/wechat-search.png","https://img.weiyigeek.top/2022/2/20220427150914.png","https://img.weiyigeek.top/2022/2/20220428132432.png","https://img.weiyigeek.top/2022/2/20220428134018.png","https://img.weiyigeek.top/2022/5/20220429170504.png","https://img.weiyigeek.top/2022/5/20220505224012.png","https://img.weiyigeek.top/2022/5/20220508183943.png","https://img.weiyigeek.top/2022/5/20220509082236.png","https://img.weiyigeek.top/2022/5/20220509090433.png","https://img.weiyigeek.top/2022/5/20220509192129.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h2 id=\"0x00-前言简述\"><a href=\"#0x00-前言简述\" class=\"headerlink\" title=\"0x00 前言简述\"></a>0x00 前言简述</h2><p>描述: 在我博客以及前面的文章之中讲解Kubernetes相关集群环境的搭建, 随着K8S及其相关组件的迭代, 与读者当前接触的版本有所不同，所以在当前【2022年4月26日 10:08:29】时间节点，博主使用ubuntu 20.04 、haproxy、keepalive、containerd、etcd、kubeadm、kubectl 等相关工具插件【最新或者稳定的版本】进行实践高可用的kubernetes集群的搭建，这里不再对k8s等相关基础知识做介绍，如有新入门的童鞋，请访问如下【博客文章】(<a href=\"https://blog.weiyigeek.top/tags/k8s/\">https://blog.weiyigeek.top/tags/k8s/</a>) 或者【B站专栏】(<a href=\"https://www.bilibili.com/read/readlist/rl520875?spm_id_from=333.999.0.0\" target=\"_blank\" rel=\"noopener\">https://www.bilibili.com/read/readlist/rl520875?spm_id_from=333.999.0.0</a>) 按照顺序学习。</p>\n<p><strong>简述</strong><br>Kubernetes(后续简称k8s)是 Google(2014年6月) 开源的一个容器编排引擎，使用Go语言开发，它支持自动化部署、大规模可伸缩、以及云平台中多个主机上的容器化应用进行管理。其目标是让部署容器化的应用更加简单并且高效，提供了资源调度、部署管理、服务发现、扩容缩容、状态 监控、维护等一整套功能, 努力成为跨主机集群的自动化部署、自动化扩展以及运行应用程序容器的平台，它支持一些列CNCF毕业项目，包括 Containerd、calico 等 。</p>\n<hr>\n<h2 id=\"0x01-环境准备\"><a href=\"#0x01-环境准备\" class=\"headerlink\" title=\"0x01 环境准备\"></a>0x01 环境准备</h2><h3 id=\"主机规划\"><a href=\"#主机规划\" class=\"headerlink\" title=\"主机规划\"></a>主机规划</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">主机地址</th>\n<th style=\"text-align:center\">主机名称</th>\n<th style=\"text-align:center\">主机配置</th>\n<th style=\"text-align:center\">主机角色</th>\n<th style=\"text-align:left\">软件组件</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">10.10.107.223</td>\n<td style=\"text-align:center\">master-223</td>\n<td style=\"text-align:center\">4C/4G/</td>\n<td style=\"text-align:center\">控制节点</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">10.10.107.224</td>\n<td style=\"text-align:center\">master-224</td>\n<td style=\"text-align:center\">4C/4G</td>\n<td style=\"text-align:center\">控制节点</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">10.10.107.225</td>\n<td style=\"text-align:center\">master-225</td>\n<td style=\"text-align:center\">4C/8G</td>\n<td style=\"text-align:center\">控制节点</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">10.10.107.226</td>\n<td style=\"text-align:center\">node-1</td>\n<td style=\"text-align:center\">4C/2G</td>\n<td style=\"text-align:center\">工作节点</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">10.10.107.227</td>\n<td style=\"text-align:center\">node-2</td>\n<td style=\"text-align:center\">4C/2G</td>\n<td style=\"text-align:center\">工作节点</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">10.10.107.222</td>\n<td style=\"text-align:center\">weiyigeek.cluster.k8s</td>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">虚拟VIP</td>\n<td style=\"text-align:left\">虚拟网卡地址</td>\n</tr>\n</tbody>\n</table>\n<p>温馨提示: 此处使用的是 Ubuntu 20.04 操作系统, 该系统已做安全加固和内核优化符合等保2.0要求【SecOpsDev/Ubuntu-InitializeSecurity.sh at master · WeiyiGeek/SecOpsDev (github.com)】, 如你的Linux未进行相应配置环境可能与读者有些许差异, 如需要进行(windows server 、Ubuntu、CentOS)安全加固请参照如下加固脚本进行加固, 请大家疯狂的 star 。</p>\n<p>加固脚本地址:【 <a href=\"https://github.com/WeiyiGeek/SecOpsDev/blob/master/OS-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux/Ubuntu/Ubuntu-InitializeSecurity.sh\" target=\"_blank\" rel=\"noopener\">https://github.com/WeiyiGeek/SecOpsDev/blob/master/OS-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux/Ubuntu/Ubuntu-InitializeSecurity.sh</a> 】</p>\n<p><br/></p>\n<h3 id=\"软件版本\"><a href=\"#软件版本\" class=\"headerlink\" title=\"软件版本\"></a>软件版本</h3><p><strong>操作系统</strong></p>\n<ul>\n<li>Ubuntu 20.04 LTS - 5.4.0-107-generic</li>\n</ul>\n<p><strong>TLS证书签发</strong></p>\n<ul>\n<li>cfssl - v1.6.1</li>\n<li>cfssl-certinfo - v1.6.1</li>\n<li>cfssljson - v1.6.1</li>\n</ul>\n<p><strong>高可用软件</strong></p>\n<ul>\n<li>ipvsadm - 1:1.31-1</li>\n<li>haproxy - 2.0.13-2</li>\n<li>keepalived - 1:2.0.19-2</li>\n</ul>\n<p><strong>ETCD数据库</strong></p>\n<ul>\n<li>etcd - v3.5.4</li>\n</ul>\n<p><strong>容器运行时</strong></p>\n<ul>\n<li>containerd.io - 1.6.4</li>\n</ul>\n<p><strong>Kubernetes</strong></p>\n<ul>\n<li>kubeadm - v1.23.6</li>\n<li>kube-apiserver - v1.23.6</li>\n<li>kube-controller-manager - v1.23.6</li>\n<li>kubectl - v1.23.6</li>\n<li>kubelet - v1.23.6</li>\n<li>kube-proxy - v1.23.6</li>\n<li>kube-scheduler - v1.23.6</li>\n</ul>\n<p><strong>网络插件&amp;辅助软件</strong><br>calico - v3.22<br>coredns - v1.9.1<br>kubernetes-dashboard - v2.5.1<br>k9s - v0.25.18</p>\n<p><br/></p>\n<h3 id=\"网络规划\"><a href=\"#网络规划\" class=\"headerlink\" title=\"网络规划\"></a>网络规划</h3><table>\n<thead>\n<tr>\n<th>子网 Subnet</th>\n<th>网段</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td> nodeSubnet</td>\n<td>10.10.107.0/24</td>\n<td>C1</td>\n</tr>\n<tr>\n<td> ServiceSubnet</td>\n<td>10.96.0.0/16</td>\n<td>C2</td>\n</tr>\n<tr>\n<td> PodSubnet</td>\n<td>10.128.0.0/16</td>\n<td>C3</td>\n</tr>\n</tbody>\n</table>\n<p><br/></p>\n<p><span style=\"color:red\">温馨提示: 上述环境所使用的到相关软件及插件我已打包, 方便大家进行下载，可访问如下链接（访问密码请访问 WeiyiGeek 公众号回复【k8s二进制】获取）。</span></p>\n<p>下载地址: <a href=\"http://share.weiyigeek.top/f/36158960-578443238-a1a5fa\" target=\"_blank\" rel=\"noopener\">http://share.weiyigeek.top/f/36158960-578443238-a1a5fa</a> （访问密码：<a href=\"https://www.weiyigeek.top/wechat.html?key=k8s二进制\" target=\"_blank\" rel=\"noopener\">点击访问 WeiyiGeek 公众号回复【k8s二进制】</a>）</p>\n<p><img src=\"https://blog.weiyigeek.top/img/wechat-search.png\" alt=\"WeiyiGeek\"/></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/kubernetes-cluster-binary-install<span class=\"comment\"># tree .</span></span><br><span class=\"line\">.</span><br><span class=\"line\">├── calico</span><br><span class=\"line\">│   └── calico-v3.22.yaml</span><br><span class=\"line\">├── certificate</span><br><span class=\"line\">│   ├── admin-csr.json</span><br><span class=\"line\">│   ├── apiserver-csr.json</span><br><span class=\"line\">│   ├── ca-config.json</span><br><span class=\"line\">│   ├── ca-csr.json</span><br><span class=\"line\">│   ├── cfssl</span><br><span class=\"line\">│   ├── cfssl-certinfo</span><br><span class=\"line\">│   ├── cfssljson</span><br><span class=\"line\">│   ├── controller-manager-csr.json</span><br><span class=\"line\">│   ├── etcd-csr.json</span><br><span class=\"line\">│   ├── kube-scheduler-csr.json</span><br><span class=\"line\">│   ├── proxy-csr.json</span><br><span class=\"line\">│   └── scheduler-csr.json</span><br><span class=\"line\">├── containerd.io</span><br><span class=\"line\">│   └── config.toml</span><br><span class=\"line\">├── coredns</span><br><span class=\"line\">│   ├── coredns.yaml</span><br><span class=\"line\">│   ├── coredns.yaml.sed</span><br><span class=\"line\">│   └── deploy.sh</span><br><span class=\"line\">├── cri-containerd-cni-1.6.4-linux-amd64.tar.gz</span><br><span class=\"line\">├── etcd-v3.5.4-linux-amd64.tar.gz</span><br><span class=\"line\">├── k9s</span><br><span class=\"line\">├── kubernetes-dashboard</span><br><span class=\"line\">│   ├── kubernetes-dashboard.yaml</span><br><span class=\"line\">│   └── rbac-dashboard-admin.yaml</span><br><span class=\"line\">├── kubernetes-server-linux-amd64.tar.gz</span><br><span class=\"line\">└── nginx.yaml</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"0x02-安装部署\"><a href=\"#0x02-安装部署\" class=\"headerlink\" title=\"0x02 安装部署\"></a>0x02 安装部署</h2><h3 id=\"1-基础主机环境准备配置\"><a href=\"#1-基础主机环境准备配置\" class=\"headerlink\" title=\"1.基础主机环境准备配置\"></a>1.基础主机环境准备配置</h3><p>步骤 01.【所有主机】主机名设置按照上述主机规划进行设置。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 例如, 在10.10.107.223主机中运行。</span></span><br><span class=\"line\">hostnamectl <span class=\"built_in\">set</span>-hostname master-223</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例如, 在10.10.107.227主机中运行。</span></span><br><span class=\"line\">hostnamectl <span class=\"built_in\">set</span>-hostname node-2</span><br></pre></td></tr></table></figure></p>\n<p>步骤 02.【所有主机】将规划中的主机名称与IP地址进行硬解析。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo tee -a /etc/hosts &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">10.10.107.223 master-223</span><br><span class=\"line\">10.10.107.224 master-224</span><br><span class=\"line\">10.10.107.225 master-225</span><br><span class=\"line\">10.10.107.226 node-1</span><br><span class=\"line\">10.10.107.227 node-2</span><br><span class=\"line\">10.10.107.222 weiyigeek.cluster.k8s</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure></p>\n<p>步骤 03.验证每个节点上IP、MAC 地址和 product_uuid 的唯一性,保证其能相互正常通信<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 使用命令 ip link 或 ifconfig -a 来获取网络接口的 MAC 地址</span></span><br><span class=\"line\">ifconfig -a</span><br><span class=\"line\"><span class=\"comment\"># 使用命令 查看 product_uuid 校验</span></span><br><span class=\"line\">sudo cat /sys/class/dmi/id/product_uuid</span><br></pre></td></tr></table></figure></p>\n<p>步骤 04.【所有主机】系统时间同步与时区设置<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">date -R</span><br><span class=\"line\">sudo ntpdate ntp.aliyun.com</span><br><span class=\"line\">sudo timedatectl <span class=\"built_in\">set</span>-timezone Asia/Shanghai</span><br><span class=\"line\"><span class=\"comment\"># 或者</span></span><br><span class=\"line\"><span class=\"comment\"># sudo dpkg-reconfigure tzdata</span></span><br><span class=\"line\">sudo timedatectl <span class=\"built_in\">set</span>-local-rtc 0</span><br><span class=\"line\">timedatectl</span><br></pre></td></tr></table></figure></p>\n<p>步骤 05.【所有主机】禁用系统交换分区<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">swapoff -a &amp;&amp; sed -i <span class=\"string\">'s|^/swap.img|#/swap.ing|g'</span> /etc/fstab</span><br><span class=\"line\"><span class=\"comment\"># 验证交换分区是否被禁用</span></span><br><span class=\"line\">free | grep <span class=\"string\">\"Swap:\"</span></span><br></pre></td></tr></table></figure></p>\n<p>步骤 07.【所有主机】系统内核参数调整<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 禁用 swap 分区</span></span><br><span class=\"line\">egrep -q <span class=\"string\">\"^(#)?vm.swappiness.*\"</span> /etc/sysctl.conf &amp;&amp; sed -ri <span class=\"string\">\"s|^(#)?vm.swappiness.*|vm.swappiness = 0|g\"</span>  /etc/sysctl.conf || <span class=\"built_in\">echo</span> <span class=\"string\">\"vm.swappiness = 0\"</span> &gt;&gt; /etc/sysctl.conf</span><br><span class=\"line\"><span class=\"comment\"># 允许转发</span></span><br><span class=\"line\">egrep -q <span class=\"string\">\"^(#)?net.ipv4.ip_forward.*\"</span> /etc/sysctl.conf &amp;&amp; sed -ri <span class=\"string\">\"s|^(#)?net.ipv4.ip_forward.*|net.ipv4.ip_forward = 1|g\"</span>  /etc/sysctl.conf || <span class=\"built_in\">echo</span> <span class=\"string\">\"net.ipv4.ip_forward = 1\"</span> &gt;&gt; /etc/sysctl.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - 允许 iptables 检查桥接流量</span></span><br><span class=\"line\">egrep -q <span class=\"string\">\"^(#)?net.bridge.bridge-nf-call-iptables.*\"</span> /etc/sysctl.conf &amp;&amp; sed -ri <span class=\"string\">\"s|^(#)?net.bridge.bridge-nf-call-iptables.*|net.bridge.bridge-nf-call-iptables = 1|g\"</span> /etc/sysctl.conf || <span class=\"built_in\">echo</span> <span class=\"string\">\"net.bridge.bridge-nf-call-iptables = 1\"</span> &gt;&gt; /etc/sysctl.conf</span><br><span class=\"line\">egrep -q <span class=\"string\">\"^(#)?net.bridge.bridge-nf-call-ip6tables.*\"</span> /etc/sysctl.conf &amp;&amp; sed -ri <span class=\"string\">\"s|^(#)?net.bridge.bridge-nf-call-ip6tables.*|net.bridge.bridge-nf-call-ip6tables = 1|g\"</span> /etc/sysctl.conf || <span class=\"built_in\">echo</span> <span class=\"string\">\"net.bridge.bridge-nf-call-ip6tables = 1\"</span> &gt;&gt; /etc/sysctl.conf</span><br></pre></td></tr></table></figure></p>\n<p>步骤 07.【所有主机】禁用系统防火墙<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ufw <span class=\"built_in\">disable</span> &amp;&amp; systemctl <span class=\"built_in\">disable</span> ufw &amp;&amp; systemctl stop ufw</span><br></pre></td></tr></table></figure></p>\n<p>步骤 08.【master-225 主机】使用 master-225 主机的公钥免账号密码登陆其它主机（可选）方便文件在各主机上传下载。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 生成ed25519格式的公密钥</span></span><br><span class=\"line\">sh-keygen -t ed25519</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 例如,在master-225 主机上使用密钥登录到 master-223 设置 (其它主机同样)</span></span><br><span class=\"line\">ssh-copy-id -p 20211 weiyigeek@10.10.107.223</span><br><span class=\"line\">  <span class=\"comment\"># /usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: \"/root/.ssh/id_ed25519.pub\"</span></span><br><span class=\"line\">  <span class=\"comment\"># Are you sure you want to continue connecting (yes/no/[fingerprint])? yes # 输入yes</span></span><br><span class=\"line\">  <span class=\"comment\"># weiyigeek@10.10.107.223s password: # 输入主机密码</span></span><br><span class=\"line\">  <span class=\"comment\"># Number of key(s) added: 1</span></span><br><span class=\"line\">  <span class=\"comment\"># Now try logging into the machine, with:   \"ssh -p '20211' 'weiyigeek@10.10.107.223'\"</span></span><br><span class=\"line\">  <span class=\"comment\"># and check to make sure that only the key(s) you wanted were added.</span></span><br><span class=\"line\">ssh-copy-id -p 20211 weiyigeek@10.10.107.224</span><br><span class=\"line\">ssh-copy-id -p 20211 weiyigeek@10.10.107.226</span><br><span class=\"line\">ssh-copy-id -p 20211 weiyigeek@10.10.107.227</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<h3 id=\"2-负载均衡管理工具安装与内核加载\"><a href=\"#2-负载均衡管理工具安装与内核加载\" class=\"headerlink\" title=\"2.负载均衡管理工具安装与内核加载\"></a>2.负载均衡管理工具安装与内核加载</h3><p>步骤 01.安装ipvs模块以及负载均衡相关依赖。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看可用版本</span></span><br><span class=\"line\">sudo apt-cache madison ipvsadm</span><br><span class=\"line\">  <span class=\"comment\"># ipvsadm |   1:1.31-1 | http://mirrors.aliyun.com/ubuntu focal/main amd64 Packages</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装</span></span><br><span class=\"line\">sudo apt -y install ipvsadm ipset sysstat conntrack</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 锁定版本 </span></span><br><span class=\"line\">apt-mark hold ipvsadm</span><br><span class=\"line\">  <span class=\"comment\"># ipvsadm set on hold.</span></span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 02.将模块加载到内核中(开机自动设置-需要重启机器生效)<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tee /etc/modules-load.d/k8s.conf &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\"><span class=\"comment\"># netfilter</span></span><br><span class=\"line\">br_netfilter</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># containerd</span></span><br><span class=\"line\">overlay</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># nf_conntrack</span></span><br><span class=\"line\">nf_conntrack</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ipvs</span></span><br><span class=\"line\">ip_vs</span><br><span class=\"line\">ip_vs_lc</span><br><span class=\"line\">ip_vs_lblc</span><br><span class=\"line\">ip_vs_lblcr</span><br><span class=\"line\">ip_vs_rr</span><br><span class=\"line\">ip_vs_wrr</span><br><span class=\"line\">ip_vs_sh</span><br><span class=\"line\">ip_vs_dh</span><br><span class=\"line\">ip_vs_fo</span><br><span class=\"line\">ip_vs_nq</span><br><span class=\"line\">ip_vs_sed</span><br><span class=\"line\">ip_vs_ftp</span><br><span class=\"line\">ip_tables</span><br><span class=\"line\">ip_set</span><br><span class=\"line\">ipt_set</span><br><span class=\"line\">ipt_rpfilter</span><br><span class=\"line\">ipt_REJECT</span><br><span class=\"line\">ipip</span><br><span class=\"line\">xt_set</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 03.手动加载模块到内核中<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -vp /etc/modules.d/</span><br><span class=\"line\">tee /etc/modules.d/k8s.modules &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\"># netfilter 模块 允许 iptables 检查桥接流量</span></span><br><span class=\"line\">modprobe -- br_netfilter</span><br><span class=\"line\"><span class=\"comment\"># containerd</span></span><br><span class=\"line\">modprobe -- overlay</span><br><span class=\"line\"><span class=\"comment\"># nf_conntrack</span></span><br><span class=\"line\">modprobe -- nf_conntrack</span><br><span class=\"line\"><span class=\"comment\"># ipvs</span></span><br><span class=\"line\">modprobe -- ip_vs</span><br><span class=\"line\">modprobe -- ip_vs_lc</span><br><span class=\"line\">modprobe -- ip_vs_lblc</span><br><span class=\"line\">modprobe -- ip_vs_lblcr</span><br><span class=\"line\">modprobe -- ip_vs_rr</span><br><span class=\"line\">modprobe -- ip_vs_wrr</span><br><span class=\"line\">modprobe -- ip_vs_sh</span><br><span class=\"line\">modprobe -- ip_vs_dh</span><br><span class=\"line\">modprobe -- ip_vs_fo</span><br><span class=\"line\">modprobe -- ip_vs_nq</span><br><span class=\"line\">modprobe -- ip_vs_sed</span><br><span class=\"line\">modprobe -- ip_vs_ftp</span><br><span class=\"line\">modprobe -- ip_tables</span><br><span class=\"line\">modprobe -- ip_set</span><br><span class=\"line\">modprobe -- ipt_set</span><br><span class=\"line\">modprobe -- ipt_rpfilter</span><br><span class=\"line\">modprobe -- ipt_REJECT</span><br><span class=\"line\">modprobe -- ipip</span><br><span class=\"line\">modprobe -- xt_set</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">chmod 755 /etc/modules.d/k8s.modules &amp;&amp; bash /etc/modules.d/k8s.modules &amp;&amp; lsmod | grep -e ip_vs -e nf_conntrack</span><br><span class=\"line\">  <span class=\"comment\"># ip_vs_sh               16384  0</span></span><br><span class=\"line\">  <span class=\"comment\"># ip_vs_wrr              16384  0</span></span><br><span class=\"line\">  <span class=\"comment\"># ip_vs_rr               16384  0</span></span><br><span class=\"line\">  <span class=\"comment\"># ip_vs                 155648  6 ip_vs_rr,ip_vs_sh,ip_vs_wrr</span></span><br><span class=\"line\">  <span class=\"comment\"># nf_conntrack          139264  1 ip_vs</span></span><br><span class=\"line\">  <span class=\"comment\"># nf_defrag_ipv6         24576  2 nf_conntrack,ip_vs</span></span><br><span class=\"line\">  <span class=\"comment\"># nf_defrag_ipv4         16384  1 nf_conntrack</span></span><br><span class=\"line\">  <span class=\"comment\"># libcrc32c              16384  5 nf_conntrack,btrfs,xfs,raid456,ip_vs</span></span><br><span class=\"line\"></span><br><span class=\"line\">sysctl --system</span><br></pre></td></tr></table></figure></p>\n<p>温馨提示: 在 kernel 4.19 版本及以上将使用 nf_conntrack 模块, 则在 4.18 版本以下则需使用nf_conntrack_ipv4 模块。</p>\n<p><br></p>\n<h3 id=\"3-高可用HAproxy与Keepalived软件安装配置\"><a href=\"#3-高可用HAproxy与Keepalived软件安装配置\" class=\"headerlink\" title=\"3.高可用HAproxy与Keepalived软件安装配置\"></a>3.高可用HAproxy与Keepalived软件安装配置</h3><p>描述: 由于是测试学习环境, 此处我未专门准备两台HA服务器, 而是直接采用master节点机器，如果是正式环境建议独立出来。</p>\n<p>步骤 01.【Master节点机器】安装下载 haproxy (HA代理健康检测) 与 keepalived (虚拟路由协议-主从)。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看可用版本</span></span><br><span class=\"line\">sudo apt-cache madison haproxy keepalived</span><br><span class=\"line\">  <span class=\"comment\">#  haproxy | 2.0.13-2ubuntu0.5 | http://mirrors.aliyun.com/ubuntu focal-security/main amd64 Packages</span></span><br><span class=\"line\">  <span class=\"comment\"># keepalived | 1:2.0.19-2ubuntu0.2 | http://mirrors.aliyun.com/ubuntu focal-updates/main amd64 Packages</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装</span></span><br><span class=\"line\">sudo apt -y install haproxy keepalived</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 锁定版本 </span></span><br><span class=\"line\">apt-mark hold haproxy keepalived</span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<p>步骤 02.【Master节点机器】进行 HAProxy 配置，其配置目录为 <code>/etc/haproxy/</code>，所有节点配置是一致的。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo cp /etc/haproxy/haproxy.cfg&#123;,.bak&#125;</span><br><span class=\"line\">tee /etc/haproxy/haproxy.cfg&lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">global</span><br><span class=\"line\">  user haproxy</span><br><span class=\"line\">  group haproxy</span><br><span class=\"line\">  maxconn 2000</span><br><span class=\"line\">  daemon</span><br><span class=\"line\">  <span class=\"built_in\">log</span> /dev/<span class=\"built_in\">log</span> local0</span><br><span class=\"line\">  <span class=\"built_in\">log</span> /dev/<span class=\"built_in\">log</span> local1 err</span><br><span class=\"line\">  chroot /var/lib/haproxy</span><br><span class=\"line\">  stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners</span><br><span class=\"line\">  stats timeout 30s</span><br><span class=\"line\">  <span class=\"comment\"># Default SSL material locations</span></span><br><span class=\"line\">  ca-base /etc/ssl/certs</span><br><span class=\"line\">  crt-base /etc/ssl/private</span><br><span class=\"line\">  <span class=\"comment\"># See: https://ssl-config.mozilla.org/#server=haproxy&amp;server-version=2.0.3&amp;config=intermediate</span></span><br><span class=\"line\">  ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384</span><br><span class=\"line\">  ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256</span><br><span class=\"line\">  ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets</span><br><span class=\"line\"></span><br><span class=\"line\">defaults</span><br><span class=\"line\">  <span class=\"built_in\">log</span>     global</span><br><span class=\"line\">  mode    http</span><br><span class=\"line\">  option  httplog</span><br><span class=\"line\">  option  dontlognull</span><br><span class=\"line\">  timeout connect 5000</span><br><span class=\"line\">  timeout client  50000</span><br><span class=\"line\">  timeout server  50000</span><br><span class=\"line\">  timeout http-request 15s</span><br><span class=\"line\">  timeout http-keep-alive 15s</span><br><span class=\"line\">  <span class=\"comment\"># errorfile 400 /etc/haproxy/errors/400.http</span></span><br><span class=\"line\">  <span class=\"comment\"># errorfile 403 /etc/haproxy/errors/403.http</span></span><br><span class=\"line\">  <span class=\"comment\"># errorfile 408 /etc/haproxy/errors/408.http</span></span><br><span class=\"line\">  <span class=\"comment\"># errorfile 500 /etc/haproxy/errors/500.http</span></span><br><span class=\"line\">  <span class=\"comment\"># errorfile 502 /etc/haproxy/errors/502.http</span></span><br><span class=\"line\">  <span class=\"comment\"># errorfile 503 /etc/haproxy/errors/503.http</span></span><br><span class=\"line\">  <span class=\"comment\"># errorfile 504 /etc/haproxy/errors/504.http</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 注意: 管理HAproxy (可选)</span></span><br><span class=\"line\"><span class=\"comment\"># frontend monitor-in</span></span><br><span class=\"line\"><span class=\"comment\">#   bind *:33305</span></span><br><span class=\"line\"><span class=\"comment\">#   mode http</span></span><br><span class=\"line\"><span class=\"comment\">#   option httplog</span></span><br><span class=\"line\"><span class=\"comment\">#   monitor-uri /monitor</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 注意: 基于四层代理, 1644 3为VIP的 ApiServer 控制平面端口, 由于是与master节点在一起所以不能使用6443端口.</span></span><br><span class=\"line\">frontend k8s-master</span><br><span class=\"line\">  <span class=\"built_in\">bind</span> 0.0.0.0:16443</span><br><span class=\"line\">  <span class=\"built_in\">bind</span> 127.0.0.1:16443</span><br><span class=\"line\">  mode tcp</span><br><span class=\"line\">  option tcplog</span><br><span class=\"line\">  tcp-request inspect-delay 5s</span><br><span class=\"line\">  default_backend k8s-master</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 注意: Master 节点的默认 Apiserver 是6443端口</span></span><br><span class=\"line\">backend k8s-master</span><br><span class=\"line\">  mode tcp</span><br><span class=\"line\">  option tcplog</span><br><span class=\"line\">  option tcp-check</span><br><span class=\"line\">  balance roundrobin</span><br><span class=\"line\">  default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100</span><br><span class=\"line\">  server master-223 10.10.107.223:6443 check</span><br><span class=\"line\">  server master-224 10.10.107.224:6443 check</span><br><span class=\"line\">  server master-225 10.10.107.225:6443 check</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 03.【Master节点机器】进行 置KeepAlived 配置 ，其配置目录为 <code>/etc/haproxy/</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建配置目录，分别在各个master节点执行。</span></span><br><span class=\"line\">mkdir -vp /etc/keepalived</span><br><span class=\"line\"><span class=\"comment\"># __ROLE__ 角色: MASTER 或者 BACKUP</span></span><br><span class=\"line\"><span class=\"comment\"># __NETINTERFACE__ 宿主机物理网卡名称 例如我的ens32</span></span><br><span class=\"line\"><span class=\"comment\"># __IP__ 宿主机物理IP地址</span></span><br><span class=\"line\"><span class=\"comment\"># __VIP__ 虚拟VIP地址</span></span><br><span class=\"line\">sudo tee /etc/keepalived/keepalived.conf &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">! Configuration File <span class=\"keyword\">for</span> keepalived</span><br><span class=\"line\">global_defs &#123;</span><br><span class=\"line\">  router_id LVS_DEVEL</span><br><span class=\"line\">script_user root</span><br><span class=\"line\">  enable_script_security</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">vrrp_script chk_apiserver &#123;</span><br><span class=\"line\">  script <span class=\"string\">\"/etc/keepalived/check_apiserver.sh\"</span></span><br><span class=\"line\">  interval 5</span><br><span class=\"line\">  weight -5</span><br><span class=\"line\">  fall 2  </span><br><span class=\"line\">  rise 1</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">vrrp_instance VI_1 &#123;</span><br><span class=\"line\">  state __ROLE__</span><br><span class=\"line\">  interface __NETINTERFACE__</span><br><span class=\"line\">  mcast_src_ip __IP__</span><br><span class=\"line\">  virtual_router_id 51</span><br><span class=\"line\">  priority 101</span><br><span class=\"line\">  advert_int 2</span><br><span class=\"line\">  authentication &#123;</span><br><span class=\"line\">    auth_type PASS</span><br><span class=\"line\">    auth_pass K8SHA_KA_AUTH</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  virtual_ipaddress &#123;</span><br><span class=\"line\">    __VIP__</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\"># HA 健康检查</span></span><br><span class=\"line\">  <span class=\"comment\"># track_script &#123;</span></span><br><span class=\"line\">  <span class=\"comment\">#   chk_apiserver</span></span><br><span class=\"line\">  <span class=\"comment\"># &#125;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 此处 master-225 性能较好所以配置为Master (master-225 主机上执行)</span></span><br><span class=\"line\"><span class=\"comment\"># master-225 10.10.107.225 =&gt; MASTER</span></span><br><span class=\"line\">sed -i -e <span class=\"string\">'s#__ROLE__#MASTER#g'</span> \\</span><br><span class=\"line\">  -e <span class=\"string\">'s#__NETINTERFACE__#ens32#g'</span> \\</span><br><span class=\"line\">  -e <span class=\"string\">'s#__IP__#10.10.107.225#g'</span> \\</span><br><span class=\"line\">  -e <span class=\"string\">'s#__VIP__#10.10.107.222#g'</span> /etc/keepalived/keepalived.conf </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># master-224 10.10.107.224 =&gt; BACKUP  (master-224 主机上执行)</span></span><br><span class=\"line\">sed -i -e <span class=\"string\">'s#__ROLE__#BACKUP#g'</span> \\</span><br><span class=\"line\">  -e <span class=\"string\">'s#__NETINTERFACE__#ens32#g'</span> \\</span><br><span class=\"line\">  -e <span class=\"string\">'s#__IP__#10.10.107.224#g'</span> \\</span><br><span class=\"line\">  -e <span class=\"string\">'s#__VIP__#10.10.107.222#g'</span> /etc/keepalived/keepalived.conf </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># master-223 10.10.107.223 =&gt; BACKUP  (master-223 主机上执行)</span></span><br><span class=\"line\">sed -i -e <span class=\"string\">'s#__ROLE__#BACKUP#g'</span> \\</span><br><span class=\"line\">  -e <span class=\"string\">'s#__NETINTERFACE__#ens32#g'</span> \\</span><br><span class=\"line\">  -e <span class=\"string\">'s#__IP__#10.10.107.223#g'</span> \\</span><br><span class=\"line\">  -e <span class=\"string\">'s#__VIP__#10.10.107.222#g'</span> /etc/keepalived/keepalived.conf</span><br></pre></td></tr></table></figure>\n<p>温馨提示: 注意上述的健康检查是关闭注释了的，你需要将K8S集群建立完成后再开启。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">track_script &#123;</span><br><span class=\"line\">  chk_apiserver</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 04.【Master节点机器】进行配置 KeepAlived 健康检查文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo tee /etc/keepalived/check_apiserver.sh &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">err=0</span><br><span class=\"line\"><span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> $(seq 1 3)</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">  check_code=$(pgrep haproxy)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> [[ <span class=\"variable\">$check_code</span> == <span class=\"string\">\"\"</span> ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">    err=$(expr <span class=\"variable\">$err</span> + 1)</span><br><span class=\"line\">    sleep 1</span><br><span class=\"line\">    <span class=\"built_in\">continue</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    err=0</span><br><span class=\"line\">    <span class=\"built_in\">break</span></span><br><span class=\"line\">  <span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">done</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [[ <span class=\"variable\">$err</span> != <span class=\"string\">\"0\"</span> ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">\"systemctl stop keepalived\"</span></span><br><span class=\"line\">  /usr/bin/systemctl stop keepalived</span><br><span class=\"line\">  <span class=\"built_in\">exit</span> 1</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">  <span class=\"built_in\">exit</span> 0</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\">EOF</span><br><span class=\"line\">sudo chmod +x /etc/keepalived/check_apiserver.sh</span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<p>步骤 05.【Master节点机器】启动 haproxy 、keepalived 相关服务及测试VIP漂移。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 重载 Systemd 设置 haproxy 、keepalived 开机自启以及立即启动</span></span><br><span class=\"line\">sudo systemctl daemon-reload</span><br><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> --now haproxy &amp;&amp; sudo systemctl <span class=\"built_in\">enable</span> --now keepalived</span><br><span class=\"line\"><span class=\"comment\"># Synchronizing state of haproxy.service with SysV service script with /lib/systemd/systemd-sysv-install.</span></span><br><span class=\"line\"><span class=\"comment\"># Executing: /lib/systemd/systemd-sysv-install enable haproxy</span></span><br><span class=\"line\"><span class=\"comment\"># Synchronizing state of keepalived.service with SysV service script with /lib/systemd/systemd-sysv-install.</span></span><br><span class=\"line\"><span class=\"comment\"># Executing: /lib/systemd/systemd-sysv-install enable keepalived</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 master-223 主机中发现vip地址在其主机上。</span></span><br><span class=\"line\">root@master-223:~$ ip addr</span><br><span class=\"line\">  <span class=\"comment\"># 2: ens32: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000</span></span><br><span class=\"line\">  <span class=\"comment\">#     link/ether 00:0c:29:00:0f:8f brd ff:ff:ff:ff:ff:ff</span></span><br><span class=\"line\">  <span class=\"comment\">#     inet 10.10.107.223/24 brd 10.10.107.255 scope global ens32</span></span><br><span class=\"line\">  <span class=\"comment\">#        valid_lft forever preferred_lft forever</span></span><br><span class=\"line\">  <span class=\"comment\">#     inet 10.10.107.222/32 scope global ens32</span></span><br><span class=\"line\">  <span class=\"comment\">#        valid_lft forever preferred_lft forever</span></span><br><span class=\"line\"><span class=\"comment\"># 其它两台主机上通信验证。</span></span><br><span class=\"line\">root@master-224:~$ ping 10.10.107.222</span><br><span class=\"line\">root@master-224:~$ ping 10.10.107.222</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/2/20220427150914.png\" alt=\"WeiyiGeek.master-223-vip\" title=\"\" class=\"\">\n                <p>WeiyiGeek.master-223-vip</p>\n            </figure></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 手动验证VIP漂移,我们将该服务器上keepalived停止掉。</span></span><br><span class=\"line\">root@master-223:~$ pgrep haproxy</span><br><span class=\"line\">  <span class=\"comment\"># 6320</span></span><br><span class=\"line\">  <span class=\"comment\"># 6321</span></span><br><span class=\"line\">root@master-223:~$ /usr/bin/systemctl stop keepalived</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 此时,发现VIP已经飘到master-225主机中</span></span><br><span class=\"line\">root@master-225:~$ ip addr show ens32</span><br><span class=\"line\">  <span class=\"comment\"># 2: ens32: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000</span></span><br><span class=\"line\">  <span class=\"comment\">#     link/ether 00:0c:29:93:28:61 brd ff:ff:ff:ff:ff:ff</span></span><br><span class=\"line\">  <span class=\"comment\">#     inet 10.10.107.225/24 brd 10.10.107.255 scope global ens32</span></span><br><span class=\"line\">  <span class=\"comment\">#       valid_lft forever preferred_lft forever</span></span><br><span class=\"line\">  <span class=\"comment\">#     inet 10.10.107.222/32 scope global ens32</span></span><br><span class=\"line\">  <span class=\"comment\">#       valid_lft forever preferred_lft forever</span></span><br></pre></td></tr></table></figure>\n<p>至此，HAProxy 与 Keepalived 配置就告一段落了,下面将学习 ETCD 集群配置与证书签发。</p>\n<p><br></p>\n<h3 id=\"4-配置部署etcd集群与etcd证书签发\"><a href=\"#4-配置部署etcd集群与etcd证书签发\" class=\"headerlink\" title=\"4.配置部署etcd集群与etcd证书签发\"></a>4.配置部署etcd集群与etcd证书签发</h3><p>描述: 创建一个高可用的ETCD集群，此处我们在【master-225】机器中操作。</p>\n<p>步骤 01.【master-225】创建一个配置与相关文件存放的目录, 以及下载获取cfssl工具进行CA证书制作与签发(cfssl工具往期文章参考地址: <a href=\"https://blog.weiyigeek.top/2019/10-21-12.html#3-CFSSL-生成\">https://blog.weiyigeek.top/2019/10-21-12.html#3-CFSSL-生成</a> )。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 工作目录创建</span></span><br><span class=\"line\">mkdir -vp /app/k8s-init-work &amp;&amp; <span class=\"built_in\">cd</span> /app/k8s-init-work</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># cfssl 最新下载地址: https://github.com/cloudflare/cfssl/releases</span></span><br><span class=\"line\"><span class=\"comment\"># cfssl 相关工具拉取 (如果拉取较慢，建议使用某雷下载，然后上传到服务器里)</span></span><br><span class=\"line\">curl -L https://github.com/cloudflare/cfssl/releases/download/v1.6.1/cfssl_1.6.1_linux_amd64 -o /usr/<span class=\"built_in\">local</span>/bin/cfssl</span><br><span class=\"line\">curl -L https://github.com/cloudflare/cfssl/releases/download/v1.6.1/cfssljson_1.6.1_linux_amd64 -o /usr/<span class=\"built_in\">local</span>/bin/cfssljson</span><br><span class=\"line\">curl -L https://github.com/cloudflare/cfssl/releases/download/v1.6.1/cfssl-certinfo_1.6.1_linux_amd64 -o /usr/<span class=\"built_in\">local</span>/bin/cfssl-certinfo</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 赋予执行权限</span></span><br><span class=\"line\">chmod +x /usr/<span class=\"built_in\">local</span>/bin/cfssl*</span><br><span class=\"line\"></span><br><span class=\"line\">/app<span class=\"comment\"># cfssl version</span></span><br><span class=\"line\"><span class=\"comment\"># Version: 1.2.0</span></span><br><span class=\"line\"><span class=\"comment\"># Revision: dev</span></span><br><span class=\"line\"><span class=\"comment\"># Runtime: go1.6</span></span><br></pre></td></tr></table></figure>\n<p>温馨提示: </p>\n<ul>\n<li>cfssl : CFSSL 命令行工具</li>\n<li>cfssljson : 用于从cfssl程序中获取JSON输出并将证书、密钥、证书签名请求文件CSR和Bundle写入到文件中，</li>\n</ul>\n<p><br></p>\n<p>步骤 02.利用上述 cfssl 工具创建 CA 证书。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># - CA 证书签名请求配置文件</span></span><br><span class=\"line\">fssl <span class=\"built_in\">print</span>-defaults csr &gt; ca-csr.json</span><br><span class=\"line\">tee ca-csr.json &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"CN\"</span>: <span class=\"string\">\"kubernetes\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"key\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"algo\"</span>: <span class=\"string\">\"rsa\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"size\"</span>: 2048</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"names\"</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"string\">\"C\"</span>: <span class=\"string\">\"CN\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"L\"</span>: <span class=\"string\">\"ChongQing\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"ST\"</span>: <span class=\"string\">\"ChongQing\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"O\"</span>: <span class=\"string\">\"k8s\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"OU\"</span>: <span class=\"string\">\"System\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"string\">\"ca\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"expiry\"</span>: <span class=\"string\">\"87600h\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 关键参数解析:</span></span><br><span class=\"line\">CN: Common Name，浏览器使用该字段验证网站是否合法，一般写的是域名，非常重要。浏览器使用该字段验证网站是否合法</span><br><span class=\"line\">key：生成证书的算法</span><br><span class=\"line\">hosts：表示哪些主机名(域名)或者IP可以使用此csr申请的证书，为空或者<span class=\"string\">\"\"</span>表示所有的都可以使用(本例中没有`<span class=\"string\">\"hosts\"</span>: [<span class=\"string\">\"\"</span>]`字段)</span><br><span class=\"line\">names：常见属性设置</span><br><span class=\"line\">  * C: Country， 国家</span><br><span class=\"line\">  * ST: State，州或者是省份</span><br><span class=\"line\">  * L: Locality Name，地区，城市</span><br><span class=\"line\">  * O: Organization Name，组织名称，公司名称(在k8s中常用于指定Group，进行RBAC绑定)</span><br><span class=\"line\">  * OU: Organization Unit Name，组织单位名称，公司部门</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - CA 证书策略配置文件</span></span><br><span class=\"line\">cfssl <span class=\"built_in\">print</span>-defaults config &gt; ca-config.json</span><br><span class=\"line\">tee ca-config.json &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"signing\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"default\"</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">\"expiry\"</span>: <span class=\"string\">\"87600h\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">\"profiles\"</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">\"kubernetes\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">\"expiry\"</span>: <span class=\"string\">\"87600h\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"usages\"</span>: [</span><br><span class=\"line\">            <span class=\"string\">\"signing\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"key encipherment\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"server auth\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"client auth\"</span></span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">\"etcd\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">\"expiry\"</span>: <span class=\"string\">\"87600h\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"usages\"</span>: [</span><br><span class=\"line\">            <span class=\"string\">\"signing\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"key encipherment\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"server auth\"</span>,</span><br><span class=\"line\">            <span class=\"string\">\"client auth\"</span></span><br><span class=\"line\">        ]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 关键参数解析:</span></span><br><span class=\"line\">default 默认策略，指定了证书的默认有效期是10年(87600h)</span><br><span class=\"line\">profile 自定义策略配置</span><br><span class=\"line\">  * kubernetes：表示该配置(profile)的用途是为kubernetes生成证书及相关的校验工作</span><br><span class=\"line\">  * signing：表示该证书可用于签名其它证书；生成的 ca.pem 证书中 CA=TRUE</span><br><span class=\"line\">  * server auth：表示可以该CA 对 server 提供的证书进行验证</span><br><span class=\"line\">  * client auth：表示可以用该 CA 对 client 提供的证书进行验证</span><br><span class=\"line\">  * expiry：也表示过期时间，如果不写以default中的为准</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># - 执行cfssl gencert 命令生成CA证书</span></span><br><span class=\"line\"><span class=\"comment\"># 利用CA证书签名请求配置文件 ca-csr.json 生成CA证书和CA私钥和CSR(证书签名请求):</span></span><br><span class=\"line\">cfssl gencert -initca ca-csr.json | cfssljson -bare ca</span><br><span class=\"line\">  <span class=\"comment\"># 2022/04/27 16:49:37 [INFO] generating a new CA key and certificate from CSR</span></span><br><span class=\"line\">  <span class=\"comment\"># 2022/04/27 16:49:37 [INFO] generate received request</span></span><br><span class=\"line\">  <span class=\"comment\"># 2022/04/27 16:49:37 [INFO] received CSR</span></span><br><span class=\"line\">  <span class=\"comment\"># 2022/04/27 16:49:37 [INFO] generating key: rsa-2048</span></span><br><span class=\"line\">  <span class=\"comment\"># 2022/04/27 16:49:37 [INFO] encoded CSR</span></span><br><span class=\"line\">  <span class=\"comment\"># 2022/04/27 16:49:37 [INFO] signed certificate with serial number 245643466964695827922023924375276493244980966303</span></span><br><span class=\"line\">$ ls</span><br><span class=\"line\">  <span class=\"comment\"># ca-config.json  ca.csr  ca-csr.json  ca-key.pem  ca.pem</span></span><br><span class=\"line\">$ openssl x509 -<span class=\"keyword\">in</span> ca.pem -text -noout | grep <span class=\"string\">\"Not\"</span></span><br><span class=\"line\">  <span class=\"comment\"># Not Before: Apr 27 08:45:00 2022 GMT</span></span><br><span class=\"line\">  <span class=\"comment\"># Not After : Apr 24 08:45:00 2032 GMT</span></span><br></pre></td></tr></table></figure>\n<p>温馨提示: 如果将 expiry 设置为87600h 表示证书过期时间为十年。</p>\n<p><br></p>\n<p>步骤 03.配置ETCD证书相关文件以及生成其证书,<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># etcd 证书请求文件</span></span><br><span class=\"line\">tee etcd-csr.json &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"CN\"</span>: <span class=\"string\">\"etcd\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"hosts\"</span>: [</span><br><span class=\"line\">    <span class=\"string\">\"127.0.0.1\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"10.10.107.223\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"10.10.107.224\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"10.10.107.225\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"etcd1\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"etcd2\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"etcd3\"</span></span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"string\">\"key\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"algo\"</span>: <span class=\"string\">\"rsa\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"size\"</span>: 2048</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"names\"</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"string\">\"C\"</span>: <span class=\"string\">\"CN\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"L\"</span>: <span class=\"string\">\"ChongQing\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"ST\"</span>: <span class=\"string\">\"ChongQing\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"O\"</span>: <span class=\"string\">\"etcd\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"OU\"</span>: <span class=\"string\">\"System\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 利用ca证书签发生成etcd证书</span></span><br><span class=\"line\">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=etcd etcd-csr.json | cfssljson -bare etcd</span><br><span class=\"line\"></span><br><span class=\"line\">$ ls etcd*</span><br><span class=\"line\">etcd.csr  etcd-csr.json  etcd-key.pem  etcd.pem</span><br><span class=\"line\">$ openssl x509 -<span class=\"keyword\">in</span> etcd.pem -text -noout | grep  <span class=\"string\">\"X509v3 Subject Alternative Name\"</span> -A 1</span><br><span class=\"line\">  <span class=\"comment\"># X509v3 Subject Alternative Name:</span></span><br><span class=\"line\">  <span class=\"comment\">#   DNS:etcd1, DNS:etcd2, DNS:etcd3, IP Address:127.0.0.1, IP Address:10.10.107.223, IP Address:10.10.107.224, IP Address:10.10.107.225</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p>步骤 04.【所有Master节点主机】下载部署ETCD集群, 首先我们需要下载etcd软件包, 可以 Github release 找到最新版本的etcd下载路径(<a href=\"https://github.com/etcd-io/etcd/releases/)。\" target=\"_blank\" rel=\"noopener\">https://github.com/etcd-io/etcd/releases/)。</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载</span></span><br><span class=\"line\">wget -L https://github.com/etcd-io/etcd/releases/download/v3.5.4/etcd-v3.5.4-linux-amd64.tar.gz</span><br><span class=\"line\">tar -zxvf etcd-v3.5.4-linux-amd64.tar.gz</span><br><span class=\"line\">cp -a etcd* /usr/<span class=\"built_in\">local</span>/bin/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 版本 </span></span><br><span class=\"line\">etcd --version</span><br><span class=\"line\">  <span class=\"comment\"># etcd Version: 3.5.4</span></span><br><span class=\"line\">  <span class=\"comment\"># Git SHA: 08407ff76</span></span><br><span class=\"line\">  <span class=\"comment\"># Go Version: go1.16.15</span></span><br><span class=\"line\">  <span class=\"comment\"># Go OS/Arch: linux/amd64</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 复制到其它master主机上</span></span><br><span class=\"line\">scp -P 20211 ./etcd-v3.5.4-linux-amd64.tar.gz weiyigeek@master-223:~</span><br><span class=\"line\">scp -P 20211 ./etcd-v3.5.4-linux-amd64.tar.gz weiyigeek@master-224:~</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 分别在master-223与master-224执行, 解压到 /usr/local/ 目录同样复制二进制文件到 /usr/local/bin/</span></span><br><span class=\"line\">tar -zxvf /home/weiyigeek/etcd-v3.5.4-linux-amd64.tar.gz -C /usr/<span class=\"built_in\">local</span>/</span><br><span class=\"line\">cp -a /usr/<span class=\"built_in\">local</span>/etcd-v3.5.4-linux-amd64/etcd* /usr/<span class=\"built_in\">local</span>/bin/</span><br></pre></td></tr></table></figure>\n<p>温馨提示: etcd 官网地址 ( <a href=\"https://etcd.io/\" target=\"_blank\" rel=\"noopener\">https://etcd.io/</a>)</p>\n<p><br></p>\n<p>步骤 05.创建etcd集群所需的配置文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 证书准备</span></span><br><span class=\"line\">mkdir -vp /etc/etcd/pki/</span><br><span class=\"line\">cp *.pem /etc/etcd/pki/</span><br><span class=\"line\">ls /etc/etcd/pki/</span><br><span class=\"line\">  <span class=\"comment\"># ca-key.pem  ca.pem  etcd-key.pem  etcd.pem</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 上传到~家目录,并需要将其复制到 /etc/etcd/pki/ 目录中</span></span><br><span class=\"line\">scp -P 20211 *.pem weiyigeek@master-224:~</span><br><span class=\"line\">scp -P 20211 *.pem weiyigeek@master-223:~</span><br><span class=\"line\">  <span class=\"comment\"># ****************** [ 安全登陆 (Security Login) ] *****************</span></span><br><span class=\"line\">  <span class=\"comment\"># Authorized only. All activity will be monitored and reported.By Security Center.</span></span><br><span class=\"line\">  <span class=\"comment\"># ca-key.pem             100% 1675     3.5MB/s   00:00</span></span><br><span class=\"line\">  <span class=\"comment\"># ca.pem                 100% 1375     5.2MB/s   00:00</span></span><br><span class=\"line\">  <span class=\"comment\"># etcd-key.pem           100% 1679     7.0MB/s   00:00</span></span><br><span class=\"line\">  <span class=\"comment\"># etcd.pem               100% 1399     5.8MB/s   00:00</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># master-225 执行</span></span><br><span class=\"line\">tee /etc/etcd/etcd.conf &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\"><span class=\"comment\"># [成员配置]</span></span><br><span class=\"line\"><span class=\"comment\"># member 名称</span></span><br><span class=\"line\">ETCD_NAME=etcd1</span><br><span class=\"line\"><span class=\"comment\"># 存储数据的目录(注意需要建立)</span></span><br><span class=\"line\">ETCD_DATA_DIR=<span class=\"string\">\"/var/lib/etcd/data\"</span></span><br><span class=\"line\"><span class=\"comment\"># 用于监听客户端etcdctl或者curl连接</span></span><br><span class=\"line\">ETCD_LISTEN_CLIENT_URLS=<span class=\"string\">\"https://10.10.107.225:2379,https://127.0.0.1:2379\"</span></span><br><span class=\"line\"><span class=\"comment\"># 用于监听集群中其它member的连接</span></span><br><span class=\"line\">ETCD_LISTEN_PEER_URLS=<span class=\"string\">\"https://10.10.107.225:2380\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># [证书配置]</span></span><br><span class=\"line\"><span class=\"comment\"># ETCD_CERT_FILE=/etc/etcd/pki/etcd.pem</span></span><br><span class=\"line\"><span class=\"comment\"># ETCD_KEY_FILE=/etc/etcd/pki/etcd-key.pem</span></span><br><span class=\"line\"><span class=\"comment\"># ETCD_TRUSTED_CA_FILE=/etc/kubernetes/pki/ca.pem</span></span><br><span class=\"line\"><span class=\"comment\"># ETCD_CLIENT_CERT_AUTH=true</span></span><br><span class=\"line\"><span class=\"comment\"># ETCD_PEER_CLIENT_CERT_AUTH=true</span></span><br><span class=\"line\"><span class=\"comment\"># ETCD_PEER_CERT_FILE=/etc/etcd/pki/etcd.pem</span></span><br><span class=\"line\"><span class=\"comment\"># ETCD_PEER_KEY_FILE=/etc/etcd/pki/etcd-key.pem</span></span><br><span class=\"line\"><span class=\"comment\"># ETCD_PEER_TRUSTED_CA_FILE=/etc/kubernetes/pki/ca.pem</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># [集群配置]</span></span><br><span class=\"line\"><span class=\"comment\"># 本机地址用于通知客户端，客户端通过此IPs与集群通信;</span></span><br><span class=\"line\">ETCD_ADVERTISE_CLIENT_URLS=<span class=\"string\">\"https://10.10.107.225:2379\"</span></span><br><span class=\"line\"><span class=\"comment\"># 本机地址用于通知集群member与member通信</span></span><br><span class=\"line\">ETCD_INITIAL_ADVERTISE_PEER_URLS=<span class=\"string\">\"https://10.10.107.225:2380\"</span></span><br><span class=\"line\"><span class=\"comment\"># 描述集群中所有节点的信息，本member根据此信息去联系其他member</span></span><br><span class=\"line\">ETCD_INITIAL_CLUSTER=<span class=\"string\">\"etcd1=https://10.10.107.225:2380,etcd2=https://10.10.107.224:2380,etcd3=https://10.10.107.223:2380\"</span></span><br><span class=\"line\"><span class=\"comment\"># 集群状态新建集群时候设置为new,若是想加入某个已经存在的集群设置为existing</span></span><br><span class=\"line\">ETCD_INITIAL_CLUSTER_STATE=new</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># master-224 执行</span></span><br><span class=\"line\">tee /etc/etcd/etcd.conf &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\"><span class=\"comment\"># [成员配置]</span></span><br><span class=\"line\"><span class=\"comment\"># member 名称</span></span><br><span class=\"line\">ETCD_NAME=etcd2</span><br><span class=\"line\"><span class=\"comment\"># 存储数据的目录(注意需要建立)</span></span><br><span class=\"line\">ETCD_DATA_DIR=<span class=\"string\">\"/var/lib/etcd/data\"</span></span><br><span class=\"line\"><span class=\"comment\"># 用于监听客户端etcdctl或者curl连接</span></span><br><span class=\"line\">ETCD_LISTEN_CLIENT_URLS=<span class=\"string\">\"https://10.10.107.224:2379,https://127.0.0.1:2379\"</span></span><br><span class=\"line\"><span class=\"comment\"># 用于监听集群中其它member的连接</span></span><br><span class=\"line\">ETCD_LISTEN_PEER_URLS=<span class=\"string\">\"https://10.10.107.224:2380\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># [集群配置]</span></span><br><span class=\"line\"><span class=\"comment\"># 本机地址用于通知客户端，客户端通过此IPs与集群通信;</span></span><br><span class=\"line\">ETCD_ADVERTISE_CLIENT_URLS=<span class=\"string\">\"https://10.10.107.224:2379\"</span></span><br><span class=\"line\"><span class=\"comment\"># 本机地址用于通知集群member与member通信</span></span><br><span class=\"line\">ETCD_INITIAL_ADVERTISE_PEER_URLS=<span class=\"string\">\"https://10.10.107.224:2380\"</span></span><br><span class=\"line\"><span class=\"comment\"># 描述集群中所有节点的信息，本member根据此信息去联系其他member</span></span><br><span class=\"line\">ETCD_INITIAL_CLUSTER=<span class=\"string\">\"etcd1=https://10.10.107.225:2380,etcd2=https://10.10.107.224:2380,etcd3=https://10.10.107.223:2380\"</span></span><br><span class=\"line\"><span class=\"comment\"># 集群状态新建集群时候设置为new,若是想加入某个已经存在的集群设置为existing</span></span><br><span class=\"line\">ETCD_INITIAL_CLUSTER_STATE=new</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># master-223 执行</span></span><br><span class=\"line\">tee /etc/etcd/etcd.conf &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\"><span class=\"comment\"># [成员配置]</span></span><br><span class=\"line\"><span class=\"comment\"># member 名称</span></span><br><span class=\"line\">ETCD_NAME=etcd3</span><br><span class=\"line\"><span class=\"comment\"># 存储数据的目录(注意需要建立)</span></span><br><span class=\"line\">ETCD_DATA_DIR=<span class=\"string\">\"/var/lib/etcd/data\"</span></span><br><span class=\"line\"><span class=\"comment\"># 用于监听客户端etcdctl或者curl连接</span></span><br><span class=\"line\">ETCD_LISTEN_CLIENT_URLS=<span class=\"string\">\"https://10.10.107.223:2379,https://127.0.0.1:2379\"</span></span><br><span class=\"line\"><span class=\"comment\"># 用于监听集群中其它member的连接</span></span><br><span class=\"line\">ETCD_LISTEN_PEER_URLS=<span class=\"string\">\"https://10.10.107.223:2380\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># [集群配置]</span></span><br><span class=\"line\"><span class=\"comment\"># 本机地址用于通知客户端，客户端通过此IPs与集群通信;</span></span><br><span class=\"line\">ETCD_ADVERTISE_CLIENT_URLS=<span class=\"string\">\"https://10.10.107.223:2379\"</span></span><br><span class=\"line\"><span class=\"comment\"># 本机地址用于通知集群member与member通信</span></span><br><span class=\"line\">ETCD_INITIAL_ADVERTISE_PEER_URLS=<span class=\"string\">\"https://10.10.107.223:2380\"</span></span><br><span class=\"line\"><span class=\"comment\"># 描述集群中所有节点的信息，本member根据此信息去联系其他member</span></span><br><span class=\"line\">ETCD_INITIAL_CLUSTER=<span class=\"string\">\"etcd1=https://10.10.107.225:2380,etcd2=https://10.10.107.224:2380,etcd3=https://10.10.107.223:2380\"</span></span><br><span class=\"line\"><span class=\"comment\"># 集群状态新建集群时候设置为new,若是想加入某个已经存在的集群设置为existing</span></span><br><span class=\"line\">ETCD_INITIAL_CLUSTER_STATE=new</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<p>步骤 06.【所有Master节点主机】创建配置 etcd 的 systemd 管理配置文件，并启动其服务。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -vp /var/lib/etcd/</span><br><span class=\"line\">cat &gt; /usr/lib/systemd/system/etcd.service &lt;&lt;EOF</span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=Etcd Server</span><br><span class=\"line\">Documentation=https://github.com/etcd-io/etcd</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\">After=network-online.target</span><br><span class=\"line\">wants=network-online.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=notify</span><br><span class=\"line\">WorkingDirectory=/var/lib/etcd/</span><br><span class=\"line\">EnvironmentFile=-/etc/etcd/etcd.conf</span><br><span class=\"line\">ExecStart=/usr/<span class=\"built_in\">local</span>/bin/etcd \\</span><br><span class=\"line\">  --client-cert-auth \\</span><br><span class=\"line\">  --trusted-ca-file /etc/etcd/pki/ca.pem \\</span><br><span class=\"line\">  --cert-file /etc/etcd/pki/etcd.pem \\</span><br><span class=\"line\">  --key-file /etc/etcd/pki/etcd-key.pem \\</span><br><span class=\"line\">  --peer-client-cert-auth \\</span><br><span class=\"line\">  --peer-trusted-ca-file /etc/etcd/pki/ca.pem \\</span><br><span class=\"line\">  --peer-cert-file /etc/etcd/pki/etcd.pem \\</span><br><span class=\"line\">  --peer-key-file /etc/etcd/pki/etcd-key.pem</span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\">RestartSec=5</span><br><span class=\"line\">LimitNOFILE=65535</span><br><span class=\"line\">LimitNPROC=65535</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重载 systemd &amp;&amp; 开机启动与手动启用etcd服务</span></span><br><span class=\"line\">systemctl daemon-reload &amp;&amp; systemctl <span class=\"built_in\">enable</span> --now etcd.service</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<p>步骤 07.【所有Master节点主机】查看各个master节点的etcd集群服务是否正常及其健康状态。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 服务查看</span></span><br><span class=\"line\">systemctl status etcd.service</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 利用 etcdctl 工具查看集群成员信息</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> ETCDCTL_API=3</span><br><span class=\"line\">etcdctl --endpoints=https://10.10.107.225:2379,https://10.10.107.224:2379,https://10.10.107.223:2379 \\</span><br><span class=\"line\">--cacert=<span class=\"string\">\"/etc/etcd/pki/ca.pem\"</span> --cert=<span class=\"string\">\"/etc/etcd/pki/etcd.pem\"</span> --key=<span class=\"string\">\"/etc/etcd/pki/etcd-key.pem\"</span> \\</span><br><span class=\"line\">--write-out=table member list</span><br><span class=\"line\">  <span class=\"comment\"># +------------------+---------+-------+----------------------------+----------------------------+------------+</span></span><br><span class=\"line\">  <span class=\"comment\"># |        ID        | STATUS  | NAME  |         PEER ADDRS         |        CLIENT ADDRS        | IS LEARNER |</span></span><br><span class=\"line\">  <span class=\"comment\"># +------------------+---------+-------+----------------------------+----------------------------+------------+</span></span><br><span class=\"line\">  <span class=\"comment\"># | 144934d02ad45ec7 | started | etcd3 | https://10.10.107.223:2380 | https://10.10.107.223:2379 |      false |</span></span><br><span class=\"line\">  <span class=\"comment\"># | 2480d95a2df867a4 | started | etcd2 | https://10.10.107.224:2380 | https://10.10.107.224:2379 |      false |</span></span><br><span class=\"line\">  <span class=\"comment\"># | 2e8fddd3366a3d88 | started | etcd1 | https://10.10.107.225:2380 | https://10.10.107.225:2379 |      false |</span></span><br><span class=\"line\">  <span class=\"comment\"># +------------------+---------+-------+----------------------------+----------------------------+------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 集群节点信息</span></span><br><span class=\"line\">etcdctl --endpoints=https://10.10.107.225:2379,https://10.10.107.224:2379,https://10.10.107.223:2379 \\</span><br><span class=\"line\">--cacert=<span class=\"string\">\"/etc/etcd/pki/ca.pem\"</span> --cert=<span class=\"string\">\"/etc/etcd/pki/etcd.pem\"</span> --key=<span class=\"string\">\"/etc/etcd/pki/etcd-key.pem\"</span>  \\</span><br><span class=\"line\">--write-out=table endpoint status</span><br><span class=\"line\">  <span class=\"comment\"># +----------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span></span><br><span class=\"line\">  <span class=\"comment\"># |          ENDPOINT          |        ID        | VERSION | DB SIZE | IS LEADER | IS LEARNER | RAFT TERM | RAFT INDEX | RAFT APPLIED INDEX | ERRORS |</span></span><br><span class=\"line\">  <span class=\"comment\"># +----------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span></span><br><span class=\"line\">  <span class=\"comment\"># | https://10.10.107.225:2379 | 2e8fddd3366a3d88 |   3.5.4 |   20 kB |     false |      false |         3 |         12 |                 12 |        |</span></span><br><span class=\"line\">  <span class=\"comment\"># | https://10.10.107.224:2379 | 2480d95a2df867a4 |   3.5.4 |   20 kB |      true |      false |         3 |         12 |                 12 |        |</span></span><br><span class=\"line\">  <span class=\"comment\"># | https://10.10.107.223:2379 | 144934d02ad45ec7 |   3.5.4 |   20 kB |     false |      false |         3 |         12 |                 12 |        |</span></span><br><span class=\"line\">  <span class=\"comment\"># +----------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 集群节点健康状态</span></span><br><span class=\"line\">etcdctl --endpoints=https://10.10.107.225:2379,https://10.10.107.224:2379,https://10.10.107.223:2379 \\</span><br><span class=\"line\">--cacert=<span class=\"string\">\"/etc/etcd/pki/ca.pem\"</span> --cert=<span class=\"string\">\"/etc/etcd/pki/etcd.pem\"</span> --key=<span class=\"string\">\"/etc/etcd/pki/etcd-key.pem\"</span>  \\</span><br><span class=\"line\">--write-out=table endpoint health</span><br><span class=\"line\">  <span class=\"comment\"># +----------------------------+--------+-------------+-------+</span></span><br><span class=\"line\">  <span class=\"comment\"># |          ENDPOINT          | HEALTH |    TOOK     | ERROR |</span></span><br><span class=\"line\">  <span class=\"comment\"># +----------------------------+--------+-------------+-------+</span></span><br><span class=\"line\">  <span class=\"comment\"># | https://10.10.107.225:2379 |   true |  9.151813ms |       |</span></span><br><span class=\"line\">  <span class=\"comment\"># | https://10.10.107.224:2379 |   true | 10.965914ms |       |</span></span><br><span class=\"line\">  <span class=\"comment\"># | https://10.10.107.223:2379 |   true | 11.165228ms |       |</span></span><br><span class=\"line\">  <span class=\"comment\"># +----------------------------+--------+-------------+-------+</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># K8S 集群中内置 etcd 容器 pod 访问 指定证书文件路径不同，请注意</span></span><br><span class=\"line\"><span class=\"comment\"># etcdctl --endpoints=https://192.168.12.107:2379,https://192.168.12.108:2379 \\</span></span><br><span class=\"line\"><span class=\"comment\"># --cacert=\"/etc/kubernetes/pki/etcd/ca.crt\" --cert=\"/etc/kubernetes/pki/etcd/server.crt\" --key=\"/etc/kubernetes/pki/etcd/server.key\"  \\</span></span><br><span class=\"line\"><span class=\"comment\"># --write-out=table endpoint health</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 集群节点性能测试</span></span><br><span class=\"line\">etcdctl --endpoints=https://10.10.107.225:2379,https://10.10.107.224:2379,https://10.10.107.223:2379 \\</span><br><span class=\"line\">--cacert=<span class=\"string\">\"/etc/etcd/pki/ca.pem\"</span> --cert=<span class=\"string\">\"/etc/etcd/pki/etcd.pem\"</span> --key=<span class=\"string\">\"/etc/etcd/pki/etcd-key.pem\"</span>  \\</span><br><span class=\"line\">--write-out=tableendpoint check perf</span><br><span class=\"line\"><span class=\"comment\"># 59 / 60 Boooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooom   !  98.33%PASS: Throughput is 148 writes/s</span></span><br><span class=\"line\"><span class=\"comment\"># Slowest request took too long: 1.344053s</span></span><br><span class=\"line\"><span class=\"comment\"># Stddev too high: 0.143059s</span></span><br><span class=\"line\"><span class=\"comment\"># FAIL</span></span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<h3 id=\"5-Containerd-运行时安装部署\"><a href=\"#5-Containerd-运行时安装部署\" class=\"headerlink\" title=\"5.Containerd 运行时安装部署\"></a>5.Containerd 运行时安装部署</h3><p>步骤 01.【所有节点】在各主机中安装二进制版本的 containerd.io 运行时服务，Kubernertes 通过 CRI 插件来连接 containerd 服务中, 控制容器的生命周期。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 从 Github 中下载最新的版本的 cri-containerd-cni </span></span><br><span class=\"line\">wget -L https://github.com/containerd/containerd/releases/download/v1.6.4/cri-containerd-cni-1.6.4-linux-amd64.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压到当前cri-containerd-cni目录中。</span></span><br><span class=\"line\">mkdir -vp cri-containerd-cni</span><br><span class=\"line\">tar -zxvf cri-containerd-cni-1.6.4-linux-amd64.tar.gz -C cri-containerd-cni</span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<p>步骤 02.查看其文件以及配置文件路径信息。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ tree ./cri-containerd-cni/</span><br><span class=\"line\">.</span><br><span class=\"line\">├── etc</span><br><span class=\"line\">│   ├── cni</span><br><span class=\"line\">│   │   └── net.d</span><br><span class=\"line\">│   │       └── 10-containerd-net.conflist</span><br><span class=\"line\">│   ├── crictl.yaml</span><br><span class=\"line\">│   └── systemd</span><br><span class=\"line\">│       └── system</span><br><span class=\"line\">│           └── containerd.service</span><br><span class=\"line\">├── opt</span><br><span class=\"line\">│   ├── cni</span><br><span class=\"line\">│   │   └── bin</span><br><span class=\"line\">│   │       ├── bandwidth</span><br><span class=\"line\">│   │       ├── bridge</span><br><span class=\"line\">│   │       ├── dhcp</span><br><span class=\"line\">│   │       ├── firewall</span><br><span class=\"line\">│   │       ├── host-device</span><br><span class=\"line\">│   │       ├── host-local</span><br><span class=\"line\">│   │       ├── ipvlan</span><br><span class=\"line\">│   │       ├── loopback</span><br><span class=\"line\">│   │       ├── macvlan</span><br><span class=\"line\">│   │       ├── portmap</span><br><span class=\"line\">│   │       ├── ptp</span><br><span class=\"line\">│   │       ├── sbr</span><br><span class=\"line\">│   │       ├── static</span><br><span class=\"line\">│   │       ├── tuning</span><br><span class=\"line\">│   │       ├── vlan</span><br><span class=\"line\">│   │       └── vrf</span><br><span class=\"line\">│   └── containerd</span><br><span class=\"line\">│       └── cluster</span><br><span class=\"line\">│           ├── gce</span><br><span class=\"line\">│           │   ├── cloud-init</span><br><span class=\"line\">│           │   │   ├── master.yaml</span><br><span class=\"line\">│           │   │   └── node.yaml</span><br><span class=\"line\">│           │   ├── cni.template</span><br><span class=\"line\">│           │   ├── configure.sh</span><br><span class=\"line\">│           │   └── env</span><br><span class=\"line\">│           └── version</span><br><span class=\"line\">└── usr</span><br><span class=\"line\">    └── <span class=\"built_in\">local</span></span><br><span class=\"line\">        ├── bin</span><br><span class=\"line\">        │   ├── containerd</span><br><span class=\"line\">        │   ├── containerd-shim</span><br><span class=\"line\">        │   ├── containerd-shim-runc-v1</span><br><span class=\"line\">        │   ├── containerd-shim-runc-v2</span><br><span class=\"line\">        │   ├── containerd-stress</span><br><span class=\"line\">        │   ├── crictl</span><br><span class=\"line\">        │   ├── critest</span><br><span class=\"line\">        │   ├── ctd-decoder</span><br><span class=\"line\">        │   └── ctr</span><br><span class=\"line\">        └── sbin</span><br><span class=\"line\">            └── runc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 然后在所有节点上复制到上述文件夹到对应目录中</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> ./cri-containerd-cni/</span><br><span class=\"line\">cp -r etc/ /</span><br><span class=\"line\">cp -r opt/ /</span><br><span class=\"line\">cp -r usr/ /</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 03.【所有节点】进行containerd 配置创建并修改 config.toml .<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -vp /etc/containerd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 默认配置生成</span></span><br><span class=\"line\">containerd config default &gt;/etc/containerd/config.toml</span><br><span class=\"line\">ls /etc/containerd/config.toml</span><br><span class=\"line\">  <span class=\"comment\"># /etc/containerd/config.toml</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># pause 镜像源</span></span><br><span class=\"line\">sed -i <span class=\"string\">\"s#k8s.gcr.io/pause#registry.cn-hangzhou.aliyuncs.com/google_containers/pause#g\"</span>  /etc/containerd/config.toml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用 SystemdCgroup</span></span><br><span class=\"line\">sed -i <span class=\"string\">'s#SystemdCgroup = false#SystemdCgroup = true#g'</span> /etc/containerd/config.toml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># docker.io mirror</span></span><br><span class=\"line\">sed -i <span class=\"string\">'/registry.mirrors]/a\\ \\ \\ \\ \\ \\ \\ \\ [plugins.\"io.containerd.grpc.v1.cri\".registry.mirrors.\"docker.io\"]'</span> /etc/containerd/config.toml</span><br><span class=\"line\">sed -i <span class=\"string\">'/registry.mirrors.\"docker.io\"]/a\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ endpoint = [\"https://xlx9erfu.mirror.aliyuncs.com\",\"https://docker.mirrors.ustc.edu.cn\"]'</span> /etc/containerd/config.toml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># gcr.io mirror</span></span><br><span class=\"line\">sed -i <span class=\"string\">'/registry.mirrors]/a\\ \\ \\ \\ \\ \\ \\ \\ [plugins.\"io.containerd.grpc.v1.cri\".registry.mirrors.\"gcr.io\"]'</span> /etc/containerd/config.toml</span><br><span class=\"line\">sed -i <span class=\"string\">'/registry.mirrors.\"gcr.io\"]/a\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ endpoint = [\"https://gcr.mirrors.ustc.edu.cn\"]'</span> /etc/containerd/config.toml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># k8s.gcr.io mirror</span></span><br><span class=\"line\">sed -i <span class=\"string\">'/registry.mirrors]/a\\ \\ \\ \\ \\ \\ \\ \\ [plugins.\"io.containerd.grpc.v1.cri\".registry.mirrors.\"k8s.gcr.io\"]'</span> /etc/containerd/config.toml</span><br><span class=\"line\">sed -i <span class=\"string\">'/registry.mirrors.\"k8s.gcr.io\"]/a\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ endpoint = [\"https://gcr.mirrors.ustc.edu.cn/google-containers/\",\"https://registry.cn-hangzhou.aliyuncs.com/google_containers/\"]'</span> /etc/containerd/config.toml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># quay.io mirror</span></span><br><span class=\"line\">sed -i <span class=\"string\">'/registry.mirrors]/a\\ \\ \\ \\ \\ \\ \\ \\ [plugins.\"io.containerd.grpc.v1.cri\".registry.mirrors.\"quay.io\"]'</span> /etc/containerd/config.toml</span><br><span class=\"line\">sed -i <span class=\"string\">'/registry.mirrors.\"quay.io\"]/a\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ endpoint = [\"https://quay.mirrors.ustc.edu.cn\"]'</span> /etc/containerd/config.toml</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 04.客户端工具 runtime 与 镜像 端点配置:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 手动设置临时生效</span></span><br><span class=\"line\"><span class=\"comment\"># crictl config runtime-endpoint /run/containerd/containerd.sock</span></span><br><span class=\"line\"><span class=\"comment\"># /run/containerd/containerd.sock </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置文件设置永久生效</span></span><br><span class=\"line\">cat &lt;&lt;EOF &gt; /etc/crictl.yaml</span><br><span class=\"line\">runtime-endpoint: unix:///run/containerd/containerd.sock</span><br><span class=\"line\">image-endpoint: unix:///run/containerd/containerd.sock</span><br><span class=\"line\">timeout: 10</span><br><span class=\"line\">debug: <span class=\"literal\">false</span></span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 05.重载 systemd自启和启动containerd.io服务。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl daemon-reload &amp;&amp; systemctl <span class=\"built_in\">enable</span> --now containerd.service</span><br><span class=\"line\">systemctl status containerd.service</span><br><span class=\"line\">ctr version</span><br><span class=\"line\">  <span class=\"comment\"># Client:</span></span><br><span class=\"line\">  <span class=\"comment\">#   Version:  1.5.11</span></span><br><span class=\"line\">  <span class=\"comment\">#   Revision: 3df54a852345ae127d1fa3092b95168e4a88e2f8</span></span><br><span class=\"line\">  <span class=\"comment\">#   Go version: go1.17.8</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># Server:</span></span><br><span class=\"line\">  <span class=\"comment\">#   Version:  1.5.11</span></span><br><span class=\"line\">  <span class=\"comment\">#   Revision: 3df54a852345ae127d1fa3092b95168e4a88e2f8</span></span><br><span class=\"line\">  <span class=\"comment\">#   UUID: 71a28bbb-6ed6-408d-a873-e394d48b35d8</span></span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p>步骤 06.用于根据OCI规范生成和运行容器的CLI工具 runc 版本查看<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">runc -v</span><br><span class=\"line\">  <span class=\"comment\"># runc version 1.1.1</span></span><br><span class=\"line\">  <span class=\"comment\"># commit: v1.1.1-0-g52de29d7</span></span><br><span class=\"line\">  <span class=\"comment\"># spec: 1.0.2-dev</span></span><br><span class=\"line\">  <span class=\"comment\"># go: go1.17.9</span></span><br><span class=\"line\">  <span class=\"comment\"># libseccomp: 2.5.1</span></span><br></pre></td></tr></table></figure></p>\n<p>温馨提示: 当默认 runc 执行提示 <code>runc: symbol lookup error: runc: undefined symbol: seccomp_notify_respond</code> 时，由于上述软件包中包含的runc对系统依赖过多，所以建议单独下载安装 runc 二进制项目(<a href=\"https://github.com/opencontainers/runc/\" target=\"_blank\" rel=\"noopener\">https://github.com/opencontainers/runc/</a>)<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/opencontainers/runc/releases/download/v1.1.1/runc.amd64</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 执行权限赋予</span></span><br><span class=\"line\">chmod +x runc.amd64</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 替换掉 /usr/local/sbin/ 路径原软件包中的 runc</span></span><br><span class=\"line\">mv runc.amd64 /usr/<span class=\"built_in\">local</span>/sbin/runc</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"6-Kubernetes-集群安装部署\"><a href=\"#6-Kubernetes-集群安装部署\" class=\"headerlink\" title=\"6.Kubernetes 集群安装部署\"></a>6.Kubernetes 集群安装部署</h3><h4 id=\"1-二进制软件包下载安装-（手动-此处以该实践为例）\"><a href=\"#1-二进制软件包下载安装-（手动-此处以该实践为例）\" class=\"headerlink\" title=\"1) 二进制软件包下载安装 （手动-此处以该实践为例）\"></a>1) 二进制软件包下载安装 （手动-此处以该实践为例）</h4><p>步骤 01.【master-225】手动从k8s.io下载Kubernetes软件包并解压安装, 当前最新版本为 v1.23.6 。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 如果下载较慢请使用某雷</span></span><br><span class=\"line\">wget -L</span><br><span class=\"line\">https://dl.k8s.io/v1.23.6/kubernetes-server-linux-amd64.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 解压</span></span><br><span class=\"line\">/app/k8s-init-work/tools<span class=\"comment\"># tar -zxf kubernetes-server-linux-amd64.tar.gz</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 安装二进制文件到 /usr/local/bin</span></span><br><span class=\"line\">/app/k8s-init-work/tools/kubernetes/server/bin<span class=\"comment\"># ls</span></span><br><span class=\"line\">  <span class=\"comment\"># apiextensions-apiserver  kube-apiserver.docker_tag           kube-controller-manager.tar  kube-log-runner        kube-scheduler</span></span><br><span class=\"line\">  <span class=\"comment\"># kubeadm                  kube-apiserver.tar                  kubectl                      kube-proxy             kube-scheduler.docker_tag</span></span><br><span class=\"line\">  <span class=\"comment\"># kube-aggregator          kube-controller-manager             kubectl-convert              kube-proxy.docker_tag  kube-scheduler.tar</span></span><br><span class=\"line\">  <span class=\"comment\"># kube-apiserver           kube-controller-manager.docker_tag  kubelet                      kube-proxy.tar         mounter</span></span><br><span class=\"line\"></span><br><span class=\"line\">cp kube-apiserver kube-controller-manager kube-scheduler kube-proxy kubelet kubeadm  kubectl /usr/<span class=\"built_in\">local</span>/bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 验证安装</span></span><br><span class=\"line\">kubectl version</span><br><span class=\"line\">  <span class=\"comment\"># Client Version: version.Info&#123;Major:\"1\", Minor:\"23\", GitVersion:\"v1.23.6\", GitCommit:\"ad3338546da947756e8a88aa6822e9c11e7eac22\", GitTreeState:\"clean\", BuildDate:\"2022-04-14T08:49:13Z\", GoVersion:\"go1.17.9\", Compiler:\"gc\", Platform:\"linux/amd64\"&#125;</span></span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 02.【master-225】利用scp将kubernetes相关软件包分发到其它机器中。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp -P 20211 kube-apiserver kube-controller-manager kube-scheduler kube-proxy kubelet kubeadm kubectl weiyigeek@master-223:/tmp</span><br><span class=\"line\">scp -P 20211 kube-apiserver kube-controller-manager kube-scheduler kube-proxy kubelet kubeadm kubectl weiyigeek@master-224:/tmp</span><br><span class=\"line\">scp -P 20211 kube-apiserver kube-controller-manager kube-scheduler kube-proxy kubelet kubeadm kubectl weiyigeek@node-1:/tmp</span><br><span class=\"line\">scp -P 20211 kube-apiserver kube-controller-manager kube-scheduler kube-proxy kubelet kubeadm kubectl weiyigeek@node-2:/tmp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 复制如下到指定bin目录中(注意node节点只需要  kube-proxy kubelet 、kubeadm 在此处可选)</span></span><br><span class=\"line\">cp kube-apiserver kube-controller-manager kube-scheduler kube-proxy kubelet kubeadm kubectl /usr/<span class=\"built_in\">local</span>/bin/</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 03.【所有节点】在集群所有节点上创建准备如下目录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -vp /etc/kubernetes/&#123;manifests,pki,ssl,cfg&#125; /var/<span class=\"built_in\">log</span>/kubernetes /var/lib/kubelet</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<h4 id=\"2-部署配置-kube-apiserver\"><a href=\"#2-部署配置-kube-apiserver\" class=\"headerlink\" title=\"2) 部署配置 kube-apiserver\"></a>2) 部署配置 kube-apiserver</h4><p>描述: 它是集群所有服务请求访问的入口点, 通过 API 接口操作集群中的资源。</p>\n<p>步骤 01.【master-225】创建apiserver证书请求文件并使用上一章生成的CA签发证书。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建证书申请文件，注意下述文件hosts字段中IP为所有Master/LB/VIP IP,为了方便后期扩容可以多写几个预留的IP。</span></span><br><span class=\"line\"><span class=\"comment\"># 同时还需要填写 service 网络的首个IP(一般是 kube-apiserver 指定的 service-cluster-ip-range 网段的第一个IP，如 10.96.0.1)。</span></span><br><span class=\"line\">tee apiserver-csr.json &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"CN\"</span>: <span class=\"string\">\"kubernetes\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"hosts\"</span>: [</span><br><span class=\"line\">    <span class=\"string\">\"127.0.0.1\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"10.10.107.223\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"10.10.107.224\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"10.10.107.225\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"10.10.107.222\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"10.96.0.1\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"weiyigeek.cluster.k8s\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"master-223\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"master-224\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"master-225\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"kubernetes\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"kubernetes.default.svc\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"kubernetes.default.svc.cluster\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"kubernetes.default.svc.cluster.local\"</span></span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"string\">\"key\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"algo\"</span>: <span class=\"string\">\"rsa\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"size\"</span>: 2048</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"names\"</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"string\">\"C\"</span>: <span class=\"string\">\"CN\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"L\"</span>: <span class=\"string\">\"ChongQing\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"ST\"</span>: <span class=\"string\">\"ChongQing\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"O\"</span>: <span class=\"string\">\"k8s\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"OU\"</span>: <span class=\"string\">\"System\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用自签CA签发 kube-apiserver HTTPS证书</span></span><br><span class=\"line\">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes apiserver-csr.json | cfssljson -bare apiserver</span><br><span class=\"line\"></span><br><span class=\"line\">$ ls apiserver*</span><br><span class=\"line\">apiserver.csr  apiserver-csr.json  apiserver-key.pem  apiserver.pem</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 复制到自定义目录</span></span><br><span class=\"line\">cp *.pem /etc/kubernetes/ssl/</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 02.【master-225】创建TLS机制所需TOKEN<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt; /etc/kubernetes/bootstrap-token.csv &lt;&lt; EOF</span><br><span class=\"line\">$(head -c 16 /dev/urandom | od -An -t x | tr -d <span class=\"string\">' '</span>),kubelet-bootstrap,10001,<span class=\"string\">\"system:bootstrappers\"</span></span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure></p>\n<p>温馨提示: 启用 TLS Bootstrapping 机制Node节点kubelet和kube-proxy要与kube-apiserver进行通信，必须使用CA签发的有效证书才可以，当Node节点很多时，这种客户端证书颁发需要大量工作，同样也会增加集群扩展复杂度。<br>为了简化流程，Kubernetes引入了TLS bootstraping机制来自动颁发客户端证书，kubelet会以一个低权限用户自动向apiserver申请证书，kubelet的证书由apiserver动态签署。所以强烈建议在Node上使用这种方式，目前主要用于kubelet，kube-proxy还是由我们统一颁发一个证书。</p>\n<p><br/></p>\n<p>步骤 03.【master-225】创建 kube-apiserver 配置文件<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt; /etc/kubernetes/cfg/kube-apiserver.conf &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">KUBE_APISERVER_OPTS=<span class=\"string\">\"--apiserver-count=3 \\</span></span><br><span class=\"line\"><span class=\"string\">--advertise-address=10.10.107.225 \\</span></span><br><span class=\"line\"><span class=\"string\">--allow-privileged=true \\</span></span><br><span class=\"line\"><span class=\"string\">--authorization-mode=RBAC,Node \\</span></span><br><span class=\"line\"><span class=\"string\">--bind-address=0.0.0.0 \\</span></span><br><span class=\"line\"><span class=\"string\">--enable-aggregator-routing=true \\</span></span><br><span class=\"line\"><span class=\"string\">--enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota \\</span></span><br><span class=\"line\"><span class=\"string\">--enable-bootstrap-token-auth=true \\</span></span><br><span class=\"line\"><span class=\"string\">--token-auth-file=/etc/kubernetes/bootstrap-token.csv \\</span></span><br><span class=\"line\"><span class=\"string\">--secure-port=6443 \\</span></span><br><span class=\"line\"><span class=\"string\">--service-node-port-range=30000-32767 \\</span></span><br><span class=\"line\"><span class=\"string\">--service-cluster-ip-range=10.96.0.0/16 \\</span></span><br><span class=\"line\"><span class=\"string\">--client-ca-file=/etc/kubernetes/ssl/ca.pem \\</span></span><br><span class=\"line\"><span class=\"string\">--tls-cert-file=/etc/kubernetes/ssl/apiserver.pem  \\</span></span><br><span class=\"line\"><span class=\"string\">--tls-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem \\</span></span><br><span class=\"line\"><span class=\"string\">--kubelet-client-certificate=/etc/kubernetes/ssl/apiserver.pem \\</span></span><br><span class=\"line\"><span class=\"string\">--kubelet-client-key=/etc/kubernetes/ssl/apiserver-key.pem \\</span></span><br><span class=\"line\"><span class=\"string\">--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname \\</span></span><br><span class=\"line\"><span class=\"string\">--etcd-cafile=/etc/kubernetes/ssl/ca.pem \\</span></span><br><span class=\"line\"><span class=\"string\">--etcd-certfile=/etc/kubernetes/ssl/etcd.pem \\</span></span><br><span class=\"line\"><span class=\"string\">--etcd-keyfile=/etc/kubernetes/ssl/etcd-key.pem \\</span></span><br><span class=\"line\"><span class=\"string\">--etcd-servers=https://10.10.107.225:2379,https://10.10.107.224:2379,https://10.10.107.223:2379 \\</span></span><br><span class=\"line\"><span class=\"string\">--service-account-issuer=https://kubernetes.default.svc.cluster.local \\</span></span><br><span class=\"line\"><span class=\"string\">--service-account-key-file=/etc/kubernetes/ssl/ca-key.pem \\</span></span><br><span class=\"line\"><span class=\"string\">--service-account-signing-key-file=/etc/kubernetes/ssl/ca-key.pem \\</span></span><br><span class=\"line\"><span class=\"string\">--proxy-client-cert-file=/etc/kubernetes/ssl/apiserver.pem \\</span></span><br><span class=\"line\"><span class=\"string\">--proxy-client-key-file=/etc/kubernetes/ssl/apiserver-key.pem \\</span></span><br><span class=\"line\"><span class=\"string\">--requestheader-allowed-names=kubernetes \\</span></span><br><span class=\"line\"><span class=\"string\">--requestheader-extra-headers-prefix=X-Remote-Extra- \\</span></span><br><span class=\"line\"><span class=\"string\">--requestheader-group-headers=X-Remote-Group \\</span></span><br><span class=\"line\"><span class=\"string\">--requestheader-username-headers=X-Remote-User \\</span></span><br><span class=\"line\"><span class=\"string\">--requestheader-client-ca-file=/etc/kubernetes/ssl/ca.pem \\</span></span><br><span class=\"line\"><span class=\"string\">--v=2 \\</span></span><br><span class=\"line\"><span class=\"string\">--event-ttl=1h \\</span></span><br><span class=\"line\"><span class=\"string\">--feature-gates=TTLAfterFinished=true \\</span></span><br><span class=\"line\"><span class=\"string\">--logtostderr=false \\</span></span><br><span class=\"line\"><span class=\"string\">--log-dir=/var/log/kubernetes\"</span></span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 审计日志可选</span></span><br><span class=\"line\"><span class=\"comment\"># --audit-log-maxage=30</span></span><br><span class=\"line\"><span class=\"comment\"># --audit-log-maxbackup=3</span></span><br><span class=\"line\"><span class=\"comment\"># --audit-log-maxsize=100</span></span><br><span class=\"line\"><span class=\"comment\"># --audit-log-path=/var/log/kubernetes/kube-apiserver.log\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># –logtostderr：启用日志</span></span><br><span class=\"line\"><span class=\"comment\"># —v：日志等级</span></span><br><span class=\"line\"><span class=\"comment\"># –log-dir：日志目录</span></span><br><span class=\"line\"><span class=\"comment\"># –etcd-servers：etcd集群地址</span></span><br><span class=\"line\"><span class=\"comment\"># –bind-address：监听地址</span></span><br><span class=\"line\"><span class=\"comment\"># –secure-port：https安全端口</span></span><br><span class=\"line\"><span class=\"comment\"># –advertise-address：集群通告地址</span></span><br><span class=\"line\"><span class=\"comment\"># –allow-privileged：启用授权</span></span><br><span class=\"line\"><span class=\"comment\"># –service-cluster-ip-range：Service虚拟IP地址段</span></span><br><span class=\"line\"><span class=\"comment\"># –enable-admission-plugins：准入控制模块</span></span><br><span class=\"line\"><span class=\"comment\"># –authorization-mode：认证授权，启用RBAC授权和节点自管理</span></span><br><span class=\"line\"><span class=\"comment\"># –enable-bootstrap-token-auth：启用TLS bootstrap机制</span></span><br><span class=\"line\"><span class=\"comment\"># –token-auth-file：bootstrap token文件</span></span><br><span class=\"line\"><span class=\"comment\"># –service-node-port-range：Service nodeport类型默认分配端口范围</span></span><br><span class=\"line\"><span class=\"comment\"># –kubelet-client-xxx：apiserver访问kubelet客户端证书</span></span><br><span class=\"line\"><span class=\"comment\"># –tls-xxx-file：apiserver https证书</span></span><br><span class=\"line\"><span class=\"comment\"># –etcd-xxxfile：连接Etcd集群证书</span></span><br><span class=\"line\"><span class=\"comment\"># –audit-log-xxx：审计日志</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 温馨提示: 在 1.23.* 版本之后请勿使用如下参数。</span></span><br><span class=\"line\">Flag --<span class=\"built_in\">enable</span>-swagger-ui has been deprecated,</span><br><span class=\"line\">Flag --insecure-port has been deprecated,</span><br><span class=\"line\">Flag --alsologtostderr has been deprecated,</span><br><span class=\"line\">Flag --logtostderr has been deprecated, will be removed <span class=\"keyword\">in</span> a future release,</span><br><span class=\"line\">Flag --<span class=\"built_in\">log</span>-dir has been deprecated, will be removed <span class=\"keyword\">in</span> a future release,</span><br><span class=\"line\">Flag -- TTLAfterFinished=<span class=\"literal\">true</span>. It will be removed <span class=\"keyword\">in</span> a future release. (还可使用)</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 04.【master-225】创建kube-apiserver服务管理配置文件<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt; /lib/systemd/system/kube-apiserver.service &lt;&lt; <span class=\"string\">\"EOF\"</span></span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=Kubernetes API Server</span><br><span class=\"line\">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class=\"line\">After=etcd.service</span><br><span class=\"line\">Wants=etcd.service</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">EnvironmentFile=-/etc/kubernetes/cfg/kube-apiserver.conf</span><br><span class=\"line\">ExecStart=/usr/<span class=\"built_in\">local</span>/bin/kube-apiserver <span class=\"variable\">$KUBE_APISERVER_OPTS</span></span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\">RestartSec=5</span><br><span class=\"line\">Type=notify</span><br><span class=\"line\">LimitNOFILE=65536</span><br><span class=\"line\">LimitNPROC=65535</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 05.将上述创建生成的文件目录同步到集群的其它master节点上.<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># master - 225  /etc/kubernetes/ 目录结构</span></span><br><span class=\"line\">tree /etc/kubernetes/</span><br><span class=\"line\">/etc/kubernetes/</span><br><span class=\"line\">├── bootstrap-token.csv</span><br><span class=\"line\">├── cfg</span><br><span class=\"line\">│   └── kube-apiserver.conf</span><br><span class=\"line\">├── manifests</span><br><span class=\"line\">├── pki</span><br><span class=\"line\">└── ssl</span><br><span class=\"line\">    ├── apiserver-key.pem</span><br><span class=\"line\">    ├── apiserver.pem</span><br><span class=\"line\">    ├── ca-key.pem</span><br><span class=\"line\">    ├── ca.pem</span><br><span class=\"line\">    ├── etcd-key.pem</span><br><span class=\"line\">    └── etcd.pem</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 证书及kube-apiserver.conf配置文件</span></span><br><span class=\"line\">scp -P 20211 -R /etc/kubernetes/ weiyigeek@master-223:/tmp</span><br><span class=\"line\">scp -P 20211 -R /etc/kubernetes/ weiyigeek@master-224:/tmp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># kube-apiserver 服务管理配置文件</span></span><br><span class=\"line\">scp -P 20211 /lib/systemd/system/kube-apiserver.service weiyigeek@master-223:/tmp</span><br><span class=\"line\">scp -P 20211 /lib/systemd/system/kube-apiserver.service weiyigeek@master-224:/tmp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 【master-223】 【master-224】 执行如下命令将上传到/tmp相关文件放入指定目录中</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /tmp/ &amp;&amp; cp -r /tmp/kubernetes/ /etc/</span><br><span class=\"line\">mv kube-apiserver.service /lib/systemd/system/kube-apiserver.service</span><br><span class=\"line\">mv kube-apiserver kubectl  kube-proxy  kube-scheduler kubeadm  kube-controller-manager  kubelet /usr/<span class=\"built_in\">local</span>/bin</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 06.分别修改 /etc/kubernetes/cfg/kube-apiserver.conf 文件中 <code>--advertise-address=10.10.107.225</code><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 【master-223】</span></span><br><span class=\"line\">sed -i <span class=\"string\">'s#--advertise-address=10.10.107.225#--advertise-address=10.10.107.223#g'</span> /etc/kubernetes/cfg/kube-apiserver.conf</span><br><span class=\"line\"><span class=\"comment\"># 【master-224】</span></span><br><span class=\"line\">sed -i <span class=\"string\">'s#--advertise-address=10.10.107.225#--advertise-address=10.10.107.224#g'</span> /etc/kubernetes/cfg/kube-apiserver.conf</span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/2/20220428132432.png\" alt=\"WeiyiGeek.kube-apiserver.conf\" title=\"\" class=\"\">\n                <p>WeiyiGeek.kube-apiserver.conf</p>\n            </figure>\n<p><br/></p>\n<p>步骤 07.【master节点】完成上述操作后分别在三台master节点上启动apiserver服务。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 重载systemd与自启设置</span></span><br><span class=\"line\">systemctl daemon-reload </span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> --now kube-apiserver</span><br><span class=\"line\">systemctl status kube-apiserver</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 测试api-server</span></span><br><span class=\"line\">curl --insecure https://10.10.107.222:16443/</span><br><span class=\"line\">curl --insecure https://10.10.107.223:6443/</span><br><span class=\"line\">curl --insecure https://10.10.107.224:6443/</span><br><span class=\"line\">curl --insecure https://10.10.107.225:6443/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 测试结果</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"kind\"</span>: <span class=\"string\">\"Status\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"apiVersion\"</span>: <span class=\"string\">\"v1\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"metadata\"</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"string\">\"status\"</span>: <span class=\"string\">\"Failure\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"message\"</span>: <span class=\"string\">\"forbidden: User \\\"system:anonymous\\\" cannot get path \\\"/\\\"\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"reason\"</span>: <span class=\"string\">\"Forbidden\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"details\"</span>: &#123;&#125;,</span><br><span class=\"line\">  <span class=\"string\">\"code\"</span>: 403</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/2/20220428134018.png\" alt=\"WeiyiGeek.三台master节点apiserver服务状态\" title=\"\" class=\"\">\n                <p>WeiyiGeek.三台master节点apiserver服务状态</p>\n            </figure>\n<p>至此完毕!</p>\n<p><br/></p>\n<h4 id=\"3-部署配置-kubectl\"><a href=\"#3-部署配置-kubectl\" class=\"headerlink\" title=\"3) 部署配置 kubectl\"></a>3) 部署配置 kubectl</h4><p>描述: 它是集群管理客户端工具,与 API-Server 服务请求交互, 实现资源的查看与管理。</p>\n<p>步骤 01.【master-225】创建kubectl证书请求文件CSR并生成证书<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tee admin-csr.json &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"CN\"</span>: <span class=\"string\">\"admin\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"hosts\"</span>: [],</span><br><span class=\"line\">  <span class=\"string\">\"key\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"algo\"</span>: <span class=\"string\">\"rsa\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"size\"</span>: 2048</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"names\"</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"string\">\"C\"</span>: <span class=\"string\">\"CN\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"L\"</span>: <span class=\"string\">\"ChongQing\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"ST\"</span>: <span class=\"string\">\"ChongQing\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"O\"</span>: <span class=\"string\">\"system:masters\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"OU\"</span>: <span class=\"string\">\"System\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 证书文件生成</span></span><br><span class=\"line\">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes admin-csr.json | cfssljson -bare admin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 复制证书相关文件到指定目录</span></span><br><span class=\"line\">ls admin*</span><br><span class=\"line\">  <span class=\"comment\"># admin.csr  admin-csr.json  admin-key.pem  admin.pem</span></span><br><span class=\"line\">cp admin*.pem /etc/kubernetes/ssl/</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 02.【master-225】生成kubeconfig配置文件 admin.conf 为 kubectl 的配置文件，包含访问 apiserver 的所有信息，如 apiserver 地址、CA 证书和自身使用的证书</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /etc/kubernetes </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置集群信息</span></span><br><span class=\"line\"><span class=\"comment\"># 此处也可以采用域名的形式 (https://weiyigeek.cluster.k8s:16443 )</span></span><br><span class=\"line\">kubectl config <span class=\"built_in\">set</span>-cluster kubernetes --certificate-authority=/etc/kubernetes/ssl/ca.pem --embed-certs=<span class=\"literal\">true</span> --server=https://10.10.107.222:16443 --kubeconfig=admin.conf</span><br><span class=\"line\">  <span class=\"comment\"># Cluster \"kubernetes\" set.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置集群认证用户</span></span><br><span class=\"line\">kubectl config <span class=\"built_in\">set</span>-credentials admin --client-certificate=/etc/kubernetes/ssl/admin.pem --client-key=/etc/kubernetes/ssl/admin-key.pem --embed-certs=<span class=\"literal\">true</span> --kubeconfig=admin.conf</span><br><span class=\"line\">  <span class=\"comment\"># User \"admin\" set.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 配置上下文</span></span><br><span class=\"line\">kubectl config <span class=\"built_in\">set</span>-context kubernetes --cluster=kubernetes --user=admin --kubeconfig=admin.conf</span><br><span class=\"line\">  <span class=\"comment\"># Context \"kubernetes\" created.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 使用上下文</span></span><br><span class=\"line\">kubectl config use-context kubernetes --kubeconfig=admin.conf</span><br><span class=\"line\">  <span class=\"comment\"># Context \"kubernetes\" created.</span></span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<p>步骤 03.【master-225】准备kubectl配置文件并进行角色绑定。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir /root/.kube &amp;&amp; cp /etc/kubernetes/admin.conf ~/.kube/config</span><br><span class=\"line\">kubectl create clusterrolebinding kube-apiserver:kubelet-apis --clusterrole=system:kubelet-api-admin --user kubernetes --kubeconfig=/root/.kube/config</span><br><span class=\"line\">  <span class=\"comment\"># clusterrolebinding.rbac.authorization.k8s.io/kube-apiserver:kubelet-apis created</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 该 config 的内容</span></span><br><span class=\"line\">$ cat /root/.kube/config</span><br><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">clusters:</span><br><span class=\"line\">- cluster:</span><br><span class=\"line\">    certificate-authority-data: base64(CA证书)</span><br><span class=\"line\">    server: https://10.10.107.222:16443</span><br><span class=\"line\">  name: kubernetes</span><br><span class=\"line\">contexts:</span><br><span class=\"line\">- context:</span><br><span class=\"line\">    cluster: kubernetes</span><br><span class=\"line\">    user: admin</span><br><span class=\"line\">  name: kubernetes</span><br><span class=\"line\">current-context: kubernetes</span><br><span class=\"line\">kind: Config</span><br><span class=\"line\">preferences: &#123;&#125;</span><br><span class=\"line\">users:</span><br><span class=\"line\">- name: admin</span><br><span class=\"line\">  user:</span><br><span class=\"line\">    client-certificate-data: base64(用户证书)</span><br><span class=\"line\">    client-key-data: base64(用户证书KEY)</span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<p>步骤 04.【master-225】查看集群状态</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> KUBECONFIG=<span class=\"variable\">$HOME</span>/.kube/config</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看集群信息</span></span><br><span class=\"line\">kubectl cluster-info</span><br><span class=\"line\">  <span class=\"comment\"># Kubernetes control plane is running at https://10.10.107.222:16443</span></span><br><span class=\"line\">  <span class=\"comment\"># To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看集群组件状态</span></span><br><span class=\"line\">kubectl get componentstatuses</span><br><span class=\"line\">  <span class=\"comment\"># NAME                 STATUS      MESSAGE                                                                                        ERROR</span></span><br><span class=\"line\">  <span class=\"comment\"># controller-manager   Unhealthy   Get \"https://127.0.0.1:10257/healthz\": dial tcp 127.0.0.1:10257: connect: connection refused</span></span><br><span class=\"line\">  <span class=\"comment\"># scheduler            Unhealthy   Get \"https://127.0.0.1:10259/healthz\": dial tcp 127.0.0.1:10259: connect: connection refused</span></span><br><span class=\"line\">  <span class=\"comment\"># etcd-0               Healthy     &#123;\"health\":\"true\",\"reason\":\"\"&#125;</span></span><br><span class=\"line\">  <span class=\"comment\"># etcd-1               Healthy     &#123;\"health\":\"true\",\"reason\":\"\"&#125;</span></span><br><span class=\"line\">  <span class=\"comment\"># etcd-2               Healthy     &#123;\"health\":\"true\",\"reason\":\"\"&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看命名空间以及所有名称中资源对象</span></span><br><span class=\"line\">kubectl get all --all-namespaces</span><br><span class=\"line\">  <span class=\"comment\"># NAMESPACE   NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># default     service/kubernetes   ClusterIP   10.96.0.1    &lt;none&gt;        443/TCP   8h</span></span><br><span class=\"line\">kubectl get ns</span><br><span class=\"line\">  <span class=\"comment\"># NAME              STATUS   AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># default           Active   8h</span></span><br><span class=\"line\">  <span class=\"comment\"># kube-node-lease   Active   8h</span></span><br><span class=\"line\">  <span class=\"comment\"># kube-public       Active   8h</span></span><br><span class=\"line\">  <span class=\"comment\"># kube-system       Active   8h</span></span><br></pre></td></tr></table></figure>\n<p>温馨提示: 由于我们还未进行 controller-manager 与 scheduler 部署所以此时其状态为 Unhealthy。</p>\n<p><br/></p>\n<p>步骤 05.【master-225】同步kubectl配置文件到集群其它master节点</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -p 20211 weiyigeek@master-223 <span class=\"string\">'mkdir ~/.kube/'</span></span><br><span class=\"line\">ssh -p 20211 weiyigeek@master-224 <span class=\"string\">'mkdir ~/.kube/'</span></span><br><span class=\"line\"></span><br><span class=\"line\">scp -P 20211 <span class=\"variable\">$HOME</span>/.kube/config weiyigeek@master-223:~/.kube/</span><br><span class=\"line\">scp -P 20211 <span class=\"variable\">$HOME</span>/.kube/config weiyigeek@master-224:~/.kube/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 【master-223】</span></span><br><span class=\"line\">weiyigeek@master-223:~$ kubectl get services</span><br><span class=\"line\">  <span class=\"comment\"># NAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE</span></span><br><span class=\"line\">  <span class=\"comment\"># kubernetes   ClusterIP   10.96.0.1    &lt;none&gt;        443/TCP   8h</span></span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<p>步骤 06.配置 kubectl 命令补全 (建议新手勿用，等待后期熟悉相关命令后使用)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装补全工具</span></span><br><span class=\"line\">apt install -y bash-completion</span><br><span class=\"line\"><span class=\"built_in\">source</span> /usr/share/bash-completion/bash_completion</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方式1</span></span><br><span class=\"line\"><span class=\"built_in\">source</span> &lt;(kubectl completion bash)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方式2</span></span><br><span class=\"line\">kubectl completion bash &gt; ~/.kube/completion.bash.inc</span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.kube/completion.bash.inc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 自动</span></span><br><span class=\"line\">tee <span class=\"variable\">$HOME</span>/.bash_profile &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\"><span class=\"comment\"># source &lt;(kubectl completion bash)</span></span><br><span class=\"line\"><span class=\"built_in\">source</span> ~/.kube/completion.bash.inc</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n<p>至此 kubectl 集群客户端配置 完毕.</p>\n<p><br/></p>\n<h4 id=\"4-部署配置-kube-controller-manager\"><a href=\"#4-部署配置-kube-controller-manager\" class=\"headerlink\" title=\"4) 部署配置 kube-controller-manager\"></a>4) 部署配置 kube-controller-manager</h4><p>描述: 它是集群中的控制器组件，其内部包含多个控制器资源, 实现对象的自动化控制中心。</p>\n<p>步骤 01.【master-225】创建 kube-controller-manager 证书请求文件CSR并生成证书<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tee controller-manager-csr.json &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"CN\"</span>: <span class=\"string\">\"system:kube-controller-manager\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"hosts\"</span>: [</span><br><span class=\"line\">    <span class=\"string\">\"127.0.0.1\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"10.10.107.223\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"10.10.107.224\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"10.10.107.225\"</span></span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"string\">\"key\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"algo\"</span>: <span class=\"string\">\"rsa\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"size\"</span>: 2048</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"names\"</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"string\">\"C\"</span>: <span class=\"string\">\"CN\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"L\"</span>: <span class=\"string\">\"ChongQing\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"ST\"</span>: <span class=\"string\">\"ChongQing\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"O\"</span>: <span class=\"string\">\"system:kube-controller-manager\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"OU\"</span>: <span class=\"string\">\"System\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 说明：</span></span><br><span class=\"line\">* hosts 列表包含所有 kube-controller-manager 节点 IP；</span><br><span class=\"line\">* CN 为 system:kube-controller-manager;</span><br><span class=\"line\">* O 为 system:kube-controller-manager，kubernetes 内置的 ClusterRoleBindings system:kube-controller-manager 赋予 kube-controller-manager 工作所需的权限</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 利用 CA 颁发 kube-controller-manager 证书文件</span></span><br><span class=\"line\">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes controller-manager-csr.json | cfssljson -bare controller-manager</span><br><span class=\"line\"></span><br><span class=\"line\">$ ls controller*</span><br><span class=\"line\">controller-manager.csr  controller-manager-csr.json  controller-manager-key.pem  controller-manager.pem</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 复制证书</span></span><br><span class=\"line\">cp controller* /etc/kubernetes/ssl</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 02.创建 kube-controller-manager 的 controller-manager.conf 配置文件.<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /etc/kubernetes/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置集群 也可采用 (https://weiyigeek.cluster.k8s:16443 ) 域名形式。</span></span><br><span class=\"line\">kubectl config <span class=\"built_in\">set</span>-cluster kubernetes --certificate-authority=/etc/kubernetes/ssl/ca.pem --embed-certs=<span class=\"literal\">true</span> --server=https://10.10.107.222:16443 --kubeconfig=controller-manager.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置认证</span></span><br><span class=\"line\">kubectl config <span class=\"built_in\">set</span>-credentials system:kube-controller-manager --client-certificate=/etc/kubernetes/ssl/controller-manager.pem --client-key=/etc/kubernetes/ssl/controller-manager-key.pem --embed-certs=<span class=\"literal\">true</span> --kubeconfig=controller-manager.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置上下文</span></span><br><span class=\"line\">kubectl config <span class=\"built_in\">set</span>-context system:kube-controller-manager --cluster=kubernetes --user=system:kube-controller-manager --kubeconfig=controller-manager.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 且换上下文</span></span><br><span class=\"line\">kubectl config use-context system:kube-controller-manager --kubeconfig=controller-manager.conf</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 03.准备创建 kube-controller-manager 配置文件。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt; /etc/kubernetes/cfg/kube-controller-manager.conf &lt;&lt; <span class=\"string\">\"EOF\"</span></span><br><span class=\"line\">KUBE_CONTROLLER_MANAGER_OPTS=<span class=\"string\">\"--allocate-node-cidrs=true \\</span></span><br><span class=\"line\"><span class=\"string\">--bind-address=127.0.0.1 \\</span></span><br><span class=\"line\"><span class=\"string\">--secure-port=10257 \\</span></span><br><span class=\"line\"><span class=\"string\">--authentication-kubeconfig=/etc/kubernetes/controller-manager.conf \\</span></span><br><span class=\"line\"><span class=\"string\">--authorization-kubeconfig=/etc/kubernetes/controller-manager.conf \\</span></span><br><span class=\"line\"><span class=\"string\">--cluster-name=kubernetes \\</span></span><br><span class=\"line\"><span class=\"string\">--client-ca-file=/etc/kubernetes/ssl/ca.pem \\</span></span><br><span class=\"line\"><span class=\"string\">--cluster-signing-cert-file=/etc/kubernetes/ssl/ca.pem \\</span></span><br><span class=\"line\"><span class=\"string\">--cluster-signing-key-file=/etc/kubernetes/ssl/ca-key.pem \\</span></span><br><span class=\"line\"><span class=\"string\">--controllers=*,bootstrapsigner,tokencleaner \\</span></span><br><span class=\"line\"><span class=\"string\">--cluster-cidr=10.128.0.0/16 \\</span></span><br><span class=\"line\"><span class=\"string\">--service-cluster-ip-range=10.96.0.0/16 \\</span></span><br><span class=\"line\"><span class=\"string\">--use-service-account-credentials=true \\</span></span><br><span class=\"line\"><span class=\"string\">--root-ca-file=/etc/kubernetes/ssl/ca.pem \\</span></span><br><span class=\"line\"><span class=\"string\">--service-account-private-key-file=/etc/kubernetes/ssl/ca-key.pem \\</span></span><br><span class=\"line\"><span class=\"string\">--tls-cert-file=/etc/kubernetes/ssl/controller-manager.pem \\</span></span><br><span class=\"line\"><span class=\"string\">--tls-private-key-file=/etc/kubernetes/ssl/controller-manager-key.pem \\</span></span><br><span class=\"line\"><span class=\"string\">--leader-elect=true \\</span></span><br><span class=\"line\"><span class=\"string\">--cluster-signing-duration=87600h \\</span></span><br><span class=\"line\"><span class=\"string\">--v=2 \\</span></span><br><span class=\"line\"><span class=\"string\">--logtostderr=false \\</span></span><br><span class=\"line\"><span class=\"string\">--log-dir=/var/log/kubernetes \\</span></span><br><span class=\"line\"><span class=\"string\">--kubeconfig=/etc/kubernetes/controller-manager.conf</span></span><br><span class=\"line\"><span class=\"string\">EOF</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"># 温馨提示:</span></span><br><span class=\"line\"><span class=\"string\">Flag --logtostderr has been deprecated, will be removed in a future release,</span></span><br><span class=\"line\"><span class=\"string\">Flag --log-dir has been deprecated, will be removed in a future release</span></span><br><span class=\"line\"><span class=\"string\">--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt</span></span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 04.创建 kube-controller-manager 服务启动文件<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt; /lib/systemd/system/kube-controller-manager.service &lt;&lt; <span class=\"string\">\"EOF\"</span></span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=Kubernetes Controller Manager</span><br><span class=\"line\">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">EnvironmentFile=-/etc/kubernetes/cfg/kube-controller-manager.conf</span><br><span class=\"line\">ExecStart=/usr/<span class=\"built_in\">local</span>/bin/kube-controller-manager <span class=\"variable\">$KUBE_CONTROLLER_MANAGER_OPTS</span></span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\">RestartSec=5</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 05.【master-225】同样分发上述文件到其它master节点中。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># controller-manager 证书 及 kube-controller-manager.conf 配置文件、kube-controller-manager.service 服务管理配置文件</span></span><br><span class=\"line\">scp -P 20211 /etc/kubernetes/ssl/controller-manager.pem /etc/kubernetes/ssl/controller-manager-key.pem /etc/kubernetes/controller-manager.conf /etc/kubernetes/cfg/kube-controller-manager.conf /lib/systemd/system/kube-controller-manager.service weiyigeek@master-223:/tmp</span><br><span class=\"line\">scp -P 20211 /etc/kubernetes/ssl/controller-manager.pem /etc/kubernetes/ssl/controller-manager-key.pem /etc/kubernetes/controller-manager.conf /etc/kubernetes/cfg/kube-controller-manager.conf /lib/systemd/system/kube-controller-manager.service weiyigeek@master-224:/tmp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 【master-223】 【master-224】 执行如下命令将上传到/tmp相关文件放入指定目录中</span></span><br><span class=\"line\">mv controller-manager*.pem /etc/kubernetes/ssl/</span><br><span class=\"line\">mv controller-manager.conf /etc/kubernetes/controller-manager.conf</span><br><span class=\"line\">mv kube-controller-manager.conf /etc/kubernetes/cfg/kube-controller-manager.conf</span><br><span class=\"line\">mv kube-controller-manager.service /lib/systemd/system/kube-controller-manager.service</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 06.重载 systemd 以及自动启用 kube-controller-manager 服务。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl daemon-reload </span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> --now kube-controller-manager</span><br><span class=\"line\">systemctl status kube-controller-manager</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 07.启动运行 kube-controller-manager 服务后查看集群组件状态, 发现原本 controller-manager 是 Unhealthy 的状态已经变成了 Healthy 状态。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl get componentstatu</span><br><span class=\"line\">  <span class=\"comment\"># NAME                 STATUS      MESSAGE                                                                                        ERROR</span></span><br><span class=\"line\">  <span class=\"comment\"># scheduler            Unhealthy   Get \"https://127.0.0.1:10259/healthz\": dial tcp 127.0.0.1:10259: connect: connection refused</span></span><br><span class=\"line\">  <span class=\"comment\"># controller-manager   Healthy     ok</span></span><br><span class=\"line\">  <span class=\"comment\"># etcd-2               Healthy     &#123;\"health\":\"true\",\"reason\":\"\"&#125;</span></span><br><span class=\"line\">  <span class=\"comment\"># etcd-0               Healthy     &#123;\"health\":\"true\",\"reason\":\"\"&#125;</span></span><br><span class=\"line\">  <span class=\"comment\"># etcd-1               Healthy     &#123;\"health\":\"true\",\"reason\":\"\"&#125;</span></span><br></pre></td></tr></table></figure></p>\n<p>至此  kube-controller-manager 服务的安装、配置完毕！</p>\n<p><br/></p>\n<h4 id=\"5-部署配置-kube-scheduler\"><a href=\"#5-部署配置-kube-scheduler\" class=\"headerlink\" title=\"5) 部署配置 kube-scheduler\"></a>5) 部署配置 kube-scheduler</h4><p>描述: 在集群中kube-scheduler调度器组件, 负责任务调度选择合适的节点进行分配任务.</p>\n<p>步骤 01.【master-225】创建 kube-scheduler 证书请求文件CSR并生成证书<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tee scheduler-csr.json &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"CN\"</span>: <span class=\"string\">\"system:kube-scheduler\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"hosts\"</span>: [</span><br><span class=\"line\">    <span class=\"string\">\"127.0.0.1\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"10.10.107.223\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"10.10.107.224\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"10.10.107.225\"</span></span><br><span class=\"line\">  ],</span><br><span class=\"line\">  <span class=\"string\">\"key\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"algo\"</span>: <span class=\"string\">\"rsa\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"size\"</span>: 2048</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"names\"</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"string\">\"C\"</span>: <span class=\"string\">\"CN\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"L\"</span>: <span class=\"string\">\"ChongQing\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"ST\"</span>: <span class=\"string\">\"ChongQing\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"O\"</span>: <span class=\"string\">\"system:kube-scheduler\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"OU\"</span>: <span class=\"string\">\"System\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 利用 CA 颁发 kube-scheduler 证书文件</span></span><br><span class=\"line\">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes scheduler-csr.json | cfssljson -bare scheduler</span><br><span class=\"line\"></span><br><span class=\"line\">$ ls scheduler*</span><br><span class=\"line\">scheduler-csr.json scheduler.csr  scheduler-key.pem  scheduler.pem</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 复制证书</span></span><br><span class=\"line\">cp scheduler*.pem /etc/kubernetes/ssl</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 02.完成后我们需要创建 kube-scheduler 的 kubeconfig 配置文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /etc/kubernetes/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置集群 也可采用 (https://weiyigeek.cluster.k8s:16443 ) 域名形式。</span></span><br><span class=\"line\">kubectl config <span class=\"built_in\">set</span>-cluster kubernetes --certificate-authority=/etc/kubernetes/ssl/ca.pem --embed-certs=<span class=\"literal\">true</span> --server=https://10.10.107.222:16443 --kubeconfig=scheduler.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置认证</span></span><br><span class=\"line\">kubectl config <span class=\"built_in\">set</span>-credentials system:kube-scheduler --client-certificate=/etc/kubernetes/ssl/scheduler.pem --client-key=/etc/kubernetes/ssl/scheduler-key.pem --embed-certs=<span class=\"literal\">true</span> --kubeconfig=scheduler.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置上下文</span></span><br><span class=\"line\">kubectl config <span class=\"built_in\">set</span>-context system:kube-scheduler --cluster=kubernetes --user=system:kube-scheduler --kubeconfig=scheduler.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 且换上下文</span></span><br><span class=\"line\">kubectl config use-context system:kube-scheduler --kubeconfig=scheduler.conf</span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<p>步骤 03.创建 kube-scheduler 服务配置文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt; /etc/kubernetes/cfg/kube-scheduler.conf &lt;&lt; <span class=\"string\">\"EOF\"</span></span><br><span class=\"line\">KUBE_SCHEDULER_OPTS=<span class=\"string\">\"--address=127.0.0.1 \\</span></span><br><span class=\"line\"><span class=\"string\">--secure-port=10259 \\</span></span><br><span class=\"line\"><span class=\"string\">--kubeconfig=/etc/kubernetes/scheduler.conf \\</span></span><br><span class=\"line\"><span class=\"string\">--authentication-kubeconfig=/etc/kubernetes/scheduler.conf \\</span></span><br><span class=\"line\"><span class=\"string\">--authorization-kubeconfig=/etc/kubernetes/scheduler.conf \\</span></span><br><span class=\"line\"><span class=\"string\">--client-ca-file=/etc/kubernetes/ssl/ca.pem \\</span></span><br><span class=\"line\"><span class=\"string\">--tls-cert-file=/etc/kubernetes/ssl/scheduler.pem \\</span></span><br><span class=\"line\"><span class=\"string\">--tls-private-key-file=/etc/kubernetes/ssl/scheduler-key.pem \\</span></span><br><span class=\"line\"><span class=\"string\">--leader-elect=true \\</span></span><br><span class=\"line\"><span class=\"string\">--alsologtostderr=true \\</span></span><br><span class=\"line\"><span class=\"string\">--logtostderr=false \\</span></span><br><span class=\"line\"><span class=\"string\">--log-dir=/var/log/kubernetes \\</span></span><br><span class=\"line\"><span class=\"string\">--v=2\"</span></span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<p>步骤 04.创建 kube-scheduler 服务启动配置文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt; /lib/systemd/system/kube-scheduler.service &lt;&lt; <span class=\"string\">\"EOF\"</span></span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=Kubernetes Scheduler</span><br><span class=\"line\">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">EnvironmentFile=-/etc/kubernetes/cfg/kube-scheduler.conf</span><br><span class=\"line\">ExecStart=/usr/<span class=\"built_in\">local</span>/bin/kube-scheduler <span class=\"variable\">$KUBE_SCHEDULER_OPTS</span></span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\">RestartSec=5</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<p>步骤 05.【master-225】同样分发上述文件到其它master节点中。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># scheduler 证书 及 kube-scheduler.conf 配置文件、kube-scheduler.service 服务管理配置文件</span></span><br><span class=\"line\">scp -P 20211 /etc/kubernetes/ssl/scheduler.pem /etc/kubernetes/ssl/scheduler-key.pem /etc/kubernetes/scheduler.conf /etc/kubernetes/cfg/kube-scheduler.conf /lib/systemd/system/kube-scheduler.service weiyigeek@master-223:/tmp</span><br><span class=\"line\">scp -P 20211 /etc/kubernetes/ssl/scheduler.pem /etc/kubernetes/ssl/scheduler-key.pem /etc/kubernetes/scheduler.conf /etc/kubernetes/cfg/kube-scheduler.conf /lib/systemd/system/kube-scheduler.service weiyigeek@master-224:/tmp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 【master-223】 【master-224】 执行如下命令将上传到/tmp相关文件放入指定目录中</span></span><br><span class=\"line\">mv scheduler*.pem /etc/kubernetes/ssl/</span><br><span class=\"line\">mv scheduler.conf /etc/kubernetes/scheduler.conf</span><br><span class=\"line\">mv kube-scheduler.conf /etc/kubernetes/cfg/kube-scheduler.conf</span><br><span class=\"line\">mv kube-scheduler.service /lib/systemd/system/kube-scheduler.service</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 06.【所有master节点】重载 systemd 以及自动启用 kube-scheduler 服务。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl daemon-reload </span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> --now kube-scheduler</span><br><span class=\"line\">systemctl status kube-scheduler</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 07.【所有master节点】验证所有master节点各个组件状态, 正常状态下如下, 如有错误请排查通过后在进行后面操作。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl get componentstatuses</span><br><span class=\"line\">  <span class=\"comment\"># Warning: v1 ComponentStatus is deprecated in v1.19+</span></span><br><span class=\"line\">  <span class=\"comment\"># NAME                 STATUS    MESSAGE                         ERROR</span></span><br><span class=\"line\">  <span class=\"comment\"># controller-manager   Healthy   ok</span></span><br><span class=\"line\">  <span class=\"comment\"># scheduler            Healthy   ok</span></span><br><span class=\"line\">  <span class=\"comment\"># etcd-0               Healthy   &#123;\"health\":\"true\",\"reason\":\"\"&#125;</span></span><br><span class=\"line\">  <span class=\"comment\"># etcd-1               Healthy   &#123;\"health\":\"true\",\"reason\":\"\"&#125;</span></span><br><span class=\"line\">  <span class=\"comment\"># etcd-2               Healthy   &#123;\"health\":\"true\",\"reason\":\"\"&#125;</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/5/20220429170504.png\" alt=\"WeiyiGeek.所有master节点组件状态\" title=\"\" class=\"\">\n                <p>WeiyiGeek.所有master节点组件状态</p>\n            </figure>\n<p><br></p>\n<h4 id=\"6-部署配置-kubelet\"><a href=\"#6-部署配置-kubelet\" class=\"headerlink\" title=\"6) 部署配置 kubelet\"></a>6) 部署配置 kubelet</h4><p>步骤 01.【master-225】读取BOOTSTRAP_TOKE 并 创建 kubelet 的 kubeconfig 配置文件 kubelet.conf。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /etc/kubernetes/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取 bootstrap-token 值</span></span><br><span class=\"line\">BOOTSTRAP_TOKEN=$(awk -F <span class=\"string\">\",\"</span> <span class=\"string\">'&#123;print $1&#125;'</span> /etc/kubernetes/bootstrap-token.csv)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># BOOTSTRAP_TOKEN=\"123456.httpweiyigeektop\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置集群 也可采用 (https://weiyigeek.cluster.k8s:16443 ) 域名形式。</span></span><br><span class=\"line\">kubectl config <span class=\"built_in\">set</span>-cluster kubernetes --certificate-authority=/etc/kubernetes/ssl/ca.pem --embed-certs=<span class=\"literal\">true</span> --server=https://weiyigeek.cluster.k8s:16443 --kubeconfig=/etc/kubernetes/kubelet-bootstrap.kubeconfig</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置认证</span></span><br><span class=\"line\">kubectl config <span class=\"built_in\">set</span>-credentials kubelet-bootstrap --token=<span class=\"variable\">$&#123;BOOTSTRAP_TOKEN&#125;</span> --kubeconfig=/etc/kubernetes/kubelet-bootstrap.kubeconfig</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置上下文</span></span><br><span class=\"line\">kubectl config <span class=\"built_in\">set</span>-context default --cluster=kubernetes --user=kubelet-bootstrap --kubeconfig=/etc/kubernetes/kubelet-bootstrap.kubeconfig</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 且换上下文</span></span><br><span class=\"line\">kubectl config use-context default  --kubeconfig=/etc/kubernetes/kubelet-bootstrap.kubeconfig</span><br></pre></td></tr></table></figure></p>\n<p>步骤 02.完成后我们需要进行集群角色绑定。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 角色授权</span></span><br><span class=\"line\">kubectl create clusterrolebinding cluster-system-anonymous --clusterrole=cluster-admin --user=kubelet-bootstrap</span><br><span class=\"line\">kubectl create clusterrolebinding kubelet-bootstrap --clusterrole=system:node-bootstrapper --user=kubelet-bootstrap  --kubeconfig=/etc/kubernetes/kubelet-bootstrap.kubeconfig</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 授权 kubelet 创建 CSR </span></span><br><span class=\"line\">kubectl create clusterrolebinding create-csrs-for-bootstrapping --clusterrole=system:node-bootstrapper --group=system:bootstrappers</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 对 CSR 进行批复</span></span><br><span class=\"line\"><span class=\"comment\"># 允许 kubelet 请求并接收新的证书</span></span><br><span class=\"line\">kubectl create clusterrolebinding auto-approve-csrs-for-group --clusterrole=system:certificates.k8s.io:certificatesigningrequests:nodeclient --group=system:bootstrappers</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 允许 kubelet 对其客户端证书执行续期操作</span></span><br><span class=\"line\">kubectl create clusterrolebinding auto-approve-renewals-for-nodes --clusterrole=system:certificates.k8s.io:certificatesigningrequests:selfnodeclient --group=system:bootstrappers</span><br></pre></td></tr></table></figure></p>\n<p>步骤 03.创建 kubelet 配置文件，配置参考地址（<a href=\"https://kubernetes.io/docs/reference/config-api/kubelet-config.v1beta1/）\" target=\"_blank\" rel=\"noopener\">https://kubernetes.io/docs/reference/config-api/kubelet-config.v1beta1/）</a><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># yaml 格式</span></span><br><span class=\"line\"><span class=\"comment\"># 此处为了通用性推荐使用如下格式</span></span><br><span class=\"line\">cat &gt; /etc/kubernetes/cfg/kubelet-config.yaml &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">apiVersion: kubelet.config.k8s.io/v1beta1</span><br><span class=\"line\">kind: KubeletConfiguration</span><br><span class=\"line\">address: 0.0.0.0</span><br><span class=\"line\">port: 10250</span><br><span class=\"line\">readOnlyPort: 10255</span><br><span class=\"line\">authentication:</span><br><span class=\"line\">  anonymous:</span><br><span class=\"line\">    enabled: <span class=\"literal\">false</span></span><br><span class=\"line\">  webhook:</span><br><span class=\"line\">    cacheTTL: 2m0s</span><br><span class=\"line\">    enabled: <span class=\"literal\">true</span></span><br><span class=\"line\">  x509:</span><br><span class=\"line\">    clientCAFile: /etc/kubernetes/ssl/ca.pem</span><br><span class=\"line\">authorization:</span><br><span class=\"line\">  mode: AlwaysAllow</span><br><span class=\"line\">  webhook:</span><br><span class=\"line\">    cacheAuthorizedTTL: 5m0s</span><br><span class=\"line\">    cacheUnauthorizedTTL: 30s</span><br><span class=\"line\">cgroupDriver: systemd</span><br><span class=\"line\">cgroupsPerQOS: <span class=\"literal\">true</span></span><br><span class=\"line\">clusterDNS:</span><br><span class=\"line\">- 10.96.0.10</span><br><span class=\"line\">clusterDomain: cluster.local</span><br><span class=\"line\">containerLogMaxFiles: 5</span><br><span class=\"line\">containerLogMaxSize: 10Mi</span><br><span class=\"line\">contentType: application/vnd.kubernetes.protobuf</span><br><span class=\"line\">cpuCFSQuota: <span class=\"literal\">true</span></span><br><span class=\"line\">cpuManagerPolicy: none</span><br><span class=\"line\">cpuManagerReconcilePeriod: 10s</span><br><span class=\"line\">enableControllerAttachDetach: <span class=\"literal\">true</span></span><br><span class=\"line\">enableDebuggingHandlers: <span class=\"literal\">true</span></span><br><span class=\"line\">enforceNodeAllocatable:</span><br><span class=\"line\">- pods</span><br><span class=\"line\">eventBurst: 10</span><br><span class=\"line\">eventRecordQPS: 5</span><br><span class=\"line\">evictionHard:</span><br><span class=\"line\">  imagefs.available: 15%</span><br><span class=\"line\">  memory.available: 100Mi</span><br><span class=\"line\">  nodefs.available: 10%</span><br><span class=\"line\">  nodefs.inodesFree: 5%</span><br><span class=\"line\">evictionPressureTransitionPeriod: 5m0s</span><br><span class=\"line\">failSwapOn: <span class=\"literal\">true</span></span><br><span class=\"line\">fileCheckFrequency: 20s</span><br><span class=\"line\">hairpinMode: promiscuous-bridge</span><br><span class=\"line\">healthzBindAddress: 127.0.0.1</span><br><span class=\"line\">healthzPort: 10248</span><br><span class=\"line\">httpCheckFrequency: 20s</span><br><span class=\"line\">imageGCHighThresholdPercent: 85</span><br><span class=\"line\">imageGCLowThresholdPercent: 80</span><br><span class=\"line\">imageMinimumGCAge: 2m0s</span><br><span class=\"line\">iptablesDropBit: 15</span><br><span class=\"line\">iptablesMasqueradeBit: 14</span><br><span class=\"line\">kubeAPIBurst: 10</span><br><span class=\"line\">kubeAPIQPS: 5</span><br><span class=\"line\">makeIPTablesUtilChains: <span class=\"literal\">true</span></span><br><span class=\"line\">maxOpenFiles: 1000000</span><br><span class=\"line\">maxPods: 110</span><br><span class=\"line\">nodeStatusUpdateFrequency: 10s</span><br><span class=\"line\">oomScoreAdj: -999</span><br><span class=\"line\">podPidsLimit: -1</span><br><span class=\"line\">registryBurst: 10</span><br><span class=\"line\">registryPullQPS: 5</span><br><span class=\"line\">resolvConf: /etc/resolv.conf</span><br><span class=\"line\">rotateCertificates: <span class=\"literal\">true</span></span><br><span class=\"line\">runtimeRequestTimeout: 2m0s</span><br><span class=\"line\">serializeImagePulls: <span class=\"literal\">true</span></span><br><span class=\"line\">staticPodPath: /etc/kubernetes/manifests</span><br><span class=\"line\">streamingConnectionIdleTimeout: 4h0m0s</span><br><span class=\"line\">syncFrequency: 1m0s</span><br><span class=\"line\">volumeStatsAggPeriod: 1m0s</span><br><span class=\"line\">EOF</span><br><span class=\"line\"><span class=\"comment\"># [master-225] 主机执行则替换为其主机地址, 其它节点也是对应的IP地址, 或者直接 0.0.0.0 全地址监听这样也就不用修改了。</span></span><br><span class=\"line\"><span class=\"comment\"># sed -i 's#__IP__#10.10.107.225#g' /etc/kubernetes/cfg/kubelet-config.yaml</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># json 格式 （不推荐了解就好）</span></span><br><span class=\"line\">cat &gt; /etc/kubernetes/cfg/kubelet.json &lt;&lt; <span class=\"string\">\"EOF\"</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"kind\"</span>: <span class=\"string\">\"KubeletConfiguration\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"apiVersion\"</span>: <span class=\"string\">\"kubelet.config.k8s.io/v1beta1\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"authentication\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"x509\"</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">\"clientCAFile\"</span>: <span class=\"string\">\"/etc/kubernetes/ssl/ca.pem\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">\"webhook\"</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">\"enabled\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"string\">\"cacheTTL\"</span>: <span class=\"string\">\"2m0s\"</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">\"anonymous\"</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">\"enabled\"</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"authorization\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"mode\"</span>: <span class=\"string\">\"Webhook\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"webhook\"</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">\"cacheAuthorizedTTL\"</span>: <span class=\"string\">\"5m0s\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"cacheUnauthorizedTTL\"</span>: <span class=\"string\">\"30s\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"address\"</span>: <span class=\"string\">\"__IP__\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"port\"</span>: 10250,</span><br><span class=\"line\">  <span class=\"string\">\"readOnlyPort\"</span>: 10255,</span><br><span class=\"line\">  <span class=\"string\">\"cgroupDriver\"</span>: <span class=\"string\">\"systemd\"</span>,                    </span><br><span class=\"line\">  <span class=\"string\">\"hairpinMode\"</span>: <span class=\"string\">\"promiscuous-bridge\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"serializeImagePulls\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"string\">\"clusterDomain\"</span>: <span class=\"string\">\"cluster.local.\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"clusterDNS\"</span>: [<span class=\"string\">\"10.96.0.10\"</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure></p>\n<p>温馨提示: 上述 kubelet.json 中 address 需要修改为当前主机IP地址, 例如在master-225主机中应该更改为 10.10.107.225 , 此处我设置为了 0.0.0.0 表示监听所有网卡，若有指定网卡的需求请指定其IP地址。</p>\n<p><br/></p>\n<p>步骤 04.【master-225】创建 kubelet 服务启动管理文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 工作目录创建</span></span><br><span class=\"line\">mkdir -vp /var/lib/kubelet</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建 kubelet.service 服务</span></span><br><span class=\"line\">cat &gt; /lib/systemd/system/kubelet.service &lt;&lt; <span class=\"string\">\"EOF\"</span></span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=kubelet: The Kubernetes Node Agent</span><br><span class=\"line\">Documentation=https://kubernetes.io/docs/home/</span><br><span class=\"line\">Wants=network-online.target</span><br><span class=\"line\">After=network-online.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">WorkingDirectory=/var/lib/kubelet</span><br><span class=\"line\">ExecStart=/usr/<span class=\"built_in\">local</span>/bin/kubelet \\</span><br><span class=\"line\">--bootstrap-kubeconfig=/etc/kubernetes/kubelet-bootstrap.kubeconfig \\</span><br><span class=\"line\">--config=/etc/kubernetes/cfg/kubelet-config.yaml \\</span><br><span class=\"line\">--cert-dir=/etc/kubernetes/ssl \\</span><br><span class=\"line\">--kubeconfig=/etc/kubernetes/kubelet.conf \\</span><br><span class=\"line\">--network-plugin=cni \\</span><br><span class=\"line\">--root-dir=/etc/cni/net.d \\</span><br><span class=\"line\">--cni-bin-dir=/opt/cni/bin \\</span><br><span class=\"line\">--cni-conf-dir=/etc/cni/net.d \\</span><br><span class=\"line\">--container-runtime=remote \\</span><br><span class=\"line\">--container-runtime-endpoint=unix:///run/containerd/containerd.sock \\</span><br><span class=\"line\">--rotate-certificates \\</span><br><span class=\"line\">--pod-infra-container-image=registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.6 \\</span><br><span class=\"line\">--image-pull-progress-deadline=15m \\</span><br><span class=\"line\">--alsologtostderr=<span class=\"literal\">true</span> \\</span><br><span class=\"line\">--logtostderr=<span class=\"literal\">false</span> \\</span><br><span class=\"line\">--<span class=\"built_in\">log</span>-dir=/var/<span class=\"built_in\">log</span>/kubernetes \\</span><br><span class=\"line\">--v=2 \\</span><br><span class=\"line\">--node-labels=node.kubernetes.io/node=<span class=\"string\">''</span></span><br><span class=\"line\">StartLimitInterval=0</span><br><span class=\"line\">RestartSec=10</span><br><span class=\"line\">LimitNOFILE=65536</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<p>步骤 05.将master-255节点上的kubelet相关文件复制到所有节点之中。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 复制配置文件到其它节点 /tmp 目录</span></span><br><span class=\"line\">scp -P 20211 /etc/kubernetes/kubelet-bootstrap.kubeconfig /etc/kubernetes/cfg/kubelet-config.yaml /lib/systemd/system/kubelet.service weiyigeek@master-223:/tmp</span><br><span class=\"line\">scp -P 20211 /etc/kubernetes/kubelet-bootstrap.kubeconfig /etc/kubernetes/cfg/kubelet-config.yaml /lib/systemd/system/kubelet.service weiyigeek@master-224:/tmp</span><br><span class=\"line\">scp -P 20211 /etc/kubernetes/kubelet-bootstrap.kubeconfig /etc/kubernetes/cfg/kubelet-config.yaml /lib/systemd/system/kubelet.service weiyigeek@node-1:/tmp</span><br><span class=\"line\">scp -P 20211 /etc/kubernetes/kubelet-bootstrap.kubeconfig /etc/kubernetes/cfg/kubelet-config.yaml /lib/systemd/system/kubelet.service weiyigeek@node-2:/tmp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 分别将 /tmp 目录中的kubelet配置文件复制到对应目录</span></span><br><span class=\"line\">sudo mkdir -vp /var/lib/kubelet /etc/kubernetes/cfg/</span><br><span class=\"line\">cp /tmp/kubelet-bootstrap.kubeconfig /etc/kubernetes/kubelet-bootstrap.kubeconfig</span><br><span class=\"line\">cp /tmp/kubelet-config.yaml /etc/kubernetes/cfg/kubelet-config.yaml</span><br><span class=\"line\">cp /tmp/kubelet.service /lib/systemd/system/kubelet.service</span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<p>步骤 06.【所有节点】重载 systemd 以及自动启用 kube-scheduler 服务。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl daemon-reload</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> --now kubelet.service</span><br><span class=\"line\">systemctl status -l kubelet.service</span><br><span class=\"line\"><span class=\"comment\"># systemctl restart kubelet.service</span></span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 07.利用kubectl工具查看集群中所有节点信息。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl get node -o wide</span><br><span class=\"line\">NAME         STATUS     ROLES    AGE     VERSION   INTERNAL-IP     EXTERNAL-IP   OS-IMAGE             KERNEL-VERSION      CONTAINER-RUNTIME</span><br><span class=\"line\">master-223   NotReady   &lt;none&gt;   17h     v1.23.6   10.10.107.223   &lt;none&gt;        Ubuntu 20.04.3 LTS   5.4.0-92-generic    containerd://1.6.4</span><br><span class=\"line\">master-224   NotReady   &lt;none&gt;   19s     v1.23.6   10.10.107.224   &lt;none&gt;        Ubuntu 20.04.3 LTS   5.4.0-92-generic    containerd://1.6.4</span><br><span class=\"line\">master-225   NotReady   &lt;none&gt;   3d22h   v1.23.6   10.10.107.225   &lt;none&gt;        Ubuntu 20.04.3 LTS   5.4.0-109-generic   containerd://1.6.4</span><br><span class=\"line\">node-1       NotReady   &lt;none&gt;   17h     v1.23.6   10.10.107.226   &lt;none&gt;        Ubuntu 20.04.2 LTS   5.4.0-96-generic    containerd://1.6.4</span><br><span class=\"line\">node-2       NotReady   &lt;none&gt;   17h     v1.23.6   10.10.107.227   &lt;none&gt;        Ubuntu 20.04.2 LTS   5.4.0-96-generic    containerd://1.6.4</span><br></pre></td></tr></table></figure>\n<p>温馨提示: 由上述结果可知各个节点 STATUS 处于 NotReady , 这是由于节点之间的POD无法通信还缺少网络插件，当我们安装好 kube-proxy 与 calico 就可以变成 Ready 状态了。</p>\n<p><br/></p>\n<p>步骤 08.确认kubelet服务启动成功后，我们可以执行如下命令查看<code>kubelet-bootstrap</code>申请颁发的证书, 如果CONDITION不为Approved,Issued则需要进行排查是否有错误。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl get csr</span><br><span class=\"line\">NAME        AGE     SIGNERNAME                                    REQUESTOR           CONDITION</span><br><span class=\"line\">csr-b949p   7m55s   kubernetes.io/kube-apiserver-client-kubelet   kubelet-bootstrap   Approved,Issued</span><br><span class=\"line\">csr-c9hs4   3m34s   kubernetes.io/kube-apiserver-client-kubelet   kubelet-bootstrap   Approved,Issued</span><br><span class=\"line\">csr-r8vhp   5m50s   kubernetes.io/kube-apiserver-client-kubelet   kubelet-bootstrap   Approved,Issued</span><br><span class=\"line\">csr-zb4sr   3m40s   kubernetes.io/kube-apiserver-client-kubelet   kubelet-bootstrap   Approved,Issued</span><br></pre></td></tr></table></figure>\n<hr>\n<h4 id=\"7-部署配置-kube-proxy\"><a href=\"#7-部署配置-kube-proxy\" class=\"headerlink\" title=\"7) 部署配置 kube-proxy\"></a>7) 部署配置 kube-proxy</h4><p>描述: 在集群中kube-proxy组件, 其负责节点上的网络规则使得您可以在集群内、集群外正确地与 Pod 进行网络通信, 同时它也是负载均衡中最重要的点，进行流量转发</p>\n<p>步骤 01.【master-225】创建 kube-proxy 证书请求文件CSR并生成证书<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tee proxy-csr.json &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">\"CN\"</span>: <span class=\"string\">\"system:kube-proxy\"</span>,</span><br><span class=\"line\">  <span class=\"string\">\"hosts\"</span>: [],</span><br><span class=\"line\">  <span class=\"string\">\"key\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"algo\"</span>: <span class=\"string\">\"rsa\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"size\"</span>: 2048</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">\"names\"</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"string\">\"C\"</span>: <span class=\"string\">\"CN\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"L\"</span>: <span class=\"string\">\"ChongQing\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"ST\"</span>: <span class=\"string\">\"ChongQing\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"O\"</span>: <span class=\"string\">\"system:kube-proxy\"</span>,</span><br><span class=\"line\">      <span class=\"string\">\"OU\"</span>: <span class=\"string\">\"System\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 利用 CA 颁发 kube-scheduler 证书文件</span></span><br><span class=\"line\">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes proxy-csr.json | cfssljson -bare proxy</span><br><span class=\"line\"></span><br><span class=\"line\">$ ls proxy*</span><br><span class=\"line\">proxy.csr  proxy-csr.json  proxy-key.pem  proxy.pem</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 复制证书</span></span><br><span class=\"line\">cp proxy*.pem /etc/kubernetes/ssl</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 02.完成后我们需要创建 kube-scheduler 的 kubeconfig 配置文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /etc/kubernetes/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置集群 也可采用 (https://weiyigeek.cluster.k8s:16443 ) 域名形式。</span></span><br><span class=\"line\">kubectl config <span class=\"built_in\">set</span>-cluster kubernetes --certificate-authority=/etc/kubernetes/ssl/ca.pem --embed-certs=<span class=\"literal\">true</span> --server=https://10.10.107.222:16443 --kubeconfig=kube-proxy.kubeconfig</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置认证</span></span><br><span class=\"line\">kubectl config <span class=\"built_in\">set</span>-credentials kube-proxy --client-certificate=/etc/kubernetes/ssl/proxy.pem --client-key=/etc/kubernetes/ssl/proxy-key.pem --embed-certs=<span class=\"literal\">true</span> --kubeconfig=kube-proxy.kubeconfig</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置上下文</span></span><br><span class=\"line\">kubectl config <span class=\"built_in\">set</span>-context default --cluster=kubernetes --user=kube-proxy --kubeconfig=kube-proxy.kubeconfig</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 且换上下文</span></span><br><span class=\"line\">kubectl config use-context default --kubeconfig=kube-proxy.kubeconfig</span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<p>步骤 03.创建 kube-proxy 服务配置文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt; /etc/kubernetes/cfg/kube-proxy.yaml &lt;&lt; <span class=\"string\">\"EOF\"</span></span><br><span class=\"line\">apiVersion: kubeproxy.config.k8s.io/v1alpha1</span><br><span class=\"line\">kind: KubeProxyConfiguration</span><br><span class=\"line\">bindAddress: 0.0.0.0</span><br><span class=\"line\">healthzBindAddress: 0.0.0.0:10256</span><br><span class=\"line\">metricsBindAddress: 0.0.0.0:10249</span><br><span class=\"line\">hostnameOverride: __HOSTNAME__</span><br><span class=\"line\">clusterCIDR: 10.128.0.0/16</span><br><span class=\"line\">clientConnection:</span><br><span class=\"line\">  kubeconfig: /etc/kubernetes/kube-proxy.kubeconfig</span><br><span class=\"line\">mode: ipvs</span><br><span class=\"line\">ipvs:</span><br><span class=\"line\">  excludeCIDRs:</span><br><span class=\"line\">  - 10.128.0.1/32</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n<p>温馨提示: ProxyMode 表示的是 Kubernetes 代理服务器所使用的模式.</p>\n<ul>\n<li>目前在 Linux 平台上有三种可用的代理模式：<code>&#39;userspace&#39;（相对较老，即将被淘汰）、 &#39;iptables&#39;（相对较新，速度较快）、&#39;ipvs&#39;（最新，在性能和可扩缩性上表现好）</code>。</li>\n<li>目前在 Windows 平台上有两种可用的代理模式：<code>&#39;userspace&#39;（相对较老，但稳定）和 &#39;kernelspace&#39;（相对较新，速度更快）</code>。</li>\n</ul>\n<p><br/></p>\n<p>步骤 04.创建 kube-proxy.service 服务启动管理文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -vp /var/lib/kube-proxy</span><br><span class=\"line\">cat &gt; /lib/systemd/system/kube-proxy.service &lt;&lt; <span class=\"string\">\"EOF\"</span></span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=Kubernetes Kube-proxy Server</span><br><span class=\"line\">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">WorkingDirectory=/var/lib/kube-proxy</span><br><span class=\"line\">ExecStart=/usr/<span class=\"built_in\">local</span>/bin/kube-proxy \\</span><br><span class=\"line\">  --config=/etc/kubernetes/cfg/kube-proxy.yaml \\</span><br><span class=\"line\">  --alsologtostderr=<span class=\"literal\">true</span> \\</span><br><span class=\"line\">  --logtostderr=<span class=\"literal\">false</span> \\</span><br><span class=\"line\">  --<span class=\"built_in\">log</span>-dir=/var/<span class=\"built_in\">log</span>/kubernetes \\</span><br><span class=\"line\">  --v=2</span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\">RestartSec=5</span><br><span class=\"line\">LimitNOFILE=65536</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<p>步骤 05.同步【master-225】节点中如下文件到其它节点对应目录之上。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp -P 20211 /etc/kubernetes/kube-proxy.kubeconfig  /etc/kubernetes/ssl/proxy.pem /etc/kubernetes/ssl/proxy-key.pem /etc/kubernetes/cfg/kube-proxy.yaml /lib/systemd/system/kube-proxy.service weiyigeek@master-223:/tmp</span><br><span class=\"line\">scp -P 20211 /etc/kubernetes/kube-proxy.kubeconfig  /etc/kubernetes/ssl/proxy.pem /etc/kubernetes/ssl/proxy-key.pem /etc/kubernetes/cfg/kube-proxy.yaml /lib/systemd/system/kube-proxy.service weiyigeek@master-224:/tmp</span><br><span class=\"line\">scp -P 20211 /etc/kubernetes/kube-proxy.kubeconfig  /etc/kubernetes/ssl/proxy.pem /etc/kubernetes/ssl/proxy-key.pem /etc/kubernetes/cfg/kube-proxy.yaml /lib/systemd/system/kube-proxy.service weiyigeek@node-1:/tmp</span><br><span class=\"line\">scp -P 20211 /etc/kubernetes/kube-proxy.kubeconfig  /etc/kubernetes/ssl/proxy.pem /etc/kubernetes/ssl/proxy-key.pem /etc/kubernetes/cfg/kube-proxy.yaml /lib/systemd/system/kube-proxy.service weiyigeek@node-2:/tmp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 复制到对应节点上并创建对应目录</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> /tmp</span><br><span class=\"line\">cp kube-proxy.kubeconfig /etc/kubernetes/kube-proxy.kubeconfig</span><br><span class=\"line\">cp proxy*.pem /etc/kubernetes/ssl/</span><br><span class=\"line\">cp kube-proxy.yaml /etc/kubernetes/cfg/kube-proxy.yaml </span><br><span class=\"line\">cp kube-proxy.service /lib/systemd/system/kube-proxy.service</span><br><span class=\"line\">mkdir -vp /var/lib/kube-proxy</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 温馨提示: 非常注意各节点主机名称，请修改 kube-proxy.yaml 中hostnameOverride为当前执行主机名称.</span></span><br><span class=\"line\">sed -i <span class=\"string\">\"s#__HOSTNAME__#<span class=\"variable\">$(hostname)</span>#g\"</span> /etc/kubernetes/cfg/kube-proxy.yaml</span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<p>步骤 06.同样重载systemd服务与设置kube-proxy服务自启，启动后查看其服务状态<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl daemon-reload</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> --now kube-proxy</span><br><span class=\"line\"><span class=\"comment\"># systemctl restart kube-proxy</span></span><br><span class=\"line\">systemctl status kube-proxy</span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/5/20220505224012.png\" alt=\"WeiyiGeek.kube-proxy服务状态查看\" title=\"\" class=\"\">\n                <p>WeiyiGeek.kube-proxy服务状态查看</p>\n            </figure>\n<hr>\n<h4 id=\"8-部署配置-Calico-插件\"><a href=\"#8-部署配置-Calico-插件\" class=\"headerlink\" title=\"8) 部署配置 Calico 插件\"></a>8) 部署配置 Calico 插件</h4><p>描述: 前面在节点加入到集群时,你会发现其节点状态为 NotReady , 我们说过部署calico插件可以让Pod与集群正常通信。</p>\n<p>步骤 01.在【master-225】节点上拉取最新版本的 calico 当前最新版本为 v3.22, 官方项目地址 (<a href=\"https://github.com/projectcalico/calico\" target=\"_blank\" rel=\"noopener\">https://github.com/projectcalico/calico</a>)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 拉取 calico 部署清单</span></span><br><span class=\"line\">wget https://docs.projectcalico.org/v3.22/manifests/calico.yaml</span><br></pre></td></tr></table></figure>\n<p>步骤 02.修改 calico.yaml 文件的中如下 K/V, 即 Pod 获取IP地址的地址池, 从网络规划中我们设置为 <code>10.128.0.0/16</code>, 注意默认情况下如下字段是注释的且默认地址池为<code>192.168.0.0/16</code>。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ vim calico.yaml</span><br><span class=\"line\"><span class=\"comment\"># The default IPv4 pool to create on startup if none exists. Pod IPs will be</span></span><br><span class=\"line\"><span class=\"comment\"># chosen from this range. Changing this value after installation will have</span></span><br><span class=\"line\"><span class=\"comment\"># no effect. This should fall within `--cluster-cidr`.</span></span><br><span class=\"line\">- name: CALICO_IPV4POOL_CIDR</span><br><span class=\"line\">  value: <span class=\"string\">\"10.128.0.0/16\"</span></span><br></pre></td></tr></table></figure></p>\n<p>步骤 03.部署 calico 到集群之中。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl apply -f calico.yaml</span><br><span class=\"line\">  <span class=\"comment\"># configmap/calico-config created</span></span><br><span class=\"line\">  <span class=\"comment\"># ....</span></span><br><span class=\"line\">  <span class=\"comment\"># poddisruptionbudget.policy/calico-kube-controllers created</span></span><br></pre></td></tr></table></figure></p>\n<p>步骤 04.查看calico网络插件在各节点上部署结果,状态为Running表示部署成功。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl get pod -A -o wide</span><br><span class=\"line\">  <span class=\"comment\"># NAMESPACE     NAME                                       READY   STATUS              RESTARTS   AGE   IP              NODE         NOMINATED NODE   READINESS GATES</span></span><br><span class=\"line\">  <span class=\"comment\"># kube-system   calico-kube-controllers-6f7b5668f7-m55gf   1/1     Running             0          56m   &lt;none&gt;          master-224   &lt;none&gt;           &lt;none&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># kube-system   calico-node-6cmgl                          1/1     Running             0          48m   10.10.107.226   node-1       &lt;none&gt;           &lt;none&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># kube-system   calico-node-bx59c                          1/1     Running             0          50m   10.10.107.227   node-2       &lt;none&gt;           &lt;none&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># kube-system   calico-node-ft29c                          1/1     Running             0          50m   10.10.107.225   master-225   &lt;none&gt;           &lt;none&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># kube-system   calico-node-gkz76                          1/1     Running             0          49m   10.10.107.223   master-223   &lt;none&gt;           &lt;none&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># kube-system   calico-node-nbnwx                          1/1     Running             0          47m   10.10.107.224   master-224   &lt;none&gt;           &lt;none&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>步骤 05.查看集群中各个节点状态是否Ready,状态为Running表示节点正常。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl get node</span><br><span class=\"line\">  <span class=\"comment\"># NAME         STATUS   ROLES    AGE     VERSION</span></span><br><span class=\"line\">  <span class=\"comment\"># master-223   Ready    &lt;none&gt;   3d      v1.23.6</span></span><br><span class=\"line\">  <span class=\"comment\"># master-224   Ready    &lt;none&gt;   2d6h    v1.23.6</span></span><br><span class=\"line\">  <span class=\"comment\"># master-225   Ready    &lt;none&gt;   6d5h    v1.23.6</span></span><br><span class=\"line\">  <span class=\"comment\"># node-1       Ready    &lt;none&gt;   2d23h   v1.23.6</span></span><br><span class=\"line\">  <span class=\"comment\"># node-2       Ready    &lt;none&gt;   2d23h   v1.23.6</span></span><br></pre></td></tr></table></figure></p>\n<p>步骤 06.此处我们扩展一哈，您可能会发现在二进制安装Kubernetes集群时master节点ROLES为<code>&lt;none&gt;</code>,而不是我们常见的master名称, 并且由于 K8s 1.24版本以后kubeadm安装Kubernetes集群时，不再给运行控制面组件的节点标记为“master”，只是因为这个词被认为是“具有攻击性的、无礼的（offensive）”。近几年一些用master-slave来表示主-从节点的计算机系统纷纷改掉术语，slave前两年就已经销声匿迹了，现在看来master也不能用, 但我们可以通过如下方式进行自定义设置节点角色名称。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 分别将主节点设置为control-plane,工作节点角色设置为work、</span></span><br><span class=\"line\"><span class=\"comment\"># node-role.kubernetes.io/节点角色名称=</span></span><br><span class=\"line\">kubectl label nodes master-223 node-role.kubernetes.io/control-plane=</span><br><span class=\"line\">kubectl label nodes master-224 node-role.kubernetes.io/control-plane=</span><br><span class=\"line\">kubectl label nodes master-225 node-role.kubernetes.io/control-plane=</span><br><span class=\"line\">kubectl label nodes node-1 node-role.kubernetes.io/work=</span><br><span class=\"line\">kubectl label nodes node-2 node-role.kubernetes.io/work=</span><br><span class=\"line\">node/node-2 labeled</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 此时再次执行查看</span></span><br><span class=\"line\">$ kubectl get node</span><br><span class=\"line\">NAME         STATUS   ROLES           AGE    VERSION</span><br><span class=\"line\">master-223   Ready    control-plane   3d     v1.23.6</span><br><span class=\"line\">master-224   Ready    control-plane   2d6h   v1.23.6</span><br><span class=\"line\">master-225   Ready    control-plane   6d5h   v1.23.6</span><br><span class=\"line\">node-1       Ready    work            3d     v1.23.6</span><br><span class=\"line\">node-2       Ready    work            3d     v1.23.6</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h4 id=\"9-部署配置-CoreDNS-插件\"><a href=\"#9-部署配置-CoreDNS-插件\" class=\"headerlink\" title=\"9) 部署配置 CoreDNS 插件\"></a>9) 部署配置 CoreDNS 插件</h4><p>描述: 通过该CoreDNS插件从名称可以看出其用于 DNS和服务发现, 使得集群中可以使用服务名称进行访问相应的后端Pod,不管后端Pod地址如何改变其总是第一时间会更新绑定到对应服务域名, 该项目也是毕业于CNCF。</p>\n<p>官网地址: <a href=\"https://coredns.io/\" target=\"_blank\" rel=\"noopener\">https://coredns.io/</a><br>项目地址: <a href=\"https://github.com/coredns/coredns\" target=\"_blank\" rel=\"noopener\">https://github.com/coredns/coredns</a></p>\n<p>步骤 01.通过参考Github(<a href=\"https://github.com/coredns/deployment/tree/master/kubernetes)中coredns项目在K8S部署说明，我们需要下载\" target=\"_blank\" rel=\"noopener\">https://github.com/coredns/deployment/tree/master/kubernetes)中coredns项目在K8S部署说明，我们需要下载</a>  deploy.sh 与  coredns.yaml.sed 两个文件.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -L https://github.com/coredns/deployment/raw/master/kubernetes/deploy.sh</span><br><span class=\"line\">wget -L https://github.com/coredns/deployment/raw/master/kubernetes/coredns.yaml.sed</span><br><span class=\"line\">chmox +x deploy.sh</span><br></pre></td></tr></table></figure>\n<p>步骤 02.生成coredns部署清单yaml文件<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -i DNS-IP 参数指定 集群 dns IP 地址, 注意需要与前面 kubelet-config.yaml 中的 clusterDNS 字段值保持一致</span></span><br><span class=\"line\"><span class=\"comment\"># -d CLUSTER-DOMAIN 参数指定 集群域名名称, 注意需要与前面 kubelet-config.yaml 中的 clusterDomain 字段值保持一致</span></span><br><span class=\"line\">./deploy.sh -i 10.96.0.10 &gt;&gt; coredns.yaml</span><br></pre></td></tr></table></figure></p>\n<p>温馨提示: 实际上我们可以手动替换 coredns.yaml.sed 内容。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CLUSTER_DNS_IP=10.96.0.10</span><br><span class=\"line\">CLUSTER_DOMAIN=cluster.local</span><br><span class=\"line\">REVERSE_CIDRS=<span class=\"keyword\">in</span>-addr.arpa ip6.arpa</span><br><span class=\"line\">STUBDOMAINS=<span class=\"string\">\"\"</span></span><br><span class=\"line\">UPSTREAMNAMESERVER=UPSTREAMNAMESERVER</span><br><span class=\"line\">YAML_TEMPLATE=coredns.yaml.sed</span><br><span class=\"line\"></span><br><span class=\"line\">sed -e <span class=\"string\">\"s/CLUSTER_DNS_IP/<span class=\"variable\">$CLUSTER_DNS_IP</span>/g\"</span> \\</span><br><span class=\"line\">    -e <span class=\"string\">\"s/CLUSTER_DOMAIN/<span class=\"variable\">$CLUSTER_DOMAIN</span>/g\"</span> \\</span><br><span class=\"line\">    -e <span class=\"string\">\"s?REVERSE_CIDRS?<span class=\"variable\">$REVERSE_CIDRS</span>?g\"</span> \\</span><br><span class=\"line\">    -e <span class=\"string\">\"s@STUBDOMAINS@<span class=\"variable\">$&#123;STUBDOMAINS//$orig/$replace&#125;</span>@g\"</span> \\</span><br><span class=\"line\">    -e <span class=\"string\">\"s/UPSTREAMNAMESERVER/<span class=\"variable\">$UPSTREAM</span>/g\"</span> \\</span><br><span class=\"line\">    <span class=\"string\">\"<span class=\"variable\">$&#123;YAML_TEMPLATE&#125;</span>\"</span></span><br></pre></td></tr></table></figure></p>\n<p>步骤 03.查看生成的coredns部署清单yaml文件（coredns.yml）<br><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">ServiceAccount</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">coredns</span></span><br><span class=\"line\"><span class=\"attr\">  namespace:</span> <span class=\"string\">kube-system</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">rbac.authorization.k8s.io/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">ClusterRole</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  labels:</span></span><br><span class=\"line\">    <span class=\"string\">kubernetes.io/bootstrapping:</span> <span class=\"string\">rbac-defaults</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"attr\">system:coredns</span></span><br><span class=\"line\"><span class=\"attr\">rules:</span></span><br><span class=\"line\"><span class=\"attr\">  - apiGroups:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">\"\"</span></span><br><span class=\"line\"><span class=\"attr\">    resources:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">endpoints</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">services</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">pods</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">namespaces</span></span><br><span class=\"line\"><span class=\"attr\">    verbs:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">list</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">watch</span></span><br><span class=\"line\"><span class=\"attr\">  - apiGroups:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">discovery.k8s.io</span></span><br><span class=\"line\"><span class=\"attr\">    resources:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">endpointslices</span></span><br><span class=\"line\"><span class=\"attr\">    verbs:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">list</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">watch</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">rbac.authorization.k8s.io/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">ClusterRoleBinding</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  annotations:</span></span><br><span class=\"line\">    <span class=\"string\">rbac.authorization.kubernetes.io/autoupdate:</span> <span class=\"string\">\"true\"</span></span><br><span class=\"line\"><span class=\"attr\">  labels:</span></span><br><span class=\"line\">    <span class=\"string\">kubernetes.io/bootstrapping:</span> <span class=\"string\">rbac-defaults</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"attr\">system:coredns</span></span><br><span class=\"line\"><span class=\"attr\">roleRef:</span></span><br><span class=\"line\"><span class=\"attr\">  apiGroup:</span> <span class=\"string\">rbac.authorization.k8s.io</span></span><br><span class=\"line\"><span class=\"attr\">  kind:</span> <span class=\"string\">ClusterRole</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"attr\">system:coredns</span></span><br><span class=\"line\"><span class=\"attr\">subjects:</span></span><br><span class=\"line\"><span class=\"attr\">- kind:</span> <span class=\"string\">ServiceAccount</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">coredns</span></span><br><span class=\"line\"><span class=\"attr\">  namespace:</span> <span class=\"string\">kube-system</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">ConfigMap</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">coredns</span></span><br><span class=\"line\"><span class=\"attr\">  namespace:</span> <span class=\"string\">kube-system</span></span><br><span class=\"line\"><span class=\"attr\">data:</span></span><br><span class=\"line\"><span class=\"attr\">  Corefile:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">    .:53 &#123;</span></span><br><span class=\"line\"><span class=\"string\">        errors</span></span><br><span class=\"line\"><span class=\"string\">        health &#123;</span></span><br><span class=\"line\"><span class=\"string\">          lameduck 5s</span></span><br><span class=\"line\"><span class=\"string\">        &#125;</span></span><br><span class=\"line\"><span class=\"string\">        ready</span></span><br><span class=\"line\"><span class=\"string\">        kubernetes cluster.local in-addr.arpa ip6.arpa &#123;</span></span><br><span class=\"line\"><span class=\"string\">          fallthrough in-addr.arpa ip6.arpa</span></span><br><span class=\"line\"><span class=\"string\">        &#125;</span></span><br><span class=\"line\"><span class=\"string\">        prometheus :9153</span></span><br><span class=\"line\"><span class=\"string\">        forward . /etc/resolv.conf &#123;</span></span><br><span class=\"line\"><span class=\"string\">          max_concurrent 1000</span></span><br><span class=\"line\"><span class=\"string\">        &#125;</span></span><br><span class=\"line\"><span class=\"string\">        cache 30</span></span><br><span class=\"line\"><span class=\"string\">        loop</span></span><br><span class=\"line\"><span class=\"string\">        reload</span></span><br><span class=\"line\"><span class=\"string\">        loadbalance</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">---</span></span><br><span class=\"line\"><span class=\"string\"></span><span class=\"attr\">apiVersion:</span> <span class=\"string\">apps/v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Deployment</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">coredns</span></span><br><span class=\"line\"><span class=\"attr\">  namespace:</span> <span class=\"string\">kube-system</span></span><br><span class=\"line\"><span class=\"attr\">  labels:</span></span><br><span class=\"line\"><span class=\"attr\">    k8s-app:</span> <span class=\"string\">kube-dns</span></span><br><span class=\"line\">    <span class=\"string\">kubernetes.io/name:</span> <span class=\"string\">\"CoreDNS\"</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\">  <span class=\"comment\"># replicas: not specified here:</span></span><br><span class=\"line\">  <span class=\"comment\"># 1. Default is 1.</span></span><br><span class=\"line\">  <span class=\"comment\"># 2. Will be tuned in real time if DNS horizontal auto-scaling is turned on.</span></span><br><span class=\"line\"><span class=\"attr\">  strategy:</span></span><br><span class=\"line\"><span class=\"attr\">    type:</span> <span class=\"string\">RollingUpdate</span></span><br><span class=\"line\"><span class=\"attr\">    rollingUpdate:</span></span><br><span class=\"line\"><span class=\"attr\">      maxUnavailable:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">  selector:</span></span><br><span class=\"line\"><span class=\"attr\">    matchLabels:</span></span><br><span class=\"line\"><span class=\"attr\">      k8s-app:</span> <span class=\"string\">kube-dns</span></span><br><span class=\"line\"><span class=\"attr\">  template:</span></span><br><span class=\"line\"><span class=\"attr\">    metadata:</span></span><br><span class=\"line\"><span class=\"attr\">      labels:</span></span><br><span class=\"line\"><span class=\"attr\">        k8s-app:</span> <span class=\"string\">kube-dns</span></span><br><span class=\"line\"><span class=\"attr\">    spec:</span></span><br><span class=\"line\"><span class=\"attr\">      priorityClassName:</span> <span class=\"string\">system-cluster-critical</span></span><br><span class=\"line\"><span class=\"attr\">      serviceAccountName:</span> <span class=\"string\">coredns</span></span><br><span class=\"line\"><span class=\"attr\">      tolerations:</span></span><br><span class=\"line\"><span class=\"attr\">        - key:</span> <span class=\"string\">\"CriticalAddonsOnly\"</span></span><br><span class=\"line\"><span class=\"attr\">          operator:</span> <span class=\"string\">\"Exists\"</span></span><br><span class=\"line\"><span class=\"attr\">      nodeSelector:</span></span><br><span class=\"line\">        <span class=\"string\">kubernetes.io/os:</span> <span class=\"string\">linux</span></span><br><span class=\"line\"><span class=\"attr\">      affinity:</span></span><br><span class=\"line\"><span class=\"attr\">         podAntiAffinity:</span></span><br><span class=\"line\"><span class=\"attr\">           requiredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class=\"line\"><span class=\"attr\">           - labelSelector:</span></span><br><span class=\"line\"><span class=\"attr\">               matchExpressions:</span></span><br><span class=\"line\"><span class=\"attr\">               - key:</span> <span class=\"string\">k8s-app</span></span><br><span class=\"line\"><span class=\"attr\">                 operator:</span> <span class=\"string\">In</span></span><br><span class=\"line\"><span class=\"attr\">                 values:</span> <span class=\"string\">[\"kube-dns\"]</span></span><br><span class=\"line\"><span class=\"attr\">             topologyKey:</span> <span class=\"string\">kubernetes.io/hostname</span></span><br><span class=\"line\"><span class=\"attr\">      containers:</span></span><br><span class=\"line\"><span class=\"attr\">      - name:</span> <span class=\"string\">coredns</span></span><br><span class=\"line\"><span class=\"attr\">        image:</span> <span class=\"string\">coredns/coredns:1.9.1</span></span><br><span class=\"line\"><span class=\"attr\">        imagePullPolicy:</span> <span class=\"string\">IfNotPresent</span></span><br><span class=\"line\"><span class=\"attr\">        resources:</span></span><br><span class=\"line\"><span class=\"attr\">          limits:</span></span><br><span class=\"line\"><span class=\"attr\">            memory:</span> <span class=\"number\">170</span><span class=\"string\">Mi</span></span><br><span class=\"line\"><span class=\"attr\">          requests:</span></span><br><span class=\"line\"><span class=\"attr\">            cpu:</span> <span class=\"number\">100</span><span class=\"string\">m</span></span><br><span class=\"line\"><span class=\"attr\">            memory:</span> <span class=\"number\">70</span><span class=\"string\">Mi</span></span><br><span class=\"line\"><span class=\"attr\">        args:</span> <span class=\"string\">[</span> <span class=\"string\">\"-conf\"</span><span class=\"string\">,</span> <span class=\"string\">\"/etc/coredns/Corefile\"</span> <span class=\"string\">]</span></span><br><span class=\"line\"><span class=\"attr\">        volumeMounts:</span></span><br><span class=\"line\"><span class=\"attr\">        - name:</span> <span class=\"string\">config-volume</span></span><br><span class=\"line\"><span class=\"attr\">          mountPath:</span> <span class=\"string\">/etc/coredns</span></span><br><span class=\"line\"><span class=\"attr\">          readOnly:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">        ports:</span></span><br><span class=\"line\"><span class=\"attr\">        - containerPort:</span> <span class=\"number\">53</span></span><br><span class=\"line\"><span class=\"attr\">          name:</span> <span class=\"string\">dns</span></span><br><span class=\"line\"><span class=\"attr\">          protocol:</span> <span class=\"string\">UDP</span></span><br><span class=\"line\"><span class=\"attr\">        - containerPort:</span> <span class=\"number\">53</span></span><br><span class=\"line\"><span class=\"attr\">          name:</span> <span class=\"string\">dns-tcp</span></span><br><span class=\"line\"><span class=\"attr\">          protocol:</span> <span class=\"string\">TCP</span></span><br><span class=\"line\"><span class=\"attr\">        - containerPort:</span> <span class=\"number\">9153</span></span><br><span class=\"line\"><span class=\"attr\">          name:</span> <span class=\"string\">metrics</span></span><br><span class=\"line\"><span class=\"attr\">          protocol:</span> <span class=\"string\">TCP</span></span><br><span class=\"line\"><span class=\"attr\">        securityContext:</span></span><br><span class=\"line\"><span class=\"attr\">          allowPrivilegeEscalation:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">          capabilities:</span></span><br><span class=\"line\"><span class=\"attr\">            add:</span></span><br><span class=\"line\"><span class=\"bullet\">            -</span> <span class=\"string\">NET_BIND_SERVICE</span></span><br><span class=\"line\"><span class=\"attr\">            drop:</span></span><br><span class=\"line\"><span class=\"bullet\">            -</span> <span class=\"string\">all</span></span><br><span class=\"line\"><span class=\"attr\">          readOnlyRootFilesystem:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">        livenessProbe:</span></span><br><span class=\"line\"><span class=\"attr\">          httpGet:</span></span><br><span class=\"line\"><span class=\"attr\">            path:</span> <span class=\"string\">/health</span></span><br><span class=\"line\"><span class=\"attr\">            port:</span> <span class=\"number\">8080</span></span><br><span class=\"line\"><span class=\"attr\">            scheme:</span> <span class=\"string\">HTTP</span></span><br><span class=\"line\"><span class=\"attr\">          initialDelaySeconds:</span> <span class=\"number\">60</span></span><br><span class=\"line\"><span class=\"attr\">          timeoutSeconds:</span> <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"attr\">          successThreshold:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"attr\">          failureThreshold:</span> <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"attr\">        readinessProbe:</span></span><br><span class=\"line\"><span class=\"attr\">          httpGet:</span></span><br><span class=\"line\"><span class=\"attr\">            path:</span> <span class=\"string\">/ready</span></span><br><span class=\"line\"><span class=\"attr\">            port:</span> <span class=\"number\">8181</span></span><br><span class=\"line\"><span class=\"attr\">            scheme:</span> <span class=\"string\">HTTP</span></span><br><span class=\"line\"><span class=\"attr\">      dnsPolicy:</span> <span class=\"string\">Default</span></span><br><span class=\"line\"><span class=\"attr\">      volumes:</span></span><br><span class=\"line\"><span class=\"attr\">        - name:</span> <span class=\"string\">config-volume</span></span><br><span class=\"line\"><span class=\"attr\">          configMap:</span></span><br><span class=\"line\"><span class=\"attr\">            name:</span> <span class=\"string\">coredns</span></span><br><span class=\"line\"><span class=\"attr\">            items:</span></span><br><span class=\"line\"><span class=\"attr\">            - key:</span> <span class=\"string\">Corefile</span></span><br><span class=\"line\"><span class=\"attr\">              path:</span> <span class=\"string\">Corefile</span></span><br><span class=\"line\"><span class=\"meta\">---</span></span><br><span class=\"line\"><span class=\"attr\">apiVersion:</span> <span class=\"string\">v1</span></span><br><span class=\"line\"><span class=\"attr\">kind:</span> <span class=\"string\">Service</span></span><br><span class=\"line\"><span class=\"attr\">metadata:</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">kube-dns</span></span><br><span class=\"line\"><span class=\"attr\">  namespace:</span> <span class=\"string\">kube-system</span></span><br><span class=\"line\"><span class=\"attr\">  annotations:</span></span><br><span class=\"line\">    <span class=\"string\">prometheus.io/port:</span> <span class=\"string\">\"9153\"</span></span><br><span class=\"line\">    <span class=\"string\">prometheus.io/scrape:</span> <span class=\"string\">\"true\"</span></span><br><span class=\"line\"><span class=\"attr\">  labels:</span></span><br><span class=\"line\"><span class=\"attr\">    k8s-app:</span> <span class=\"string\">kube-dns</span></span><br><span class=\"line\">    <span class=\"string\">kubernetes.io/cluster-service:</span> <span class=\"string\">\"true\"</span></span><br><span class=\"line\">    <span class=\"string\">kubernetes.io/name:</span> <span class=\"string\">\"CoreDNS\"</span></span><br><span class=\"line\"><span class=\"attr\">spec:</span></span><br><span class=\"line\"><span class=\"attr\">  selector:</span></span><br><span class=\"line\"><span class=\"attr\">    k8s-app:</span> <span class=\"string\">kube-dns</span></span><br><span class=\"line\"><span class=\"attr\">  clusterIP:</span> <span class=\"number\">10.96</span><span class=\"number\">.0</span><span class=\"number\">.10</span></span><br><span class=\"line\"><span class=\"attr\">  ports:</span></span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">dns</span></span><br><span class=\"line\"><span class=\"attr\">    port:</span> <span class=\"number\">53</span></span><br><span class=\"line\"><span class=\"attr\">    protocol:</span> <span class=\"string\">UDP</span></span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">dns-tcp</span></span><br><span class=\"line\"><span class=\"attr\">    port:</span> <span class=\"number\">53</span></span><br><span class=\"line\"><span class=\"attr\">    protocol:</span> <span class=\"string\">TCP</span></span><br><span class=\"line\"><span class=\"attr\">  - name:</span> <span class=\"string\">metrics</span></span><br><span class=\"line\"><span class=\"attr\">    port:</span> <span class=\"number\">9153</span></span><br><span class=\"line\"><span class=\"attr\">    protocol:</span> <span class=\"string\">TCP</span></span><br></pre></td></tr></table></figure></p>\n<p>步骤 04.在集群中部署coredns,并查看其部署状态。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl apply -f coredns.yaml</span><br><span class=\"line\">  <span class=\"comment\"># serviceaccount/coredns created</span></span><br><span class=\"line\">  <span class=\"comment\"># clusterrole.rbac.authorization.k8s.io/system:coredns created</span></span><br><span class=\"line\">  <span class=\"comment\"># clusterrolebinding.rbac.authorization.k8s.io/system:coredns created</span></span><br><span class=\"line\">  <span class=\"comment\"># configmap/coredns created</span></span><br><span class=\"line\">  <span class=\"comment\"># deployment.apps/coredns created</span></span><br><span class=\"line\">  <span class=\"comment\"># service/kube-dns created</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 温馨提示: 为了加快部署可以先拉取coredns镜像到master节点 </span></span><br><span class=\"line\">ctr -n k8s.io i pull docker.io/coredns/coredns:1.9.1</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h2 id=\"0x03-应用部署测试\"><a href=\"#0x03-应用部署测试\" class=\"headerlink\" title=\"0x03 应用部署测试\"></a>0x03 应用部署测试</h2><h3 id=\"1-部署Nginx-Web服务\"><a href=\"#1-部署Nginx-Web服务\" class=\"headerlink\" title=\"1.部署Nginx Web服务\"></a>1.部署Nginx Web服务</h3><p><strong>方式1.利用create快速部署由deployment管理的nginx应用</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 在默认的名称空间中创建由 deployment 资源控制器管理的Nginx服务</span></span><br><span class=\"line\">$ kubectl create deployment --image=nginx:latest --port=5701 --replicas 1 hello-nginx</span><br><span class=\"line\">deployment.apps/hello-nginx created</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 创建的POD</span></span><br><span class=\"line\">$ kubectl get pod -o wide --show-labels</span><br><span class=\"line\">NAME                          READY   STATUS    RESTARTS   AGE   IP              NODE         NOMINATED NODE   READINESS GATES   LABELS</span><br><span class=\"line\">hello-nginx-7f4ff84cb-mjw79   1/1     Running   0          65s   10.128.17.203   master-225   &lt;none&gt;           &lt;none&gt;            app=hello-nginx,pod-template-hash=7f4ff84cb</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 为hello-nginx部署创建一个服务，该部署服务于端口80，并连接到端口80上的Pod容器</span></span><br><span class=\"line\">$ kubectl expose deployment hello-nginx --port=80 --target-port=80</span><br><span class=\"line\">service/hello-nginx exposed</span><br><span class=\"line\"></span><br><span class=\"line\">$ kubectl get svc hello-nginx</span><br><span class=\"line\">NAME          TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE</span><br><span class=\"line\">hello-nginx   ClusterIP   10.96.122.135   &lt;none&gt;        80/TCP    23s</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 服务验证</span></span><br><span class=\"line\">$ curl -I 10.96.122.135</span><br><span class=\"line\">HTTP/1.1 200 OK</span><br><span class=\"line\">Server: nginx/1.21.5</span><br><span class=\"line\">Date: Sun, 08 May 2022 09:58:27 GMT</span><br><span class=\"line\">Content-Type: text/html</span><br><span class=\"line\">Content-Length: 615</span><br><span class=\"line\">Last-Modified: Tue, 28 Dec 2021 15:28:38 GMT</span><br><span class=\"line\">Connection: keep-alive</span><br><span class=\"line\">ETag: <span class=\"string\">\"61cb2d26-267\"</span></span><br><span class=\"line\">Accept-Ranges: bytes</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p><strong>方式2.当我们也可以利用资源清单创建nginx服务用于部署我的个人主页</strong><br>步骤 01.准备StatefulSet控制器管理的资源清单<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tee nginx.yaml &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">apiVersion:  apps/v1</span><br><span class=\"line\">kind: StatefulSet</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: nginx-web</span><br><span class=\"line\">  namespace: default</span><br><span class=\"line\">  labels:</span><br><span class=\"line\">    app: nginx</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  replicas: 2</span><br><span class=\"line\">  selector:</span><br><span class=\"line\">    matchLabels:</span><br><span class=\"line\">      app: nginx</span><br><span class=\"line\">  serviceName: <span class=\"string\">\"nginx-service\"</span> </span><br><span class=\"line\"></span><br><span class=\"line\">  template:</span><br><span class=\"line\">    metadata:</span><br><span class=\"line\">      labels:</span><br><span class=\"line\">        app: nginx</span><br><span class=\"line\">    spec:</span><br><span class=\"line\">      volumes:</span><br><span class=\"line\">      - name: workdir</span><br><span class=\"line\">        emptyDir: &#123;&#125;</span><br><span class=\"line\">      containers:</span><br><span class=\"line\">      - name: nginx</span><br><span class=\"line\">        image: nginx:latest</span><br><span class=\"line\">        ports:</span><br><span class=\"line\">        - name: http</span><br><span class=\"line\">          protocol: TCP</span><br><span class=\"line\">          containerPort: 80</span><br><span class=\"line\">        volumeMounts:</span><br><span class=\"line\">        - name: workdir</span><br><span class=\"line\">          mountPath: <span class=\"string\">\"/usr/share/nginx/html\"</span></span><br><span class=\"line\">      initContainers:</span><br><span class=\"line\">      - name: init-html</span><br><span class=\"line\">        image: bitnami/git:2.36.1</span><br><span class=\"line\">        <span class=\"built_in\">command</span>: [<span class=\"string\">'sh'</span>, <span class=\"string\">'-c'</span>, <span class=\"string\">\"git clone --depth=1 https://github.com/WeiyiGeek/WeiyiGeek.git /app/html\"</span>]</span><br><span class=\"line\">        volumeMounts:</span><br><span class=\"line\">        - name: workdir</span><br><span class=\"line\">          mountPath: <span class=\"string\">\"/app/html\"</span></span><br><span class=\"line\">---</span><br><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">kind: Service</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: nginx-service</span><br><span class=\"line\">spec:</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: NodePort</span><br><span class=\"line\">  ports:</span><br><span class=\"line\">    - port: 80</span><br><span class=\"line\">      targetPort: 80</span><br><span class=\"line\">      nodePort: 30001</span><br><span class=\"line\">      protocol: TCP</span><br><span class=\"line\">  selector:</span><br><span class=\"line\">    app: nginx</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure></p>\n<p>步骤 02.部署资源以及Pod信息查看<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl apply -f nginx.yaml</span><br><span class=\"line\">statefulset.apps/nginx-web created</span><br><span class=\"line\">service/nginx-service created</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 初始化Pod容器</span></span><br><span class=\"line\">$ kubectl get pod nginx-web-0</span><br><span class=\"line\">NAME                          READY   STATUS     RESTARTS   AGE</span><br><span class=\"line\">nginx-web-0                   0/1     Init:0/1   0          3m19s</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 正常运行</span></span><br><span class=\"line\">$ kubectl get pod nginx-web-0 -o wide</span><br><span class=\"line\">NAME          READY   STATUS    RESTARTS   AGE   IP              NODE         NOMINATED NODE   READINESS GATES</span><br><span class=\"line\">nginx-web-0   1/1     Running   0          12m   10.128.251.72   master-224   &lt;none&gt;           &lt;none&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># nginx-service 服务后端查看</span></span><br><span class=\"line\">$ kubectl describe svc nginx-service</span><br><span class=\"line\">Name:                     nginx-service</span><br><span class=\"line\">Namespace:                default</span><br><span class=\"line\">Labels:                   &lt;none&gt;</span><br><span class=\"line\">Annotations:              &lt;none&gt;</span><br><span class=\"line\">Selector:                 app=nginx</span><br><span class=\"line\">Type:                     NodePort  <span class=\"comment\"># 此处为 NodePort 暴露服务</span></span><br><span class=\"line\">IP Family Policy:         SingleStack</span><br><span class=\"line\">IP Families:              IPv4</span><br><span class=\"line\">IP:                       10.96.14.218</span><br><span class=\"line\">IPs:                      10.96.14.218</span><br><span class=\"line\">Port:                     &lt;<span class=\"built_in\">unset</span>&gt;  80/TCP</span><br><span class=\"line\">TargetPort:               80/TCP</span><br><span class=\"line\">NodePort:                 &lt;<span class=\"built_in\">unset</span>&gt;  30001/TCP  <span class=\"comment\"># 暴露的外部端口</span></span><br><span class=\"line\">Endpoints:                10.128.251.72:80</span><br><span class=\"line\">Session Affinity:         None</span><br><span class=\"line\">External Traffic Policy:  Cluster</span><br><span class=\"line\">Events:                   &lt;none&gt;</span><br></pre></td></tr></table></figure></p>\n<p>步骤 03.通过客户端浏览器访问<code>10.10.107.225:30001</code>即可访问我们部署的nginx应用，同时通过<code>kubectl logs -f nginx-web-0</code>查看pod日志.</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/5/20220508183943.png\" alt=\"WeiyiGeek.部署的个人主页\" title=\"\" class=\"\">\n                <p>WeiyiGeek.部署的个人主页</p>\n            </figure>\n<p><br></p>\n<h3 id=\"2-部署K8s原生Dashboard-UI\"><a href=\"#2-部署K8s原生Dashboard-UI\" class=\"headerlink\" title=\"2.部署K8s原生Dashboard UI\"></a>2.部署K8s原生Dashboard UI</h3><p>描述:Kubernetes Dashboard是Kubernetes集群的通用、基于web的UI。它允许用户管理集群中运行的应用程序并对其进行故障排除，以及管理集群本身。</p>\n<p>项目地址: <a href=\"https://github.com/kubernetes/dashboard/\" target=\"_blank\" rel=\"noopener\">https://github.com/kubernetes/dashboard/</a></p>\n<p>步骤 01.从Github中拉取dashboard部署资源清单，当前最新版本v2.5.1<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 下载部署</span></span><br><span class=\"line\">wget -L https://raw.githubusercontent.com/kubernetes/dashboard/v2.5.1/aio/deploy/recommended.yaml </span><br><span class=\"line\"><span class=\"comment\"># wget -L https://raw.githubusercontent.com/kubernetes/dashboard/v2.6.0/aio/deploy/recommended.yaml -O dashboard.yaml</span></span><br><span class=\"line\">kubectl apply -f recommended.yaml</span><br><span class=\"line\">grep <span class=\"string\">\"image:\"</span> recommended.yaml</span><br><span class=\"line\">  <span class=\"comment\"># image: kubernetesui/dashboard:v2.5.1</span></span><br><span class=\"line\">  <span class=\"comment\"># image: kubernetesui/metrics-scraper:v1.0.7</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 或者一条命令搞定部署</span></span><br><span class=\"line\">kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.5.1/aio/deploy/recommended.yaml</span><br><span class=\"line\">  <span class=\"comment\"># serviceaccount/kubernetes-dashboard created</span></span><br><span class=\"line\">  <span class=\"comment\"># service/kubernetes-dashboard created</span></span><br><span class=\"line\">  <span class=\"comment\"># secret/kubernetes-dashboard-certs created</span></span><br><span class=\"line\">  <span class=\"comment\"># secret/kubernetes-dashboard-csrf created</span></span><br><span class=\"line\">  <span class=\"comment\"># secret/kubernetes-dashboard-key-holder created</span></span><br><span class=\"line\">  <span class=\"comment\"># configmap/kubernetes-dashboard-settings created</span></span><br><span class=\"line\">  <span class=\"comment\"># role.rbac.authorization.k8s.io/kubernetes-dashboard created</span></span><br><span class=\"line\">  <span class=\"comment\"># clusterrole.rbac.authorization.k8s.io/kubernetes-dashboard created</span></span><br><span class=\"line\">  <span class=\"comment\"># rolebinding.rbac.authorization.k8s.io/kubernetes-dashboard created</span></span><br><span class=\"line\">  <span class=\"comment\"># clusterrolebinding.rbac.authorization.k8s.io/kubernetes-dashboard created</span></span><br><span class=\"line\">  <span class=\"comment\"># deployment.apps/kubernetes-dashboard created</span></span><br><span class=\"line\">  <span class=\"comment\"># service/dashboard-metrics-scraper created</span></span><br><span class=\"line\">  <span class=\"comment\"># deployment.apps/dashboard-metrics-scraper created</span></span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p>步骤 02.查看部署的dashboard相关资源是否正常。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl get deploy,svc -n kubernetes-dashboard  -o wide</span><br><span class=\"line\">NAME                                        READY   UP-TO-DATE   AVAILABLE   AGE     CONTAINERS                  IMAGES                                SELECTOR</span><br><span class=\"line\">deployment.apps/dashboard-metrics-scraper   1/1     1            1           7m45s   dashboard-metrics-scraper   kubernetesui/metrics-scraper:v1.0.7   k8s-app=dashboard-metrics-scraper</span><br><span class=\"line\">deployment.apps/kubernetes-dashboard        1/1     1            1           7m45s   kubernetes-dashboard        kubernetesui/dashboard:v2.5.1         k8s-app=kubernetes-dashboard</span><br><span class=\"line\"></span><br><span class=\"line\">NAME                                TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)    AGE     SELECTOR</span><br><span class=\"line\">service/dashboard-metrics-scraper   ClusterIP   10.96.37.134   &lt;none&gt;        8000/TCP   7m45s   k8s-app=dashboard-metrics-scraper</span><br><span class=\"line\">service/kubernetes-dashboard        ClusterIP   10.96.26.57    &lt;none&gt;        443/TCP    7m45s   k8s-app=kubernetes-dashboard</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 编辑 service/kubernetes-dashboard 服务将端口通过nodePort方式进行暴露为30443。</span></span><br><span class=\"line\">$ kubectl edit svc -n kubernetes-dashboard kubernetes-dashboard</span><br><span class=\"line\"><span class=\"comment\"># service/kubernetes-dashboard edited</span></span><br><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">kind: Service</span><br><span class=\"line\">.....</span><br><span class=\"line\">spec:</span><br><span class=\"line\">.....</span><br><span class=\"line\">  ports:</span><br><span class=\"line\">  - port: 443</span><br><span class=\"line\">    protocol: TCP</span><br><span class=\"line\">    targetPort: 8443</span><br><span class=\"line\">    nodePort: 30443  <span class=\"comment\"># 新增</span></span><br><span class=\"line\">  selector:</span><br><span class=\"line\">    k8s-app: kubernetes-dashboard</span><br><span class=\"line\">  sessionAffinity: None</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: NodePort     <span class=\"comment\"># 修改</span></span><br></pre></td></tr></table></figure>\n<p><br></p>\n<p>步骤 03.默认仪表板部署包含运行所需的最小RBAC权限集，而要想使用dashboard操作集群中的资源，通常我们还需要自定义创建kubernetes-dashboard管理员角色。<br>权限控制参考地址: <a href=\"https://github.com/kubernetes/dashboard/blob/master/docs/user/access-control/README.md\" target=\"_blank\" rel=\"noopener\">https://github.com/kubernetes/dashboard/blob/master/docs/user/access-control/README.md</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 创建后最小权限的Token(只能操作kubernetes-dashboard名称空间下的资源)</span></span><br><span class=\"line\">kubectl get sa -n kubernetes-dashboard kubernetes-dashboard</span><br><span class=\"line\">kubectl describe secrets -n kubernetes-dashboard kubernetes-dashboard-token-jhdpb | grep <span class=\"string\">'^token:'</span>|awk <span class=\"string\">'&#123;print $2&#125;'</span></span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/5/20220509082236.png\" alt=\"WeiyiGeek.Dashboard默认两种认证方式\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Dashboard默认两种认证方式</p>\n            </figure>\n<p>Kubernetes Dashboard 支持几种不同的用户身份验证方式：</p>\n<ul>\n<li>Authorization header</li>\n<li>Bearer Token (默认)</li>\n<li>Username/password</li>\n<li>Kubeconfig file  (默认)</li>\n</ul>\n<p>温馨提示: 此处使用Bearer Token方式, 为了方便演示我们向 Dashboard 的服务帐户授予管理员权限 (Admin privileges), 而在生产环境中通常不建议如此操作, 而是指定一个或者多个名称空间下的资源进行操作。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tee rbac-dashboard-admin.yaml &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">apiVersion: v1</span><br><span class=\"line\">kind: ServiceAccount</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: dashboard-admin</span><br><span class=\"line\">  namespace: kubernetes-dashboard</span><br><span class=\"line\">---</span><br><span class=\"line\">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class=\"line\">kind: ClusterRoleBinding</span><br><span class=\"line\">metadata:</span><br><span class=\"line\">  name: dashboard-admin</span><br><span class=\"line\">  namespace: kubernetes-dashboard</span><br><span class=\"line\">roleRef:</span><br><span class=\"line\">  apiGroup: rbac.authorization.k8s.io</span><br><span class=\"line\">  kind: ClusterRole</span><br><span class=\"line\">  name: cluster-admin</span><br><span class=\"line\">subjects:</span><br><span class=\"line\">  - kind: ServiceAccount</span><br><span class=\"line\">    name: dashboard-admin</span><br><span class=\"line\">    namespace: kubernetes-dashboard</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">kubectl apply -f rbac-dashboard-admin.yaml</span><br><span class=\"line\">  <span class=\"comment\"># serviceaccount/dashboard-admin created</span></span><br><span class=\"line\">  <span class=\"comment\"># clusterrolebinding.rbac.authorization.k8s.io/dashboard-admin created</span></span><br></pre></td></tr></table></figure>\n<p>步骤 04.获取 sa 创建的 dashboard-admin 用户的 secrets 名称并获取认证 token ，用于上述搭建的dashboard 认证使用。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl get sa -n kubernetes-dashboard dashboard-admin -o yaml | grep <span class=\"string\">\"\\- name\"</span> | awk <span class=\"string\">'&#123;print $3&#125;'</span></span><br><span class=\"line\">  <span class=\"comment\"># dashboard-admin-token-crh7v</span></span><br><span class=\"line\">kubectl describe secrets -n kubernetes-dashboard dashboard-admin-token-crh7v | grep <span class=\"string\">\"^token:\"</span> | awk <span class=\"string\">'&#123;print $2&#125;'</span></span><br><span class=\"line\">  <span class=\"comment\">#  获取到认证Token</span></span><br><span class=\"line\">eyJhbGciOiJSUzI1NiIsImtpZCI6IkJXdm1YSGNSQ3VFSEU3V0FTRlJKcU10bWxzUDZPY3lfU0lJOGJjNGgzRXMifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlcm5ldGVzLWRhc2hib2FyZCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJkYXNoYm9hcmQtYWRtaW4tdG9rZW4tY3JoN3YiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGFzaGJvYXJkLWFkbWluIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQudWlkIjoiNDY3ODEwMDMtM2MzNi00NWE1LTliYTQtNDY3MTQ0OWE2N2E0Iiwic3ViIjoic3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmVybmV0ZXMtZGFzaGJvYXJkOmRhc2hib2FyZC1hZG1pbiJ9.X10AzWBxaHObYGoOqjfw3IYkhn8L5E7najdGSeLavb94LX5BY8_rCGizkWgNgNyvUe39NRP8r8YBU5sy9F2K-kN9_5cxUX125cj1drLDmgPJ-L-1m9-fs-luKnkDLRE5ENS_dgv7xsFfhtN7s9prgdqLw8dIrhshHVwflM_VOXW5D26QR6izy2AgPNGz9cRh6x2znrD-dpUNHO1enzvGzlWj7YhaOUFl310V93hh6EEc57gAwmDQM4nWP44KiaAiaW1cnC38Xs9CbWYxjsfxd3lObWShOd3knFk5PUVSBHo0opEv3HQ_-gwu6NGV6pLMY52p_JO1ECPSDnblVbVtPQ</span><br></pre></td></tr></table></figure></p>\n<p>步骤 05.利用上述 Token 进行登陆Kubernetes-dashboard的UI。<br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/5/20220509090433.png\" alt=\"WeiyiGeek.拥有管理员权限的dashboard\" title=\"\" class=\"\">\n                <p>WeiyiGeek.拥有管理员权限的dashboard</p>\n            </figure></p>\n<p><br></p>\n<h3 id=\"3-部署K9s工具进行管理集群\"><a href=\"#3-部署K9s工具进行管理集群\" class=\"headerlink\" title=\"3.部署K9s工具进行管理集群\"></a>3.部署K9s工具进行管理集群</h3><p>描述: k9s 是用于管理 Kubernetes 集群的 CLI, K9s 提供了一个终端 UI 来与您的 Kubernetes 集群进行交互。通过封装 kubectl 功能 k9s 持续监视 Kubernetes 的变化并提供后续命令来与您观察到的资源进行交互，直白的说就是k9s可以让开发者快速查看并解决运行 Kubernetes 时的日常问题。<br>官网地址: <a href=\"https://k9scli.io/\" target=\"_blank\" rel=\"noopener\">https://k9scli.io/</a><br>参考地址: <a href=\"https://github.com/derailed/k9s\" target=\"_blank\" rel=\"noopener\">https://github.com/derailed/k9s</a></p>\n<p>此处,以安装二进制包为例进行实践。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1. 利用 wget 命令 -c 短点续传和 -b 后台下载</span></span><br><span class=\"line\">wget -b -c https://github.com/derailed/k9s/releases/download/v0.25.18/k9s_Linux_x86_64.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.解压并删除多余文件</span></span><br><span class=\"line\">tar -zxf k9s_linux_x86_64.tar.gz</span><br><span class=\"line\">rm  k9s_linux_x86_64.tar.gz  LICENSE  README.md</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.拷贝 kubernetes 控制配置文件到加目录中</span></span><br><span class=\"line\">mkdir -p <span class=\"variable\">$HOME</span>/.kube</span><br><span class=\"line\">sudo cp -i /etc/kubernetes/admin.conf <span class=\"variable\">$HOME</span>/.kube/config</span><br><span class=\"line\">sudo chown $(id -u):$(id -g) <span class=\"variable\">$HOME</span>/.kube/config</span><br><span class=\"line\"><span class=\"built_in\">export</span> KUBECONFIG=/etc/kubernetes/admin.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4.直接运行即可，如果你对vim操作比较熟悉，那么恭喜你了你很快能上手k9s.</span></span><br><span class=\"line\">/nfsdisk-31/newK8s-Backup/tools<span class=\"comment\"># ./k9s</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 5.退出k9s指令</span></span><br><span class=\"line\">:quit</span><br></pre></td></tr></table></figure></p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2022/5/20220509192129.png\" alt=\"WeiyiGeek.使用K9s工具管理集群\" title=\"\" class=\"\">\n                <p>WeiyiGeek.使用K9s工具管理集群</p>\n            </figure>\n<p>更多使用技巧请参考: [K9s之K8s集群管理工具实践尝试] (<a href=\"https://blog.weiyigeek.top/2022/1-1-582.html\">https://blog.weiyigeek.top/2022/1-1-582.html</a>)</p>\n<hr>\n<h2 id=\"0x04-入坑出坑\"><a href=\"#0x04-入坑出坑\" class=\"headerlink\" title=\"0x04 入坑出坑\"></a>0x04 入坑出坑</h2><h3 id=\"在进行安装-containerd-配置时报-unknown-service-runtime-v1alpha2-RuntimeService-错误。\"><a href=\"#在进行安装-containerd-配置时报-unknown-service-runtime-v1alpha2-RuntimeService-错误。\" class=\"headerlink\" title=\"在进行安装 containerd 配置时报 unknown service runtime.v1alpha2.RuntimeService 错误。\"></a>在进行安装 containerd 配置时报 <code>unknown service runtime.v1alpha2.RuntimeService</code> 错误。</h3><p>错误信息:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">I0116 04:51:59.228719  596468 checks.go:433] validating <span class=\"keyword\">if</span> the connectivity <span class=\"built_in\">type</span> is via proxy or direct</span><br><span class=\"line\">[preflight] Some fatal errors occurred:</span><br><span class=\"line\">        [ERROR CRI]: container runtime is not running: output: time=<span class=\"string\">\"2022-01-16T04:51:59Z\"</span> level=fatal msg=<span class=\"string\">\"getting status of runtime: rpc error: code = Unimplemented desc = unknown service runtime.v1alpha2.RuntimeService\"</span></span><br><span class=\"line\">, error: <span class=\"built_in\">exit</span> status 1</span><br><span class=\"line\">[preflight] If you know what you are doing, you can make a check non-fatal with `--ignore-preflight-errors=...`</span><br><span class=\"line\">error execution phase preflight</span><br></pre></td></tr></table></figure></p>\n<p>解决办法:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -vp /etc/containerd/</span><br><span class=\"line\">containerd config default &gt; /etc/containerd/config.toml</span><br><span class=\"line\">sed -i <span class=\"string\">\"s#k8s.gcr.io#registry.cn-hangzhou.aliyuncs.com/google_containers#g\"</span>  /etc/containerd/config.toml</span><br><span class=\"line\">sed -i <span class=\"string\">'/containerd.runtimes.runc.options/a\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ SystemdCgroup = true'</span> /etc/containerd/config.toml</span><br><span class=\"line\">sed -i <span class=\"string\">\"s#https://registry-1.docker.io#https://xlx9erfu.mirror.aliyuncs.com#g\"</span>  /etc/containerd/config.toml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># containerd - 运行时设置</span></span><br><span class=\"line\">cat &lt;&lt;EOF &gt; /etc/crictl.yaml</span><br><span class=\"line\">runtime-endpoint: unix:///run/containerd/containerd.sock</span><br><span class=\"line\">image-endpoint: unix:///run/containerd/containerd.sock</span><br><span class=\"line\">timeout: 10</span><br><span class=\"line\">debug: <span class=\"literal\">false</span></span><br><span class=\"line\">EOF</span><br><span class=\"line\">systemctl daemon-reload</span><br><span class=\"line\">systemctl restart containerd.service kubelet.service</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<h3 id=\"二进制搭建K8S集群部署calico网络插件始终有一个calico-node-xxx状态为Running但是READY为0-1解决方法\"><a href=\"#二进制搭建K8S集群部署calico网络插件始终有一个calico-node-xxx状态为Running但是READY为0-1解决方法\" class=\"headerlink\" title=\"二进制搭建K8S集群部署calico网络插件始终有一个calico-node-xxx状态为Running但是READY为0/1解决方法\"></a>二进制搭建K8S集群部署calico网络插件始终有一个calico-node-xxx状态为Running但是READY为0/1解决方法</h3><ul>\n<li><p>错误信息:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl get pod -A</span><br><span class=\"line\">NAMESPACE     NAME                                       READY   STATUS              RESTARTS   AGE</span><br><span class=\"line\">kube-system   calico-kube-controllers-6f7b5668f7-52247   1/1     Running   0          13m</span><br><span class=\"line\">kube-system   calico-node-kb27z                          0/1     Running             0          13m</span><br><span class=\"line\"></span><br><span class=\"line\">$ kubectl describe pod -n kube-system calico-node-kb27z</span><br><span class=\"line\">Warning  Unhealthy 14m  kubelet Readiness probe failed: 2022-05-07 13:15:12.460 [INFO][204] confd/health.go 180: Number of node(s) with BGP peering established = 0</span><br><span class=\"line\">calico/node is not ready: BIRD is not ready: BGP not established with 10.10.107.223,10.10.107.224,10.10.107.225,10.10.107.226  <span class=\"comment\"># 关键点</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>错误原因: calico-node daemonset 默认的策略是获取第一个取到的网卡的 ip 作为 calico node 的ip, 由于集群中网卡名称不统一所以可能导致calico获取的网卡IP不对, 所以出现此种情况下就只能 IP_AUTODETECTION_METHOD 字段指定通配符网卡名称或者IP地址。</p>\n</li>\n<li><p>解决办法:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 通信网卡名称查看(为ens32)</span></span><br><span class=\"line\">ip addr</span><br><span class=\"line\">  <span class=\"comment\"># 2: ens32: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000</span></span><br><span class=\"line\">  <span class=\"comment\">#     link/ether 00:0c:29:a5:66:de brd ff:ff:ff:ff:ff:ff</span></span><br><span class=\"line\">  <span class=\"comment\">#     inet 10.10.107.227/24 brd 10.10.107.255 scope global ens32</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 编辑 calico 资源，添加 IP_AUTODETECTION_METHOD 键与值, 其中interface 是正则表达式为了成功匹配此处设置为en.* </span></span><br><span class=\"line\">kubectl edit daemonsets.apps -n kube-system calico-node</span><br><span class=\"line\">- name: IP</span><br><span class=\"line\">  value: autodetect</span><br><span class=\"line\">- name: IP_AUTODETECTION_METHOD</span><br><span class=\"line\">  value: interface=en.*</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>扩展补充: calico 官方文档 <a href=\"https://docs.projectcalico.org/reference/node/configuration#ip-autodetection-methods\" target=\"_blank\" rel=\"noopener\">https://docs.projectcalico.org/reference/node/configuration#ip-autodetection-methods</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># IP_AUTODETECTION_METHOD\t</span></span><br><span class=\"line\"><span class=\"comment\"># The method to use to autodetect the IPv4 address for this host. This is only used when the IPv4 address is being autodetected. See IP Autodetection methods for details of the valid methods. [Default: first-found]</span></span><br><span class=\"line\"></span><br><span class=\"line\">- name: IP_AUTODETECTION_METHOD</span><br><span class=\"line\">value: can-reach=114.114.114.114</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"二进制部署-containerd-1-6-3-将用于环回的-CNI-配置版本提高到-1-0-0-导致-CNI-loopback-无法启用\"><a href=\"#二进制部署-containerd-1-6-3-将用于环回的-CNI-配置版本提高到-1-0-0-导致-CNI-loopback-无法启用\" class=\"headerlink\" title=\"二进制部署 containerd 1.6.3 将用于环回的 CNI 配置版本提高到 1.0.0 导致 CNI loopback 无法启用\"></a>二进制部署 containerd 1.6.3 将用于环回的 CNI 配置版本提高到 1.0.0 导致 CNI loopback 无法启用</h3><ul>\n<li><p>错误信息: </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Warning  FailedCreatePodSandBox  4m19s (x1293 over 34m)  kubelet            (combined from similar events): Failed to create pod sandbox: rpc error: code = Unknown desc = failed to setup network <span class=\"keyword\">for</span> sandbox <span class=\"string\">\"ae7a5d4c6906fac5114679c4b375ecc02e0cebcf4406962f01b40220064a8c1c\"</span>: plugin <span class=\"built_in\">type</span>=<span class=\"string\">\"loopback\"</span> failed (add): incompatible CNI versions; config is <span class=\"string\">\"1.0.0\"</span>, plugin supports [<span class=\"string\">\"0.1.0\"</span> <span class=\"string\">\"0.2.0\"</span> <span class=\"string\">\"0.3.0\"</span> <span class=\"string\">\"0.3.1\"</span> <span class=\"string\">\"0.4.0\"</span>]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>问题原因: 版本containerd 1.6.3 的 Bug</p>\n</li>\n<li><p>解决办法: 重新安装部署<a href=\"https://github.com/containerd/containerd/releases/download/v1.6.4/cri-containerd-cni-1.6.4-linux-amd64.tar.gz\" target=\"_blank\" rel=\"noopener\">cri-containerd-cni-1.6.4-linux-amd64</a></p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">containerd -version</span><br><span class=\"line\">containerd github.com/containerd/containerd v1.6.4 212e8b6fa2f44b9c21b2798135fc6fb7c53efc16</span><br></pre></td></tr></table></figure>\n<ul>\n<li>扩展补充: containerd issues 提出并已找到解决办法 (<a href=\"https://github.com/containerd/containerd/issues/6876\" target=\"_blank\" rel=\"noopener\">https://github.com/containerd/containerd/issues/6876</a>)</li>\n</ul>\n<p><br></p>\n<h3 id=\"在集群中部署coredns时显示-CrashLoopBackOff-并且报-Readiness-probe-failed-8181-端口-connection-refused\"><a href=\"#在集群中部署coredns时显示-CrashLoopBackOff-并且报-Readiness-probe-failed-8181-端口-connection-refused\" class=\"headerlink\" title=\"在集群中部署coredns时显示 CrashLoopBackOff 并且报 Readiness probe failed 8181 端口 connection refused\"></a>在集群中部署coredns时显示 CrashLoopBackOff 并且报 Readiness probe failed 8181 端口 connection refused</h3><ul>\n<li><p>错误信息:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl get pod -n kube-system -o wide</span><br><span class=\"line\">    <span class=\"comment\"># coredns-659648f898-kvgrl                  0/1     CrashLoopBackOff   5 (73s ago)   4m14s   10.128.17.198   master-225   &lt;none&gt;           &lt;none&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">kubectl describe pod -n kube-system coredns-659648f898-crttw </span><br><span class=\"line\">  <span class=\"comment\"># Warning  Unhealthy  2m34s                 kubelet            Readiness probe failed: HTTP probe failed with statuscode: 503</span></span><br><span class=\"line\">  <span class=\"comment\"># Warning  Unhealthy  95s                   kubelet            Readiness probe failed: Get \"http://10.128.251.66:8181/ready\": dial tcp 10.128.251.66:8181: connect: connection refused</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>问题原因: 由于 coredns 是映射宿主机中的 /etc/resolv.conf 到容器中在加载该配置是并不能访问 nameserver 127.0.0.53 这个dns地址导致coredns容器pod无法正常启动，并且在我们手动修改该 <code>/etc/resolv.conf</code> 后systemd-resolved.service会定时刷新覆盖我们的修改，所以在百度上的一些方法只能临时解决，在Pod容器下一次重启后将会又处于该异常状态。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ls -alh /etc/resolv.conf</span><br><span class=\"line\">  <span class=\"comment\"># lrwxrwxrwx 1 root root 39 Feb  2  2021 /etc/resolv.conf -&gt; ../run/systemd/resolve/stub-resolv.conf</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ cat /etc/resolv.conf</span><br><span class=\"line\">  <span class=\"comment\"># nameserver 127.0.0.53</span></span><br><span class=\"line\">  <span class=\"comment\"># options edns0 trust-ad</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>解决办法: 推荐方式将<code>/etc/resolv.conf</code>建立软连接到 <code>/run/systemd/resolve/resolv.conf</code>或者不使用软连接直接删除。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># systemd-resolve 服务DNS设定后续便可以防止/etc/resolv.conf被误修改。</span></span><br><span class=\"line\">tee -a /etc/systemd/resolved.conf &lt;&lt;<span class=\"string\">'EOF'</span></span><br><span class=\"line\">DNS=223.6.6.6</span><br><span class=\"line\">DNS=10.96.0.10</span><br><span class=\"line\">EOF</span><br><span class=\"line\">systemctl restart systemd-resolved.service</span><br><span class=\"line\">systemd-resolve --status</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Delete the symbolic link</span></span><br><span class=\"line\">sudo rm -f /etc/resolv.conf </span><br><span class=\"line\">ln -s /run/systemd/resolve/resolv.conf /etc/resolv.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 删除错误 coredns POD 此处利用pod标签</span></span><br><span class=\"line\">kubectl delete pod -n kube-system -l k8s-app=kube-dns</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># coredns 副本扩展为3个查看是否正常了。</span></span><br><span class=\"line\">kubectl scale deployment -n kube-system coredns --replicas 3</span><br><span class=\"line\"><span class=\"comment\"># deployment.apps/coredns scaled</span></span><br><span class=\"line\"></span><br><span class=\"line\">$ cat /etc/resolv.conf</span><br><span class=\"line\">nameserver 223.6.6.6</span><br><span class=\"line\">nameserver 10.96.0.10</span><br><span class=\"line\">nameserver 192.168.10.254</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br></p>\n<h3 id=\"在进行授予管理员权限时利用-Token-登陆-kubernetes-dashboard-认证时始终报-Unauthorized-401-Invalid-credentials-provided\"><a href=\"#在进行授予管理员权限时利用-Token-登陆-kubernetes-dashboard-认证时始终报-Unauthorized-401-Invalid-credentials-provided\" class=\"headerlink\" title=\"在进行授予管理员权限时利用 Token 登陆 kubernetes-dashboard 认证时始终报 Unauthorized (401): Invalid credentials provided\"></a>在进行授予管理员权限时利用 Token 登陆 kubernetes-dashboard 认证时始终报 Unauthorized (401): Invalid credentials provided</h3><ul>\n<li>错误信息: Unauthorized (401): Invalid credentials provided<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ kubectl logs -f --tail 50 -n kubernetes-dashboard kubernetes-dashboard-fb8648fd9-8pl5c</span><br><span class=\"line\">2022/05/09 00:48:50 [2022-05-09T00:48:50Z] Incoming HTTP/2.0 POST /api/v1/login request from 10.128.17.194:54676: &#123; contents hidden &#125;</span><br><span class=\"line\">2022/05/09 00:48:50 Non-critical error occurred during resource retrieval: the server has asked <span class=\"keyword\">for</span> the client to provide credentials</span><br></pre></td></tr></table></figure></li>\n<li>问题原因: 创键的rbac本身是没有问题,只是我们采用 kubectl get secrets 获取的是经过base64编码后的，我们应该执行 kubectl describe secrets 进行获取。</li>\n<li>解决办法:<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl get sa -n kubernetes-dashboard dashboard-admin -o yaml | grep <span class=\"string\">\"\\- name\"</span> | awk <span class=\"string\">'&#123;print $3&#125;'</span></span><br><span class=\"line\">  <span class=\"comment\"># dashboard-admin-token-crh7v</span></span><br><span class=\"line\">kubectl describe secrets -n kubernetes-dashboard dashboard-admin-token-crh7v | grep <span class=\"string\">\"^token:\"</span> | awk <span class=\"string\">'&#123;print $2&#125;'</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Containers","path":"api/categories/Containers.json"},{"name":"OperationTools","path":"api/categories/OperationTools.json"}],"tags":[{"name":"kubernetes","path":"api/tags/kubernetes.json"},{"name":"Containerd","path":"api/tags/Containerd.json"}]}