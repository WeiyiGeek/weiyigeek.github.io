{"title":"网络连接配置查看","slug":"系统运维/Linux/常用命令/网络查看类命令/网络连接配置查看","date":"2019-06-06T11:35:30.000Z","updated":"2023-01-31T02:29:09.173Z","url":"2019/6-6-174.html","path":"api/articles/2019/6-6-174.html.json","covers":["https://img.weiyigeek.top/2019/20190606214743.png","https://img.weiyigeek.top/2019/20190606221537.png","https://img.weiyigeek.top/2019/20190606232044.png","https://img.weiyigeek.top/2019/20190606233150.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h4 id=\"0x00-快速入门\"><a href=\"#0x00-快速入门\" class=\"headerlink\" title=\"0x00 快速入门\"></a>0x00 快速入门</h4><p>前言：主要针对于Linux中网络信息/TCP/UDP连接查看抓取等命令进行学习，加深对Linux的使用;</p>\n<h4 id=\"0x01-网络状态信息\"><a href=\"#0x01-网络状态信息\" class=\"headerlink\" title=\"0x01 网络状态信息\"></a>0x01 网络状态信息</h4><h5 id=\"netstat-命令\"><a href=\"#netstat-命令\" class=\"headerlink\" title=\"netstat 命令\"></a>netstat 命令</h5><p>描述：用来打印Linux中网络系统的状态信息，可让你得知整个Linux系统的网络情况<br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190606214743.png\" alt=\"WeiyiGeek.netstat选项\" title=\"\" class=\"\">\n                <p>WeiyiGeek.netstat选项</p>\n            </figure></p>\n<p>实际案例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#示例1.利用管道符的命令连接可以看当前与多少用户正在连接</span></span><br><span class=\"line\">netstat -an | grep ESTABLISHED | wc -l  </span><br><span class=\"line\">netstat -tnul <span class=\"comment\">##可以用来看有多少端口服务正常打开</span></span><br><span class=\"line\">Proto Recv-Q Send-Q Local Address           Foreign Address         State</span><br><span class=\"line\">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例2.查询通信TCP/UDP协议</span></span><br><span class=\"line\">netstat -antup   <span class=\"comment\">#查看网络的链接信息,显示建立相关链接的程序名，显示所有选项，拒绝显示别名，能显示数字的全部转化成数字，显示tcp和udp</span></span><br><span class=\"line\">netstat -tlunp  <span class=\"comment\">#列出所有得tcp/udp正在连接得通信 进程得PID</span></span><br><span class=\"line\">Active Internet connections (only servers)</span><br><span class=\"line\">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name</span><br><span class=\"line\">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      11108/nginx: master</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例3.使用prot/host和users显示</span></span><br><span class=\"line\"><span class=\"variable\">$netstat</span> -a --numeric-ports | head -n 4</span><br><span class=\"line\">Proto Recv-Q Send-Q Local Address           Foreign Address         State</span><br><span class=\"line\">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN</span><br><span class=\"line\">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$netstat</span> -a --numeric-hosts | head -n 4</span><br><span class=\"line\">Proto Recv-Q Send-Q Local Address           Foreign Address         State</span><br><span class=\"line\">tcp        0      0 0.0.0.0:http            0.0.0.0:*               LISTEN</span><br><span class=\"line\">tcp        0      0 0.0.0.0:ssh             0.0.0.0:*               LISTEN</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$netstat</span> -a --numeric-users | head -n 4</span><br><span class=\"line\">Proto Recv-Q Send-Q Local Address           Foreign Address         State</span><br><span class=\"line\">tcp        0      0 0.0.0.0:http            0.0.0.0:*               LISTEN</span><br><span class=\"line\">tcp        0      0 0.0.0.0:ssh             0.0.0.0:*               LISTEN</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例4.列出所有处于监听状态得Sockets</span></span><br><span class=\"line\"><span class=\"variable\">$netstat</span> -lx  <span class=\"comment\">#只列出监听 UNIX 端口 STREAM：流</span></span><br><span class=\"line\">Active UNIX domain sockets (only servers)</span><br><span class=\"line\">Proto RefCnt Flags       Type       State         I-Node   Path</span><br><span class=\"line\">unix  2      [ ACC ]     STREAM     LISTENING     18174    /run/dbus/system_bus_socket</span><br><span class=\"line\">unix  2      [ ACC ]     STREAM     LISTENING     327430   /var/run/docker.sock</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例5.显示每个协议得统计信息进行持续输出 -  passive：被动</span></span><br><span class=\"line\">netstat -cstu  <span class=\"comment\">#每秒钟刷新统计信息</span></span><br><span class=\"line\"><span class=\"comment\"># IcmpMsg:</span></span><br><span class=\"line\"><span class=\"comment\">#     InType0: 3</span></span><br><span class=\"line\"><span class=\"comment\">#     InType3: 2469</span></span><br><span class=\"line\"><span class=\"comment\">#     InType8: 37438</span></span><br><span class=\"line\"><span class=\"comment\">#     InType11: 986</span></span><br><span class=\"line\"><span class=\"comment\">#     InType13: 12</span></span><br><span class=\"line\"><span class=\"comment\">#     OutType0: 37438</span></span><br><span class=\"line\"><span class=\"comment\">#     OutType3: 2</span></span><br><span class=\"line\"><span class=\"comment\">#     OutType14: 12</span></span><br><span class=\"line\"><span class=\"comment\"># Tcp:</span></span><br><span class=\"line\"><span class=\"comment\">#     442 active connections openings</span></span><br><span class=\"line\"><span class=\"comment\">#     4122 passive connection openings</span></span><br><span class=\"line\"><span class=\"comment\">#     20172 failed connection attempts</span></span><br><span class=\"line\"><span class=\"comment\">#     221 connection resets received</span></span><br><span class=\"line\"><span class=\"comment\">#     6 connections established</span></span><br><span class=\"line\"><span class=\"comment\">#     1141594 segments received</span></span><br><span class=\"line\"><span class=\"comment\">#     1316330 segments send out</span></span><br><span class=\"line\"><span class=\"comment\">#     231198 segments retransmited</span></span><br><span class=\"line\"><span class=\"comment\">#     5 bad segments received.</span></span><br><span class=\"line\"><span class=\"comment\">#     670914 resets sent</span></span><br><span class=\"line\"><span class=\"comment\">#     InCsumErrors: 4</span></span><br><span class=\"line\"><span class=\"comment\"># Udp:</span></span><br><span class=\"line\"><span class=\"comment\">#     17621 packets received</span></span><br><span class=\"line\"><span class=\"comment\">#     2 packets to unknown port received.</span></span><br><span class=\"line\"><span class=\"comment\">#     0 packet receive errors</span></span><br><span class=\"line\"><span class=\"comment\">#     52001 packets sent</span></span><br><span class=\"line\"><span class=\"comment\">#     0 receive buffer errors</span></span><br><span class=\"line\"><span class=\"comment\">#     0 send buffer errors</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例6.显示系统不支持得地址族（Address Families）</span></span><br><span class=\"line\"><span class=\"variable\">$netstat</span> --verbose</span><br><span class=\"line\">netstat: no support <span class=\"keyword\">for</span> AF INET (sctp) on this system.</span><br><span class=\"line\">netstat: no support <span class=\"keyword\">for</span> AF IPX on this system.</span><br><span class=\"line\">netstat: no support <span class=\"keyword\">for</span> AF AX25 on this system.</span><br><span class=\"line\">netstat: no support <span class=\"keyword\">for</span> AF X25 on this system.</span><br><span class=\"line\">netstat: no support <span class=\"keyword\">for</span> AF NETROM on this system.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例6.显示核心路由信息</span></span><br><span class=\"line\"><span class=\"variable\">$netstat</span> -ri</span><br><span class=\"line\">Kernel IP routing table</span><br><span class=\"line\">Destination     Gateway         Genmask         Flags   MSS Window  irtt Iface</span><br><span class=\"line\">default         gateway         0.0.0.0         UG        0 0          0 eth0</span><br><span class=\"line\">default         gateway         0.0.0.0         UG        0 0          0 eth0</span><br><span class=\"line\">link-local      0.0.0.0         255.255.0.0     U         0 0          0 eth0</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例7.显示网络接口列表</span></span><br><span class=\"line\"><span class=\"variable\">$netstat</span> -i</span><br><span class=\"line\">Kernel Interface table</span><br><span class=\"line\">Iface             MTU    RX-OK RX-ERR RX-DRP RX-OVR    TX-OK TX-ERR TX-DRP TX-OVR Flg</span><br><span class=\"line\">br-15352d6a83b9  1500        0      0      0 0             0      0      0      0 BMU</span><br><span class=\"line\">br-523a7e9f1e05  1500       38      0      0 0            38      0      0      0 BMU</span><br><span class=\"line\">docker0          1500    35908      0      0 0         37440      0      0      0 BMU</span><br><span class=\"line\">eth0             1500  1667387      0      0 0       1456021      0      0      0 BMRU</span><br><span class=\"line\">lo              65536       38      0      0 0            38      0      0      0 LRU</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#示例8.IP/TCP分析</span></span><br><span class=\"line\"><span class=\"variable\">$netstat</span> -pantu | egrep -v <span class=\"string\">'0.0.0.0|::::'</span>| awk <span class=\"string\">'&#123;print $5&#125;'</span>| egrep -v <span class=\"string\">'and|Address'</span> | cut -d <span class=\"string\">':'</span> -f 1 | sort | uniq</span><br><span class=\"line\">218.201.8.36</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$netstat</span> -nt | grep -e 127.0.0.1 -e 0.0.0.0 -e ::: -v | awk <span class=\"string\">'/^tcp/&#123;++state[$NF]&#125; END &#123;for(i in state) print i,\"\\t\",state[i]&#125;'</span></span><br><span class=\"line\">SYN_RECV         4</span><br><span class=\"line\">ESTABLISHED      8</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190606221537.png\" alt=\"WeiyiGeek.分析IP/TCP\" title=\"\" class=\"\">\n                <p>WeiyiGeek.分析IP/TCP</p>\n            </figure></p>\n<p>Q:[面试]Linux 下查看端口占用的命令?</p>\n<blockquote>\n<p>答: <code>netstat -tunlp 、ss -tua、lsof -i</code> 等命令</p>\n</blockquote>\n<p><br></p>\n<h5 id=\"ss-命令-显示系统网络socket连接以及端口信息\"><a href=\"#ss-命令-显示系统网络socket连接以及端口信息\" class=\"headerlink\" title=\"ss 命令 - 显示系统网络socket连接以及端口信息\"></a>ss 命令 - 显示系统网络socket连接以及端口信息</h5><p>描述：显示处于活动状态的套接字信息，它是 iproute2 包附带的另一个工具，允许你查询 socket 的有关统计信息，它可以显示和netstat类似的内容，但ss的优势在于它能够显示更多更详细的有关TCP和连接状态的信息，而且比netstat更快速更高效。</p>\n<p>当服务器的socket连接数量变得非常大时，无论是使用netstat命令还是直接cat /proc/net/tcp，执行速度都会很慢。可能你不会有切身的感受，当服务器维持的连接达到上万个的时候，使用netstat等于浪费生命，而用ss才是节省时间。</p>\n<p>ss快的秘诀在于，它利用到了TCP协议栈中tcp_diag。tcp_diag是一个用于分析统计的模块，可以获得Linux 内核中第一手的信息，这就确保了ss的快捷高效。当然如果你的系统中没有tcp_diag，ss也可以正常运行，只是效率会变得稍慢。</p>\n<p>基础语法:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Usage: ss [ OPTIONS ]</span><br><span class=\"line\">       ss [ OPTIONS ] [ FILTER ]</span><br><span class=\"line\"><span class=\"comment\"># 参数</span></span><br><span class=\"line\">-r：尝试解析数字地址/端口</span><br><span class=\"line\">-e：处于通信状态,ESTABLISHED</span><br><span class=\"line\">-p：显示进程服务与PID号</span><br><span class=\"line\">-K： 强制关闭 socket</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 状态说明</span></span><br><span class=\"line\">states:  established,  syn-sent,  syn-recv,  fin-wait-1,  fin-wait-2, time-wait, closed, close-wait, last-ack, listen and closing.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 命令</span></span><br><span class=\"line\">all - <span class=\"keyword\">for</span> all the states</span><br><span class=\"line\">connected - all the states except <span class=\"keyword\">for</span> listen and closed</span><br><span class=\"line\">synchronized - all the connected states except <span class=\"keyword\">for</span> syn-sent</span><br><span class=\"line\">bucket  -  states, <span class=\"built_in\">which</span> are maintained as minisockets, i.e.  time-wait and syn-recv</span><br><span class=\"line\">big - opposite to bucket</span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190606232044.png\" alt=\"WeiyiGeek.参数\" title=\"\" class=\"\">\n                <p>WeiyiGeek.参数</p>\n            </figure></p>\n<p>实际案例：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 示例1.显示指定状态和服务得数据连接</span></span><br><span class=\"line\">ss state ESTABLISHED sport = :ssh</span><br><span class=\"line\">Netid  Recv-Q Send-Q Local Address:Port                 Peer Address:Port       </span><br><span class=\"line\">tcp    0      0      172.17.24.236:ssh                  218.201.8.36:38532      </span><br><span class=\"line\">tcp    0      0      172.17.24.236:ssh                  218.201.8.36:nifty-hmi  </span><br><span class=\"line\"><span class=\"comment\">## 展现其强大的过滤能力</span></span><br><span class=\"line\">$ ss state all sport = :ssh   <span class=\"comment\">##源端口就是:ssh,也可以是:22</span></span><br><span class=\"line\">$ ss state connected sport = :ssh    <span class=\"comment\">##只有ESTABLISHED,同样也能是22端口</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例2.显示连接的时间</span></span><br><span class=\"line\">ss -o | grep -v <span class=\"string\">\"*\"</span> | grep <span class=\"string\">\"timer\"</span>    <span class=\"comment\">## 连接 时间</span></span><br><span class=\"line\">tcp    ESTAB      0      0      172.17.24.236:ssh                  218.201.8.36:38532                 timer:(keepalive,98min,0)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例3.显示TCP/UDP/.X连接</span></span><br><span class=\"line\">ss -tua <span class=\"comment\">#列举出所有的TCP/UDP连接</span></span><br><span class=\"line\">ss -tux</span><br><span class=\"line\">Netid  State      Recv-Q Send-Q Local Address:Port                 Peer Address:Port</span><br><span class=\"line\">u_str  ESTAB      0      0      /run/systemd/journal/stdout 438875                * 438870</span><br><span class=\"line\">tcp    ESTAB      0      0      172.17.24.236:ssh                  218.201.8.36:8924</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例4.显示Sockets摘要</span></span><br><span class=\"line\">ss -s</span><br><span class=\"line\">Total: 141 (kernel 192)  <span class=\"comment\">#总数</span></span><br><span class=\"line\">TCP:   12 (estab 10, closed 0, orphaned 0, synrecv 0, timewait 0/0), ports 0</span><br><span class=\"line\">Transport Total     IP        IPv6</span><br><span class=\"line\">*         192       -         -</span><br><span class=\"line\">RAW       0         0         0</span><br><span class=\"line\">UDP       9         8         1</span><br><span class=\"line\">TCP       12        12        0</span><br><span class=\"line\">INET      21        20        1</span><br><span class=\"line\">FRAG      0         0         0</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例5.列出所有打开的网络连接端口</span></span><br><span class=\"line\">ss -l  <span class=\"comment\">#UNCONN TCP /UDP /UNIX -l 参数只会显示监听的端口，而且可以进一步过滤到任何想要的信息。</span></span><br><span class=\"line\">Netid  State      Recv-Q Send-Q Local Address:Port                 Peer Address:Port</span><br><span class=\"line\">nl     UNCONN     0      0      rtnl:dockerd/7461           *                   </span><br><span class=\"line\">nl     UNCONN     0      0      rtnl:kernel                 *        </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例6.查看进程使用的socket:</span></span><br><span class=\"line\">ss -m   <span class=\"comment\"># 显示内存使用套接字</span></span><br><span class=\"line\"><span class=\"comment\"># u_str  ESTAB      0      0      /run/dbus/system_bus_socket 443118                * 443110                skmem:(r0,rb212992,t0,tb212992,f0,w0,o0,bl0,d0)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例7.列出连接时显示进程名字和pid:</span></span><br><span class=\"line\">ss -pl</span><br><span class=\"line\">ss -pl | grep <span class=\"string\">\"tcp\"</span> | awk <span class=\"string\">'BEGIN&#123; FS=\" \"&#125;&#123;print $1,$2,$5&#125;'</span>   <span class=\"comment\"># 截取字段</span></span><br><span class=\"line\">  <span class=\"comment\"># udp    UNCONN     0      0      192.168.1.254:ntp      *:*     users:((\"ntpd\",pid=2497,fd=24))</span></span><br><span class=\"line\">  <span class=\"comment\"># udp    UNCONN     0      0      127.0.0.1:ntp          *:*     users:((\"ntpd\",pid=2497,fd=22))</span></span><br><span class=\"line\">  <span class=\"comment\"># nl UNCONN tcpdiag:ss/29225</span></span><br><span class=\"line\">  <span class=\"comment\"># nl UNCONN tcpdiag:kernel</span></span><br><span class=\"line\">  <span class=\"comment\"># tcp LISTEN *:http</span></span><br><span class=\"line\">  <span class=\"comment\"># tcp LISTEN *:ssh</span></span><br><span class=\"line\"><span class=\"comment\"># 找出某个进程监听的端口号: </span></span><br><span class=\"line\">ss -ltp | grep proccess_name</span><br><span class=\"line\"><span class=\"comment\"># 找出某个端口号被哪个进程占用: </span></span><br><span class=\"line\">ss -p | grep port_num</span><br><span class=\"line\"><span class=\"comment\"># 列出某个端口上的tcp连接：</span></span><br><span class=\"line\">ss -tenp | grep port_num</span><br><span class=\"line\"><span class=\"comment\"># 列出本地监听端口相关连接:</span></span><br><span class=\"line\">ss -lnpt | grep 9093</span><br><span class=\"line\">  <span class=\"comment\"># LISTEN    0         4096                     *:9093                   *:*        users:((\"alertmanager\",pid=586124,fd=8))</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 示例8.可以列出过滤出指定的 host 或者 ip 段，Destination（目标地址）</span></span><br><span class=\"line\">$ ss state all dst 74.125.0.0/16   <span class=\"comment\">## 例如，列出到达 74.125.0.0/16 子网的连接，这个子网属于 Google：</span></span><br></pre></td></tr></table></figure><br><figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2019/20190606233150.png\" alt=\"WeiyiGeek.state\" title=\"\" class=\"\">\n                <p>WeiyiGeek.state</p>\n            </figure></p>\n<hr>\n\n<h4 id=\"0x02-网络连接配置\"><a href=\"#0x02-网络连接配置\" class=\"headerlink\" title=\"0x02 网络连接配置\"></a>0x02 网络连接配置</h4><h5 id=\"wpa-supplicant-命令\"><a href=\"#wpa-supplicant-命令\" class=\"headerlink\" title=\"wpa_supplicant 命令\"></a>wpa_supplicant 命令</h5><p>描述:Linux 系统的笔记本电脑有外置的WIFI模块即可;</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#实例1.连接无线网ssid/密码psk/wlp4s0网卡名称</span></span><br><span class=\"line\">wpa_supplicant -B -i wlp4s0 -c &lt;(wpa_passphrase <span class=\"string\">\"NAMEssid\"</span> <span class=\"string\">\"psk\"</span>)</span><br></pre></td></tr></table></figure>\n<p><br></p>\n<h5 id=\"nload-命令\"><a href=\"#nload-命令\" class=\"headerlink\" title=\"nload 命令\"></a>nload 命令</h5><p>描述: 是一个实时监控网络流量和带宽使用的控制台应用程序，使用两个图表可视化地展示接收和发送的流量，并提供诸如数据交换总量、最小/最大网络带宽使用量等附加信息。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#RHEL/CentOS</span></span><br><span class=\"line\">yum install nload</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Debian/Ubuntu</span></span><br><span class=\"line\">apt install nload</span><br></pre></td></tr></table></figure>\n<p>基础示例:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.利用回车切换不同的网卡</span></span><br><span class=\"line\">Device eth0 [172.31.0.25] (1/2):</span><br><span class=\"line\">============================================================</span><br><span class=\"line\">Incoming:</span><br><span class=\"line\">        Curr: 1.63 kBit/s</span><br><span class=\"line\">        Avg: 2.02 kBit/s</span><br><span class=\"line\">        Min: 888.00 Bit/s</span><br><span class=\"line\">        Max: 12.65 kBit/s</span><br><span class=\"line\">        Ttl: 29.57 GByte</span><br><span class=\"line\">Outgoing:</span><br><span class=\"line\">        Curr: 2.88 kBit/s</span><br><span class=\"line\">        Avg: 3.43 kBit/s</span><br><span class=\"line\">        Min: 1.43 kBit/s</span><br><span class=\"line\">        Max: 14.81 kBit/s</span><br><span class=\"line\">        Ttl: 17.75 GByte</span><br></pre></td></tr></table></figure></p>\n<hr>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Linux命令","path":"api/categories/Linux命令.json"}],"tags":[{"name":"网络命令","path":"api/tags/网络命令.json"}]}