{"title":"斗智斗勇的反爬取实践","slug":"编程世界/Python/爬虫学习/Pocketing/斗智斗勇的反爬取实践","date":"2019-07-12T07:36:30.000Z","updated":"2023-01-31T02:29:10.671Z","url":"2019/7-12-508.html","path":"api/articles/2019/7-12-508.html.json","covers":["https://img.weiyigeek.top/2020/2/20201028111343.png","https://img.weiyigeek.top/2020/2/20201028112613.png","https://img.weiyigeek.top/2020/2/20201028113054.png","https://img.weiyigeek.top/2020/2/20201028112653.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h3 id=\"0x00-前言简述\"><a href=\"#0x00-前言简述\" class=\"headerlink\" title=\"0x00 前言简述\"></a>0x00 前言简述</h3><p>后续补充….</p>\n<p>Q: 爬虫(Spdier)步骤解析?</p>\n<blockquote>\n<p>1.数据爬取; </p>\n<ul>\n<li>规则分析</li>\n</ul>\n<p>2.数据提取; </p>\n<ul>\n<li>规则匹配</li>\n</ul>\n<p>3.数据存储;</p>\n<ul>\n<li>数据清洗</li>\n</ul>\n</blockquote>\n<p>Q: 反爬虫爬取方法技巧? (<code>实际上提高了破解成本而已!</code>)</p>\n<blockquote>\n<ul>\n<li>1.数据加密反扒：在服务端对数据进行特定算法的加密, 在客户端利用JS进行动态输出解密(<code>如何保护前度解密文件是重点!</code>);</li>\n</ul>\n</blockquote>\n<p>JSON - <a href=\"https://www.cnblogs.com/lanston1/p/11024147.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/lanston1/p/11024147.html</a></p>\n<p>Selenium + ChormeDriver 爬虫:<br><a href=\"https://www.cnblogs.com/caizheng/p/7344561.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/caizheng/p/7344561.html</a></p>\n<hr>\n<h3 id=\"0x01-反扒开发实战\"><a href=\"#0x01-反扒开发实战\" class=\"headerlink\" title=\"0x01 反扒开发实战\"></a>0x01 反扒开发实战</h3><h4 id=\"1-后端base64编码前端JS动态解密反扒取\"><a href=\"#1-后端base64编码前端JS动态解密反扒取\" class=\"headerlink\" title=\"(1) 后端base64编码前端JS动态解密反扒取;\"></a>(1) 后端base64编码前端JS动态解密反扒取;</h4><p>Q: 我们为什么要用base64编码?</p>\n<blockquote>\n<p>描述: 它是网络上最常见的用于传输8bit字节代码的编码方式之一, 采用base64编码具有不可读性即所编码的数据不会被人直接看出;<br>可将二进制数据编码为适合放在URL中的形式, 除此之外还可以<code>放在请求头响应头进行传输</code></p>\n</blockquote>\n<p>补充: Javascript 原生的 BASE64(ASCII) <code>window.atob() 解码</code> 与 <code>window.btoa() 转码</code> 但是他们并不支持中文的Base64编码需要下面自己写的 utf-8 decode 的实现;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Window.atob() <span class=\"comment\"># 函数用来解码一个已经被base-64编码过的数据。</span></span><br><span class=\"line\">window.btoa() <span class=\"comment\"># 将ascii字符串或二进制数据转换成一个base64编码过的字符串</span></span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p><strong>反扒开发流程:</strong></p>\n<ul>\n<li>(1) 前台数据采用渲染JS(<code>document.write</code>)加密输出内容;</li>\n<li>(2) 前台加载JS文件进行解码后动态输出内容;</li>\n<li>(3) 请求的JS解密文件被其它请求响应路径所替代,并设置有失效期1000毫秒;</li>\n</ul>\n<p><br/></p>\n<p><strong>项目实践</strong><br><em>Spider Example Request</em><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Day3\\Spider\\SpiderReq.py</span></span><br><span class=\"line\"><span class=\"comment\"># coding: utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">from</span> pprint <span class=\"keyword\">import</span> pprint </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_data</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">  response = requests.get(<span class=\"string\">'http://127.0.0.1:8000/get/info'</span>)</span><br><span class=\"line\">  pprint(response.content.decode(<span class=\"string\">'utf-8'</span>)) <span class=\"comment\">#pip install pprint</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">  get_data()</span><br></pre></td></tr></table></figure></p>\n<p><em>Javascript Base64 decode</em><br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"actionscript\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BASE64</span><span class=\"params\">()</span> </span>&#123;  </span></span><br><span class=\"line\"><span class=\"actionscript\">    <span class=\"comment\">// private property  </span></span></span><br><span class=\"line\"><span class=\"actionscript\">    _keyStr = <span class=\"string\">\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"</span>;  </span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"actionscript\">    <span class=\"comment\">// public method for encoding  </span></span></span><br><span class=\"line\"><span class=\"actionscript\">    <span class=\"keyword\">this</span>.encode = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(input)</span> </span>&#123;  </span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">var</span> output = <span class=\"string\">\"\"</span>;  </span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">var</span> chr1, chr2, chr3, enc1, enc2, enc3, enc4;  </span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;  </span></span><br><span class=\"line\"><span class=\"undefined\">        input = _utf8_encode(input);  </span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">while</span> (i &lt; input.length) &#123;  </span></span><br><span class=\"line\"><span class=\"undefined\">            chr1 = input.charCodeAt(i++);  </span></span><br><span class=\"line\"><span class=\"undefined\">            chr2 = input.charCodeAt(i++);  </span></span><br><span class=\"line\"><span class=\"undefined\">            chr3 = input.charCodeAt(i++);  </span></span><br><span class=\"line\"><span class=\"undefined\">            enc1 = chr1 &gt;&gt; 2;  </span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">            enc2 = ((chr1 &amp; 3) <span class=\"tag\">&lt;&lt; <span class=\"attr\">4</span>) | (<span class=\"attr\">chr2</span> &gt;</span>&gt; 4);  </span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">            enc3 = ((chr2 &amp; 15) <span class=\"tag\">&lt;&lt; <span class=\"attr\">2</span>) | (<span class=\"attr\">chr3</span> &gt;</span>&gt; 6);  </span></span></span><br><span class=\"line\"><span class=\"undefined\">            enc4 = chr3 &amp; 63;  </span></span><br><span class=\"line\"><span class=\"javascript\">            <span class=\"keyword\">if</span> (<span class=\"built_in\">isNaN</span>(chr2)) &#123;  </span></span><br><span class=\"line\"><span class=\"undefined\">                enc3 = enc4 = 64;  </span></span><br><span class=\"line\"><span class=\"javascript\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">isNaN</span>(chr3)) &#123;  </span></span><br><span class=\"line\"><span class=\"undefined\">                enc4 = 64;  </span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;  </span></span><br><span class=\"line\"><span class=\"undefined\">            output = output +  </span></span><br><span class=\"line\"><span class=\"undefined\">            _keyStr.charAt(enc1) + _keyStr.charAt(enc2) +  </span></span><br><span class=\"line\"><span class=\"undefined\">            _keyStr.charAt(enc3) + _keyStr.charAt(enc4);  </span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;  </span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">return</span> output;  </span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;  </span></span><br><span class=\"line\"><span class=\"undefined\"> </span></span><br><span class=\"line\"><span class=\"actionscript\">    <span class=\"comment\">// public method for decoding  </span></span></span><br><span class=\"line\"><span class=\"actionscript\">    <span class=\"keyword\">this</span>.decode = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(input)</span> </span>&#123;  </span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">var</span> output = <span class=\"string\">\"\"</span>;  </span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">var</span> chr1, chr2, chr3;  </span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">var</span> enc1, enc2, enc3, enc4;  </span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;  </span></span><br><span class=\"line\"><span class=\"javascript\">        input = input.replace(<span class=\"regexp\">/[^A-Za-z0-9\\+\\/\\=]/g</span>, <span class=\"string\">\"\"</span>);  </span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">while</span> (i &lt; input.length) &#123;  </span></span><br><span class=\"line\"><span class=\"undefined\">            enc1 = _keyStr.indexOf(input.charAt(i++));  </span></span><br><span class=\"line\"><span class=\"undefined\">            enc2 = _keyStr.indexOf(input.charAt(i++));  </span></span><br><span class=\"line\"><span class=\"undefined\">            enc3 = _keyStr.indexOf(input.charAt(i++));  </span></span><br><span class=\"line\"><span class=\"undefined\">            enc4 = _keyStr.indexOf(input.charAt(i++));  </span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">            chr1 = (enc1 <span class=\"tag\">&lt;&lt; <span class=\"attr\">2</span>) | (<span class=\"attr\">enc2</span> &gt;</span>&gt; 4);  </span></span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">            chr2 = ((enc2 &amp; 15) <span class=\"tag\">&lt;&lt; <span class=\"attr\">4</span>) | (<span class=\"attr\">enc3</span> &gt;</span>&gt; 2);  </span></span></span><br><span class=\"line\"><span class=\"undefined\">            chr3 = ((enc3 &amp; 3) &lt;&lt; 6) | enc4;  </span></span><br><span class=\"line\"><span class=\"javascript\">            output = output + <span class=\"built_in\">String</span>.fromCharCode(chr1);  </span></span><br><span class=\"line\"><span class=\"actionscript\">            <span class=\"keyword\">if</span> (enc3 != <span class=\"number\">64</span>) &#123;  </span></span><br><span class=\"line\"><span class=\"javascript\">                output = output + <span class=\"built_in\">String</span>.fromCharCode(chr2);  </span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;  </span></span><br><span class=\"line\"><span class=\"actionscript\">            <span class=\"keyword\">if</span> (enc4 != <span class=\"number\">64</span>) &#123;  </span></span><br><span class=\"line\"><span class=\"javascript\">                output = output + <span class=\"built_in\">String</span>.fromCharCode(chr3);  </span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;  </span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;  </span></span><br><span class=\"line\"><span class=\"undefined\">        output = _utf8_decode(output);  </span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">return</span> output;  </span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;  </span></span><br><span class=\"line\"><span class=\"undefined\"> </span></span><br><span class=\"line\"><span class=\"actionscript\">    <span class=\"comment\">// private method for UTF-8 encoding  </span></span></span><br><span class=\"line\"><span class=\"actionscript\">    _utf8_encode = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(string)</span> </span>&#123;  </span></span><br><span class=\"line\"><span class=\"javascript\">        string = string.replace(<span class=\"regexp\">/\\r\\n/g</span>,<span class=\"string\">\"\\n\"</span>);  </span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">var</span> utftext = <span class=\"string\">\"\"</span>;  </span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> n = <span class=\"number\">0</span>; n &lt; string.length; n++) &#123;  </span></span><br><span class=\"line\"><span class=\"actionscript\">            <span class=\"keyword\">var</span> c = string.charCodeAt(n);  </span></span><br><span class=\"line\"><span class=\"actionscript\">            <span class=\"keyword\">if</span> (c &lt; <span class=\"number\">128</span>) &#123;  </span></span><br><span class=\"line\"><span class=\"javascript\">                utftext += <span class=\"built_in\">String</span>.fromCharCode(c);  </span></span><br><span class=\"line\"><span class=\"actionscript\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>((c &gt; <span class=\"number\">127</span>) &amp;&amp; (c &lt; <span class=\"number\">2048</span>)) &#123;  </span></span><br><span class=\"line\"><span class=\"javascript\">                utftext += <span class=\"built_in\">String</span>.fromCharCode((c &gt;&gt; <span class=\"number\">6</span>) | <span class=\"number\">192</span>);  </span></span><br><span class=\"line\"><span class=\"javascript\">                utftext += <span class=\"built_in\">String</span>.fromCharCode((c &amp; <span class=\"number\">63</span>) | <span class=\"number\">128</span>);  </span></span><br><span class=\"line\"><span class=\"actionscript\">            &#125; <span class=\"keyword\">else</span> &#123;  </span></span><br><span class=\"line\"><span class=\"javascript\">                utftext += <span class=\"built_in\">String</span>.fromCharCode((c &gt;&gt; <span class=\"number\">12</span>) | <span class=\"number\">224</span>);  </span></span><br><span class=\"line\"><span class=\"javascript\">                utftext += <span class=\"built_in\">String</span>.fromCharCode(((c &gt;&gt; <span class=\"number\">6</span>) &amp; <span class=\"number\">63</span>) | <span class=\"number\">128</span>);  </span></span><br><span class=\"line\"><span class=\"javascript\">                utftext += <span class=\"built_in\">String</span>.fromCharCode((c &amp; <span class=\"number\">63</span>) | <span class=\"number\">128</span>);  </span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;  </span></span><br><span class=\"line\"><span class=\"undefined\"> </span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;  </span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">return</span> utftext;  </span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;  </span></span><br><span class=\"line\"><span class=\"undefined\"> </span></span><br><span class=\"line\"><span class=\"actionscript\">    <span class=\"comment\">// private method for UTF-8 decoding  </span></span></span><br><span class=\"line\"><span class=\"actionscript\">    _utf8_decode = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(utftext)</span> </span>&#123;  </span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">var</span> string = <span class=\"string\">\"\"</span>;  </span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;  </span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">var</span> c = c1 = c2 = <span class=\"number\">0</span>;  </span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">while</span> ( i &lt; utftext.length ) &#123;  </span></span><br><span class=\"line\"><span class=\"undefined\">            c = utftext.charCodeAt(i);  </span></span><br><span class=\"line\"><span class=\"actionscript\">            <span class=\"keyword\">if</span> (c &lt; <span class=\"number\">128</span>) &#123;  </span></span><br><span class=\"line\"><span class=\"javascript\">                string += <span class=\"built_in\">String</span>.fromCharCode(c);  </span></span><br><span class=\"line\"><span class=\"undefined\">                i++;  </span></span><br><span class=\"line\"><span class=\"actionscript\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>((c &gt; <span class=\"number\">191</span>) &amp;&amp; (c &lt; <span class=\"number\">224</span>)) &#123;  </span></span><br><span class=\"line\"><span class=\"undefined\">                c2 = utftext.charCodeAt(i+1);  </span></span><br><span class=\"line\"><span class=\"javascript\">                string += <span class=\"built_in\">String</span>.fromCharCode(((c &amp; <span class=\"number\">31</span>) &lt;&lt; <span class=\"number\">6</span>) | (c2 &amp; <span class=\"number\">63</span>));  </span></span><br><span class=\"line\"><span class=\"undefined\">                i += 2;  </span></span><br><span class=\"line\"><span class=\"actionscript\">            &#125; <span class=\"keyword\">else</span> &#123;  </span></span><br><span class=\"line\"><span class=\"undefined\">                c2 = utftext.charCodeAt(i+1);  </span></span><br><span class=\"line\"><span class=\"undefined\">                c3 = utftext.charCodeAt(i+2);  </span></span><br><span class=\"line\"><span class=\"javascript\">                string += <span class=\"built_in\">String</span>.fromCharCode(((c &amp; <span class=\"number\">15</span>) &lt;&lt; <span class=\"number\">12</span>) | ((c2 &amp; <span class=\"number\">63</span>) &lt;&lt; <span class=\"number\">6</span>) | (c3 &amp; <span class=\"number\">63</span>));  </span></span><br><span class=\"line\"><span class=\"undefined\">                i += 3;  </span></span><br><span class=\"line\"><span class=\"undefined\">            &#125;  </span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;  </span></span><br><span class=\"line\"><span class=\"actionscript\">        <span class=\"keyword\">return</span> string;  </span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;  </span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"actionscript\"><span class=\"comment\">// 两次 base64.utf8 解密</span></span></span><br><span class=\"line\"><span class=\"actionscript\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">showEncodeHtml</span><span class=\"params\">(content)</span> </span>&#123;</span></span><br><span class=\"line\"><span class=\"actionscript\">  <span class=\"comment\">// 类的实例化</span></span></span><br><span class=\"line\"><span class=\"actionscript\">  <span class=\"keyword\">var</span> base64=<span class=\"keyword\">new</span> BASE64();</span></span><br><span class=\"line\"><span class=\"actionscript\">  <span class=\"comment\">// 多次base64解码</span></span></span><br><span class=\"line\"><span class=\"actionscript\">  <span class=\"keyword\">return</span> base64.decode(base64.decode(content)[<span class=\"string\">\"\\x72\\x65\\x70\\x6c\\x61\\x63\\x65\"</span>](<span class=\"string\">'\\x48\\x74\\x74\\x70\\x73\\x77\\x77\\x77\\x57\\x65\\x69\\x79\\x69\\x47\\x65\\x65\\x6b\\x54\\x4f\\x50'</span>,<span class=\"string\">''</span>)[<span class=\"string\">\"\\x72\\x65\\x70\\x6c\\x61\\x63\\x65\"</span>](<span class=\"string\">'\\x50\\x4f\\x54\\x6b\\x65\\x65\\x47\\x69\\x79\\x69\\x65\\x57\\x77\\x77\\x77\\x73\\x70\\x74\\x74\\x48'</span>,<span class=\"string\">''</span>));</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>脚本解析:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1)在线十六进制转字符串: https://www.bejson.com/convert/ox2str/</span></span><br><span class=\"line\">HttpswwwWeiyiGeekTOP =&gt; 487474707377777757656979694765656b544f50 =&gt; \\x48\\x74\\x74\\x70\\x73\\x77\\x77\\x77\\x57\\x65\\x69\\x79\\x69\\x47\\x65\\x65\\x6b\\x54\\x4f\\x50</span><br><span class=\"line\">POTkeeGiyieWwwwspttH =&gt; 504f546b65654769796965577777777370747448 =&gt; \\x50\\x4f\\x54\\x6b\\x65\\x65\\x47\\x69\\x79\\x69\\x65\\x57\\x77\\x77\\x77\\x73\\x70\\x74\\x74\\x48</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 字符串反转</span></span><br><span class=\"line\">var reverse = <span class=\"keyword\">function</span>( str )&#123;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> str.split(<span class=\"string\">''</span>).reverse().join(<span class=\"string\">''</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">reverse(<span class=\"string\">'HttpswwwWeiyiGeekTOP'</span>);</span><br><span class=\"line\"><span class=\"comment\"># hex 编码</span></span><br><span class=\"line\">var string = <span class=\"string\">\"504f546b65654769796965577777777370747448\"</span>;</span><br><span class=\"line\">var res = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (i = 0; i &lt; string.length; i+=2)&#123;</span><br><span class=\"line\">  res += <span class=\"string\">\"\\\\x\"</span>+string.slice(i,i+2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">console.log(res)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># (2) 实际脚本调用解析(以下方式常常用在恶意脚本以及混淆脚本之中)</span></span><br><span class=\"line\">base64.decode(</span><br><span class=\"line\">  base64.decode(context)[<span class=\"string\">\"replace\"</span>](<span class=\"string\">'HttpswwwWeiyiGeekTOP'</span>,<span class=\"string\">''</span>)[<span class=\"string\">\"replace\"</span>](<span class=\"string\">'POTkeeGiyieWwwwspttH'</span>,<span class=\"string\">''</span>)</span><br><span class=\"line\">  <span class=\"comment\"># base64.decode(context).replace('HttpswwwWeiyiGeekTOP','').replace('POTkeeGiyieWwwwspttH','')</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p><em>Flask - Templates</em></p>\n<ul>\n<li><p>Day3\\App\\templates\\Spider\\index.html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>&#123;&#123; Title &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- (3) 静态js文件调用 --&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- &lt;script src=\"&#123;&#123; url_for('static', filename='Spider/decode.js')&#125;&#125;\"&gt;&lt;/script&gt; --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- (4) 动态js文件调用(校验请求时间)防止网页上js文件被js编码破解 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">document</span>.write(<span class=\"string\">'&lt;script src=\"/get/decode/?t='</span>+<span class=\"built_in\">Date</span>.parse(<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>())+<span class=\"string\">'\"&gt;&lt;\\/script&gt;'</span>)</span></span><br><span class=\"line\"><span class=\"undefined\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span> 动物信息 <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"animal\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- </span></span><br><span class=\"line\"><span class=\"comment\">    (1) 常规方式</span></span><br><span class=\"line\"><span class=\"comment\">    &lt;ul&gt;</span></span><br><span class=\"line\"><span class=\"comment\">    &#123;#</span></span><br><span class=\"line\"><span class=\"comment\">      &#123;% for element in Info %&#125;</span></span><br><span class=\"line\"><span class=\"comment\">      &lt;li&gt; &#123;&#123;# element.id &#125;&#125; - &#123;&#123; element.name &#125;&#125; &lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"comment\">      &#123;% endfor %&#125;</span></span><br><span class=\"line\"><span class=\"comment\">    #&#125;</span></span><br><span class=\"line\"><span class=\"comment\">    &lt;/ul&gt; --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- (2) 动态输出 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"> </span></span><br><span class=\"line\"><span class=\"actionscript\">      <span class=\"comment\">//方式1.模板引擎渲染得到内容(未加密), 注意此处需要采用safe引擎内置函数进行HTML编码转码</span></span></span><br><span class=\"line\"><span class=\"actionscript\">      <span class=\"comment\">//document.write(\"&#123;&#123; Info|safe &#125;&#125;\");</span></span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"actionscript\">      <span class=\"comment\">//方式2.模板引擎渲染得到内容(已base64编码)才用内置js文件进行反编码输出</span></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"built_in\">document</span>.write(showEncodeHtml(<span class=\"string\">\"&#123;&#123; Info|safe &#125;&#125;\"</span>));</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Day3\\App\\templates\\Spider\\info.html</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 注意此处不能有换行否则需要在模板渲染返回字符串时候必须进行换行符替换 --&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  &#123;% for element in Info %&#125;</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span> &#123;&#123; element.id &#125;&#125; - &#123;&#123; element.name &#125;&#125; <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  &#123;% endfor %&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br></p>\n<p><em>Flask - View (蓝图)</em></p>\n<ul>\n<li>Day3\\App\\views\\Spider\\demo1.py<figure class=\"highlight py\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Blueprint,render_template,request,make_response</span><br><span class=\"line\"><span class=\"keyword\">from</span> App.models <span class=\"keyword\">import</span> db,Dog</span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">pocket = Blueprint(<span class=\"string\">'pocket'</span>, __name__, url_prefix=<span class=\"string\">'/get'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@pocket.route('/info/')</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_info</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">  <span class=\"comment\"># (1) 注意 in_ 只能用于filter并传入的是列表</span></span><br><span class=\"line\">  dogs = Dog.query.filter(Dog.id.in_([<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">7</span>,<span class=\"number\">9</span>])).all()</span><br><span class=\"line\">  <span class=\"comment\"># (2) 返回jijia2模板渲染后的结果此处需过滤掉换行符</span></span><br><span class=\"line\">  info = render_template(<span class=\"string\">'/Spider/info.html'</span>, Info = dogs).replace(<span class=\"string\">'\\n'</span>,<span class=\"string\">''</span>)</span><br><span class=\"line\">  <span class=\"comment\"># (3) 采用多次BASE64编码+自定义字符串拼接加密内容</span></span><br><span class=\"line\">  encode_content = base64.standard_b64encode(info.encode(<span class=\"string\">'utf-8'</span>)).decode(<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">  <span class=\"comment\"># HttpswwwWeiyiGeekTOP =&gt; 487474707377777757656979694765656b544f50 =&gt; \\x48\\x74\\x74\\x70\\x73\\x77\\x77\\x77\\x57\\x65\\x69\\x79\\x69\\x47\\x65\\x65\\x6b\\x54\\x4f\\x50</span></span><br><span class=\"line\">  <span class=\"comment\"># POTkeeGiyieWwwwspttH =&gt; 504f546b65654769796965577777777370747448 =&gt; \\x50\\x4f\\x54\\x6b\\x65\\x65\\x47\\x69\\x79\\x69\\x65\\x57\\x77\\x77\\x77\\x73\\x70\\x74\\x74\\x48</span></span><br><span class=\"line\">  splice_content = <span class=\"string\">\"HttpswwwWeiyiGeekTOP\"</span> + encode_content + <span class=\"string\">\"POTkeeGiyieWwwwspttH\"</span>  <span class=\"comment\"># 拼接混淆二进制串</span></span><br><span class=\"line\">  mutil_encode = base64.standard_b64encode(splice_content.encode(<span class=\"string\">'utf-8'</span>)).decode(<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">  print(<span class=\"string\">\"Base64 编码:\"</span>,encode_content)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># (4) 向前台模板引擎传递参数</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> render_template(<span class=\"string\">'/Spider/index.html'</span>, Title = <span class=\"string\">'数据内容加密与反扒区演示'</span>, Info = mutil_encode)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@pocket.route('/decode/')</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_decode</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">  <span class=\"comment\"># (6) 访问时间戳先渲染html页面在请求js(重点值得学习)</span></span><br><span class=\"line\">  <span class=\"keyword\">try</span>:</span><br><span class=\"line\">    t = request.args.get(<span class=\"string\">'t'</span>)</span><br><span class=\"line\">    t = int(t)</span><br><span class=\"line\">  <span class=\"keyword\">except</span>:</span><br><span class=\"line\">    resp = make_response(<span class=\"string\">\"alert('请求参数超时')\"</span>)</span><br><span class=\"line\">    resp.headers[<span class=\"string\">\"Content-type\"</span>]=<span class=\"string\">\"text/javascript;charset=UTF-8\"</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> resp</span><br><span class=\"line\">    </span><br><span class=\"line\">  c = time.time() * <span class=\"number\">1000</span></span><br><span class=\"line\">  <span class=\"comment\"># 一秒之内正常请求</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( c - t &lt;= <span class=\"number\">1000</span> ) <span class=\"keyword\">and</span> c &gt; t:</span><br><span class=\"line\">    <span class=\"comment\"># (5) 加载解密的JS文件 等同于 http://127.0.0.1:8000/static/Spider/decode.js</span></span><br><span class=\"line\">    BASE_DIR = os.path.dirname(__file__)</span><br><span class=\"line\">    <span class=\"keyword\">with</span> open(os.path.join(BASE_DIR, <span class=\"string\">'..\\..\\static\\Spider\\decode.js'</span>),encoding=<span class=\"string\">'utf-8'</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">      jsdecode=file.read()</span><br><span class=\"line\">    resp = make_response(jsdecode)</span><br><span class=\"line\">    resp.headers[<span class=\"string\">\"Content-type\"</span>]=<span class=\"string\">\"text/javascript;charset=UTF-8\"</span>  <span class=\"comment\"># 正式环境中推荐此种方式开发</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span>:</span><br><span class=\"line\">    resp = make_response(<span class=\"string\">\"alert('请求超时')\"</span>)</span><br><span class=\"line\">    resp.headers[<span class=\"string\">\"Content-type\"</span>]=<span class=\"string\">\"text/javascript;charset=UTF-8\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> resp</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>效果反馈:</p>\n<ul>\n<li>(1) 简单爬取示例 : <a href=\"http://127.0.0.1:8000/get/info\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8000/get/info</a></li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20201028111343.png\" alt=\"WeiyiGeek.Request Spider\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Request Spider</p>\n            </figure>\n<ul>\n<li>(2) 前端网页显示 : <a href=\"http://127.0.0.1:8000/get/info\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8000/get/info</a><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Base64 编码: PCEtLSDms6jmhI/mraTlpITkuI3og73mnInmjaLooYzlkKbliJnpnIDopoHlnKjmqKHmnb/muLLmn5Pov5Tlm57lrZfnrKbkuLLml7blgJnlv4Xpobvov5vooYzmjaLooYznrKbmm7/mjaIgLS0+IDx1bD4gICAgPGxpPiAxIC0g6Zi/6buEMOWPtyA8L2xpPiAgICA8bGk+IDMgLSDpmL/pu4Qy5Y+3IDwvbGk+ICAgIDxsaT4gNSAtIOmYv+m7hDTlj7cgPC9saT4gICAgPGxpPiA3IC0g6Zi/6buENuWPtyA8L2xpPiAgICA8bGk+IDkgLSDpmL/pu4Q45Y+3IDwvbGk+ICA8L3VsPg==</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20201028112613.png\" alt=\"WeiyiGeek.Web Visit\" title=\"\" class=\"\">\n                <p>WeiyiGeek.Web Visit</p>\n            </figure>\n<ul>\n<li>(3) 被包装后js文件(实际上可以加上JS混淆)如果直接访问将会报错即请求与服务器时间超过1秒时不能正常返回js解密代码 ：<a href=\"http://127.0.0.1:8000/get/decode/?t=1603810658000\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:8000/get/decode/?t=1603810658000</a></li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20201028113054.png\" alt=\"WeiyiGeek.封装JS访问\" title=\"\" class=\"\">\n                <p>WeiyiGeek.封装JS访问</p>\n            </figure>\n<p><strong>方式缺陷与对应解决办法:</strong></p>\n<ul>\n<li>(1) 采用浏览器中的网页交互式(Console)控制台获取JS加密的函数从而逆向解密网页内容(<code>建议加上JS混淆有一定程度上的作用</code>);</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2020/2/20201028112653.png\" alt=\"WeiyiGeek.只能说增加一点爬取难度\" title=\"\" class=\"\">\n                <p>WeiyiGeek.只能说增加一点爬取难度</p>\n            </figure>\n<ul>\n<li>(2) 采用 Selenium + ChormeDriver 它是一个用于Web应用程序测试的工具，它可以操控浏览器来爬取网上的数据是爬虫的终极利器;</li>\n<li>(3) 采用 Phantomjs 分析html代码，基于队列的爬虫、数据存储、数据拆分、爬虫限速、网页跟踪，脚本注入等技术。</li>\n</ul>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Development","path":"api/categories/Development.json"},{"name":"Python3","path":"api/categories/Python3.json"}],"tags":[{"name":"Spider","path":"api/tags/Spider.json"},{"name":"Anti-Spider","path":"api/tags/Anti-Spider.json"}]}