{"title":"OpenSSL安全套接字密码库命令","slug":"系统运维/Linux/常用命令/二进制程序类命令/openssl安全套接字密码库","date":"2019-08-20T10:35:30.000Z","updated":"2022-05-20T05:56:29.049Z","url":"2019/8-20-142.html","path":"api/articles/2019/8-20-142.html.json","covers":null,"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h4 id=\"0x00-前言简述\"><a href=\"#0x00-前言简述\" class=\"headerlink\" title=\"0x00 前言简述\"></a>0x00 前言简述</h4><p>OpenSSL命令有两种运行模式交互模式和批处理:</p>\n<ul>\n<li>输入openssl回车进入交互模式</li>\n<li>输入带命令选项的openssl进入批处理模式</li>\n</ul>\n<p>OpenSSL整个软件包大概可以分成三个主要的功能部分:<code>密码算法库、SSL协议库以及应用程序</code>，OpenSSL的目录结构自然也是围绕这三个功能部分进行规划的;</p>\n<p>功能说明:</p>\n<ul>\n<li>处理数字证书:<code>可以用作证书颁发机构(Certificate Authority 即 CA)</code>。</li>\n<li>进行证书、公钥、私钥的管理</li>\n</ul>\n<h4 id=\"0x01-Openssl-命令\"><a href=\"#0x01-Openssl-命令\" class=\"headerlink\" title=\"0x01 Openssl 命令\"></a>0x01 Openssl 命令</h4><h5 id=\"Syntax-amp-Param\"><a href=\"#Syntax-amp-Param\" class=\"headerlink\" title=\"Syntax &amp; Param\"></a>Syntax &amp; Param</h5><p>基础语法:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl [Standard]</span><br></pre></td></tr></table></figure></p>\n<p>基础参数:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Standard commands (标准命令)</span></span><br><span class=\"line\">asn1parse         ca                ciphers           cms</span><br><span class=\"line\">crl               crl2pkcs7         dgst              dh</span><br><span class=\"line\">dhparam(dh加密方式)           dsa               dsaparam(dsa加密方式)          ec</span><br><span class=\"line\">ecparam           enc(加密)               engine            errstr</span><br><span class=\"line\">gendh             gendsa            genpkey           genrsa(生成rsa密匙)</span><br><span class=\"line\">nseq              ocsp              passwd            pkcs12</span><br><span class=\"line\">pkcs7             pkcs8             pkey              pkeyparam</span><br><span class=\"line\">pkeyutl           prime             rand(随机)              req</span><br><span class=\"line\">rsa(密钥生成公钥)  rsautl(公私钥加解密)s_client          s_server</span><br><span class=\"line\">s_time            sess_id           smime             speed</span><br><span class=\"line\">spkac             ts                verify            version</span><br><span class=\"line\">x509(公钥证书的格式标准)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Message Digest commands (消息摘要命令)</span></span><br><span class=\"line\">md2               md4               md5               rmd160</span><br><span class=\"line\">sha               sha1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Cipher commands (Cipher commands)</span></span><br><span class=\"line\">aes-128-cbc       aes-128-ecb       aes-192-cbc       aes-192-ecb</span><br><span class=\"line\">aes-256-cbc       aes-256-ecb       base64            bf</span><br><span class=\"line\">bf-cbc            bf-cfb            bf-ecb            bf-ofb</span><br><span class=\"line\">camellia-128-cbc  camellia-128-ecb  camellia-192-cbc  camellia-192-ecb</span><br><span class=\"line\">camellia-256-cbc  camellia-256-ecb  cast              cast-cbc</span><br><span class=\"line\">cast5-cbc         cast5-cfb         cast5-ecb         cast5-ofb</span><br><span class=\"line\">des               des-cbc           des-cfb           des-ecb</span><br><span class=\"line\">des-ede           des-ede-cbc       des-ede-cfb       des-ede-ofb</span><br><span class=\"line\">des-ede3          des-ede3-cbc      des-ede3-cfb      des-ede3-ofb</span><br><span class=\"line\">des-ofb           des3              desx              idea</span><br><span class=\"line\">idea-cbc          idea-cfb          idea-ecb          idea-ofb</span><br><span class=\"line\">rc2               rc2-40-cbc        rc2-64-cbc        rc2-cbc</span><br><span class=\"line\">rc2-cfb           rc2-ecb           rc2-ofb           rc4</span><br><span class=\"line\">rc4-40            rc5               rc5-cbc           rc5-cfb</span><br><span class=\"line\">rc5-ecb           rc5-ofb           seed              seed-cbc</span><br><span class=\"line\">seed-cfb          seed-ecb          seed-ofb          zlib</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h5 id=\"命令一览\"><a href=\"#命令一览\" class=\"headerlink\" title=\"命令一览\"></a>命令一览</h5><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#实例:文件生成base64字符串</span></span><br><span class=\"line\">openssl base64 -<span class=\"keyword\">in</span> test.txt <span class=\"comment\">#等同于 base64 test.txt</span></span><br><span class=\"line\">N2ZmYjJhZmQ2ODZjZDk5NDdlOTY1ODMyZTY4MGQwYzI0NTY0ZGM4NDlhZmRjZGVhMDQzZmRkZDY1ZDIxN2ZlNwo=</span><br></pre></td></tr></table></figure>\n<p><strong>rand</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#实例1.随机数的生成</span></span><br><span class=\"line\">openssl rand -base64 位数 -out 写出的文件</span><br><span class=\"line\">openssl rand -base64 128</span><br><span class=\"line\">od3xDJVOVKGYfSXHELXI3oVw0hyElUE34tZWsYHrU6yk7Gyr6Z7B8QlZ2zbZBcTCR3DJMr81j1l3SaFYxbO1xhs4ki4iZXPwwpO1gyG4sAnfGC1bDEBYzKw+u/jlSCSBlCoukUa41nvEQ2hE2BGxbQoWeuwO0L3hQk5wwxMHPiE=</span><br></pre></td></tr></table></figure></p>\n<hr>\n<p>req大致有3个功能：生成证书请求文件、验证证书请求文件和创建根CA。</p>\n<h5 id=\"dgst-摘要校验与生成\"><a href=\"#dgst-摘要校验与生成\" class=\"headerlink\" title=\"dgst - 摘要校验与生成\"></a>dgst - 摘要校验与生成</h5><p>描述:它是OpenSSL子命令主要用于文件的摘要信息的验证与生成;<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$openssl</span> dgst -h</span><br><span class=\"line\">options are</span><br><span class=\"line\">-c              to output the digest with separating colons</span><br><span class=\"line\">-r              to output the digest <span class=\"keyword\">in</span> coreutils format</span><br><span class=\"line\">-d              to output debug info</span><br><span class=\"line\">-hex            output as hex dump</span><br><span class=\"line\">-binary         output <span class=\"keyword\">in</span> binary form</span><br><span class=\"line\">-hmac arg       <span class=\"built_in\">set</span> the HMAC key to arg</span><br><span class=\"line\">-non-fips-allow allow use of non FIPS digest</span><br><span class=\"line\">-sign   file    在文件中使用私钥的符号摘要</span><br><span class=\"line\">-verify file    使用文件中的公钥验证签名</span><br><span class=\"line\">-prverify file  使用文件中的私钥验证签名</span><br><span class=\"line\">-keyform arg    关键文件格式(PEM或引擎)</span><br><span class=\"line\">-out filename   输出到文件名而不是标准输出</span><br><span class=\"line\">-signature file 签名验证</span><br><span class=\"line\">-sigopt nm:v    参数验证</span><br><span class=\"line\">-hmac key       create hashed MAC with key</span><br><span class=\"line\">-mac algorithm  create MAC (not neccessarily HMAC)</span><br><span class=\"line\">-macopt nm:v    MAC algorithm parameters or key</span><br><span class=\"line\">-engine e       使用引擎e，可能是硬件设备。</span><br><span class=\"line\"><span class=\"comment\"># 支持的信息摘要算法</span></span><br><span class=\"line\">-md4            to use the md4 message digest algorithm</span><br><span class=\"line\">-md5            to use the md5 message digest algorithm</span><br><span class=\"line\">-ripemd160      to use the ripemd160 message digest algorithm</span><br><span class=\"line\">-sha            to use the sha message digest algorithm</span><br><span class=\"line\">-sha1           to use the sha1 message digest algorithm</span><br><span class=\"line\">-sha224         to use the sha224 message digest algorithm</span><br><span class=\"line\">-sha256         to use the sha256 message digest algorithm</span><br><span class=\"line\">-sha384         to use the sha384 message digest algorithm</span><br><span class=\"line\">-sha512         to use the sha512 message digest algorithm</span><br><span class=\"line\">-whirlpool      to use the whirlpool message digest algorithm</span><br></pre></td></tr></table></figure></p>\n<p>简单示例:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># (1) 用SHA1/MD5算法计算文件file.txt的哈希值输出到stdout;</span></span><br><span class=\"line\">openssl dgst -sha1 file.txt</span><br><span class=\"line\">openssl dgst -md5 file.txt</span><br></pre></td></tr></table></figure></p>\n<p>当在配置ssl_ciphers参数中的套件顺序不一样，浏览器在协商时会优先使用排位靠前的套件，我们可通过执行<code>openssl ciphers</code>命令检查加密套件配置支持的协议信息，以及椭圆曲线的套件（ECDHE）队列情况，此时我们只要调整顺序（前置）就可以加大协商出支持椭圆曲线算法的套件的可能性。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ openssl ciphers -V <span class=\"string\">'ECDHE-RSA-AES128-GCM-SHA256:ECDH:AES:EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:HIGH:!NULL:!aNULL:!eNULL:!EXPORT:!PSK:!ADH:!DES:!MD5:!RC4'</span> | column -t</span><br><span class=\"line\"><span class=\"comment\"># 执行结果</span></span><br><span class=\"line\">0x13,0x02  -  TLS_AES_256_GCM_SHA384          TLSv1.3  Kx=any   Au=any    Enc=AESGCM(256)             Mac=AEAD</span><br><span class=\"line\">0x13,0x03  -  TLS_CHACHA20_POLY1305_SHA256    TLSv1.3  Kx=any   Au=any    Enc=CHACHA20/POLY1305(256)  Mac=AEAD</span><br><span class=\"line\">0x13,0x01  -  TLS_AES_128_GCM_SHA256          TLSv1.3  Kx=any   Au=any    Enc=AESGCM(128)             Mac=AEAD</span><br><span class=\"line\">0xC0,0x2F  -  ECDHE-RSA-AES128-GCM-SHA256     TLSv1.2  Kx=ECDH  Au=RSA    Enc=AESGCM(128)             Mac=AEAD</span><br><span class=\"line\">0xC0,0x2C  -  ECDHE-ECDSA-AES256-GCM-SHA384   TLSv1.2  Kx=ECDH  Au=ECDSA  Enc=AESGCM(256)             Mac=AEAD</span><br><span class=\"line\">0xC0,0x30  -  ECDHE-RSA-AES256-GCM-SHA384     TLSv1.2  Kx=ECDH  Au=RSA    Enc=AESGCM(256)             Mac=AEAD</span><br><span class=\"line\">0xCC,0xA9  -  ECDHE-ECDSA-CHACHA20-POLY1305   TLSv1.2  Kx=ECDH  Au=ECDSA  Enc=CHACHA20/POLY1305(256)  Mac=AEAD</span><br><span class=\"line\">0xCC,0xA8  -  ECDHE-RSA-CHACHA20-POLY1305     TLSv1.2  Kx=ECDH  Au=RSA    Enc=CHACHA20/POLY1305(256)  Mac=AEAD</span><br><span class=\"line\">....</span><br><span class=\"line\">0x00,0xBA  -  CAMELLIA128-SHA256              TLSv1.2  Kx=RSA   Au=RSA    Enc=Camellia(128)           Mac=SHA256</span><br><span class=\"line\">0x00,0x84  -  CAMELLIA256-SHA                 SSLv3    Kx=RSA   Au=RSA    Enc=Camellia(256)           Mac=SHA1</span><br><span class=\"line\">0x00,0x41  -  CAMELLIA128-SHA                 SSLv3    Kx=RSA   Au=RSA    Enc=Camellia(128)           Mac=SHA1</span><br></pre></td></tr></table></figure>\n<p><br/></p>\n<h4 id=\"s-client-客户端证书查询与导出\"><a href=\"#s-client-客户端证书查询与导出\" class=\"headerlink\" title=\"s_client - 客户端证书查询与导出\"></a>s_client - 客户端证书查询与导出</h4><p><strong>语法参数</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 语法示例</span></span><br><span class=\"line\">openssl s_client -showcerts -connect &#123;HOSTNAME&#125;:&#123;PORT&#125; &lt;/dev/null 2&gt;/dev/null</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p><strong>实践案例:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.例如，导出我的博客网站证书的命令,执行命令证书保存在文件 blog.weiyigeek.top.pem 中。</span></span><br><span class=\"line\">openssl s_client -showcerts -connect blog.weiyigeek.top:443 &lt;/dev/null 2&gt;/dev/null | openssl x509 -outform PEM &gt; blog.weiyigeek.top.pem</span><br><span class=\"line\"><span class=\"comment\"># 查看其证书SAN中的HOST</span></span><br><span class=\"line\">openssl x509 --text -<span class=\"keyword\">in</span> blog.weiyigeek.top.pem -noout  | grep <span class=\"string\">\"Subject Alternative Name\"</span> -A 1</span><br><span class=\"line\">  X509v3 Subject Alternative Name:</span><br><span class=\"line\">      DNS:*.weiyigeek.top, DNS:weiyigeek.top</span><br></pre></td></tr></table></figure></p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Linux命令","path":"api/categories/Linux命令.json"}],"tags":[{"name":"加密算法","path":"api/tags/加密算法.json"}]}