{"title":"1.Powershell基础入门介绍与安装升级","slug":"编程世界/Powershell/1.Powershell基础入门介绍与安装升级","date":"2019-11-18T07:36:30.000Z","updated":"2023-01-31T02:29:10.671Z","url":"2019/11-18-323.html","path":"api/articles/2019/11-18-323.html.json","covers":["https://img.weiyigeek.top/2021/1/20210325172122.png","https://img.weiyigeek.top/2021/1/20210325132619.png","https://img.weiyigeek.top/2021/1/20210325133204.png","https://img.weiyigeek.top/2021/1/20210325133703.png"],"content":"<p>[TOC]</p>\n<a id=\"more\"></a>\n<h2 id=\"0x00-PS-基础介绍\"><a href=\"#0x00-PS-基础介绍\" class=\"headerlink\" title=\"0x00 PS 基础介绍\"></a>0x00 PS 基础介绍</h2><p>描述: PowerShell 之父 Jeffrey Snover在加入微软之前是搞Linux的, PowerShell 是构建于 .NET 上基于任务的命令行 shell 和脚本语言,在PowerShell里随处看到Linux Shell的影子如ls, wget, curl 等。但PowerShell绝对不是shell的简单升级。 PowerShell 可帮助系统管理员和高级用户快速自动执行用于管理操作系统（Linux、macOS 和 Windows）和流程的任务, 其实可以看做是C#的简化版本还与PHP语言有相似之处(语法)，与我们可以采用<code>ISE 集成脚本环境</code>进行PS脚本编写;</p>\n<p>Tips : 多年来PowerShell 已有很多版本发布。最初Windows PowerShell 是在 .NET Framework 基础之上构建而成<code>(强大的面向对象的脚本)</code>，仅适用于 Windows 系统。随着.NET FrameWork的开源和跨平台,在最新版本中PowerShell 使用 .NET Core 5.0 作为运行时，此时它可以在 Windows、macOS 和 Linux 平台上运行。</p>\n<p><strong>Q: PowerShell VS Shell?</strong></p>\n<blockquote>\n<p>答: PS脚本语言与Linux上的Shell有一致之处, 虽然现在服务器基本都采用Linux，但是针对于某些数据库安装环境也还必须是Windows或者是在线上的应用无法迁移到Linux，而Windows中的Bat无疑是太旧太老，不如PowerShell功能强大并且支持模块化编程。这也是我为什么脱离了Bat而进入PS坑的原因;</p>\n</blockquote>\n<p><br/></p>\n<p><strong>Powershell特点：</strong></p>\n<ul>\n<li>PowerShell 命令可以从命令行管理计算机(十分方便)。 </li>\n<li>PowerShell Core 支持 Windows、macOS 和 Linux 平台，一般运行在<code>window7-window server 2012及</code>以上自带的个人pc和服务器上使用普遍；</li>\n<li>PowerShell 提供程序可让你<code>访问数据存储（如注册表和证书存储）</code>，与你访问文件系统一样方便。 </li>\n<li>PowerShell 具有丰富的<code>表达式分析器和完全开发的脚本语言</code>。</li>\n<li>PowerShell 旨在消除长期存在的问题和添加新功能，从而改进命令行和脚本环境。</li>\n<li>PowerShell 结合了交互式 shell 和脚本编写环境,可以访问命令行工具(命令系列是可扩展的)、COM 对象和 .NET 类库。 </li>\n<li>PowerShell 基于对象而非文本，所以输出是基于对象的。</li>\n<li>PowerShell 基于.NET Framework 构建它与 C# 编程语言共享一些语法功能和关键字。</li>\n<li>PowerShell 是开放源代码<a href=\"https://github.com/PowerShell/PowerShell#get-powershell\" target=\"_blank\" rel=\"noopener\">项目 Github</a></li>\n</ul>\n<p><br></p>\n<p><strong>设计目标:</strong></p>\n<ul>\n<li>可发现性：管理系统是一项复杂的任务。 具有一致的接口的工具有助于控制固有的复杂性</li>\n<li>一致性 : 管理系统是一项复杂的任务,具有一致的接口的工具有助于控制固有的复杂性</li>\n<li>交互式脚本编写环境: Windows 命令提示符提供了一个可访问命令行工具和基本脚本的交互式 shell, <code>Windows 脚本宿主 (WSH)</code>具有可编写脚本的命令行工具和 COM 自动化对象，但不提供交互式 shell。</li>\n<li>面向对象:PowerShell 基于对象而非文本</li>\n<li>交互式脚本编写环境:Windows 命令提示符提供了一个可访问命令行工具和基本脚本的交互式 shell</li>\n<li>轻松转换到脚本：借助 PowerShell 的命令可发现性，可以从以交互方式键入命令轻松转换为创建和运行脚本</li>\n</ul>\n<p><br></p>\n<p><strong>PowerShell版本:</strong></p>\n<ul>\n<li>Windows PowerShell: 从 Windows 7 SP1 和 Windows Server 2008 R2 SP1 开始，每个 Windows 中默认随附安装有 Windows PowerShell。<ul>\n<li>PS 3.0 : Windows 7 SP1 (预装) / Windows 8默认安装</li>\n<li>PS 4.0 : Windows 8.1</li>\n<li>PS 5.0 : 已被 Windows PowerShell 5.1 取代</li>\n<li>PS 5.1 : Windows 10 /  Windows Server 2016</li>\n<li>6.0 / 7.0 / 7.1 : PowerShell Core:微软为了贴近Linux增加其系统的扩展性，在Windows中内置了Linux系统并且同时开源了PowerShell Core了，利用它我们就可以跨平台进行管理计算机了;</li>\n</ul>\n</li>\n</ul>\n<p>注意: Windows PowerShell 是为 .NET Framework 编写的，而 PowerShell Core 是为 .NET Core 编写的。 可移植模块是同时适用于 Windows PowerShell 和 PowerShell Core 的模块。</p>\n<p><strong>PowerShell 7</strong>: 是专为云、本地和混合环境设计的，它包含增强功能和新功能。</p>\n<ul>\n<li>与 Windows PowerShell 并行安装和运行</li>\n<li>提升了与现有 Windows PowerShell 模块的兼容性</li>\n<li>新语言功能（如三元运算符和 ForEach-Object -Parallel）</li>\n<li>提高了性能</li>\n<li>基于 SSH 的远程处理</li>\n<li>跨平台互操作性</li>\n<li>支持 Docker 容器</li>\n</ul>\n<p><br></p>\n<p><strong>PowerShell系统要求</strong></p>\n<ul>\n<li>操作系统要求: Windows 7 Service Pack 1~Windows Server 2019 (注意区间中的各个PS版本)</li>\n<li>PowerShell Core == .NET Core  (&gt;= 6.x)</li>\n<li>Microsoft .NET Framework 要求 <ul>\n<li>PS 5.1 == .NET Framework 4.5</li>\n<li>PS 5.0 == .NET Framework 4.5</li>\n<li>PS 4.0 == .NET Framework 4.5</li>\n<li>PS 3.0 == .NET Framework 4</li>\n</ul>\n</li>\n<li>Windows Management Framework 4.0</li>\n<li>WS-Management 3.0</li>\n<li>Windows Management Instrumentation 3.0</li>\n<li>公共语言运行时 4.0</li>\n<li>图形用户界面要求</li>\n</ul>\n<p><strong>参考网站:</strong><br>Powershell Core : 新的PowerShell版本:<a href=\"https://aka.ms/pscore6\" target=\"_blank\" rel=\"noopener\">https://aka.ms/pscore6</a><br>Micrisoft PowerShell Docs : <a href=\"https://msdn.microsoft.com/powershell/scripting/setup/windows-powershell-system-requirements\" target=\"_blank\" rel=\"noopener\">https://msdn.microsoft.com/powershell/scripting/setup/windows-powershell-system-requirements</a><br>PowerShell 中文文档: <a href=\"https://docs.microsoft.com/zh-cn/powershell/\" target=\"_blank\" rel=\"noopener\">https://docs.microsoft.com/zh-cn/powershell/</a><br>PowerShell 在线教程: <a href=\"https://www.pstips.net/powershell-online-tutorials\" target=\"_blank\" rel=\"noopener\">https://www.pstips.net/powershell-online-tutorials</a></p>\n<hr>\n<h2 id=\"0x01-PS-生命周期\"><a href=\"#0x01-PS-生命周期\" class=\"headerlink\" title=\"0x01 PS 生命周期\"></a>0x01 PS 生命周期</h2><p>描述: PowerShell 是独特的工具和组件集，该集从 Windows PowerShell 单独传输、安装和配置。</p>\n<p>PowerShell 7 生命周期说明: 发布 PowerShell 7 后，PowerShell 继续受 Microsoft 新式生命周期策略支持，但支持日期链接到 .NET Core 的支持生命周期。 在此服务方法中，客户可以选择长期支持 (LTS) 版本或当前版本。</p>\n<p>Tips : 必须安装最新的修补程序更新才能获得支持。 例如如果你运行的是 PowerShell 7.0，并且已发布 7.0.1，则必须更新到 7.0.1 才能获得支持。</p>\n<p><strong>PowerShell 历史版本:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">版本\t发布日期\t注意</span><br><span class=\"line\">PowerShell 7.1（当前版本）\t2020 年 11 月\t基于 .NET Core 5.0（当前版本）生成。</span><br><span class=\"line\">PowerShell 7.0 (LTS)\t2020 年 3 月\t基于 .NET Core 3.1 (LTS) 生成。</span><br><span class=\"line\">PowerShell 6.2\t2019 年 3 月\t</span><br><span class=\"line\">PowerShell 6.1\t2018 年 9 月\t基于 .NET Core 2.1 生成。</span><br><span class=\"line\">PowerShell 6.0\t2018 年 1 月\t第一版，基于 .NET Core 2.0 生成。 可在 Windows、Linux 和 macOS 上安装。</span><br><span class=\"line\">PowerShell 5.1\t2016 年 8 月\t在 Windows 10 周年更新和 Windows Server 2016 中发布。</span><br><span class=\"line\">PowerShell 5.0\t2016 年 2 月\t在 Windows Management Framework (WMF) 5.0 中发布。</span><br><span class=\"line\">PowerShell 4.0\t2013 年 10 月\t在 Windows 8.1 中与 Windows Server 2012 R2 集成。 可在 Windows 7 SP1、Windows Server 2008 R2 SP1 和 Windows Server 2012 上安装。</span><br><span class=\"line\">PowerShell 3.0\t2012 年 10 月\t在 Windows 8 中与 Windows Server 2012 集成。 可在 Windows 7 SP1、Windows Server 2008 SP1 和 Windows Server 2008 R2 SP1 上安装。</span><br><span class=\"line\">PowerShell 2.0\t2009 年 7 月\t在 Windows 7 中与 Windows Server 2008 R2 集成。 可在 Windows XP SP3、Windows Server 2003 SP2 和 Windows Vista SP1 上安装。</span><br><span class=\"line\">PowerShell 1.0\t2006 年 11 月\t可在 Windows XP SP2、Windows Server 2003 SP1 和 Windows Vista 上安装。 Windows Server 2008 的可选组件。</span><br></pre></td></tr></table></figure></p>\n<p><br/></p>\n<p><strong>PowerShell支持7.0与7.1版本:</strong><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">平台\t7.0\t7.1</span><br><span class=\"line\">Windows 8.1 和 10\t支持\t支持</span><br><span class=\"line\">Windows Server 2012 R2、2016、2019\t支持\t支持</span><br><span class=\"line\">Windows Server 半年频道\t支持\t支持</span><br><span class=\"line\">Ubuntu 16.04、18.04\t支持\t支持</span><br><span class=\"line\">Ubuntu 20.04\t不支持\t支持</span><br><span class=\"line\">Ubuntu 19.10、20.10（通过 Snap 包）\t社区\t支持</span><br><span class=\"line\">Debian 9\t支持\t支持</span><br><span class=\"line\">Debian 10\t支持\t支持</span><br><span class=\"line\">CentOS 7\t支持\t支持</span><br><span class=\"line\">CentOS 8\t支持\t支持</span><br><span class=\"line\">Red Hat Enterprise Linux 7\t支持\t支持</span><br><span class=\"line\">Red Hat Enterprise Linux 8\t支持\t支持</span><br><span class=\"line\">Fedora 31+\t支持\t不支持</span><br><span class=\"line\">Alpine 3.10\t查看注释 1\t不支持</span><br><span class=\"line\">Alpine 3.11+\t查看注释 1\t查看注释 1</span><br><span class=\"line\">macOS 10.13+\t支持\t支持</span><br><span class=\"line\">Arch\t社区\t社区</span><br><span class=\"line\">Raspbian\t社区\t社区</span><br><span class=\"line\">Kali\t社区\t社区</span><br><span class=\"line\">AppImage（可在多个 Linux 平台上运行）\t社区\t社区</span><br><span class=\"line\">Snap 包\t查看注释 2\t查看注释</span><br></pre></td></tr></table></figure></p>\n<p>Tips: 备注</p>\n<ul>\n<li>1 - Alpine 不支持 CIM、PowerShell 远程处理和 DSC。</li>\n<li>2 - Snap 包与正在运行此包的发行版受到相同的支持。</li>\n</ul>\n<p><strong>安全服务标准</strong><br>描述: PowerShell 遵守 Microsoft 的 Windows 安全服务标准。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">功能\t类型</span><br><span class=\"line\">执行策略\t深层防御</span><br><span class=\"line\">系统锁定 - 通过 AppLocker\t深层防御</span><br><span class=\"line\">受约束的语言模式 - 通过 AppLocker\t深层防御</span><br><span class=\"line\">系统锁定 - 通过 WDAC\t安全功能</span><br><span class=\"line\">受约束的语言模式 - 通过 WDAC\t安全功能</span><br></pre></td></tr></table></figure></p>\n<p><a href=\"https://docs.microsoft.com/zh-cn/powershell/scripting/powershell-support-lifecycle\" target=\"_blank\" rel=\"noopener\">Reference: PowerShell 支持生命周期参考</a></p>\n<hr>\n<h2 id=\"0x03-PS-基础安装\"><a href=\"#0x03-PS-基础安装\" class=\"headerlink\" title=\"0x03 PS 基础安装\"></a>0x03 PS 基础安装</h2><p>PowerShell 是 GitHub 上的开放源代码项目(<a href=\"https://github.com/PowerShell/PowerShell/)，其可以安装在多个操作系统平台之上\" target=\"_blank\" rel=\"noopener\">https://github.com/PowerShell/PowerShell/)，其可以安装在多个操作系统平台之上</a>:</p>\n<ul>\n<li>在 Windows 上安装 PowerShell</li>\n<li>在 Linux 上安装 PowerShell</li>\n<li>在 macOS 上安装 PowerShell</li>\n<li>在 ARM 上安装 PowerShell</li>\n</ul>\n<p><br></p>\n<h3 id=\"Windows-安装方式\"><a href=\"#Windows-安装方式\" class=\"headerlink\" title=\"Windows 安装方式\"></a>Windows 安装方式</h3><p>描述: 若要在 Windows 上安装 PowerShell，请从 GitHub 下载<a href=\"https://github.com/PowerShell/PowerShell/releases\" target=\"_blank\" rel=\"noopener\">最新</a>安装包：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PowerShell-7.1.3-win-x64.msi</span><br><span class=\"line\">PowerShell-7.1.3-win-x64.zip</span><br><span class=\"line\">PowerShell-7.1.3-win-x86.msi</span><br><span class=\"line\">PowerShell-7.1.3-win-x86.zip</span><br></pre></td></tr></table></figure></p>\n<p><strong>在安装过程中创建注册表项:</strong><br>描述: 从 PowerShell 7.1 开始，MSI 包将创建用于存储 PowerShell 安装位置和版本的注册表项。 这些值位于 HKLM\\Software\\Microsoft\\PowerShellCore\\InstalledVersions\\<GUID> 中。 每种内部版本类型（发行版或预览版）、主要版本和体系结构的 <GUID> 的值都是唯一的。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">发布\t体系结构\t注册表项</span><br><span class=\"line\">7.1.x 版本\tx86\tHKLM\\Software\\Microsoft\\PowerShellCore\\InstalledVersions\\1d00683b-0f84-4db8-a64f-2f98ad42fe06</span><br><span class=\"line\">7.1.x 版本\tX64\tHKLM\\Software\\Microsoft\\PowerShellCore\\InstalledVersions\\31ab5147-9a97-4452-8443-d9709f0516e1</span><br><span class=\"line\">7.1.x 预览版\tx86\tHKLM\\Software\\Microsoft\\PowerShellCore\\InstalledVersions\\86abcfbd-1ccc-4a88-b8b2-0facfde29094</span><br><span class=\"line\">7.1.x 预览版\tX64\tHKLM\\Software\\Microsoft\\PowerShellCore\\InstalledVersions\\39243d76-adaf-42b1-94fb-16ecf83237c8</span><br></pre></td></tr></table></figure></p>\n<p>Tips : 管理员和开发人员可以使用此值查找 PowerShell 的路径。 所有预览版本和次要版本的 <GUID> 值都是相同的。 每个主要版本的 <GUID> 值都有所变化。</p>\n<p><br></p>\n<p><strong>安装方式:</strong></p>\n<ul>\n<li><p>安装 MSI 包 : 下载后双击安装程序并按照提示进行操作。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.安装程序在 Windows“开始”菜单中创建一个快捷方式。</span><br><span class=\"line\">  <span class=\"comment\"># 默认情况下，包安装位置为 $env:ProgramFiles\\PowerShell\\&lt;version&gt;</span></span><br><span class=\"line\">  <span class=\"comment\"># 可以通过“开始”菜单或 $env:ProgramFiles\\PowerShell\\&lt;version&gt;\\pwsh.exe 启动 PowerShell</span></span><br><span class=\"line\">2.PowerShell 7.1 安装到新目录，并与 Windows PowerShell 5.1 并行运行。 </span><br><span class=\"line\">  <span class=\"comment\"># PowerShell 7.1 是就地升级，升级后会替换 PowerShell 6.x 或 PowerShell 7.0。</span></span><br><span class=\"line\">  <span class=\"comment\"># 如果需要与其他版本并行运行 PowerShell 7.1，请使用 ZIP 安装方法将其他版本安装到其他文件夹。</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装 ZIP 包 : 提供有 PowerShell 二进制 ZIP 存档，从而支持高级部署方案, Tips 与安装 MSI 包不一样，安装 ZIP 存档不会检查先决条件(所以你需要检测自己是否满足先决条件)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">你可以使用此方法安装任何版本的 PowerShell，包括最新版本：</span><br><span class=\"line\">  <span class=\"comment\"># 稳定版：https://aka.ms/powershell-release?tag=stable</span></span><br><span class=\"line\">  <span class=\"comment\"># 预览版：https://aka.ms/powershell-release?tag=preview</span></span><br><span class=\"line\">  <span class=\"comment\"># LTS 版本：https://aka.ms/powershell-release?tag=lts</span></span><br><span class=\"line\"></span><br><span class=\"line\">按版本列出的安装位置：</span><br><span class=\"line\">  <span class=\"comment\"># Windows PowerShell 5.1：$env:WINDIR\\System32\\WindowsPowerShell\\v1.0</span></span><br><span class=\"line\">  <span class=\"comment\"># PowerShell Core 6.x：$env:ProgramFiles\\PowerShell\\6</span></span><br><span class=\"line\">  <span class=\"comment\"># PowerShell 7：$env:ProgramFiles\\PowerShell\\7</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在 Nano Server 上进行部署: 若要将 PowerShell 部署到 Nano Server，请按照以下步骤操作。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.连接到 Windows PowerShell 的内置实例</span></span><br><span class=\"line\"><span class=\"variable\">$session</span> = New-PSSession -ComputerName &lt;Nano Server IP address&gt; -Credential &lt;An Administrator account on the system&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.将文件复制到 Nano Server 实例</span></span><br><span class=\"line\">Copy-Item &lt;<span class=\"built_in\">local</span> PS Core download location&gt;\\powershell-&lt;version&gt;-win-x64.zip c:\\ -ToSession <span class=\"variable\">$session</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 3.输入会话</span></span><br><span class=\"line\">Enter-PSSession <span class=\"variable\">$session</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 4.提取 ZIP 文件</span></span><br><span class=\"line\"><span class=\"comment\"># Insert the appropriate version.</span></span><br><span class=\"line\">Expand-Archive -Path C:\\powershell-&lt;version&gt;-win-x64.zip -DestinationPath <span class=\"string\">\"C:\\PowerShell_&lt;version&gt;\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如果需要基于 WSMan 的远程处理，请按照说明使用[“另一种实例技术”][]创建远程处理终结点。</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>通过 Winget 安装 PowerShell : 通过 winget 命令行工具，开发人员可以在 Windows 10 计算机上查找、安装、升级、删除和配置应用程序。 此工具是 Windows 程序包管理器服务的客户端接口(目前 winget 是预览功能 - 2021年3月25日 09:44:23)。</p>\n</li>\n<li><p>从 Microsoft Store 安装</p>\n</li>\n</ul>\n<p><br/></p>\n<p>Tips : 如何创建远程处理终结点?<br>PowerShell 同时支持采用 WSMan 和 SSH 的 PowerShell 远程处理协议 (PSRP)</p>\n<blockquote>\n<p><a href=\"https://docs.microsoft.com/zh-cn/powershell/scripting/learn/remoting/ssh-remoting-in-powershell-core?view=powershell-7.1\" target=\"_blank\" rel=\"noopener\">在 PowerShell Core 中进行 SSH 远程处理</a><br><a href=\"https://docs.microsoft.com/zh-cn/powershell/scripting/learn/remoting/wsman-remoting-in-powershell-core?view=powershell-7.1\" target=\"_blank\" rel=\"noopener\">在 PowerShell Core 中进行 WSMan 远程处理</a></p>\n</blockquote>\n<p><a href=\"https://docs.microsoft.com/zh-cn/powershell/scripting/install/installing-powershell\" target=\"_blank\" rel=\"noopener\">Reference: 安装各种版本的 PowerShell</a></p>\n<p><br></p>\n<h3 id=\"Linux-安装方式\"><a href=\"#Linux-安装方式\" class=\"headerlink\" title=\"Linux 安装方式\"></a>Linux 安装方式</h3><p>描述: GitHub 版本页面上提供有所有可用包,安装包以后从终端运行 pwsh 如果是预览版则是pwsh-preview。。</p>\n<p>Tips ： PowerShell 7 是就地升级，升级后会删除 PowerShell Core 6.x。</p>\n<ul>\n<li><code>/usr/local/microsoft/powershell/6</code> 文件夹被替换为 <code>/usr/local/microsoft/powershell/7</code>。</li>\n<li>如果需要与 PowerShell 7 并行运行 PowerShell 6，请使用二进制存档方法重新安装 PowerShell 6。</li>\n</ul>\n<p>Tips ：对于未获得官方支持的 Linux 分发，可尝试使用 PowerShell Snap 包安装 PowerShell。 还可尝试直接使用 Linux tar.gz存档 部署 PowerShell 二进制文件，但是需要在各个步骤中基于 OS 设置必要的依赖项。</p>\n<p><strong>安装方式:</strong></p>\n<ul>\n<li>1.主流:<ul>\n<li>官方支持的版本(通过包存储库安装/通过直接下载进行安装)</li>\n<li>社区支持的版本</li>\n</ul>\n</li>\n<li>2.备选:<ul>\n<li>Snap 包</li>\n<li>二进制存档</li>\n<li>.NET 全局工具</li>\n</ul>\n</li>\n</ul>\n<p><strong>Ubuntu 20.04</strong></p>\n<ul>\n<li>1.通过包存储库安装 - Ubuntu 20.04<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Update the list of packages</span></span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\"><span class=\"comment\"># Install pre-requisite packages.</span></span><br><span class=\"line\">sudo apt-get install -y wget apt-transport-https software-properties-common</span><br><span class=\"line\"><span class=\"comment\"># Download the Microsoft repository GPG keys</span></span><br><span class=\"line\">wget -q https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb</span><br><span class=\"line\"><span class=\"comment\"># Register the Microsoft repository GPG keys</span></span><br><span class=\"line\">sudo dpkg -i packages-microsoft-prod.deb</span><br><span class=\"line\"><span class=\"comment\"># Update the list of products</span></span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\"><span class=\"comment\"># Enable the \"universe\" repositories</span></span><br><span class=\"line\">sudo add-apt-repository universe</span><br><span class=\"line\"><span class=\"comment\"># Install PowerShell</span></span><br><span class=\"line\">sudo apt-get install -y powershell</span><br><span class=\"line\"><span class=\"comment\"># Start PowerShell</span></span><br><span class=\"line\">pwsh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 验证安装得PowerShell </span></span><br><span class=\"line\">PS /home/weiyigeek/&gt; <span class=\"variable\">$PSVersionTable</span></span><br><span class=\"line\">  <span class=\"comment\"># Name                           Value</span></span><br><span class=\"line\">  <span class=\"comment\"># ----                           -----</span></span><br><span class=\"line\">  <span class=\"comment\"># PSVersion                      7.1.3</span></span><br><span class=\"line\">  <span class=\"comment\"># PSEdition                      Core</span></span><br><span class=\"line\">  <span class=\"comment\"># GitCommitId                    7.1.3</span></span><br><span class=\"line\">  <span class=\"comment\"># OS                             Linux 5.8.0-38-generic #43~20.04.1-Ubuntu SMP Tue Jan 12 16:39:47 U\\u2026</span></span><br><span class=\"line\">  <span class=\"comment\"># Platform                       Unix</span></span><br><span class=\"line\">  <span class=\"comment\"># PSCompatibleVersions           &#123;1.0, 2.0, 3.0, 4.0\\u2026&#125;</span></span><br><span class=\"line\">  <span class=\"comment\"># PSRemotingProtocolVersion      2.3</span></span><br><span class=\"line\">  <span class=\"comment\"># SerializationVersion           1.1.0.1</span></span><br><span class=\"line\">  <span class=\"comment\"># WSManStackVersion              3.0</span></span><br><span class=\"line\"></span><br><span class=\"line\">weiyigeek@Ubuntu-PC:~/</span><br><span class=\"line\">&gt; dpkg --list | grep <span class=\"string\">\"powershell\"</span></span><br><span class=\"line\">ii  powershell  7.1.3-1.ubuntu.20.04 amd64  PowerShell is an automation and configuration management platform.</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/1/20210325172122.png\" alt=\"WeiyiGeek.PowerShell-ubuntu\" title=\"\" class=\"\">\n                <p>WeiyiGeek.PowerShell-ubuntu</p>\n            </figure>\n<ul>\n<li>2.通过将 Debian 包 powershell_7.1.3-1.ubuntu.20.04_amd64.deb 下载到 Ubuntu 计算机。<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dpkg -i powershell_7.1.3-1.ubuntu.20.04_amd64.deb</span><br><span class=\"line\"><span class=\"comment\"># dpkg -i 命令失败，未满足依赖项。 下一命令 apt-get install -f 解决此类问题，然后完成 PowerShell 包配置。</span></span><br><span class=\"line\">sudo apt-get install -f</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>Tips : 卸载 - Ubuntu 20.04 <code>sudo apt-get remove powershell</code></p>\n<p><br></p>\n<p><strong>Red Hat Enterprise Linux (RHEL) 7</strong><br>描述: 为简化安装和更新，已将适用于 Linux 的 PowerShell 发布到正式的 Microsoft 存储库()。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 方式1.以超级用户身份注册 Microsoft 存储库一次。 注册后，可以通过 sudo yum update powershell 更新 PowerShell。</span></span><br><span class=\"line\"><span class=\"comment\"># Register the Microsoft RedHat repository</span></span><br><span class=\"line\">curl https://packages.microsoft.com/config/rhel/7/prod.repo | sudo tee /etc/yum.repos.d/microsoft.repo</span><br><span class=\"line\"><span class=\"comment\"># Install PowerShell</span></span><br><span class=\"line\">sudo yum install -y powershell</span><br><span class=\"line\"><span class=\"comment\"># Start PowerShell</span></span><br><span class=\"line\">pwsh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 方式2.将 RPM 包 powershell-7.1.3-1.rhel.7.x86_64.rpm 下载到 Red Hat Enterprise Linux 计算机</span></span><br><span class=\"line\">sudo yum install powershell-7.1.3-1.rhel.7.x86_64.rpm</span><br><span class=\"line\"><span class=\"comment\"># 无需该中间下载步骤即可安装 RPM </span></span><br><span class=\"line\">sudo yum install https://github.com/PowerShell/PowerShell/releases/download/v7.1.3/powershell-7.1.3-1.rhel.7.x86_64.rpm</span><br></pre></td></tr></table></figure>\n<p>Tips : 卸载 - Red Hat Enterprise Linux (RHEL) 7 <code>sudo yum remove powershell</code></p>\n<p><br></p>\n<p><strong>Kali</strong><br>Kali 支持不受 Microsoft 的官方支持且由社区维护。<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.安装 - Kali</span></span><br><span class=\"line\"><span class=\"comment\"># Install PowerShell package</span></span><br><span class=\"line\">apt update &amp;&amp; apt -y install powershell</span><br><span class=\"line\"><span class=\"comment\"># Start PowerShell</span></span><br><span class=\"line\">pwsh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.卸载 - Kali</span></span><br><span class=\"line\"><span class=\"comment\"># Uninstall PowerShell package</span></span><br><span class=\"line\">apt -y remove powershell</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<p><strong>Debian 10</strong><br>描述: Debian 10 仅在 PowerShell 7.0 以及更新版本中受到支持。</p>\n<ul>\n<li><p>1.通过包存储库安装 - Debian 10</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Download the Microsoft repository GPG keys</span></span><br><span class=\"line\">wget https://packages.microsoft.com/config/debian/10/packages-microsoft-prod.deb</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Register the Microsoft repository GPG keys</span></span><br><span class=\"line\">sudo dpkg -i packages-microsoft-prod.deb</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Update the list of products</span></span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Install PowerShell</span></span><br><span class=\"line\">sudo apt-get install -y powershell</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Start PowerShell</span></span><br><span class=\"line\">pwsh</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>2.将 tar.gz 包 powershell-7.1.3-linux-x64.tar.gz 下载到 Debian 计算机。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br><span class=\"line\"><span class=\"comment\"># install the requirements</span></span><br><span class=\"line\">sudo apt-get install -y \\</span><br><span class=\"line\">        less \\</span><br><span class=\"line\">        locales \\</span><br><span class=\"line\">        ca-certificates \\</span><br><span class=\"line\">        libicu63 \\</span><br><span class=\"line\">        libssl1.1 \\</span><br><span class=\"line\">        libc6 \\</span><br><span class=\"line\">        libgcc1 \\</span><br><span class=\"line\">        libgssapi-krb5-2 \\</span><br><span class=\"line\">        liblttng-ust0 \\</span><br><span class=\"line\">        libstdc++6 \\</span><br><span class=\"line\">        zlib1g \\</span><br><span class=\"line\">        curl</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Download the powershell '.tar.gz' archive</span></span><br><span class=\"line\">curl -L  https://github.com/PowerShell/PowerShell/releases/download/v7.1.3/powershell-7.1.3-linux-x64.tar.gz -o /tmp/powershell.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Create the target folder where powershell will be placed</span></span><br><span class=\"line\">sudo mkdir -p /opt/microsoft/powershell/7</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Expand powershell to the target folder</span></span><br><span class=\"line\">sudo tar zxf /tmp/powershell.tar.gz -C /opt/microsoft/powershell/7</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Set execute permissions</span></span><br><span class=\"line\">sudo chmod +x /opt/microsoft/powershell/7/pwsh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Create the symbolic link that points to pwsh</span></span><br><span class=\"line\">sudo ln -s /opt/microsoft/powershell/7/pwsh /usr/bin/pwsh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Start PowerShell</span></span><br><span class=\"line\">pwsh</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><br></p>\n<h3 id=\"Docker-容器安装方式\"><a href=\"#Docker-容器安装方式\" class=\"headerlink\" title=\"Docker 容器安装方式\"></a>Docker 容器安装方式</h3><p>描述： 已发布的映像需要 Docker 17.05 或更高版本。 还应在没有 sudo 或本地管理权限的情况下能够运行 Docker。</p>\n<p>PowerShell 官方容器: hub.docker.com/r/microsoft/powershell</p>\n<p>Windows Docker 文件和映像许可证:</p>\n<ul>\n<li>Window Server Core</li>\n<li>Nano Server</li>\n</ul>\n<p>1.在容器中使用 PowerShell<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -it mcr.microsoft.com/powershell</span><br></pre></td></tr></table></figure></p>\n<p>2.在不再需要映像时将其删除<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rmi mcr.microsoft.com/powershell</span><br></pre></td></tr></table></figure></p>\n<p><br></p>\n<h3 id=\"从-Windows-PowerShell-5-1-迁移到-PowerShell-7\"><a href=\"#从-Windows-PowerShell-5-1-迁移到-PowerShell-7\" class=\"headerlink\" title=\"从 Windows PowerShell 5.1 迁移到 PowerShell 7\"></a>从 Windows PowerShell 5.1 迁移到 PowerShell 7</h3><p>描述: 当前Windows10以及Server2019默认的PS版本为5.1为了使用能尝试使用PS 7我们需要进行如下步骤迁移。</p>\n<p>Tips : PowerShell 7 与 Windows PowerShell 并行运行，可便于你在部署前轻松地测试和比较各个版本。 迁移简单、快捷、安全，</p>\n<p><strong>以下 Windows 操作系统支持 PowerShell 7：</strong></p>\n<ul>\n<li>Windows 8.1 和 10</li>\n<li>Windows Server 2012、2012 R2、2016 和 2019</li>\n</ul>\n<p>此处以并行使用PowerShell 7 与 Windows PowerShell 5.1 为例进行配置</p>\n<ul>\n<li>下功能可确保你的 PowerShell 投资受到保护，并能轻松迁移到 PowerShell 7。</li>\n<li>独立的安装路径和可执行文件名</li>\n<li>独立的 PSModulePath</li>\n<li>每个版本的独立配置文件</li>\n<li>提升了模块兼容性</li>\n<li>新增了远程处理终结点</li>\n<li>组策略支持</li>\n<li>独立的事件日志</li>\n</ul>\n<p><strong>操作步骤:</strong></p>\n<ul>\n<li>Step 1.独立的安装路径和可执行文件名<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 按版本列出的安装位置：</span></span><br><span class=\"line\">Windows PowerShell 5.1：<span class=\"variable\">$env</span>:WINDIR\\System32\\WindowsPowerShell\\v1.0</span><br><span class=\"line\">PowerShell Core 6.x：<span class=\"variable\">$env</span>:ProgramFiles\\PowerShell\\6</span><br><span class=\"line\">PowerShell 7：<span class=\"variable\">$env</span>:ProgramFiles\\PowerShell\\7</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>Tips : 新位置会添加到 PATH 中，这样就能同时运行 Windows PowerShell 5.1 和 PowerShell 7 了</p>\n<p>Tips : 在 Windows PowerShell 中，PowerShell 可执行文件名为 powershell.exe。 在版本 6 及更高版本中，可执行文件名为 pwsh.exe</p>\n<ul>\n<li><p>Step 2.独立的 PSModulePath: 默认情况下Windows PowerShell 和 PowerShell 7 将模块存储在不同的位置。 PowerShell 7 将这些位置合并到 <code>$Env:PSModulePath</code> 环境变量中。 当按名称导入模块时PowerShell 检查由 <code>$Env:PSModulePath</code> 指定的位置, 这样 PowerShell 7 就可以<code>同时加载核心模块</code>和<code>桌面模块</code>了。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.安装范围\tWindows PowerShell 5.1\tPowerShell 7.0</span></span><br><span class=\"line\">PowerShell 模块\t<span class=\"variable\">$env</span>:WINDIR\\system32\\WindowsPowerShell\\v1.0\\Modules\t<span class=\"variable\">$PSHOME</span>\\Modules</span><br><span class=\"line\"></span><br><span class=\"line\">用户已安装</span><br><span class=\"line\">AllUsers 范围\t<span class=\"variable\">$env</span>:ProgramFiles\\WindowsPowerShell\\Modules\t<span class=\"variable\">$env</span>:ProgramFiles\\PowerShell\\Modules</span><br><span class=\"line\"></span><br><span class=\"line\">用户已安装</span><br><span class=\"line\">CurrentUser 范围\t<span class=\"variable\">$HOME</span>\\Documents\\WindowsPowerShell\\Modules\t<span class=\"variable\">$HOME</span>\\Documents\\PowerShell\\Modules</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.示例展示了每个版本的 $Env:PSModulePath 默认值</span></span><br><span class=\"line\">PS C:\\Program Files\\PowerShell\\&gt; <span class=\"variable\">$Env</span>:PSModulePath -split (<span class=\"string\">';'</span>)</span><br><span class=\"line\">C:\\Users\\WeiyiGeek\\Documents\\WindowsPowerShell\\Modules</span><br><span class=\"line\">C:\\Program Files\\WindowsPowerShell\\Modules</span><br><span class=\"line\">C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 3.独立的配置文件: PowerShell 配置文件是在 PowerShell 启动时执行的脚本。 此脚本通过添加命令、别名、函数、变量、模块和 PowerShell 驱动器来自定义环境。 配置文件脚本让这些自定义对每个会话都可用，而不必手动重新创建它们。</p>\n</li>\n</ul>\n<p>在 PowerShell 7 中，配置文件的位置路径发生了更改。</p>\n<ul>\n<li>在 Windows PowerShell 5.1 中，配置文件的位置为 $HOME\\Documents\\WindowsPowerShell。</li>\n<li>在 PowerShell 7 中，配置文件的位置为 $HOME\\Documents\\PowerShell。</li>\n</ul>\n<p>配置文件的文件名也发生了更改：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS&gt; <span class=\"variable\">$PROFILE</span> | Select-Object *Host* | Format-List</span><br><span class=\"line\">AllUsersAllHosts       : C:\\Program Files\\PowerShell\\7\\profile.ps1</span><br><span class=\"line\">AllUsersCurrentHost    : C:\\Program Files\\PowerShell\\7\\Microsoft.PowerShell_profile.ps1</span><br><span class=\"line\">CurrentUserAllHosts    : C:\\Users\\&lt;user&gt;\\Documents\\PowerShell\\profile.ps1</span><br><span class=\"line\">CurrentUserCurrentHost : C:\\Users\\&lt;user&gt;\\Documents\\PowerShell\\Microsoft.PowerShell_profile.ps1</span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>Step 4.实践 PowerShell 7 环境安装配置与PS 5.1并行运行</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1) 创建PS 7 家目录</span></span><br><span class=\"line\">mkdir <span class=\"variable\">$env</span>:ProgramFiles\\PowerShell\\7 </span><br><span class=\"line\"><span class=\"comment\"># 2) 解压PS 7 到家目录</span></span><br><span class=\"line\">Expand-Archive  .\\PowerShell-7.1.3-win-x64.zip -DestinationPath <span class=\"variable\">$env</span>:ProgramFiles\\PowerShell\\7</span><br><span class=\"line\"><span class=\"comment\"># 3) 设置环境变量</span></span><br><span class=\"line\"><span class=\"variable\">$systempath</span> = [System.Environment]::GetEnvironmentVariable(<span class=\"string\">\"PATH\"</span>,<span class=\"string\">\"Machine\"</span>)</span><br><span class=\"line\"><span class=\"variable\">$systempath</span> =  <span class=\"string\">\"C:\\Program Files\\PowerShell\\7\"</span>+ <span class=\"string\">\";\"</span> + <span class=\"variable\">$systempath</span> </span><br><span class=\"line\">[System.Environment]::setEnvironmentVariable(<span class=\"string\">\"PATH\"</span>,<span class=\"variable\">$systempath</span>,<span class=\"string\">\"Machine\"</span>)</span><br><span class=\"line\"><span class=\"comment\"># 4.打开PS执行pwsh.exe进入PS7的版本</span></span><br><span class=\"line\">PS C:\\Windows\\system32&gt; pwsh.exe</span><br><span class=\"line\">PS C:\\Windows\\System32&gt; <span class=\"variable\">$PSVersionTable</span>.PSVersion</span><br><span class=\"line\">  <span class=\"comment\"># Major  Minor  Patch  PreReleaseLabel BuildLabel</span></span><br><span class=\"line\">  <span class=\"comment\"># -----  -----  -----  --------------- ----------</span></span><br><span class=\"line\">  <span class=\"comment\"># 7      1      3</span></span><br><span class=\"line\">PS C:\\Windows\\System32&gt; <span class=\"variable\">$ENV</span>:PSModulePath -split <span class=\"string\">\";\"</span></span><br><span class=\"line\">  <span class=\"comment\"># C:\\Users\\WeiyiGeek\\Documents\\PowerShell\\Modules</span></span><br><span class=\"line\">  <span class=\"comment\"># C:\\Program Files\\PowerShell\\Modules</span></span><br><span class=\"line\">  <span class=\"comment\"># c:\\program files\\powershell\\7\\Modules  # 可以看见模块已经添加</span></span><br><span class=\"line\">  <span class=\"comment\"># C:\\Users\\WeiyiGeek\\Documents\\WindowsPowerShell\\Modules</span></span><br><span class=\"line\">  <span class=\"comment\"># C:\\Program Files\\WindowsPowerShell\\Modules</span></span><br><span class=\"line\">  <span class=\"comment\"># C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules</span></span><br><span class=\"line\"><span class=\"comment\"># 5.PS特性可以直接使用ssh命令</span></span><br><span class=\"line\">PS C:\\Windows\\System32&gt; ssh -p 20211 weiyigeek@10.20.172.108</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>Step 5.PowerShell 包含组策略设置，有助于为企业环境中的服务器定义一致的选项值</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1.设置包括：</span></span><br><span class=\"line\">  * 控制台会话配置：设置运行 PowerShell 的配置终结点。</span><br><span class=\"line\">  * 启用模块日志记录：设置模块的 LogPipelineExecutionDetails 属性。</span><br><span class=\"line\">  * 启用 Power Shell 脚本块日志记录：启用所有 PowerShell 脚本的详细日志记录。</span><br><span class=\"line\">  * 启用脚本执行：设置 PowerShell 执行策略。</span><br><span class=\"line\">  * 启用 PowerShell 脚本：可便于将 PowerShell 命令输入和输出捕获到基于文本的脚本中。</span><br><span class=\"line\">  * 设置 Update-Help 的默认源路径：将“可更新的帮助”的源设置为目录，而不是 Internet。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 2.PowerShell 7 在 $PSHOME 中添加组策略模板和安装脚本。</span></span><br><span class=\"line\">Get-ChildItem -Path <span class=\"variable\">$PSHOME</span> -Filter *Core*Policy*</span><br><span class=\"line\">  <span class=\"comment\"># Directory: C:\\Program Files\\PowerShell\\7</span></span><br><span class=\"line\">  <span class=\"comment\"># Mode                 LastWriteTime         Length Name</span></span><br><span class=\"line\">  <span class=\"comment\"># ----                 -------------         ------ ----</span></span><br><span class=\"line\">  <span class=\"comment\"># -a---           2021/3/10     1:19          15898 InstallPSCorePolicyDefinitions.ps1</span></span><br><span class=\"line\">  <span class=\"comment\"># -a---           2021/3/10     1:07           9675 PowerShellCoreExecutionPolicy.adml</span></span><br><span class=\"line\">  <span class=\"comment\"># -a---           2021/3/10     1:07           6198 PowerShellCoreExecutionPolicy.admx</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Step 6.Windows PowerShell 和 PowerShell 7 记录事件来分隔事件日志</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PS C:\\Program Files\\PowerShell\\7&gt; Get-WinEvent -ListLog *PowerShell*</span><br><span class=\"line\">  <span class=\"comment\"># LogMode   MaximumSizeInBytes RecordCount LogName</span></span><br><span class=\"line\">  <span class=\"comment\"># -------   ------------------ ----------- -------</span></span><br><span class=\"line\">  <span class=\"comment\"># Circular            15728640        6082 Windows PowerShell</span></span><br><span class=\"line\">  <span class=\"comment\"># Circular            15728640         624 Microsoft-Windows-PowerShell/Operational</span></span><br><span class=\"line\">  <span class=\"comment\"># Retain            1048985600           0 Microsoft-Windows-PowerShell/Admin</span></span><br><span class=\"line\">  <span class=\"comment\"># Circular             1052672           0 Microsoft-Windows-PowerShell-DesiredStateConfiguration-FileDownloadManager/Op…</span></span><br></pre></td></tr></table></figure>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/1/20210325132619.png\" alt=\"WeiyiGeek.事件日志\" title=\"\" class=\"\">\n                <p>WeiyiGeek.事件日志</p>\n            </figure>\n</li>\n</ul>\n<ul>\n<li>Step 7.在 Microsoft 商店安装WindowsTerminal支持多种命令行执行使用</li>\n</ul>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/1/20210325133204.png\" alt=\"WeiyiGeek.WindowsTerminal\" title=\"\" class=\"\">\n                <p>WeiyiGeek.WindowsTerminal</p>\n            </figure>\n<ul>\n<li>Step 7.提升了使用 Visual Studio Code 的编辑体验<br>描述: 包含 PowerShell 扩展的 Visual Studio Code (VSCode) 是 PowerShell 7 支持的脚本环境</li>\n</ul>\n<p>Tips : 更新后的 PowerShell 扩展包括：</p>\n<ul>\n<li>新增了 ISE 兼容性模式</li>\n<li>集成控制台中的 PSReadLine，包括语法突出显示、多行编辑和退回搜索</li>\n<li>提升了稳定性和性能</li>\n<li>新增了 CodeLens 集成</li>\n<li>提升了路径自动完成</li>\n</ul>\n<p>Tips ： 若要更轻松地转换到 Visual Studio Code，请使用“命令面板”中的“启用 ISE 模式”功能即<code>请按 Ctrl+Shift+P 打开“命令面板”，键入“PowerShell”，然后选中“PowerShell:启用 ISE 模式”。</code></p>\n<p>Tips : 若要将布局设置为原始布局，请打开“命令面板”，然后选中“PowerShell:禁用 ISE 模式(还原为默认值)”。</p>\n<figure class=\"image-box\">\n                <img src=\"https://img.weiyigeek.top/2021/1/20210325133703.png\" alt=\"WeiyiGeek.VScode-PS\" title=\"\" class=\"\">\n                <p>WeiyiGeek.VScode-PS</p>\n            </figure>\n<hr>\n<h2 id=\"0x04-PS-运行模式\"><a href=\"#0x04-PS-运行模式\" class=\"headerlink\" title=\"0x04 PS 运行模式\"></a>0x04 PS 运行模式</h2><p>PS控制台有两种模式: </p>\n<ul>\n<li>Powershell标准模式(默认)：鼠标右击选择标记后才能实现复制和粘切功能。</li>\n<li>Powershell快速编辑模式：可以通过鼠标左键选择任意矩形区域内的文本，并且鼠标右击实现复制功能。</li>\n</ul>\n<p>Tips ：快速编辑模式和标准模式的切换可以通过<code>控制台标题栏-&gt;鼠标右击-&gt;属性-&gt;选项-&gt;编辑选项</code> 。</p>\n<BR/>\n\n<p><strong>PS快捷键:</strong><br>Powershell的快捷键和cmd以及linux中的shell 都比较像。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PgUp PgDn \t显示当前会话的第一个命令和最后一个命令</span><br><span class=\"line\">Enter \t执行当前命令</span><br><span class=\"line\">End \t将光标移至当前命令的末尾</span><br><span class=\"line\">Del \t从右开始删除输入的命令字符</span><br><span class=\"line\">Esc \t清空当前命令行 (V)</span><br><span class=\"line\">ALT+F7 \t清除命令的历史记录 (V)</span><br><span class=\"line\">F2 \t自动补充历史命令至指定字符(例如历史记录中存在 Get-Process，按F2，提示&quot;Enter char to copy up to&quot;，键入‘s’，自动补齐命令:Get-Proce) (V)</span><br><span class=\"line\">F4 \t删除命令行至光标右边指定字符处 (V)</span><br><span class=\"line\">F7 \t对话框显示命令行历史记录</span><br><span class=\"line\">F8 \t检索包含指定字符的命令行历史记录</span><br><span class=\"line\">F9 \t根据命令行的历史记录编号选择命令，历史记录编号可以通过F7查看</span><br><span class=\"line\">左&#x2F;右方向键 \t左右移动光标</span><br><span class=\"line\">上&#x2F;下方向键 \t切换命令行的历史记录</span><br><span class=\"line\">Home \t              光标移至命令行最左端 </span><br><span class=\"line\">Backspace \t      从右删除命令行字符</span><br><span class=\"line\">Ctrl+C \t          取消正在执行的命令</span><br><span class=\"line\">Ctrl+左&#x2F;右方向键 \t 在单词之间移动光标</span><br><span class=\"line\">Tab \t            自动补齐命令或者文件名</span><br><span class=\"line\">Ctrl+Home \t删除光标最左端的所有字符 (V)</span><br><span class=\"line\">Ctrl+end \t  删除光标最由端的所有字符 (V)</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h2 id=\"0x05-PowerShell命令\"><a href=\"#0x05-PowerShell命令\" class=\"headerlink\" title=\"0x05 PowerShell命令\"></a>0x05 PowerShell命令</h2><p><strong>参数说明:</strong><br>-NoExit : 让脚本处理完毕后进程不退出，停留在控制台界面上。<br>-Command : 指定PowerShell支持的命令行，将路径包在单引号中并前面加上调用操作符，这样便于处理脚本路径中包含空格。</p>\n<p>基础示例:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -1.指定运行的脚本并在执行完成后不退出。</span></span><br><span class=\"line\">powershell.exe -NoExit -Command <span class=\"string\">\"&amp; '.\\test.ps1'\"</span></span><br></pre></td></tr></table></figure></p>\n","comments":true,"excerpt":"[TOC]","categories":[{"name":"Development","path":"api/categories/Development.json"}],"tags":[{"name":"Powershell","path":"api/tags/Powershell.json"},{"name":"pwsh","path":"api/tags/pwsh.json"}]}